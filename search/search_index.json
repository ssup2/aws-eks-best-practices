{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Introduction \u00b6 Welcome to the EKS Best Practices Guides. The primary goal of this project is to offer a set of best practices for day 2 operations for Amazon EKS. We elected to publish this guidance to GitHub so we could iterate quickly, provide timely and effective recommendations for variety of concerns, and easily incorporate suggestions from the broader community. We currently have published guides for the following topics: Best Practices for Security Best Practices for Reliability Best Practices for Cluster Autoscaling: karpenter , cluster-autoscaler Best Practices for Running Windows Containers Best Practices for Networking Best Practices for Scalability Best Practices for Cluster Upgrades We also open sourced a Python based CLI (Command Line Interface) called hardeneks to check some of the recommendations from this guide. In the future we will be publishing best practices guidance for performance, cost optimization, and operational excellence. Related guides \u00b6 In addition to the EKS User Guide , AWS has published several other guides that may help you with your implementation of EKS. EMR Containers Best Practices Guides Data on EKS AWS Observability Best Practices Amazon EKS Blueprints for Terraform Amazon EKS Blueprints Quick Start Contributing \u00b6 We encourage you to contribute to these guides. If you have implemented a practice that has proven to be effective, please share it with us by opening an issue or a pull request. Similarly, if you discover an error or flaw in the guidance we've already published, please submit a PR to correct it. The guidelines for submitting PRs can be found in our Contributing Guidelines .","title":"Introduction"},{"location":"#introduction","text":"Welcome to the EKS Best Practices Guides. The primary goal of this project is to offer a set of best practices for day 2 operations for Amazon EKS. We elected to publish this guidance to GitHub so we could iterate quickly, provide timely and effective recommendations for variety of concerns, and easily incorporate suggestions from the broader community. We currently have published guides for the following topics: Best Practices for Security Best Practices for Reliability Best Practices for Cluster Autoscaling: karpenter , cluster-autoscaler Best Practices for Running Windows Containers Best Practices for Networking Best Practices for Scalability Best Practices for Cluster Upgrades We also open sourced a Python based CLI (Command Line Interface) called hardeneks to check some of the recommendations from this guide. In the future we will be publishing best practices guidance for performance, cost optimization, and operational excellence.","title":"Introduction"},{"location":"#related-guides","text":"In addition to the EKS User Guide , AWS has published several other guides that may help you with your implementation of EKS. EMR Containers Best Practices Guides Data on EKS AWS Observability Best Practices Amazon EKS Blueprints for Terraform Amazon EKS Blueprints Quick Start","title":"Related guides"},{"location":"#contributing","text":"We encourage you to contribute to these guides. If you have implemented a practice that has proven to be effective, please share it with us by opening an issue or a pull request. Similarly, if you discover an error or flaw in the guidance we've already published, please submit a PR to correct it. The guidelines for submitting PRs can be found in our Contributing Guidelines .","title":"Contributing"},{"location":"index.kr/","text":"{'name': 'English', 'build': True} \uc18c\uac1c \u00b6 EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc758 \uc8fc\uc694 \ubaa9\ud45c\ub294 Amazon EKS\uc758 2\uc77c\ucc28 \uc791\uc5c5\uc5d0 \ub300\ud55c \uc77c\ub828\uc758 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc774 \uc9c0\uce68\uc744 GitHub\uc5d0 \uac8c\uc2dc\ud558\uae30\ub85c \uacb0\uc815\ud558\uc5ec \uc2e0\uc18d\ud558\uac8c \ubc18\ubcf5\ud558\uace0, \ub2e4\uc591\ud55c \ubb38\uc81c\uc5d0 \ub300\ud574 \uc2dc\uae30 \uc801\uc808\ud558\uace0 \ud6a8\uacfc\uc801\uc778 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud558\uace0, \ub354 \uad11\ubc94\uc704\ud55c \ucee4\ubba4\ub2c8\ud2f0\uc758 \uc81c\uc548\uc744 \uc27d\uac8c \ud1b5\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \ub2e4\uc74c \uc8fc\uc81c\uc5d0 \ub300\ud55c \uac00\uc774\ub4dc\ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \uc2e0\ub8b0\uc131 \ubaa8\ubc94 \uc0ac\ub840 \ud074\ub7ec\uc2a4\ud130 \uc790\ub3d9 \ud655\uc7a5 \ubaa8\ubc94 \uc0ac\ub840: karpenter , cluster-autoscaler Windows \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 \ubaa8\ubc94 \uc0ac\ub840 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ubc94 \uc0ac\ub840 \ud5a5\ud6c4 \uc131\ub2a5, \ube44\uc6a9 \ucd5c\uc801\ud654 \ubc0f \uc6b4\uc601 \uc6b0\uc218\uc131\uc5d0 \ub300\ud55c \ubaa8\ubc94 \uc0ac\ub840 \uc9c0\uce68\uc744 \uac8c\uc2dc\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. \uae30\uc5ec \u00b6 \uc774 \uac00\uc774\ub4dc\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud6a8\uacfc\uc801\uc778 \uac83\uc73c\ub85c \uc785\uc99d\ub41c \uc0ac\ub840\ub97c \uad6c\ud604\ud55c \uacbd\uc6b0 \uc774\uc288 \ub610\ub294 \ud480 \uc694\uccad\uc744 \uc5f4\uc5b4 \uacf5\uc720\ud574 \uc8fc\uc138\uc694. \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774\ubbf8 \uac8c\uc2dc\ud55c \uc9c0\uce68\uc5d0\uc11c \uc624\ub958\ub098 \uacb0\ud568\uc744 \ubc1c\uacac\ud55c \uacbd\uc6b0 PR\uc744 \uc81c\ucd9c\ud558\uc5ec \uc218\uc815\ud558\uc2ed\uc2dc\uc624.","title":"\uc18c\uac1c"},{"location":"index.kr/#_1","text":"EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc758 \uc8fc\uc694 \ubaa9\ud45c\ub294 Amazon EKS\uc758 2\uc77c\ucc28 \uc791\uc5c5\uc5d0 \ub300\ud55c \uc77c\ub828\uc758 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc81c\uacf5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \uc774 \uc9c0\uce68\uc744 GitHub\uc5d0 \uac8c\uc2dc\ud558\uae30\ub85c \uacb0\uc815\ud558\uc5ec \uc2e0\uc18d\ud558\uac8c \ubc18\ubcf5\ud558\uace0, \ub2e4\uc591\ud55c \ubb38\uc81c\uc5d0 \ub300\ud574 \uc2dc\uae30 \uc801\uc808\ud558\uace0 \ud6a8\uacfc\uc801\uc778 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud558\uace0, \ub354 \uad11\ubc94\uc704\ud55c \ucee4\ubba4\ub2c8\ud2f0\uc758 \uc81c\uc548\uc744 \uc27d\uac8c \ud1b5\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \ub2e4\uc74c \uc8fc\uc81c\uc5d0 \ub300\ud55c \uac00\uc774\ub4dc\ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \uc2e0\ub8b0\uc131 \ubaa8\ubc94 \uc0ac\ub840 \ud074\ub7ec\uc2a4\ud130 \uc790\ub3d9 \ud655\uc7a5 \ubaa8\ubc94 \uc0ac\ub840: karpenter , cluster-autoscaler Windows \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 \ubaa8\ubc94 \uc0ac\ub840 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ubc94 \uc0ac\ub840 \ud5a5\ud6c4 \uc131\ub2a5, \ube44\uc6a9 \ucd5c\uc801\ud654 \ubc0f \uc6b4\uc601 \uc6b0\uc218\uc131\uc5d0 \ub300\ud55c \ubaa8\ubc94 \uc0ac\ub840 \uc9c0\uce68\uc744 \uac8c\uc2dc\ud560 \uc608\uc815\uc785\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"index.kr/#_2","text":"\uc774 \uac00\uc774\ub4dc\uc5d0 \uae30\uc5ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud6a8\uacfc\uc801\uc778 \uac83\uc73c\ub85c \uc785\uc99d\ub41c \uc0ac\ub840\ub97c \uad6c\ud604\ud55c \uacbd\uc6b0 \uc774\uc288 \ub610\ub294 \ud480 \uc694\uccad\uc744 \uc5f4\uc5b4 \uacf5\uc720\ud574 \uc8fc\uc138\uc694. \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774\ubbf8 \uac8c\uc2dc\ud55c \uc9c0\uce68\uc5d0\uc11c \uc624\ub958\ub098 \uacb0\ud568\uc744 \ubc1c\uacac\ud55c \uacbd\uc6b0 PR\uc744 \uc81c\ucd9c\ud558\uc5ec \uc218\uc815\ud558\uc2ed\uc2dc\uc624.","title":"\uae30\uc5ec"},{"location":"cluster-autoscaling/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Kubernetes Cluster Autoscaler \u00b6 Overview \u00b6 The Kubernetes Cluster Autoscaler is a popular Cluster Autoscaling solution maintained by SIG Autoscaling . It is responsible for ensuring that your cluster has enough nodes to schedule your pods without wasting resources. It watches for pods that fail to schedule and for nodes that are underutilized. It then simulates the addition or removal of nodes before applying the change to your cluster. The AWS Cloud Provider implementation within Cluster Autoscaler controls the .DesiredReplicas field of your EC2 Auto Scaling Groups. This guide will provide a mental model for configuring the Cluster Autoscaler and choosing the best set of tradeoffs to meet your organization\u2019s requirements. While there is no single best configuration, there are a set of configuration options that enable you to trade off performance, scalability, cost, and availability. Additionally, this guide will provide tips and best practices for optimizing your configuration for AWS. Glossary \u00b6 The following terminology will be used frequently throughout this document. These terms can have broad meaning, but are limited to the definitions below for the purposes of this document. Scalability refers to how well the Cluster Autoscaler performs as your Kubernetes Cluster increases in number of pods and nodes. As scalability limits are reached, the Cluster Autoscaler\u2019s performance and functionality degrades. As the Cluster Autoscaler exceeds its scalability limits, it may no longer add or remove nodes in your cluster. Performance refers to how quickly the Cluster Autoscaler is able to make and execute scaling decisions. A perfectly performing Cluster Autoscaler would instantly make a decision and trigger a scaling action in response to stimuli, such as a pod becoming unschedulable. Availability means that pods can be scheduled quickly and without disruption. This includes when newly created pods need to be scheduled and when a scaled down node terminates any remaining pods scheduled to it. Cost is determined by the decision behind scale out and scale in events. Resources are wasted if an existing node is underutilized or a new node is added that is too large for incoming pods. Depending on the use case, there can be costs associated with prematurely terminating pods due to an aggressive scale down decision. Node Groups are an abstract Kubernetes concept for a group of nodes within a cluster. It is not a true Kubernetes resource, but exists as an abstraction in the Cluster Autoscaler, Cluster API, and other components. Nodes within a Node Group share properties like labels and taints, but may consist of multiple Availability Zones or Instance Types. EC2 Auto Scaling Groups can be used as an implementation of Node Groups on EC2. EC2 Auto Scaling Groups are configured to launch instances that automatically join their Kubernetes Clusters and apply labels and taints to their corresponding Node resource in the Kubernetes API. EC2 Managed Node Groups are another implementation of Node Groups on EC2. They abstract away the complexity manually configuring EC2 Autoscaling Scaling Groups and provide additional management features like node version upgrade and graceful node termination. Operating the Cluster Autoscaler \u00b6 The Cluster Autoscaler is typically installed as a Deployment in your cluster. It uses leader election to ensure high availability, but work is done by a single replica at a time. It is not horizontally scalable. For basic setups, the default it should work out of the box using the provided installation instructions , but there are a few things to keep in mind. Ensure that: The Cluster Autoscaler\u2019s version matches the Cluster\u2019s Version. Cross version compatibility is not tested or supported . Auto Discovery is enabled, unless you have specific advanced use cases that prevent use of this mode. Employ least privileged access to the IAM role \u00b6 When the Auto Discovery is used, we strongly recommend that you employ least privelege access by limiting Actions autoscaling:SetDesiredCapacity and autoscaling:TerminateInstanceInAutoScalingGroup to the Auto Scaling groups that are scoped to the current cluster. This will prevents a Cluster Autoscaler running in one cluster from modifying nodegroups in a different cluster even if the --node-group-auto-discovery argument wasnt scoped down to the nodegroups of the cluster using tags (for example k8s.io/cluster-autoscaler/<cluster-name> ). { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:SetDesiredCapacity\" , \"autoscaling:TerminateInstanceInAutoScalingGroup\" ], \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:ResourceTag/k8s.io/cluster-autoscaler/enabled\" : \"true\" , \"aws:ResourceTag/k8s.io/cluster-autoscaler/<my-cluster>\" : \"owned\" } } }, { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:DescribeAutoScalingInstances\" , \"autoscaling:DescribeAutoScalingGroups\" , \"autoscaling:DescribeScalingActivities\" , \"ec2:DescribeLaunchTemplateVersions\" , \"autoscaling:DescribeTags\" , \"autoscaling:DescribeLaunchConfigurations\" , \"ec2:DescribeInstanceTypes\" ], \"Resource\" : \"*\" } ] } Configuring your Node Groups \u00b6 Effective autoscaling starts with correctly configuring a set of Node Groups for your cluster. Selecting the right set of Node Groups is key to maximizing availability and reducing cost across your workloads. AWS implements Node Groups using EC2 Auto Scaling Groups, which are flexible to a large number of use cases. However, the Cluster Autoscaler makes some assumptions about your Node Groups. Keeping your EC2 Auto Scaling Group configurations consistent with these assumptions will minimize undesired behavior. Ensure that: Each Node in a Node Group has identical scheduling properties, such as Labels, Taints, and Resources. For MixedInstancePolicies, the Instance Types must be of the same shape for CPU, Memory, and GPU The first Instance Type specified in the policy will be used to simulate scheduling. If your policy has additional Instance Types with more resources, resources may be wasted after scale out. If your policy has additional Instance Types with less resources, pods may fail to schedule on the instances. Node Groups with many nodes are preferred over many Node Groups with fewer nodes. This will have the biggest impact on scalability. Wherever possible, prefer EC2 features when both systems provide support (e.g. Regions, MixedInstancePolicy) Note: We recommend using EKS Managed Node Groups . Managed Node Groups come with powerful management features, including features for Cluster Autoscaler like automatic EC2 Auto Scaling Group discovery and graceful node termination. Optimizing for Performance and Scalability \u00b6 Understanding the autoscaling algorithm\u2019s runtime complexity will help you tune the Cluster Autoscaler to continue operating smoothly in large clusters with greater than 1,000 nodes . The primary knobs for tuning scalability of the Cluster Autoscaler are the resources provided to the process, the scan interval of the algorithm, and the number of Node Groups in the cluster. There are other factors involved in the true runtime complexity of this algorithm, such as scheduling plugin complexity and number of pods. These are considered to be unconfigurable parameters as they are natural to the cluster\u2019s workload and cannot easily be tuned. The Cluster Autoscaler loads the entire cluster\u2019s state into memory, including Pods, Nodes, and Node Groups. On each scan interval, the algorithm identifies unschedulable pods and simulates scheduling for each Node Group. Tuning these factors come with different tradeoffs which should be carefully considered for your use case. Vertically Autoscaling the Cluster Autoscaler \u00b6 The simplest way to scale the Cluster Autoscaler to larger clusters is to increase the resource requests for its deployment. Both memory and CPU should be increased for large clusters, though this varies significantly with cluster size. The autoscaling algorithm stores all pods and nodes in memory, which can result in a memory footprint larger than a gigabyte in some cases. Increasing resources is typically done manually. If you find that constant resource tuning is creating an operational burden, consider using the Addon Resizer or Vertical Pod Autoscaler . Reducing the number of Node Groups \u00b6 Minimizing the number of node groups is one way to ensure that the Cluster Autoscaler will continue to perform well on large clusters. This may be challenging for some organizations who structure their node groups per team or per application. While this is fully supported by the Kubernetes API, this is considered to be a Cluster Autoscaler anti-pattern with repercussions for scalability. There are many reasons to use multiple node groups (e.g. Spot or GPUs), but in many cases there are alternative designs that achieve the same effect while using a small number of groups. Ensure that: Pod isolation is done using Namespaces rather than Node Groups. This may not be possible in low-trust multi-tenant clusters. Pod ResourceRequests and ResourceLimits are properly set to avoid resource contention. Larger instance types will result in more optimal bin packing and reduced system pod overhead. NodeTaints or NodeSelectors are used to schedule pods as the exception, not as the rule. Regional resources are defined as a single EC2 Auto Scaling Group with multiple Availability Zones. Reducing the Scan Interval \u00b6 A low scan interval (e.g. 10 seconds) will ensure that the Cluster Autoscaler responds as quickly as possible when pods become unschedulable. However, each scan results in many API calls to the Kubernetes API and EC2 Auto Scaling Group or EKS Managed Node Group APIs. These API calls can result in rate limiting or even service unavailability for your Kubernetes Control Plane. The default scan interval is 10 seconds, but on AWS, launching a node takes significantly longer to launch a new instance. This means that it\u2019s possible to increase the interval without significantly increasing overall scale up time. For example, if it takes 2 minutes to launch a node, changing the interval to 1 minute will result a tradeoff of 6x reduced API calls for 38% slower scale ups. Sharding Across Node Groups \u00b6 The Cluster Autoscaler can be configured to operate on a specific set of Node Groups. Using this functionality, it\u2019s possible to deploy multiple instances of the Cluster Autoscaler, each configured to operate on a different set of Node Groups. This strategy enables you use arbitrarily large numbers of Node Groups, trading cost for scalability. We only recommend using this as a last resort for improving performance. The Cluster Autoscaler was not originally designed for this configuration, so there are some side effects. Since the shards do not communicate, it\u2019s possible for multiple autoscalers to attempt to schedule an unschedulable pod. This can result in unnecessary scale out of multiple Node Groups. These extra nodes will scale back in after the scale-down-delay . metadata: name: cluster-autoscaler namespace: cluster-autoscaler-1 ... --nodes=1:10:k8s-worker-asg-1 --nodes=1:10:k8s-worker-asg-2 --- metadata: name: cluster-autoscaler namespace: cluster-autoscaler-2 ... --nodes=1:10:k8s-worker-asg-3 --nodes=1:10:k8s-worker-asg-4 Ensure that: Each shard is configured to point to a unique set of EC2 Auto Scaling Groups Each shard is deployed to a separate namespace to avoid leader election conflicts Optimizing for Cost and Availability \u00b6 Spot Instances \u00b6 You can use Spot Instances in your node groups and save up to 90% off the on-demand price, with the trade-off the Spot Instances can be interrupted at any time when EC2 needs the capacity back. Insufficient Capacity Errors will occur when your EC2 Auto Scaling group cannot scale up due to lack of available capacity. Maximizing diversity by selecting many instance families can increase your chance of achieving your desired scale by tapping into many Spot capacity pools, and decrease the impact of Spot Instance interruptions on your cluster availability. Mixed Instance Policies with Spot Instances are a great way to increase diversity without increasing the number of node groups. Keep in mind, if you need guaranteed resources, use On-Demand Instances instead of Spot Instances. It\u2019s critical that all Instance Types have similar resource capacity when configuring Mixed Instance Policies. The autoscaler\u2019s scheduling simulator uses the first InstanceType in the MixedInstancePolicy. If subsequent Instance Types are larger, resources may be wasted after a scale up. If smaller, your pods may fail to schedule on the new instances due to insufficient capacity. For example, M4, M5, M5a, and M5n instances all have similar amounts of CPU and Memory and are great candidates for a MixedInstancePolicy. The EC2 Instance Selector tool can help you identify similar instance types. It's recommended to isolate On-Demand and Spot capacity into separate EC2 Auto Scaling groups. This is preferred over using a base capacity strategy because the scheduling properties are fundamentally different. Since Spot Instances be interrupted at any time (when EC2 needs the capacity back), users will often taint their preemptable nodes, requiring an explicit pod toleration to the preemption behavior. These taints result in different scheduling properties for the nodes, so they should be separated into multiple EC2 Auto Scaling Groups. The Cluster Autoscaler has a concept of Expanders , which provide different strategies for selecting which Node Group to scale. The strategy --expander=least-waste is a good general purpose default, and if you're going to use multiple node groups for Spot Instance diversification (as described in the image above), it could help further cost-optimize the node groups by scaling the group which would be best utilized after the scaling activity. Prioritizing a node group / ASG \u00b6 You may also configure priority based autoscaling by using the Priority expander. --expander=priority enables your cluster to prioritize a node group / ASG, and if it is unable to scale for any reason, it will choose the next node group in the prioritized list. This is useful in situations where, for example, you want to use P3 instance types because their GPU provides optimal performance for your workload, but as a second option you can also use P2 instance types. apiVersion: v1 kind: ConfigMap metadata: name: cluster-autoscaler-priority-expander namespace: kube-system data: priorities: |- 10: - .*p2-node-group.* 50: - .*p3-node-group.* Cluster Autoscaler will try to scale up the EC2 Auto Scaling group matching the name p3-node-group . If this operation does not succeed within --max-node-provision-time , it will attempt to scale an EC2 Auto Scaling group matching the name p2-node-group . This value defaults to 15 minutes and can be reduced for more responsive node group selection, though if the value is too low, it can cause unnecessary scale outs. Overprovisioning \u00b6 The Cluster Autoscaler minimizes costs by ensuring that nodes are only added to the cluster when needed and are removed when unused. This significantly impacts deployment latency because many pods will be forced to wait for a node scale up before they can be scheduled. Nodes can take multiple minutes to become available, which can increase pod scheduling latency by an order of magnitude. This can be mitigated using overprovisioning , which trades cost for scheduling latency. Overprovisioning is implemented using temporary pods with negative priority, which occupy space in the cluster. When newly created pods are unschedulable and have higher priority, the temporary pods will be preempted to make room. The temporary pods then become unschedulable, triggering the Cluster Autoscaler to scale out new overprovisioned nodes. There are other less obvious benefits to overprovisioning. Without overprovisioning, one of the side effects of a highly utilized cluster is that pods will make less optimal scheduling decisions using the preferredDuringSchedulingIgnoredDuringExecution rule of Pod or Node Affinity. A common use case for this is to separate pods for a highly available application across availability zones using AntiAffinity. Overprovisioning can significantly increase the chance that a node of the correct zone is available. The amount of overprovisioned capacity is a careful business decision for your organization. At its core, it\u2019s a tradeoff between performance and cost. One way to make this decision is to determine your average scale up frequency and divide it by the amount of time it takes to scale up a new node. For example, if on average you require a new node every 30 seconds and EC2 takes 30 seconds to provision a new node, a single node of overprovisioning will ensure that there\u2019s always an extra node available, reducing scheduling latency by 30 seconds at the cost of a single additional EC2 Instance. To improve zonal scheduling decisions, overprovision a number of nodes equal to the number of availability zones in your EC2 Auto Scaling Group to ensure that the scheduler can select the best zone for incoming pods. Prevent Scale Down Eviction \u00b6 Some workloads are expensive to evict. Big data analysis, machine learning tasks, and test runners will eventually complete, but must be restarted if interrupted. The Cluster Autoscaler will attempt to scale down any node under the scale-down-utilization-threshold, which will interrupt any remaining pods on the node. This can be prevented by ensuring that pods that are expensive to evict are protected by a label recognized by the Cluster Autoscaler. Ensure that: Expensive to evict pods have the annotation cluster-autoscaler.kubernetes.io/safe-to-evict=false Advanced Use Cases \u00b6 EBS Volumes \u00b6 Persistent storage is critical for building stateful applications, such as database or distributed caches. EBS Volumes enable this use case on Kubernetes, but are limited to a specific zone. These applications can be highly available if sharded across multiple AZs using a separate EBS Volume for each AZ. The Cluster Autoscaler can then balance the scaling of the EC2 Autoscaling Groups. Ensure that: Node group balancing is enabled by setting balance-similar-node-groups=true . Node Groups are configured with identical settings except for different availability zones and EBS Volumes. Co-Scheduling \u00b6 Machine learning distributed training jobs benefit significantly from the minimized latency of same-zone node configurations. These workloads deploy multiple pods to a specific zone. This can be achieved by setting Pod Affinity for all co-scheduled pods or Node Affinity using topologyKey: failure-domain.beta.kubernetes.io/zone . The Cluster Autoscaler will then scale out a specific zone to match demands. You may wish to allocate multiple EC2 Auto Scaling Groups, one per availability zone to enable failover for the entire co-scheduled workload. Ensure that: Node group balancing is enabled by setting balance-similar-node-groups=false Node Affinity and/or Pod Preemption is used when clusters include both Regional and Zonal Node Groups. Use Node Affinity to force or encourage regional pods to avoid zonal Node Groups, and vice versa. If zonal pods schedule onto regional node groups, this will result in imbalanced capacity for your regional pods. If your zonal workloads can tolerate disruption and relocation, configure Pod Preemption to enable regionally scaled pods to force preemption and rescheduling on a less contested zone. Accelerators \u00b6 Some clusters take advantage of specialized hardware accelerators such as GPU. When scaling out, the accelerator device plugin can take several minutes to advertise the resource to the cluster. The Cluster Autoscaler has simulated that this node will have the accelerator, but until the accelerator becomes ready and updates the node\u2019s available resources, pending pods can not be scheduled on the node. This can result in repeated unnecessary scale out . Additionally, nodes with accelerators and high CPU or Memory utilization will not be considered for scale down, even if the accelerator is unused. This behavior can be expensive due to the relative cost of accelerators. Instead, the Cluster Autoscaler can apply special rules to consider nodes for scale down if they have unoccupied accelerators. To ensure the correct behavior for these cases, you can configure the kubelet on your accelerator nodes to label the node before it joins the cluster. The Cluster Autoscaler will use this label selector to trigger the accelerator optimized behavior. Ensure that: The Kubelet for GPU nodes is configured with --node-labels k8s.amazonaws.com/accelerator=$ACCELERATOR_TYPE Nodes with Accelerators adhere to the identical scheduling properties rule noted above. Scaling from 0 \u00b6 Cluster Autoscaler is capable of scaling Node Groups to and from zero, which can yield significant cost savings. It detects the CPU, memory, and GPU resources of an Auto Scaling Group by inspecting the InstanceType specified in its LaunchConfiguration or LaunchTemplate. Some pods require additional resources like WindowsENI or PrivateIPv4Address or specific NodeSelectors or Taints which cannot be discovered from the LaunchConfiguration. The Cluster Autoscaler can account for these factors by discovering them from tags on the EC2 Auto Scaling Group. For example: Key: k8s.io/cluster-autoscaler/node-template/resources/$RESOURCE_NAME Value: 5 Key: k8s.io/cluster-autoscaler/node-template/label/$LABEL_KEY Value: $LABEL_VALUE Key: k8s.io/cluster-autoscaler/node-template/taint/$TAINT_KEY Value: NoSchedule Note: Keep in mind, when scaling to zero your capacity is returned to EC2 and may be unavailable in the future. Additional Parameters \u00b6 There are many configuration options that can be used to tune the behavior and performance of the Cluster Autoscaler. A complete list of parameters is available on Github . Parameter Description Default scan-interval How often cluster is reevaluated for scale up or down 10 seconds max-empty-bulk-delete Maximum number of empty nodes that can be deleted at the same time. 10 scale-down-delay-after-add How long after scale up that scale down evaluation resumes 10 minutes scale-down-delay-after-delete How long after node deletion that scale down evaluation resumes, defaults to scan-interval scan-interval scale-down-delay-after-failure How long after scale down failure that scale down evaluation resumes 3 minutes scale-down-unneeded-time How long a node should be unneeded before it is eligible for scale down 10 minutes scale-down-unready-time How long an unready node should be unneeded before it is eligible for scale down 20 minutes scale-down-utilization-threshold Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down 0.5 scale-down-non-empty-candidates-count Maximum number of non empty nodes considered in one iteration as candidates for scale down with drain. Lower value means better CA responsiveness but possible slower scale down latency. Higher value can affect CA performance with big clusters (hundreds of nodes). Set to non positive value to turn this heuristic off - CA will not limit the number of nodes it considers.\u201c 30 scale-down-candidates-pool-ratio A ratio of nodes that are considered as additional non empty candidates for scale down when some candidates from previous iteration are no longer valid. Lower value means better CA responsiveness but possible slower scale down latency. Higher value can affect CA performance with big clusters (hundreds of nodes). Set to 1.0 to turn this heuristics off - CA will take all nodes as additional candidates. 0.1 scale-down-candidates-pool-min-count Minimum number of nodes that are considered as additional non empty candidates for scale down when some candidates from previous iteration are no longer valid. When calculating the pool size for additional candidates we take max(#nodes * scale-down-candidates-pool-ratio, scale-down-candidates-pool-min-count) 50 Additional Resources \u00b6 This page contains a list of Cluster Autoscaler presentations and demos. If you'd like to add a presentation or demo here, please send a pull request. Presentation/Demo Presenters Autoscaling and Cost Optimization on Kubernetes: From 0 to 100 Guy Templeton, Skyscanner & Jiaxin Shan, Amazon SIG-Autoscaling Deep Dive Maciek Pytel & Marcin Wielgus References \u00b6 https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md https://github.com/aws/amazon-ec2-instance-selector https://github.com/aws/aws-node-termination-handler","title":"Cluster-Autoscaler ({'name': 'English', 'build': True})"},{"location":"cluster-autoscaling/#kubernetes-cluster-autoscaler","text":"","title":"Kubernetes Cluster Autoscaler"},{"location":"cluster-autoscaling/#overview","text":"The Kubernetes Cluster Autoscaler is a popular Cluster Autoscaling solution maintained by SIG Autoscaling . It is responsible for ensuring that your cluster has enough nodes to schedule your pods without wasting resources. It watches for pods that fail to schedule and for nodes that are underutilized. It then simulates the addition or removal of nodes before applying the change to your cluster. The AWS Cloud Provider implementation within Cluster Autoscaler controls the .DesiredReplicas field of your EC2 Auto Scaling Groups. This guide will provide a mental model for configuring the Cluster Autoscaler and choosing the best set of tradeoffs to meet your organization\u2019s requirements. While there is no single best configuration, there are a set of configuration options that enable you to trade off performance, scalability, cost, and availability. Additionally, this guide will provide tips and best practices for optimizing your configuration for AWS.","title":"Overview"},{"location":"cluster-autoscaling/#glossary","text":"The following terminology will be used frequently throughout this document. These terms can have broad meaning, but are limited to the definitions below for the purposes of this document. Scalability refers to how well the Cluster Autoscaler performs as your Kubernetes Cluster increases in number of pods and nodes. As scalability limits are reached, the Cluster Autoscaler\u2019s performance and functionality degrades. As the Cluster Autoscaler exceeds its scalability limits, it may no longer add or remove nodes in your cluster. Performance refers to how quickly the Cluster Autoscaler is able to make and execute scaling decisions. A perfectly performing Cluster Autoscaler would instantly make a decision and trigger a scaling action in response to stimuli, such as a pod becoming unschedulable. Availability means that pods can be scheduled quickly and without disruption. This includes when newly created pods need to be scheduled and when a scaled down node terminates any remaining pods scheduled to it. Cost is determined by the decision behind scale out and scale in events. Resources are wasted if an existing node is underutilized or a new node is added that is too large for incoming pods. Depending on the use case, there can be costs associated with prematurely terminating pods due to an aggressive scale down decision. Node Groups are an abstract Kubernetes concept for a group of nodes within a cluster. It is not a true Kubernetes resource, but exists as an abstraction in the Cluster Autoscaler, Cluster API, and other components. Nodes within a Node Group share properties like labels and taints, but may consist of multiple Availability Zones or Instance Types. EC2 Auto Scaling Groups can be used as an implementation of Node Groups on EC2. EC2 Auto Scaling Groups are configured to launch instances that automatically join their Kubernetes Clusters and apply labels and taints to their corresponding Node resource in the Kubernetes API. EC2 Managed Node Groups are another implementation of Node Groups on EC2. They abstract away the complexity manually configuring EC2 Autoscaling Scaling Groups and provide additional management features like node version upgrade and graceful node termination.","title":"Glossary"},{"location":"cluster-autoscaling/#operating-the-cluster-autoscaler","text":"The Cluster Autoscaler is typically installed as a Deployment in your cluster. It uses leader election to ensure high availability, but work is done by a single replica at a time. It is not horizontally scalable. For basic setups, the default it should work out of the box using the provided installation instructions , but there are a few things to keep in mind. Ensure that: The Cluster Autoscaler\u2019s version matches the Cluster\u2019s Version. Cross version compatibility is not tested or supported . Auto Discovery is enabled, unless you have specific advanced use cases that prevent use of this mode.","title":"Operating the Cluster Autoscaler"},{"location":"cluster-autoscaling/#employ-least-privileged-access-to-the-iam-role","text":"When the Auto Discovery is used, we strongly recommend that you employ least privelege access by limiting Actions autoscaling:SetDesiredCapacity and autoscaling:TerminateInstanceInAutoScalingGroup to the Auto Scaling groups that are scoped to the current cluster. This will prevents a Cluster Autoscaler running in one cluster from modifying nodegroups in a different cluster even if the --node-group-auto-discovery argument wasnt scoped down to the nodegroups of the cluster using tags (for example k8s.io/cluster-autoscaler/<cluster-name> ). { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:SetDesiredCapacity\" , \"autoscaling:TerminateInstanceInAutoScalingGroup\" ], \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:ResourceTag/k8s.io/cluster-autoscaler/enabled\" : \"true\" , \"aws:ResourceTag/k8s.io/cluster-autoscaler/<my-cluster>\" : \"owned\" } } }, { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:DescribeAutoScalingInstances\" , \"autoscaling:DescribeAutoScalingGroups\" , \"autoscaling:DescribeScalingActivities\" , \"ec2:DescribeLaunchTemplateVersions\" , \"autoscaling:DescribeTags\" , \"autoscaling:DescribeLaunchConfigurations\" , \"ec2:DescribeInstanceTypes\" ], \"Resource\" : \"*\" } ] }","title":"Employ least privileged access to the IAM role"},{"location":"cluster-autoscaling/#configuring-your-node-groups","text":"Effective autoscaling starts with correctly configuring a set of Node Groups for your cluster. Selecting the right set of Node Groups is key to maximizing availability and reducing cost across your workloads. AWS implements Node Groups using EC2 Auto Scaling Groups, which are flexible to a large number of use cases. However, the Cluster Autoscaler makes some assumptions about your Node Groups. Keeping your EC2 Auto Scaling Group configurations consistent with these assumptions will minimize undesired behavior. Ensure that: Each Node in a Node Group has identical scheduling properties, such as Labels, Taints, and Resources. For MixedInstancePolicies, the Instance Types must be of the same shape for CPU, Memory, and GPU The first Instance Type specified in the policy will be used to simulate scheduling. If your policy has additional Instance Types with more resources, resources may be wasted after scale out. If your policy has additional Instance Types with less resources, pods may fail to schedule on the instances. Node Groups with many nodes are preferred over many Node Groups with fewer nodes. This will have the biggest impact on scalability. Wherever possible, prefer EC2 features when both systems provide support (e.g. Regions, MixedInstancePolicy) Note: We recommend using EKS Managed Node Groups . Managed Node Groups come with powerful management features, including features for Cluster Autoscaler like automatic EC2 Auto Scaling Group discovery and graceful node termination.","title":"Configuring your Node Groups"},{"location":"cluster-autoscaling/#optimizing-for-performance-and-scalability","text":"Understanding the autoscaling algorithm\u2019s runtime complexity will help you tune the Cluster Autoscaler to continue operating smoothly in large clusters with greater than 1,000 nodes . The primary knobs for tuning scalability of the Cluster Autoscaler are the resources provided to the process, the scan interval of the algorithm, and the number of Node Groups in the cluster. There are other factors involved in the true runtime complexity of this algorithm, such as scheduling plugin complexity and number of pods. These are considered to be unconfigurable parameters as they are natural to the cluster\u2019s workload and cannot easily be tuned. The Cluster Autoscaler loads the entire cluster\u2019s state into memory, including Pods, Nodes, and Node Groups. On each scan interval, the algorithm identifies unschedulable pods and simulates scheduling for each Node Group. Tuning these factors come with different tradeoffs which should be carefully considered for your use case.","title":"Optimizing for Performance and Scalability"},{"location":"cluster-autoscaling/#vertically-autoscaling-the-cluster-autoscaler","text":"The simplest way to scale the Cluster Autoscaler to larger clusters is to increase the resource requests for its deployment. Both memory and CPU should be increased for large clusters, though this varies significantly with cluster size. The autoscaling algorithm stores all pods and nodes in memory, which can result in a memory footprint larger than a gigabyte in some cases. Increasing resources is typically done manually. If you find that constant resource tuning is creating an operational burden, consider using the Addon Resizer or Vertical Pod Autoscaler .","title":"Vertically Autoscaling the Cluster Autoscaler"},{"location":"cluster-autoscaling/#reducing-the-number-of-node-groups","text":"Minimizing the number of node groups is one way to ensure that the Cluster Autoscaler will continue to perform well on large clusters. This may be challenging for some organizations who structure their node groups per team or per application. While this is fully supported by the Kubernetes API, this is considered to be a Cluster Autoscaler anti-pattern with repercussions for scalability. There are many reasons to use multiple node groups (e.g. Spot or GPUs), but in many cases there are alternative designs that achieve the same effect while using a small number of groups. Ensure that: Pod isolation is done using Namespaces rather than Node Groups. This may not be possible in low-trust multi-tenant clusters. Pod ResourceRequests and ResourceLimits are properly set to avoid resource contention. Larger instance types will result in more optimal bin packing and reduced system pod overhead. NodeTaints or NodeSelectors are used to schedule pods as the exception, not as the rule. Regional resources are defined as a single EC2 Auto Scaling Group with multiple Availability Zones.","title":"Reducing the number of Node Groups"},{"location":"cluster-autoscaling/#reducing-the-scan-interval","text":"A low scan interval (e.g. 10 seconds) will ensure that the Cluster Autoscaler responds as quickly as possible when pods become unschedulable. However, each scan results in many API calls to the Kubernetes API and EC2 Auto Scaling Group or EKS Managed Node Group APIs. These API calls can result in rate limiting or even service unavailability for your Kubernetes Control Plane. The default scan interval is 10 seconds, but on AWS, launching a node takes significantly longer to launch a new instance. This means that it\u2019s possible to increase the interval without significantly increasing overall scale up time. For example, if it takes 2 minutes to launch a node, changing the interval to 1 minute will result a tradeoff of 6x reduced API calls for 38% slower scale ups.","title":"Reducing the Scan Interval"},{"location":"cluster-autoscaling/#sharding-across-node-groups","text":"The Cluster Autoscaler can be configured to operate on a specific set of Node Groups. Using this functionality, it\u2019s possible to deploy multiple instances of the Cluster Autoscaler, each configured to operate on a different set of Node Groups. This strategy enables you use arbitrarily large numbers of Node Groups, trading cost for scalability. We only recommend using this as a last resort for improving performance. The Cluster Autoscaler was not originally designed for this configuration, so there are some side effects. Since the shards do not communicate, it\u2019s possible for multiple autoscalers to attempt to schedule an unschedulable pod. This can result in unnecessary scale out of multiple Node Groups. These extra nodes will scale back in after the scale-down-delay . metadata: name: cluster-autoscaler namespace: cluster-autoscaler-1 ... --nodes=1:10:k8s-worker-asg-1 --nodes=1:10:k8s-worker-asg-2 --- metadata: name: cluster-autoscaler namespace: cluster-autoscaler-2 ... --nodes=1:10:k8s-worker-asg-3 --nodes=1:10:k8s-worker-asg-4 Ensure that: Each shard is configured to point to a unique set of EC2 Auto Scaling Groups Each shard is deployed to a separate namespace to avoid leader election conflicts","title":"Sharding Across Node Groups"},{"location":"cluster-autoscaling/#optimizing-for-cost-and-availability","text":"","title":"Optimizing for Cost and Availability"},{"location":"cluster-autoscaling/#spot-instances","text":"You can use Spot Instances in your node groups and save up to 90% off the on-demand price, with the trade-off the Spot Instances can be interrupted at any time when EC2 needs the capacity back. Insufficient Capacity Errors will occur when your EC2 Auto Scaling group cannot scale up due to lack of available capacity. Maximizing diversity by selecting many instance families can increase your chance of achieving your desired scale by tapping into many Spot capacity pools, and decrease the impact of Spot Instance interruptions on your cluster availability. Mixed Instance Policies with Spot Instances are a great way to increase diversity without increasing the number of node groups. Keep in mind, if you need guaranteed resources, use On-Demand Instances instead of Spot Instances. It\u2019s critical that all Instance Types have similar resource capacity when configuring Mixed Instance Policies. The autoscaler\u2019s scheduling simulator uses the first InstanceType in the MixedInstancePolicy. If subsequent Instance Types are larger, resources may be wasted after a scale up. If smaller, your pods may fail to schedule on the new instances due to insufficient capacity. For example, M4, M5, M5a, and M5n instances all have similar amounts of CPU and Memory and are great candidates for a MixedInstancePolicy. The EC2 Instance Selector tool can help you identify similar instance types. It's recommended to isolate On-Demand and Spot capacity into separate EC2 Auto Scaling groups. This is preferred over using a base capacity strategy because the scheduling properties are fundamentally different. Since Spot Instances be interrupted at any time (when EC2 needs the capacity back), users will often taint their preemptable nodes, requiring an explicit pod toleration to the preemption behavior. These taints result in different scheduling properties for the nodes, so they should be separated into multiple EC2 Auto Scaling Groups. The Cluster Autoscaler has a concept of Expanders , which provide different strategies for selecting which Node Group to scale. The strategy --expander=least-waste is a good general purpose default, and if you're going to use multiple node groups for Spot Instance diversification (as described in the image above), it could help further cost-optimize the node groups by scaling the group which would be best utilized after the scaling activity.","title":"Spot Instances"},{"location":"cluster-autoscaling/#prioritizing-a-node-group-asg","text":"You may also configure priority based autoscaling by using the Priority expander. --expander=priority enables your cluster to prioritize a node group / ASG, and if it is unable to scale for any reason, it will choose the next node group in the prioritized list. This is useful in situations where, for example, you want to use P3 instance types because their GPU provides optimal performance for your workload, but as a second option you can also use P2 instance types. apiVersion: v1 kind: ConfigMap metadata: name: cluster-autoscaler-priority-expander namespace: kube-system data: priorities: |- 10: - .*p2-node-group.* 50: - .*p3-node-group.* Cluster Autoscaler will try to scale up the EC2 Auto Scaling group matching the name p3-node-group . If this operation does not succeed within --max-node-provision-time , it will attempt to scale an EC2 Auto Scaling group matching the name p2-node-group . This value defaults to 15 minutes and can be reduced for more responsive node group selection, though if the value is too low, it can cause unnecessary scale outs.","title":"Prioritizing a node group / ASG"},{"location":"cluster-autoscaling/#overprovisioning","text":"The Cluster Autoscaler minimizes costs by ensuring that nodes are only added to the cluster when needed and are removed when unused. This significantly impacts deployment latency because many pods will be forced to wait for a node scale up before they can be scheduled. Nodes can take multiple minutes to become available, which can increase pod scheduling latency by an order of magnitude. This can be mitigated using overprovisioning , which trades cost for scheduling latency. Overprovisioning is implemented using temporary pods with negative priority, which occupy space in the cluster. When newly created pods are unschedulable and have higher priority, the temporary pods will be preempted to make room. The temporary pods then become unschedulable, triggering the Cluster Autoscaler to scale out new overprovisioned nodes. There are other less obvious benefits to overprovisioning. Without overprovisioning, one of the side effects of a highly utilized cluster is that pods will make less optimal scheduling decisions using the preferredDuringSchedulingIgnoredDuringExecution rule of Pod or Node Affinity. A common use case for this is to separate pods for a highly available application across availability zones using AntiAffinity. Overprovisioning can significantly increase the chance that a node of the correct zone is available. The amount of overprovisioned capacity is a careful business decision for your organization. At its core, it\u2019s a tradeoff between performance and cost. One way to make this decision is to determine your average scale up frequency and divide it by the amount of time it takes to scale up a new node. For example, if on average you require a new node every 30 seconds and EC2 takes 30 seconds to provision a new node, a single node of overprovisioning will ensure that there\u2019s always an extra node available, reducing scheduling latency by 30 seconds at the cost of a single additional EC2 Instance. To improve zonal scheduling decisions, overprovision a number of nodes equal to the number of availability zones in your EC2 Auto Scaling Group to ensure that the scheduler can select the best zone for incoming pods.","title":"Overprovisioning"},{"location":"cluster-autoscaling/#prevent-scale-down-eviction","text":"Some workloads are expensive to evict. Big data analysis, machine learning tasks, and test runners will eventually complete, but must be restarted if interrupted. The Cluster Autoscaler will attempt to scale down any node under the scale-down-utilization-threshold, which will interrupt any remaining pods on the node. This can be prevented by ensuring that pods that are expensive to evict are protected by a label recognized by the Cluster Autoscaler. Ensure that: Expensive to evict pods have the annotation cluster-autoscaler.kubernetes.io/safe-to-evict=false","title":"Prevent Scale Down Eviction"},{"location":"cluster-autoscaling/#advanced-use-cases","text":"","title":"Advanced Use Cases"},{"location":"cluster-autoscaling/#ebs-volumes","text":"Persistent storage is critical for building stateful applications, such as database or distributed caches. EBS Volumes enable this use case on Kubernetes, but are limited to a specific zone. These applications can be highly available if sharded across multiple AZs using a separate EBS Volume for each AZ. The Cluster Autoscaler can then balance the scaling of the EC2 Autoscaling Groups. Ensure that: Node group balancing is enabled by setting balance-similar-node-groups=true . Node Groups are configured with identical settings except for different availability zones and EBS Volumes.","title":"EBS Volumes"},{"location":"cluster-autoscaling/#co-scheduling","text":"Machine learning distributed training jobs benefit significantly from the minimized latency of same-zone node configurations. These workloads deploy multiple pods to a specific zone. This can be achieved by setting Pod Affinity for all co-scheduled pods or Node Affinity using topologyKey: failure-domain.beta.kubernetes.io/zone . The Cluster Autoscaler will then scale out a specific zone to match demands. You may wish to allocate multiple EC2 Auto Scaling Groups, one per availability zone to enable failover for the entire co-scheduled workload. Ensure that: Node group balancing is enabled by setting balance-similar-node-groups=false Node Affinity and/or Pod Preemption is used when clusters include both Regional and Zonal Node Groups. Use Node Affinity to force or encourage regional pods to avoid zonal Node Groups, and vice versa. If zonal pods schedule onto regional node groups, this will result in imbalanced capacity for your regional pods. If your zonal workloads can tolerate disruption and relocation, configure Pod Preemption to enable regionally scaled pods to force preemption and rescheduling on a less contested zone.","title":"Co-Scheduling"},{"location":"cluster-autoscaling/#accelerators","text":"Some clusters take advantage of specialized hardware accelerators such as GPU. When scaling out, the accelerator device plugin can take several minutes to advertise the resource to the cluster. The Cluster Autoscaler has simulated that this node will have the accelerator, but until the accelerator becomes ready and updates the node\u2019s available resources, pending pods can not be scheduled on the node. This can result in repeated unnecessary scale out . Additionally, nodes with accelerators and high CPU or Memory utilization will not be considered for scale down, even if the accelerator is unused. This behavior can be expensive due to the relative cost of accelerators. Instead, the Cluster Autoscaler can apply special rules to consider nodes for scale down if they have unoccupied accelerators. To ensure the correct behavior for these cases, you can configure the kubelet on your accelerator nodes to label the node before it joins the cluster. The Cluster Autoscaler will use this label selector to trigger the accelerator optimized behavior. Ensure that: The Kubelet for GPU nodes is configured with --node-labels k8s.amazonaws.com/accelerator=$ACCELERATOR_TYPE Nodes with Accelerators adhere to the identical scheduling properties rule noted above.","title":"Accelerators"},{"location":"cluster-autoscaling/#scaling-from-0","text":"Cluster Autoscaler is capable of scaling Node Groups to and from zero, which can yield significant cost savings. It detects the CPU, memory, and GPU resources of an Auto Scaling Group by inspecting the InstanceType specified in its LaunchConfiguration or LaunchTemplate. Some pods require additional resources like WindowsENI or PrivateIPv4Address or specific NodeSelectors or Taints which cannot be discovered from the LaunchConfiguration. The Cluster Autoscaler can account for these factors by discovering them from tags on the EC2 Auto Scaling Group. For example: Key: k8s.io/cluster-autoscaler/node-template/resources/$RESOURCE_NAME Value: 5 Key: k8s.io/cluster-autoscaler/node-template/label/$LABEL_KEY Value: $LABEL_VALUE Key: k8s.io/cluster-autoscaler/node-template/taint/$TAINT_KEY Value: NoSchedule Note: Keep in mind, when scaling to zero your capacity is returned to EC2 and may be unavailable in the future.","title":"Scaling from 0"},{"location":"cluster-autoscaling/#additional-parameters","text":"There are many configuration options that can be used to tune the behavior and performance of the Cluster Autoscaler. A complete list of parameters is available on Github . Parameter Description Default scan-interval How often cluster is reevaluated for scale up or down 10 seconds max-empty-bulk-delete Maximum number of empty nodes that can be deleted at the same time. 10 scale-down-delay-after-add How long after scale up that scale down evaluation resumes 10 minutes scale-down-delay-after-delete How long after node deletion that scale down evaluation resumes, defaults to scan-interval scan-interval scale-down-delay-after-failure How long after scale down failure that scale down evaluation resumes 3 minutes scale-down-unneeded-time How long a node should be unneeded before it is eligible for scale down 10 minutes scale-down-unready-time How long an unready node should be unneeded before it is eligible for scale down 20 minutes scale-down-utilization-threshold Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down 0.5 scale-down-non-empty-candidates-count Maximum number of non empty nodes considered in one iteration as candidates for scale down with drain. Lower value means better CA responsiveness but possible slower scale down latency. Higher value can affect CA performance with big clusters (hundreds of nodes). Set to non positive value to turn this heuristic off - CA will not limit the number of nodes it considers.\u201c 30 scale-down-candidates-pool-ratio A ratio of nodes that are considered as additional non empty candidates for scale down when some candidates from previous iteration are no longer valid. Lower value means better CA responsiveness but possible slower scale down latency. Higher value can affect CA performance with big clusters (hundreds of nodes). Set to 1.0 to turn this heuristics off - CA will take all nodes as additional candidates. 0.1 scale-down-candidates-pool-min-count Minimum number of nodes that are considered as additional non empty candidates for scale down when some candidates from previous iteration are no longer valid. When calculating the pool size for additional candidates we take max(#nodes * scale-down-candidates-pool-ratio, scale-down-candidates-pool-min-count) 50","title":"Additional Parameters"},{"location":"cluster-autoscaling/#additional-resources","text":"This page contains a list of Cluster Autoscaler presentations and demos. If you'd like to add a presentation or demo here, please send a pull request. Presentation/Demo Presenters Autoscaling and Cost Optimization on Kubernetes: From 0 to 100 Guy Templeton, Skyscanner & Jiaxin Shan, Amazon SIG-Autoscaling Deep Dive Maciek Pytel & Marcin Wielgus","title":"Additional Resources"},{"location":"cluster-autoscaling/#references","text":"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md https://github.com/aws/amazon-ec2-instance-selector https://github.com/aws/aws-node-termination-handler","title":"References"},{"location":"cluster-autoscaling/index.kr/","text":"{'name': 'English', 'build': True} \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \u00b6 Overview \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub294 SIG \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uc778\uae30 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc194\ub8e8\uc158\uc785\ub2c8\ub2e4.\uc774\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ub0ad\ube44\ud558\uc9c0 \uc54a\uace0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \ub178\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc2a4\ucf00\uc904\ub9c1\uc5d0 \uc2e4\ud328\ud55c \ud30c\ub4dc\uc640 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc\ub97c \uac10\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc \ucd94\uac00 \ub610\ub294 \uc81c\uac70\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub0b4\uc758 AWS \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790 \uad6c\ud604\uc740 EC2 Auto Scaling \uadf8\ub8f9\uc758 .desireReplicas \ud544\ub4dc\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. \uc774 \uc548\ub0b4\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \uad6c\uc131\ud558\uace0 \uc870\uc9c1\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc808\ucda9\uc548\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud55c \uba58\ud0c8 \ubaa8\ub378\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucd5c\uc0c1\uc758 \ub2e8\uc77c \uad6c\uc131\uc740 \uc5c6\uc9c0\ub9cc \uc131\ub2a5, \ud655\uc7a5\uc131, \ube44\uc6a9 \ubc0f \uac00\uc6a9\uc131\uc744 \uc808\ucda9\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc635\uc158 \uc9d1\ud569\uc774 \uc788\uc2b5\ub2c8\ub2e4.\ub610\ud55c \uc774 \uc548\ub0b4\uc11c\ub294 AWS \uad6c\uc131\uc744 \ucd5c\uc801\ud654\ud558\uae30 \uc704\ud55c \ud301\uacfc \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Glossary### \uc6a9\uc5b4\uc9d1 \u00b6 \ub2e4\uc74c \uc6a9\uc5b4\ub294 \uc774 \ubb38\uc11c \uc804\uccb4\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc6a9\uc5b4\ub294 \uad11\ubc94\uc704\ud55c \uc758\ubbf8\ub97c \uac00\uc9c8 \uc218 \uc788\uc9c0\ub9cc \uc774 \ubb38\uc11c\uc758 \ubaa9\uc801\uc0c1 \uc544\ub798 \uc815\uc758\ub85c\ub9cc \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud655\uc7a5\uc131 \uc740 Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\ub4dc \ubc0f \ub178\ub4dc \uc218\uac00 \uc99d\uac00\ud560 \ub54c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc5bc\ub9c8\ub098 \uc798 \uc791\ub3d9\ud558\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\ud655\uc7a5\uc131 \ud55c\uacc4\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc131\ub2a5\uacfc \uae30\ub2a5\uc774 \uc800\ud558\ub429\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ud655\uc7a5\uc131 \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 \ub354 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc131\ub2a5 \uc740 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uaddc\ubaa8 \uc870\uc815 \uacb0\uc815\uc744 \uc5bc\ub9c8\ub098 \ube68\ub9ac \ub0b4\ub9ac\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\uc644\ubcbd\ud558\uac8c \uc791\ub3d9\ud558\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub418\ub294 \ub4f1\uc758 \uc790\uadf9\uc5d0 \ub300\uc751\ud558\uc5ec \uc989\uc2dc \uacb0\uc815\uc744 \ub0b4\ub9ac\uace0 \uc2a4\ucf00\uc77c\ub9c1 \uc870\uce58\ub97c \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \uac00\uc6a9\uc131 \uc740 \ud30c\ub4dc\ub97c \uc911\ub2e8 \uc5c6\uc774 \uc2e0\uc18d\ud558\uac8c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub2e4\ub294 \ub73b\uc774\ub2e4.\uc5ec\uae30\uc5d0\ub294 \uc0c8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uc640 \ucd95\uc18c\ub41c \ub178\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub41c \ub098\uba38\uc9c0 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uacbd\uc6b0\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ube44\uc6a9 \uc740 \uc2a4\ucf00\uc77c \uc544\uc6c3 \ubc0f \uc2a4\ucf00\uc77c \uc778 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uacb0\uc815\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4.\uae30\uc874 \ub178\ub4dc\uc758 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uac70\ub098 \ub4e4\uc5b4\uc624\ub294 \ud30c\ub4dc\uc5d0 \ube44\ud574 \ub108\ubb34 \ud070 \uc0c8 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uba74 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub429\ub2c8\ub2e4.\uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \ub530\ub77c \uacf5\uaca9\uc801\uc778 \uaddc\ubaa8 \ucd95\uc18c \uacb0\uc815\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc\ub97c \uc870\uae30\uc5d0 \uc885\ub8cc\ud558\ub294 \ub370 \ub530\ub978 \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4. \ub178\ub4dc \uadf8\ub8f9 \uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \ucd94\uc0c1\uc801\uc778 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uac1c\ub150\uc785\ub2c8\ub2e4.\uc774\ub294 \uc9c4\uc815\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\ub294 \uc544\ub2c8\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec, \ud074\ub7ec\uc2a4\ud130 API \ubc0f \uae30\ud0c0 \uad6c\uc131 \uc694\uc18c\uc5d0 \ucd94\uc0c1\ud654\ub41c \ud615\ud0dc\ub85c \uc874\uc7ac\ud569\ub2c8\ub2e4.\ub178\ub4dc \uadf8\ub8f9 \ub0b4\uc758 \ub178\ub4dc\ub294 \ub808\uc774\ube14 \ubc0f \ud14c\uc778\ud2b8\uc640 \uac19\uc740 \uc18d\uc131\uc744 \uacf5\uc720\ud558\uc9c0\ub9cc \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc73c\ub85c \uad6c\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 Auto Scaling \uadf8\ub8f9 \uc740 EC2\uc758 \ub178\ub4dc \uadf8\ub8f9 \uad6c\ud604\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.EC2 Auto Scaling \uadf8\ub8f9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc790\ub3d9\uc73c\ub85c \uac00\uc785\ud558\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc758 \ud574\ub2f9 \ub178\ub4dc \ub9ac\uc18c\uc2a4\uc5d0 \ub808\uc774\ube14\uacfc \ud14c\uc778\ud2b8\ub97c \uc801\uc6a9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dc\uc791\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 EC2\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\ud604\ud55c \ub610 \ub2e4\ub978 \uc608\uc785\ub2c8\ub2e4.EC2 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc218\ub3d9\uc73c\ub85c \uad6c\uc131\ud558\ub294 \ubcf5\uc7a1\uc131\uc744 \uc5c6\uc560\uace0 \ub178\ub4dc \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \uc815\uc0c1\uc801\uc778 \ub178\ub4dc \uc885\ub8cc\uc640 \uac19\uc740 \ucd94\uac00 \uad00\ub9ac \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc6b4\uc601 \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ud615\ud0dc\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. \uace0\uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud574 \ub9ac\ub354\uc120\ucd9c \ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uc791\uc5c5\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ubcf5\uc81c\ubcf8\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4. \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc124\uc815\uc758 \uacbd\uc6b0 \uc81c\uacf5\ub41c \uc124\uce58\uc9c0\uce68 \uc744 \uc0ac\uc6a9\ud558\uba74 \uae30\ubcf8\uac12\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uc9c0\ub9cc \uba87 \uac00\uc9c0 \uc720\uc758\ud574\uc57c \ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc84\uc804\uc774 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4.\ubc84\uc804 \uac04 \ud638\ud658\uc131\uc740 \ud14c\uc2a4\ud2b8 \ub418\uc9c0 \uc54a\uac70\ub098 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \uc774 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\uac8c \ud558\ub294 \ud2b9\uc815 \uace0\uae09 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \uc5c6\ub294 \ud55c \uc790\ub3d9 \uac80\uc0c9 \uc774 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. IAM \uc5ed\ud560\uc5d0 \ub300\ud574 \uad8c\ud55c\uc774 \uac00\uc7a5 \uc801\uc740 \uc561\uc138\uc2a4 \uad8c\ud55c \uc0ac\uc6a9 \u00b6 Auto Discovery \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, autoscaling:SetDesiredCapacity \ubc0f autoscaling:TerminateInstanceInAutoScalingGroup \uc791\uc5c5\uc744 \ud604\uc7ac \ud074\ub7ec\uc2a4\ud130\ub85c \ubc94\uc704\uac00 \uc9c0\uc815\ub41c Auto Scaling \uadf8\ub8f9\uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 --node-group-auto-discovery \uc778\uc218\uac00 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9\uc73c\ub85c \ubc94\uc704\ub97c \uc881\ud788\uc9c0 \uc54a\uc558\ub354\ub77c\ub3c4 (\uc608: k8s.io/cluster-autoscaler/<cluster-name> ) \ud55c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ub2e4\ub978 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc218\uc815\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:SetDesiredCapacity\" , \"autoscaling:TerminateInstanceInAutoScalingGroup\" ], \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:ResourceTag/k8s.io/cluster-autoscaler/enabled\" : \"true\" , \"aws:ResourceTag/k8s.io/cluster-autoscaler/<my-cluster>\" : \"owned\" } } }, { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:DescribeAutoScalingInstances\" , \"autoscaling:DescribeAutoScalingGroups\" , \"autoscaling:DescribeScalingActivities\" , \"ec2:DescribeLaunchTemplateVersions\" , \"autoscaling:DescribeTags\" , \"autoscaling:DescribeLaunchConfigurations\" , \"ec2:DescribeInstanceTypes\" ], \"Resource\" : \"*\" } ] } \ub178\ub4dc \uadf8\ub8f9 \uad6c\uc131 \u00b6 \ud6a8\uacfc\uc801\uc778 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ud558\ub294 \uac83\uc5d0\uc11c \uc2dc\uc791\ub429\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc \uc804\ubc18\uc5d0\uc11c \uac00\uc6a9\uc131\uc744 \uadf9\ub300\ud654\ud558\uace0 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub824\uba74 \uc62c\ubc14\ub978 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \uc120\ud0dd\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. AWS\ub294 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \uc720\uc5f0\ud558\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4.\ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud574 \uba87 \uac00\uc9c0 \uac00\uc815\uc744 \ud569\ub2c8\ub2e4.EC2 Auto Scaling \uadf8\ub8f9 \uad6c\uc131\uc744 \uc774\ub7ec\ud55c \uac00\uc815\uacfc \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ud558\uba74 \uc6d0\uce58 \uc54a\ub294 \ub3d9\uc791\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc \uadf8\ub8f9\uc758 \uac01 \ub178\ub4dc\ub294 \ub808\uc774\ube14, \ud14c\uc778\ud2b8, \ub9ac\uc18c\uc2a4\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131\uc744 \uac00\uc9d1\ub2c8\ub2e4. \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc758 \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 CPU, \uba54\ubaa8\ub9ac \ubc0f GPU\uc758 \ud615\ud0dc\uac00 \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \uc9c0\uc815\ub41c \uccab \ubc88\uc9f8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \uc2a4\ucf00\uc904\ub9c1\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \ub354 \ub9ce\uc740 \ub9ac\uc18c\uc2a4\uac00 \ud3ec\ud568\ub41c \ucd94\uac00 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc788\ub294 \uacbd\uc6b0 \ud655\uc7a5 \ud6c4 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \ub9ac\uc18c\uc2a4\uac00 \uc801\uc740 \ucd94\uac00 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc788\ub294 \uacbd\uc6b0, \ud30c\ub4dc\uac00 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc77c\uc815\uc744 \uc608\uc57d\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc218\uac00 \uc801\uc740 \ub9ce\uc740 \ub178\ub4dc \uadf8\ub8f9\ubcf4\ub2e4 \ub178\ub4dc\uac00 \ub9ce\uc740 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc120\ud638\ub429\ub2c8\ub2e4. \uc774\ub294 \ud655\uc7a5\uc131\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \ub450 \uc2dc\uc2a4\ud15c \ubaa8\ub450 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 EC2 \uae30\ub2a5 (\uc608: \uc9c0\uc5ed, \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45) \uc744 \uc120\ud638\ud558\uc2ed\uc2dc\uc624. \ucc38\uace0: EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \uc790\ub3d9 EC2 Auto Scaling \uadf8\ub8f9 \uac80\uc0c9 \ubc0f \uc815\uc0c1\uc801\uc778 \ub178\ub4dc \uc885\ub8cc\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uae30\ub2a5\uc744 \ube44\ub86f\ud55c \uac15\ub825\ud55c \uad00\ub9ac \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc131\ub2a5 \ubc0f \ud655\uc7a5\uc131 \ucd5c\uc801\ud654 \u00b6 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc54c\uace0\ub9ac\uc998\uc758 \ub7f0\ud0c0\uc784 \ubcf5\uc7a1\uc131\uc744 \uc774\ud574\ud558\uba74 [1,000\uac1c \ub178\ub4dc] (https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/scalability_tests.md) \ub97c \ucd08\uacfc\ud558\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uacc4\uc18d \uc6d0\ud65c\ud558\uac8c \uc791\ub3d9\ud558\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \ud29c\ub2dd\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \ud655\uc7a5\uc131\uc744 \uc870\uc815\ud558\uae30 \uc704\ud55c \uc8fc\uc694\ud55c \uc694\uc18c\ub294 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc81c\uacf5\ub418\ub294 \ub9ac\uc18c\uc2a4, \uc54c\uace0\ub9ac\uc998\uc758 \uc2a4\uce94 \uac04\uaca9, \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9 \uc218\uc785\ub2c8\ub2e4. \uc774 \uc54c\uace0\ub9ac\uc998\uc758 \uc2e4\uc81c \ub7f0\ud0c0\uc784 \ubcf5\uc7a1\uc131\uc5d0\ub294 \uc2a4\ucf00\uc904\ub9c1 \ud50c\ub7ec\uadf8\uc778 \ubcf5\uc7a1\uc131 \ubc0f \ud30c\ub4dc \uc218\uc640 \uac19\uc740 \ub2e4\ub978 \uc694\uc778\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub77c\ubbf8\ud130\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc790\uc5f0\uc2a4\ub7fd\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uba70 \uc27d\uac8c \uc870\uc815\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uad6c\uc131\ud560 \uc218 \uc5c6\ub294 \ud30c\ub77c\ubbf8\ud130\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud30c\ub4dc, \ub178\ub4dc, \ub178\ub4dc \uadf8\ub8f9\uc744 \ud3ec\ud568\ud558\uc5ec \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130\uc758 \uc0c1\ud0dc\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ud569\ub2c8\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \uac01 \uc2a4\uce94 \uac04\uaca9\ub9c8\ub2e4 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2dd\ubcc4\ud558\uace0 \uac01 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc2a4\ucf00\uc904\ub9c1\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc694\uc18c\ub97c \uc870\uc815\ud558\ub824\uba74 \uc11c\ub85c \ub2e4\ub978 \uc808\ucda9\uc810\uc774 \ub530\ub974\ubbc0\ub85c \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \ub9de\uac8c \uc2e0\uc911\ud558\uac8c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc218\uc9c1 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub85c \ud655\uc7a5\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 \ubc30\ud3ec\ub97c \uc704\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c \ud06c\uac8c \ub2e4\ub974\uc9c0\ub9cc \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 \uba54\ubaa8\ub9ac\uc640 CPU\ub97c \ubaa8\ub450 \ub298\ub824\uc57c \ud569\ub2c8\ub2e4.\uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc54c\uace0\ub9ac\uc998\uc740 \ubaa8\ub4e0 \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\ubbc0\ub85c \uacbd\uc6b0\uc5d0 \ub530\ub77c \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc774 1GB\ubcf4\ub2e4 \ucee4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub9ac\uc18c\uc2a4 \uc99d\uac00\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc218\ub3d9\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4.\uc9c0\uc18d\uc801\uc778 \ub9ac\uc18c\uc2a4 \ud29c\ub2dd\uc73c\ub85c \uc778\ud574 \uc6b4\uc601\uc0c1\uc758 \ubd80\ub2f4\uc774 \uc0dd\uae34\ub2e4\uba74 \uc560\ub4dc\uc628 \ub9ac\uc0ac\uc774\uc800 \ub610\ub294 \ubc84\ud2f0\uceec \ud30c\ub4dc \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc0ac\uc6a9\uc744 \uace0\ub824\ud574 \ubcf4\uc138\uc694. \ub178\ub4dc \uadf8\ub8f9 \uc218 \uc904\uc774\uae30 \u00b6 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uacc4\uc18d \uc798 \uc791\ub3d9\ud558\ub3c4\ub85d \ud558\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc218\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud300 \ub610\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\ubcc4\ub85c \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\uc131\ud558\ub294 \uc77c\ubd80 \uc870\uc9c1\uc5d0\uc11c\ub294 \uc774\uac83\uc774 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 Kubernetes API\uc5d0\uc11c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ub418\uc9c0\ub9cc \ud655\uc7a5\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc29\uc9c0 \ud328\ud134\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \ub2e4\uc911 \ub178\ub4dc \uadf8\ub8f9 (\uc608: \uc2a4\ud31f \ub610\ub294 GPU) \uc744 \uc0ac\uc6a9\ud558\ub294 \ub370\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \uc774\uc720\uac00 \uc788\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc801\uc740 \uc218\uc758 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74\uc11c \ub3d9\uc77c\ud55c \ud6a8\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub294 \ub300\uccb4 \uc124\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc \uaca9\ub9ac\ub294 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc544\ub2cc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \uc2e0\ub8b0\ub3c4\uac00 \ub0ae\uc740 \uba40\ud2f0\ud14c\ub10c\ud2b8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ubd88\uac00\ub2a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uacfc \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc740 \ub9ac\uc18c\uc2a4 \uacbd\ud569\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc801\uc808\ud558\uac8c \uc124\uc815\ub418\uc5c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ud074\uc218\ub85d \ube48 \ud328\ud0b9\uc774 \ucd5c\uc801\ud654\ub418\uace0 \uc2dc\uc2a4\ud15c \ud30c\ub4dc \uc624\ubc84\ud5e4\ub4dc\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. NodeTaints \ub610\ub294 NodeSelector\ub294 \ud30c\ub4dc\ub97c \uc608\uc678\uc801\uc73c\ub85c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uac83\uc774\uc9c0, \uaddc\uce59\uc774 \uc544\ub2c8\ub2e4. \uc9c0\uc5ed \ub9ac\uc18c\uc2a4\ub294 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc744 \ud3ec\ud568\ud558\ub294 \ub2e8\uc77c EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. \uc2a4\uce94 \uac04\uaca9 \uc904\uc774\uae30 \u00b6 \uc2a4\uce94 \uac04\uaca9 (\uc608: 10\ucd08) \uc744 \uc9e7\uac8c \uc124\uc815\ud558\uba74 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc744 \ub54c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ucd5c\ub300\ud55c \ube68\ub9ac \uc751\ub2f5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc2a4\uce94\ud560 \ub54c\ub9c8\ub2e4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ubc0f EC2 Auto Scaling \uadf8\ub8f9 \ub610\ub294 EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 API\uc5d0 \ub300\ud55c API \ud638\ucd9c\uc774 \ub9ce\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c API \ud638\ucd9c\ub85c \uc778\ud574 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uc18d\ub3c4\uac00 \uc81c\ud55c\ub418\uac70\ub098 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc2a4\uce94 \uac04\uaca9\uc740 10\ucd08\uc774\uc9c0\ub9cc AWS\uc5d0\uc11c\ub294 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \ud6e8\uc52c \ub354 \uc624\ub798 \uac78\ub9bd\ub2c8\ub2e4. \uc989, \uc804\uccb4 \ud655\uc7a5 \uc2dc\uac04\uc744 \ud06c\uac8c \ub298\ub9ac\uc9c0 \uc54a\uace0\ub3c4 \uac04\uaca9\uc744 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub370 2\ubd84\uc774 \uc18c\uc694\ub418\ub294 \uacbd\uc6b0 \uac04\uaca9\uc744 1\ubd84\uc73c\ub85c \ubcc0\uacbd\ud558\uba74 API \ud638\ucd9c\uc774 6\ubc30 \uac10\uc18c\ud558\uace0 \uc2a4\ucf00\uc77c \uc5c5 \uc18d\ub3c4\ub294 38% \ub290\ub824\uc9c0\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9 \uac04 \uc0e4\ub529 \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud2b9\uc815 \ub178\ub4dc \uadf8\ub8f9 \uc9d1\ud569\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uac01\uac01 \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9 \uc9d1\ud569\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ub41c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub7ec \uac1c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uba74 \uc784\uc758\ub85c \ub9ce\uc740 \uc218\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ud655\uc7a5\uc131\uc5d0 \ube44\uc6a9\uc744 \ud22c\uc790\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc740 \uc131\ub2a5 \uac1c\uc120\uc744 \uc704\ud55c \ucd5c\ud6c4\uc758 \uc218\ub2e8\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc6d0\ub798 \uc774 \uad6c\uc131\uc6a9\uc73c\ub85c \uc124\uacc4\ub418\uc9c0 \uc54a\uc558\uc73c\ubbc0\ub85c \uba87 \uac00\uc9c0 \ubd80\uc791\uc6a9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0e4\ub4dc\ub294 \ud1b5\uc2e0\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc5ec\ub7ec \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub824\uace0 \uc2dc\ub3c4\ud560 \uc218 \uc788\ub2e4. \uc774\ub85c \uc778\ud574 \uc5ec\ub7ec \ub178\ub4dc \uadf8\ub8f9\uc774 \ubd88\ud544\uc694\ud558\uac8c \ud655\uc7a5\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucd94\uac00 \ub178\ub4dc\ub294 '\uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0' \uc774\ud6c4 \ub2e4\uc2dc \ucd95\uc18c\ub429\ub2c8\ub2e4. metadata: name: cluster-autoscaler namespace: cluster-autoscaler-1 ... --nodes=1:10:k8s-worker-asg-1 --nodes=1:10:k8s-worker-asg-2 --- metadata: name: cluster-autoscaler namespace: cluster-autoscaler-2 ... --nodes=1:10:k8s-worker-asg-3 --nodes=1:10:k8s-worker-asg-4 \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uac01 \uc0e4\ub4dc\ub294 \uace0\uc720\ud55c EC2 Auto Scaling \uadf8\ub8f9 \uc138\ud2b8\ub97c \uac00\ub9ac\ud0a4\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\ub354 \uc120\ucd9c \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uac01 \uc0e4\ub4dc\ub294 \ubcc4\ub3c4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. \ube44\uc6a9 \ubc0f \uac00\uc6a9\uc131 \ucd5c\uc801\ud654 \u00b6 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \u00b6 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc628\ub514\ub9e8\ub4dc \uc694\uae08\uc5d0\uc11c \ucd5c\ub300 90% \uae4c\uc9c0 \uc808\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74 EC2\uc5d0\uc11c \uc6a9\ub7c9\uc744 \ub2e4\uc2dc \ud544\uc694\ub85c \ud558\ub294 \uacbd\uc6b0 \uc5b8\uc81c\ub4e0\uc9c0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \ubd80\uc871\ud558\uc5ec EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc6a9\ub7c9 \ubd80\uc871 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4 \ud328\ubc00\ub9ac\ub97c \uc120\ud0dd\ud558\uc5ec \ub2e4\uc591\uc131\uc744 \uadf9\ub300\ud654\ud558\uba74 \ub9ce\uc740 \uc2a4\ud31f \uc6a9\ub7c9 \ud480\uc744 \ud65c\uc6a9\ud558\uc5ec \uc6d0\ud558\ub294 \uaddc\ubaa8\ub97c \ub2ec\uc131\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc9c0\uace0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \uc911\ub2e8\uc774 \ud074\ub7ec\uc2a4\ud130 \uac00\uc6a9\uc131\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud55c \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc218\ub97c \ub298\ub9ac\uc9c0 \uc54a\uace0\ub3c4 \ub2e4\uc591\uc131\uc744 \ub192\uc77c \uc218 \uc788\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.\ubcf4\uc7a5\ub41c \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \ub300\uc2e0 \uc628\ub514\ub9e8\ub4dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc810\uc744 \uae30\uc5b5\ud558\uc2ed\uc2dc\uc624. \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc744 \uad6c\uc131\ud560 \ub54c\ub294 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ub9ac\uc18c\uc2a4 \uc6a9\ub7c9\uc774 \ube44\uc2b7\ud574\uc57c \ud569\ub2c8\ub2e4.\uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc2a4\ucf00\uc904\ub9c1 \uc2dc\ubbac\ub808\uc774\ud130\ub294 \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc758 \uccab \ubc88\uc9f8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud6c4\uc18d \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ub354 \ud06c\uba74 \ud655\uc7a5 \ud6c4 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud06c\uae30\uac00 \uc791\uc73c\uba74 \uc6a9\ub7c9 \ubd80\uc871\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc\uac00 \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\uc57d\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 M4, M5, M5a \ubc0f M5n \uc778\uc2a4\ud134\uc2a4\ub294 \ubaa8\ub450 \ube44\uc2b7\ud55c \uc591\uc758 CPU\uc640 \uba54\ubaa8\ub9ac\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70 \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc744 \uc801\uc6a9\ud558\uae30\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4 \uc120\ud0dd\uae30 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc628\ub514\ub9e8\ub4dc \ubc0f \uc2a4\ud31f \uc6a9\ub7c9\uc744 \ubcc4\ub3c4\uc758 EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131\uc774 \uadfc\ubcf8\uc801\uc73c\ub85c \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uae30\ubcf8 \uc6a9\ub7c9 \uc804\ub7b5 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \uc911\ub2e8\ub418\ubbc0\ub85c (EC2\uc5d0\uc11c \uc6a9\ub7c9\uc744 \ub2e4\uc2dc \ud655\ubcf4\ud574\uc57c \ud560 \ub54c) \uc0ac\uc6a9\uc790\ub294 \uc120\uc810 \uac00\ub2a5\ud55c \ub178\ub4dc\ub97c \uc624\uc5fc\uc2dc\ucf1c \uc120\uc810 \ub3d9\uc791\uc5d0 \ub300\ud55c \uba85\uc2dc\uc801\uc778 \ud3ec\ub4dc \ud5c8\uc6a9\uc744 \uc694\uad6c\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud14c\uc778\ud2b8\ub85c \uc778\ud574 \ub178\ub4dc\uc758 \uc2a4\ucf00\uc904 \uc18d\uc131\uc774 \ub2ec\ub77c\uc9c0\ubbc0\ub85c \uc5ec\ub7ec EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \ubd84\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\ub294 Expanders \ub77c\ub294 \uac1c\ub150\uc774 \uc788\uc73c\uba70, \ud655\uc7a5\ud560 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \uc804\ub7b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. --expander=least-waste \uc804\ub7b5\uc740 \uc77c\ubc18\uc801\uc778 \uc6a9\ub3c4\uc758 \uae30\ubcf8 \uc804\ub7b5\uc73c\ub85c, \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \ub2e4\uc591\ud654\ub97c \uc704\ud574 \uc5ec\ub7ec \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 (\uc704 \uc774\ubbf8\uc9c0 \uc124\uba85 \ucc38\uc870) \uc870\uc815 \ud65c\ub3d9 \uc774\ud6c4\uc5d0 \uac00\uc7a5 \uc798 \ud65c\uc6a9\ub418\ub294 \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc758 \ube44\uc6a9\uc744 \ub354\uc6b1 \ucd5c\uc801\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9 \uc6b0\uc120 \uc21c\uc704 \uc9c0\uc815/ASG \u00b6 \uc6b0\uc120\uc21c\uc704 \ud655\uc7a5\uae30\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6b0\uc120\uc21c\uc704 \uae30\ubc18 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.`--expander=priority'\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uac00 \ub178\ub4dc \uadf8\ub8f9/ASG\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uc5b4\ub5a4 \uc774\uc720\ub85c\ub4e0 \ud655\uc7a5\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc6b0\uc120 \uc21c\uc704 \ubaa9\ub85d\uc5d0\uc11c \ub2e4\uc74c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4.\uc774\ub294 \uc608\ub97c \ub4e4\uc5b4, GPU\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucd5c\uc801\ud654\ub41c \uc131\ub2a5\uc744 \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 P3 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud558\uc9c0\ub9cc \ub450 \ubc88\uc9f8 \uc635\uc158\uc73c\ub85c P2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: v1 kind: ConfigMap metadata: name: cluster-autoscaler-priority-expander namespace: kube-system data: priorities: |- 10: - .*p2-node-group.* 50: - .*p3-node-group.* \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 p3-node-group \uc774\ub77c\ub294 \uc774\ub984\uacfc \uc77c\uce58\ud558\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4.\uc774 \uc791\uc5c5\uc774 --max-node-provision-time \ub0b4\uc5d0 \uc131\uacf5\ud558\uc9c0 \ubabb\ud558\uba74 p2-node-group \uc774\ub77c\ub294 \uc774\ub984\uacfc \uc77c\uce58\ud558\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc774 \uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c 15\ubd84\uc73c\ub85c \uc124\uc815\ub418\uba70 \ub178\ub4dc \uadf8\ub8f9 \uc120\ud0dd\uc758 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uac12\uc774 \ub108\ubb34 \ub0ae\uc73c\uba74 \ubd88\ud544\uc694\ud55c \ud06c\uae30 \uc870\uc815\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub9cc \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \ub54c\ub294 \ub178\ub4dc\ub97c \uc81c\uac70\ud568\uc73c\ub85c\uc368 \ube44\uc6a9\uc744 \ucd5c\uc18c\ud654\ud569\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \ud3ec\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uae30 \uc804\uc5d0 \ub178\ub4dc \ud655\uc7a5\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ubc30\ud3ec \uc9c0\uc5f0 \uc2dc\uac04\uc5d0 \uc0c1\ub2f9\ud55c \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\uae30\uae4c\uc9c0 \uba87 \ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc73c\uba70, \uc774\ub85c \uc778\ud574 \ud3ec\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc9c0\uc5f0 \uc2dc\uac04\uc774 10\ubc30 \uc99d\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub9c1 \uc9c0\uc5f0\uc5d0 \ub530\ub978 \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud558\ub294 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd \uc744 \uc0ac\uc6a9\ud558\uba74 \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uacf5\uac04\uc744 \ucc28\uc9c0\ud558\ub294 \uc6b0\uc120 \uc21c\uc704\uac00 \uc74c\uc218\uc778 \uc784\uc2dc \ud30c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ub429\ub2c8\ub2e4. \uc0c8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uace0 \uc6b0\uc120 \uc21c\uc704\uac00 \ub354 \ub192\uc740 \uacbd\uc6b0, \uc784\uc2dc \ud30c\ub4dc\ub97c \uc120\uc810\ud558\uc5ec \uacf5\uac04\uc744 \ud655\ubcf4\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc784\uc2dc \ud3ec\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub418\uc5b4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc0c8 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub3c4\ub85d \ud2b8\ub9ac\uac70\ub429\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc73c\ub85c \uc5bb\uc744 \uc218 \uc788\ub294 \uadf8\ub2e4\uc9c0 \ubd84\uba85\ud558\uc9c0 \uc54a\uc740 \ub2e4\ub978 \uc774\uc810\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc774 \uc5c6\uc73c\uba74 \ud65c\uc6a9\ub3c4\uac00 \ub192\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ubd80\uc791\uc6a9 \uc911 \ud558\ub098\ub294 \ud30c\ub4dc\uac00 \ud30c\ub4dc \ub610\ub294 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\uc758 preferredDuringSchedulingIgnoredDuringExecution \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc801\uc758 \uc2a4\ucf00\uc904\ub9c1 \uacb0\uc815\uc744 \ub0b4\ub9ac\uc9c0 \ubabb\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \uc0ac\ub840\ub294 AntiAffinity\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac00\uc6a9\uc131 \uc601\uc5ed \uac04\uc5d0 \uac00\uc6a9\uc131\uc774 \ub192\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub97c \ubd84\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc740 \uc62c\ubc14\ub978 \uc601\uc5ed\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\ub2a5\uc131\uc744 \ud06c\uac8c \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc6a9\ub7c9\uc758 \uc591\uc740 \uc870\uc9c1\uc758 \uc2e0\uc911\ud55c \ube44\uc988\ub2c8\uc2a4 \uacb0\uc815\uc785\ub2c8\ub2e4.\ud575\uc2ec\uc740 \uc131\ub2a5\uacfc \ube44\uc6a9 \uac04\uc758 \uade0\ud615\uc785\ub2c8\ub2e4.\uc774 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ud3c9\uade0 \ud655\uc7a5 \ube48\ub3c4\ub97c \uacc4\uc0b0\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc73c\ub85c \ub098\ub204\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud3c9\uade0\uc801\uc73c\ub85c 30\ucd08\ub9c8\ub2e4 \uc0c8 \ub178\ub4dc\uac00 \ud544\uc694\ud558\uace0 EC2\uc5d0\uc11c \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \ub370 30\ucd08\uac00 \uac78\ub9b0\ub2e4\uba74, \ub2e8\uc77c \ub178\ub4dc\ub97c \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \ud56d\uc0c1 \ucd94\uac00 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\ubbc0\ub85c EC2 \uc778\uc2a4\ud134\uc2a4 \ud558\ub098\ub97c \ucd94\uac00\ud558\ub294 \ub370 \ub4dc\ub294 \ube44\uc6a9\uc73c\ub85c \uc608\uc57d \uc9c0\uc5f0 \uc2dc\uac04\uc744 30\ucd08\uae4c\uc9c0 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc601\uc5ed \uc2a4\ucf00\uc904\ub9c1 \uacb0\uc815\uc744 \uac1c\uc120\ud558\ub824\uba74 EC2 Auto Scaling \uadf8\ub8f9\uc758 \uac00\uc6a9 \uc601\uc5ed \uc218\uc640 \ub3d9\uc77c\ud55c \uc218\uc758 \ub178\ub4dc\ub97c \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec\uac00 \uc218\uc2e0 \ud3ec\ub4dc\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc601\uc5ed\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624. \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ucd95\ucd9c \ubc29\uc9c0 \u00b6 \uc77c\ubd80 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc81c\uac70\ud558\ub294\ub370 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4ed\ub2c8\ub2e4. \ube45\ub370\uc774\ud130 \ubd84\uc11d, \uba38\uc2e0 \ub7ec\ub2dd \uc791\uc5c5, \ud14c\uc2a4\ud2b8 \ub7ec\ub108\ub294 \uacb0\uad6d\uc5d0\ub294 \uc644\ub8cc\ub418\uc9c0\ub9cc \uc911\ub2e8\ub420 \uacbd\uc6b0 \ub2e4\uc2dc \uc2dc\uc791\ud574\uc57c \ud569\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc2a4\ucf00\uc77c \ub2e4\uc6b4-\uc0ac\uc6a9\ub960 \uc784\uacc4\uac12 \uc774\ud558\ub85c \ubaa8\ub4e0 \ub178\ub4dc\ub97c \ucd95\uc18c\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70, \uc774\ub85c \uc778\ud574 \ub178\ub4dc\uc5d0 \ub0a8\uc544 \uc788\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\uac70 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ud30c\ub4dc\ub97c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc778\uc2dd\ud558\ub294 \ub808\uc774\ube14\ub85c \ubcf4\ud638\ud568\uc73c\ub85c\uc368 \uc774\ub97c \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc\ub97c \uc81c\uac70\ud558\ub294 \ub370 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ucf54\ub4dc\uc5d0\ub294 cluster-autoscaler.kubernetes.io/safe-to-evict=false \ub77c\ub294 \uc5b4\ub178\ucf00\uc774\uc158\uc774 \ubd99\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uace0\uae09 \uc0ac\uc6a9 \uc0ac\ub840 \u00b6 EBS \ubcfc\ub968 \u00b6 \uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub610\ub294 \ubd84\uc0b0 \uce90\uc2dc\uc640 \uac19\uc740 \uc0c1\ud0dc \uc800\uc7a5 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud558\ub294 \ub370 \ub9e4\uc6b0 \uc911\uc694\ud569\ub2c8\ub2e4. EBS \ubcfc\ub968 \uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub7ec\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \uc9c0\uc6d0\ud558\uc9c0\ub9cc \ud2b9\uc815 \uc601\uc5ed\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \uac01 AZ\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec AZ\uc5d0\uc11c \uc0e4\ub529\ud558\uba74 \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc774 \ub192\uc544\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 EC2 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9 \uc2a4\ucf00\uc77c\ub9c1\uc758 \uade0\ud615\uc744 \ub9de\ucd9c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc \uadf8\ub8f9 \ubc38\ub7f0\uc2f1\uc740 balance-similar-node-groups=true \ub85c \uc124\uc815\ud558\uc5ec \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc740 \uac00\uc6a9 \uc601\uc5ed\uacfc EBS \ubcfc\ub968\uc774 \ub2e4\ub974\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 \ub3d9\uc77c\ud55c \uc124\uc815\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uacf5\ub3d9 \uc2a4\ucf00\uc904\ub9c1 \u00b6 \uba38\uc2e0 \ub7ec\ub2dd \ubd84\uc0b0 \uad50\uc721 \uc791\uc5c5\uc740 \ub3d9\uc77c \uc601\uc5ed \ub178\ub4dc \uad6c\uc131\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ucd5c\uc18c\ud654\ud568\uc73c\ub85c\uc368 \uc0c1\ub2f9\ud55c \uc774\uc810\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub294 \ud2b9\uc815 \uc601\uc5ed\uc5d0 \uc5ec\ub7ec \uac1c\uc758 \ud3ec\ub4dc\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4.\uc774\ub294 '\ud1a0\ud3f4\ub85c\uc9c0\ud0a4: failure-domain.beta.kubernetes.io/zone'\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \uacf5\ub3d9 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\uc5d0 \ud30c\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc124\uc815\ud558\uac70\ub098 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc124\uc815\ud568\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\ub2e4.\uadf8\ub7ec\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc218\uc694\uc5d0 \ub9de\ucdb0 \ud2b9\uc815 \uc601\uc5ed\uc744 \ud655\uc7a5\ud569\ub2c8\ub2e4.\uac00\uc6a9 \uc601\uc5ed\ub2f9 \ud558\ub098\uc529 \uc5ec\ub7ec EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud560\ub2f9\ud558\uc5ec \ud568\uaed8 \uc608\uc57d\ub41c \uc804\uccb4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud574 \ud398\uc77c\uc624\ubc84\ub97c \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. balance-similar-node-groups=false \ub97c \uc124\uc815\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9 \ubc38\ub7f0\uc2f1\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc9c0\uc5ed \ubc0f \uc601\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc774 \ubaa8\ub450 \ud3ec\ud568\ub41c \uacbd\uc6b0 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0 \ubc0f/\ub610\ub294 \ud3ec\ub4dc \uc120\uc810 \uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. [Node Affinity] (https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\uc5ed \ud30c\ub4dc\uac00 \uc601\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc744 \ud53c\ud558\ub3c4\ub85d \uac15\uc694\ud558\uac70\ub098 \uc7a5\ub824\ud558\uace0, \uadf8 \ubc18\ub300\uc758 \uacbd\uc6b0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc785\ub2c8\ub2e4. \uc601\uc5ed \ud3ec\ub4dc\uac00 \uc9c0\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 \uc9c0\uc5ed \ud30c\ub4dc\uc758 \uc6a9\ub7c9 \ubd88\uade0\ud615\uc774 \ucd08\ub798\ub429\ub2c8\ub2e4. \uc601\uc5ed \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc911\ub2e8 \ubc0f \uc7ac\ubc30\uce58\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 [Pod Preemption] (https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/) \uc744 \uad6c\uc131\ud558\uc5ec \uc9c0\uc5ed\uc801\uc73c\ub85c \uaddc\ubaa8\uac00 \uc870\uc815\ub41c \ud3ec\ub4dc\uac00 \uacbd\uc7c1\uc774 \ub35c\ud55c \uad6c\uc5ed\uc744 \uc120\uc810\ud558\uace0 \uc77c\uc815\uc744 \uc870\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624. \uc561\uc140\ub7ec\ub808\uc774\ud130 \u00b6 \uc77c\ubd80 \ud074\ub7ec\uc2a4\ud130\ub294 GPU\uc640 \uac19\uc740 \ud2b9\uc218 \ud558\ub4dc\uc6e8\uc5b4 \uac00\uc18d\uae30\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc77c\uc544\uc6c3 \uc2dc \uac00\uc18d\uae30 \uc7a5\uce58 \ud50c\ub7ec\uadf8\uc778\uc774 \ub9ac\uc18c\uc2a4\ub97c \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc54c\ub9ac\ub294 \ub370 \uba87 \ubd84 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc774 \ub178\ub4dc\uc5d0 \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\uc744 \uac83\uc774\ub77c\uace0 \uc2dc\ubbac\ub808\uc774\uc158\ud588\uc9c0\ub9cc, \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc900\ube44\ub418\uace0 \ub178\ub4dc\uc758 \uac00\uc6a9 \ub9ac\uc18c\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \ub178\ub4dc\uc5d0\uc11c \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \ubc18\ubcf5\uc801\uc778 \ubd88\ud544\uc694\ud55c \ud655\uc7a5 \uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uac00\uc18d\uae30\uac00 \uc788\uace0 CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960\uc774 \ub192\uc740 \ub178\ub4dc\ub294 \uac00\uc18d\uae30\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ucd95\uc18c\uac00 \uace0\ub824\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \uac00\uc18d\uae30\uc758 \uc0c1\ub300\uc801 \ube44\uc6a9 \ub54c\ubb38\uc5d0 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub300\uc2e0 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ube44\uc5b4\uc788\ub294 \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\ub294 \uacbd\uc6b0 \ub178\ub4dc \ucd95\uc18c\ub97c \uace0\ub824\ud558\ub294 \ud2b9\uc218 \uaddc\uce59\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\uc5d0 \uc62c\ubc14\ub974\uac8c \ub3d9\uc791\ud558\ub3c4\ub85d \uac00\uc18d\uae30 \ub178\ub4dc\uc758 kubelet\uc744 \uad6c\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc785\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc\uc5d0 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc774 \ub808\uc774\ube14 \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc561\uc140\ub7ec\ub808\uc774\ud130 \ucd5c\uc801\ud654 \ub3d9\uc791\uc744 \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. GPU \ub178\ub4dc\uc6a9 Kubelet\uc740 --node-labels k8s.amazonaws.com/accelerator=$ACCELERATOR_TYPE \uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\ub294 \ub178\ub4dc\ub294 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131 \uaddc\uce59\uc744 \uc900\uc218\ud569\ub2c8\ub2e4. 0\ubd80\ud130 \uc2a4\ucf00\uc77c\ub9c1 \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc744 0\uae4c\uc9c0 \ub610\ub294 0\ubd80\ud130 \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4 \ube44\uc6a9\uc744 \ud06c\uac8c \uc808\uac10\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Auto Scaling \uadf8\ub8f9\uc758 \uc2dc\uc791 \uad6c\uc131 \ub610\ub294 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0 \uc9c0\uc815\ub41c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uac80\uc0ac\ud558\uc5ec Auto Scaling \uadf8\ub8f9\uc758 CPU, \uba54\ubaa8\ub9ac \ubc0f GPU \ub9ac\uc18c\uc2a4\ub97c \ud0d0\uc9c0\ud569\ub2c8\ub2e4. \uc77c\ubd80 \ud3ec\ub4dc\uc5d0\ub294 \uc2dc\uc791 \uad6c\uc131\uc5d0\uc11c \uac80\uc0c9\ud560 \uc218 \uc5c6\ub294 WindowsENI or PrivateIPv4Address \ub610\ub294 \ud2b9\uc815 \ub178\ub4dc \uc120\ud0dd\uae30 \ub610\ub294 \ud14c\uc778\ud2b8\uc640 \uac19\uc740 \ucd94\uac00 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 EC2 Auto Scaling Group\uc758 \ud0dc\uadf8\uc5d0\uc11c \uc774\ub7ec\ud55c \uc694\uc18c\ub97c \ubc1c\uacac\ud558\uc5ec \uc774\ub7ec\ud55c \uc694\uc18c\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Key: k8s.io/cluster-autoscaler/node-template/resources/$RESOURCE_NAME Value: 5 Key: k8s.io/cluster-autoscaler/node-template/label/$LABEL_KEY Value: $LABEL_VALUE Key: k8s.io/cluster-autoscaler/node-template/taint/$TAINT_KEY Value: NoSchedule \ucc38\uace0: 0\uc73c\ub85c \ud655\uc7a5\ud560 \uacbd\uc6b0 \uc6a9\ub7c9\uc740 EC2\ub85c \ubc18\ud658\ub418\uba70 \ud5a5\ud6c4\uc5d0\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Additional Parameters \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \ub3d9\uc791\uacfc \uc131\ub2a5\uc744 \uc870\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ce\uc740 \uad6c\uc131 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub77c\ubbf8\ud130\uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 Github \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub77c\ubbf8\ud130 \uc124\uba85 Default scan-interval \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5 \ub610\ub294 \ucd95\uc18c\ub97c \uc704\ud55c \uc7ac\ud3c9\uac00 \ube48\ub3c4 10 \ucd08 max-empty-bulk-delete \ub3d9\uc2dc\uc5d0 \uc0ad\uc81c\ud560 \uc218 \uc788\ub294 \ube48 \ub178\ub4dc\uc758 \ucd5c\ub300 \uc218 10 scale-down-delay-after-add \uc2a4\ucf00\uc77c \uc5c5 \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uc2dc\uac04 10 \ubd84 scale-down-delay-after-delete \ub178\ub4dc \uc0ad\uc81c \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uc2dc\uac04, \uae30\ubcf8\uac12\uc740 scan-interval scan-interval scale-down-delay-after-failure \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc2e4\ud328 \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uae30\uac04 3 \ubd84 scale-down-unneeded-time \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc73c\ub824\uba74 \ud574\ub2f9 \ub178\ub4dc\uac00 \ubd88\ud544\uc694\ud574\uc57c \ud558\ub294 \uae30\uac04 10 \ubd84 scale-down-unready-time \uc900\ube44\ub418\uc9c0 \uc54a\uc740 \ub178\ub4dc\uac00 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ub300\uc0c1\uc774 \ub418\uae30\uae4c\uc9c0 \ubd88\ud544\uc694\ud558\uac8c \ub418\ub294 \uae30\uac04 20\ubd84 scale-down-utilization-threshold \ub178\ub4dc \uc0ac\uc6a9\ub960 \uc218\uc900, \uc694\uccad\ub41c \ub9ac\uc18c\uc2a4\uc758 \ud569\uacc4\ub97c \uc6a9\ub7c9\uc73c\ub85c \ub098\ub208 \uac12\uc73c\ub85c \uc815\uc758\ub418\uba70, \uc774 \uc218\uc900 \uc774\ud558\ub85c \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc74c 0.5 scale-down-non-empty-candidates-count \ud55c \ubc88\uc758 \ubc18\ubcf5\uc5d0\uc11c \ub4dc\ub808\uc778\uc744 \ud1b5\ud55c \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ub300\uc0c1\uc73c\ub85c \uac04\uc8fc\ub418\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd5c\ub300 \ub178\ub4dc\uc758 \uc218. \uac12\uc774 \ub0ae\uc744\uc218\ub85d CA \uc751\ub2f5\uc131\uc740 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0 \uc2dc\uac04\uc740 \ub354 \ub290\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac12\uc774 \ub192\uc744\uc218\ub85d \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 (\uc218\ubc31 \uac1c \ub178\ub4dc) \uc758 CA \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ud734\ub9ac\uc2a4\ud2f1\uc744 \ub044\ub824\uba74 \uc591\uc218\uac00 \uc544\ub2cc \uac12\uc73c\ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. CA\ub294 \uace0\ub824\ud558\ub294 \ub178\ub4dc \uc218\ub97c \uc81c\ud55c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. 30 scale-down-candidates-pool-ratio \uc774\uc804 \ubc18\ubcf5\uc758 \uc77c\ubd80 \ud6c4\ubcf4\uac00 \ub354 \uc774\uc0c1 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \ub54c \ucd95\uc18c\ud560 \uc218 \uc788\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd94\uac00 \ud6c4\ubcf4\ub85c \uac04\uc8fc\ub418\ub294 \ub178\ub4dc\uc758 \ube44\uc728\uc785\ub2c8\ub2e4.\uac12\uc774 \ub0ae\uc744\uc218\ub85d CA \uc751\ub2f5\uc131\uc740 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0 \uc2dc\uac04\uc740 \ub354 \ub290\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uac12\uc774 \ub192\uc744\uc218\ub85d \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 (\uc218\ubc31 \uac1c \ub178\ub4dc) \uc758 CA \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ud734\ub9ac\uc2a4\ud2f1\uc744 \ub044\ub824\uba74 1.0\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. CA\ub294 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \ucd94\uac00 \ud6c4\ubcf4\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. 0.1 scale-down-candidates-pool-min-count \uc774\uc804 \ubc18\ubcf5\uc758 \uc77c\ubd80 \ud6c4\ubcf4\uac00 \ub354 \uc774\uc0c1 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ucd95\uc18c\ud560 \uc218 \uc788\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd94\uac00 \ud6c4\ubcf4\ub85c \uac04\uc8fc\ub418\ub294 \ucd5c\uc18c \ub178\ub4dc \uc218. \ucd94\uac00 \ud6c4\ubcf4\uc758 \ud480 \ud06c\uae30\ub97c \uacc4\uc0b0\ud560 \ub54c\ub294 \ucd5c\ub300\uac12 (\ub178\ub4dc\uc218 * \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ube44\uc728, \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ube44\uc728, \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ucd5c\uc18c \uac1c\uc218) \uc73c\ub85c \ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4. 50 \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 \uc774 \ud398\uc774\uc9c0\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ud504\ub808\uc820\ud14c\uc774\uc158 \ubc0f \ub370\ubaa8 \ubaa9\ub85d\uc774 \ub4e4\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\uc5ec\uae30\uc5d0 \ud504\ub808\uc820\ud14c\uc774\uc158\uc774\ub098 \ub370\ubaa8\ub97c \ucd94\uac00\ud558\ub824\uba74 \ud480 \ub9ac\ud018\uc2a4\ud2b8\ub97c \ubcf4\ub0b4\uc8fc\uc138\uc694. \ud504\ub808\uc820\ud14c\uc774\uc158 \ub370\ubaa8 \ubc1c\ud45c\uc790 Autoscaling and Cost Optimization on Kubernetes: From 0 to 100 Guy Templeton, Skyscanner & Jiaxin Shan, Amazon SIG-Autoscaling Deep Dive Maciek Pytel & Marcin Wielgus \ucc38\uace0 \ubb38\ud5cc \u00b6 https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md https://github.com/aws/amazon-ec2-instance-selector https://github.com/aws/aws-node-termination-handler","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec"},{"location":"cluster-autoscaling/index.kr/#_1","text":"","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec"},{"location":"cluster-autoscaling/index.kr/#overview","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub294 SIG \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uc778\uae30 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc194\ub8e8\uc158\uc785\ub2c8\ub2e4.\uc774\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ub0ad\ube44\ud558\uc9c0 \uc54a\uace0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \ub178\ub4dc\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc2a4\ucf00\uc904\ub9c1\uc5d0 \uc2e4\ud328\ud55c \ud30c\ub4dc\uc640 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc\ub97c \uac10\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc \ucd94\uac00 \ub610\ub294 \uc81c\uac70\ub97c \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub0b4\uc758 AWS \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790 \uad6c\ud604\uc740 EC2 Auto Scaling \uadf8\ub8f9\uc758 .desireReplicas \ud544\ub4dc\ub97c \uc81c\uc5b4\ud569\ub2c8\ub2e4. \uc774 \uc548\ub0b4\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \uad6c\uc131\ud558\uace0 \uc870\uc9c1\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc808\ucda9\uc548\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud55c \uba58\ud0c8 \ubaa8\ub378\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucd5c\uc0c1\uc758 \ub2e8\uc77c \uad6c\uc131\uc740 \uc5c6\uc9c0\ub9cc \uc131\ub2a5, \ud655\uc7a5\uc131, \ube44\uc6a9 \ubc0f \uac00\uc6a9\uc131\uc744 \uc808\ucda9\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc635\uc158 \uc9d1\ud569\uc774 \uc788\uc2b5\ub2c8\ub2e4.\ub610\ud55c \uc774 \uc548\ub0b4\uc11c\ub294 AWS \uad6c\uc131\uc744 \ucd5c\uc801\ud654\ud558\uae30 \uc704\ud55c \ud301\uacfc \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Overview"},{"location":"cluster-autoscaling/index.kr/#glossary","text":"\ub2e4\uc74c \uc6a9\uc5b4\ub294 \uc774 \ubb38\uc11c \uc804\uccb4\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc6a9\uc5b4\ub294 \uad11\ubc94\uc704\ud55c \uc758\ubbf8\ub97c \uac00\uc9c8 \uc218 \uc788\uc9c0\ub9cc \uc774 \ubb38\uc11c\uc758 \ubaa9\uc801\uc0c1 \uc544\ub798 \uc815\uc758\ub85c\ub9cc \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud655\uc7a5\uc131 \uc740 Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\ub4dc \ubc0f \ub178\ub4dc \uc218\uac00 \uc99d\uac00\ud560 \ub54c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc5bc\ub9c8\ub098 \uc798 \uc791\ub3d9\ud558\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\ud655\uc7a5\uc131 \ud55c\uacc4\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc131\ub2a5\uacfc \uae30\ub2a5\uc774 \uc800\ud558\ub429\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ud655\uc7a5\uc131 \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 \ub354 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uac70\ub098 \uc81c\uac70\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc131\ub2a5 \uc740 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uaddc\ubaa8 \uc870\uc815 \uacb0\uc815\uc744 \uc5bc\ub9c8\ub098 \ube68\ub9ac \ub0b4\ub9ac\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294\uc9c0\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.\uc644\ubcbd\ud558\uac8c \uc791\ub3d9\ud558\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub418\ub294 \ub4f1\uc758 \uc790\uadf9\uc5d0 \ub300\uc751\ud558\uc5ec \uc989\uc2dc \uacb0\uc815\uc744 \ub0b4\ub9ac\uace0 \uc2a4\ucf00\uc77c\ub9c1 \uc870\uce58\ub97c \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \uac00\uc6a9\uc131 \uc740 \ud30c\ub4dc\ub97c \uc911\ub2e8 \uc5c6\uc774 \uc2e0\uc18d\ud558\uac8c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub2e4\ub294 \ub73b\uc774\ub2e4.\uc5ec\uae30\uc5d0\ub294 \uc0c8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uc640 \ucd95\uc18c\ub41c \ub178\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub41c \ub098\uba38\uc9c0 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uacbd\uc6b0\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ube44\uc6a9 \uc740 \uc2a4\ucf00\uc77c \uc544\uc6c3 \ubc0f \uc2a4\ucf00\uc77c \uc778 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uacb0\uc815\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4.\uae30\uc874 \ub178\ub4dc\uc758 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uac70\ub098 \ub4e4\uc5b4\uc624\ub294 \ud30c\ub4dc\uc5d0 \ube44\ud574 \ub108\ubb34 \ud070 \uc0c8 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uba74 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub429\ub2c8\ub2e4.\uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \ub530\ub77c \uacf5\uaca9\uc801\uc778 \uaddc\ubaa8 \ucd95\uc18c \uacb0\uc815\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc\ub97c \uc870\uae30\uc5d0 \uc885\ub8cc\ud558\ub294 \ub370 \ub530\ub978 \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub2e4. \ub178\ub4dc \uadf8\ub8f9 \uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \ucd94\uc0c1\uc801\uc778 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uac1c\ub150\uc785\ub2c8\ub2e4.\uc774\ub294 \uc9c4\uc815\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\ub294 \uc544\ub2c8\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec, \ud074\ub7ec\uc2a4\ud130 API \ubc0f \uae30\ud0c0 \uad6c\uc131 \uc694\uc18c\uc5d0 \ucd94\uc0c1\ud654\ub41c \ud615\ud0dc\ub85c \uc874\uc7ac\ud569\ub2c8\ub2e4.\ub178\ub4dc \uadf8\ub8f9 \ub0b4\uc758 \ub178\ub4dc\ub294 \ub808\uc774\ube14 \ubc0f \ud14c\uc778\ud2b8\uc640 \uac19\uc740 \uc18d\uc131\uc744 \uacf5\uc720\ud558\uc9c0\ub9cc \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc73c\ub85c \uad6c\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 Auto Scaling \uadf8\ub8f9 \uc740 EC2\uc758 \ub178\ub4dc \uadf8\ub8f9 \uad6c\ud604\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.EC2 Auto Scaling \uadf8\ub8f9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc790\ub3d9\uc73c\ub85c \uac00\uc785\ud558\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc758 \ud574\ub2f9 \ub178\ub4dc \ub9ac\uc18c\uc2a4\uc5d0 \ub808\uc774\ube14\uacfc \ud14c\uc778\ud2b8\ub97c \uc801\uc6a9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dc\uc791\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 EC2\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\ud604\ud55c \ub610 \ub2e4\ub978 \uc608\uc785\ub2c8\ub2e4.EC2 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc218\ub3d9\uc73c\ub85c \uad6c\uc131\ud558\ub294 \ubcf5\uc7a1\uc131\uc744 \uc5c6\uc560\uace0 \ub178\ub4dc \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \uc815\uc0c1\uc801\uc778 \ub178\ub4dc \uc885\ub8cc\uc640 \uac19\uc740 \ucd94\uac00 \uad00\ub9ac \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"Glossary### \uc6a9\uc5b4\uc9d1"},{"location":"cluster-autoscaling/index.kr/#_2","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ud615\ud0dc\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. \uace0\uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud574 \ub9ac\ub354\uc120\ucd9c \ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uc791\uc5c5\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ubcf5\uc81c\ubcf8\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4. \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc124\uc815\uc758 \uacbd\uc6b0 \uc81c\uacf5\ub41c \uc124\uce58\uc9c0\uce68 \uc744 \uc0ac\uc6a9\ud558\uba74 \uae30\ubcf8\uac12\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \uc791\ub3d9\ud558\uc9c0\ub9cc \uba87 \uac00\uc9c0 \uc720\uc758\ud574\uc57c \ud560 \uc0ac\ud56d\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc84\uc804\uc774 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uacfc \uc77c\uce58\ud569\ub2c8\ub2e4.\ubc84\uc804 \uac04 \ud638\ud658\uc131\uc740 \ud14c\uc2a4\ud2b8 \ub418\uc9c0 \uc54a\uac70\ub098 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \uc774 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\uac8c \ud558\ub294 \ud2b9\uc815 \uace0\uae09 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \uc5c6\ub294 \ud55c \uc790\ub3d9 \uac80\uc0c9 \uc774 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc6b4\uc601"},{"location":"cluster-autoscaling/index.kr/#iam","text":"Auto Discovery \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, autoscaling:SetDesiredCapacity \ubc0f autoscaling:TerminateInstanceInAutoScalingGroup \uc791\uc5c5\uc744 \ud604\uc7ac \ud074\ub7ec\uc2a4\ud130\ub85c \ubc94\uc704\uac00 \uc9c0\uc815\ub41c Auto Scaling \uadf8\ub8f9\uc73c\ub85c \uc81c\ud55c\ud558\uc5ec \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 --node-group-auto-discovery \uc778\uc218\uac00 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9\uc73c\ub85c \ubc94\uc704\ub97c \uc881\ud788\uc9c0 \uc54a\uc558\ub354\ub77c\ub3c4 (\uc608: k8s.io/cluster-autoscaler/<cluster-name> ) \ud55c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ub2e4\ub978 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc218\uc815\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:SetDesiredCapacity\" , \"autoscaling:TerminateInstanceInAutoScalingGroup\" ], \"Resource\" : \"*\" , \"Condition\" : { \"StringEquals\" : { \"aws:ResourceTag/k8s.io/cluster-autoscaler/enabled\" : \"true\" , \"aws:ResourceTag/k8s.io/cluster-autoscaler/<my-cluster>\" : \"owned\" } } }, { \"Effect\" : \"Allow\" , \"Action\" : [ \"autoscaling:DescribeAutoScalingInstances\" , \"autoscaling:DescribeAutoScalingGroups\" , \"autoscaling:DescribeScalingActivities\" , \"ec2:DescribeLaunchTemplateVersions\" , \"autoscaling:DescribeTags\" , \"autoscaling:DescribeLaunchConfigurations\" , \"ec2:DescribeInstanceTypes\" ], \"Resource\" : \"*\" } ] }","title":"IAM \uc5ed\ud560\uc5d0 \ub300\ud574 \uad8c\ud55c\uc774 \uac00\uc7a5 \uc801\uc740 \uc561\uc138\uc2a4 \uad8c\ud55c \uc0ac\uc6a9"},{"location":"cluster-autoscaling/index.kr/#_3","text":"\ud6a8\uacfc\uc801\uc778 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ud558\ub294 \uac83\uc5d0\uc11c \uc2dc\uc791\ub429\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc \uc804\ubc18\uc5d0\uc11c \uac00\uc6a9\uc131\uc744 \uadf9\ub300\ud654\ud558\uace0 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub824\uba74 \uc62c\ubc14\ub978 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \uc120\ud0dd\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. AWS\ub294 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \uc720\uc5f0\ud558\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4.\ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud574 \uba87 \uac00\uc9c0 \uac00\uc815\uc744 \ud569\ub2c8\ub2e4.EC2 Auto Scaling \uadf8\ub8f9 \uad6c\uc131\uc744 \uc774\ub7ec\ud55c \uac00\uc815\uacfc \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ud558\uba74 \uc6d0\uce58 \uc54a\ub294 \ub3d9\uc791\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc \uadf8\ub8f9\uc758 \uac01 \ub178\ub4dc\ub294 \ub808\uc774\ube14, \ud14c\uc778\ud2b8, \ub9ac\uc18c\uc2a4\uc640 \uac19\uc740 \ub3d9\uc77c\ud55c \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131\uc744 \uac00\uc9d1\ub2c8\ub2e4. \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc758 \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 CPU, \uba54\ubaa8\ub9ac \ubc0f GPU\uc758 \ud615\ud0dc\uac00 \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \uc9c0\uc815\ub41c \uccab \ubc88\uc9f8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \uc2a4\ucf00\uc904\ub9c1\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \ub354 \ub9ce\uc740 \ub9ac\uc18c\uc2a4\uac00 \ud3ec\ud568\ub41c \ucd94\uac00 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc788\ub294 \uacbd\uc6b0 \ud655\uc7a5 \ud6c4 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ucc45\uc5d0 \ub9ac\uc18c\uc2a4\uac00 \uc801\uc740 \ucd94\uac00 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc788\ub294 \uacbd\uc6b0, \ud30c\ub4dc\uac00 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc77c\uc815\uc744 \uc608\uc57d\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc218\uac00 \uc801\uc740 \ub9ce\uc740 \ub178\ub4dc \uadf8\ub8f9\ubcf4\ub2e4 \ub178\ub4dc\uac00 \ub9ce\uc740 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc120\ud638\ub429\ub2c8\ub2e4. \uc774\ub294 \ud655\uc7a5\uc131\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \ub450 \uc2dc\uc2a4\ud15c \ubaa8\ub450 \uc9c0\uc6d0\uc744 \uc81c\uacf5\ud558\ub294 EC2 \uae30\ub2a5 (\uc608: \uc9c0\uc5ed, \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45) \uc744 \uc120\ud638\ud558\uc2ed\uc2dc\uc624. \ucc38\uace0: EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \uc790\ub3d9 EC2 Auto Scaling \uadf8\ub8f9 \uac80\uc0c9 \ubc0f \uc815\uc0c1\uc801\uc778 \ub178\ub4dc \uc885\ub8cc\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uae30\ub2a5\uc744 \ube44\ub86f\ud55c \uac15\ub825\ud55c \uad00\ub9ac \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \uadf8\ub8f9 \uad6c\uc131"},{"location":"cluster-autoscaling/index.kr/#_4","text":"\uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc54c\uace0\ub9ac\uc998\uc758 \ub7f0\ud0c0\uc784 \ubcf5\uc7a1\uc131\uc744 \uc774\ud574\ud558\uba74 [1,000\uac1c \ub178\ub4dc] (https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/proposals/scalability_tests.md) \ub97c \ucd08\uacfc\ud558\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uacc4\uc18d \uc6d0\ud65c\ud558\uac8c \uc791\ub3d9\ud558\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \ud29c\ub2dd\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \ud655\uc7a5\uc131\uc744 \uc870\uc815\ud558\uae30 \uc704\ud55c \uc8fc\uc694\ud55c \uc694\uc18c\ub294 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc81c\uacf5\ub418\ub294 \ub9ac\uc18c\uc2a4, \uc54c\uace0\ub9ac\uc998\uc758 \uc2a4\uce94 \uac04\uaca9, \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \uadf8\ub8f9 \uc218\uc785\ub2c8\ub2e4. \uc774 \uc54c\uace0\ub9ac\uc998\uc758 \uc2e4\uc81c \ub7f0\ud0c0\uc784 \ubcf5\uc7a1\uc131\uc5d0\ub294 \uc2a4\ucf00\uc904\ub9c1 \ud50c\ub7ec\uadf8\uc778 \ubcf5\uc7a1\uc131 \ubc0f \ud30c\ub4dc \uc218\uc640 \uac19\uc740 \ub2e4\ub978 \uc694\uc778\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub77c\ubbf8\ud130\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc790\uc5f0\uc2a4\ub7fd\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uba70 \uc27d\uac8c \uc870\uc815\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uad6c\uc131\ud560 \uc218 \uc5c6\ub294 \ud30c\ub77c\ubbf8\ud130\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud30c\ub4dc, \ub178\ub4dc, \ub178\ub4dc \uadf8\ub8f9\uc744 \ud3ec\ud568\ud558\uc5ec \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130\uc758 \uc0c1\ud0dc\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ud569\ub2c8\ub2e4. \uc54c\uace0\ub9ac\uc998\uc740 \uac01 \uc2a4\uce94 \uac04\uaca9\ub9c8\ub2e4 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2dd\ubcc4\ud558\uace0 \uac01 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc2a4\ucf00\uc904\ub9c1\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc694\uc18c\ub97c \uc870\uc815\ud558\ub824\uba74 \uc11c\ub85c \ub2e4\ub978 \uc808\ucda9\uc810\uc774 \ub530\ub974\ubbc0\ub85c \uc0ac\uc6a9 \uc0ac\ub840\uc5d0 \ub9de\uac8c \uc2e0\uc911\ud558\uac8c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc131\ub2a5 \ubc0f \ud655\uc7a5\uc131 \ucd5c\uc801\ud654"},{"location":"cluster-autoscaling/index.kr/#_5","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub97c \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub85c \ud655\uc7a5\ud558\ub294 \uac00\uc7a5 \uac04\ub2e8\ud55c \ubc29\ubc95\uc740 \ubc30\ud3ec\ub97c \uc704\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c \ud06c\uac8c \ub2e4\ub974\uc9c0\ub9cc \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 \uba54\ubaa8\ub9ac\uc640 CPU\ub97c \ubaa8\ub450 \ub298\ub824\uc57c \ud569\ub2c8\ub2e4.\uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc54c\uace0\ub9ac\uc998\uc740 \ubaa8\ub4e0 \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\ubbc0\ub85c \uacbd\uc6b0\uc5d0 \ub530\ub77c \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc774 1GB\ubcf4\ub2e4 \ucee4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub9ac\uc18c\uc2a4 \uc99d\uac00\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc218\ub3d9\uc73c\ub85c \uc218\ud589\ub429\ub2c8\ub2e4.\uc9c0\uc18d\uc801\uc778 \ub9ac\uc18c\uc2a4 \ud29c\ub2dd\uc73c\ub85c \uc778\ud574 \uc6b4\uc601\uc0c1\uc758 \ubd80\ub2f4\uc774 \uc0dd\uae34\ub2e4\uba74 \uc560\ub4dc\uc628 \ub9ac\uc0ac\uc774\uc800 \ub610\ub294 \ubc84\ud2f0\uceec \ud30c\ub4dc \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc0ac\uc6a9\uc744 \uace0\ub824\ud574 \ubcf4\uc138\uc694.","title":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc218\uc9c1 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1"},{"location":"cluster-autoscaling/index.kr/#_6","text":"\ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uacc4\uc18d \uc798 \uc791\ub3d9\ud558\ub3c4\ub85d \ud558\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc218\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud300 \ub610\ub294 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\ubcc4\ub85c \ub178\ub4dc \uadf8\ub8f9\uc744 \uad6c\uc131\ud558\ub294 \uc77c\ubd80 \uc870\uc9c1\uc5d0\uc11c\ub294 \uc774\uac83\uc774 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 Kubernetes API\uc5d0\uc11c \uc644\ubcbd\ud558\uac8c \uc9c0\uc6d0\ub418\uc9c0\ub9cc \ud655\uc7a5\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc29\uc9c0 \ud328\ud134\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \ub2e4\uc911 \ub178\ub4dc \uadf8\ub8f9 (\uc608: \uc2a4\ud31f \ub610\ub294 GPU) \uc744 \uc0ac\uc6a9\ud558\ub294 \ub370\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \uc774\uc720\uac00 \uc788\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \uc801\uc740 \uc218\uc758 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74\uc11c \ub3d9\uc77c\ud55c \ud6a8\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\ub294 \ub300\uccb4 \uc124\uacc4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc \uaca9\ub9ac\ub294 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc544\ub2cc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \uc2e0\ub8b0\ub3c4\uac00 \ub0ae\uc740 \uba40\ud2f0\ud14c\ub10c\ud2b8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ubd88\uac00\ub2a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uacfc \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc740 \ub9ac\uc18c\uc2a4 \uacbd\ud569\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc801\uc808\ud558\uac8c \uc124\uc815\ub418\uc5c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ud074\uc218\ub85d \ube48 \ud328\ud0b9\uc774 \ucd5c\uc801\ud654\ub418\uace0 \uc2dc\uc2a4\ud15c \ud30c\ub4dc \uc624\ubc84\ud5e4\ub4dc\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. NodeTaints \ub610\ub294 NodeSelector\ub294 \ud30c\ub4dc\ub97c \uc608\uc678\uc801\uc73c\ub85c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uac83\uc774\uc9c0, \uaddc\uce59\uc774 \uc544\ub2c8\ub2e4. \uc9c0\uc5ed \ub9ac\uc18c\uc2a4\ub294 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc744 \ud3ec\ud568\ud558\ub294 \ub2e8\uc77c EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \uc815\uc758\ub429\ub2c8\ub2e4.","title":"\ub178\ub4dc \uadf8\ub8f9 \uc218 \uc904\uc774\uae30"},{"location":"cluster-autoscaling/index.kr/#_7","text":"\uc2a4\uce94 \uac04\uaca9 (\uc608: 10\ucd08) \uc744 \uc9e7\uac8c \uc124\uc815\ud558\uba74 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc744 \ub54c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \ucd5c\ub300\ud55c \ube68\ub9ac \uc751\ub2f5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc2a4\uce94\ud560 \ub54c\ub9c8\ub2e4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ubc0f EC2 Auto Scaling \uadf8\ub8f9 \ub610\ub294 EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 API\uc5d0 \ub300\ud55c API \ud638\ucd9c\uc774 \ub9ce\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c API \ud638\ucd9c\ub85c \uc778\ud574 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uc18d\ub3c4\uac00 \uc81c\ud55c\ub418\uac70\ub098 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc2a4\uce94 \uac04\uaca9\uc740 10\ucd08\uc774\uc9c0\ub9cc AWS\uc5d0\uc11c\ub294 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dc\uc791\ud558\ub294 \ub370 \ud6e8\uc52c \ub354 \uc624\ub798 \uac78\ub9bd\ub2c8\ub2e4. \uc989, \uc804\uccb4 \ud655\uc7a5 \uc2dc\uac04\uc744 \ud06c\uac8c \ub298\ub9ac\uc9c0 \uc54a\uace0\ub3c4 \uac04\uaca9\uc744 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub370 2\ubd84\uc774 \uc18c\uc694\ub418\ub294 \uacbd\uc6b0 \uac04\uaca9\uc744 1\ubd84\uc73c\ub85c \ubcc0\uacbd\ud558\uba74 API \ud638\ucd9c\uc774 6\ubc30 \uac10\uc18c\ud558\uace0 \uc2a4\ucf00\uc77c \uc5c5 \uc18d\ub3c4\ub294 38% \ub290\ub824\uc9c0\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\uce94 \uac04\uaca9 \uc904\uc774\uae30"},{"location":"cluster-autoscaling/index.kr/#_8","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud2b9\uc815 \ub178\ub4dc \uadf8\ub8f9 \uc9d1\ud569\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uac01\uac01 \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9 \uc9d1\ud569\uc5d0\uc11c \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ub41c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc778\uc2a4\ud134\uc2a4\ub97c \uc5ec\ub7ec \uac1c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uba74 \uc784\uc758\ub85c \ub9ce\uc740 \uc218\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ud655\uc7a5\uc131\uc5d0 \ube44\uc6a9\uc744 \ud22c\uc790\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc740 \uc131\ub2a5 \uac1c\uc120\uc744 \uc704\ud55c \ucd5c\ud6c4\uc758 \uc218\ub2e8\uc73c\ub85c\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc6d0\ub798 \uc774 \uad6c\uc131\uc6a9\uc73c\ub85c \uc124\uacc4\ub418\uc9c0 \uc54a\uc558\uc73c\ubbc0\ub85c \uba87 \uac00\uc9c0 \ubd80\uc791\uc6a9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc0e4\ub4dc\ub294 \ud1b5\uc2e0\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \uc5ec\ub7ec \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub824\uace0 \uc2dc\ub3c4\ud560 \uc218 \uc788\ub2e4. \uc774\ub85c \uc778\ud574 \uc5ec\ub7ec \ub178\ub4dc \uadf8\ub8f9\uc774 \ubd88\ud544\uc694\ud558\uac8c \ud655\uc7a5\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucd94\uac00 \ub178\ub4dc\ub294 '\uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0' \uc774\ud6c4 \ub2e4\uc2dc \ucd95\uc18c\ub429\ub2c8\ub2e4. metadata: name: cluster-autoscaler namespace: cluster-autoscaler-1 ... --nodes=1:10:k8s-worker-asg-1 --nodes=1:10:k8s-worker-asg-2 --- metadata: name: cluster-autoscaler namespace: cluster-autoscaler-2 ... --nodes=1:10:k8s-worker-asg-3 --nodes=1:10:k8s-worker-asg-4 \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uac01 \uc0e4\ub4dc\ub294 \uace0\uc720\ud55c EC2 Auto Scaling \uadf8\ub8f9 \uc138\ud2b8\ub97c \uac00\ub9ac\ud0a4\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\ub354 \uc120\ucd9c \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uac01 \uc0e4\ub4dc\ub294 \ubcc4\ub3c4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4.","title":"\ub178\ub4dc \uadf8\ub8f9 \uac04 \uc0e4\ub529"},{"location":"cluster-autoscaling/index.kr/#_9","text":"","title":"\ube44\uc6a9 \ubc0f \uac00\uc6a9\uc131 \ucd5c\uc801\ud654"},{"location":"cluster-autoscaling/index.kr/#_10","text":"\ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc628\ub514\ub9e8\ub4dc \uc694\uae08\uc5d0\uc11c \ucd5c\ub300 90% \uae4c\uc9c0 \uc808\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74 EC2\uc5d0\uc11c \uc6a9\ub7c9\uc744 \ub2e4\uc2dc \ud544\uc694\ub85c \ud558\ub294 \uacbd\uc6b0 \uc5b8\uc81c\ub4e0\uc9c0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \ubd80\uc871\ud558\uc5ec EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc6a9\ub7c9 \ubd80\uc871 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4 \ud328\ubc00\ub9ac\ub97c \uc120\ud0dd\ud558\uc5ec \ub2e4\uc591\uc131\uc744 \uadf9\ub300\ud654\ud558\uba74 \ub9ce\uc740 \uc2a4\ud31f \uc6a9\ub7c9 \ud480\uc744 \ud65c\uc6a9\ud558\uc5ec \uc6d0\ud558\ub294 \uaddc\ubaa8\ub97c \ub2ec\uc131\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc9c0\uace0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \uc911\ub2e8\uc774 \ud074\ub7ec\uc2a4\ud130 \uac00\uc6a9\uc131\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud55c \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc218\ub97c \ub298\ub9ac\uc9c0 \uc54a\uace0\ub3c4 \ub2e4\uc591\uc131\uc744 \ub192\uc77c \uc218 \uc788\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.\ubcf4\uc7a5\ub41c \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \ub300\uc2e0 \uc628\ub514\ub9e8\ub4dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc810\uc744 \uae30\uc5b5\ud558\uc2ed\uc2dc\uc624. \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc744 \uad6c\uc131\ud560 \ub54c\ub294 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ub9ac\uc18c\uc2a4 \uc6a9\ub7c9\uc774 \ube44\uc2b7\ud574\uc57c \ud569\ub2c8\ub2e4.\uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \uc2a4\ucf00\uc904\ub9c1 \uc2dc\ubbac\ub808\uc774\ud130\ub294 \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc758 \uccab \ubc88\uc9f8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud6c4\uc18d \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ub354 \ud06c\uba74 \ud655\uc7a5 \ud6c4 \ub9ac\uc18c\uc2a4\uac00 \ub0ad\ube44\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud06c\uae30\uac00 \uc791\uc73c\uba74 \uc6a9\ub7c9 \ubd80\uc871\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc\uac00 \uc0c8 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\uc57d\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 M4, M5, M5a \ubc0f M5n \uc778\uc2a4\ud134\uc2a4\ub294 \ubaa8\ub450 \ube44\uc2b7\ud55c \uc591\uc758 CPU\uc640 \uba54\ubaa8\ub9ac\ub97c \uac00\uc9c0\uace0 \uc788\uc73c\uba70 \ud63c\ud569 \uc778\uc2a4\ud134\uc2a4 \uc815\ucc45\uc744 \uc801\uc6a9\ud558\uae30\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4 \uc120\ud0dd\uae30 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc628\ub514\ub9e8\ub4dc \ubc0f \uc2a4\ud31f \uc6a9\ub7c9\uc744 \ubcc4\ub3c4\uc758 EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \ubd84\ub9ac\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131\uc774 \uadfc\ubcf8\uc801\uc73c\ub85c \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uae30\ubcf8 \uc6a9\ub7c9 \uc804\ub7b5 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\ubcf4\ub2e4 \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \uc911\ub2e8\ub418\ubbc0\ub85c (EC2\uc5d0\uc11c \uc6a9\ub7c9\uc744 \ub2e4\uc2dc \ud655\ubcf4\ud574\uc57c \ud560 \ub54c) \uc0ac\uc6a9\uc790\ub294 \uc120\uc810 \uac00\ub2a5\ud55c \ub178\ub4dc\ub97c \uc624\uc5fc\uc2dc\ucf1c \uc120\uc810 \ub3d9\uc791\uc5d0 \ub300\ud55c \uba85\uc2dc\uc801\uc778 \ud3ec\ub4dc \ud5c8\uc6a9\uc744 \uc694\uad6c\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud14c\uc778\ud2b8\ub85c \uc778\ud574 \ub178\ub4dc\uc758 \uc2a4\ucf00\uc904 \uc18d\uc131\uc774 \ub2ec\ub77c\uc9c0\ubbc0\ub85c \uc5ec\ub7ec EC2 Auto Scaling \uadf8\ub8f9\uc73c\ub85c \ubd84\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\ub294 Expanders \ub77c\ub294 \uac1c\ub150\uc774 \uc788\uc73c\uba70, \ud655\uc7a5\ud560 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc120\ud0dd\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \uc804\ub7b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. --expander=least-waste \uc804\ub7b5\uc740 \uc77c\ubc18\uc801\uc778 \uc6a9\ub3c4\uc758 \uae30\ubcf8 \uc804\ub7b5\uc73c\ub85c, \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4 \ub2e4\uc591\ud654\ub97c \uc704\ud574 \uc5ec\ub7ec \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0 (\uc704 \uc774\ubbf8\uc9c0 \uc124\uba85 \ucc38\uc870) \uc870\uc815 \ud65c\ub3d9 \uc774\ud6c4\uc5d0 \uac00\uc7a5 \uc798 \ud65c\uc6a9\ub418\ub294 \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc758 \ube44\uc6a9\uc744 \ub354\uc6b1 \ucd5c\uc801\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4"},{"location":"cluster-autoscaling/index.kr/#asg","text":"\uc6b0\uc120\uc21c\uc704 \ud655\uc7a5\uae30\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6b0\uc120\uc21c\uc704 \uae30\ubc18 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.`--expander=priority'\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uac00 \ub178\ub4dc \uadf8\ub8f9/ASG\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uc5b4\ub5a4 \uc774\uc720\ub85c\ub4e0 \ud655\uc7a5\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc6b0\uc120 \uc21c\uc704 \ubaa9\ub85d\uc5d0\uc11c \ub2e4\uc74c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4.\uc774\ub294 \uc608\ub97c \ub4e4\uc5b4, GPU\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucd5c\uc801\ud654\ub41c \uc131\ub2a5\uc744 \uc81c\uacf5\ud558\uae30 \ub54c\ubb38\uc5d0 P3 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud558\uc9c0\ub9cc \ub450 \ubc88\uc9f8 \uc635\uc158\uc73c\ub85c P2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: v1 kind: ConfigMap metadata: name: cluster-autoscaler-priority-expander namespace: kube-system data: priorities: |- 10: - .*p2-node-group.* 50: - .*p3-node-group.* \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 p3-node-group \uc774\ub77c\ub294 \uc774\ub984\uacfc \uc77c\uce58\ud558\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4.\uc774 \uc791\uc5c5\uc774 --max-node-provision-time \ub0b4\uc5d0 \uc131\uacf5\ud558\uc9c0 \ubabb\ud558\uba74 p2-node-group \uc774\ub77c\ub294 \uc774\ub984\uacfc \uc77c\uce58\ud558\ub294 EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud655\uc7a5\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc774 \uac12\uc740 \uae30\ubcf8\uc801\uc73c\ub85c 15\ubd84\uc73c\ub85c \uc124\uc815\ub418\uba70 \ub178\ub4dc \uadf8\ub8f9 \uc120\ud0dd\uc758 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uac12\uc774 \ub108\ubb34 \ub0ae\uc73c\uba74 \ubd88\ud544\uc694\ud55c \ud06c\uae30 \uc870\uc815\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \uadf8\ub8f9 \uc6b0\uc120 \uc21c\uc704 \uc9c0\uc815/ASG"},{"location":"cluster-autoscaling/index.kr/#_11","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub9cc \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uace0 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \ub54c\ub294 \ub178\ub4dc\ub97c \uc81c\uac70\ud568\uc73c\ub85c\uc368 \ube44\uc6a9\uc744 \ucd5c\uc18c\ud654\ud569\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \ud3ec\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uae30 \uc804\uc5d0 \ub178\ub4dc \ud655\uc7a5\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub824\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ubc30\ud3ec \uc9c0\uc5f0 \uc2dc\uac04\uc5d0 \uc0c1\ub2f9\ud55c \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\uae30\uae4c\uc9c0 \uba87 \ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc73c\uba70, \uc774\ub85c \uc778\ud574 \ud3ec\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc9c0\uc5f0 \uc2dc\uac04\uc774 10\ubc30 \uc99d\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub9c1 \uc9c0\uc5f0\uc5d0 \ub530\ub978 \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud558\ub294 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd \uc744 \uc0ac\uc6a9\ud558\uba74 \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uacf5\uac04\uc744 \ucc28\uc9c0\ud558\ub294 \uc6b0\uc120 \uc21c\uc704\uac00 \uc74c\uc218\uc778 \uc784\uc2dc \ud30c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\ud604\ub429\ub2c8\ub2e4. \uc0c8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uace0 \uc6b0\uc120 \uc21c\uc704\uac00 \ub354 \ub192\uc740 \uacbd\uc6b0, \uc784\uc2dc \ud30c\ub4dc\ub97c \uc120\uc810\ud558\uc5ec \uacf5\uac04\uc744 \ud655\ubcf4\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc784\uc2dc \ud3ec\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub418\uc5b4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc0c8 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub3c4\ub85d \ud2b8\ub9ac\uac70\ub429\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc73c\ub85c \uc5bb\uc744 \uc218 \uc788\ub294 \uadf8\ub2e4\uc9c0 \ubd84\uba85\ud558\uc9c0 \uc54a\uc740 \ub2e4\ub978 \uc774\uc810\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc774 \uc5c6\uc73c\uba74 \ud65c\uc6a9\ub3c4\uac00 \ub192\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ubd80\uc791\uc6a9 \uc911 \ud558\ub098\ub294 \ud30c\ub4dc\uac00 \ud30c\ub4dc \ub610\ub294 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\uc758 preferredDuringSchedulingIgnoredDuringExecution \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucd5c\uc801\uc758 \uc2a4\ucf00\uc904\ub9c1 \uacb0\uc815\uc744 \ub0b4\ub9ac\uc9c0 \ubabb\ud55c\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \uc0ac\ub840\ub294 AntiAffinity\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac00\uc6a9\uc131 \uc601\uc5ed \uac04\uc5d0 \uac00\uc6a9\uc131\uc774 \ub192\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub97c \ubd84\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\uc740 \uc62c\ubc14\ub978 \uc601\uc5ed\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\ub2a5\uc131\uc744 \ud06c\uac8c \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc6a9\ub7c9\uc758 \uc591\uc740 \uc870\uc9c1\uc758 \uc2e0\uc911\ud55c \ube44\uc988\ub2c8\uc2a4 \uacb0\uc815\uc785\ub2c8\ub2e4.\ud575\uc2ec\uc740 \uc131\ub2a5\uacfc \ube44\uc6a9 \uac04\uc758 \uade0\ud615\uc785\ub2c8\ub2e4.\uc774 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ud3c9\uade0 \ud655\uc7a5 \ube48\ub3c4\ub97c \uacc4\uc0b0\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc73c\ub85c \ub098\ub204\ub294 \uac83\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud3c9\uade0\uc801\uc73c\ub85c 30\ucd08\ub9c8\ub2e4 \uc0c8 \ub178\ub4dc\uac00 \ud544\uc694\ud558\uace0 EC2\uc5d0\uc11c \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \ub370 30\ucd08\uac00 \uac78\ub9b0\ub2e4\uba74, \ub2e8\uc77c \ub178\ub4dc\ub97c \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \ud56d\uc0c1 \ucd94\uac00 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\ubbc0\ub85c EC2 \uc778\uc2a4\ud134\uc2a4 \ud558\ub098\ub97c \ucd94\uac00\ud558\ub294 \ub370 \ub4dc\ub294 \ube44\uc6a9\uc73c\ub85c \uc608\uc57d \uc9c0\uc5f0 \uc2dc\uac04\uc744 30\ucd08\uae4c\uc9c0 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc601\uc5ed \uc2a4\ucf00\uc904\ub9c1 \uacb0\uc815\uc744 \uac1c\uc120\ud558\ub824\uba74 EC2 Auto Scaling \uadf8\ub8f9\uc758 \uac00\uc6a9 \uc601\uc5ed \uc218\uc640 \ub3d9\uc77c\ud55c \uc218\uc758 \ub178\ub4dc\ub97c \uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec\uac00 \uc218\uc2e0 \ud3ec\ub4dc\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc601\uc5ed\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624.","title":"\uc624\ubc84\ud504\ub85c\ube44\uc800\ub2dd"},{"location":"cluster-autoscaling/index.kr/#_12","text":"\uc77c\ubd80 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc81c\uac70\ud558\ub294\ub370 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4ed\ub2c8\ub2e4. \ube45\ub370\uc774\ud130 \ubd84\uc11d, \uba38\uc2e0 \ub7ec\ub2dd \uc791\uc5c5, \ud14c\uc2a4\ud2b8 \ub7ec\ub108\ub294 \uacb0\uad6d\uc5d0\ub294 \uc644\ub8cc\ub418\uc9c0\ub9cc \uc911\ub2e8\ub420 \uacbd\uc6b0 \ub2e4\uc2dc \uc2dc\uc791\ud574\uc57c \ud569\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc2a4\ucf00\uc77c \ub2e4\uc6b4-\uc0ac\uc6a9\ub960 \uc784\uacc4\uac12 \uc774\ud558\ub85c \ubaa8\ub4e0 \ub178\ub4dc\ub97c \ucd95\uc18c\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70, \uc774\ub85c \uc778\ud574 \ub178\ub4dc\uc5d0 \ub0a8\uc544 \uc788\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\uac70 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ud30c\ub4dc\ub97c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc778\uc2dd\ud558\ub294 \ub808\uc774\ube14\ub85c \ubcf4\ud638\ud568\uc73c\ub85c\uc368 \uc774\ub97c \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc\ub97c \uc81c\uac70\ud558\ub294 \ub370 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ucf54\ub4dc\uc5d0\ub294 cluster-autoscaler.kubernetes.io/safe-to-evict=false \ub77c\ub294 \uc5b4\ub178\ucf00\uc774\uc158\uc774 \ubd99\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ucd95\ucd9c \ubc29\uc9c0"},{"location":"cluster-autoscaling/index.kr/#_13","text":"","title":"\uace0\uae09 \uc0ac\uc6a9 \uc0ac\ub840"},{"location":"cluster-autoscaling/index.kr/#ebs","text":"\uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub610\ub294 \ubd84\uc0b0 \uce90\uc2dc\uc640 \uac19\uc740 \uc0c1\ud0dc \uc800\uc7a5 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ucd95\ud558\ub294 \ub370 \ub9e4\uc6b0 \uc911\uc694\ud569\ub2c8\ub2e4. EBS \ubcfc\ub968 \uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub7ec\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \uc9c0\uc6d0\ud558\uc9c0\ub9cc \ud2b9\uc815 \uc601\uc5ed\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \uac01 AZ\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec AZ\uc5d0\uc11c \uc0e4\ub529\ud558\uba74 \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc774 \ub192\uc544\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 EC2 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9 \uc2a4\ucf00\uc77c\ub9c1\uc758 \uade0\ud615\uc744 \ub9de\ucd9c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc \uadf8\ub8f9 \ubc38\ub7f0\uc2f1\uc740 balance-similar-node-groups=true \ub85c \uc124\uc815\ud558\uc5ec \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc740 \uac00\uc6a9 \uc601\uc5ed\uacfc EBS \ubcfc\ub968\uc774 \ub2e4\ub974\ub2e4\ub294 \uc810\uc744 \uc81c\uc678\ud558\uba74 \ub3d9\uc77c\ud55c \uc124\uc815\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4.","title":"EBS \ubcfc\ub968"},{"location":"cluster-autoscaling/index.kr/#_14","text":"\uba38\uc2e0 \ub7ec\ub2dd \ubd84\uc0b0 \uad50\uc721 \uc791\uc5c5\uc740 \ub3d9\uc77c \uc601\uc5ed \ub178\ub4dc \uad6c\uc131\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ucd5c\uc18c\ud654\ud568\uc73c\ub85c\uc368 \uc0c1\ub2f9\ud55c \uc774\uc810\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub294 \ud2b9\uc815 \uc601\uc5ed\uc5d0 \uc5ec\ub7ec \uac1c\uc758 \ud3ec\ub4dc\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4.\uc774\ub294 '\ud1a0\ud3f4\ub85c\uc9c0\ud0a4: failure-domain.beta.kubernetes.io/zone'\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \uacf5\ub3d9 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\uc5d0 \ud30c\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc124\uc815\ud558\uac70\ub098 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc124\uc815\ud568\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\ub2e4.\uadf8\ub7ec\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc218\uc694\uc5d0 \ub9de\ucdb0 \ud2b9\uc815 \uc601\uc5ed\uc744 \ud655\uc7a5\ud569\ub2c8\ub2e4.\uac00\uc6a9 \uc601\uc5ed\ub2f9 \ud558\ub098\uc529 \uc5ec\ub7ec EC2 Auto Scaling \uadf8\ub8f9\uc744 \ud560\ub2f9\ud558\uc5ec \ud568\uaed8 \uc608\uc57d\ub41c \uc804\uccb4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud574 \ud398\uc77c\uc624\ubc84\ub97c \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. balance-similar-node-groups=false \ub97c \uc124\uc815\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9 \ubc38\ub7f0\uc2f1\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc9c0\uc5ed \ubc0f \uc601\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc774 \ubaa8\ub450 \ud3ec\ud568\ub41c \uacbd\uc6b0 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0 \ubc0f/\ub610\ub294 \ud3ec\ub4dc \uc120\uc810 \uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. [Node Affinity] (https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity) \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\uc5ed \ud30c\ub4dc\uac00 \uc601\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc744 \ud53c\ud558\ub3c4\ub85d \uac15\uc694\ud558\uac70\ub098 \uc7a5\ub824\ud558\uace0, \uadf8 \ubc18\ub300\uc758 \uacbd\uc6b0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc785\ub2c8\ub2e4. \uc601\uc5ed \ud3ec\ub4dc\uac00 \uc9c0\uc5ed \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 \uc9c0\uc5ed \ud30c\ub4dc\uc758 \uc6a9\ub7c9 \ubd88\uade0\ud615\uc774 \ucd08\ub798\ub429\ub2c8\ub2e4. \uc601\uc5ed \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc911\ub2e8 \ubc0f \uc7ac\ubc30\uce58\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 [Pod Preemption] (https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/) \uc744 \uad6c\uc131\ud558\uc5ec \uc9c0\uc5ed\uc801\uc73c\ub85c \uaddc\ubaa8\uac00 \uc870\uc815\ub41c \ud3ec\ub4dc\uac00 \uacbd\uc7c1\uc774 \ub35c\ud55c \uad6c\uc5ed\uc744 \uc120\uc810\ud558\uace0 \uc77c\uc815\uc744 \uc870\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624.","title":"\uacf5\ub3d9 \uc2a4\ucf00\uc904\ub9c1"},{"location":"cluster-autoscaling/index.kr/#_15","text":"\uc77c\ubd80 \ud074\ub7ec\uc2a4\ud130\ub294 GPU\uc640 \uac19\uc740 \ud2b9\uc218 \ud558\ub4dc\uc6e8\uc5b4 \uac00\uc18d\uae30\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc77c\uc544\uc6c3 \uc2dc \uac00\uc18d\uae30 \uc7a5\uce58 \ud50c\ub7ec\uadf8\uc778\uc774 \ub9ac\uc18c\uc2a4\ub97c \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc54c\ub9ac\ub294 \ub370 \uba87 \ubd84 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc774 \ub178\ub4dc\uc5d0 \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\uc744 \uac83\uc774\ub77c\uace0 \uc2dc\ubbac\ub808\uc774\uc158\ud588\uc9c0\ub9cc, \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc900\ube44\ub418\uace0 \ub178\ub4dc\uc758 \uac00\uc6a9 \ub9ac\uc18c\uc2a4\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \ub178\ub4dc\uc5d0\uc11c \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \ubc18\ubcf5\uc801\uc778 \ubd88\ud544\uc694\ud55c \ud655\uc7a5 \uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uac00\uc18d\uae30\uac00 \uc788\uace0 CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960\uc774 \ub192\uc740 \ub178\ub4dc\ub294 \uac00\uc18d\uae30\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub354\ub77c\ub3c4 \ucd95\uc18c\uac00 \uace0\ub824\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \uac00\uc18d\uae30\uc758 \uc0c1\ub300\uc801 \ube44\uc6a9 \ub54c\ubb38\uc5d0 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub300\uc2e0 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ube44\uc5b4\uc788\ub294 \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\ub294 \uacbd\uc6b0 \ub178\ub4dc \ucd95\uc18c\ub97c \uace0\ub824\ud558\ub294 \ud2b9\uc218 \uaddc\uce59\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0\uc5d0 \uc62c\ubc14\ub974\uac8c \ub3d9\uc791\ud558\ub3c4\ub85d \uac00\uc18d\uae30 \ub178\ub4dc\uc758 kubelet\uc744 \uad6c\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc785\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc\uc5d0 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \uc774 \ub808\uc774\ube14 \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc561\uc140\ub7ec\ub808\uc774\ud130 \ucd5c\uc801\ud654 \ub3d9\uc791\uc744 \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. GPU \ub178\ub4dc\uc6a9 Kubelet\uc740 --node-labels k8s.amazonaws.com/accelerator=$ACCELERATOR_TYPE \uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc561\uc140\ub7ec\ub808\uc774\ud130\uac00 \uc788\ub294 \ub178\ub4dc\ub294 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uac83\uacfc \ub3d9\uc77c\ud55c \uc2a4\ucf00\uc904\ub9c1 \uc18d\uc131 \uaddc\uce59\uc744 \uc900\uc218\ud569\ub2c8\ub2e4.","title":"\uc561\uc140\ub7ec\ub808\uc774\ud130"},{"location":"cluster-autoscaling/index.kr/#0","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc744 0\uae4c\uc9c0 \ub610\ub294 0\ubd80\ud130 \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4 \ube44\uc6a9\uc744 \ud06c\uac8c \uc808\uac10\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Auto Scaling \uadf8\ub8f9\uc758 \uc2dc\uc791 \uad6c\uc131 \ub610\ub294 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0 \uc9c0\uc815\ub41c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uac80\uc0ac\ud558\uc5ec Auto Scaling \uadf8\ub8f9\uc758 CPU, \uba54\ubaa8\ub9ac \ubc0f GPU \ub9ac\uc18c\uc2a4\ub97c \ud0d0\uc9c0\ud569\ub2c8\ub2e4. \uc77c\ubd80 \ud3ec\ub4dc\uc5d0\ub294 \uc2dc\uc791 \uad6c\uc131\uc5d0\uc11c \uac80\uc0c9\ud560 \uc218 \uc5c6\ub294 WindowsENI or PrivateIPv4Address \ub610\ub294 \ud2b9\uc815 \ub178\ub4dc \uc120\ud0dd\uae30 \ub610\ub294 \ud14c\uc778\ud2b8\uc640 \uac19\uc740 \ucd94\uac00 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 EC2 Auto Scaling Group\uc758 \ud0dc\uadf8\uc5d0\uc11c \uc774\ub7ec\ud55c \uc694\uc18c\ub97c \ubc1c\uacac\ud558\uc5ec \uc774\ub7ec\ud55c \uc694\uc18c\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Key: k8s.io/cluster-autoscaler/node-template/resources/$RESOURCE_NAME Value: 5 Key: k8s.io/cluster-autoscaler/node-template/label/$LABEL_KEY Value: $LABEL_VALUE Key: k8s.io/cluster-autoscaler/node-template/taint/$TAINT_KEY Value: NoSchedule \ucc38\uace0: 0\uc73c\ub85c \ud655\uc7a5\ud560 \uacbd\uc6b0 \uc6a9\ub7c9\uc740 EC2\ub85c \ubc18\ud658\ub418\uba70 \ud5a5\ud6c4\uc5d0\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"0\ubd80\ud130 \uc2a4\ucf00\uc77c\ub9c1"},{"location":"cluster-autoscaling/index.kr/#additional-parameters","text":"\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc758 \ub3d9\uc791\uacfc \uc131\ub2a5\uc744 \uc870\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ce\uc740 \uad6c\uc131 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub77c\ubbf8\ud130\uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 Github \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub77c\ubbf8\ud130 \uc124\uba85 Default scan-interval \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5 \ub610\ub294 \ucd95\uc18c\ub97c \uc704\ud55c \uc7ac\ud3c9\uac00 \ube48\ub3c4 10 \ucd08 max-empty-bulk-delete \ub3d9\uc2dc\uc5d0 \uc0ad\uc81c\ud560 \uc218 \uc788\ub294 \ube48 \ub178\ub4dc\uc758 \ucd5c\ub300 \uc218 10 scale-down-delay-after-add \uc2a4\ucf00\uc77c \uc5c5 \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uc2dc\uac04 10 \ubd84 scale-down-delay-after-delete \ub178\ub4dc \uc0ad\uc81c \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uc2dc\uac04, \uae30\ubcf8\uac12\uc740 scan-interval scan-interval scale-down-delay-after-failure \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc2e4\ud328 \ud6c4 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud3c9\uac00\uac00 \uc7ac\uac1c\ub418\ub294 \uae30\uac04 3 \ubd84 scale-down-unneeded-time \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc73c\ub824\uba74 \ud574\ub2f9 \ub178\ub4dc\uac00 \ubd88\ud544\uc694\ud574\uc57c \ud558\ub294 \uae30\uac04 10 \ubd84 scale-down-unready-time \uc900\ube44\ub418\uc9c0 \uc54a\uc740 \ub178\ub4dc\uac00 \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ub300\uc0c1\uc774 \ub418\uae30\uae4c\uc9c0 \ubd88\ud544\uc694\ud558\uac8c \ub418\ub294 \uae30\uac04 20\ubd84 scale-down-utilization-threshold \ub178\ub4dc \uc0ac\uc6a9\ub960 \uc218\uc900, \uc694\uccad\ub41c \ub9ac\uc18c\uc2a4\uc758 \ud569\uacc4\ub97c \uc6a9\ub7c9\uc73c\ub85c \ub098\ub208 \uac12\uc73c\ub85c \uc815\uc758\ub418\uba70, \uc774 \uc218\uc900 \uc774\ud558\ub85c \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc74c 0.5 scale-down-non-empty-candidates-count \ud55c \ubc88\uc758 \ubc18\ubcf5\uc5d0\uc11c \ub4dc\ub808\uc778\uc744 \ud1b5\ud55c \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ub300\uc0c1\uc73c\ub85c \uac04\uc8fc\ub418\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd5c\ub300 \ub178\ub4dc\uc758 \uc218. \uac12\uc774 \ub0ae\uc744\uc218\ub85d CA \uc751\ub2f5\uc131\uc740 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0 \uc2dc\uac04\uc740 \ub354 \ub290\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac12\uc774 \ub192\uc744\uc218\ub85d \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 (\uc218\ubc31 \uac1c \ub178\ub4dc) \uc758 CA \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ud734\ub9ac\uc2a4\ud2f1\uc744 \ub044\ub824\uba74 \uc591\uc218\uac00 \uc544\ub2cc \uac12\uc73c\ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. CA\ub294 \uace0\ub824\ud558\ub294 \ub178\ub4dc \uc218\ub97c \uc81c\ud55c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. 30 scale-down-candidates-pool-ratio \uc774\uc804 \ubc18\ubcf5\uc758 \uc77c\ubd80 \ud6c4\ubcf4\uac00 \ub354 \uc774\uc0c1 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \ub54c \ucd95\uc18c\ud560 \uc218 \uc788\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd94\uac00 \ud6c4\ubcf4\ub85c \uac04\uc8fc\ub418\ub294 \ub178\ub4dc\uc758 \ube44\uc728\uc785\ub2c8\ub2e4.\uac12\uc774 \ub0ae\uc744\uc218\ub85d CA \uc751\ub2f5\uc131\uc740 \ud5a5\uc0c1\ub418\uc9c0\ub9cc \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \uc9c0\uc5f0 \uc2dc\uac04\uc740 \ub354 \ub290\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uac12\uc774 \ub192\uc744\uc218\ub85d \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 (\uc218\ubc31 \uac1c \ub178\ub4dc) \uc758 CA \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ud734\ub9ac\uc2a4\ud2f1\uc744 \ub044\ub824\uba74 1.0\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. CA\ub294 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \ucd94\uac00 \ud6c4\ubcf4\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. 0.1 scale-down-candidates-pool-min-count \uc774\uc804 \ubc18\ubcf5\uc758 \uc77c\ubd80 \ud6c4\ubcf4\uac00 \ub354 \uc774\uc0c1 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ucd95\uc18c\ud560 \uc218 \uc788\ub294 \ube44\uc5b4 \uc788\uc9c0 \uc54a\uc740 \ucd94\uac00 \ud6c4\ubcf4\ub85c \uac04\uc8fc\ub418\ub294 \ucd5c\uc18c \ub178\ub4dc \uc218. \ucd94\uac00 \ud6c4\ubcf4\uc758 \ud480 \ud06c\uae30\ub97c \uacc4\uc0b0\ud560 \ub54c\ub294 \ucd5c\ub300\uac12 (\ub178\ub4dc\uc218 * \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ube44\uc728, \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ube44\uc728, \uc2a4\ucf00\uc77c \ub2e4\uc6b4 \ud6c4\ubcf4-\ud480 \ucd5c\uc18c \uac1c\uc218) \uc73c\ub85c \ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4. 50","title":"Additional Parameters"},{"location":"cluster-autoscaling/index.kr/#_16","text":"\uc774 \ud398\uc774\uc9c0\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ud504\ub808\uc820\ud14c\uc774\uc158 \ubc0f \ub370\ubaa8 \ubaa9\ub85d\uc774 \ub4e4\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\uc5ec\uae30\uc5d0 \ud504\ub808\uc820\ud14c\uc774\uc158\uc774\ub098 \ub370\ubaa8\ub97c \ucd94\uac00\ud558\ub824\uba74 \ud480 \ub9ac\ud018\uc2a4\ud2b8\ub97c \ubcf4\ub0b4\uc8fc\uc138\uc694. \ud504\ub808\uc820\ud14c\uc774\uc158 \ub370\ubaa8 \ubc1c\ud45c\uc790 Autoscaling and Cost Optimization on Kubernetes: From 0 to 100 Guy Templeton, Skyscanner & Jiaxin Shan, Amazon SIG-Autoscaling Deep Dive Maciek Pytel & Marcin Wielgus","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"cluster-autoscaling/index.kr/#_17","text":"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md https://github.com/aws/amazon-ec2-instance-selector https://github.com/aws/aws-node-termination-handler","title":"\ucc38\uace0 \ubb38\ud5cc"},{"location":"cost_optimization/awareness/","text":"Expenditure awareness \u00b6 Expenditure awareness is understanding who, where and what is causing expenditures in your EKS cluster. Getting an accurate picture of this data will help raise awareness of your spend and highlight areas to remediate. Recommendations \u00b6 Use Cost Explorer \u00b6 AWS Cost Explorer has an easy-to-use interface that lets you visualize, understand, and manage your AWS costs and usage over time. You can analyze cost and usage data, at various levels using the filters available in Cost Explorer. EKS Control Plane and EKS Fargate costs \u00b6 Using the filters, we can query the costs incurred for the EKS costs at the Control Plane and Fargate Pod as shown in the diagram below: Using the filters, we can query the aggregate costs incurred for the Fargate Pods across regions in EKS - which includes both vCPU-Hours per CPU and GB Hrs as shown in the diagram below: Tagging of Resources \u00b6 Amazon EKS supports adding AWS tags to your Amazon EKS clusters. This makes it easy to control access to the EKS API for managing your clusters. Tags added to an EKS cluster are specific to the AWS EKS cluster resource, they do not propagate to other AWS resources used by the cluster such as EC2 instances or load balancers. Today, cluster tagging is supported for all new and existing EKS clusters via the AWS API, Console, and SDKs. AWS Fargate is a technology that provides on-demand, right-sized compute capacity for containers. Before you can schedule pods on Fargate in your cluster, you must define at least one Fargate profile that specifies which pods should use Fargate when they are launched. Adding and Listing tags to an EKS cluster: $ aws eks tag-resource --resource-arn arn:aws:eks:us-west-2:xxx:cluster/ekscluster1 --tags team=devops,env=staging,bu=cio,costcenter=1234 $ aws eks list-tags-for-resource --resource-arn arn:aws:eks:us-west-2:xxx:cluster/ekscluster1 { \"tags\": { \"bu\": \"cio\", \"env\": \"staging\", \"costcenter\": \"1234\", \"team\": \"devops\" } } After you activate cost allocation tags in the AWS Cost Explorer , AWS uses the cost allocation tags to organize your resource costs on your cost allocation report, to make it easier for you to categorize and track your AWS costs. Tags don't have any semantic meaning to Amazon EKS and are interpreted strictly as a string of characters. For example, you can define a set of tags for your Amazon EKS clusters to help you track each cluster's owner and stack level. Use AWS Trusted Advisor \u00b6 AWS Trusted Advisor offers a rich set of best practice checks and recommendations across five categories: cost optimization; security; fault tolerance; performance; and service limits. For Cost Optimization, Trusted Advisor helps eliminate unused and idle resources and recommends making commitments to reserved capacity. The key action items that will help Amazon EKS will be around low utilsed EC2 instances, unassociated Elastic IP addresses, Idle Load Balancers, underutilized EBS volumes among other things. The complete list of checks are provided at https://aws.amazon.com/premiumsupport/technology/trusted-advisor/best-practice-checklist/. The Trusted Advisor also provides Savings Plans and Reserved Instances recommendations for EC2 instances and Fargate which allows you to commit to a consistent usage amount in exchange for discounted rates. Note that the recommendations from Trusted Advisor are generic recommendations and not specific to EKS. Use the Kubernetes dashboard \u00b6 Kubernetes dashboard Kubernetes Dashboard is a general purpose, web-based UI for Kubernetes clusters, which provides information about the Kubernetes cluster including the resource usage at a cluster, node and pod level. The deployment of the Kubernetes dashboard on an Amazon EKS cluster is described in the Amazon EKS documentation . Dashboard provides resource usage breakdowns for each node and pod, as well as detailed metadata about pods, services, Deployments, and other Kubernetes objects. This consolidated information provides visibility into your Kubernetes environment. kubectl top and describe commands Viewing resource usage metrics with kubectl top and kubectl describe commands. kubectl top will show current CPU and memory usage for the pods or nodes across your cluster, or for a specific pod or node. The kubectl describe command will give more detailed information about a specific node or a pod. $ kubectl top pods $ kubectl top nodes $ kubectl top pod pod-name --namespace mynamespace --containers Using the top command, the output will displays the total amount of CPU (in cores) and memory (in MiB) that the node is using, and the percentages of the node\u2019s allocatable capacity those numbers represent. You can then drill-down to the next level, container level within pods by adding a --containers flag. $ kubectl describe node <node> $ kubectl describe pod <pod> kubectl describe returns the percent of total available capacity that each resource request or limit represents. kubectl top and describe, track the utilization and availability of critical resources such as CPU, memory, and storage across kubernetes pods, nodes and containers. This awareness will help in understanding resource usage and help in controlling costs. Use CloudWatch Container Insights \u00b6 Use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices. Container Insights is available for Amazon Elastic Kubernetes Service on EC2, and Kubernetes platforms on Amazon EC2. The metrics include utilization for resources such as CPU, memory, disk, and network. The installation of insights is given in the documentation . CloudWatch creates aggregated metrics at the cluster, node, pod, task, and service level as CloudWatch metrics. The following query shows a list of nodes, sorted by average node CPU utilization STATS avg(node_cpu_utilization) as avg_node_cpu_utilization by NodeName | SORT avg_node_cpu_utilization DESC CPU usage by Container name stats pct(container_cpu_usage_total, 50) as CPUPercMedian by kubernetes.container_name | filter Type=\"Container\" Disk usage by Container name stats floor(avg(container_filesystem_usage/1024)) as container_filesystem_usage_avg_kb by InstanceId, kubernetes.container_name, device | filter Type=\"ContainerFS\" | sort container_filesystem_usage_avg_kb desc More sample queries are given in the Container Insights documention This awareness will help in understanding resource usage and help in controlling costs. Using KubeCost for expenditure awareness and guidance \u00b6 Third party tools like kubecost can also be deployed on Amazon EKS to get visibility into cost of running your Kubernetes cluster. Please refer to this AWS blog for tracking costs using Kubecost Deploying kubecost using Helm 3: $ curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash $ helm version --short v3.2.1+gfe51cd1 $ helm repo add stable https://kubernetes-charts.storage.googleapis.com/ $ helm repo add stable https://kubernetes-charts.storage.googleapis.com/c^C $ kubectl create namespace kubecost namespace/kubecost created $ helm repo add kubecost https://kubecost.github.io/cost-analyzer/ \"kubecost\" has been added to your repositories $ helm install kubecost kubecost/cost-analyzer --namespace kubecost --set kubecostToken=\"aGRoZEBqc2pzLmNvbQ==xm343yadf98\" NAME: kubecost LAST DEPLOYED: Mon May 18 08:49:05 2020 NAMESPACE: kubecost STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: --------------------------------------------------Kubecost has been successfully installed. When pods are Ready, you can enable port-forwarding with the following command: kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090 Next, navigate to http://localhost:9090 in a web browser. $ kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090 Note: If you are using Cloud 9 or have a need to forward it to a different port like 8080, issue the following command $ kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 8080:9090 Kube Cost Dashboard - Use Kubernetes Cost Allocation and Capacity Planning Analytics Tool \u00b6 Kubernetes Opex Analytics is a tool to help organizations track the resources being consumed by their Kubernetes clusters to prevent overpaying. To do so it generates, short- (7 days), mid- (14 days) and long-term (12 months) usage reports showing relevant insights on what amount of resources each project is spending over time. Magalix Kubeadvisor \u00b6 KubeAdvisor continuously scans your Kubernetes clusters and reports how you can fix issues, apply best practices, and optimize your cluster (with recommendations of resources like CPU/Memory around cost-efficiency). Spot.io, previously called Spotinst \u00b6 Spotinst Ocean is an application scaling service. Similar to Amazon Elastic Compute Cloud (Amazon EC2) Auto Scaling groups, Spotinst Ocean is designed to optimize performance and costs by leveraging Spot Instances combined with On-Demand and Reserved Instances. Using a combination of automated Spot Instance management and the variety of instance sizes, the Ocean cluster autoscaler scales according to the pod resource requirements. Spotinst Ocean also includes a prediction algorithm to predict Spot Instance interruption 15 minutes ahead of time and spin up a new node in a different Spot capacity pool. This is available as an AWS Quickstart developed by Spotinst, Inc. in collaboration with AWS. The EKS workshop also has a module on Optimized Worker Node on Amazon EKS Management with Ocean by Spot.io which includes sections on cost allocation, right sizing and scaling strategies. Yotascale \u00b6 Yotascale helps with accurately allocating Kubernetes costs. Yotascale Kubernetes Cost Allocation feature utilizes actual cost data, which is inclusive of Reserved Instance discounts and spot instance pricing instead of generic market-rate estimations, to inform the total Kubernetes cost footprint More details can be found at their website . Alcide Advisor \u00b6 Alcide is an AWS Partner Network (APN) Advanced Technology Partner. Alcide Advisor helps ensure your Amazon EKS cluster, nodes, and pods configuration are tuned to run according to security best practices and internal guidelines. Alcide Advisor is an agentless service for Kubernetes audit and compliance that\u2019s built to ensure a frictionless and secured DevSecOps flow by hardening the development stage before moving to production. More details can be found in this blog post . Other tools \u00b6 Kubernetes Garbage Collection \u00b6 The role of the Kubernetes garbage collector is to delete certain objects that once had an owner, but no longer have an owner. Fargate count \u00b6 Fargatecount is an useful tool, which allows AWS customers to track, with a custom CloudWatch metric, the total number of EKS pods that have been deployed on Fargate in a specific region of a specific account. This helps in keeping track of all the Fargate pods running across an EKS cluster. Kubernetes Ops View \u00b6 Kube Ops View is an useful tool, which provides a common operational picture visually for multiple Kubernetes clusters. git clone https://github.com/hjacobs/kube-ops-view cd kube-ops-view kubectl apply -k deploy/ Popeye - A Kubernetes Cluster Sanitizer \u00b6 Popeye - A Kubernetes Cluster Sanitizer is a utility that scans live Kubernetes cluster and reports potential issues with deployed resources and configurations. It sanitizes your cluster based on what's deployed and not what's sitting on disk. By scanning your cluster, it detects misconfigurations and helps you to ensure that best practices are in place Resources \u00b6 Refer to the following resources to learn more about best practices for cost optimization. Documentation and Blogs + Amazon EKS supports tagging Tools + What is AWS Billing and Cost Management? + Amazon CloudWatch Container Insights + How to track costs in multi-tenant Amazon EKS clusters using Kubecost + Kube Cost + Kube Opsview + Kube Janitor + Kubernetes Opex Analytics","title":"Expenditure awareness"},{"location":"cost_optimization/awareness/#expenditure-awareness","text":"Expenditure awareness is understanding who, where and what is causing expenditures in your EKS cluster. Getting an accurate picture of this data will help raise awareness of your spend and highlight areas to remediate.","title":"Expenditure awareness"},{"location":"cost_optimization/awareness/#recommendations","text":"","title":"Recommendations"},{"location":"cost_optimization/awareness/#use-cost-explorer","text":"AWS Cost Explorer has an easy-to-use interface that lets you visualize, understand, and manage your AWS costs and usage over time. You can analyze cost and usage data, at various levels using the filters available in Cost Explorer.","title":"Use Cost Explorer"},{"location":"cost_optimization/awareness/#eks-control-plane-and-eks-fargate-costs","text":"Using the filters, we can query the costs incurred for the EKS costs at the Control Plane and Fargate Pod as shown in the diagram below: Using the filters, we can query the aggregate costs incurred for the Fargate Pods across regions in EKS - which includes both vCPU-Hours per CPU and GB Hrs as shown in the diagram below:","title":"EKS Control Plane and EKS Fargate costs"},{"location":"cost_optimization/awareness/#tagging-of-resources","text":"Amazon EKS supports adding AWS tags to your Amazon EKS clusters. This makes it easy to control access to the EKS API for managing your clusters. Tags added to an EKS cluster are specific to the AWS EKS cluster resource, they do not propagate to other AWS resources used by the cluster such as EC2 instances or load balancers. Today, cluster tagging is supported for all new and existing EKS clusters via the AWS API, Console, and SDKs. AWS Fargate is a technology that provides on-demand, right-sized compute capacity for containers. Before you can schedule pods on Fargate in your cluster, you must define at least one Fargate profile that specifies which pods should use Fargate when they are launched. Adding and Listing tags to an EKS cluster: $ aws eks tag-resource --resource-arn arn:aws:eks:us-west-2:xxx:cluster/ekscluster1 --tags team=devops,env=staging,bu=cio,costcenter=1234 $ aws eks list-tags-for-resource --resource-arn arn:aws:eks:us-west-2:xxx:cluster/ekscluster1 { \"tags\": { \"bu\": \"cio\", \"env\": \"staging\", \"costcenter\": \"1234\", \"team\": \"devops\" } } After you activate cost allocation tags in the AWS Cost Explorer , AWS uses the cost allocation tags to organize your resource costs on your cost allocation report, to make it easier for you to categorize and track your AWS costs. Tags don't have any semantic meaning to Amazon EKS and are interpreted strictly as a string of characters. For example, you can define a set of tags for your Amazon EKS clusters to help you track each cluster's owner and stack level.","title":"Tagging of Resources"},{"location":"cost_optimization/awareness/#use-aws-trusted-advisor","text":"AWS Trusted Advisor offers a rich set of best practice checks and recommendations across five categories: cost optimization; security; fault tolerance; performance; and service limits. For Cost Optimization, Trusted Advisor helps eliminate unused and idle resources and recommends making commitments to reserved capacity. The key action items that will help Amazon EKS will be around low utilsed EC2 instances, unassociated Elastic IP addresses, Idle Load Balancers, underutilized EBS volumes among other things. The complete list of checks are provided at https://aws.amazon.com/premiumsupport/technology/trusted-advisor/best-practice-checklist/. The Trusted Advisor also provides Savings Plans and Reserved Instances recommendations for EC2 instances and Fargate which allows you to commit to a consistent usage amount in exchange for discounted rates. Note that the recommendations from Trusted Advisor are generic recommendations and not specific to EKS.","title":"Use AWS Trusted Advisor"},{"location":"cost_optimization/awareness/#use-the-kubernetes-dashboard","text":"Kubernetes dashboard Kubernetes Dashboard is a general purpose, web-based UI for Kubernetes clusters, which provides information about the Kubernetes cluster including the resource usage at a cluster, node and pod level. The deployment of the Kubernetes dashboard on an Amazon EKS cluster is described in the Amazon EKS documentation . Dashboard provides resource usage breakdowns for each node and pod, as well as detailed metadata about pods, services, Deployments, and other Kubernetes objects. This consolidated information provides visibility into your Kubernetes environment. kubectl top and describe commands Viewing resource usage metrics with kubectl top and kubectl describe commands. kubectl top will show current CPU and memory usage for the pods or nodes across your cluster, or for a specific pod or node. The kubectl describe command will give more detailed information about a specific node or a pod. $ kubectl top pods $ kubectl top nodes $ kubectl top pod pod-name --namespace mynamespace --containers Using the top command, the output will displays the total amount of CPU (in cores) and memory (in MiB) that the node is using, and the percentages of the node\u2019s allocatable capacity those numbers represent. You can then drill-down to the next level, container level within pods by adding a --containers flag. $ kubectl describe node <node> $ kubectl describe pod <pod> kubectl describe returns the percent of total available capacity that each resource request or limit represents. kubectl top and describe, track the utilization and availability of critical resources such as CPU, memory, and storage across kubernetes pods, nodes and containers. This awareness will help in understanding resource usage and help in controlling costs.","title":"Use the Kubernetes dashboard"},{"location":"cost_optimization/awareness/#use-cloudwatch-container-insights","text":"Use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices. Container Insights is available for Amazon Elastic Kubernetes Service on EC2, and Kubernetes platforms on Amazon EC2. The metrics include utilization for resources such as CPU, memory, disk, and network. The installation of insights is given in the documentation . CloudWatch creates aggregated metrics at the cluster, node, pod, task, and service level as CloudWatch metrics. The following query shows a list of nodes, sorted by average node CPU utilization STATS avg(node_cpu_utilization) as avg_node_cpu_utilization by NodeName | SORT avg_node_cpu_utilization DESC CPU usage by Container name stats pct(container_cpu_usage_total, 50) as CPUPercMedian by kubernetes.container_name | filter Type=\"Container\" Disk usage by Container name stats floor(avg(container_filesystem_usage/1024)) as container_filesystem_usage_avg_kb by InstanceId, kubernetes.container_name, device | filter Type=\"ContainerFS\" | sort container_filesystem_usage_avg_kb desc More sample queries are given in the Container Insights documention This awareness will help in understanding resource usage and help in controlling costs.","title":"Use CloudWatch Container Insights"},{"location":"cost_optimization/awareness/#using-kubecost-for-expenditure-awareness-and-guidance","text":"Third party tools like kubecost can also be deployed on Amazon EKS to get visibility into cost of running your Kubernetes cluster. Please refer to this AWS blog for tracking costs using Kubecost Deploying kubecost using Helm 3: $ curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash $ helm version --short v3.2.1+gfe51cd1 $ helm repo add stable https://kubernetes-charts.storage.googleapis.com/ $ helm repo add stable https://kubernetes-charts.storage.googleapis.com/c^C $ kubectl create namespace kubecost namespace/kubecost created $ helm repo add kubecost https://kubecost.github.io/cost-analyzer/ \"kubecost\" has been added to your repositories $ helm install kubecost kubecost/cost-analyzer --namespace kubecost --set kubecostToken=\"aGRoZEBqc2pzLmNvbQ==xm343yadf98\" NAME: kubecost LAST DEPLOYED: Mon May 18 08:49:05 2020 NAMESPACE: kubecost STATUS: deployed REVISION: 1 TEST SUITE: None NOTES: --------------------------------------------------Kubecost has been successfully installed. When pods are Ready, you can enable port-forwarding with the following command: kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090 Next, navigate to http://localhost:9090 in a web browser. $ kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 9090 Note: If you are using Cloud 9 or have a need to forward it to a different port like 8080, issue the following command $ kubectl port-forward --namespace kubecost deployment/kubecost-cost-analyzer 8080:9090 Kube Cost Dashboard -","title":"Using KubeCost for expenditure awareness and guidance"},{"location":"cost_optimization/awareness/#use-kubernetes-cost-allocation-and-capacity-planning-analytics-tool","text":"Kubernetes Opex Analytics is a tool to help organizations track the resources being consumed by their Kubernetes clusters to prevent overpaying. To do so it generates, short- (7 days), mid- (14 days) and long-term (12 months) usage reports showing relevant insights on what amount of resources each project is spending over time.","title":"Use Kubernetes Cost Allocation and Capacity Planning Analytics Tool"},{"location":"cost_optimization/awareness/#magalix-kubeadvisor","text":"KubeAdvisor continuously scans your Kubernetes clusters and reports how you can fix issues, apply best practices, and optimize your cluster (with recommendations of resources like CPU/Memory around cost-efficiency).","title":"Magalix Kubeadvisor"},{"location":"cost_optimization/awareness/#spotio-previously-called-spotinst","text":"Spotinst Ocean is an application scaling service. Similar to Amazon Elastic Compute Cloud (Amazon EC2) Auto Scaling groups, Spotinst Ocean is designed to optimize performance and costs by leveraging Spot Instances combined with On-Demand and Reserved Instances. Using a combination of automated Spot Instance management and the variety of instance sizes, the Ocean cluster autoscaler scales according to the pod resource requirements. Spotinst Ocean also includes a prediction algorithm to predict Spot Instance interruption 15 minutes ahead of time and spin up a new node in a different Spot capacity pool. This is available as an AWS Quickstart developed by Spotinst, Inc. in collaboration with AWS. The EKS workshop also has a module on Optimized Worker Node on Amazon EKS Management with Ocean by Spot.io which includes sections on cost allocation, right sizing and scaling strategies.","title":"Spot.io, previously called Spotinst"},{"location":"cost_optimization/awareness/#yotascale","text":"Yotascale helps with accurately allocating Kubernetes costs. Yotascale Kubernetes Cost Allocation feature utilizes actual cost data, which is inclusive of Reserved Instance discounts and spot instance pricing instead of generic market-rate estimations, to inform the total Kubernetes cost footprint More details can be found at their website .","title":"Yotascale"},{"location":"cost_optimization/awareness/#alcide-advisor","text":"Alcide is an AWS Partner Network (APN) Advanced Technology Partner. Alcide Advisor helps ensure your Amazon EKS cluster, nodes, and pods configuration are tuned to run according to security best practices and internal guidelines. Alcide Advisor is an agentless service for Kubernetes audit and compliance that\u2019s built to ensure a frictionless and secured DevSecOps flow by hardening the development stage before moving to production. More details can be found in this blog post .","title":"Alcide Advisor"},{"location":"cost_optimization/awareness/#other-tools","text":"","title":"Other tools"},{"location":"cost_optimization/awareness/#kubernetes-garbage-collection","text":"The role of the Kubernetes garbage collector is to delete certain objects that once had an owner, but no longer have an owner.","title":"Kubernetes Garbage Collection"},{"location":"cost_optimization/awareness/#fargate-count","text":"Fargatecount is an useful tool, which allows AWS customers to track, with a custom CloudWatch metric, the total number of EKS pods that have been deployed on Fargate in a specific region of a specific account. This helps in keeping track of all the Fargate pods running across an EKS cluster.","title":"Fargate count"},{"location":"cost_optimization/awareness/#kubernetes-ops-view","text":"Kube Ops View is an useful tool, which provides a common operational picture visually for multiple Kubernetes clusters. git clone https://github.com/hjacobs/kube-ops-view cd kube-ops-view kubectl apply -k deploy/","title":"Kubernetes Ops View"},{"location":"cost_optimization/awareness/#popeye-a-kubernetes-cluster-sanitizer","text":"Popeye - A Kubernetes Cluster Sanitizer is a utility that scans live Kubernetes cluster and reports potential issues with deployed resources and configurations. It sanitizes your cluster based on what's deployed and not what's sitting on disk. By scanning your cluster, it detects misconfigurations and helps you to ensure that best practices are in place","title":"Popeye - A Kubernetes Cluster Sanitizer"},{"location":"cost_optimization/awareness/#resources","text":"Refer to the following resources to learn more about best practices for cost optimization. Documentation and Blogs + Amazon EKS supports tagging Tools + What is AWS Billing and Cost Management? + Amazon CloudWatch Container Insights + How to track costs in multi-tenant Amazon EKS clusters using Kubecost + Kube Cost + Kube Opsview + Kube Janitor + Kubernetes Opex Analytics","title":"Resources"},{"location":"cost_optimization/cfm_framework/","text":"Cost Optimization - Introduction \u00b6 AWS Cloud Economics is a discipline that helps customers increase efficiency and reduce their costs through the adoption of modern compute technologies like Amazon EKS. The discipline recommends following a methodology called the \u201cCloud Financial Management (CFM) framework\u201d which consists of 4 pillars: The See pillar: Measurement and accountability \u00b6 The See pillar is a foundational set of activities and technologies that define how to measure, monitor and create accountability for cloud spend. It is often referred to as \u201cObservability\u201d, \u201cInstrumentation\u201d, or \u201cTelemetry\u201d. The capabilities and limitations of the \u201cObservability\u201d infrastructure dictate what can be optimized. Obtaining a clear picture of your costs is a critical first step in cost optimization as you need to know where you are starting from. This type of visibility will also guide the types of activities you will need to do to further optimize your environment. Here is a brief overview of our best practices for the See pillar: Define and maintain a tagging strategy for your workloads. Use Instance Tagging , tagging EKS clusters allows you to see individual cluster costs and allocate them in your Cost & Usage Reports. Establish reporting and monitoring of EKS usage by using technologies like Kubecost . Enable Cloud Intelligence Dashboards , by having resources properly tagged and using visualizations, you can measure and estimate costs. Allocate cloud costs to applications, Lines of Business (LoBs), and revenue streams. Define, measure, and circulate efficiency/value KPIs with business stakeholders. For example, create a \u201cunit metric\u201d KPI that measures the cost per transaction, e.g. a ride sharing services might have a KPI for \u201ccost per ride\u201d. For more details on the recommended technologies and activities associated with this pillar, please see the Cost Optimization - Observability section of this guide. The Save pillar: Cost optimization \u00b6 This pillar is based on the technologies and capabilities developed in the \u201cSee\u201d pillar. The following activities typically fall under this pillar: Identify and eliminate waste in your environment. Architect and design for cost efficiency. Choose the best purchasing option, e.g. on-demand instances vs Spot instances. Adapt as services evolve: as AWS services evolve, the way to efficiently use those services may change. Be willing to adapt to account for these changes. Since these activities are operational, they are highly dependent on your environment\u2019s characteristics. Ask yourself, what are the main drivers of costs? What business value do your different environments provide? What purchasing options and infrastructure choices, e.g. instance family types, are best suited for each environment? Below is a prioritized list of the most common cost drivers for EKS clusters: Compute costs: Combining multiple types of instance families, purchasing options, and balancing scalability with availability require careful consideration. For further information, see the recommendations in the Cost Optimization - Compute and Cost Optimization - Autoscaling sections of this guide. Networking costs: using 3 AZs for EKS clusters can potentially increase inter-AZ traffic costs. For our recommendations on how to balance HA requirements with keeping network traffic costs down, please consult the Cost Optimization - Networking section of this guide. Storage costs: Depending on the stateful/stateless nature of the workloads in the EKS clusters, and how the different storage types are used, storage can be considered as part of the workload. For considerations relating to EKS storage costs, please consult the Cost Optimization - Storage section of this guide. The Plan pillar: Planning and forecasting \u00b6 Once the recommendations in the See pillar are implemented, clusters are optimized on an on-going basis. As experience is gained in operating clusters efficiently, planning and forecasting activities can focus on: Budgeting and forecasting cloud costs dynamically. Quantifying the business value delivered by EKS container services. Integrating EKS cluster cost management with IT financial management planning. The Run pillar \u00b6 Cost optimization is a continuous process and involves a flywheel of incremental improvements: Securing executive sponsorship for these types of activities is crucial for integrating EKS cluster optimization into the organization\u2019s \u201cFinOps\u201d efforts. It allows stakeholder alignment through a shared understanding of EKS cluster costs, implementation of EKS cluster cost guardrails, and ensuring that the tooling, automation, and activities evolve with the organization\u2019s needs. References \u00b6 AWS Cloud Economics, Cloud Financial Management","title":"Cost Optimization - Introduction"},{"location":"cost_optimization/cfm_framework/#cost-optimization-introduction","text":"AWS Cloud Economics is a discipline that helps customers increase efficiency and reduce their costs through the adoption of modern compute technologies like Amazon EKS. The discipline recommends following a methodology called the \u201cCloud Financial Management (CFM) framework\u201d which consists of 4 pillars:","title":"Cost Optimization - Introduction"},{"location":"cost_optimization/cfm_framework/#the-see-pillar-measurement-and-accountability","text":"The See pillar is a foundational set of activities and technologies that define how to measure, monitor and create accountability for cloud spend. It is often referred to as \u201cObservability\u201d, \u201cInstrumentation\u201d, or \u201cTelemetry\u201d. The capabilities and limitations of the \u201cObservability\u201d infrastructure dictate what can be optimized. Obtaining a clear picture of your costs is a critical first step in cost optimization as you need to know where you are starting from. This type of visibility will also guide the types of activities you will need to do to further optimize your environment. Here is a brief overview of our best practices for the See pillar: Define and maintain a tagging strategy for your workloads. Use Instance Tagging , tagging EKS clusters allows you to see individual cluster costs and allocate them in your Cost & Usage Reports. Establish reporting and monitoring of EKS usage by using technologies like Kubecost . Enable Cloud Intelligence Dashboards , by having resources properly tagged and using visualizations, you can measure and estimate costs. Allocate cloud costs to applications, Lines of Business (LoBs), and revenue streams. Define, measure, and circulate efficiency/value KPIs with business stakeholders. For example, create a \u201cunit metric\u201d KPI that measures the cost per transaction, e.g. a ride sharing services might have a KPI for \u201ccost per ride\u201d. For more details on the recommended technologies and activities associated with this pillar, please see the Cost Optimization - Observability section of this guide.","title":"The See pillar: Measurement and accountability"},{"location":"cost_optimization/cfm_framework/#the-save-pillar-cost-optimization","text":"This pillar is based on the technologies and capabilities developed in the \u201cSee\u201d pillar. The following activities typically fall under this pillar: Identify and eliminate waste in your environment. Architect and design for cost efficiency. Choose the best purchasing option, e.g. on-demand instances vs Spot instances. Adapt as services evolve: as AWS services evolve, the way to efficiently use those services may change. Be willing to adapt to account for these changes. Since these activities are operational, they are highly dependent on your environment\u2019s characteristics. Ask yourself, what are the main drivers of costs? What business value do your different environments provide? What purchasing options and infrastructure choices, e.g. instance family types, are best suited for each environment? Below is a prioritized list of the most common cost drivers for EKS clusters: Compute costs: Combining multiple types of instance families, purchasing options, and balancing scalability with availability require careful consideration. For further information, see the recommendations in the Cost Optimization - Compute and Cost Optimization - Autoscaling sections of this guide. Networking costs: using 3 AZs for EKS clusters can potentially increase inter-AZ traffic costs. For our recommendations on how to balance HA requirements with keeping network traffic costs down, please consult the Cost Optimization - Networking section of this guide. Storage costs: Depending on the stateful/stateless nature of the workloads in the EKS clusters, and how the different storage types are used, storage can be considered as part of the workload. For considerations relating to EKS storage costs, please consult the Cost Optimization - Storage section of this guide.","title":"The Save pillar: Cost optimization"},{"location":"cost_optimization/cfm_framework/#the-plan-pillar-planning-and-forecasting","text":"Once the recommendations in the See pillar are implemented, clusters are optimized on an on-going basis. As experience is gained in operating clusters efficiently, planning and forecasting activities can focus on: Budgeting and forecasting cloud costs dynamically. Quantifying the business value delivered by EKS container services. Integrating EKS cluster cost management with IT financial management planning.","title":"The Plan pillar:  Planning and forecasting"},{"location":"cost_optimization/cfm_framework/#the-run-pillar","text":"Cost optimization is a continuous process and involves a flywheel of incremental improvements: Securing executive sponsorship for these types of activities is crucial for integrating EKS cluster optimization into the organization\u2019s \u201cFinOps\u201d efforts. It allows stakeholder alignment through a shared understanding of EKS cluster costs, implementation of EKS cluster cost guardrails, and ensuring that the tooling, automation, and activities evolve with the organization\u2019s needs.","title":"The Run pillar"},{"location":"cost_optimization/cfm_framework/#references","text":"AWS Cloud Economics, Cloud Financial Management","title":"References"},{"location":"cost_optimization/cost-effective/","text":"Cost-effective resources \u00b6 Cost Effective resources means using the appropriate services, resources, and configurations for your workloads running on a Kubernetes cluster, which will result in cost savings. Recommendations \u00b6 Ensure that the infrastructure used to deploy the containerized service matches the application profile and scaling needs \u00b6 There are several types of Kubernetes autoscaling supported in Amazon EKS - Cluster Autoscaler , Horizontal Pod Autoscaler and Vertical Pod Autoscaler . This section covers two of them, Cluster Auto Scaler and Horizontal Pod Autoscaler. Use Cluster Autoscaler to adjust the size of a Kubernetes cluster to meet the current needs \u00b6 The Kubernetes Cluster Autoscaler automatically adjusts the number of nodes in the EKS cluster when pods fail to launch due to lack of resources or when nodes in the cluster are underutilized and their pods can be rescheduled onto other nodes in the cluster. The Cluster Autoscaler scales worker nodes within any specified Auto Scaling group and runs as a deployment in your EKS cluster. Amazon EKS with EC2 managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters. All managed nodes are provisioned as part of an Amazon EC2 Auto Scaling group that is managed for you by Amazon EKS and all resources including Amazon EC2 instances and Auto Scaling groups run within your AWS account. Amazon EKS tags managed node group resources so that they can be discovered the Kubernetes Cluster Autoscaler. The documentation at https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html provides detailed guidance on setting up a Managed Node Group and then deploying Kubernetes Cluster Auto Scaler. If you are running a stateful application across multiple Availability Zones that is backed by Amazon EBS volumes and using the Kubernetes Cluster Autoscaler, you should configure multiple node groups, each scoped to a single Availability Zone. Cluster Autoscaler logs for EC2 based Worker Nodes - When a pod cannot be scheduled due to lack of available resources, Cluster Autoscaler determines that the cluster must scale out and increases the size of the node group. When multiple node groups are used, Cluster Autoscaler chooses one based on the Expander configuration. Currently, the following strategies are supported in EKS: + random - default expander, selects the instance group randomly + most-pods - selects the instance group that schedules the most amount of pods. + least-waste - selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. + priority - selects the node group that has the highest priority assigned by the user You can use the random placement strategy for the Expander in Cluster Autoscaler, if EC2 Spot instances are being used as worker nodes. This is the default expander, and arbitrarily chooses a node-group when the cluster must scale out. The random expander maximizes your ability to leverage multiple Spot capacity pools. Priority based expander selects an expansion option based on priorities assigned by a user to scaling groups. Sample priorities can be to let Autoscaler first try to scale out a spot instance node group and then, if it cannot, falls back to scaling out an on-demand node group. most-pods based expander is useful when you are using nodeSelector to make sure certain pods land on certain nodes. From the documentation to specify least-waste as the expander type for the Cluster Autoscaling configuration: spec: containers: - command: - ./cluster-autoscaler - --v=4 - --stderrthreshold=info - --cloud-provider=aws - --skip-nodes-with-local-storage=false - --expander=least-waste - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/<YOUR CLUSTER NAME> - --balance-similar-node-groups - --skip-nodes-with-system-pods=false Deploy Horizontal Pod Autoscaling to automatically scales the number of pods in a deployment, replication controller, or replica set based on that resource's CPU utilization or other application related metrics \u00b6 The Kubernetes Horizontal Pod Autoscaler automatically scales the number of pods in a deployment, replication controller, or replica set based on resource metrics like CPU utilization or with custom metrics support, on some other application-provided metrics. This can help your applications scale out to meet increased demand or scale in when resources are not needed, thus freeing up your worker nodes for other applications. When you set a target metric utilization percentage, the Horizontal Pod Autoscaler scales your application in or out to try to meet that target. The k8s-cloudwatch-adapter is an implementation of the Kubernetes Custom Metrics API and External Metrics API with integration for CloudWatch metrics. It allows you to scale your Kubernetes deployment using the Horizontal Pod Autoscaler (HPA) with CloudWatch metrics. For an example of scaling using a resource metric like CPU, follow https://eksworkshop.com/beginner/080_scaling/test_hpa/ to deploy a sample app, perform a simple load test to test the autoscaling of pod and simulate pod autoscaling. Refer to this blog for an example of a custom metric for an application to scale according to the number of messages in the Amazon SQS (Simple Queue Service) queue. An example of an external metric from Amazon SQS from the blog: apiVersion : metrics.aws/v1alpha1 kind: ExternalMetric : metadata : name : hello-queue-length spec : name : hello-queue-length resource : resource : \"deployment\" queries : - id : sqs_helloworld metricStat : metric : namespace : \"AWS/SQS\" metricName : \"ApproximateNumberOfMessagesVisible\" dimensions : - name : QueueName value : \"helloworld\" period : 300 stat : Average unit : Count returnData : true An example of an HPA utilizing this external metric: kind : HorizontalPodAutoscaler apiVersion : autoscaling/v2beta1 metadata : name : sqs-consumer-scaler spec : scaleTargetRef : apiVersion : apps/v1beta1 kind : Deployment name : sqs-consumer minReplicas : 1 maxReplicas : 10 metrics : - type : External external : metricName : hello-queue-length targetAverageValue : 30 The combination of Cluster Auto Scaler for the Kubernetes worker nodes and Horizontal Pod Autoscaler for the pods, will ensure that the provisioned resources will be as close to the actual utilization as possible. (Image source: https://aws.amazon.com/blogs/containers/cost-optimization-for-kubernetes-on-aws/) Amazon EKS with Fargate *Horizontal Pod Autoscaling of Pods * Autoscaling EKS on Fargate can be done using the following mechanisms: Using the Kubernetes metrics server and configure auto-scaling based on CPU and/or memory usage. Configure autoscaling based on custom metrics like HTTP traffic using Prometheus and Prometheus metrics adapter Configure autoscaling based on App Mesh traffic The above scenarios are explained in a hands-on blog on \"Autoscaling EKS on Fargate with custom metrics *Vertical Pod Autoscaling * Use the Vertical Pod Autoscaler with pods running on Fargate to optimize the CPU and memory used for your applications. However, because changing the resource allocation for a pod requires the pod to be restarted, you must set the pod update policy to either Auto or Recreate to ensure correct functionality. Recommendations \u00b6 Use Down Scaling to scale down Kubernetes Deployments, StatefulSets, and/or HorizontalPodAutoscalers during non-work hours. \u00b6 As part of controlling costs Down-Scaling resources that are not in-use can also have an huge impact on the overall costs. There are tools like kube-downscaler and Descheduler for Kubernetes . Kube-descaler , can be used to Scale down Kubernetes deployments after work hours or during set periods of time. Descheduler for Kubernetes , based on its policy, can find pods that can be moved and evicts them. In its current implementation, the kubernetes descheduler does not reschedule evicted pods but relies on the default scheduler for that Kube-descaler Installation of kube-downscaler : git clone https://github.com/hjacobs/kube-downscaler cd kube-downscaler kubectl apply -k deploy/ The example configuration uses the --dry-run as a safety flag to prevent downscaling --- remove it to enable the downscaler, e.g. by editing the deployment: $ kubectl edit deploy kube-downscaler Deploy an nginx pod and schedule it to be run in the time zone - Mon-Fri 09:00-17:00 Asia/Kolkata: $ kubectl run nginx1 --image=nginx $ kubectl annotate deploy nginx1 'downscaler/uptime=Mon-Fri 09:00-17:00 Asia/Kolkata' Note The default grace period of 15 minutes applies to the new nginx deployment, i.e. if the current time is not within Mon-Fri 9-17 (Asia/Kolkata timezone), it will downscale not immediately, but after 15 minutes. More advanced downscaling deployment scenarios are available at the kube-down-scaler github project . Kubernetes descheduler The descheduler can be run as a Job or CronJob inside of a k8s cluster. Descheduler's policy is configurable and includes strategies that can be enabled or disabled. Seven strategies RemoveDuplicates , LowNodeUtilization , RemovePodsViolatingInterPodAntiAffinity , RemovePodsViolatingNodeAffinity , RemovePodsViolatingNodeTaints , RemovePodsHavingTooManyRestarts , and PodLifeTime are currently implemented. More details can be found in their documentation . A sample policy, which has the descheduler enabled for lowcpuutilization of nodes (where it covers the scenarios for both underutilized and overutilized), removing pods for too many restarts and others : apiVersion : \"descheduler/v1alpha1\" kind : \"DeschedulerPolicy\" strategies : \"RemoveDuplicates\" : enabled : true \"RemovePodsViolatingInterPodAntiAffinity\" : enabled : true \"LowNodeUtilization\" : enabled : true params : nodeResourceUtilizationThresholds : thresholds : \"cpu\" : 20 \"memory\" : 20 \"pods\" : 20 targetThresholds : \"cpu\" : 50 \"memory\" : 50 \"pods\" : 50 \"RemovePodsHavingTooManyRestarts\" : enabled : true params : podsHavingTooManyRestarts : podRestartThresholds : 100 includingInitContainers : true Cluster Turndown Cluster Turndown is an automated scaledown and scaleup of a Kubernetes cluster's backing nodes based on a custom schedule and turndown criteria. This feature can be used to reduce spend during down hours and/or reduce surface area for security reasons. The most common use case is to scale non-prod environments (e.g. dev clusters) to zero during off hours. Cluster Turndown is currently in ALPHA release. Cluster Turndown uses a Kubernetes Custom Resource Definition to create schedules. The following schedule will create a schedule that starts by turning down at the designated start date-time and turning back up at the designated end date-time (times should be in RFC3339 format, i.e. times based on offsets to UTC). apiVersion : kubecost.k8s.io/v1alpha1 kind : TurndownSchedule metadata : name : example-schedule finalizers : - \"finalizer.kubecost.k8s.io\" spec : start : 2020-03-12T00:00:00Z end : 2020-03-12T12:00:00Z repeat : daily Use LimitRanges and Resource Quotas to help manage costs by constraining the amount of resources allocated at an Namespace level \u00b6 By default, containers run with unbounded compute resources on a Kubernetes cluster. With resource quotas, cluster administrators can restrict resource consumption and creation on a namespace basis. Within a namespace, a Pod or Container can consume as much CPU and memory as defined by the namespace\u2019s resource quota. There is a concern that one Pod or Container could monopolize all available resources. Kubernetes controls the allocation of resources such as CPU, memory, PersistentVolumeClaims and others using Resource Quotas and Limit Ranges. ResourceQuota is at the Namespace level, while a LimitRange applies at an container level. Limit Ranges A LimitRange is a policy to constrain resource allocations (to Pods or Containers) in a namespace. The following is an example of setting an default memory request and a default memory limit using Limit Range. apiVersion : v1 kind : LimitRange metadata : name : mem-limit-range spec : limits : - default : memory : 512Mi defaultRequest : memory : 256Mi type : Container More examples are available in the Kubernetes documentation . Resource Quotas When several users or teams share a cluster with a fixed number of nodes, there is a concern that one team could use more than its fair share of resources. Resource quotas are a tool for administrators to address this concern. The following is an example of how to set quotas for the total amount memory and CPU that can be used by all Containers running in a namespace, by specifying quotas in a ResourceQuota object. This specifies that a Container must have a memory request, memory limit, cpu request, and cpu limit, and should not exceed the threshold set in the ResourceQuota. apiVersion : v1 kind : ResourceQuota metadata : name : mem-cpu-demo spec : hard : requests.cpu : \"1\" requests.memory : 1Gi limits.cpu : \"2\" limits.memory : 2Gi More examples are available in the Kubernetes documentation . Use pricing models for effective utilization \u00b6 The pricing details for Amazon EKS are given in the pricing page . There is a common control plane cost for both Amazon EKS on Fargate and EC2. If you are using AWS Fargate, pricing is calculated based on the vCPU and memory resources used from the time you start to download your container image until the Amazon EKS pod terminates, rounded up to the nearest second. A minimum charge of 1 minute applies. See detailed pricing information on the AWS Fargate pricing page . Amazon EKS on EC2: Amazon EC2 provides a wide selection of instance types optimized to fit different use cases. Instance types comprise varying combinations of CPU, memory, storage, and networking capacity and give you the flexibility to choose the appropriate mix of resources for your applications. Each instance type includes one or more instance sizes, allowing you to scale your resources to the requirements of your target workload. One of the key decision parameters apart from number of CPUs, memory, processor family type related to the instance type is the number of Elastic network interfaces(ENI's) , which in-turn has a bearing on the maximum number of pods you can run on that EC2 Instance. The list of max pods per EC2 Instance type is maintained in a github. *On-Demand EC2 Instances: * With On-Demand instances , you pay for compute capacity by the hour or the second depending on which instances you run. No longer-term commitments or upfront payments are needed. Amazon EC2 A1 instances deliver significant cost savings and are ideally suited for scale-out and ARM-based workloads that are supported by the extensive Arm ecosystem. You can now use Amazon Elastic Container Service for Kubernetes (EKS) to run containers on Amazon EC2 A1 Instances as part of a public developer preview . Amazon ECR now supports multi-architecture container images , which makes it simpler to deploy container images for different architectures and operating systems from the same image repository. You can use the AWS Simple Monthly Calculator or the new pricing calculator to get pricing for the On-Demand EC2 instances for the EKS workder nodes. Use Spot EC2 Instances: \u00b6 Amazon EC2 Spot instances allow you to request spare Amazon EC2 computing capacity for up to 90% off the On-Demand price. Spot Instances are often a great fit for stateless containerized workloads because the approach to containers and Spot Instances are similar; ephemeral and autoscaled capacity. This means they both can be added and removed while adhering to SLAs and without impacting the performance or availability of your applications. You can create multiple nodegroups with a mix of on-demand instance types and EC2 Spot instances to leverage the advantages of pricing between these two instance types. (Image source: https://ec2spotworkshops.com/using_ec2_spot_instances_with_eks/spotworkers/workers_eksctl.html) A sample yaml file for eksctl to create a nodegroup with EC2 spot instances is given below. During the creation of the Node Group, we have configured a node-label so that kubernetes knows what type of nodes we have provisioned. We set the lifecycle for the nodes as Ec2Spot. We are also tainting with PreferNoSchedule to prefer pods not be scheduled on Spot Instances. This is a \u201cpreference\u201d or \u201csoft\u201d version of NoSchedule, i.e. the system will try to avoid placing a pod that does not tolerate the taint on the node, but it is not required. We are using this technique to make sure that only the right type of workloads are scheduled on Spot Instances. apiVersion : eksctl.io/v1alpha5 kind : ClusterConfig metadata : name : my-cluster-testscaling region : us-west-2 nodeGroups : - name : ng-spot labels : lifecycle : Ec2Spot taints : spotInstance : true:PreferNoSchedule minSize : 2 maxSize : 5 instancesDistribution : # At least two instance types should be specified instanceTypes : - m4.large - c4.large - c5.large onDemandBaseCapacity : 0 onDemandPercentageAboveBaseCapacity : 0 # all the instances will be spot instances spotInstancePools : 2 Use the node-labels to identify the lifecycle of the nodes. $ kubectl get nodes --label-columns=lifecycle --selector=lifecycle=Ec2Spot We should also deploy the AWS Node Termination Handler on each Spot Instance. This will monitor the EC2 metadata service on the instance for an interruption notice. The termination handler consists of a ServiceAccount, ClusterRole, ClusterRoleBinding, and a DaemonSet. AWS Node Termination Handler is not only for Spot Instances, it can also catch general EC2 maintenance events, so it can be used across all the worker nodes in the cluster. If a customer is well diversified and uses the capacity-optimized allocation strategy, Spot Instances will be available. You can use Node Affinity in your manifest file to configure this, to prefer Spot Instances, but not require them. This would allow the pods to be scheduled on On-Demand nodes if no spot instances were available or correctly labelled. affinity : nodeAffinity : preferredDuringSchedulingIgnoredDuringExecution : - weight : 1 preference : matchExpressions : - key : lifecycle operator : In values : - Ec2Spot tolerations : - key : \"spotInstance\" operator : \"Equal\" value : \"true\" effect : \"PreferNoSchedule\" You can do a complete workshop with EC2 spot instances at the online EC2 Spot Workshop . Use Compute Savings Plan \u00b6 Compute Savings Plans, a flexible discount model that provides you with the same discounts as Reserved Instances, in exchange for a commitment to use a specific amount (measured in dollars per hour) of compute power over a one or three year period. The details are covered in the Savings Plan launch FAQ .The plans automatically apply to any EC2 worker node regardless of region, instance family, operating system, or tenancy, including those that are part of EKS clusters. For example, you can shift from C4 to C5 instances, move a workload from Dublin to London benefiting from Savings Plan prices along the way, without having to do anything. The AWS Cost Explorer will help you to choose a Savings Plan, and will guide you through the purchase process. Note - The compute savings plans now also applies to AWS Fargate for AWS Elastic Kubernetes Service (EKS) . Note - The above pricing does not include the other AWS services like Data transfer charges, CloudWatch, Elastic Load Balancer and other AWS services that may be used by the Kubernetes applications. Resources \u00b6 Refer to the following resources to learn more about best practices for cost optimization. Videos \u00b6 AWS re:Invent 2019: Save up to 90% and run production workloads on Spot Instances (CMP331-R1) Documentation and Blogs \u00b6 Cost optimization for Kubernetes on AWS Building for Cost optimization and Resilience for EKS with Spot Instances Autoscaling EKS on Fargate with custom metrics AWS Fargate considerations Using Spot Instances with EKS Extending the EKS API: Managed Node Groups Autoscaling with Amazon EKS Amazon EKS pricing AWS Fargate pricing Savings Plan Saving Cloud Costs with Kubernetes on AWS Tools \u00b6 Kube downscaler Kubernetes Descheduler Cluster TurnDown","title":"Cost-effective resources"},{"location":"cost_optimization/cost-effective/#cost-effective-resources","text":"Cost Effective resources means using the appropriate services, resources, and configurations for your workloads running on a Kubernetes cluster, which will result in cost savings.","title":"Cost-effective resources"},{"location":"cost_optimization/cost-effective/#recommendations","text":"","title":"Recommendations"},{"location":"cost_optimization/cost-effective/#ensure-that-the-infrastructure-used-to-deploy-the-containerized-service-matches-the-application-profile-and-scaling-needs","text":"There are several types of Kubernetes autoscaling supported in Amazon EKS - Cluster Autoscaler , Horizontal Pod Autoscaler and Vertical Pod Autoscaler . This section covers two of them, Cluster Auto Scaler and Horizontal Pod Autoscaler.","title":"Ensure that the infrastructure used to deploy the containerized service matches the application profile and scaling needs"},{"location":"cost_optimization/cost-effective/#use-cluster-autoscaler-to-adjust-the-size-of-a-kubernetes-cluster-to-meet-the-current-needs","text":"The Kubernetes Cluster Autoscaler automatically adjusts the number of nodes in the EKS cluster when pods fail to launch due to lack of resources or when nodes in the cluster are underutilized and their pods can be rescheduled onto other nodes in the cluster. The Cluster Autoscaler scales worker nodes within any specified Auto Scaling group and runs as a deployment in your EKS cluster. Amazon EKS with EC2 managed node groups automate the provisioning and lifecycle management of nodes (Amazon EC2 instances) for Amazon EKS Kubernetes clusters. All managed nodes are provisioned as part of an Amazon EC2 Auto Scaling group that is managed for you by Amazon EKS and all resources including Amazon EC2 instances and Auto Scaling groups run within your AWS account. Amazon EKS tags managed node group resources so that they can be discovered the Kubernetes Cluster Autoscaler. The documentation at https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html provides detailed guidance on setting up a Managed Node Group and then deploying Kubernetes Cluster Auto Scaler. If you are running a stateful application across multiple Availability Zones that is backed by Amazon EBS volumes and using the Kubernetes Cluster Autoscaler, you should configure multiple node groups, each scoped to a single Availability Zone. Cluster Autoscaler logs for EC2 based Worker Nodes - When a pod cannot be scheduled due to lack of available resources, Cluster Autoscaler determines that the cluster must scale out and increases the size of the node group. When multiple node groups are used, Cluster Autoscaler chooses one based on the Expander configuration. Currently, the following strategies are supported in EKS: + random - default expander, selects the instance group randomly + most-pods - selects the instance group that schedules the most amount of pods. + least-waste - selects the node group that will have the least idle CPU (if tied, unused memory) after scale-up. This is useful when you have different classes of nodes, for example, high CPU or high memory nodes, and only want to expand those when there are pending pods that need a lot of those resources. + priority - selects the node group that has the highest priority assigned by the user You can use the random placement strategy for the Expander in Cluster Autoscaler, if EC2 Spot instances are being used as worker nodes. This is the default expander, and arbitrarily chooses a node-group when the cluster must scale out. The random expander maximizes your ability to leverage multiple Spot capacity pools. Priority based expander selects an expansion option based on priorities assigned by a user to scaling groups. Sample priorities can be to let Autoscaler first try to scale out a spot instance node group and then, if it cannot, falls back to scaling out an on-demand node group. most-pods based expander is useful when you are using nodeSelector to make sure certain pods land on certain nodes. From the documentation to specify least-waste as the expander type for the Cluster Autoscaling configuration: spec: containers: - command: - ./cluster-autoscaler - --v=4 - --stderrthreshold=info - --cloud-provider=aws - --skip-nodes-with-local-storage=false - --expander=least-waste - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/<YOUR CLUSTER NAME> - --balance-similar-node-groups - --skip-nodes-with-system-pods=false","title":"Use Cluster Autoscaler to adjust the size of a Kubernetes cluster to meet the current needs"},{"location":"cost_optimization/cost-effective/#deploy-horizontal-pod-autoscaling-to-automatically-scales-the-number-of-pods-in-a-deployment-replication-controller-or-replica-set-based-on-that-resources-cpu-utilization-or-other-application-related-metrics","text":"The Kubernetes Horizontal Pod Autoscaler automatically scales the number of pods in a deployment, replication controller, or replica set based on resource metrics like CPU utilization or with custom metrics support, on some other application-provided metrics. This can help your applications scale out to meet increased demand or scale in when resources are not needed, thus freeing up your worker nodes for other applications. When you set a target metric utilization percentage, the Horizontal Pod Autoscaler scales your application in or out to try to meet that target. The k8s-cloudwatch-adapter is an implementation of the Kubernetes Custom Metrics API and External Metrics API with integration for CloudWatch metrics. It allows you to scale your Kubernetes deployment using the Horizontal Pod Autoscaler (HPA) with CloudWatch metrics. For an example of scaling using a resource metric like CPU, follow https://eksworkshop.com/beginner/080_scaling/test_hpa/ to deploy a sample app, perform a simple load test to test the autoscaling of pod and simulate pod autoscaling. Refer to this blog for an example of a custom metric for an application to scale according to the number of messages in the Amazon SQS (Simple Queue Service) queue. An example of an external metric from Amazon SQS from the blog: apiVersion : metrics.aws/v1alpha1 kind: ExternalMetric : metadata : name : hello-queue-length spec : name : hello-queue-length resource : resource : \"deployment\" queries : - id : sqs_helloworld metricStat : metric : namespace : \"AWS/SQS\" metricName : \"ApproximateNumberOfMessagesVisible\" dimensions : - name : QueueName value : \"helloworld\" period : 300 stat : Average unit : Count returnData : true An example of an HPA utilizing this external metric: kind : HorizontalPodAutoscaler apiVersion : autoscaling/v2beta1 metadata : name : sqs-consumer-scaler spec : scaleTargetRef : apiVersion : apps/v1beta1 kind : Deployment name : sqs-consumer minReplicas : 1 maxReplicas : 10 metrics : - type : External external : metricName : hello-queue-length targetAverageValue : 30 The combination of Cluster Auto Scaler for the Kubernetes worker nodes and Horizontal Pod Autoscaler for the pods, will ensure that the provisioned resources will be as close to the actual utilization as possible. (Image source: https://aws.amazon.com/blogs/containers/cost-optimization-for-kubernetes-on-aws/) Amazon EKS with Fargate *Horizontal Pod Autoscaling of Pods * Autoscaling EKS on Fargate can be done using the following mechanisms: Using the Kubernetes metrics server and configure auto-scaling based on CPU and/or memory usage. Configure autoscaling based on custom metrics like HTTP traffic using Prometheus and Prometheus metrics adapter Configure autoscaling based on App Mesh traffic The above scenarios are explained in a hands-on blog on \"Autoscaling EKS on Fargate with custom metrics *Vertical Pod Autoscaling * Use the Vertical Pod Autoscaler with pods running on Fargate to optimize the CPU and memory used for your applications. However, because changing the resource allocation for a pod requires the pod to be restarted, you must set the pod update policy to either Auto or Recreate to ensure correct functionality.","title":"Deploy Horizontal Pod Autoscaling to automatically scales the number of pods in a deployment, replication controller, or replica set based on that resource's CPU utilization or other application related metrics"},{"location":"cost_optimization/cost-effective/#recommendations_1","text":"","title":"Recommendations"},{"location":"cost_optimization/cost-effective/#use-down-scaling-to-scale-down-kubernetes-deployments-statefulsets-andor-horizontalpodautoscalers-during-non-work-hours","text":"As part of controlling costs Down-Scaling resources that are not in-use can also have an huge impact on the overall costs. There are tools like kube-downscaler and Descheduler for Kubernetes . Kube-descaler , can be used to Scale down Kubernetes deployments after work hours or during set periods of time. Descheduler for Kubernetes , based on its policy, can find pods that can be moved and evicts them. In its current implementation, the kubernetes descheduler does not reschedule evicted pods but relies on the default scheduler for that Kube-descaler Installation of kube-downscaler : git clone https://github.com/hjacobs/kube-downscaler cd kube-downscaler kubectl apply -k deploy/ The example configuration uses the --dry-run as a safety flag to prevent downscaling --- remove it to enable the downscaler, e.g. by editing the deployment: $ kubectl edit deploy kube-downscaler Deploy an nginx pod and schedule it to be run in the time zone - Mon-Fri 09:00-17:00 Asia/Kolkata: $ kubectl run nginx1 --image=nginx $ kubectl annotate deploy nginx1 'downscaler/uptime=Mon-Fri 09:00-17:00 Asia/Kolkata' Note The default grace period of 15 minutes applies to the new nginx deployment, i.e. if the current time is not within Mon-Fri 9-17 (Asia/Kolkata timezone), it will downscale not immediately, but after 15 minutes. More advanced downscaling deployment scenarios are available at the kube-down-scaler github project . Kubernetes descheduler The descheduler can be run as a Job or CronJob inside of a k8s cluster. Descheduler's policy is configurable and includes strategies that can be enabled or disabled. Seven strategies RemoveDuplicates , LowNodeUtilization , RemovePodsViolatingInterPodAntiAffinity , RemovePodsViolatingNodeAffinity , RemovePodsViolatingNodeTaints , RemovePodsHavingTooManyRestarts , and PodLifeTime are currently implemented. More details can be found in their documentation . A sample policy, which has the descheduler enabled for lowcpuutilization of nodes (where it covers the scenarios for both underutilized and overutilized), removing pods for too many restarts and others : apiVersion : \"descheduler/v1alpha1\" kind : \"DeschedulerPolicy\" strategies : \"RemoveDuplicates\" : enabled : true \"RemovePodsViolatingInterPodAntiAffinity\" : enabled : true \"LowNodeUtilization\" : enabled : true params : nodeResourceUtilizationThresholds : thresholds : \"cpu\" : 20 \"memory\" : 20 \"pods\" : 20 targetThresholds : \"cpu\" : 50 \"memory\" : 50 \"pods\" : 50 \"RemovePodsHavingTooManyRestarts\" : enabled : true params : podsHavingTooManyRestarts : podRestartThresholds : 100 includingInitContainers : true Cluster Turndown Cluster Turndown is an automated scaledown and scaleup of a Kubernetes cluster's backing nodes based on a custom schedule and turndown criteria. This feature can be used to reduce spend during down hours and/or reduce surface area for security reasons. The most common use case is to scale non-prod environments (e.g. dev clusters) to zero during off hours. Cluster Turndown is currently in ALPHA release. Cluster Turndown uses a Kubernetes Custom Resource Definition to create schedules. The following schedule will create a schedule that starts by turning down at the designated start date-time and turning back up at the designated end date-time (times should be in RFC3339 format, i.e. times based on offsets to UTC). apiVersion : kubecost.k8s.io/v1alpha1 kind : TurndownSchedule metadata : name : example-schedule finalizers : - \"finalizer.kubecost.k8s.io\" spec : start : 2020-03-12T00:00:00Z end : 2020-03-12T12:00:00Z repeat : daily","title":"Use Down Scaling to scale down Kubernetes Deployments, StatefulSets, and/or HorizontalPodAutoscalers during non-work hours."},{"location":"cost_optimization/cost-effective/#use-limitranges-and-resource-quotas-to-help-manage-costs-by-constraining-the-amount-of-resources-allocated-at-an-namespace-level","text":"By default, containers run with unbounded compute resources on a Kubernetes cluster. With resource quotas, cluster administrators can restrict resource consumption and creation on a namespace basis. Within a namespace, a Pod or Container can consume as much CPU and memory as defined by the namespace\u2019s resource quota. There is a concern that one Pod or Container could monopolize all available resources. Kubernetes controls the allocation of resources such as CPU, memory, PersistentVolumeClaims and others using Resource Quotas and Limit Ranges. ResourceQuota is at the Namespace level, while a LimitRange applies at an container level. Limit Ranges A LimitRange is a policy to constrain resource allocations (to Pods or Containers) in a namespace. The following is an example of setting an default memory request and a default memory limit using Limit Range. apiVersion : v1 kind : LimitRange metadata : name : mem-limit-range spec : limits : - default : memory : 512Mi defaultRequest : memory : 256Mi type : Container More examples are available in the Kubernetes documentation . Resource Quotas When several users or teams share a cluster with a fixed number of nodes, there is a concern that one team could use more than its fair share of resources. Resource quotas are a tool for administrators to address this concern. The following is an example of how to set quotas for the total amount memory and CPU that can be used by all Containers running in a namespace, by specifying quotas in a ResourceQuota object. This specifies that a Container must have a memory request, memory limit, cpu request, and cpu limit, and should not exceed the threshold set in the ResourceQuota. apiVersion : v1 kind : ResourceQuota metadata : name : mem-cpu-demo spec : hard : requests.cpu : \"1\" requests.memory : 1Gi limits.cpu : \"2\" limits.memory : 2Gi More examples are available in the Kubernetes documentation .","title":"Use LimitRanges and Resource Quotas to help manage costs by constraining the amount of resources allocated at an Namespace level"},{"location":"cost_optimization/cost-effective/#use-pricing-models-for-effective-utilization","text":"The pricing details for Amazon EKS are given in the pricing page . There is a common control plane cost for both Amazon EKS on Fargate and EC2. If you are using AWS Fargate, pricing is calculated based on the vCPU and memory resources used from the time you start to download your container image until the Amazon EKS pod terminates, rounded up to the nearest second. A minimum charge of 1 minute applies. See detailed pricing information on the AWS Fargate pricing page . Amazon EKS on EC2: Amazon EC2 provides a wide selection of instance types optimized to fit different use cases. Instance types comprise varying combinations of CPU, memory, storage, and networking capacity and give you the flexibility to choose the appropriate mix of resources for your applications. Each instance type includes one or more instance sizes, allowing you to scale your resources to the requirements of your target workload. One of the key decision parameters apart from number of CPUs, memory, processor family type related to the instance type is the number of Elastic network interfaces(ENI's) , which in-turn has a bearing on the maximum number of pods you can run on that EC2 Instance. The list of max pods per EC2 Instance type is maintained in a github. *On-Demand EC2 Instances: * With On-Demand instances , you pay for compute capacity by the hour or the second depending on which instances you run. No longer-term commitments or upfront payments are needed. Amazon EC2 A1 instances deliver significant cost savings and are ideally suited for scale-out and ARM-based workloads that are supported by the extensive Arm ecosystem. You can now use Amazon Elastic Container Service for Kubernetes (EKS) to run containers on Amazon EC2 A1 Instances as part of a public developer preview . Amazon ECR now supports multi-architecture container images , which makes it simpler to deploy container images for different architectures and operating systems from the same image repository. You can use the AWS Simple Monthly Calculator or the new pricing calculator to get pricing for the On-Demand EC2 instances for the EKS workder nodes.","title":"Use pricing models for effective utilization"},{"location":"cost_optimization/cost-effective/#use-spot-ec2-instances","text":"Amazon EC2 Spot instances allow you to request spare Amazon EC2 computing capacity for up to 90% off the On-Demand price. Spot Instances are often a great fit for stateless containerized workloads because the approach to containers and Spot Instances are similar; ephemeral and autoscaled capacity. This means they both can be added and removed while adhering to SLAs and without impacting the performance or availability of your applications. You can create multiple nodegroups with a mix of on-demand instance types and EC2 Spot instances to leverage the advantages of pricing between these two instance types. (Image source: https://ec2spotworkshops.com/using_ec2_spot_instances_with_eks/spotworkers/workers_eksctl.html) A sample yaml file for eksctl to create a nodegroup with EC2 spot instances is given below. During the creation of the Node Group, we have configured a node-label so that kubernetes knows what type of nodes we have provisioned. We set the lifecycle for the nodes as Ec2Spot. We are also tainting with PreferNoSchedule to prefer pods not be scheduled on Spot Instances. This is a \u201cpreference\u201d or \u201csoft\u201d version of NoSchedule, i.e. the system will try to avoid placing a pod that does not tolerate the taint on the node, but it is not required. We are using this technique to make sure that only the right type of workloads are scheduled on Spot Instances. apiVersion : eksctl.io/v1alpha5 kind : ClusterConfig metadata : name : my-cluster-testscaling region : us-west-2 nodeGroups : - name : ng-spot labels : lifecycle : Ec2Spot taints : spotInstance : true:PreferNoSchedule minSize : 2 maxSize : 5 instancesDistribution : # At least two instance types should be specified instanceTypes : - m4.large - c4.large - c5.large onDemandBaseCapacity : 0 onDemandPercentageAboveBaseCapacity : 0 # all the instances will be spot instances spotInstancePools : 2 Use the node-labels to identify the lifecycle of the nodes. $ kubectl get nodes --label-columns=lifecycle --selector=lifecycle=Ec2Spot We should also deploy the AWS Node Termination Handler on each Spot Instance. This will monitor the EC2 metadata service on the instance for an interruption notice. The termination handler consists of a ServiceAccount, ClusterRole, ClusterRoleBinding, and a DaemonSet. AWS Node Termination Handler is not only for Spot Instances, it can also catch general EC2 maintenance events, so it can be used across all the worker nodes in the cluster. If a customer is well diversified and uses the capacity-optimized allocation strategy, Spot Instances will be available. You can use Node Affinity in your manifest file to configure this, to prefer Spot Instances, but not require them. This would allow the pods to be scheduled on On-Demand nodes if no spot instances were available or correctly labelled. affinity : nodeAffinity : preferredDuringSchedulingIgnoredDuringExecution : - weight : 1 preference : matchExpressions : - key : lifecycle operator : In values : - Ec2Spot tolerations : - key : \"spotInstance\" operator : \"Equal\" value : \"true\" effect : \"PreferNoSchedule\" You can do a complete workshop with EC2 spot instances at the online EC2 Spot Workshop .","title":"Use Spot EC2 Instances:"},{"location":"cost_optimization/cost-effective/#use-compute-savings-plan","text":"Compute Savings Plans, a flexible discount model that provides you with the same discounts as Reserved Instances, in exchange for a commitment to use a specific amount (measured in dollars per hour) of compute power over a one or three year period. The details are covered in the Savings Plan launch FAQ .The plans automatically apply to any EC2 worker node regardless of region, instance family, operating system, or tenancy, including those that are part of EKS clusters. For example, you can shift from C4 to C5 instances, move a workload from Dublin to London benefiting from Savings Plan prices along the way, without having to do anything. The AWS Cost Explorer will help you to choose a Savings Plan, and will guide you through the purchase process. Note - The compute savings plans now also applies to AWS Fargate for AWS Elastic Kubernetes Service (EKS) . Note - The above pricing does not include the other AWS services like Data transfer charges, CloudWatch, Elastic Load Balancer and other AWS services that may be used by the Kubernetes applications.","title":"Use Compute Savings Plan"},{"location":"cost_optimization/cost-effective/#resources","text":"Refer to the following resources to learn more about best practices for cost optimization.","title":"Resources"},{"location":"cost_optimization/cost-effective/#videos","text":"AWS re:Invent 2019: Save up to 90% and run production workloads on Spot Instances (CMP331-R1)","title":"Videos"},{"location":"cost_optimization/cost-effective/#documentation-and-blogs","text":"Cost optimization for Kubernetes on AWS Building for Cost optimization and Resilience for EKS with Spot Instances Autoscaling EKS on Fargate with custom metrics AWS Fargate considerations Using Spot Instances with EKS Extending the EKS API: Managed Node Groups Autoscaling with Amazon EKS Amazon EKS pricing AWS Fargate pricing Savings Plan Saving Cloud Costs with Kubernetes on AWS","title":"Documentation and Blogs"},{"location":"cost_optimization/cost-effective/#tools","text":"Kube downscaler Kubernetes Descheduler Cluster TurnDown","title":"Tools"},{"location":"cost_optimization/cost_opt_compute/","text":"","title":"Cost opt compute"},{"location":"cost_optimization/cost_opt_networking/","text":"Cost Optimization - Networking \u00b6 Architecting systems for high availability (HA) is a best practice in order to accomplish resilience and fault-tolerance. In practice, this means spreading your workloads and the underlying infrastructure across multiple Availability Zones (AZs) in a given AWS Region. Ensuring these characteristics are in place for your Amazon EKS environment will enhance the overall reliability of your system. In conjunction with this, your EKS environments will likely also be composed of a variety of constructs (i.e. VPCs), components (i.e. ELBs), and integrations (i.e. ECR and other container registries). The combination of highly available systems and other use-case specific components can play a significant role in how data is transferred and processed. This will in turn have an impact on the costs incurred due to data transfer and processing. The practices detailed below will help you design and optimize your EKS environments in order to achieve cost-effectiveness for different domains and use cases. Pod to Pod Communication \u00b6 Depending on your setup, network communication and data transfer between Pods can have a significant impact on the overall cost of running Amazon EKS workloads. This section will cover different concepts and approaches to mitigating the costs tied to inter-pod communication, while considering highly available (HA) architectures, application performance and resilience. Restricting Traffic to an Availability Zone \u00b6 Frequent egress cross-zone traffic (traffic distributed between AZs) can have a major impact on your network-related costs. Below are some strategies on how to control the amount of cross-zone traffic between Pods in your EKS cluster. If you want granular visibility into the amount of cross-zone traffic between Pods in your cluster (such as the amount of data transferred in bytes), refer to this post . Using Topology Aware Routing (formerly known as Topology Aware Hints) When using topology aware routing, it's important to understand how Services, EndpointSlices and the kube-proxy work together when routing traffic. As the diagram above depicts, Services are the stable network abstraction layer that receive traffic destined for your Pods. When a Service is created, multiple EndpointSlices are created. Each EndpointSlice has a list of endpoints containing a subset of Pod addresses along with the nodes they're running on and any additional topology information. kube-proxy is a daemonset that runs on every node in your cluster and also fulfills a role of internal routing, but it does so based on what it consumes from the created EndpointSlices. When topology aware routing is enabled and implemented on a Kubernetes Service, the EndpointSlice controller will proportionally allocate endpoints to the different zones that your cluster is spread across. For each of those endpoints, the EndpointSlice controller will also set a hint for the zone. Hints describe which zone an endpoint should serve traffic for. kube-proxy will then route traffic from a zone to an endpoint based on the hints that get applied. The diagram below shows how EndpointSlices with hints are organized in such a way that kube-proxy can know what destination they should go to based on their zonal point of origin. Without hints, there is no such allocation or organization and traffic will be proxied to different zonal destinations regardless of where it\u2019s coming from. In some cases, the EndpointSlice controller may apply a hint for a different zone, meaning the endpoint could end up serving traffic originating from a different zone. The reason for this is to try and maintain an even distribution of traffic between endpoints in different zones. Below is a code snippet on how to enable topology aware routing for a Service. apiVersion : v1 kind : Service metadata : name : orders-service namespace : ecommerce * *annotations **** :** `**service.kubernetes.io/topology-mode : Auto**` spec : selector : app : orders type : ClusterIP ports : - protocol : TCP port : 3003 targetPort : 3003 The screenshot below shows the result of the EndpointSlice controller having successfully applied a hint to an endpoint for a Pod replica running in the AZ eu-west-1a . Note It\u2019s important to note that topology aware routing is still in beta . Also, this feature is more predictable when workloads are widely and evenly distributed across the cluster topology. Therefore, it is highly recommended to use it in conjunction with scheduling constraints that increase the availability of an application such as pod topology spread constraints . Using Autoscalers: Provision Nodes to a Specific AZ We strongly recommend running your workloads in highly available environments across multiple AZs. This improves the reliability of your applications, especially when there is an incident of an issue with an AZ. In the case you're willing to sacrifice reliability for the sake of reducing their network-related costs, you can restrict your nodes to a single AZ. To run all your Pods in the same AZ, either provision the worker nodes in the same AZ or schedule the Pods on the worker nodes running on the same AZ. To provision nodes within a single AZ, define a node group with subnets belonging to the same AZ with Cluster Autoscaler (CA) . For Karpenter, use \u201c topology.kubernetes.io/zone\u201d and specify the AZ where you\u2019d like to create the worker nodes. For example, the below Karpenter provisioner snippet provisions the nodes in the us-west-2a AZ. Karpenter apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : single-az spec : requirements : - key : \"topology.kubernetes.io/zone\u201c operator: In values: [\" us-west-2a\"] Cluster Autoscaler (CA) apiVersion : eksctl.io/v1alpha5 kind : ClusterConfig metadata : name : my-ca-cluster region : us-east-1 version : \"1.21\" availabilityZones : - us-east-1a managedNodeGroups : - name : managed-nodes labels : role : managed-nodes instanceType : t3.medium minSize : 1 maxSize : 10 desiredCapacity : 1 ... Using Pod Assignment and Node Affinity Alternatively, if you have worker nodes running in multiple AZs, each node would have the label topology.kubernetes.io/zone with the value of its AZ (such as us-west-2a or us-west-2b). You can utilize nodeSelector or nodeAffinity to schedule Pods to the nodes in a single AZ. For example, the following manifest file will schedule the Pod inside a node running in AZ us-west-2a. apiVersion : v1 kind : Pod metadata : name : nginx labels : env : test spec : nodeSelector : topology.kubernetes.io/zone : us-west-2a containers : - name : nginx image : nginx imagePullPolicy : IfNotPresent Restricting Traffic to a Node \u00b6 There are cases where restricting traffic at a zonal level isn\u2019t sufficient. Apart from reducing costs, you may have the added requirement of reducing network latency between certain applications that have frequent inter-communication. In order to achieve optimal network performance and reduce costs, you need a way to restrict traffic to a specific node. For example, Microservice A should always talk to Microservice B on Node 1, even in highly available (HA) setups. Having Microservice A on Node 1 talk to Microservice B on Node 2 may have a negative impact on the desired performance for applications of this nature, especially if Node 2 is in a separate AZ altogether. Using the Service Internal Traffic Policy In order to restrict Pod network traffic to a node, you can make use of the Service internal traffic policy . By default, traffic sent to a workload\u2019s Service will be randomly distributed across the different generated endpoints. So in a HA architecture, that means traffic from Microservice A could go to any replica of Microservice B on any given node across the different AZs. However, with the Service's internal traffic policy set to Local , traffic will be restricted to endpoints on the node that the traffic originated from. This policy dictates the exclusive use of node-local endpoints. By implication, your network traffic-related costs for that workload will be lower than if the distribution was cluster wide. Also, the latency will be lower, making your application more performant. Note It\u2019s important to note that this feature cannot be combined with topology aware routing in Kubernetes. Below is a code snippet on how to set the internal traffic policy for a Service. apiVersion : v1 kind : Service metadata : name : orders-service namespace : ecommerce spec : selector : app : orders type : ClusterIP ports : - protocol : TCP port : 3003 targetPort : 3003 internalTrafficPolicy : Local To avoid unexpected behaviour from your application due to traffic drops, you should consider the following approaches: Run enough replicas for each of the communicating Pods Have a relatively even spread of Pods using topology spread constraints Make use of pod-affinity rules for co-location of communicating Pods In this example, you have 2 replicas of Microservice A and 3 replicas of Microservice B. If Microservice A has its replicas spread between Nodes 1 and 2, and Microservice B has all 3 of its replicas on Node 3, then they won't be able to communicate because of the Local internal traffic policy. When there are no available node-local endpoints the traffic is dropped. If Microservice B does have 2 of its 3 replicas on Nodes 1 and 2, then there will be communication between the peer applications. But you would still have an isolated replica of Microservice B without any peer replica to communicate with. Note In some scenarios, an isolated replica like the one depicted in the above diagram may not be a cause for concern if it still serves a purpose (such as serving requests from external incoming traffic). Using the Service Internal Traffic Policy with Topology Spread Constraints Using the internal traffic policy in conjunction with topology spread constraints can be useful to ensure that you have the right number of replicas for communicating microservices on different nodes. apiVersion : apps/v1 kind : Deployment metadata : name : express-test spec : replicas : 6 selector : matchLabels : app : express-test template : metadata : labels : app : express-test tier : backend spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : \"topology.kubernetes.io/zone\" whenUnsatisfiable : ScheduleAnyway labelSelector : matchLabels : app : express-test Using the Service Internal Traffic Policy with Pod Affinity Rules Another approach is to make use of Pod affinity rules when using the Service internal traffic policy. With Pod affinity, you can influence the scheduler to co-locate certain Pods because of their frequent communication. By applying strict scheduling constraints ( requiredDuringSchedulingIgnoredDuringExecution ) on certain Pods, this will give you better results for Pod co-location when the Scheduler is placing Pods on nodes. apiVersion : apps/v1 kind : Deployment metadata : name : graphql namespace : ecommerce labels : app.kubernetes.io/version : \"0.1.6\" ... spec : serviceAccountName : graphql-service-account affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - orders topologyKey : \"kubernetes.io/hostname\" Load Balancer to Pod Communication \u00b6 EKS workloads are typically fronted by a load balancer that distributes traffic to the relevant Pods in your EKS cluster. Your architecture may comprise internal and/or external facing load balancers. Depending on your architecture and network traffic configurations, the communication between load balancers and Pods can contribute a significant amount to data transfer charges. You can use the AWS Load Balancer Controller to automatically manage the creation of ELB resources (ALB and NLB). The data transfer charges you incur in such setups will depend on the path taken by the network traffic. The AWS Load Balancer Controller supports two network traffic modes, instance mode , and ip mode . When using instance mode , a NodePort will be opened on each node in your EKS cluster. The load balancer will then proxy traffic evenly across the nodes. If a node has the destination Pod running on it, then there will be no data transfer costs incurred. However, if the destination Pod is on a separate node and in a different AZ than the NodePort receiving the traffic, then there will be an extra network hop from the kube-proxy to the destination Pod. In such a scenario, there will be cross-AZ data transfer charges. Because of the even distribution of traffic across the nodes, it is highly likely that there will be additional data transfer charges associated with cross-zone network traffic hops from kube-proxies to the relevant destination Pods. The diagram below depicts a network path for traffic flowing from the load balancer to the NodePort, and subsequently from the kube-proxy to the destination Pod on a separate node in a different AZ. This is an example of the instance mode setting. When using ip mode , network traffic is proxied from the load balancer directly to the destination Pod. As a result, there are no data transfer charges involved in this approach. Tip It is recommended that you set your load balancer to ip traffic mode to reduce data transfer charges. For this setup, it\u2019s also important to make sure that your load balancer is deployed across all the subnets in your VPC. The diagram below depicts network paths for traffic flowing from the load balancer to Pods in the network ip mode . Data Transfer from Container Registry \u00b6 Amazon ECR \u00b6 Data transfer into the Amazon ECR private registry is free. In-region data transfer incurs no cost , but data transfer out to the internet and across regions will be charged at Internet Data Transfer rates on both sides of the transfer. You should utilize ECRs built-in image replication feature to replicate the relevant container images into the same region as your workloads. This way the replication would be charged once, and all the same region (intra-region) image pulls would be free. You can further reduce data transfer costs associated with pulling images from ECR (data transfer out) by using Interface VPC Endpoints to connect to the in-region ECR repositories . The alternative approach of connecting to ECR\u2019s public AWS endpoint (via a NAT Gateway and an Internet Gateway) will incur higher data processing and transfer costs. The next section will cover reducing data transfer costs between your workloads and AWS Services in greater detail. If you\u2019re running workloads with especially large images, you can build your own custom Amazon Machine Images (AMIs) with pre-cached container images. This can reduce the initial image pull time and potential data transfer costs from a container registry to the EKS worker nodes. Data Transfer to Internet & AWS Services \u00b6 It's a common practice to integrate Kubernetes workloads with other AWS services or third-party tools and platforms via the Internet. The underlying network infrastructure used to route traffic to and from the relevant destination can impact the costs incurred in the data transfer process. Using NAT Gateways \u00b6 NAT Gateways are network components that perform network address translation (NAT). The diagram below depicts Pods in an EKS cluster communicating with other AWS services (Amazon ECR, DynamoDB, and S3), and third-party platforms. In this example, the Pods are running in private subnets in separate AZs. To send and receive traffic from the Internet, a NAT Gateway is deployed to the public subnet of one AZ, allowing any resources with private IP addresses to share a single public IP address to access the Internet. This NAT Gateway in turn communicates with the Internet Gateway component, allowing for packets to be sent to their final destination. When using NAT Gateways for such use cases, you can minimize the data transfer costs by deploying a NAT Gateway in each AZ . This way, traffic routed to the Internet will go through the NAT Gateway in the same AZ, avoiding inter-AZ data transfer. However, even though you\u2019ll save on the cost of inter-AZ data transfer, the implication of this setup is that you\u2019ll incur the cost of an additional NAT Gateway in your architecture. This recommended approach is depicted in the diagram below. Using VPC Endpoints \u00b6 To further reduce costs in such architectures, you should use VPC Endpoints to establish connectivity between your workloads and AWS services . VPC Endpoints allow you to access AWS services from within a VPC without data/network packets traversing the Internet. All traffic is internal and stays within the AWS network. There are two types of VPC Endpoints: Interface VPC Endpoints ( supported by many AWS services ) and Gateway VPC Endpoints (only supported by S3 and DynamoDB). Gateway VPC Endpoints There are no hourly or data transfer costs associated with Gateway VPC Endpoints . When using Gateway VPC Endpoints, it's important to note that they are not extendable across VPC boundaries. They can't be used in VPC peering, VPN networking, or via Direct Connect. Interface VPC Endpoint VPC Endpoints have an hourly charge and, depending on the AWS service, may or may not have an additional charge associated with data processing via the underlying ENI. To reduce inter-AZ data transfer costs related to Interface VPC Endpoints, you can create a VPC Endpoint in each AZ. You can create multiple VPC Endpoints in the same VPC even if they're pointing to the same AWS service. The diagram below shows Pods communicating with AWS services via VPC Endpoints. Data Transfer between VPCs \u00b6 In some cases, you may have workloads in distinct VPCs (within the same AWS region) that need to communicate with each other. This can be accomplished by allowing traffic to traverse the public internet through Internet Gateways attached to the respective VPCs. Such communication can be enabled by deploying infrastructure components like EC2 instances, NAT Gateways or NAT instances in public subnets. However, a setup including these components will incur charges for processing/transferring data in and out of the VPCs. If the traffic to and from the separate VPCs is moving across AZs, then there will be an additional charge in the transfer of data. The diagram below depicts a setup that uses NAT Gateways and Internet Gateways to establish communication between workloads in different VPCs. VPC Peering Connections \u00b6 To reduce costs for such use cases, you can make use of VPC Peering . With a VPC Peering connection, there are no data transfer charges for network traffic that stays within the same AZ. If traffic crosses AZs, there will be a cost incurred. Nonetheless, the VPC Peering approach is recommended for cost-effective communication between workloads in separate VPCs within the same AWS region. However, it\u2019s important to note that VPC peering is primarily effective for 1:1 VPC connectivity because it doesn\u2019t allow for transitive networking. The diagram below is a high-level representation of workloads communication via a VPC peering connection. Transitive Networking Connections \u00b6 As pointed out in the previous section, VPC Peering connections do not allow for transitive networking connectivity. If you want to connect 3 or more VPCs with transitive networking requirements, then you should use a Transit Gateway (TGW). This will enable you to overcome the limits of VPC Peering or any operational overhead associated with having multiple VPC Peering connections between multiple VPCs. You are billed on an hourly basis and for data sent to the TGW. There is no destination cost associated with inter-AZ traffic that flows through the TGW. The diagram below shows inter-AZ traffic flowing through a TGW between workloads in different VPCs but within the same AWS region. Using a Service Mesh \u00b6 Service meshes offer powerful networking capabilities that can be used to reduce network related costs in your EKS cluster environments. However, you should carefully consider the operational tasks and complexity that a service mesh will introduce to your environment if you adopt one. Restricting Traffic to Availability Zones \u00b6 Using Istio\u2019s Locality Weighted Distribution Istio enables you to apply network policies to traffic after routing occurs. This is done using Destination Rules such as locality weighted distribution . Using this feature, you can control the weight (expressed as a percentage) of traffic that can go to a certain destination based on its origin. The source of this traffic can either be from an external (or public facing) load balancer or a Pod within the cluster itself. When all the Pod endpoints are available, the locality will be selected based on a weighted round-robin load balancing algorithm. In the case that certain endpoints are unhealthy or unavailable, the locality weight will be automatically adjusted to reflect this change in the available endpoints. Note Before implementing locality weighted distribution, you should start by understanding your network traffic patterns and the implications that the Destination Rule policy may have on your application\u2019s behaviour. As such, it\u2019s important to have distributed tracing mechanisms in place with tools such as AWS X-Ray or Jaeger . The Istio Destination Rules detailed above can also be applied to manage traffic from a load balancer to Pods in your EKS cluster. Locality weighted distribution rules can be applied to a Service that receives traffic from a highly available load balancer (specifically the Ingress Gateway). These rules allow you to control how much traffic goes where based on its zonal origin - the load balancer in this case. If configured correctly, less egress cross-zone traffic will be incurred compared to a load balancer that distributes traffic evenly or randomly to Pod replicas in different AZs. Below is a code block example of a Destination Rule resource in Istio. As can be seen below, this resource specifies weighted configurations for incoming traffic from 3 different AZs in the eu-west-1 region. These configurations declare that a majority of the incoming traffic (70% in this case) from a given AZ should be proxied to a destination in the same AZ from which it originates. apiVersion : networking.istio.io/v1beta1 kind : DestinationRule metadata : name : express-test-dr spec : host : express-test.default.svc.cluster.local trafficPolicy : loadBalancer : localityLbSetting : distribute : - from : eu-west-1/eu-west-1a/ to : \"eu-west-1/eu-west-1a/*\" : 70 \"eu-west-1/eu-west-1b/*\" : 20 \"eu-west-1/eu-west-1c/*\" : 10 - from : eu-west-1/eu-west-1b/* to : \"eu-west-1/eu-west-1a/*\" : 20 \"eu-west-1/eu-west-1b/*\" : 70 \"eu-west-1/eu-west-1c/*\" : 10 - from : eu-west-1/eu-west-1c/* to : \"eu-west-1/eu-west-1a/*\" : 20 \"eu-west-1/eu-west-1b/*\" : 10 \"eu-west-1/eu-west-1c/*\" : 70** connectionPool : http : http2MaxRequests : 10 maxRequestsPerConnection : 10 outlierDetection : consecutiveGatewayErrors : 1 interval : 1m baseEjectionTime : 30s Note The minimum weight that can be distributed destination is 1%. The reason for this is to maintain failover regions and zones in the case that the endpoints in the main destination become unhealthy or unavailable. The diagram below depicts a scenario in which there is a highly available load balancer in the eu-west-1 region and locality weighted distribution is applied. The Destination Rule policy for this diagram is configured to send 60% of traffic coming from eu-west-1a to Pods in the same AZ, whereas 40% of the traffic from eu-west-1a should go to Pods in eu-west-1b. Restricting Traffic to Availability Zones and Nodes \u00b6 Using the Service Internal Traffic Policy with Istio To mitigate network costs associated with external incoming traffic and internal traffic between Pods, you can combine Istio\u2019s Destination Rules and the Kubernetes Service internal traffic policy . The way to combine Istio destination rules with the service internal traffic policy will largely depend on 3 things: The role of the microservices Network traffic patterns across the microservices How the microservices should be deployed across the Kubernetes cluster topology The diagram below shows what the network flow would look like in the case of a nested request and how the aforementioned policies would control the traffic. The end user makes a request to APP A, which in turn makes a nested request to APP C . This request is first sent to a highly available load balancer, which has instances in AZ 1 and AZ 2 as the above diagram shows. The external incoming request is then routed to the correct destination by the Istio Virtual Service. After the request is routed, the Istio Destination Rule controls how much traffic goes to the respective AZs based on where it originated from (AZ 1 or AZ 2). The traffic then goes to the Service for APP A , and is then proxied to the respective Pod endpoints. As shown in the diagram, 80% of the incoming traffic is sent to Pod endpoints in AZ 1, and 20% of the incoming traffic is sent to AZ 2. APP A then makes an internal request to APP C . APP C 's Service has an internal traffic policy enabled ( internalTrafficPolicy``: Local ). The internal request from APP A (on NODE 1 ) to APP C is successful because of the available node-local endpoint for APP C . The internal request from APP A (on NODE 3) to APP C fails because there are no available node-local endpoints for APP C . As the diagram shows, APP C has no replicas on NODE 3. **** The screenshots below are captured from a live example of this approach. The first set of screenshots demonstrate a successful external request to a graphql and a successful nested request from the graphql to a co-located orders replica on the node ip-10-0-0-151.af-south-1.compute.internal . With Istio, you can verify and export the statistics of any upstream clusters and endpoints that your proxies are aware of. This can help provide a picture of the network flow as well as the share of distribution among the services of a workload. Continuing with the same example, the orders endpoints that the graphql proxy is aware of can be obtained using the following command: kubectl exec -it deploy/graphql -n ecommerce -c istio-proxy -- curl localhost:15000/clusters | grep orders ... orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_error::0** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_success::119** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_timeout::0** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_total::119** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**health_flags::healthy** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**region::af-south-1** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**zone::af-south-1b** ... In this case, the graphql proxy is only aware of the orders endpoint for the replica that it shares a node with. If you remove the internalTrafficPolicy: Local setting from the orders Service, and re-run a command like the one above, then the results will return all the endpoints of the replicas spread across the different nodes. Furthermore, by examining the rq_total for the respective endpoints, you'll notice a relatively even share in network distribution. Consequently, if the endpoints are associated with upstream services running in different AZs, then this network distribution across zones will result in higher costs. As mentioned in a previous section above, you can co-locate frequently communicating Pods by making use of pod-affinity. ... spec : ... template : metadata : labels : app : graphql role : api workload : ecommerce spec : affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - orders topologyKey : \"kubernetes.io/hostname\" nodeSelector : managedBy : karpenter billing-team : ecommerce ... When the graphql and orders replicas don't co-exist on the same node ( ip-10-0-0-151.af-south-1.compute.internal ), the first request to graphql is successful as noted by the 200 response code in the Postman screenshot below, whereas the second nested request from graphql to orders fails with a 503 response code . Additional Resources \u00b6 Addressing latency and data transfer costs on EKS using Istio Exploring the effect of Topology Aware Hints on network traffic in Amazon Elastic Kubernetes Service Getting visibility into your Amazon EKS Cross-AZ pod to pod network bytes Optimize AZ Traffic with Istio Optimize AZ Traffic with Topology Aware Routing Optimize Kubernetes Cost & Performance with Service Internal Traffic Policy Optimize Kubernetes Cost & Performance with Istio and Service Internal Traffic Policy Overview of Data Transfer Costs for Common Architectures Understanding data transfer costs for AWS container services","title":"Cost Optimization - Networking"},{"location":"cost_optimization/cost_opt_networking/#cost-optimization-networking","text":"Architecting systems for high availability (HA) is a best practice in order to accomplish resilience and fault-tolerance. In practice, this means spreading your workloads and the underlying infrastructure across multiple Availability Zones (AZs) in a given AWS Region. Ensuring these characteristics are in place for your Amazon EKS environment will enhance the overall reliability of your system. In conjunction with this, your EKS environments will likely also be composed of a variety of constructs (i.e. VPCs), components (i.e. ELBs), and integrations (i.e. ECR and other container registries). The combination of highly available systems and other use-case specific components can play a significant role in how data is transferred and processed. This will in turn have an impact on the costs incurred due to data transfer and processing. The practices detailed below will help you design and optimize your EKS environments in order to achieve cost-effectiveness for different domains and use cases.","title":"Cost Optimization - Networking"},{"location":"cost_optimization/cost_opt_networking/#pod-to-pod-communication","text":"Depending on your setup, network communication and data transfer between Pods can have a significant impact on the overall cost of running Amazon EKS workloads. This section will cover different concepts and approaches to mitigating the costs tied to inter-pod communication, while considering highly available (HA) architectures, application performance and resilience.","title":"Pod to Pod Communication"},{"location":"cost_optimization/cost_opt_networking/#restricting-traffic-to-an-availability-zone","text":"Frequent egress cross-zone traffic (traffic distributed between AZs) can have a major impact on your network-related costs. Below are some strategies on how to control the amount of cross-zone traffic between Pods in your EKS cluster. If you want granular visibility into the amount of cross-zone traffic between Pods in your cluster (such as the amount of data transferred in bytes), refer to this post . Using Topology Aware Routing (formerly known as Topology Aware Hints) When using topology aware routing, it's important to understand how Services, EndpointSlices and the kube-proxy work together when routing traffic. As the diagram above depicts, Services are the stable network abstraction layer that receive traffic destined for your Pods. When a Service is created, multiple EndpointSlices are created. Each EndpointSlice has a list of endpoints containing a subset of Pod addresses along with the nodes they're running on and any additional topology information. kube-proxy is a daemonset that runs on every node in your cluster and also fulfills a role of internal routing, but it does so based on what it consumes from the created EndpointSlices. When topology aware routing is enabled and implemented on a Kubernetes Service, the EndpointSlice controller will proportionally allocate endpoints to the different zones that your cluster is spread across. For each of those endpoints, the EndpointSlice controller will also set a hint for the zone. Hints describe which zone an endpoint should serve traffic for. kube-proxy will then route traffic from a zone to an endpoint based on the hints that get applied. The diagram below shows how EndpointSlices with hints are organized in such a way that kube-proxy can know what destination they should go to based on their zonal point of origin. Without hints, there is no such allocation or organization and traffic will be proxied to different zonal destinations regardless of where it\u2019s coming from. In some cases, the EndpointSlice controller may apply a hint for a different zone, meaning the endpoint could end up serving traffic originating from a different zone. The reason for this is to try and maintain an even distribution of traffic between endpoints in different zones. Below is a code snippet on how to enable topology aware routing for a Service. apiVersion : v1 kind : Service metadata : name : orders-service namespace : ecommerce * *annotations **** :** `**service.kubernetes.io/topology-mode : Auto**` spec : selector : app : orders type : ClusterIP ports : - protocol : TCP port : 3003 targetPort : 3003 The screenshot below shows the result of the EndpointSlice controller having successfully applied a hint to an endpoint for a Pod replica running in the AZ eu-west-1a . Note It\u2019s important to note that topology aware routing is still in beta . Also, this feature is more predictable when workloads are widely and evenly distributed across the cluster topology. Therefore, it is highly recommended to use it in conjunction with scheduling constraints that increase the availability of an application such as pod topology spread constraints . Using Autoscalers: Provision Nodes to a Specific AZ We strongly recommend running your workloads in highly available environments across multiple AZs. This improves the reliability of your applications, especially when there is an incident of an issue with an AZ. In the case you're willing to sacrifice reliability for the sake of reducing their network-related costs, you can restrict your nodes to a single AZ. To run all your Pods in the same AZ, either provision the worker nodes in the same AZ or schedule the Pods on the worker nodes running on the same AZ. To provision nodes within a single AZ, define a node group with subnets belonging to the same AZ with Cluster Autoscaler (CA) . For Karpenter, use \u201c topology.kubernetes.io/zone\u201d and specify the AZ where you\u2019d like to create the worker nodes. For example, the below Karpenter provisioner snippet provisions the nodes in the us-west-2a AZ. Karpenter apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : single-az spec : requirements : - key : \"topology.kubernetes.io/zone\u201c operator: In values: [\" us-west-2a\"] Cluster Autoscaler (CA) apiVersion : eksctl.io/v1alpha5 kind : ClusterConfig metadata : name : my-ca-cluster region : us-east-1 version : \"1.21\" availabilityZones : - us-east-1a managedNodeGroups : - name : managed-nodes labels : role : managed-nodes instanceType : t3.medium minSize : 1 maxSize : 10 desiredCapacity : 1 ... Using Pod Assignment and Node Affinity Alternatively, if you have worker nodes running in multiple AZs, each node would have the label topology.kubernetes.io/zone with the value of its AZ (such as us-west-2a or us-west-2b). You can utilize nodeSelector or nodeAffinity to schedule Pods to the nodes in a single AZ. For example, the following manifest file will schedule the Pod inside a node running in AZ us-west-2a. apiVersion : v1 kind : Pod metadata : name : nginx labels : env : test spec : nodeSelector : topology.kubernetes.io/zone : us-west-2a containers : - name : nginx image : nginx imagePullPolicy : IfNotPresent","title":"Restricting Traffic to an Availability Zone"},{"location":"cost_optimization/cost_opt_networking/#restricting-traffic-to-a-node","text":"There are cases where restricting traffic at a zonal level isn\u2019t sufficient. Apart from reducing costs, you may have the added requirement of reducing network latency between certain applications that have frequent inter-communication. In order to achieve optimal network performance and reduce costs, you need a way to restrict traffic to a specific node. For example, Microservice A should always talk to Microservice B on Node 1, even in highly available (HA) setups. Having Microservice A on Node 1 talk to Microservice B on Node 2 may have a negative impact on the desired performance for applications of this nature, especially if Node 2 is in a separate AZ altogether. Using the Service Internal Traffic Policy In order to restrict Pod network traffic to a node, you can make use of the Service internal traffic policy . By default, traffic sent to a workload\u2019s Service will be randomly distributed across the different generated endpoints. So in a HA architecture, that means traffic from Microservice A could go to any replica of Microservice B on any given node across the different AZs. However, with the Service's internal traffic policy set to Local , traffic will be restricted to endpoints on the node that the traffic originated from. This policy dictates the exclusive use of node-local endpoints. By implication, your network traffic-related costs for that workload will be lower than if the distribution was cluster wide. Also, the latency will be lower, making your application more performant. Note It\u2019s important to note that this feature cannot be combined with topology aware routing in Kubernetes. Below is a code snippet on how to set the internal traffic policy for a Service. apiVersion : v1 kind : Service metadata : name : orders-service namespace : ecommerce spec : selector : app : orders type : ClusterIP ports : - protocol : TCP port : 3003 targetPort : 3003 internalTrafficPolicy : Local To avoid unexpected behaviour from your application due to traffic drops, you should consider the following approaches: Run enough replicas for each of the communicating Pods Have a relatively even spread of Pods using topology spread constraints Make use of pod-affinity rules for co-location of communicating Pods In this example, you have 2 replicas of Microservice A and 3 replicas of Microservice B. If Microservice A has its replicas spread between Nodes 1 and 2, and Microservice B has all 3 of its replicas on Node 3, then they won't be able to communicate because of the Local internal traffic policy. When there are no available node-local endpoints the traffic is dropped. If Microservice B does have 2 of its 3 replicas on Nodes 1 and 2, then there will be communication between the peer applications. But you would still have an isolated replica of Microservice B without any peer replica to communicate with. Note In some scenarios, an isolated replica like the one depicted in the above diagram may not be a cause for concern if it still serves a purpose (such as serving requests from external incoming traffic). Using the Service Internal Traffic Policy with Topology Spread Constraints Using the internal traffic policy in conjunction with topology spread constraints can be useful to ensure that you have the right number of replicas for communicating microservices on different nodes. apiVersion : apps/v1 kind : Deployment metadata : name : express-test spec : replicas : 6 selector : matchLabels : app : express-test template : metadata : labels : app : express-test tier : backend spec : topologySpreadConstraints : - maxSkew : 1 topologyKey : \"topology.kubernetes.io/zone\" whenUnsatisfiable : ScheduleAnyway labelSelector : matchLabels : app : express-test Using the Service Internal Traffic Policy with Pod Affinity Rules Another approach is to make use of Pod affinity rules when using the Service internal traffic policy. With Pod affinity, you can influence the scheduler to co-locate certain Pods because of their frequent communication. By applying strict scheduling constraints ( requiredDuringSchedulingIgnoredDuringExecution ) on certain Pods, this will give you better results for Pod co-location when the Scheduler is placing Pods on nodes. apiVersion : apps/v1 kind : Deployment metadata : name : graphql namespace : ecommerce labels : app.kubernetes.io/version : \"0.1.6\" ... spec : serviceAccountName : graphql-service-account affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - orders topologyKey : \"kubernetes.io/hostname\"","title":"Restricting Traffic to a Node"},{"location":"cost_optimization/cost_opt_networking/#load-balancer-to-pod-communication","text":"EKS workloads are typically fronted by a load balancer that distributes traffic to the relevant Pods in your EKS cluster. Your architecture may comprise internal and/or external facing load balancers. Depending on your architecture and network traffic configurations, the communication between load balancers and Pods can contribute a significant amount to data transfer charges. You can use the AWS Load Balancer Controller to automatically manage the creation of ELB resources (ALB and NLB). The data transfer charges you incur in such setups will depend on the path taken by the network traffic. The AWS Load Balancer Controller supports two network traffic modes, instance mode , and ip mode . When using instance mode , a NodePort will be opened on each node in your EKS cluster. The load balancer will then proxy traffic evenly across the nodes. If a node has the destination Pod running on it, then there will be no data transfer costs incurred. However, if the destination Pod is on a separate node and in a different AZ than the NodePort receiving the traffic, then there will be an extra network hop from the kube-proxy to the destination Pod. In such a scenario, there will be cross-AZ data transfer charges. Because of the even distribution of traffic across the nodes, it is highly likely that there will be additional data transfer charges associated with cross-zone network traffic hops from kube-proxies to the relevant destination Pods. The diagram below depicts a network path for traffic flowing from the load balancer to the NodePort, and subsequently from the kube-proxy to the destination Pod on a separate node in a different AZ. This is an example of the instance mode setting. When using ip mode , network traffic is proxied from the load balancer directly to the destination Pod. As a result, there are no data transfer charges involved in this approach. Tip It is recommended that you set your load balancer to ip traffic mode to reduce data transfer charges. For this setup, it\u2019s also important to make sure that your load balancer is deployed across all the subnets in your VPC. The diagram below depicts network paths for traffic flowing from the load balancer to Pods in the network ip mode .","title":"Load Balancer to Pod Communication"},{"location":"cost_optimization/cost_opt_networking/#data-transfer-from-container-registry","text":"","title":"Data Transfer from Container Registry"},{"location":"cost_optimization/cost_opt_networking/#amazon-ecr","text":"Data transfer into the Amazon ECR private registry is free. In-region data transfer incurs no cost , but data transfer out to the internet and across regions will be charged at Internet Data Transfer rates on both sides of the transfer. You should utilize ECRs built-in image replication feature to replicate the relevant container images into the same region as your workloads. This way the replication would be charged once, and all the same region (intra-region) image pulls would be free. You can further reduce data transfer costs associated with pulling images from ECR (data transfer out) by using Interface VPC Endpoints to connect to the in-region ECR repositories . The alternative approach of connecting to ECR\u2019s public AWS endpoint (via a NAT Gateway and an Internet Gateway) will incur higher data processing and transfer costs. The next section will cover reducing data transfer costs between your workloads and AWS Services in greater detail. If you\u2019re running workloads with especially large images, you can build your own custom Amazon Machine Images (AMIs) with pre-cached container images. This can reduce the initial image pull time and potential data transfer costs from a container registry to the EKS worker nodes.","title":"Amazon ECR"},{"location":"cost_optimization/cost_opt_networking/#data-transfer-to-internet-aws-services","text":"It's a common practice to integrate Kubernetes workloads with other AWS services or third-party tools and platforms via the Internet. The underlying network infrastructure used to route traffic to and from the relevant destination can impact the costs incurred in the data transfer process.","title":"Data Transfer to Internet &amp; AWS Services"},{"location":"cost_optimization/cost_opt_networking/#using-nat-gateways","text":"NAT Gateways are network components that perform network address translation (NAT). The diagram below depicts Pods in an EKS cluster communicating with other AWS services (Amazon ECR, DynamoDB, and S3), and third-party platforms. In this example, the Pods are running in private subnets in separate AZs. To send and receive traffic from the Internet, a NAT Gateway is deployed to the public subnet of one AZ, allowing any resources with private IP addresses to share a single public IP address to access the Internet. This NAT Gateway in turn communicates with the Internet Gateway component, allowing for packets to be sent to their final destination. When using NAT Gateways for such use cases, you can minimize the data transfer costs by deploying a NAT Gateway in each AZ . This way, traffic routed to the Internet will go through the NAT Gateway in the same AZ, avoiding inter-AZ data transfer. However, even though you\u2019ll save on the cost of inter-AZ data transfer, the implication of this setup is that you\u2019ll incur the cost of an additional NAT Gateway in your architecture. This recommended approach is depicted in the diagram below.","title":"Using NAT Gateways"},{"location":"cost_optimization/cost_opt_networking/#using-vpc-endpoints","text":"To further reduce costs in such architectures, you should use VPC Endpoints to establish connectivity between your workloads and AWS services . VPC Endpoints allow you to access AWS services from within a VPC without data/network packets traversing the Internet. All traffic is internal and stays within the AWS network. There are two types of VPC Endpoints: Interface VPC Endpoints ( supported by many AWS services ) and Gateway VPC Endpoints (only supported by S3 and DynamoDB). Gateway VPC Endpoints There are no hourly or data transfer costs associated with Gateway VPC Endpoints . When using Gateway VPC Endpoints, it's important to note that they are not extendable across VPC boundaries. They can't be used in VPC peering, VPN networking, or via Direct Connect. Interface VPC Endpoint VPC Endpoints have an hourly charge and, depending on the AWS service, may or may not have an additional charge associated with data processing via the underlying ENI. To reduce inter-AZ data transfer costs related to Interface VPC Endpoints, you can create a VPC Endpoint in each AZ. You can create multiple VPC Endpoints in the same VPC even if they're pointing to the same AWS service. The diagram below shows Pods communicating with AWS services via VPC Endpoints.","title":"Using VPC Endpoints"},{"location":"cost_optimization/cost_opt_networking/#data-transfer-between-vpcs","text":"In some cases, you may have workloads in distinct VPCs (within the same AWS region) that need to communicate with each other. This can be accomplished by allowing traffic to traverse the public internet through Internet Gateways attached to the respective VPCs. Such communication can be enabled by deploying infrastructure components like EC2 instances, NAT Gateways or NAT instances in public subnets. However, a setup including these components will incur charges for processing/transferring data in and out of the VPCs. If the traffic to and from the separate VPCs is moving across AZs, then there will be an additional charge in the transfer of data. The diagram below depicts a setup that uses NAT Gateways and Internet Gateways to establish communication between workloads in different VPCs.","title":"Data Transfer between VPCs"},{"location":"cost_optimization/cost_opt_networking/#vpc-peering-connections","text":"To reduce costs for such use cases, you can make use of VPC Peering . With a VPC Peering connection, there are no data transfer charges for network traffic that stays within the same AZ. If traffic crosses AZs, there will be a cost incurred. Nonetheless, the VPC Peering approach is recommended for cost-effective communication between workloads in separate VPCs within the same AWS region. However, it\u2019s important to note that VPC peering is primarily effective for 1:1 VPC connectivity because it doesn\u2019t allow for transitive networking. The diagram below is a high-level representation of workloads communication via a VPC peering connection.","title":"VPC Peering Connections"},{"location":"cost_optimization/cost_opt_networking/#transitive-networking-connections","text":"As pointed out in the previous section, VPC Peering connections do not allow for transitive networking connectivity. If you want to connect 3 or more VPCs with transitive networking requirements, then you should use a Transit Gateway (TGW). This will enable you to overcome the limits of VPC Peering or any operational overhead associated with having multiple VPC Peering connections between multiple VPCs. You are billed on an hourly basis and for data sent to the TGW. There is no destination cost associated with inter-AZ traffic that flows through the TGW. The diagram below shows inter-AZ traffic flowing through a TGW between workloads in different VPCs but within the same AWS region.","title":"Transitive Networking Connections"},{"location":"cost_optimization/cost_opt_networking/#using-a-service-mesh","text":"Service meshes offer powerful networking capabilities that can be used to reduce network related costs in your EKS cluster environments. However, you should carefully consider the operational tasks and complexity that a service mesh will introduce to your environment if you adopt one.","title":"Using a Service Mesh"},{"location":"cost_optimization/cost_opt_networking/#restricting-traffic-to-availability-zones","text":"Using Istio\u2019s Locality Weighted Distribution Istio enables you to apply network policies to traffic after routing occurs. This is done using Destination Rules such as locality weighted distribution . Using this feature, you can control the weight (expressed as a percentage) of traffic that can go to a certain destination based on its origin. The source of this traffic can either be from an external (or public facing) load balancer or a Pod within the cluster itself. When all the Pod endpoints are available, the locality will be selected based on a weighted round-robin load balancing algorithm. In the case that certain endpoints are unhealthy or unavailable, the locality weight will be automatically adjusted to reflect this change in the available endpoints. Note Before implementing locality weighted distribution, you should start by understanding your network traffic patterns and the implications that the Destination Rule policy may have on your application\u2019s behaviour. As such, it\u2019s important to have distributed tracing mechanisms in place with tools such as AWS X-Ray or Jaeger . The Istio Destination Rules detailed above can also be applied to manage traffic from a load balancer to Pods in your EKS cluster. Locality weighted distribution rules can be applied to a Service that receives traffic from a highly available load balancer (specifically the Ingress Gateway). These rules allow you to control how much traffic goes where based on its zonal origin - the load balancer in this case. If configured correctly, less egress cross-zone traffic will be incurred compared to a load balancer that distributes traffic evenly or randomly to Pod replicas in different AZs. Below is a code block example of a Destination Rule resource in Istio. As can be seen below, this resource specifies weighted configurations for incoming traffic from 3 different AZs in the eu-west-1 region. These configurations declare that a majority of the incoming traffic (70% in this case) from a given AZ should be proxied to a destination in the same AZ from which it originates. apiVersion : networking.istio.io/v1beta1 kind : DestinationRule metadata : name : express-test-dr spec : host : express-test.default.svc.cluster.local trafficPolicy : loadBalancer : localityLbSetting : distribute : - from : eu-west-1/eu-west-1a/ to : \"eu-west-1/eu-west-1a/*\" : 70 \"eu-west-1/eu-west-1b/*\" : 20 \"eu-west-1/eu-west-1c/*\" : 10 - from : eu-west-1/eu-west-1b/* to : \"eu-west-1/eu-west-1a/*\" : 20 \"eu-west-1/eu-west-1b/*\" : 70 \"eu-west-1/eu-west-1c/*\" : 10 - from : eu-west-1/eu-west-1c/* to : \"eu-west-1/eu-west-1a/*\" : 20 \"eu-west-1/eu-west-1b/*\" : 10 \"eu-west-1/eu-west-1c/*\" : 70** connectionPool : http : http2MaxRequests : 10 maxRequestsPerConnection : 10 outlierDetection : consecutiveGatewayErrors : 1 interval : 1m baseEjectionTime : 30s Note The minimum weight that can be distributed destination is 1%. The reason for this is to maintain failover regions and zones in the case that the endpoints in the main destination become unhealthy or unavailable. The diagram below depicts a scenario in which there is a highly available load balancer in the eu-west-1 region and locality weighted distribution is applied. The Destination Rule policy for this diagram is configured to send 60% of traffic coming from eu-west-1a to Pods in the same AZ, whereas 40% of the traffic from eu-west-1a should go to Pods in eu-west-1b.","title":"Restricting Traffic to Availability Zones"},{"location":"cost_optimization/cost_opt_networking/#restricting-traffic-to-availability-zones-and-nodes","text":"Using the Service Internal Traffic Policy with Istio To mitigate network costs associated with external incoming traffic and internal traffic between Pods, you can combine Istio\u2019s Destination Rules and the Kubernetes Service internal traffic policy . The way to combine Istio destination rules with the service internal traffic policy will largely depend on 3 things: The role of the microservices Network traffic patterns across the microservices How the microservices should be deployed across the Kubernetes cluster topology The diagram below shows what the network flow would look like in the case of a nested request and how the aforementioned policies would control the traffic. The end user makes a request to APP A, which in turn makes a nested request to APP C . This request is first sent to a highly available load balancer, which has instances in AZ 1 and AZ 2 as the above diagram shows. The external incoming request is then routed to the correct destination by the Istio Virtual Service. After the request is routed, the Istio Destination Rule controls how much traffic goes to the respective AZs based on where it originated from (AZ 1 or AZ 2). The traffic then goes to the Service for APP A , and is then proxied to the respective Pod endpoints. As shown in the diagram, 80% of the incoming traffic is sent to Pod endpoints in AZ 1, and 20% of the incoming traffic is sent to AZ 2. APP A then makes an internal request to APP C . APP C 's Service has an internal traffic policy enabled ( internalTrafficPolicy``: Local ). The internal request from APP A (on NODE 1 ) to APP C is successful because of the available node-local endpoint for APP C . The internal request from APP A (on NODE 3) to APP C fails because there are no available node-local endpoints for APP C . As the diagram shows, APP C has no replicas on NODE 3. **** The screenshots below are captured from a live example of this approach. The first set of screenshots demonstrate a successful external request to a graphql and a successful nested request from the graphql to a co-located orders replica on the node ip-10-0-0-151.af-south-1.compute.internal . With Istio, you can verify and export the statistics of any upstream clusters and endpoints that your proxies are aware of. This can help provide a picture of the network flow as well as the share of distribution among the services of a workload. Continuing with the same example, the orders endpoints that the graphql proxy is aware of can be obtained using the following command: kubectl exec -it deploy/graphql -n ecommerce -c istio-proxy -- curl localhost:15000/clusters | grep orders ... orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_error::0** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_success::119** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_timeout::0** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**rq_total::119** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**health_flags::healthy** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**region::af-south-1** orders-service.ecommerce.svc.cluster.local::10.0.1.33:3003::**zone::af-south-1b** ... In this case, the graphql proxy is only aware of the orders endpoint for the replica that it shares a node with. If you remove the internalTrafficPolicy: Local setting from the orders Service, and re-run a command like the one above, then the results will return all the endpoints of the replicas spread across the different nodes. Furthermore, by examining the rq_total for the respective endpoints, you'll notice a relatively even share in network distribution. Consequently, if the endpoints are associated with upstream services running in different AZs, then this network distribution across zones will result in higher costs. As mentioned in a previous section above, you can co-locate frequently communicating Pods by making use of pod-affinity. ... spec : ... template : metadata : labels : app : graphql role : api workload : ecommerce spec : affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - orders topologyKey : \"kubernetes.io/hostname\" nodeSelector : managedBy : karpenter billing-team : ecommerce ... When the graphql and orders replicas don't co-exist on the same node ( ip-10-0-0-151.af-south-1.compute.internal ), the first request to graphql is successful as noted by the 200 response code in the Postman screenshot below, whereas the second nested request from graphql to orders fails with a 503 response code .","title":"Restricting Traffic to Availability Zones and Nodes"},{"location":"cost_optimization/cost_opt_networking/#additional-resources","text":"Addressing latency and data transfer costs on EKS using Istio Exploring the effect of Topology Aware Hints on network traffic in Amazon Elastic Kubernetes Service Getting visibility into your Amazon EKS Cross-AZ pod to pod network bytes Optimize AZ Traffic with Istio Optimize AZ Traffic with Topology Aware Routing Optimize Kubernetes Cost & Performance with Service Internal Traffic Policy Optimize Kubernetes Cost & Performance with Istio and Service Internal Traffic Policy Overview of Data Transfer Costs for Common Architectures Understanding data transfer costs for AWS container services","title":"Additional Resources"},{"location":"cost_optimization/cost_opt_storage/","text":"","title":"Cost opt storage"},{"location":"cost_optimization/cost_optimization_index/","text":"Amazon EKS Best Practices Guide for Cost Optimization \u00b6 Cost Optimization is achieving your business outcomes at the lowest price point. By following the documentation in this guide you will optimize your Amazon EKS workloads. General Guidelines \u00b6 In the cloud, there are a number of general guidelines that can help you achieve cost optimization of your microservices: + Ensure that workloads running on Amazon EKS are independent of specific infrastructure types for running your containers, this will give greater flexibility with regards to running them on the least expensive types of infrastructure. While using Amazon EKS with EC2, there can be exceptions when we have workloads that require specific type of EC2 Instance types like requiring a GPU or other instance types, due to the nature of the workload. + Select optimally profiled container instances \u2014 profile your production or pre-production environments and monitor critical metrics like CPU and memory, using services like Amazon CloudWatch Container Insights for Amazon EKS or third party tools that are available in the Kubernetes ecosystem. This will ensure that we can allocate the right amount of resources and avoid wastage of resources. + Take advantage of the different purchasing options that are available in AWS for running EKS with EC2, e.g. On-Demand, Spot and Savings Plan. EKS Cost Optimization Best Practices \u00b6 There are three general best practice areas for cost optimization in the cloud: Cost-effective resources (Auto Scaling, Down Scaling, Policies and Purchasing Options) Expenditure awareness (Using AWS and third party tools) Optimizing over time (Right Sizing) As with any guidance there are trade-offs. Ensure you work with your organization to understand the priorities for this workload and which best practices are most important. How to use this guide \u00b6 This guide is meant for devops teams who are responsible for implementing and managing the EKS clusters and the workloads they support. The guide is organized into different best practice areas for easier consumption. Each topic has a list of recommendations, tools to use and best practices for cost optimization of your EKS clusters. The topics do not need to read in a particular order. Key AWS Services and Kubernetes features \u00b6 Cost optimization is supported by the following AWS services and features: + EC2 Instance types, Savings Plan (and Reserved Instances) and Spot Instances, at different prices. + Auto Scaling along with Kubernetes native Auto Scaling policies. Consider Savings Plan (Previously Reserved Instances) for predictable workloads. Use managed data stores like EBS and EFS, for elasticity and durability of the application data. + The Billing and Cost Management console dashboard along with AWS Cost Explorer provides an overview of your AWS usage. Use AWS Organizations for granular billing details. Details of several third party tools have also been shared. + Amazon CloudWatch Container Metrics provides metrics around usage of resources by the EKS cluster. In addition to the Kubernetes dashboard, there are several tools in the Kubernetes ecosystem that can be used to reduce wastage. This guide includes a set of recommendations that you can use to improve the cost optimization of your Amazon EKS cluster. Feedback \u00b6 This guide is being released on GitHub so as to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. Our intention is to update the guide periodically as new features are added to the service or when a new best practice evolves.","title":"Amazon EKS Best Practices Guide for Cost Optimization"},{"location":"cost_optimization/cost_optimization_index/#amazon-eks-best-practices-guide-for-cost-optimization","text":"Cost Optimization is achieving your business outcomes at the lowest price point. By following the documentation in this guide you will optimize your Amazon EKS workloads.","title":"Amazon EKS Best Practices Guide for Cost Optimization"},{"location":"cost_optimization/cost_optimization_index/#general-guidelines","text":"In the cloud, there are a number of general guidelines that can help you achieve cost optimization of your microservices: + Ensure that workloads running on Amazon EKS are independent of specific infrastructure types for running your containers, this will give greater flexibility with regards to running them on the least expensive types of infrastructure. While using Amazon EKS with EC2, there can be exceptions when we have workloads that require specific type of EC2 Instance types like requiring a GPU or other instance types, due to the nature of the workload. + Select optimally profiled container instances \u2014 profile your production or pre-production environments and monitor critical metrics like CPU and memory, using services like Amazon CloudWatch Container Insights for Amazon EKS or third party tools that are available in the Kubernetes ecosystem. This will ensure that we can allocate the right amount of resources and avoid wastage of resources. + Take advantage of the different purchasing options that are available in AWS for running EKS with EC2, e.g. On-Demand, Spot and Savings Plan.","title":"General Guidelines"},{"location":"cost_optimization/cost_optimization_index/#eks-cost-optimization-best-practices","text":"There are three general best practice areas for cost optimization in the cloud: Cost-effective resources (Auto Scaling, Down Scaling, Policies and Purchasing Options) Expenditure awareness (Using AWS and third party tools) Optimizing over time (Right Sizing) As with any guidance there are trade-offs. Ensure you work with your organization to understand the priorities for this workload and which best practices are most important.","title":"EKS Cost Optimization Best Practices"},{"location":"cost_optimization/cost_optimization_index/#how-to-use-this-guide","text":"This guide is meant for devops teams who are responsible for implementing and managing the EKS clusters and the workloads they support. The guide is organized into different best practice areas for easier consumption. Each topic has a list of recommendations, tools to use and best practices for cost optimization of your EKS clusters. The topics do not need to read in a particular order.","title":"How to use this guide"},{"location":"cost_optimization/cost_optimization_index/#key-aws-services-and-kubernetes-features","text":"Cost optimization is supported by the following AWS services and features: + EC2 Instance types, Savings Plan (and Reserved Instances) and Spot Instances, at different prices. + Auto Scaling along with Kubernetes native Auto Scaling policies. Consider Savings Plan (Previously Reserved Instances) for predictable workloads. Use managed data stores like EBS and EFS, for elasticity and durability of the application data. + The Billing and Cost Management console dashboard along with AWS Cost Explorer provides an overview of your AWS usage. Use AWS Organizations for granular billing details. Details of several third party tools have also been shared. + Amazon CloudWatch Container Metrics provides metrics around usage of resources by the EKS cluster. In addition to the Kubernetes dashboard, there are several tools in the Kubernetes ecosystem that can be used to reduce wastage. This guide includes a set of recommendations that you can use to improve the cost optimization of your Amazon EKS cluster.","title":"Key AWS Services and Kubernetes features"},{"location":"cost_optimization/cost_optimization_index/#feedback","text":"This guide is being released on GitHub so as to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. Our intention is to update the guide periodically as new features are added to the service or when a new best practice evolves.","title":"Feedback"},{"location":"cost_optimization/optimizing/","text":"Optimizing over time (Right Sizing) \u00b6 Right Sizing as per the AWS Well-Architected Framework, is \u201c\u2026 using the lowest cost resource that still meets the technical specifications of a specific workload\u201d. When you specify the resource requests for the Containers in a Pod, the scheduler uses this information to decide which node to place the Pod on. When you specify a resource limits for a Container, the kubelet enforces those limits so that the running container is not allowed to use more of that resource than the limit you set. The details of how Kubernetes manages resources for containers are given in the documentation . In Kubernetes, this means setting the right compute resources ( CPU and memory are collectively referred to as compute resources ) - setting the resource requests that align as close as possible to the actual utilization. The tools for getting the actual resource usags of Pods are given in the section on Rexommendations below. Amazon EKS on AWS Fargate : When pods are scheduled on Fargate, the vCPU and memory reservations within the pod specification determine how much CPU and memory to provision for the pod. If you do not specify a vCPU and memory combination, then the smallest available combination is used (.25 vCPU and 0.5 GB memory). The list of vCPU and memory combinations that are available for pods running on Fargate are listed in the Amazon EKS User Guide . Amazon EKS on EC2 : When you create a Pod, you can specify how much of each resource like CPU and Memory, a Container needs. It is important we do not over-provision (which will lead to wastage) or under-provision (will lead to throttling) the resources allocated to the containers. Recommendations \u00b6 Use tools to help you allocate resources based on observed data \u00b6 There are tools like kube resource report which can help with right sizing of pods deployed on Amazon EKS with EC2 nodes. Deployment steps for kube resource report: $ git clone https://github.com/hjacobs/kube-resource-report $ cd kube-resource-report $ helm install kube-resource-report ./unsupported/chart/kube-resource-report $ helm status kube-resource-report $ export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=kube-resource-report,app.kubernetes.io/instance=kube-resource-report\" -o jsonpath=\"{.items[0].metadata.name}\") $ echo \"Visit http://127.0.0.1:8080 to use your application\" $ kubectl port-forward $POD_NAME 8080:8080 Screenshots from a sample reports from this tool: FairwindsOps Goldilocks : The FairwindsOps Goldilocks is a tool that creates a Vertical Pod Autoscaler (VPA) for each deployment in a namespace and then queries them for information. Once the VPAs are in place, we see recommendations appear in the Goldilocks dashboard. Deploy the Vertical Pod Autoscaler as per the documentation . Enable Namespace - Pick an application namespace and label it like so in order to see some data, in the following example we are specifying the default namespace: $ kubectl label ns default goldilocks.fairwinds.com/enabled=true Viewing the Dashboard - The default installation creates a ClusterIP service for the dashboard. You can access via port forward: $ kubectl -n goldilocks port-forward svc/goldilocks-dashboard 8080:80 Then open your browser to http://localhost:8080 Use Application Profiling tools like CloudWatch Container Insights and Prometheus Metrics in Amazon CloudWatch \u00b6 Use CloudWatch Container Insights to see how you can use native CloudWatch features to monitor your EKS Cluster performance. You can use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices running on Amazon Elastic Kubernetes Service. The metrics include utilization for resources such as CPU, memory, disk, and network - which can help with right-sizing Pods and save costs. Container Insights Prometheus Metrics Monitoring At present, support for Prometheus metrics is still in beta. CloudWatch Container Insights monitoring for Prometheus automates the discovery of Prometheus metrics from containerized systems and workloads. Prometheus is an open-source systems monitoring and alerting toolkit. All Prometheus metrics are collected in the ContainerInsights/Prometheus namespace. The Metrics provided by cAdvisor and kube-state-metrics can be used for monitoring pods on Amazon EKS on AWS Fargate using Prometheus and Grafana, which can then be used to implement requests in your containers. Please refer to this blog for more details. Right Size Guide : The right size guide (rsg) is a simple CLI tool that provides you with memory and CPU recommendations for your application. This tool works across container orchestrators, including Kubernetes and easy to deploy. By using tools like CloudWatch Container Insights, Kube Resource Report, Goldilocks and others, applications running in the Kubernetes cluster can be right sized and potentially lower your costs. Resources \u00b6 Refer to the following resources to learn more about best practices for cost optimization. Documentation and Blogs \u00b6 Amazon EKS Workshop - Setting up EKS CloudWatch Container Insights Using Prometheus Metrics in Amazon CloudWatch Monitoring Amazon EKS on AWS Fargate using Prometheus and Grafana Tools \u00b6 Kube resource report Right size guide Fargate count FairwindsOps Goldilocks Choose Right Node Size","title":"Optimizing over time (Right Sizing)"},{"location":"cost_optimization/optimizing/#optimizing-over-time-right-sizing","text":"Right Sizing as per the AWS Well-Architected Framework, is \u201c\u2026 using the lowest cost resource that still meets the technical specifications of a specific workload\u201d. When you specify the resource requests for the Containers in a Pod, the scheduler uses this information to decide which node to place the Pod on. When you specify a resource limits for a Container, the kubelet enforces those limits so that the running container is not allowed to use more of that resource than the limit you set. The details of how Kubernetes manages resources for containers are given in the documentation . In Kubernetes, this means setting the right compute resources ( CPU and memory are collectively referred to as compute resources ) - setting the resource requests that align as close as possible to the actual utilization. The tools for getting the actual resource usags of Pods are given in the section on Rexommendations below. Amazon EKS on AWS Fargate : When pods are scheduled on Fargate, the vCPU and memory reservations within the pod specification determine how much CPU and memory to provision for the pod. If you do not specify a vCPU and memory combination, then the smallest available combination is used (.25 vCPU and 0.5 GB memory). The list of vCPU and memory combinations that are available for pods running on Fargate are listed in the Amazon EKS User Guide . Amazon EKS on EC2 : When you create a Pod, you can specify how much of each resource like CPU and Memory, a Container needs. It is important we do not over-provision (which will lead to wastage) or under-provision (will lead to throttling) the resources allocated to the containers.","title":"Optimizing over time (Right Sizing)"},{"location":"cost_optimization/optimizing/#recommendations","text":"","title":"Recommendations"},{"location":"cost_optimization/optimizing/#use-tools-to-help-you-allocate-resources-based-on-observed-data","text":"There are tools like kube resource report which can help with right sizing of pods deployed on Amazon EKS with EC2 nodes. Deployment steps for kube resource report: $ git clone https://github.com/hjacobs/kube-resource-report $ cd kube-resource-report $ helm install kube-resource-report ./unsupported/chart/kube-resource-report $ helm status kube-resource-report $ export POD_NAME=$(kubectl get pods --namespace default -l \"app.kubernetes.io/name=kube-resource-report,app.kubernetes.io/instance=kube-resource-report\" -o jsonpath=\"{.items[0].metadata.name}\") $ echo \"Visit http://127.0.0.1:8080 to use your application\" $ kubectl port-forward $POD_NAME 8080:8080 Screenshots from a sample reports from this tool: FairwindsOps Goldilocks : The FairwindsOps Goldilocks is a tool that creates a Vertical Pod Autoscaler (VPA) for each deployment in a namespace and then queries them for information. Once the VPAs are in place, we see recommendations appear in the Goldilocks dashboard. Deploy the Vertical Pod Autoscaler as per the documentation . Enable Namespace - Pick an application namespace and label it like so in order to see some data, in the following example we are specifying the default namespace: $ kubectl label ns default goldilocks.fairwinds.com/enabled=true Viewing the Dashboard - The default installation creates a ClusterIP service for the dashboard. You can access via port forward: $ kubectl -n goldilocks port-forward svc/goldilocks-dashboard 8080:80 Then open your browser to http://localhost:8080","title":"Use tools to help you allocate resources based on observed data"},{"location":"cost_optimization/optimizing/#use-application-profiling-tools-like-cloudwatch-container-insights-and-prometheus-metrics-in-amazon-cloudwatch","text":"Use CloudWatch Container Insights to see how you can use native CloudWatch features to monitor your EKS Cluster performance. You can use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices running on Amazon Elastic Kubernetes Service. The metrics include utilization for resources such as CPU, memory, disk, and network - which can help with right-sizing Pods and save costs. Container Insights Prometheus Metrics Monitoring At present, support for Prometheus metrics is still in beta. CloudWatch Container Insights monitoring for Prometheus automates the discovery of Prometheus metrics from containerized systems and workloads. Prometheus is an open-source systems monitoring and alerting toolkit. All Prometheus metrics are collected in the ContainerInsights/Prometheus namespace. The Metrics provided by cAdvisor and kube-state-metrics can be used for monitoring pods on Amazon EKS on AWS Fargate using Prometheus and Grafana, which can then be used to implement requests in your containers. Please refer to this blog for more details. Right Size Guide : The right size guide (rsg) is a simple CLI tool that provides you with memory and CPU recommendations for your application. This tool works across container orchestrators, including Kubernetes and easy to deploy. By using tools like CloudWatch Container Insights, Kube Resource Report, Goldilocks and others, applications running in the Kubernetes cluster can be right sized and potentially lower your costs.","title":"Use Application Profiling tools like CloudWatch Container Insights and Prometheus Metrics in Amazon CloudWatch"},{"location":"cost_optimization/optimizing/#resources","text":"Refer to the following resources to learn more about best practices for cost optimization.","title":"Resources"},{"location":"cost_optimization/optimizing/#documentation-and-blogs","text":"Amazon EKS Workshop - Setting up EKS CloudWatch Container Insights Using Prometheus Metrics in Amazon CloudWatch Monitoring Amazon EKS on AWS Fargate using Prometheus and Grafana","title":"Documentation and Blogs"},{"location":"cost_optimization/optimizing/#tools","text":"Kube resource report Right size guide Fargate count FairwindsOps Goldilocks Choose Right Node Size","title":"Tools"},{"location":"karpenter/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Karpenter Best Practices \u00b6 Karpenter \u00b6 Karpenter is an open-source cluster autoscaler that automatically provisions new nodes in response to unschedulable pods. Karpenter evaluates the aggregate resource requirements of the pending pods and chooses the optimal instance type to run them. It will automatically scale-in or terminate instances that don\u2019t have any non-daemonset pods to reduce waste. It also supports a consolidation feature which will actively move pods around and either delete or replace nodes with cheaper versions to reduce cluster cost. Reasons to use Karpenter Before the launch of Karpenter, Kubernetes users relied primarily on Amazon EC2 Auto Scaling groups and the Kubernetes Cluster Autoscaler (CAS) to dynamically adjust the compute capacity of their clusters. With Karpenter, you don\u2019t need to create dozens of node groups to achieve the flexibility and diversity you get with Karpenter. Moreover, Karpenter is not as tightly coupled to Kubernetes versions (as CAS is) and doesn\u2019t require you to jump between AWS and Kubernetes APIs. Karpenter consolidates instance orchestration responsibilities within a single system, which is simpler, more stable and cluster-aware. Karpenter was designed to overcome some of the challenges presented by Cluster Autoscaler by providing simplified ways to: Provision nodes based on workload requirements. Create diverse node configurations by instance type, using flexible workload provisioner options. Instead of managing many specific custom node groups, Karpenter could let you manage diverse workload capacity with a single, flexible provisioner. Achieve improved pod scheduling at scale by quickly launching nodes and scheduling pods. For information and documentation on using Karpenter, visit the karpenter.sh site. Recommendations \u00b6 Best practices are divided into sections on Karpenter itself, provisioners, and pod scheduling. Karpenter best practices \u00b6 The following best practices cover topics related to Karpenter itself. Use Karpenter for workloads with changing capacity needs \u00b6 Karpenter brings scaling management closer to Kubernetes native APIs than do Autoscaling Groups (ASGs) and Managed Node Groups (MNGs). ASGs and MNGs are AWS-native abstractions where scaling is triggered based on AWS level metrics, such as EC2 CPU load. Cluster Autoscaler bridges the Kubernetes abstractions into AWS abstractions, but loses some flexibility because of that, such as scheduling for a specific availability zone. Karpenter removes a layer of AWS abstraction to bring some of the flexibility directly into Kubernetes. Karpenter is best used for clusters with workloads that encounter periods of high, spiky demand or have diverse compute requirements. MNGs and ASGs are good for clusters running workloads that tend to be more static and consistent. You can use a mix of dynamically and statically managed nodes, depending on your requirements. Consider other autoscaling projects when... \u00b6 You need features that are still being developed in Karpenter. Because Karpenter is a relatively new project, consider other autoscaling projects for the time being if you have a need for features that are not yet part of Karpenter. Run the Karpenter controller on EKS Fargate or on a worker node that belongs to a node group \u00b6 Karpenter is installed using a Helm chart . The Helm chart installs the Karpenter controller and a webhook pod as a Deployment that needs to run before the controller can be used for scaling your cluster. We recommend a minimum of one small node group with at least one worker node. As an alternative, you can run these pods on EKS Fargate by creating a Fargate profile for the karpenter namespace. Doing so will cause all pods deployed into this namespace to run on EKS Fargate. Do not run Karpenter on a node that is managed by Karpenter. Avoid using custom launch templates with Karpenter \u00b6 Karpenter strongly recommends against using custom launch templates. Using custom launch templates prevents multi-architecture support, the ability to automatically upgrade nodes, and securityGroup discovery. Using launch templates may also cause confusion because certain fields are duplicated within Karpenter\u2019s provisioners while others are ignored by Karpenter, e.g. subnets and instance types. You can often avoid using launch templates by using custom user data and/or directly specifying custom AMIs in the AWS node template. More information on how to do this is available at Node Templates . Exclude instance types that do not fit your workload \u00b6 Consider excluding specific instances types with the node.kubernetes.io/instance-type key if they are not required by workloads running in your cluster. The following example shows how to avoid provisioning large Graviton instances. - key : node.kubernetes.io/instance-type operator : NotIn values : 'm6g.16xlarge' 'm6gd.16xlarge' 'r6g.16xlarge' 'r6gd.16xlarge' 'c6g.16xlarge' Enable Interruption Handling when using Spot \u00b6 Karpenter supports native interruption handling , enabled through the aws.interruptionQueue value in Karpenter settings . Interruption handling watches for upcoming involuntary interruption events that would cause disruption to your workloads such as: Spot Interruption Warnings Scheduled Change Health Events (Maintenance Events) Instance Terminating Events Instance Stopping Events When Karpenter detects one of these events will occur to your nodes, it automatically cordons, drains, and terminates the node(s) ahead of the interruption event to give the maximum amount of time for workload cleanup prior to interruption. It is not advised to use AWS Node Termination Handler alongside Karpenter as explained here . Pods that require checkpointing or other forms of graceful draining, requiring the 2-mins before shutdown should enable Karpenter interruption handling in their clusters. Amazon EKS private cluster without outbound internet access \u00b6 When provisioning an EKS Cluster into a VPC with no route to the internet, you have to make sure you\u2019ve configured your environment in accordance with the private cluster requirements that appear in EKS documentation. In addition, you need to make sure you\u2019ve created an STS VPC regional endpoint in your VPC. If not, you will see errors similar to those that appear below. ERROR controller.controller.metrics Reconciler error {\"commit\": \"5047f3c\", \"reconciler group\": \"karpenter.sh\", \"reconciler kind\": \"Provisioner\", \"name\": \"default\", \"namespace\": \"\", \"error\": \"fetching instance types using ec2.DescribeInstanceTypes, WebIdentityErr: failed to retrieve credentials\\ncaused by: RequestError: send request failed\\ncaused by: Post \\\"https://sts.<region>.amazonaws.com/\\\": dial tcp x.x.x.x:443: i/o timeout\"} These changes are necessary in a private cluster because the Karpenter Controller uses IAM Roles for Service Accounts (IRSA). Pods configured with IRSA acquire credentials by calling the AWS Security Token Service (AWS STS) API. If there is no outbound internet access, you must create and use an AWS STS VPC endpoint in your VPC . Private clusters also require you to create a VPC endpoint for SSM . When Karpenter tries to provision a new node, it queries the Launch template configs and an SSM parameter. If you do not have a SSM VPC endpoint in your VPC, it will cause the following error: INFO controller.provisioning Waiting for unschedulable pods {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Batched 3 pods in 1.000572709s {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Computed packing of 1 node(s) for 3 pod(s) with instance type option(s) [c4.xlarge c6i.xlarge c5.xlarge c5d.xlarge c5a.xlarge c5n.xlarge m6i.xlarge m4.xlarge m6a.xlarge m5ad.xlarge m5d.xlarge t3.xlarge m5a.xlarge t3a.xlarge m5.xlarge r4.xlarge r3.xlarge r5ad.xlarge r6i.xlarge r5a.xlarge] {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} ERROR controller.provisioning Could not launch node, launching instances, getting launch template configs, getting launch templates, getting ssm parameter, RequestError: send request failed caused by: Post \"https://ssm.<region>.amazonaws.com/\": dial tcp x.x.x.x:443: i/o timeout {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} There is no VPC endpoint for the Price List Query API . As a result, pricing data will go stale over time. Karpenter gets around this by including on-demand pricing data in its binary, but only updates that data when Karpenter is upgraded. Failed requests for pricing data will result in the following error messages: ERROR controller.aws.pricing updating on-demand pricing, RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout; RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout, using existing pricing data from 2022-08-17T00:19:52Z {\"commit\": \"4b5f953\"} In summary, to use Karpenter in a completely Private EKS Clusters, you need to create the following VPC endpoints: com.amazonaws.<region>.ec2 com.amazonaws.<region>.ecr.api com.amazonaws.<region>.ecr.dkr com.amazonaws.<region>.s3 \u2013 For pulling container images com.amazonaws.<region>.sts \u2013 For IAM roles for service accounts com.amazonaws.<region>.ssm - If using Karpenter Note Karpenter (controller and webhook deployment) container images must be in or copied to Amazon ECR private or to a another private registry accessible from inside the VPC. The reason for this is that the Karpenter controller and webhook pods currently use Public ECR images. If these are not available from within the VPC, or from networks peered with the VPC, you will get Image pull errors when Kubernetes tries to pull these images from ECR public. For further information, see Issue 988 and Issue 1157 . Creating provisioners \u00b6 The following best practices cover topics related to creating provisioners. Create multiple provisioners when... \u00b6 When different teams are sharing a cluster and need to run their workloads on different worker nodes, or have different OS or instance type requirements, create multiple provisioners. For example, one team may want to use Bottlerocket, while another may want to use Amazon Linux. Likewise, one team might have access to expensive GPU hardware that wouldn\u2019t be needed by another team. Using multiple provisioners makes sure that the most appropriate assets are available to each team. Create provisioners that are mutually exclusive or weighted \u00b6 It is recommended to create Provisioners that are either mutually exclusive or weighted to provide consistent scheduling behavior. If they are not and multiple Provisioners are matched, Karpenter will randomly choose which to use, causing unexpected results. Useful examples for creating multiple provisioners include the following: Creating a Provisioner with GPU and only allowing special workloads to run on these (expensive) nodes: # Provisioner for GPU Instances with Taints apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : gpu spec : requirements : - key : node.kubernetes.io/instance-type operator : In values : - p3.8xlarge - p3.16xlarge taints : - effect : NoSchedule key : nvidia.com/gpu value : \"true\" ttlSecondsAfterEmpty : 60 Deployment with toleration for the taint: # Deployment of GPU Workload will have tolerations defined apiVersion : apps/v1 kind : Deployment metadata : name : inflate-gpu spec : ... spec : tolerations : - key : \"nvidia.com/gpu\" operator : \"Exists\" effect : \"NoSchedule\" For a general deployment for another team, the provisioner spec could include nodeAffinify. A Deployment could then use nodeSelectorTerms to match billing-team . # Provisioner for regular EC2 instances apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : generalcompute spec : labels : billing-team : my-team requirements : - key : node.kubernetes.io/instance-type operator : In values : - m5.large - m5.xlarge - m5.2xlarge - c5.large - c5.xlarge - c5a.large - c5a.xlarge - r5.large - r5.xlarge Deployment using nodeAffinity: # Deployment will have spec.affinity.nodeAffinity defined kind : Deployment metadata : name : workload-my-team spec : replicas : 200 ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : \"billing-team\" operator : \"In\" values : [ \"my-team\" ] Use timers (TTL) to automatically delete nodes from the cluster \u00b6 You can use timers on provisioned nodes to set when to delete nodes that are devoid of workload pods or have reached an expiration time. Node expiry can be used as a means of upgrading, so that nodes are retired and replaced with updated versions. See How Karpenter nodes are deprovisioned in the Karpenter documentation for information on using ttlSecondsUntilExpired and ttlSecondsAfterEmpty to deprovision nodes. Avoid overly constraining the Instance Types that Karpenter can provision, especially when utilizing Spot \u00b6 When using Spot, Karpenter uses the Price Capacity Optimized allocation strategy to provision EC2 instances. This strategy instructs EC2 to provision instances from the deepest pools for the number of instances that you are launching and have the lowest risk of interruption. EC2 Fleet then requests Spot instances from the lowest priced of these pools. The more instance types you allow Karpenter to utilize, the better EC2 can optimize your spot instance\u2019s runtime. By default, Karpenter will use all Instance Types EC2 offers in the region and availability zones your cluster is deployed in. Karpenter intelligently chooses from the set of all instance types based on pending pods to make sure your pods are scheduled onto appropriately sized and equipped instances. For example, if your pod does not require a GPU, Karpenter will not schedule your pod to an EC2 instance type supporting a GPU. When you're unsure about which instance types to use, you can run the Amazon ec2-instance-selector to generate a list of instance types that match your compute requirements. For example, the CLI takes memory vCPU, architecture, and region as input parameters and provides you with a list of EC2 instances that satisfy those constraints. $ ec2-instance-selector --memory 4 --vcpus 2 --cpu-architecture x86_64 -r ap-southeast-1 c5.large c5a.large c5ad.large c5d.large c6i.large t2.medium t3.medium t3a.medium You shouldn\u2019t place too many constraints on Karpenter when using Spot instances because doing so can affect the availability of your applications. Say, for example, all of the instances of a particular type are reclaimed and there are no suitable alternatives available to replace them. Your pods will remain in a pending state until the spot capacity for the configured instance types is replenished. You can reduce the risk of insufficient capacity errors by spreading your instances across different availability zones, because spot pools are different across AZs. That said, the general best practice is to allow Karpenter to use a diverse set of instance types when using Spot. Scheduling Pods \u00b6 The following best practices relate to deploying pods In a cluster using Karpenter for node provisioning. Follow EKS best practices for high availability \u00b6 If you need to run highly available applications, follow general EKS best practice recommendations . See Topology Spread in Karpenter documentation for details on how to spread pods across nodes and zones. Use Disruption Budgets to set the minimum available pods that need to be maintained, in case there are attempts to evict or delete pods. Use layered Constraints to constrain the compute features available from your cloud provider \u00b6 Karpenter\u2019s model of layered constraints allows you to create a complex set of provisioner and pod deployment constraints to get the best possible matches for pod scheduling. Examples of constraints that a pod spec can request include the following: Needing to run in availability zones where only particular applications are available. Say, for example, you have pod that has to communicate with another application that runs on an EC2 instance residing in a particular availability zone. If your aim is to reduce cross-AZ traffic in your VPC, you may want to co-locate the pods in the AZ where the EC2 instance is located. This sort of targeting is often accomplished using node selectors. For additional information on Node selectors , please refer to the Kubernetes documentation. Requiring certain kinds of processors or other hardware. See the Accelerators section of the Karpenter docs for a podspec example that requires the pod to run on a GPU. Create billing alarms to monitor your compute spend \u00b6 When you configure your cluster to automatically scale, you should create billing alarms to warn you when your spend has exceeded a threshold and add resource limits to your Karpenter configuration. Setting resource limits with Karpenter is similar to setting an AWS autoscaling group\u2019s maximum capacity in that it represents the maximum amount of compute resources that can be instantiated by a Karpenter provisioner. Note It is not possible to set a global limit for the whole cluster. Limits apply to specific provisioners. The snippet below tells Karpenter to only provision a maximum of 1000 CPU cores and 1000Gi of memory. Karpenter will stop adding capacity only when the limit is met or exceeded. When a limit is exceeded the Karpenter controller will write memory resource usage of 1001 exceeds limit of 1000 or a similar looking message to the controller\u2019s logs. If you are routing your container logs to CloudWatch logs, you can create a metrics filter to look for specific patterns or terms in your logs and then create a CloudWatch alarm to alert you when your configured metrics threshold is breached. For further information using limits with Karpenter, see Setting Resource Limits in the Karpenter documentation. spec : limits : resources : cpu : 1000 memory : 1000Gi If you don\u2019t use limits or constrain the instance types that Karpenter can provision, Karpenter will continue adding compute capacity to your cluster as needed. While configuring Karpenter in this way allows your cluster to scale freely, it can also have significant cost implications. It is for this reason that we recommend that configuring billing alarms. Billing alarms allow you to be alerted and proactively notified when the calculated estimated charges in your account(s) exceed a defined threshold. See Setting up an Amazon CloudWatch Billing Alarm to Proactively Monitor Estimated Charges for additional information. You may also want to enable Cost Anomaly Detection which is an AWS Cost Management feature that uses machine learning to continuously monitor your cost and usage to detect unusual spends. Further information can be found in the AWS Cost Anomaly Detection Getting Started guide. If you\u2019ve gone so far as to create a budget in AWS Budgets, you can also configure an action to notify you when a specific threshold has been breached. With budget actions you can send an email, post a message to an SNS topic, or send a message to a chatbot like Slack. For further information see Configuring AWS Budgets actions . Use the do-not-evict annotation to prevent Karpenter from deprovisioning a node \u00b6 If you are running a critical application on a Karpenter-provisioned node, such as a long running batch job or stateful application, and the node\u2019s TTL has expired, the application will be interrupted when the instance is terminated. By adding a karpenter.sh/do-not-evict annotation to the pod, you are instructing Karpenter to preserve the node until the Pod is terminated or the do-not-evict annotation is removed. See Deprovisioning documentation for further information. If the only non-daemonset pods left on a node are those associated with jobs, Karpenter is able to target and terminate those nodes so long as the job status is succeed or failed. Configure requests=limits for all non-CPU resources when using consolidation \u00b6 Consolidation and scheduling in general work by comparing the pods resource requests vs the amount of allocatable resources on a node. The resource limits are not considered. As an example, pods that have a memory limit that is larger than the memory request can burst above the request. If several pods on the same node burst at the same time, this can cause some of the pods to be terminated due to an out of memory (OOM) condition. Consolidation can make this more likely to occur as it works to pack pods onto nodes only considering their requests. Use LimitRanges to configure defaults for resource requests and limits \u00b6 Because Kubernetes doesn\u2019t set default requests or limits, a container\u2019s consumption of resources from the underlying host, CPU, and memory is unbound. The Kubernetes scheduler looks at a pod\u2019s total requests (the higher of the total requests from the pod\u2019s containers or the total resources from the pod\u2019s Init containers) to determine which worker node to schedule the pod onto. Similarly, Karpenter considers a pod\u2019s requests to determine which type of instance it provisions. You can use a limit range to apply a sensible default for a namespace, in case resource requests are not specified by some pods. See Configure Default Memory Requests and Limits for a Namespace Apply accurate resource requests to all workloads \u00b6 Karpenter is able to launch nodes that best fit your workloads when its information about your workloads requirements is accurate. This is particularly important if using Karpenter's consolidation feature. See Configure and Size Resource Requests/Limits for all Workloads Additional Resources \u00b6 Karpenter/Spot Workshop Karpenter Node Provisioner TGIK Karpenter Karpenter vs. Cluster Autoscaler Groupless Autoscaling with Karpenter","title":"Karpenter"},{"location":"karpenter/#karpenter-best-practices","text":"","title":"Karpenter Best Practices"},{"location":"karpenter/#karpenter","text":"Karpenter is an open-source cluster autoscaler that automatically provisions new nodes in response to unschedulable pods. Karpenter evaluates the aggregate resource requirements of the pending pods and chooses the optimal instance type to run them. It will automatically scale-in or terminate instances that don\u2019t have any non-daemonset pods to reduce waste. It also supports a consolidation feature which will actively move pods around and either delete or replace nodes with cheaper versions to reduce cluster cost. Reasons to use Karpenter Before the launch of Karpenter, Kubernetes users relied primarily on Amazon EC2 Auto Scaling groups and the Kubernetes Cluster Autoscaler (CAS) to dynamically adjust the compute capacity of their clusters. With Karpenter, you don\u2019t need to create dozens of node groups to achieve the flexibility and diversity you get with Karpenter. Moreover, Karpenter is not as tightly coupled to Kubernetes versions (as CAS is) and doesn\u2019t require you to jump between AWS and Kubernetes APIs. Karpenter consolidates instance orchestration responsibilities within a single system, which is simpler, more stable and cluster-aware. Karpenter was designed to overcome some of the challenges presented by Cluster Autoscaler by providing simplified ways to: Provision nodes based on workload requirements. Create diverse node configurations by instance type, using flexible workload provisioner options. Instead of managing many specific custom node groups, Karpenter could let you manage diverse workload capacity with a single, flexible provisioner. Achieve improved pod scheduling at scale by quickly launching nodes and scheduling pods. For information and documentation on using Karpenter, visit the karpenter.sh site.","title":"Karpenter"},{"location":"karpenter/#recommendations","text":"Best practices are divided into sections on Karpenter itself, provisioners, and pod scheduling.","title":"Recommendations"},{"location":"karpenter/#karpenter-best-practices_1","text":"The following best practices cover topics related to Karpenter itself.","title":"Karpenter best practices"},{"location":"karpenter/#use-karpenter-for-workloads-with-changing-capacity-needs","text":"Karpenter brings scaling management closer to Kubernetes native APIs than do Autoscaling Groups (ASGs) and Managed Node Groups (MNGs). ASGs and MNGs are AWS-native abstractions where scaling is triggered based on AWS level metrics, such as EC2 CPU load. Cluster Autoscaler bridges the Kubernetes abstractions into AWS abstractions, but loses some flexibility because of that, such as scheduling for a specific availability zone. Karpenter removes a layer of AWS abstraction to bring some of the flexibility directly into Kubernetes. Karpenter is best used for clusters with workloads that encounter periods of high, spiky demand or have diverse compute requirements. MNGs and ASGs are good for clusters running workloads that tend to be more static and consistent. You can use a mix of dynamically and statically managed nodes, depending on your requirements.","title":"Use Karpenter for workloads with changing capacity needs"},{"location":"karpenter/#consider-other-autoscaling-projects-when","text":"You need features that are still being developed in Karpenter. Because Karpenter is a relatively new project, consider other autoscaling projects for the time being if you have a need for features that are not yet part of Karpenter.","title":"Consider other autoscaling projects when..."},{"location":"karpenter/#run-the-karpenter-controller-on-eks-fargate-or-on-a-worker-node-that-belongs-to-a-node-group","text":"Karpenter is installed using a Helm chart . The Helm chart installs the Karpenter controller and a webhook pod as a Deployment that needs to run before the controller can be used for scaling your cluster. We recommend a minimum of one small node group with at least one worker node. As an alternative, you can run these pods on EKS Fargate by creating a Fargate profile for the karpenter namespace. Doing so will cause all pods deployed into this namespace to run on EKS Fargate. Do not run Karpenter on a node that is managed by Karpenter.","title":"Run the Karpenter controller on EKS Fargate or on a worker node that belongs to a node group"},{"location":"karpenter/#avoid-using-custom-launch-templates-with-karpenter","text":"Karpenter strongly recommends against using custom launch templates. Using custom launch templates prevents multi-architecture support, the ability to automatically upgrade nodes, and securityGroup discovery. Using launch templates may also cause confusion because certain fields are duplicated within Karpenter\u2019s provisioners while others are ignored by Karpenter, e.g. subnets and instance types. You can often avoid using launch templates by using custom user data and/or directly specifying custom AMIs in the AWS node template. More information on how to do this is available at Node Templates .","title":"Avoid using custom launch templates with Karpenter"},{"location":"karpenter/#exclude-instance-types-that-do-not-fit-your-workload","text":"Consider excluding specific instances types with the node.kubernetes.io/instance-type key if they are not required by workloads running in your cluster. The following example shows how to avoid provisioning large Graviton instances. - key : node.kubernetes.io/instance-type operator : NotIn values : 'm6g.16xlarge' 'm6gd.16xlarge' 'r6g.16xlarge' 'r6gd.16xlarge' 'c6g.16xlarge'","title":"Exclude instance types that do not fit your workload"},{"location":"karpenter/#enable-interruption-handling-when-using-spot","text":"Karpenter supports native interruption handling , enabled through the aws.interruptionQueue value in Karpenter settings . Interruption handling watches for upcoming involuntary interruption events that would cause disruption to your workloads such as: Spot Interruption Warnings Scheduled Change Health Events (Maintenance Events) Instance Terminating Events Instance Stopping Events When Karpenter detects one of these events will occur to your nodes, it automatically cordons, drains, and terminates the node(s) ahead of the interruption event to give the maximum amount of time for workload cleanup prior to interruption. It is not advised to use AWS Node Termination Handler alongside Karpenter as explained here . Pods that require checkpointing or other forms of graceful draining, requiring the 2-mins before shutdown should enable Karpenter interruption handling in their clusters.","title":"Enable Interruption Handling when using Spot"},{"location":"karpenter/#amazon-eks-private-cluster-without-outbound-internet-access","text":"When provisioning an EKS Cluster into a VPC with no route to the internet, you have to make sure you\u2019ve configured your environment in accordance with the private cluster requirements that appear in EKS documentation. In addition, you need to make sure you\u2019ve created an STS VPC regional endpoint in your VPC. If not, you will see errors similar to those that appear below. ERROR controller.controller.metrics Reconciler error {\"commit\": \"5047f3c\", \"reconciler group\": \"karpenter.sh\", \"reconciler kind\": \"Provisioner\", \"name\": \"default\", \"namespace\": \"\", \"error\": \"fetching instance types using ec2.DescribeInstanceTypes, WebIdentityErr: failed to retrieve credentials\\ncaused by: RequestError: send request failed\\ncaused by: Post \\\"https://sts.<region>.amazonaws.com/\\\": dial tcp x.x.x.x:443: i/o timeout\"} These changes are necessary in a private cluster because the Karpenter Controller uses IAM Roles for Service Accounts (IRSA). Pods configured with IRSA acquire credentials by calling the AWS Security Token Service (AWS STS) API. If there is no outbound internet access, you must create and use an AWS STS VPC endpoint in your VPC . Private clusters also require you to create a VPC endpoint for SSM . When Karpenter tries to provision a new node, it queries the Launch template configs and an SSM parameter. If you do not have a SSM VPC endpoint in your VPC, it will cause the following error: INFO controller.provisioning Waiting for unschedulable pods {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Batched 3 pods in 1.000572709s {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Computed packing of 1 node(s) for 3 pod(s) with instance type option(s) [c4.xlarge c6i.xlarge c5.xlarge c5d.xlarge c5a.xlarge c5n.xlarge m6i.xlarge m4.xlarge m6a.xlarge m5ad.xlarge m5d.xlarge t3.xlarge m5a.xlarge t3a.xlarge m5.xlarge r4.xlarge r3.xlarge r5ad.xlarge r6i.xlarge r5a.xlarge] {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} ERROR controller.provisioning Could not launch node, launching instances, getting launch template configs, getting launch templates, getting ssm parameter, RequestError: send request failed caused by: Post \"https://ssm.<region>.amazonaws.com/\": dial tcp x.x.x.x:443: i/o timeout {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} There is no VPC endpoint for the Price List Query API . As a result, pricing data will go stale over time. Karpenter gets around this by including on-demand pricing data in its binary, but only updates that data when Karpenter is upgraded. Failed requests for pricing data will result in the following error messages: ERROR controller.aws.pricing updating on-demand pricing, RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout; RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout, using existing pricing data from 2022-08-17T00:19:52Z {\"commit\": \"4b5f953\"} In summary, to use Karpenter in a completely Private EKS Clusters, you need to create the following VPC endpoints: com.amazonaws.<region>.ec2 com.amazonaws.<region>.ecr.api com.amazonaws.<region>.ecr.dkr com.amazonaws.<region>.s3 \u2013 For pulling container images com.amazonaws.<region>.sts \u2013 For IAM roles for service accounts com.amazonaws.<region>.ssm - If using Karpenter Note Karpenter (controller and webhook deployment) container images must be in or copied to Amazon ECR private or to a another private registry accessible from inside the VPC. The reason for this is that the Karpenter controller and webhook pods currently use Public ECR images. If these are not available from within the VPC, or from networks peered with the VPC, you will get Image pull errors when Kubernetes tries to pull these images from ECR public. For further information, see Issue 988 and Issue 1157 .","title":"Amazon EKS private cluster without outbound internet access"},{"location":"karpenter/#creating-provisioners","text":"The following best practices cover topics related to creating provisioners.","title":"Creating provisioners"},{"location":"karpenter/#create-multiple-provisioners-when","text":"When different teams are sharing a cluster and need to run their workloads on different worker nodes, or have different OS or instance type requirements, create multiple provisioners. For example, one team may want to use Bottlerocket, while another may want to use Amazon Linux. Likewise, one team might have access to expensive GPU hardware that wouldn\u2019t be needed by another team. Using multiple provisioners makes sure that the most appropriate assets are available to each team.","title":"Create multiple provisioners when..."},{"location":"karpenter/#create-provisioners-that-are-mutually-exclusive-or-weighted","text":"It is recommended to create Provisioners that are either mutually exclusive or weighted to provide consistent scheduling behavior. If they are not and multiple Provisioners are matched, Karpenter will randomly choose which to use, causing unexpected results. Useful examples for creating multiple provisioners include the following: Creating a Provisioner with GPU and only allowing special workloads to run on these (expensive) nodes: # Provisioner for GPU Instances with Taints apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : gpu spec : requirements : - key : node.kubernetes.io/instance-type operator : In values : - p3.8xlarge - p3.16xlarge taints : - effect : NoSchedule key : nvidia.com/gpu value : \"true\" ttlSecondsAfterEmpty : 60 Deployment with toleration for the taint: # Deployment of GPU Workload will have tolerations defined apiVersion : apps/v1 kind : Deployment metadata : name : inflate-gpu spec : ... spec : tolerations : - key : \"nvidia.com/gpu\" operator : \"Exists\" effect : \"NoSchedule\" For a general deployment for another team, the provisioner spec could include nodeAffinify. A Deployment could then use nodeSelectorTerms to match billing-team . # Provisioner for regular EC2 instances apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : generalcompute spec : labels : billing-team : my-team requirements : - key : node.kubernetes.io/instance-type operator : In values : - m5.large - m5.xlarge - m5.2xlarge - c5.large - c5.xlarge - c5a.large - c5a.xlarge - r5.large - r5.xlarge Deployment using nodeAffinity: # Deployment will have spec.affinity.nodeAffinity defined kind : Deployment metadata : name : workload-my-team spec : replicas : 200 ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : \"billing-team\" operator : \"In\" values : [ \"my-team\" ]","title":"Create provisioners that are mutually exclusive or weighted"},{"location":"karpenter/#use-timers-ttl-to-automatically-delete-nodes-from-the-cluster","text":"You can use timers on provisioned nodes to set when to delete nodes that are devoid of workload pods or have reached an expiration time. Node expiry can be used as a means of upgrading, so that nodes are retired and replaced with updated versions. See How Karpenter nodes are deprovisioned in the Karpenter documentation for information on using ttlSecondsUntilExpired and ttlSecondsAfterEmpty to deprovision nodes.","title":"Use timers (TTL) to automatically delete nodes from the cluster"},{"location":"karpenter/#avoid-overly-constraining-the-instance-types-that-karpenter-can-provision-especially-when-utilizing-spot","text":"When using Spot, Karpenter uses the Price Capacity Optimized allocation strategy to provision EC2 instances. This strategy instructs EC2 to provision instances from the deepest pools for the number of instances that you are launching and have the lowest risk of interruption. EC2 Fleet then requests Spot instances from the lowest priced of these pools. The more instance types you allow Karpenter to utilize, the better EC2 can optimize your spot instance\u2019s runtime. By default, Karpenter will use all Instance Types EC2 offers in the region and availability zones your cluster is deployed in. Karpenter intelligently chooses from the set of all instance types based on pending pods to make sure your pods are scheduled onto appropriately sized and equipped instances. For example, if your pod does not require a GPU, Karpenter will not schedule your pod to an EC2 instance type supporting a GPU. When you're unsure about which instance types to use, you can run the Amazon ec2-instance-selector to generate a list of instance types that match your compute requirements. For example, the CLI takes memory vCPU, architecture, and region as input parameters and provides you with a list of EC2 instances that satisfy those constraints. $ ec2-instance-selector --memory 4 --vcpus 2 --cpu-architecture x86_64 -r ap-southeast-1 c5.large c5a.large c5ad.large c5d.large c6i.large t2.medium t3.medium t3a.medium You shouldn\u2019t place too many constraints on Karpenter when using Spot instances because doing so can affect the availability of your applications. Say, for example, all of the instances of a particular type are reclaimed and there are no suitable alternatives available to replace them. Your pods will remain in a pending state until the spot capacity for the configured instance types is replenished. You can reduce the risk of insufficient capacity errors by spreading your instances across different availability zones, because spot pools are different across AZs. That said, the general best practice is to allow Karpenter to use a diverse set of instance types when using Spot.","title":"Avoid overly constraining the Instance Types that Karpenter can provision, especially when utilizing Spot"},{"location":"karpenter/#scheduling-pods","text":"The following best practices relate to deploying pods In a cluster using Karpenter for node provisioning.","title":"Scheduling Pods"},{"location":"karpenter/#follow-eks-best-practices-for-high-availability","text":"If you need to run highly available applications, follow general EKS best practice recommendations . See Topology Spread in Karpenter documentation for details on how to spread pods across nodes and zones. Use Disruption Budgets to set the minimum available pods that need to be maintained, in case there are attempts to evict or delete pods.","title":"Follow EKS best practices for high availability"},{"location":"karpenter/#use-layered-constraints-to-constrain-the-compute-features-available-from-your-cloud-provider","text":"Karpenter\u2019s model of layered constraints allows you to create a complex set of provisioner and pod deployment constraints to get the best possible matches for pod scheduling. Examples of constraints that a pod spec can request include the following: Needing to run in availability zones where only particular applications are available. Say, for example, you have pod that has to communicate with another application that runs on an EC2 instance residing in a particular availability zone. If your aim is to reduce cross-AZ traffic in your VPC, you may want to co-locate the pods in the AZ where the EC2 instance is located. This sort of targeting is often accomplished using node selectors. For additional information on Node selectors , please refer to the Kubernetes documentation. Requiring certain kinds of processors or other hardware. See the Accelerators section of the Karpenter docs for a podspec example that requires the pod to run on a GPU.","title":"Use layered Constraints to constrain the compute features available from your cloud provider"},{"location":"karpenter/#create-billing-alarms-to-monitor-your-compute-spend","text":"When you configure your cluster to automatically scale, you should create billing alarms to warn you when your spend has exceeded a threshold and add resource limits to your Karpenter configuration. Setting resource limits with Karpenter is similar to setting an AWS autoscaling group\u2019s maximum capacity in that it represents the maximum amount of compute resources that can be instantiated by a Karpenter provisioner. Note It is not possible to set a global limit for the whole cluster. Limits apply to specific provisioners. The snippet below tells Karpenter to only provision a maximum of 1000 CPU cores and 1000Gi of memory. Karpenter will stop adding capacity only when the limit is met or exceeded. When a limit is exceeded the Karpenter controller will write memory resource usage of 1001 exceeds limit of 1000 or a similar looking message to the controller\u2019s logs. If you are routing your container logs to CloudWatch logs, you can create a metrics filter to look for specific patterns or terms in your logs and then create a CloudWatch alarm to alert you when your configured metrics threshold is breached. For further information using limits with Karpenter, see Setting Resource Limits in the Karpenter documentation. spec : limits : resources : cpu : 1000 memory : 1000Gi If you don\u2019t use limits or constrain the instance types that Karpenter can provision, Karpenter will continue adding compute capacity to your cluster as needed. While configuring Karpenter in this way allows your cluster to scale freely, it can also have significant cost implications. It is for this reason that we recommend that configuring billing alarms. Billing alarms allow you to be alerted and proactively notified when the calculated estimated charges in your account(s) exceed a defined threshold. See Setting up an Amazon CloudWatch Billing Alarm to Proactively Monitor Estimated Charges for additional information. You may also want to enable Cost Anomaly Detection which is an AWS Cost Management feature that uses machine learning to continuously monitor your cost and usage to detect unusual spends. Further information can be found in the AWS Cost Anomaly Detection Getting Started guide. If you\u2019ve gone so far as to create a budget in AWS Budgets, you can also configure an action to notify you when a specific threshold has been breached. With budget actions you can send an email, post a message to an SNS topic, or send a message to a chatbot like Slack. For further information see Configuring AWS Budgets actions .","title":"Create billing alarms to monitor your compute spend"},{"location":"karpenter/#use-the-do-not-evict-annotation-to-prevent-karpenter-from-deprovisioning-a-node","text":"If you are running a critical application on a Karpenter-provisioned node, such as a long running batch job or stateful application, and the node\u2019s TTL has expired, the application will be interrupted when the instance is terminated. By adding a karpenter.sh/do-not-evict annotation to the pod, you are instructing Karpenter to preserve the node until the Pod is terminated or the do-not-evict annotation is removed. See Deprovisioning documentation for further information. If the only non-daemonset pods left on a node are those associated with jobs, Karpenter is able to target and terminate those nodes so long as the job status is succeed or failed.","title":"Use the do-not-evict annotation to prevent Karpenter from deprovisioning a node"},{"location":"karpenter/#configure-requestslimits-for-all-non-cpu-resources-when-using-consolidation","text":"Consolidation and scheduling in general work by comparing the pods resource requests vs the amount of allocatable resources on a node. The resource limits are not considered. As an example, pods that have a memory limit that is larger than the memory request can burst above the request. If several pods on the same node burst at the same time, this can cause some of the pods to be terminated due to an out of memory (OOM) condition. Consolidation can make this more likely to occur as it works to pack pods onto nodes only considering their requests.","title":"Configure requests=limits for all non-CPU resources when using consolidation"},{"location":"karpenter/#use-limitranges-to-configure-defaults-for-resource-requests-and-limits","text":"Because Kubernetes doesn\u2019t set default requests or limits, a container\u2019s consumption of resources from the underlying host, CPU, and memory is unbound. The Kubernetes scheduler looks at a pod\u2019s total requests (the higher of the total requests from the pod\u2019s containers or the total resources from the pod\u2019s Init containers) to determine which worker node to schedule the pod onto. Similarly, Karpenter considers a pod\u2019s requests to determine which type of instance it provisions. You can use a limit range to apply a sensible default for a namespace, in case resource requests are not specified by some pods. See Configure Default Memory Requests and Limits for a Namespace","title":"Use LimitRanges to configure defaults for resource requests and limits"},{"location":"karpenter/#apply-accurate-resource-requests-to-all-workloads","text":"Karpenter is able to launch nodes that best fit your workloads when its information about your workloads requirements is accurate. This is particularly important if using Karpenter's consolidation feature. See Configure and Size Resource Requests/Limits for all Workloads","title":"Apply accurate resource requests to all workloads"},{"location":"karpenter/#additional-resources","text":"Karpenter/Spot Workshop Karpenter Node Provisioner TGIK Karpenter Karpenter vs. Cluster Autoscaler Groupless Autoscaling with Karpenter","title":"Additional Resources"},{"location":"karpenter/index.kr/","text":"{'name': 'English', 'build': True} \uce74\ud39c\ud130 \ubaa8\ubc94 \uc0ac\ub840 \u00b6 \uce74\ud39c\ud130 \u00b6 Karpenter\ub294 \uc2a4\ucf00\uc904\uc5d0 \ub9de\uc9c0 \uc54a\ub294 \ud30c\ub4dc\uc5d0 \ub300\uc751\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc785\ub2c8\ub2e4.Karpenter\ub294 \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\uc758 \uc804\uccb4 \ub9ac\uc18c\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3c9\uac00\ud558\uace0 \uc774\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \ucd5c\uc801\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4. \ub370\ubaac\uc14b\uc774 \uc544\ub2cc \ud30c\ub4dc\uac00 \uc5c6\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uac70\ub098 \uc885\ub8cc\ud558\uc5ec \ub0ad\ube44\ub97c \uc904\uc785\ub2c8\ub2e4. \ub610\ud55c \ud30c\ub4dc\ub97c \ub2a5\ub3d9\uc801\uc73c\ub85c \uc774\ub3d9\ud558\uace0 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ub354 \uc800\ub834\ud55c \ubc84\uc804\uc73c\ub85c \uad50\uccb4\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub294 \ud1b5\ud569 \uae30\ub2a5\ub3c4 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc774\uc720 Karpenter\uac00 \ucd9c\uc2dc\ub418\uae30 \uc804\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc0ac\uc6a9\uc790\ub294 \uc8fc\ub85c [Amazon EC2 Auto Scaling \uadf8\ub8f9] (https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html) \uacfc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec (CAS) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucef4\ud4e8\ud305 \ud30c\uc6cc\ub97c \ub3d9\uc801\uc73c\ub85c \uc870\uc815\ud588\uc2b5\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 Karpenter\uc5d0\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc720\uc5f0\uc131\uacfc \ub2e4\uc591\uc131\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud574 \uc218\uc2ed \uac1c\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\uac8c\ub2e4\uac00 \uce74\ud39c\ud130\ub294 (CAS\ucc98\ub7fc) \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uacfc \ubc00\uc811\ud558\uac8c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 AWS\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc0ac\uc774\ub97c \uc624\uac08 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Karpenter\ub294 \ub354 \uac04\ub2e8\ud558\uace0 \uc548\uc815\uc801\uc774\uba70 \ud074\ub7ec\uc2a4\ud130\ub97c \uc778\uc2dd\ud558\ub294 \ub2e8\uc77c \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158 \ucc45\uc784\uc744 \ud1b5\ud569\ud569\ub2c8\ub2e4. Karpenter\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uac04\uc18c\ud654\ub41c \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc81c\uc2dc\ud558\ub294 \uba87 \uac00\uc9c0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uc720\uc5f0\ud55c \uc6cc\ud06c\ub85c\ub4dc \ud504\ub85c\ube44\uc800\ub108 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \ub2e4\uc591\ud55c \ub178\ub4dc \uad6c\uc131\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 \ub9ce\uc740 \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub178\ub4dc \uadf8\ub8f9\uc744 \uad00\ub9ac\ud558\ub294 \ub300\uc2e0 \uc720\uc5f0\ud55c \ub2e8\uc77c \ud504\ub85c\ube44\uc800\ub108\ub85c \ub2e4\uc591\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc6a9\ub7c9\uc744 \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ube60\ub974\uac8c \uc2dc\uc791\ud558\uace0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\uc5ec \ub300\uaddc\ubaa8 \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc744 \uac1c\uc120\ud558\uc2ed\uc2dc\uc624. \uce74\ud39c\ud130 \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc815\ubcf4 \ubc0f \uc124\uba85\uc11c\ub97c \ubcf4\ub824\uba74 [karpenter.sh] (https://karpenter.sh/) \uc0ac\uc774\ud2b8\ub97c \ubc29\ubb38\ud558\uc2ed\uc2dc\uc624. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ubaa8\ubc94 \uc0ac\ub840\ub294 \uce74\ud39c\ud130 \uc790\uccb4, \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c, \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0 \ub300\ud55c \uc139\uc158\uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uce74\ud39c\ud130 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4 \u00b6 \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \uce74\ud39c\ud130 \uc790\uccb4\uc640 \uad00\ub828\ub41c \uc8fc\uc81c\ub97c \ub2e4\ub8f9\ub2c8\ub2e4. \ubcc0\ud654\ud558\ub294 \uc6a9\ub7c9 \uc694\uad6c\uac00 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\ub294 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc138\uc694 \u00b6 Karpenter\ub294 Auto Scaling \uadf8\ub8f9 (ASG) \ubc0f \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 (MNG) \ubcf4\ub2e4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\uc774\ud2f0\ube0c API\uc5d0 \ub354 \uac00\uae4c\uc6b4 \uc2a4\ucf00\uc77c\ub9c1 \uad00\ub9ac\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. ASG \ubc0f MNG\ub294 EC2 CPU \ubd80\ud558\uc640 \uac19\uc740 AWS \ub808\ubca8 \uba54\ud2b8\ub9ad\uc744 \uae30\ubc18\uc73c\ub85c \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud2b8\ub9ac\uac70\ub418\ub294 AWS \ub124\uc774\ud2f0\ube0c \ucd94\uc0c1\ud654\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucd94\uc0c1\ud654\ub97c AWS \ucd94\uc0c1\ud654\ub85c \uc5f0\uacb0\ud558\uc9c0\ub9cc, \uc774\ub85c \uc778\ud574 \ud2b9\uc815 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub300\ud55c \uc2a4\ucf00\uc904\ub9c1\uacfc \uac19\uc740 \uc720\uc5f0\uc131\uc774 \ub2e4\uc18c \ub5a8\uc5b4\uc9d1\ub2c8\ub2e4. Karpenter\ub294 \uc77c\ubd80 \uc720\uc5f0\uc131\uc744 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \uc9c1\uc811 \uc801\uc6a9\ud558\uae30 \uc704\ud574 AWS \ucd94\uc0c1\ud654 \uacc4\uce35\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4.Karpenter\ub294 \uc218\uc694\uac00 \uae09\uc99d\ud558\ub294 \uc2dc\uae30\uc5d0 \uc9c1\uba74\ud558\uac70\ub098 \ub2e4\uc591\ud55c \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc7a5 \uc801\ud569\ud569\ub2c8\ub2e4.MNG\uc640 ASG\ub294 \uc815\uc801\uc774\uace0 \uc77c\uad00\uc131\uc774 \ub192\uc740 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.\uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub3d9\uc801\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \ub178\ub4dc\uc640 \uc815\uc801\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \ub178\ub4dc\ub97c \ud63c\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \ub2e4\ub978 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \ud504\ub85c\uc81d\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \u00b6 \uc5ec\ub7ec\ubd84\uc774 Karpenter\uc5d0\uc11c \uc544\uc9c1 \uac1c\ubc1c \uc911\uc778 \uae30\ub2a5\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Karpenter\ub294 \ube44\uad50\uc801 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc81d\ud2b8\uc774\ubbc0\ub85c \uc544\uc9c1 Karpenter\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uae30\ub2a5\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \ub2f9\ubd84\uac04 \ub2e4\ub978 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \ud504\ub85c\uc81d\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. EKS Fargate \ub610\ub294 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc18d\ud558\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \u00b6 \uce74\ud39c\ud130\ub294 \ud5ec\ub984 \ucc28\ud2b8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ub429\ub2c8\ub2e4. \uc774 \ud5ec\ub984 \ucc28\ud2b8\ub294 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\uc640 \uc6f9\ud6c4\ud06c \ud30c\ub4dc\ub97c \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc124\uce58\ud558\ub294\ub370, \uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc2e4\ud589\ud574\uc57c \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c \ud558\ub098 \uc774\uc0c1\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \uc788\ub294 \uc18c\uaddc\ubaa8 \ub178\ub4dc \uadf8\ub8f9\uc744 \ud558\ub098 \uc774\uc0c1 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub300\uc548\uc73c\ub85c, 'karpenter' \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c Fargate \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud558\uc5ec EKS Fargate\uc5d0\uc11c \uc774\ub7ec\ud55c \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc774 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \ubaa8\ub4e0 \ud30c\ub4dc\uac00 EKS Fargate\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uce74\ud39c\ud130\uac00 \uad00\ub9ac\ud558\ub294 \ub178\ub4dc\uc5d0\uc11c\ub294 \uce74\ud39c\ud130\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. Karpenter\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c (custom launch template)\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \u00b6 Karpenter\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9d0 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc911 \uc544\ud0a4\ud14d\ucc98 \uc9c0\uc6d0, \ub178\ub4dc \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc \uae30\ub2a5 \ubc0f SecurityGroup \uac80\uc0c9\uc774 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4. \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uba74 \uce74\ud39c\ud130 \ud504\ub85c\ube44\uc800\ub108 \ub0b4\uc5d0\uc11c \ud2b9\uc815 \ud544\ub4dc\uac00 \uc911\ubcf5\ub418\uace0 Karpenter\ub294 \ub2e4\ub978 \ud544\ub4dc (\uc608: \uc11c\ube0c\ub137 \ubc0f \uc778\uc2a4\ud134\uc2a4 \uc720\ud615) \ub97c \ubb34\uc2dc\ud558\uae30 \ub54c\ubb38\uc5d0 \ud63c\ub3d9\uc774 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 AWS \ub178\ub4dc \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc9c1\uc811 \uc9c0\uc815\ud558\uba74 \uc2dc\uc791 \ud15c\ud50c\ub9bf \uc0ac\uc6a9\uc744 \ud53c\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub178\ub4dc \ud15c\ud50c\ub9bf \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub9de\uc9c0 \uc54a\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \uc81c\uc678 \u00b6 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 [node.kubernetes.io/instance-type] (http://node.kubernetes.io/instance-type) \ud0a4\uac00 \uc788\ub294 \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc81c\uc678\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ub300\uaddc\ubaa8 Graviton \uc778\uc2a4\ud134\uc2a4\uc758 \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ubc29\uc9c0\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. - key : node.kubernetes.io/instance-type operator : NotIn values : 'm6g.16xlarge' 'm6gd.16xlarge' 'r6g.16xlarge' 'r6gd.16xlarge' 'c6g.16xlarge' \uc2a4\ud31f \uc0ac\uc6a9 \uc2dc \uc911\ub2e8 \ucc98\ub9ac \ud65c\uc131\ud654 \u00b6 Karpenter\ub294 \uce74\ud39c\ud130 \uc124\uc815 \uc758 aws.interruptionQueue \uac12\uc744 \ud1b5\ud574 \ud65c\uc131\ud654\ub418\ub294 \ub124\uc774\ud2f0\ube0c \uc778\ud130\ub7fd\ud2b8 \ucc98\ub9ac \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc778\ud130\ub7fd\ud2b8 \ud578\ub4e4\ub9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc7a5\uc560\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \ud5a5\ud6c4 \ube44\uc790\ubc1c\uc801 \uc911\ub2e8 \uc774\ubca4\ud2b8\ub97c \uac10\uc2dc\ud569\ub2c8\ub2e4. \uc2a4\ud31f \uc778\ud130\ub7fd\ud2b8 \uacbd\uace0 \uc608\uc815\ub41c \ubcc0\uacbd \uc0c1\ud0dc \uc774\ubca4\ud2b8 (\uc720\uc9c0 \uad00\ub9ac \uc774\ubca4\ud2b8) \uc778\uc2a4\ud134\uc2a4 \uc885\ub8cc \uc774\ubca4\ud2b8 \uc778\uc2a4\ud134\uc2a4 \uc911\uc9c0 \uc774\ubca4\ud2b8 Karpenter\ub294 \ub178\ub4dc\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8 \uc911 \ud558\ub098\uac00 \ubc1c\uc0dd\ud560 \uac83\uc744 \uac10\uc9c0\ud558\uba74 \uc911\ub2e8 \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ucc28\ub2e8, \ub4dc\ub808\uc778 \ubc0f \uc885\ub8cc\ud558\uc5ec \uc911\ub2e8 \uc804\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc815\ub9ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc2dc\uac04\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc AWS \ub178\ub4dc \uc885\ub8cc \ud578\ub4e4\ub7ec\ub97c Karpenter\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc885\ub8cc \uc804 2\ubd84\uc774 \uc18c\uc694\ub418\ub294 \uccb4\ud06c\ud3ec\uc778\ud2b8 \ub610\ub294 \uae30\ud0c0 \ud615\ud0dc\uc758 \uc815\uc0c1\uc801\uc778 \ub4dc\ub808\uc778\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub294 \ud574\ub2f9 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uce74\ud39c\ud130 \uc911\ub2e8 \ucc98\ub9ac\uac00 \uac00\ub2a5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \uc5c6\ub294 Amazon EKS \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 \u00b6 \uc778\ud130\ub137 \uc5f0\uacb0 \uacbd\ub85c \uc5c6\uc774 VPC\uc5d0 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c\ub294 EKS \uc124\uba85\uc11c\uc5d0 \ub098\uc640 \uc788\ub294 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 [\uc694\uad6c \uc0ac\ud56d] (https://docs.aws.amazon.com/eks/latest/userguide/private-clusters.html#private-cluster-requirements) \uc5d0 \ub530\ub77c \ud658\uacbd\uc744 \uad6c\uc131\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4.\ub610\ud55c VPC\uc5d0 STS VPC \uc9c0\uc5ed \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4.\uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc544\ub798\uc640 \ube44\uc2b7\ud55c \uc624\ub958\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. ERROR controller.controller.metrics Reconciler error {\"commit\": \"5047f3c\", \"reconciler group\": \"karpenter.sh\", \"reconciler kind\": \"Provisioner\", \"name\": \"default\", \"namespace\": \"\", \"error\": \"fetching instance types using ec2.DescribeInstanceTypes, WebIdentityErr: failed to retrieve credentials\\ncaused by: RequestError: send request failed\\ncaused by: Post \\\"https://sts.<region>.amazonaws.com/\\\": dial tcp x.x.x.x:443: i/o timeout\"} \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc6a9 IAM \uc5ed\ud560 (IRSA) \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \ubcc0\uacbd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.IRSA\ub85c \uad6c\uc131\ub41c \ud30c\ub4dc\ub294 AWS \ubcf4\uc548 \ud1a0\ud070 \uc11c\ube44\uc2a4 (AWS STS) API\ub97c \ud638\ucd9c\ud558\uc5ec \uc790\uaca9 \uc99d\uba85\uc744 \ud68d\ub4dd\ud569\ub2c8\ub2e4.\uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \uc5c6\ub294 \uacbd\uc6b0 VPC\uc548\uc5d0\uc11c AWS STS VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub97c \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 SSM\uc6a9VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. Karpenter\ub294 \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uace0 \ud560 \ub54c \uc2dc\uc791 \ud15c\ud50c\ub9bf \uad6c\uc131\uacfc SSM \ub9e4\uac1c\ubcc0\uc218\ub97c \ucffc\ub9ac\ud569\ub2c8\ub2e4. VPC\uc5d0 SSM VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. INFO controller.provisioning Waiting for unschedulable pods {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Batched 3 pods in 1.000572709s {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Computed packing of 1 node(s) for 3 pod(s) with instance type option(s) [c4.xlarge c6i.xlarge c5.xlarge c5d.xlarge c5a.xlarge c5n.xlarge m6i.xlarge m4.xlarge m6a.xlarge m5ad.xlarge m5d.xlarge t3.xlarge m5a.xlarge t3a.xlarge m5.xlarge r4.xlarge r3.xlarge r5ad.xlarge r6i.xlarge r5a.xlarge] {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} ERROR controller.provisioning Could not launch node, launching instances, getting launch template configs, getting launch templates, getting ssm parameter, RequestError: send request failed caused by: Post \"https://ssm.<region>.amazonaws.com/\": dial tcp x.x.x.x:443: i/o timeout {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} \uac00\uaca9 \ubaa9\ub85d \ucffc\ub9ac API \ub97c \uc704\ud55c VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c \uac00\uaca9 \ub370\uc774\ud130\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubd80\uc2e4\ud574\uc9c8 \uac83\uc785\ub2c8\ub2e4. Karpenter\ub294 \ubc14\uc774\ub108\ub9ac\uc5d0 \uc628\ub514\ub9e8\ub4dc \uac00\uaca9 \ucc45\uc815 \ub370\uc774\ud130\ub97c \ud3ec\ud568\ud558\uc5ec \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uc9c0\ub9cc Karpenter\uac00 \uc5c5\uadf8\ub808\uc774\ub4dc\ub420 \ub54c\ub9cc \ud574\ub2f9 \ub370\uc774\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uac00\uaca9 \ub370\uc774\ud130 \uc694\uccad\uc774 \uc2e4\ud328\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. ERROR controller.aws.pricing updating on-demand pricing, RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout; RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout, using existing pricing data from 2022-08-17T00:19:52Z {\"commit\": \"4b5f953\"} \uc694\uc57d\ud558\uc790\uba74 \uc644\uc804\ud55c \ud504\ub77c\uc774\ube57 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Karpenter\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. com.amazonaws.<region>.ec2 com.amazonaws.<region>.ecr.api com.amazonaws.<region>.ecr.dkr com.amazonaws.<region>.s3 \u2013 For pulling container images com.amazonaws.<region>.sts \u2013 For IAM roles for service accounts com.amazonaws.<region>.ssm - If using Karpenter \ucc38\uace0 \uce74\ud39c\ud130 (\ucee8\ud2b8\ub864\ub7ec \ubc0f \uc6f9\ud6c4\ud06c \ubc30\ud3ec) \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 Amazon ECR \uc804\uc6a9 \ub610\ub294 VPC \ub0b4\ubd80\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ub2e4\ub978 \uc0ac\uc124 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\uac70\ub098 \ubcf5\uc0ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\uadf8 \uc774\uc720\ub294 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\uc640 \uc6f9\ud6c4\ud06c \ud30c\ub4dc\uac00 \ud604\uc7ac \ud37c\ube14\ub9ad ECR \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. VPC \ub0b4\uc5d0\uc11c \ub610\ub294 VPC\uc640 \ud53c\uc5b4\ub9c1\ub41c \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0, \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 ECR Public\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub824\uace0 \ud560 \ub54c \uc774\ubbf8\uc9c0 \uac00\uc838\uc624\uae30 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774\uc288 988 \ubc0f \uc774\uc288 1157 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud504\ub85c\ube44\uc838\ub108 \uc0dd\uc131 \u00b6 \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \ud504\ub85c\ube44\uc838\ub108 \uc0dd\uc131\uacfc \uad00\ub828\ub41c \uc8fc\uc81c\ub97c \ub2e4\ub8f9\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ud504\ub85c\ube44\uc838\ub108\ub97c \uc5ec\ub7ec \uac1c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \u00b6 \uc5ec\ub7ec \ud300\uc774 \ud074\ub7ec\uc2a4\ud130\ub97c \uacf5\uc720\ud558\uace0 \uc11c\ub85c \ub2e4\ub978 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \ud558\uac70\ub098 OS \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc694\uad6c \uc0ac\ud56d\uc774 \ub2e4\ub978 \uacbd\uc6b0 \uc5ec\ub7ec \ud504\ub85c\ube44\uc800\ub108\ub97c \uc0dd\uc131\ud558\uc138\uc694.\uc608\ub97c \ub4e4\uc5b4 \ud55c \ud300\uc740 Bottlerocket\uc744 \uc0ac\uc6a9\ud558\uace0 \ub2e4\ub978 \ud300\uc740 Amazon Linux\ub97c \uc0ac\uc6a9\ud558\ub824\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud55c \ud300\uc740 \ub2e4\ub978 \ud300\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uac12\ube44\uc2fc GPU \ud558\ub4dc\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c\ub97c \uc5ec\ub7ec \uac1c \uc0ac\uc6a9\ud558\uba74 \uac01 \ud300\uc5d0\uc11c \uac00\uc7a5 \uc801\ud569\ud55c \uc790\uc0b0\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uac70\ub098 \uac00\uc911\uce58\uac00 \ubd80\uc5ec\ub418\ub294 \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c \ub9cc\ub4e4\uae30 \u00b6 \uc77c\uad00\ub41c \uc2a4\ucf00\uc904\ub9c1 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub824\uba74 \uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uac70\ub098 \uac00\uc911\uce58\uac00 \ubd80\uc5ec\ub418\ub294 \ud504\ub85c\ube44\uc800\ub108\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc77c\uce58\ud558\uc9c0 \uc54a\uace0 \uc5ec\ub7ec \ud504\ub85c\ube44\uc838\ub108\uac00 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 Karpenter\ub294 \uc0ac\uc6a9\ud560 \ud504\ub85c\ube44\uc838\ub108\ub97c \uc784\uc758\ub85c \uc120\ud0dd\ud558\uc5ec \uc608\uc0c1\uce58 \ubabb\ud55c \uacb0\uacfc\ub97c \ucd08\ub798\ud569\ub2c8\ub2e4.\uc5ec\ub7ec \ud504\ub85c\ube44\uc838\ub108\ub97c \ub9cc\ub4e4 \ub54c \uc720\uc6a9\ud55c \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. GPU\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c\ub97c \ub9cc\ub4e4\uace0 \uc774\ub7ec\ud55c (\ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294) \ub178\ub4dc\uc5d0\uc11c\ub9cc \ud2b9\uc218 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \ud5c8\uc6a9: # Provisioner for GPU Instances with Taints apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : gpu spec : requirements : - key : node.kubernetes.io/instance-type operator : In values : - p3.8xlarge - p3.16xlarge taints : - effect : NoSchedule key : nvidia.com/gpu value : \"true\" ttlSecondsAfterEmpty : 60 \ud0dc\uc778\ud2b8(Taint)\ub97c \uc704\ud55c \ud1a8\ub7ec\ub808\uc774\uc158(Toleration)\uc744 \uac16\uace0 \uc788\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8: # Deployment of GPU Workload will have tolerations defined apiVersion : apps/v1 kind : Deployment metadata : name : inflate-gpu spec : ... spec : tolerations : - key : \"nvidia.com/gpu\" operator : \"Exists\" effect : \"NoSchedule\" \ub2e4\ub978 \ud300\uc744 \uc704\ud55c \uc77c\ubc18 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uacbd\uc6b0 \ud504\ub85c\ube44\uc800\ub108 \uc0ac\uc591\uc5d0 NodeAffinify\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \ub178\ub4dc \uc140\ub809\ud130 \uc6a9\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec billing-team \uacfc \uc77c\uce58\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Provisioner for regular EC2 instances apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : generalcompute spec : labels : billing-team : my-team requirements : - key : node.kubernetes.io/instance-type operator : In values : - m5.large - m5.xlarge - m5.2xlarge - c5.large - c5.xlarge - c5a.large - c5a.xlarge - r5.large - r5.xlarge \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc0ac\uc6a9\ud558\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8: # Deployment will have spec.affinity.nodeAffinity defined kind : Deployment metadata : name : workload-my-team spec : replicas : 200 ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : \"billing-team\" operator : \"In\" values : [ \"my-team\" ] \ud0c0\uc774\uba38 (TTL) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud569\ub2c8\ub2e4. \u00b6 \ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc758 \ud0c0\uc774\uba38\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \ud30c\ub4dc\uac00 \uc5c6\uac70\ub098 \ub9cc\ub8cc \uc2dc\uac04\uc5d0 \ub3c4\ub2ec\ud55c \ub178\ub4dc\ub97c \uc0ad\uc81c\ud560 \uc2dc\uae30\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub178\ub4dc \ub9cc\ub8cc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc \uc218\ub2e8\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud3d0\uae30\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ub41c \ubc84\uc804\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ttlSecondsUntilExpired \ubc0f ttlSecondsAfterEmpty \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 \uce74\ud39c\ud130 \ub178\ub4dc \ub514\ud504\ub85c\ube44\uc800\ub2dd \ubc29\ubc95 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud2b9\ud788 \uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc9c0\ub098\uce58\uac8c \uc81c\ud55c\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \u00b6 \uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c Karpenter\ub294 \uac00\uaca9 \ubc0f \uc6a9\ub7c9 \ucd5c\uc801\ud654 \ud560\ub2f9 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc740 EC2\uac00 \uc2dc\uc791 \uc911\uc778 \uc778\uc2a4\ud134\uc2a4 \uc218\ub9cc\ud07c \uac00\uc7a5 \uae4a\uc740 \ud480\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uace0 \uc911\ub2e8 \uc704\ud5d8\uc774 \uac00\uc7a5 \uc801\uc740 \uc778\uc2a4\ud134\uc2a4 \uc218\uc5d0 \ub9de\uac8c \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c EC2 \ud50c\ub9bf\uc740 \uc774\ub7ec\ud55c \ud480 \uc911 \uac00\uc7a5 \uc800\ub834\ud55c \uac00\uaca9\uc758 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc694\uccad\ud569\ub2c8\ub2e4.Karpenter\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ub9ce\uc744\uc218\ub85d EC2\ub294 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\uc758 \ub7f0\ud0c0\uc784\uc744 \ub354 \uc798 \ucd5c\uc801\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Karpenter\ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \ubc30\ud3ec\ub41c \uc9c0\uc5ed \ubc0f \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c EC2\uac00 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Karpenter\ub294 \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\ub97c \uae30\ubc18\uc73c\ub85c \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc138\ud2b8 \uc911\uc5d0\uc11c \uc9c0\ub2a5\uc801\uc73c\ub85c \uc120\ud0dd\ud558\uc5ec \ud30c\ub4dc\uac00 \uc801\uc808\ud55c \ud06c\uae30\uc640 \uc7a5\ube44\ub97c \uac16\ucd98 \uc778\uc2a4\ud134\uc2a4\ub85c \uc2a4\ucf00\uc904\ub9c1\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud30c\ub4dc\uc5d0 GPU\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Karpenter\ub294 GPU\ub97c \uc9c0\uc6d0\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc73c\ub85c \ud30c\ub4dc\ub97c \uc608\uc57d\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud574\uc57c \ud560\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Amazon ec2-instance-selector \ub97c \uc2e4\ud589\ud558\uc5ec \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \ubaa9\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 CLI\ub294 \uba54\ubaa8\ub9ac vCPU,\uc544\ud0a4\ud14d\ucc98 \ubc0f \uc9c0\uc5ed\uc744 \uc785\ub825 \ud30c\ub77c\ubbf8\ud130\ub85c \uc0ac\uc6a9\ud558\uace0 \uc774\ub7ec\ud55c \uc81c\uc57d \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. $ ec2-instance-selector --memory 4 --vcpus 2 --cpu-architecture x86_64 -r ap-southeast-1 c5.large c5a.large c5ad.large c5d.large c6i.large t2.medium t3.medium t3a.medium \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c Karpenter\uc5d0 \ub108\ubb34 \ub9ce\uc740 \uc81c\uc57d\uc744 \ub450\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \ud2b9\uc815 \uc720\ud615\uc758 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\uac00 \ud68c\uc218\ub418\uace0 \uc774\ub97c \ub300\uccb4\ud560 \uc801\uc808\ud55c \ub300\uc548\uc774 \uc5c6\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uad6c\uc131\ub41c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \uc2a4\ud31f \uc6a9\ub7c9\uc774 \ubcf4\ucda9\ub420 \ub54c\uae4c\uc9c0 \ud30c\ub4dc\ub294 \ubcf4\ub958 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub429\ub2c8\ub2e4.\uc2a4\ud31f \ud480\uc740 AZ\ub9c8\ub2e4 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubd84\uc0b0\ud558\uc5ec \uc6a9\ub7c9 \ubd80\uc871 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud558\uc9c0\ub9cc \uc77c\ubc18\uc801\uc778 \ubaa8\ubc94 \uc0ac\ub840\ub294 Karpenter\uac00 \uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c \ub2e4\uc591\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc138\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub9c1 \ud30c\ub4dc \u00b6 \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \uc704\ud574 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c EKS \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub530\ub974\uc2ed\uc2dc\uc624. \u00b6 \uace0\uac00\uc6a9\uc131 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc778 EKS \ubaa8\ubc94 \uc0ac\ub840 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \ub530\ub974\uc2ed\uc2dc\uc624. \uc5ec\ub7ec \ub178\ub4dc\uc640 \uc601\uc5ed\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 [\ud1a0\ud3f4\ub85c\uc9c0 \ud655\uc0b0] (https://karpenter.sh/docs/concepts/scheduling/#topology-spread) \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.\ud30c\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \uc0ad\uc81c\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\ub294 \uacbd\uc6b0 \uc911\ub2e8 \uc608\uc0b0(Disruption Budgets) \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc720\uc9c0 \uad00\ub9ac\uac00 \ud544\uc694\ud55c \ucd5c\uc18c \uac00\uc6a9 \ud30c\ub4dc\ub97c \uc124\uc815\ud558\uc138\uc694. \uacc4\uce35\ud654\ub41c \uc81c\uc57d \uc870\uac74\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790\uac00 \uc81c\uacf5\ud558\ub294 \ucef4\ud4e8\ud305 \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624. \u00b6 Karpenter\uc758 \uacc4\uce35\ud615 \uc81c\uc57d \uc870\uac74 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \ud504\ub85c\ube44\uc800\ub108 \ubc0f \ud30c\ub4dc \ubc30\ud3ec \uc81c\uc57d \uc870\uac74 \uc138\ud2b8\ub97c \uc0dd\uc131\ud558\uc5ec \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc870\uac74\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud30c\ub4dc \uc0ac\uc591\uc774 \uc694\uccad\ud560 \uc218 \uc788\ub294 \uc81c\uc57d \uc870\uac74\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud2b9\uc815 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc788\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \ud30c\ub4dc\uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. VPC\uc758 AZ \uac04 \ud2b8\ub798\ud53d\uc744 \uc904\uc774\ub294 \uac83\uc774 \ubaa9\ud45c\ub77c\uba74 EC2 \uc778\uc2a4\ud134\uc2a4\uac00 \uc704\uce58\ud55c AZ\uc5d0 \ud30c\ub4dc\ub97c \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc885\ub958\uc758 \ud0c0\uac9f\ud305\uc740 \ub300\uac1c \ub178\ub4dc \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130 \uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud2b9\uc815 \uc885\ub958\uc758 \ud504\ub85c\uc138\uc11c \ub610\ub294 \uae30\ud0c0 \ud558\ub4dc\uc6e8\uc5b4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. GPU\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ud31f\uc2a4\ud399 \uc608\uc81c\ub294 \uce74\ud39c\ud130 \ubb38\uc11c\uc758[\uc561\uc140\ub7ec\ub808\uc774\ud130] (https://karpenter.sh/docs/concepts/scheduling/#acceleratorsgpu-resources) \uc139\uc158\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uacb0\uc81c \uacbd\ubcf4\ub97c \uc0dd\uc131\ud558\uc5ec \ucef4\ud4e8\ud305 \uc9c0\ucd9c\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uc138\uc694 \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \ub54c\ub294 \uc9c0\ucd9c\uc774 \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud588\uc744 \ub54c \uacbd\uace0\ud558\ub294 \uccad\uad6c \uacbd\ubcf4\ub97c \uc0dd\uc131\ud558\uace0 \uce74\ud39c\ud130 \uad6c\uc131\uc5d0 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. Karpenter\ub85c \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc124\uc815\ud558\ub294 \uac83\uc740 \uce74\ud39c\ud130 \ud504\ub85c\ube44\uc800\ub108\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ud560 \uc218 \uc788\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc758 \ucd5c\ub300\ub7c9\uc744 \ub098\ud0c0\ub0b8\ub2e4\ub294 \uc810\uc5d0\uc11c AWS Autoscaling \uadf8\ub8f9\uc758 \ucd5c\ub300 \uc6a9\ub7c9\uc744 \uc124\uc815\ud558\ub294 \uac83\uacfc \ube44\uc2b7\ud569\ub2c8\ub2e4. \ucc38\uace0 \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \uae00\ub85c\ubc8c \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.\ud55c\ub3c4\ub294 \ud2b9\uc815 \ud504\ub85c\ube44\uc800\ub108\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc544\ub798 \uc2a4\ub2c8\ud3ab\uc740 Karpenter\uc5d0\uac8c \ucd5c\ub300 1000\uac1c\uc758 CPU \ucf54\uc5b4\uc640 1000Gi\uc758 \uba54\ubaa8\ub9ac\ub9cc \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. Karpenter\ub294 \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uac70\ub098 \ucd08\uacfc\ud560 \ub54c\ub9cc \uc6a9\ub7c9 \ucd94\uac00\ub97c \uc911\ub2e8\ud569\ub2c8\ub2e4. \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\uba74 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub294 '1001\uc758 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc774 \ud55c\ub3c4 1000\uc744 \ucd08\uacfc\ud569\ub2c8\ub2e4' \ub610\ub294 \uc774\uc640 \ube44\uc2b7\ud55c \ubaa8\uc591\uc758 \uba54\uc2dc\uc9c0\ub97c \ucee8\ud2b8\ub864\ub7ec \ub85c\uadf8\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub85c\uadf8\ub97c CloudWatch \ub85c\uadf8\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \uacbd\uc6b0 \uc9c0\ud45c \ud544\ud130 \ub97c \uc0dd\uc131\ud558\uc5ec \ub85c\uadf8\uc5d0\uc11c \ud2b9\uc815 \ud328\ud134\uc774\ub098 \uc6a9\uc5b4\ub97c \ucc3e\uc740 \ub2e4\uc74c CloudWatch alarm \uc744 \uc0dd\uc131\ud558\uc5ec \uad6c\uc131\ub41c \uc9c0\ud45c \uc784\uacc4\uac12\uc744 \uc704\ubc18\ud588\uc744 \ub54c \uacbd\uace0\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. Karpenter\uc5d0\uc11c \uc81c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 \ub9ac\uc18c\uc2a4 \uc81c\ud55c \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. spec : limits : resources : cpu : 1000 memory : 1000Gi Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc81c\ud55c\ud558\uac70\ub098 \uc81c\ud55c\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 Karpenter\ub294 \ud544\uc694\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucef4\ud4e8\ud305 \ud30c\uc6cc\ub97c \uacc4\uc18d \ucd94\uac00\ud569\ub2c8\ub2e4.Karpenter\ub97c \uc774\ub7ec\ud55c \ubc29\uc2dd\uc73c\ub85c \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \uc790\uc720\ub86d\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\uc9c0\ub9cc \ube44\uc6a9\uc5d0\ub3c4 \uc0c1\ub2f9\ud55c \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\uc720\ub85c \uacb0\uc81c \uacbd\ubcf4\ub97c \uad6c\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\uccad\uad6c \uacbd\ubcf4\ub97c \uc0ac\uc6a9\ud558\uba74 \uacc4\uc815\uc5d0\uc11c \uacc4\uc0b0\ub41c \uc608\uc0c1 \uc694\uae08\uc774 \uc815\uc758\ub41c \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud560 \uacbd\uc6b0 \uc54c\ub9bc\uc744 \ubc1b\uace0 \uc0ac\uc804\uc5d0 \uc54c\ub9bc\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc608\uc0c1 \uc694\uae08\uc744 \uc0ac\uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud558\uae30 \uc704\ud55c Amazon CloudWatch \uccad\uad6c \uacbd\ubcf4 \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uae30\uacc4 \ud559\uc2b5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ube44\uc6a9\uacfc \uc0ac\uc6a9\ub7c9\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec \ube44\uc815\uc0c1\uc801\uc778 \uc9c0\ucd9c\uc744 \uac10\uc9c0\ud558\ub294 AWS \ube44\uc6a9 \uad00\ub9ac \uae30\ub2a5\uc778 \ube44\uc6a9 \uc608\uc678 \ud0d0\uc9c0\ub97c \ud65c\uc131\ud654\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ube44\uc6a9 \uc774\uc0c1 \ud0d0\uc9c0 \uc2dc\uc791 \uac00\uc774\ub4dc\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.AWS Budgets\uc5d0\uc11c \uc608\uc0b0\uc744 \ud3b8\uc131\ud55c \uacbd\uc6b0, \ud2b9\uc815 \uc784\uacc4\uac12 \uc704\ubc18 \uc2dc \uc54c\ub9bc\uc744 \ubc1b\ub3c4\ub85d \uc870\uce58\ub97c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\uc608\uc0b0 \ud65c\ub3d9\uc744 \ud1b5\ud574 \uc774\uba54\uc77c\uc744 \ubcf4\ub0b4\uac70\ub098, SNS \uc8fc\uc81c\uc5d0 \uba54\uc2dc\uc9c0\ub97c \uac8c\uc2dc\ud558\uac70\ub098, Slack\uacfc \uac19\uc740 \ucc57\ubd07\uc5d0 \uba54\uc2dc\uc9c0\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \uc608\uc0b0 \uc791\uc5c5 \uad6c\uc131 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc81c\uac70 \uae08\uc9c0(do-not-evict) \uc5b4\ub178\ud14c\uc774\uc158 \uc0ac\uc6a9\ud558\uc5ec Karpenter\uac00 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ucde8\uc18c\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\uc138\uc694. \u00b6 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\uc5d0\uc11c \uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 (\uc608: \uc7a5\uae30 \uc2e4\ud589 \ubc30\uce58 \uc791\uc5c5 \ub610\ub294 \uc2a4\ud14c\uc774\ud2b8\ud480 \uc560\ud50c\ub9ac\ucf00\uc774\uc158) \uc744 \uc2e4\ud589 \uc911\uc774\uace0 \ub178\ub4dc\uc758 TTL\uc774 \ub9cc\ub8cc\ub418\uc5c8\uc73c\uba74* \uc778\uc2a4\ud134\uc2a4\uac00 \uc885\ub8cc\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc911\ub2e8\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uc5d0 karpenter.sh/do-not-evict \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ucd94\uac00\ud558\uba74 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uac70\ub098 do-not-evict \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc81c\uac70\ub420 \ub54c\uae4c\uc9c0 Karpenter\uac00 \ub178\ub4dc\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub514\ud504\ub85c\ube44\uc800\ub2dd \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc\uc5d0 \ub370\ubaac\uc14b\uc774 \uc544\ub2cc \ud30c\ub4dc\uac00 \uc791\uc5c5\uacfc \uad00\ub828\ub41c \ud30c\ub4dc\ub9cc \ub0a8\uc544 \uc788\ub294 \uacbd\uc6b0, Karpenter\ub294 \uc791\uc5c5 \uc0c1\ud0dc\uac00 \uc131\uacf5 \ub610\ub294 \uc2e4\ud328\uc778 \ud55c \ud574\ub2f9 \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \uc9c0\uc815\ud558\uace0 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud1b5\ud569\uc744 \uc0ac\uc6a9\ud560 \ub54c CPU\uac00 \uc544\ub2cc \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc694\uccad=\uc81c\ud55c(requests=limits)\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4. \u00b6 \uc77c\ubc18\uc801\uc73c\ub85c \ud3ec\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uacfc \ub178\ub4dc\uc758 \ud560\ub2f9 \uac00\ub2a5\ud55c \ub9ac\uc18c\uc2a4 \uc591\uc744 \ube44\uad50\ud558\uc5ec \ud1b5\ud569 \ubc0f \uc2a4\ucf00\uc904\ub9c1\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc740 \uace0\ub824\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \uba54\ubaa8\ub9ac \ud55c\ub3c4\uac00 \uba54\ubaa8\ub9ac \uc694\uccad\ub7c9\ubcf4\ub2e4 \ud070 \ud30c\ub4dc\ub294 \uc694\uccad\uc744 \ucd08\uacfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \ub178\ub4dc\uc758 \uc5ec\ub7ec \ud3ec\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ubc84\uc2a4\ud2b8\ub418\uba74 \uba54\ubaa8\ub9ac \ubd80\uc871 (OOM) \uc0c1\ud0dc\ub85c \uc778\ud574 \uc77c\ubd80 \ud3ec\ub4dc\uac00 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud1b5\ud569\uc740 \uc694\uccad\ub9cc \uace0\ub824\ud558\uc5ec \ud30c\ub4dc\ub97c \ub178\ub4dc\uc5d0 \ud328\ud0b9\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774\ub7f0 \uc77c\uc774 \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc744 \ub192\uc77c \uc218 \uc788\ub2e4. LimitRanges \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9ac\uc18c\uc2a4 \uc694\uccad \ubc0f \uc81c\ud55c\uc5d0 \ub300\ud55c \uae30\ubcf8\uac12\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4. \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uae30\ubcf8 \uc694\uccad\uc774\ub098 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8 \ud638\uc2a4\ud2b8, CPU \ubc0f \uba54\ubaa8\ub9ac\uc758 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc81c\ud55c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \ud3ec\ub4dc\uc758 \ucd1d \uc694\uccad (\ud3ec\ub4dc \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc694\uccad \ub610\ub294 \ud3ec\ub4dc Init \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \ub9ac\uc18c\uc2a4 \uc911 \ub354 \ub192\uc740 \uc694\uccad) \uc744 \uac80\ud1a0\ud558\uc5ec \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.\ub9c8\ucc2c\uac00\uc9c0\ub85c Karpenter\ub294 \ud30c\ub4dc\uc758 \uc694\uccad\uc744 \uace0\ub824\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.\uc77c\ubd80 \ud3ec\ub4dc\uc5d0\uc11c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc801\uc808\ud55c \uae30\ubcf8\uac12\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. [\ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c \uae30\ubcf8 \uba54\ubaa8\ub9ac \uc694\uccad \ubc0f \uc81c\ud55c \uad6c\uc131] (https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/) \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc815\ud655\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc6a9 \u00b6 Karpenter\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub300\ud55c \uc815\ubcf4\uac00 \uc815\ud655\ud560 \ub54c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \ub178\ub4dc\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub294 Karpenter\uc758 \ud1b5\ud569 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad/\uc81c\ud55c \uad6c\uc131 \ubc0f \ud06c\uae30 \uc870\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 Karpenter/Spot Workshop Karpenter Node Provisioner TGIK Karpenter Karpenter vs. Cluster Autoscaler Groupless Autoscaling with Karpenter","title":"\uce74\ud39c\ud130 \ubaa8\ubc94 \uc0ac\ub840"},{"location":"karpenter/index.kr/#_1","text":"","title":"\uce74\ud39c\ud130 \ubaa8\ubc94 \uc0ac\ub840"},{"location":"karpenter/index.kr/#_2","text":"Karpenter\ub294 \uc2a4\ucf00\uc904\uc5d0 \ub9de\uc9c0 \uc54a\ub294 \ud30c\ub4dc\uc5d0 \ub300\uc751\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc785\ub2c8\ub2e4.Karpenter\ub294 \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\uc758 \uc804\uccb4 \ub9ac\uc18c\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3c9\uac00\ud558\uace0 \uc774\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \ucd5c\uc801\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4. \ub370\ubaac\uc14b\uc774 \uc544\ub2cc \ud30c\ub4dc\uac00 \uc5c6\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uac70\ub098 \uc885\ub8cc\ud558\uc5ec \ub0ad\ube44\ub97c \uc904\uc785\ub2c8\ub2e4. \ub610\ud55c \ud30c\ub4dc\ub97c \ub2a5\ub3d9\uc801\uc73c\ub85c \uc774\ub3d9\ud558\uace0 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uac70\ub098 \ub354 \uc800\ub834\ud55c \ubc84\uc804\uc73c\ub85c \uad50\uccb4\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub294 \ud1b5\ud569 \uae30\ub2a5\ub3c4 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc774\uc720 Karpenter\uac00 \ucd9c\uc2dc\ub418\uae30 \uc804\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc0ac\uc6a9\uc790\ub294 \uc8fc\ub85c [Amazon EC2 Auto Scaling \uadf8\ub8f9] (https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html) \uacfc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec (CAS) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucef4\ud4e8\ud305 \ud30c\uc6cc\ub97c \ub3d9\uc801\uc73c\ub85c \uc870\uc815\ud588\uc2b5\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 Karpenter\uc5d0\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc720\uc5f0\uc131\uacfc \ub2e4\uc591\uc131\uc744 \ub2ec\uc131\ud558\uae30 \uc704\ud574 \uc218\uc2ed \uac1c\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \ub9cc\ub4e4 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\uac8c\ub2e4\uac00 \uce74\ud39c\ud130\ub294 (CAS\ucc98\ub7fc) \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uacfc \ubc00\uc811\ud558\uac8c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 AWS\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc0ac\uc774\ub97c \uc624\uac08 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. Karpenter\ub294 \ub354 \uac04\ub2e8\ud558\uace0 \uc548\uc815\uc801\uc774\uba70 \ud074\ub7ec\uc2a4\ud130\ub97c \uc778\uc2dd\ud558\ub294 \ub2e8\uc77c \uc2dc\uc2a4\ud15c \ub0b4\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158 \ucc45\uc784\uc744 \ud1b5\ud569\ud569\ub2c8\ub2e4. Karpenter\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uac04\uc18c\ud654\ub41c \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uac00 \uc81c\uc2dc\ud558\ub294 \uba87 \uac00\uc9c0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uc720\uc5f0\ud55c \uc6cc\ud06c\ub85c\ub4dc \ud504\ub85c\ube44\uc800\ub108 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \ub2e4\uc591\ud55c \ub178\ub4dc \uad6c\uc131\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 \ub9ce\uc740 \ud2b9\uc815 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub178\ub4dc \uadf8\ub8f9\uc744 \uad00\ub9ac\ud558\ub294 \ub300\uc2e0 \uc720\uc5f0\ud55c \ub2e8\uc77c \ud504\ub85c\ube44\uc800\ub108\ub85c \ub2e4\uc591\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc6a9\ub7c9\uc744 \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ube60\ub974\uac8c \uc2dc\uc791\ud558\uace0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\uc5ec \ub300\uaddc\ubaa8 \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc744 \uac1c\uc120\ud558\uc2ed\uc2dc\uc624. \uce74\ud39c\ud130 \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc815\ubcf4 \ubc0f \uc124\uba85\uc11c\ub97c \ubcf4\ub824\uba74 [karpenter.sh] (https://karpenter.sh/) \uc0ac\uc774\ud2b8\ub97c \ubc29\ubb38\ud558\uc2ed\uc2dc\uc624.","title":"\uce74\ud39c\ud130"},{"location":"karpenter/index.kr/#_3","text":"\ubaa8\ubc94 \uc0ac\ub840\ub294 \uce74\ud39c\ud130 \uc790\uccb4, \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c, \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0 \ub300\ud55c \uc139\uc158\uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"karpenter/index.kr/#_4","text":"\ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \uce74\ud39c\ud130 \uc790\uccb4\uc640 \uad00\ub828\ub41c \uc8fc\uc81c\ub97c \ub2e4\ub8f9\ub2c8\ub2e4.","title":"\uce74\ud39c\ud130 \ubca0\uc2a4\ud2b8 \ud504\ub799\ud2f0\uc2a4"},{"location":"karpenter/index.kr/#karpenter","text":"Karpenter\ub294 Auto Scaling \uadf8\ub8f9 (ASG) \ubc0f \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 (MNG) \ubcf4\ub2e4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\uc774\ud2f0\ube0c API\uc5d0 \ub354 \uac00\uae4c\uc6b4 \uc2a4\ucf00\uc77c\ub9c1 \uad00\ub9ac\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. ASG \ubc0f MNG\ub294 EC2 CPU \ubd80\ud558\uc640 \uac19\uc740 AWS \ub808\ubca8 \uba54\ud2b8\ub9ad\uc744 \uae30\ubc18\uc73c\ub85c \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud2b8\ub9ac\uac70\ub418\ub294 AWS \ub124\uc774\ud2f0\ube0c \ucd94\uc0c1\ud654\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucd94\uc0c1\ud654\ub97c AWS \ucd94\uc0c1\ud654\ub85c \uc5f0\uacb0\ud558\uc9c0\ub9cc, \uc774\ub85c \uc778\ud574 \ud2b9\uc815 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub300\ud55c \uc2a4\ucf00\uc904\ub9c1\uacfc \uac19\uc740 \uc720\uc5f0\uc131\uc774 \ub2e4\uc18c \ub5a8\uc5b4\uc9d1\ub2c8\ub2e4. Karpenter\ub294 \uc77c\ubd80 \uc720\uc5f0\uc131\uc744 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \uc9c1\uc811 \uc801\uc6a9\ud558\uae30 \uc704\ud574 AWS \ucd94\uc0c1\ud654 \uacc4\uce35\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4.Karpenter\ub294 \uc218\uc694\uac00 \uae09\uc99d\ud558\ub294 \uc2dc\uae30\uc5d0 \uc9c1\uba74\ud558\uac70\ub098 \ub2e4\uc591\ud55c \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc7a5 \uc801\ud569\ud569\ub2c8\ub2e4.MNG\uc640 ASG\ub294 \uc815\uc801\uc774\uace0 \uc77c\uad00\uc131\uc774 \ub192\uc740 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4.\uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ub3d9\uc801\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \ub178\ub4dc\uc640 \uc815\uc801\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \ub178\ub4dc\ub97c \ud63c\ud569\ud558\uc5ec \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubcc0\ud654\ud558\ub294 \uc6a9\ub7c9 \uc694\uad6c\uac00 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\ub294 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc138\uc694"},{"location":"karpenter/index.kr/#_5","text":"\uc5ec\ub7ec\ubd84\uc774 Karpenter\uc5d0\uc11c \uc544\uc9c1 \uac1c\ubc1c \uc911\uc778 \uae30\ub2a5\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Karpenter\ub294 \ube44\uad50\uc801 \uc0c8\ub85c\uc6b4 \ud504\ub85c\uc81d\ud2b8\uc774\ubbc0\ub85c \uc544\uc9c1 Karpenter\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc740 \uae30\ub2a5\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \ub2f9\ubd84\uac04 \ub2e4\ub978 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \ud504\ub85c\uc81d\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 \ub2e4\ub978 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \ud504\ub85c\uc81d\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624."},{"location":"karpenter/index.kr/#eks-fargate","text":"\uce74\ud39c\ud130\ub294 \ud5ec\ub984 \ucc28\ud2b8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc124\uce58\ub429\ub2c8\ub2e4. \uc774 \ud5ec\ub984 \ucc28\ud2b8\ub294 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\uc640 \uc6f9\ud6c4\ud06c \ud30c\ub4dc\ub97c \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc124\uce58\ud558\ub294\ub370, \uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc2e4\ud589\ud574\uc57c \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c \ud558\ub098 \uc774\uc0c1\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \uc788\ub294 \uc18c\uaddc\ubaa8 \ub178\ub4dc \uadf8\ub8f9\uc744 \ud558\ub098 \uc774\uc0c1 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub300\uc548\uc73c\ub85c, 'karpenter' \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c Fargate \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud558\uc5ec EKS Fargate\uc5d0\uc11c \uc774\ub7ec\ud55c \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc774 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \ubaa8\ub4e0 \ud30c\ub4dc\uac00 EKS Fargate\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uce74\ud39c\ud130\uac00 \uad00\ub9ac\ud558\ub294 \ub178\ub4dc\uc5d0\uc11c\ub294 \uce74\ud39c\ud130\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624.","title":"EKS Fargate \ub610\ub294 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc18d\ud558\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4."},{"location":"karpenter/index.kr/#karpenter-custom-launch-template","text":"Karpenter\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9d0 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc911 \uc544\ud0a4\ud14d\ucc98 \uc9c0\uc6d0, \ub178\ub4dc \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc \uae30\ub2a5 \ubc0f SecurityGroup \uac80\uc0c9\uc774 \ubd88\uac00\ub2a5\ud569\ub2c8\ub2e4. \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0ac\uc6a9\ud558\uba74 \uce74\ud39c\ud130 \ud504\ub85c\ube44\uc800\ub108 \ub0b4\uc5d0\uc11c \ud2b9\uc815 \ud544\ub4dc\uac00 \uc911\ubcf5\ub418\uace0 Karpenter\ub294 \ub2e4\ub978 \ud544\ub4dc (\uc608: \uc11c\ube0c\ub137 \ubc0f \uc778\uc2a4\ud134\uc2a4 \uc720\ud615) \ub97c \ubb34\uc2dc\ud558\uae30 \ub54c\ubb38\uc5d0 \ud63c\ub3d9\uc774 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 AWS \ub178\ub4dc \ud15c\ud50c\ub9bf\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc9c1\uc811 \uc9c0\uc815\ud558\uba74 \uc2dc\uc791 \ud15c\ud50c\ub9bf \uc0ac\uc6a9\uc744 \ud53c\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub178\ub4dc \ud15c\ud50c\ub9bf \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Karpenter\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc2dc\uc791 \ud15c\ud50c (custom launch template)\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."},{"location":"karpenter/index.kr/#_6","text":"\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 [node.kubernetes.io/instance-type] (http://node.kubernetes.io/instance-type) \ud0a4\uac00 \uc788\ub294 \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc81c\uc678\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \ub300\uaddc\ubaa8 Graviton \uc778\uc2a4\ud134\uc2a4\uc758 \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ubc29\uc9c0\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. - key : node.kubernetes.io/instance-type operator : NotIn values : 'm6g.16xlarge' 'm6gd.16xlarge' 'r6g.16xlarge' 'r6gd.16xlarge' 'c6g.16xlarge'","title":"\uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub9de\uc9c0 \uc54a\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \uc81c\uc678"},{"location":"karpenter/index.kr/#_7","text":"Karpenter\ub294 \uce74\ud39c\ud130 \uc124\uc815 \uc758 aws.interruptionQueue \uac12\uc744 \ud1b5\ud574 \ud65c\uc131\ud654\ub418\ub294 \ub124\uc774\ud2f0\ube0c \uc778\ud130\ub7fd\ud2b8 \ucc98\ub9ac \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc778\ud130\ub7fd\ud2b8 \ud578\ub4e4\ub9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc7a5\uc560\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \ud5a5\ud6c4 \ube44\uc790\ubc1c\uc801 \uc911\ub2e8 \uc774\ubca4\ud2b8\ub97c \uac10\uc2dc\ud569\ub2c8\ub2e4. \uc2a4\ud31f \uc778\ud130\ub7fd\ud2b8 \uacbd\uace0 \uc608\uc815\ub41c \ubcc0\uacbd \uc0c1\ud0dc \uc774\ubca4\ud2b8 (\uc720\uc9c0 \uad00\ub9ac \uc774\ubca4\ud2b8) \uc778\uc2a4\ud134\uc2a4 \uc885\ub8cc \uc774\ubca4\ud2b8 \uc778\uc2a4\ud134\uc2a4 \uc911\uc9c0 \uc774\ubca4\ud2b8 Karpenter\ub294 \ub178\ub4dc\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8 \uc911 \ud558\ub098\uac00 \ubc1c\uc0dd\ud560 \uac83\uc744 \uac10\uc9c0\ud558\uba74 \uc911\ub2e8 \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uae30 \uc804\uc5d0 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ucc28\ub2e8, \ub4dc\ub808\uc778 \ubc0f \uc885\ub8cc\ud558\uc5ec \uc911\ub2e8 \uc804\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc815\ub9ac\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc2dc\uac04\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc AWS \ub178\ub4dc \uc885\ub8cc \ud578\ub4e4\ub7ec\ub97c Karpenter\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uad8c\uc7a5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc885\ub8cc \uc804 2\ubd84\uc774 \uc18c\uc694\ub418\ub294 \uccb4\ud06c\ud3ec\uc778\ud2b8 \ub610\ub294 \uae30\ud0c0 \ud615\ud0dc\uc758 \uc815\uc0c1\uc801\uc778 \ub4dc\ub808\uc778\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub294 \ud574\ub2f9 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uce74\ud39c\ud130 \uc911\ub2e8 \ucc98\ub9ac\uac00 \uac00\ub2a5\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc2a4\ud31f \uc0ac\uc6a9 \uc2dc \uc911\ub2e8 \ucc98\ub9ac \ud65c\uc131\ud654"},{"location":"karpenter/index.kr/#amazon-eks","text":"\uc778\ud130\ub137 \uc5f0\uacb0 \uacbd\ub85c \uc5c6\uc774 VPC\uc5d0 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c\ub294 EKS \uc124\uba85\uc11c\uc5d0 \ub098\uc640 \uc788\ub294 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 [\uc694\uad6c \uc0ac\ud56d] (https://docs.aws.amazon.com/eks/latest/userguide/private-clusters.html#private-cluster-requirements) \uc5d0 \ub530\ub77c \ud658\uacbd\uc744 \uad6c\uc131\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4.\ub610\ud55c VPC\uc5d0 STS VPC \uc9c0\uc5ed \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud588\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4.\uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc544\ub798\uc640 \ube44\uc2b7\ud55c \uc624\ub958\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. ERROR controller.controller.metrics Reconciler error {\"commit\": \"5047f3c\", \"reconciler group\": \"karpenter.sh\", \"reconciler kind\": \"Provisioner\", \"name\": \"default\", \"namespace\": \"\", \"error\": \"fetching instance types using ec2.DescribeInstanceTypes, WebIdentityErr: failed to retrieve credentials\\ncaused by: RequestError: send request failed\\ncaused by: Post \\\"https://sts.<region>.amazonaws.com/\\\": dial tcp x.x.x.x:443: i/o timeout\"} \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc6a9 IAM \uc5ed\ud560 (IRSA) \uc744 \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \ubcc0\uacbd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.IRSA\ub85c \uad6c\uc131\ub41c \ud30c\ub4dc\ub294 AWS \ubcf4\uc548 \ud1a0\ud070 \uc11c\ube44\uc2a4 (AWS STS) API\ub97c \ud638\ucd9c\ud558\uc5ec \uc790\uaca9 \uc99d\uba85\uc744 \ud68d\ub4dd\ud569\ub2c8\ub2e4.\uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \uc5c6\ub294 \uacbd\uc6b0 VPC\uc548\uc5d0\uc11c AWS STS VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub97c \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 SSM\uc6a9VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. Karpenter\ub294 \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uace0 \ud560 \ub54c \uc2dc\uc791 \ud15c\ud50c\ub9bf \uad6c\uc131\uacfc SSM \ub9e4\uac1c\ubcc0\uc218\ub97c \ucffc\ub9ac\ud569\ub2c8\ub2e4. VPC\uc5d0 SSM VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. INFO controller.provisioning Waiting for unschedulable pods {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Batched 3 pods in 1.000572709s {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} INFO controller.provisioning Computed packing of 1 node(s) for 3 pod(s) with instance type option(s) [c4.xlarge c6i.xlarge c5.xlarge c5d.xlarge c5a.xlarge c5n.xlarge m6i.xlarge m4.xlarge m6a.xlarge m5ad.xlarge m5d.xlarge t3.xlarge m5a.xlarge t3a.xlarge m5.xlarge r4.xlarge r3.xlarge r5ad.xlarge r6i.xlarge r5a.xlarge] {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} ERROR controller.provisioning Could not launch node, launching instances, getting launch template configs, getting launch templates, getting ssm parameter, RequestError: send request failed caused by: Post \"https://ssm.<region>.amazonaws.com/\": dial tcp x.x.x.x:443: i/o timeout {\"commit\": \"5047f3c\", \"provisioner\": \"default\"} \uac00\uaca9 \ubaa9\ub85d \ucffc\ub9ac API \ub97c \uc704\ud55c VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c \uac00\uaca9 \ub370\uc774\ud130\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubd80\uc2e4\ud574\uc9c8 \uac83\uc785\ub2c8\ub2e4. Karpenter\ub294 \ubc14\uc774\ub108\ub9ac\uc5d0 \uc628\ub514\ub9e8\ub4dc \uac00\uaca9 \ucc45\uc815 \ub370\uc774\ud130\ub97c \ud3ec\ud568\ud558\uc5ec \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uc9c0\ub9cc Karpenter\uac00 \uc5c5\uadf8\ub808\uc774\ub4dc\ub420 \ub54c\ub9cc \ud574\ub2f9 \ub370\uc774\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uac00\uaca9 \ub370\uc774\ud130 \uc694\uccad\uc774 \uc2e4\ud328\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. ERROR controller.aws.pricing updating on-demand pricing, RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout; RequestError: send request failed caused by: Post \"https://api.pricing.us-east-1.amazonaws.com/\": dial tcp 52.94.231.236:443: i/o timeout, using existing pricing data from 2022-08-17T00:19:52Z {\"commit\": \"4b5f953\"} \uc694\uc57d\ud558\uc790\uba74 \uc644\uc804\ud55c \ud504\ub77c\uc774\ube57 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Karpenter\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. com.amazonaws.<region>.ec2 com.amazonaws.<region>.ecr.api com.amazonaws.<region>.ecr.dkr com.amazonaws.<region>.s3 \u2013 For pulling container images com.amazonaws.<region>.sts \u2013 For IAM roles for service accounts com.amazonaws.<region>.ssm - If using Karpenter \ucc38\uace0 \uce74\ud39c\ud130 (\ucee8\ud2b8\ub864\ub7ec \ubc0f \uc6f9\ud6c4\ud06c \ubc30\ud3ec) \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 Amazon ECR \uc804\uc6a9 \ub610\ub294 VPC \ub0b4\ubd80\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ub2e4\ub978 \uc0ac\uc124 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc788\uac70\ub098 \ubcf5\uc0ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\uadf8 \uc774\uc720\ub294 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\uc640 \uc6f9\ud6c4\ud06c \ud30c\ub4dc\uac00 \ud604\uc7ac \ud37c\ube14\ub9ad ECR \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. VPC \ub0b4\uc5d0\uc11c \ub610\ub294 VPC\uc640 \ud53c\uc5b4\ub9c1\ub41c \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0, \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 ECR Public\uc5d0\uc11c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub824\uace0 \ud560 \ub54c \uc774\ubbf8\uc9c0 \uac00\uc838\uc624\uae30 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774\uc288 988 \ubc0f \uc774\uc288 1157 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \uc5c6\ub294 Amazon EKS \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130"},{"location":"karpenter/index.kr/#_8","text":"\ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \ud504\ub85c\ube44\uc838\ub108 \uc0dd\uc131\uacfc \uad00\ub828\ub41c \uc8fc\uc81c\ub97c \ub2e4\ub8f9\ub2c8\ub2e4.","title":"\ud504\ub85c\ube44\uc838\ub108 \uc0dd\uc131"},{"location":"karpenter/index.kr/#_9","text":"\uc5ec\ub7ec \ud300\uc774 \ud074\ub7ec\uc2a4\ud130\ub97c \uacf5\uc720\ud558\uace0 \uc11c\ub85c \ub2e4\ub978 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \ud558\uac70\ub098 OS \ub610\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc694\uad6c \uc0ac\ud56d\uc774 \ub2e4\ub978 \uacbd\uc6b0 \uc5ec\ub7ec \ud504\ub85c\ube44\uc800\ub108\ub97c \uc0dd\uc131\ud558\uc138\uc694.\uc608\ub97c \ub4e4\uc5b4 \ud55c \ud300\uc740 Bottlerocket\uc744 \uc0ac\uc6a9\ud558\uace0 \ub2e4\ub978 \ud300\uc740 Amazon Linux\ub97c \uc0ac\uc6a9\ud558\ub824\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud55c \ud300\uc740 \ub2e4\ub978 \ud300\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uac12\ube44\uc2fc GPU \ud558\ub4dc\uc6e8\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c\ub97c \uc5ec\ub7ec \uac1c \uc0ac\uc6a9\ud558\uba74 \uac01 \ud300\uc5d0\uc11c \uac00\uc7a5 \uc801\ud569\ud55c \uc790\uc0b0\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ud504\ub85c\ube44\uc838\ub108\ub97c \uc5ec\ub7ec \uac1c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4."},{"location":"karpenter/index.kr/#_10","text":"\uc77c\uad00\ub41c \uc2a4\ucf00\uc904\ub9c1 \ub3d9\uc791\uc744 \uc81c\uacf5\ud558\ub824\uba74 \uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uac70\ub098 \uac00\uc911\uce58\uac00 \ubd80\uc5ec\ub418\ub294 \ud504\ub85c\ube44\uc800\ub108\ub97c \ub9cc\ub4dc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc77c\uce58\ud558\uc9c0 \uc54a\uace0 \uc5ec\ub7ec \ud504\ub85c\ube44\uc838\ub108\uac00 \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 Karpenter\ub294 \uc0ac\uc6a9\ud560 \ud504\ub85c\ube44\uc838\ub108\ub97c \uc784\uc758\ub85c \uc120\ud0dd\ud558\uc5ec \uc608\uc0c1\uce58 \ubabb\ud55c \uacb0\uacfc\ub97c \ucd08\ub798\ud569\ub2c8\ub2e4.\uc5ec\ub7ec \ud504\ub85c\ube44\uc838\ub108\ub97c \ub9cc\ub4e4 \ub54c \uc720\uc6a9\ud55c \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. GPU\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c\ub97c \ub9cc\ub4e4\uace0 \uc774\ub7ec\ud55c (\ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294) \ub178\ub4dc\uc5d0\uc11c\ub9cc \ud2b9\uc218 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \ud5c8\uc6a9: # Provisioner for GPU Instances with Taints apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : gpu spec : requirements : - key : node.kubernetes.io/instance-type operator : In values : - p3.8xlarge - p3.16xlarge taints : - effect : NoSchedule key : nvidia.com/gpu value : \"true\" ttlSecondsAfterEmpty : 60 \ud0dc\uc778\ud2b8(Taint)\ub97c \uc704\ud55c \ud1a8\ub7ec\ub808\uc774\uc158(Toleration)\uc744 \uac16\uace0 \uc788\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8: # Deployment of GPU Workload will have tolerations defined apiVersion : apps/v1 kind : Deployment metadata : name : inflate-gpu spec : ... spec : tolerations : - key : \"nvidia.com/gpu\" operator : \"Exists\" effect : \"NoSchedule\" \ub2e4\ub978 \ud300\uc744 \uc704\ud55c \uc77c\ubc18 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uacbd\uc6b0 \ud504\ub85c\ube44\uc800\ub108 \uc0ac\uc591\uc5d0 NodeAffinify\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \ub178\ub4dc \uc140\ub809\ud130 \uc6a9\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec billing-team \uacfc \uc77c\uce58\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. # Provisioner for regular EC2 instances apiVersion : karpenter.sh/v1alpha5 kind : Provisioner metadata : name : generalcompute spec : labels : billing-team : my-team requirements : - key : node.kubernetes.io/instance-type operator : In values : - m5.large - m5.xlarge - m5.2xlarge - c5.large - c5.xlarge - c5a.large - c5a.xlarge - r5.large - r5.xlarge \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub97c \uc0ac\uc6a9\ud558\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8: # Deployment will have spec.affinity.nodeAffinity defined kind : Deployment metadata : name : workload-my-team spec : replicas : 200 ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : \"billing-team\" operator : \"In\" values : [ \"my-team\" ]","title":"\uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uac70\ub098 \uac00\uc911\uce58\uac00 \ubd80\uc5ec\ub418\ub294 \ud504\ub85c\ube44\uc800\ub2dd \ub3c4\uad6c \ub9cc\ub4e4\uae30"},{"location":"karpenter/index.kr/#ttl","text":"\ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc758 \ud0c0\uc774\uba38\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \ud30c\ub4dc\uac00 \uc5c6\uac70\ub098 \ub9cc\ub8cc \uc2dc\uac04\uc5d0 \ub3c4\ub2ec\ud55c \ub178\ub4dc\ub97c \uc0ad\uc81c\ud560 \uc2dc\uae30\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub178\ub4dc \ub9cc\ub8cc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc \uc218\ub2e8\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud3d0\uae30\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ub41c \ubc84\uc804\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ttlSecondsUntilExpired \ubc0f ttlSecondsAfterEmpty \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 \uce74\ud39c\ud130 \ub178\ub4dc \ub514\ud504\ub85c\ube44\uc800\ub2dd \ubc29\ubc95 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\ud0c0\uc774\uba38 (TTL) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0ad\uc81c\ud569\ub2c8\ub2e4."},{"location":"karpenter/index.kr/#karpenter_1","text":"\uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c Karpenter\ub294 \uac00\uaca9 \ubc0f \uc6a9\ub7c9 \ucd5c\uc801\ud654 \ud560\ub2f9 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc740 EC2\uac00 \uc2dc\uc791 \uc911\uc778 \uc778\uc2a4\ud134\uc2a4 \uc218\ub9cc\ud07c \uac00\uc7a5 \uae4a\uc740 \ud480\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uace0 \uc911\ub2e8 \uc704\ud5d8\uc774 \uac00\uc7a5 \uc801\uc740 \uc778\uc2a4\ud134\uc2a4 \uc218\uc5d0 \ub9de\uac8c \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c EC2 \ud50c\ub9bf\uc740 \uc774\ub7ec\ud55c \ud480 \uc911 \uac00\uc7a5 \uc800\ub834\ud55c \uac00\uaca9\uc758 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc694\uccad\ud569\ub2c8\ub2e4.Karpenter\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \ub9ce\uc744\uc218\ub85d EC2\ub294 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\uc758 \ub7f0\ud0c0\uc784\uc744 \ub354 \uc798 \ucd5c\uc801\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Karpenter\ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \ubc30\ud3ec\ub41c \uc9c0\uc5ed \ubc0f \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c EC2\uac00 \uc81c\uacf5\ud558\ub294 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. Karpenter\ub294 \ubcf4\ub958 \uc911\uc778 \ud30c\ub4dc\ub97c \uae30\ubc18\uc73c\ub85c \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc138\ud2b8 \uc911\uc5d0\uc11c \uc9c0\ub2a5\uc801\uc73c\ub85c \uc120\ud0dd\ud558\uc5ec \ud30c\ub4dc\uac00 \uc801\uc808\ud55c \ud06c\uae30\uc640 \uc7a5\ube44\ub97c \uac16\ucd98 \uc778\uc2a4\ud134\uc2a4\ub85c \uc2a4\ucf00\uc904\ub9c1\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud30c\ub4dc\uc5d0 GPU\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Karpenter\ub294 GPU\ub97c \uc9c0\uc6d0\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc73c\ub85c \ud30c\ub4dc\ub97c \uc608\uc57d\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud574\uc57c \ud560\uc9c0 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Amazon ec2-instance-selector \ub97c \uc2e4\ud589\ud558\uc5ec \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \ubaa9\ub85d\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 CLI\ub294 \uba54\ubaa8\ub9ac vCPU,\uc544\ud0a4\ud14d\ucc98 \ubc0f \uc9c0\uc5ed\uc744 \uc785\ub825 \ud30c\ub77c\ubbf8\ud130\ub85c \uc0ac\uc6a9\ud558\uace0 \uc774\ub7ec\ud55c \uc81c\uc57d \uc870\uac74\uc744 \ucda9\uc871\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. $ ec2-instance-selector --memory 4 --vcpus 2 --cpu-architecture x86_64 -r ap-southeast-1 c5.large c5a.large c5ad.large c5d.large c6i.large t2.medium t3.medium t3a.medium \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c Karpenter\uc5d0 \ub108\ubb34 \ub9ce\uc740 \uc81c\uc57d\uc744 \ub450\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \ud2b9\uc815 \uc720\ud615\uc758 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\uac00 \ud68c\uc218\ub418\uace0 \uc774\ub97c \ub300\uccb4\ud560 \uc801\uc808\ud55c \ub300\uc548\uc774 \uc5c6\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uad6c\uc131\ub41c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \uc2a4\ud31f \uc6a9\ub7c9\uc774 \ubcf4\ucda9\ub420 \ub54c\uae4c\uc9c0 \ud30c\ub4dc\ub294 \ubcf4\ub958 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub429\ub2c8\ub2e4.\uc2a4\ud31f \ud480\uc740 AZ\ub9c8\ub2e4 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ubd84\uc0b0\ud558\uc5ec \uc6a9\ub7c9 \ubd80\uc871 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud558\uc9c0\ub9cc \uc77c\ubc18\uc801\uc778 \ubaa8\ubc94 \uc0ac\ub840\ub294 Karpenter\uac00 \uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c \ub2e4\uc591\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc138\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ud2b9\ud788 \uc2a4\ud31f\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc9c0\ub098\uce58\uac8c \uc81c\ud55c\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."},{"location":"karpenter/index.kr/#_11","text":"\ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \uc704\ud574 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uacfc \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc2a4\ucf00\uc904\ub9c1 \ud30c\ub4dc"},{"location":"karpenter/index.kr/#eks","text":"\uace0\uac00\uc6a9\uc131 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc77c\ubc18\uc801\uc778 EKS \ubaa8\ubc94 \uc0ac\ub840 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \ub530\ub974\uc2ed\uc2dc\uc624. \uc5ec\ub7ec \ub178\ub4dc\uc640 \uc601\uc5ed\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 [\ud1a0\ud3f4\ub85c\uc9c0 \ud655\uc0b0] (https://karpenter.sh/docs/concepts/scheduling/#topology-spread) \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.\ud30c\ub4dc\ub97c \uc81c\uac70\ud558\uac70\ub098 \uc0ad\uc81c\ud558\ub824\ub294 \uc2dc\ub3c4\uac00 \uc788\ub294 \uacbd\uc6b0 \uc911\ub2e8 \uc608\uc0b0(Disruption Budgets) \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc720\uc9c0 \uad00\ub9ac\uac00 \ud544\uc694\ud55c \ucd5c\uc18c \uac00\uc6a9 \ud30c\ub4dc\ub97c \uc124\uc815\ud558\uc138\uc694.","title":"\uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c EKS \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub530\ub974\uc2ed\uc2dc\uc624."},{"location":"karpenter/index.kr/#_12","text":"Karpenter\uc758 \uacc4\uce35\ud615 \uc81c\uc57d \uc870\uac74 \ubaa8\ub378\uc744 \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\ud55c \ud504\ub85c\ube44\uc800\ub108 \ubc0f \ud30c\ub4dc \ubc30\ud3ec \uc81c\uc57d \uc870\uac74 \uc138\ud2b8\ub97c \uc0dd\uc131\ud558\uc5ec \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \uc870\uac74\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud30c\ub4dc \uc0ac\uc591\uc774 \uc694\uccad\ud560 \uc218 \uc788\ub294 \uc81c\uc57d \uc870\uac74\uc758 \uc608\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud2b9\uc815 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc788\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \ud30c\ub4dc\uac00 \uc788\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. VPC\uc758 AZ \uac04 \ud2b8\ub798\ud53d\uc744 \uc904\uc774\ub294 \uac83\uc774 \ubaa9\ud45c\ub77c\uba74 EC2 \uc778\uc2a4\ud134\uc2a4\uac00 \uc704\uce58\ud55c AZ\uc5d0 \ud30c\ub4dc\ub97c \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc885\ub958\uc758 \ud0c0\uac9f\ud305\uc740 \ub300\uac1c \ub178\ub4dc \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130 \uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud2b9\uc815 \uc885\ub958\uc758 \ud504\ub85c\uc138\uc11c \ub610\ub294 \uae30\ud0c0 \ud558\ub4dc\uc6e8\uc5b4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. GPU\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ud31f\uc2a4\ud399 \uc608\uc81c\ub294 \uce74\ud39c\ud130 \ubb38\uc11c\uc758[\uc561\uc140\ub7ec\ub808\uc774\ud130] (https://karpenter.sh/docs/concepts/scheduling/#acceleratorsgpu-resources) \uc139\uc158\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uacc4\uce35\ud654\ub41c \uc81c\uc57d \uc870\uac74\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790\uac00 \uc81c\uacf5\ud558\ub294 \ucef4\ud4e8\ud305 \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624."},{"location":"karpenter/index.kr/#_13","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \ub54c\ub294 \uc9c0\ucd9c\uc774 \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud588\uc744 \ub54c \uacbd\uace0\ud558\ub294 \uccad\uad6c \uacbd\ubcf4\ub97c \uc0dd\uc131\ud558\uace0 \uce74\ud39c\ud130 \uad6c\uc131\uc5d0 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. Karpenter\ub85c \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc124\uc815\ud558\ub294 \uac83\uc740 \uce74\ud39c\ud130 \ud504\ub85c\ube44\uc800\ub108\uac00 \uc778\uc2a4\ud134\uc2a4\ud654\ud560 \uc218 \uc788\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc758 \ucd5c\ub300\ub7c9\uc744 \ub098\ud0c0\ub0b8\ub2e4\ub294 \uc810\uc5d0\uc11c AWS Autoscaling \uadf8\ub8f9\uc758 \ucd5c\ub300 \uc6a9\ub7c9\uc744 \uc124\uc815\ud558\ub294 \uac83\uacfc \ube44\uc2b7\ud569\ub2c8\ub2e4. \ucc38\uace0 \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \uae00\ub85c\ubc8c \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.\ud55c\ub3c4\ub294 \ud2b9\uc815 \ud504\ub85c\ube44\uc800\ub108\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc544\ub798 \uc2a4\ub2c8\ud3ab\uc740 Karpenter\uc5d0\uac8c \ucd5c\ub300 1000\uac1c\uc758 CPU \ucf54\uc5b4\uc640 1000Gi\uc758 \uba54\ubaa8\ub9ac\ub9cc \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. Karpenter\ub294 \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uac70\ub098 \ucd08\uacfc\ud560 \ub54c\ub9cc \uc6a9\ub7c9 \ucd94\uac00\ub97c \uc911\ub2e8\ud569\ub2c8\ub2e4. \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\uba74 \uce74\ud39c\ud130 \ucee8\ud2b8\ub864\ub7ec\ub294 '1001\uc758 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc774 \ud55c\ub3c4 1000\uc744 \ucd08\uacfc\ud569\ub2c8\ub2e4' \ub610\ub294 \uc774\uc640 \ube44\uc2b7\ud55c \ubaa8\uc591\uc758 \uba54\uc2dc\uc9c0\ub97c \ucee8\ud2b8\ub864\ub7ec \ub85c\uadf8\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub85c\uadf8\ub97c CloudWatch \ub85c\uadf8\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \uacbd\uc6b0 \uc9c0\ud45c \ud544\ud130 \ub97c \uc0dd\uc131\ud558\uc5ec \ub85c\uadf8\uc5d0\uc11c \ud2b9\uc815 \ud328\ud134\uc774\ub098 \uc6a9\uc5b4\ub97c \ucc3e\uc740 \ub2e4\uc74c CloudWatch alarm \uc744 \uc0dd\uc131\ud558\uc5ec \uad6c\uc131\ub41c \uc9c0\ud45c \uc784\uacc4\uac12\uc744 \uc704\ubc18\ud588\uc744 \ub54c \uacbd\uace0\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. Karpenter\uc5d0\uc11c \uc81c\ud55c\uc744 \uc0ac\uc6a9\ud558\ub294 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc124\uba85\uc11c\uc758 \ub9ac\uc18c\uc2a4 \uc81c\ud55c \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. spec : limits : resources : cpu : 1000 memory : 1000Gi Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc81c\ud55c\ud558\uac70\ub098 \uc81c\ud55c\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 Karpenter\ub294 \ud544\uc694\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucef4\ud4e8\ud305 \ud30c\uc6cc\ub97c \uacc4\uc18d \ucd94\uac00\ud569\ub2c8\ub2e4.Karpenter\ub97c \uc774\ub7ec\ud55c \ubc29\uc2dd\uc73c\ub85c \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \uc790\uc720\ub86d\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\uc9c0\ub9cc \ube44\uc6a9\uc5d0\ub3c4 \uc0c1\ub2f9\ud55c \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\uc720\ub85c \uacb0\uc81c \uacbd\ubcf4\ub97c \uad6c\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\uccad\uad6c \uacbd\ubcf4\ub97c \uc0ac\uc6a9\ud558\uba74 \uacc4\uc815\uc5d0\uc11c \uacc4\uc0b0\ub41c \uc608\uc0c1 \uc694\uae08\uc774 \uc815\uc758\ub41c \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud560 \uacbd\uc6b0 \uc54c\ub9bc\uc744 \ubc1b\uace0 \uc0ac\uc804\uc5d0 \uc54c\ub9bc\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc608\uc0c1 \uc694\uae08\uc744 \uc0ac\uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud558\uae30 \uc704\ud55c Amazon CloudWatch \uccad\uad6c \uacbd\ubcf4 \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uae30\uacc4 \ud559\uc2b5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ube44\uc6a9\uacfc \uc0ac\uc6a9\ub7c9\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec \ube44\uc815\uc0c1\uc801\uc778 \uc9c0\ucd9c\uc744 \uac10\uc9c0\ud558\ub294 AWS \ube44\uc6a9 \uad00\ub9ac \uae30\ub2a5\uc778 \ube44\uc6a9 \uc608\uc678 \ud0d0\uc9c0\ub97c \ud65c\uc131\ud654\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ube44\uc6a9 \uc774\uc0c1 \ud0d0\uc9c0 \uc2dc\uc791 \uac00\uc774\ub4dc\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.AWS Budgets\uc5d0\uc11c \uc608\uc0b0\uc744 \ud3b8\uc131\ud55c \uacbd\uc6b0, \ud2b9\uc815 \uc784\uacc4\uac12 \uc704\ubc18 \uc2dc \uc54c\ub9bc\uc744 \ubc1b\ub3c4\ub85d \uc870\uce58\ub97c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\uc608\uc0b0 \ud65c\ub3d9\uc744 \ud1b5\ud574 \uc774\uba54\uc77c\uc744 \ubcf4\ub0b4\uac70\ub098, SNS \uc8fc\uc81c\uc5d0 \uba54\uc2dc\uc9c0\ub97c \uac8c\uc2dc\ud558\uac70\ub098, Slack\uacfc \uac19\uc740 \ucc57\ubd07\uc5d0 \uba54\uc2dc\uc9c0\ub97c \ubcf4\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \uc608\uc0b0 \uc791\uc5c5 \uad6c\uc131 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uacb0\uc81c \uacbd\ubcf4\ub97c \uc0dd\uc131\ud558\uc5ec \ucef4\ud4e8\ud305 \uc9c0\ucd9c\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uc138\uc694"},{"location":"karpenter/index.kr/#do-not-evict-karpenter","text":"Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\uc5d0\uc11c \uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 (\uc608: \uc7a5\uae30 \uc2e4\ud589 \ubc30\uce58 \uc791\uc5c5 \ub610\ub294 \uc2a4\ud14c\uc774\ud2b8\ud480 \uc560\ud50c\ub9ac\ucf00\uc774\uc158) \uc744 \uc2e4\ud589 \uc911\uc774\uace0 \ub178\ub4dc\uc758 TTL\uc774 \ub9cc\ub8cc\ub418\uc5c8\uc73c\uba74* \uc778\uc2a4\ud134\uc2a4\uac00 \uc885\ub8cc\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc911\ub2e8\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uc5d0 karpenter.sh/do-not-evict \uc5b4\ub178\ud14c\uc774\uc158\uc744 \ucd94\uac00\ud558\uba74 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uac70\ub098 do-not-evict \uc5b4\ub178\ud14c\uc774\uc158\uc774 \uc81c\uac70\ub420 \ub54c\uae4c\uc9c0 Karpenter\uac00 \ub178\ub4dc\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub514\ud504\ub85c\ube44\uc800\ub2dd \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub178\ub4dc\uc5d0 \ub370\ubaac\uc14b\uc774 \uc544\ub2cc \ud30c\ub4dc\uac00 \uc791\uc5c5\uacfc \uad00\ub828\ub41c \ud30c\ub4dc\ub9cc \ub0a8\uc544 \uc788\ub294 \uacbd\uc6b0, Karpenter\ub294 \uc791\uc5c5 \uc0c1\ud0dc\uac00 \uc131\uacf5 \ub610\ub294 \uc2e4\ud328\uc778 \ud55c \ud574\ub2f9 \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \uc9c0\uc815\ud558\uace0 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc81c\uac70 \uae08\uc9c0(do-not-evict) \uc5b4\ub178\ud14c\uc774\uc158 \uc0ac\uc6a9\ud558\uc5ec Karpenter\uac00 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ucde8\uc18c\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\uc138\uc694."},{"location":"karpenter/index.kr/#cpu-requestslimits","text":"\uc77c\ubc18\uc801\uc73c\ub85c \ud3ec\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uacfc \ub178\ub4dc\uc758 \ud560\ub2f9 \uac00\ub2a5\ud55c \ub9ac\uc18c\uc2a4 \uc591\uc744 \ube44\uad50\ud558\uc5ec \ud1b5\ud569 \ubc0f \uc2a4\ucf00\uc904\ub9c1\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc740 \uace0\ub824\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \uba54\ubaa8\ub9ac \ud55c\ub3c4\uac00 \uba54\ubaa8\ub9ac \uc694\uccad\ub7c9\ubcf4\ub2e4 \ud070 \ud30c\ub4dc\ub294 \uc694\uccad\uc744 \ucd08\uacfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \ub178\ub4dc\uc758 \uc5ec\ub7ec \ud3ec\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 \ubc84\uc2a4\ud2b8\ub418\uba74 \uba54\ubaa8\ub9ac \ubd80\uc871 (OOM) \uc0c1\ud0dc\ub85c \uc778\ud574 \uc77c\ubd80 \ud3ec\ub4dc\uac00 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud1b5\ud569\uc740 \uc694\uccad\ub9cc \uace0\ub824\ud558\uc5ec \ud30c\ub4dc\ub97c \ub178\ub4dc\uc5d0 \ud328\ud0b9\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud558\uae30 \ub54c\ubb38\uc5d0 \uc774\ub7f0 \uc77c\uc774 \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc744 \ub192\uc77c \uc218 \uc788\ub2e4.","title":"\ud1b5\ud569\uc744 \uc0ac\uc6a9\ud560 \ub54c CPU\uac00 \uc544\ub2cc \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc694\uccad=\uc81c\ud55c(requests=limits)\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4."},{"location":"karpenter/index.kr/#limitranges","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uae30\ubcf8 \uc694\uccad\uc774\ub098 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8 \ud638\uc2a4\ud2b8, CPU \ubc0f \uba54\ubaa8\ub9ac\uc758 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc81c\ud55c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \ud3ec\ub4dc\uc758 \ucd1d \uc694\uccad (\ud3ec\ub4dc \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \uc694\uccad \ub610\ub294 \ud3ec\ub4dc Init \ucee8\ud14c\uc774\ub108\uc758 \ucd1d \ub9ac\uc18c\uc2a4 \uc911 \ub354 \ub192\uc740 \uc694\uccad) \uc744 \uac80\ud1a0\ud558\uc5ec \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.\ub9c8\ucc2c\uac00\uc9c0\ub85c Karpenter\ub294 \ud30c\ub4dc\uc758 \uc694\uccad\uc744 \uace0\ub824\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.\uc77c\ubd80 \ud3ec\ub4dc\uc5d0\uc11c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uc9c0\uc815\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc801\uc808\ud55c \uae30\ubcf8\uac12\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. [\ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud55c \uae30\ubcf8 \uba54\ubaa8\ub9ac \uc694\uccad \ubc0f \uc81c\ud55c \uad6c\uc131] (https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/) \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"LimitRanges \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9ac\uc18c\uc2a4 \uc694\uccad \ubc0f \uc81c\ud55c\uc5d0 \ub300\ud55c \uae30\ubcf8\uac12\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4."},{"location":"karpenter/index.kr/#_14","text":"Karpenter\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub300\ud55c \uc815\ubcf4\uac00 \uc815\ud655\ud560 \ub54c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \ub178\ub4dc\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub294 Karpenter\uc758 \ud1b5\ud569 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad/\uc81c\ud55c \uad6c\uc131 \ubc0f \ud06c\uae30 \uc870\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uc815\ud655\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc6a9"},{"location":"karpenter/index.kr/#_15","text":"Karpenter/Spot Workshop Karpenter Node Provisioner TGIK Karpenter Karpenter vs. Cluster Autoscaler Groupless Autoscaling with Karpenter","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"networking/custom-networking/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Custom Networking \u00b6 By default, Amazon VPC CNI will assign Pods an IP address selected from the primary subnet. The primary subnet is the subnet CIDR that the primary ENI is attached to, usually the subnet of the node/host. If the subnet CIDR is too small, the CNI may not be able to acquire enough secondary IP addresses to assign to your Pods. This is a common challenge for EKS IPv4 clusters. Custom networking is one solution to this problem. Custom networking addresses the IP exhaustion issue by assigning the node and Pod IPs from secondary VPC address spaces (CIDR). Custom networking support supports ENIConfig custom resource. The ENIConfig includes an alternate subnet CIDR range (carved from a secondary VPC CIDR), along with the security group(s) that the Pods will belong to. When custom networking is enabled, the VPC CNI creates secondary ENIs in the subnet defined under ENIConfig. The CNI assigns Pods an IP addresses from a CIDR range defined in a ENIConfig CRD. Since the primary ENI is not used by custom networking, the maximum number of Pods you can run on a node is lower. The host network Pods continue to use IP address assigned to the primary ENI. Additionally, the primary ENI is used to handle source network translation and route Pods traffic outside the node. Example Configuration \u00b6 While custom networking will accept valid VPC range for secondary CIDR range, we recommend that you use CIDRs (/16) from the CG-NAT space, i.e. 100.64.0.0/10 or 198.19.0.0/16 as those are less likely to be used in a corporate setting than other RFC1918 ranges. For additional information about the permitted and restricted CIDR block associations you can use with your VPC, see IPv4 CIDR block association restrictions in the VPC and subnet sizing section of the VPC documentation. As shown in the diagram below, the primary Elastic Network Interface ( ENI ) of the worker node still uses the primary VPC CIDR range (in this case 10.0.0.0/16) but the secondary ENIs use the secondary VPC CIDR Range (in this case 100.64.0.0/16). Now, in order to have the Pods use the 100.64.0.0/16 CIDR range, you must configure the CNI plugin to use custom networking. You can follow through the steps as documented here . If you want the CNI to use custom networking, set the AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG environment variable to true . kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true When AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true , the CNI will assign Pod IP address from a subnet defined in ENIConfig . The ENIConfig custom resource is used to define the subnet in which Pods will be scheduled. apiVersion : crd.k8s.amazonaws.com/v1alpha1 kind : ENIConfig metadata: name: us-west-2a spec: securityGroups: - sg-0dff111a1d11c1c11 subnet: subnet-011b111c1f11fdf11 Upon creating the ENIconfig custom resources, you will need to create new worker nodes and drain the existing nodes. The existing worker nodes and Pods will remain unaffected. Recommendations \u00b6 Use Custom Networking When \u00b6 We recommend you to consider custom networking if you are dealing with IPv4 exhaustion and can\u2019t use IPv6 yet. Amazon EKS support for RFC6598 space enables you to scale Pods beyond RFC1918 address exhaustion challenges. Please consider using prefix delegation with custom networking to increase the Pods density on a node. You might consider custom networking if you have a security requirement to run Pods on a different network with different security group requirements. When custom networking enabled, the pods use different subnet or security groups as defined in the ENIConfig than the node's primary network interface. Custom networking is indeed an ideal option for deploying multiple EKS clusters and applications to connect on-premise datacenter services. You can increase the number of private addresses (RFC1918) accessible to EKS in your VPC for services such as Amazon Elastic Load Balancing and NAT-GW, while using non-routable CG-NAT space for your Pods across multiple clusters. Custom networking with the transit gateway and a Shared Services VPC (including NAT gateways across several Availability Zones for high availability) enables you to deliver scalable and predictable traffic flows. This blog post describes an architectural pattern that is one of the most recommended ways to connect EKS Pods to a datacenter network using custom networking. Avoid Custom Networking When \u00b6 Ready to Implement IPv6 \u00b6 Custom networking can mitigate IP exhaustion issues, but it requires additional operational overhead. If you are currently deploying a dual-stack (IPv4/IPv6) VPC or if your plan includes IPv6 support, we recommend implementing IPv6 clusters instead. You can set up IPv6 EKS clusters and migrate your apps. In an IPv6 EKS cluster, both Kubernetes and Pods get an IPv6 address and can communicate in and out to both IPv4 and IPv6 endpoints. Please review best practices for Running IPv6 EKS Clusters . Exhausted CG-NAT Space \u00b6 Furthermore, if you're currently utilizing CIDRs from the CG-NAT space or are unable to link a secondary CIDR with your cluster VPC, you may need to explore other options, such as using an alternative CNI. We strongly recommend that you either obtain commercial support or possess the in-house knowledge to debug and submit patches to the open source CNI plugin project. Refer Alternate CNI Plugins user guide for more details. Use Private NAT Gateway \u00b6 Amazon VPC now offers private NAT gateway capabilities. Amazon's private NAT Gateway enables instances in private subnets to connect to other VPCs and on-premises networks with overlapping CIDRs. Consider utilizing the method described on this blog post to employ a private NAT gateway to overcome communication issues for the EKS workloads caused by overlapping CIDRs, a significant complaint expressed by our clients. Custom networking cannot address the overlapping CIDR difficulties on its own, and it adds to the configuration challenges. The network architecture used in this blog post implementation follows the recommendations under Enable communication between overlapping networks in Amazon VPC documentation. As demonstrated in this blog post, you may expand the usage of private NAT Gateway in conjunction with RFC6598 addresses to manage customers' private IP exhaustion issues. The EKS clusters, worker nodes are deployed in the non-routable 100.64.0.0/16 VPC secondary CIDR range, whereas the private NAT gateway, NAT gateway are deployed to the routable RFC1918 CIDR ranges. The blog explains how a transit gateway is used to connect VPCs in order to facilitate communication across VPCs with overlapping non-routable CIDR ranges. For use cases in which EKS resources in a VPC's non-routable address range need to communicate with other VPCs that do not have overlapping address ranges, customers have the option of using VPC Peering to interconnect such VPCs. This method could provide potential cost savings as all data transit within an Availability Zone via a VPC peering connection is now free. Unique network for nodes and Pods \u00b6 If you need to isolate your nodes and Pods to a specific network for security reasons, we recommend that you deploy nodes and Pods to a subnet from a larger secondary CIDR block (e.g. 100.64.0.0/8). Following the installation of the new CIDR in your VPC, you can deploy another node group using the secondary CIDR and drain the original nodes to automatically redeploy the pods to the new worker nodes. For more information on how to implement this, see this blog post. Custom networking is not used in the setup represented in the diagram below. Rather, Kubernetes worker nodes are deployed on subnets from your VPC's secondary VPC CIDR range, such as 100.64.0.0/10. You can keep the EKS cluster running (the control plane will remain on the original subnet/s), but the nodes and Pods will be moved to a secondary subnet/s. This is yet another, albeit unconventional, technique to mitigate the danger of IP exhaustion in a VPC. We propose draining the old nodes before redeploying the pods to the new worker nodes. Automate Configuration with Availability Zone Labels \u00b6 You can enable Kubernetes to automatically apply the corresponding ENIConfig for the worker node Availability Zone (AZ). Kubernetes automatically adds the tag topology.kubernetes.io/zone to your worker nodes. Amazon EKS recommends using the availability zone as your ENI config name when you only have one secondary subnet (alternate CIDR) per AZ. Note that tag failure-domain.beta.kubernetes.io/zone is deprecated and replaced with the tag topology.kubernetes.io/zone . Set name field to the Availability Zone of your VPC. Enable automatic configuration with this command: kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true if you have multiple secondary subnets per availability zone, you need create a specific ENI_CONFIG_LABEL_DEF . You might consider configuring ENI_CONFIG_LABEL_DEF as k8s.amazonaws.com/eniConfig and label nodes with custom eniConfig names, such as k8s.amazonaws.com/eniConfig=us-west-2a-subnet-1 and k8s.amazonaws.com/eniConfig=us-west-2a-subnet-2 . Replace Pods when Configuring Secondary Networking \u00b6 Enabling custom networking does not modify existing nodes. Custom networking is a disruptive action. Rather than doing a rolling replacement of all the worker nodes in your cluster after enabling custom networking, we suggest updating the AWS CloudFormation template in the EKS Getting Started Guide with a custom resource that calls a Lambda function to update the aws-node Daemonset with the environment variable to enable custom networking before the worker nodes are provisioned. If you had any nodes in your cluster with running Pods before you switched to the custom CNI networking feature, you should cordon and drain the nodes to gracefully shutdown the Pods and then terminate the nodes. Only new nodes matching the ENIConfig label or annotations use custom networking, and hence the Pods scheduled on these new nodes can be assigned an IP from secondary CIDR. Calculate Max Pods per Node \u00b6 Since the node\u2019s primary ENI is no longer used to assign Pod IP addresses, there is a decrease in the number of Pods you can run on a given EC2 instance type. To work around this limitation you can use prefix assignment with custom networking. With prefix assignment, each secondary IP is replaced with a /28 prefix on secondary ENIs. Consider the maximum number of Pods for an m5.large instance with custom networking. The maximum number of Pods you can run without prefix assignment is 29 ((3 ENIs - 1) * (10 secondary IPs per ENI - 1)) + 2 = 20 Enabling prefix attachments increases the number of Pods to 290. (((3 ENIs - 1) * ((10 secondary IPs per ENI - 1) * 16)) + 2 = 290 However, we suggest setting max-pods to 110 rather than 290 because the instance has a rather small number of virtual CPUs. On bigger instances, EKS recommends a max pods value of 250. When utilizing prefix attachments with smaller instance types (e.g. m5.large), it is possible that you will exhaust the instance's CPU and memory resources well before its IP addresses. Info When the CNI prefix allocates a /28 prefix to an ENI, it has to be a contiguous block of IP addresses. If the subnet that the prefix is generated from is highly fragmented, the prefix attachment may fail. You can mitigate this from happening by creating a new dedicated VPC for the cluster or by reserving subnet a set of CIDR exclusively for prefix attachments. Visit Subnet CIDR reservations for more information on this topic. Identify Existing Usage of CG-NAT Space \u00b6 Custom networking allows you to mitigate IP exhaustion issue, however it can\u2019t solve all the challenges. If you already using CG-NAT space for your cluster, or simply don\u2019t have the ability to associate a secondary CIDR with your cluster VPC, we suggest you to explore other options, like using an alternate CNI or moving to IPv6 clusters.","title":"Custom Networking ({'name': 'English', 'build': True})"},{"location":"networking/custom-networking/#custom-networking","text":"By default, Amazon VPC CNI will assign Pods an IP address selected from the primary subnet. The primary subnet is the subnet CIDR that the primary ENI is attached to, usually the subnet of the node/host. If the subnet CIDR is too small, the CNI may not be able to acquire enough secondary IP addresses to assign to your Pods. This is a common challenge for EKS IPv4 clusters. Custom networking is one solution to this problem. Custom networking addresses the IP exhaustion issue by assigning the node and Pod IPs from secondary VPC address spaces (CIDR). Custom networking support supports ENIConfig custom resource. The ENIConfig includes an alternate subnet CIDR range (carved from a secondary VPC CIDR), along with the security group(s) that the Pods will belong to. When custom networking is enabled, the VPC CNI creates secondary ENIs in the subnet defined under ENIConfig. The CNI assigns Pods an IP addresses from a CIDR range defined in a ENIConfig CRD. Since the primary ENI is not used by custom networking, the maximum number of Pods you can run on a node is lower. The host network Pods continue to use IP address assigned to the primary ENI. Additionally, the primary ENI is used to handle source network translation and route Pods traffic outside the node.","title":"Custom Networking"},{"location":"networking/custom-networking/#example-configuration","text":"While custom networking will accept valid VPC range for secondary CIDR range, we recommend that you use CIDRs (/16) from the CG-NAT space, i.e. 100.64.0.0/10 or 198.19.0.0/16 as those are less likely to be used in a corporate setting than other RFC1918 ranges. For additional information about the permitted and restricted CIDR block associations you can use with your VPC, see IPv4 CIDR block association restrictions in the VPC and subnet sizing section of the VPC documentation. As shown in the diagram below, the primary Elastic Network Interface ( ENI ) of the worker node still uses the primary VPC CIDR range (in this case 10.0.0.0/16) but the secondary ENIs use the secondary VPC CIDR Range (in this case 100.64.0.0/16). Now, in order to have the Pods use the 100.64.0.0/16 CIDR range, you must configure the CNI plugin to use custom networking. You can follow through the steps as documented here . If you want the CNI to use custom networking, set the AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG environment variable to true . kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true When AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true , the CNI will assign Pod IP address from a subnet defined in ENIConfig . The ENIConfig custom resource is used to define the subnet in which Pods will be scheduled. apiVersion : crd.k8s.amazonaws.com/v1alpha1 kind : ENIConfig metadata: name: us-west-2a spec: securityGroups: - sg-0dff111a1d11c1c11 subnet: subnet-011b111c1f11fdf11 Upon creating the ENIconfig custom resources, you will need to create new worker nodes and drain the existing nodes. The existing worker nodes and Pods will remain unaffected.","title":"Example Configuration"},{"location":"networking/custom-networking/#recommendations","text":"","title":"Recommendations"},{"location":"networking/custom-networking/#use-custom-networking-when","text":"We recommend you to consider custom networking if you are dealing with IPv4 exhaustion and can\u2019t use IPv6 yet. Amazon EKS support for RFC6598 space enables you to scale Pods beyond RFC1918 address exhaustion challenges. Please consider using prefix delegation with custom networking to increase the Pods density on a node. You might consider custom networking if you have a security requirement to run Pods on a different network with different security group requirements. When custom networking enabled, the pods use different subnet or security groups as defined in the ENIConfig than the node's primary network interface. Custom networking is indeed an ideal option for deploying multiple EKS clusters and applications to connect on-premise datacenter services. You can increase the number of private addresses (RFC1918) accessible to EKS in your VPC for services such as Amazon Elastic Load Balancing and NAT-GW, while using non-routable CG-NAT space for your Pods across multiple clusters. Custom networking with the transit gateway and a Shared Services VPC (including NAT gateways across several Availability Zones for high availability) enables you to deliver scalable and predictable traffic flows. This blog post describes an architectural pattern that is one of the most recommended ways to connect EKS Pods to a datacenter network using custom networking.","title":"Use Custom Networking When"},{"location":"networking/custom-networking/#avoid-custom-networking-when","text":"","title":"Avoid Custom Networking When"},{"location":"networking/custom-networking/#ready-to-implement-ipv6","text":"Custom networking can mitigate IP exhaustion issues, but it requires additional operational overhead. If you are currently deploying a dual-stack (IPv4/IPv6) VPC or if your plan includes IPv6 support, we recommend implementing IPv6 clusters instead. You can set up IPv6 EKS clusters and migrate your apps. In an IPv6 EKS cluster, both Kubernetes and Pods get an IPv6 address and can communicate in and out to both IPv4 and IPv6 endpoints. Please review best practices for Running IPv6 EKS Clusters .","title":"Ready to Implement IPv6"},{"location":"networking/custom-networking/#exhausted-cg-nat-space","text":"Furthermore, if you're currently utilizing CIDRs from the CG-NAT space or are unable to link a secondary CIDR with your cluster VPC, you may need to explore other options, such as using an alternative CNI. We strongly recommend that you either obtain commercial support or possess the in-house knowledge to debug and submit patches to the open source CNI plugin project. Refer Alternate CNI Plugins user guide for more details.","title":"Exhausted CG-NAT Space"},{"location":"networking/custom-networking/#use-private-nat-gateway","text":"Amazon VPC now offers private NAT gateway capabilities. Amazon's private NAT Gateway enables instances in private subnets to connect to other VPCs and on-premises networks with overlapping CIDRs. Consider utilizing the method described on this blog post to employ a private NAT gateway to overcome communication issues for the EKS workloads caused by overlapping CIDRs, a significant complaint expressed by our clients. Custom networking cannot address the overlapping CIDR difficulties on its own, and it adds to the configuration challenges. The network architecture used in this blog post implementation follows the recommendations under Enable communication between overlapping networks in Amazon VPC documentation. As demonstrated in this blog post, you may expand the usage of private NAT Gateway in conjunction with RFC6598 addresses to manage customers' private IP exhaustion issues. The EKS clusters, worker nodes are deployed in the non-routable 100.64.0.0/16 VPC secondary CIDR range, whereas the private NAT gateway, NAT gateway are deployed to the routable RFC1918 CIDR ranges. The blog explains how a transit gateway is used to connect VPCs in order to facilitate communication across VPCs with overlapping non-routable CIDR ranges. For use cases in which EKS resources in a VPC's non-routable address range need to communicate with other VPCs that do not have overlapping address ranges, customers have the option of using VPC Peering to interconnect such VPCs. This method could provide potential cost savings as all data transit within an Availability Zone via a VPC peering connection is now free.","title":"Use Private NAT Gateway"},{"location":"networking/custom-networking/#unique-network-for-nodes-and-pods","text":"If you need to isolate your nodes and Pods to a specific network for security reasons, we recommend that you deploy nodes and Pods to a subnet from a larger secondary CIDR block (e.g. 100.64.0.0/8). Following the installation of the new CIDR in your VPC, you can deploy another node group using the secondary CIDR and drain the original nodes to automatically redeploy the pods to the new worker nodes. For more information on how to implement this, see this blog post. Custom networking is not used in the setup represented in the diagram below. Rather, Kubernetes worker nodes are deployed on subnets from your VPC's secondary VPC CIDR range, such as 100.64.0.0/10. You can keep the EKS cluster running (the control plane will remain on the original subnet/s), but the nodes and Pods will be moved to a secondary subnet/s. This is yet another, albeit unconventional, technique to mitigate the danger of IP exhaustion in a VPC. We propose draining the old nodes before redeploying the pods to the new worker nodes.","title":"Unique network for nodes and Pods"},{"location":"networking/custom-networking/#automate-configuration-with-availability-zone-labels","text":"You can enable Kubernetes to automatically apply the corresponding ENIConfig for the worker node Availability Zone (AZ). Kubernetes automatically adds the tag topology.kubernetes.io/zone to your worker nodes. Amazon EKS recommends using the availability zone as your ENI config name when you only have one secondary subnet (alternate CIDR) per AZ. Note that tag failure-domain.beta.kubernetes.io/zone is deprecated and replaced with the tag topology.kubernetes.io/zone . Set name field to the Availability Zone of your VPC. Enable automatic configuration with this command: kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true if you have multiple secondary subnets per availability zone, you need create a specific ENI_CONFIG_LABEL_DEF . You might consider configuring ENI_CONFIG_LABEL_DEF as k8s.amazonaws.com/eniConfig and label nodes with custom eniConfig names, such as k8s.amazonaws.com/eniConfig=us-west-2a-subnet-1 and k8s.amazonaws.com/eniConfig=us-west-2a-subnet-2 .","title":"Automate Configuration with Availability Zone Labels"},{"location":"networking/custom-networking/#replace-pods-when-configuring-secondary-networking","text":"Enabling custom networking does not modify existing nodes. Custom networking is a disruptive action. Rather than doing a rolling replacement of all the worker nodes in your cluster after enabling custom networking, we suggest updating the AWS CloudFormation template in the EKS Getting Started Guide with a custom resource that calls a Lambda function to update the aws-node Daemonset with the environment variable to enable custom networking before the worker nodes are provisioned. If you had any nodes in your cluster with running Pods before you switched to the custom CNI networking feature, you should cordon and drain the nodes to gracefully shutdown the Pods and then terminate the nodes. Only new nodes matching the ENIConfig label or annotations use custom networking, and hence the Pods scheduled on these new nodes can be assigned an IP from secondary CIDR.","title":"Replace Pods when Configuring Secondary Networking"},{"location":"networking/custom-networking/#calculate-max-pods-per-node","text":"Since the node\u2019s primary ENI is no longer used to assign Pod IP addresses, there is a decrease in the number of Pods you can run on a given EC2 instance type. To work around this limitation you can use prefix assignment with custom networking. With prefix assignment, each secondary IP is replaced with a /28 prefix on secondary ENIs. Consider the maximum number of Pods for an m5.large instance with custom networking. The maximum number of Pods you can run without prefix assignment is 29 ((3 ENIs - 1) * (10 secondary IPs per ENI - 1)) + 2 = 20 Enabling prefix attachments increases the number of Pods to 290. (((3 ENIs - 1) * ((10 secondary IPs per ENI - 1) * 16)) + 2 = 290 However, we suggest setting max-pods to 110 rather than 290 because the instance has a rather small number of virtual CPUs. On bigger instances, EKS recommends a max pods value of 250. When utilizing prefix attachments with smaller instance types (e.g. m5.large), it is possible that you will exhaust the instance's CPU and memory resources well before its IP addresses. Info When the CNI prefix allocates a /28 prefix to an ENI, it has to be a contiguous block of IP addresses. If the subnet that the prefix is generated from is highly fragmented, the prefix attachment may fail. You can mitigate this from happening by creating a new dedicated VPC for the cluster or by reserving subnet a set of CIDR exclusively for prefix attachments. Visit Subnet CIDR reservations for more information on this topic.","title":"Calculate Max Pods per Node"},{"location":"networking/custom-networking/#identify-existing-usage-of-cg-nat-space","text":"Custom networking allows you to mitigate IP exhaustion issue, however it can\u2019t solve all the challenges. If you already using CG-NAT space for your cluster, or simply don\u2019t have the ability to associate a secondary CIDR with your cluster VPC, we suggest you to explore other options, like using an alternate CNI or moving to IPv6 clusters.","title":"Identify Existing Usage of CG-NAT Space"},{"location":"networking/custom-networking/index.kr/","text":"{'name': 'English', 'build': True} \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \u00b6 \uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \uae30\ubcf8 \uc11c\ube0c\ub137\uc5d0\uc11c \uc120\ud0dd\ud55c IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc740 \uae30\ubcf8 ENI\uac00 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137 CIDR\uc774\uba70, \uc77c\ubc18\uc801\uc73c\ub85c \ub178\ub4dc/\ud638\uc2a4\ud2b8\uc758 \uc11c\ube0c\ub137\uc785\ub2c8\ub2e4. \uc11c\ube0c\ub137 CIDR\uc774 \ub108\ubb34 \uc791\uc73c\uba74 CNI\uac00 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud558\uae30\uc5d0 \ucda9\ubd84\ud55c \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \ud655\ubcf4\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 EKS IPv4 \ud074\ub7ec\uc2a4\ud130\uc758 \uc77c\ubc18\uc801\uc778 \ubb38\uc81c\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \uc774 \ubb38\uc81c\uc5d0 \ub300\ud55c \ud55c \uac00\uc9c0 \ud574\uacb0\ucc45\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ubcf4\uc870 VPC \uc8fc\uc18c \uacf5\uac04 (CIDR) \uc5d0\uc11c \ub178\ub4dc \ubc0f \ud3ec\ub4dc IP\ub97c \ud560\ub2f9\ud558\uc5ec IP \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc9c0\uc6d0\uc740 Eniconfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ENIConfig\uc5d0\ub294 \ud30c\ub4dc\uac00 \uc18d\ud558\uac8c \ub420 \ubcf4\uc548 \uadf8\ub8f9\uacfc \ud568\uaed8 \ub300\uccb4 \uc11c\ube0c\ub137 CIDR \ubc94\uc704 (\ubcf4\uc870 VPC CIDR\uc5d0\uc11c \ud30c\ubc0d) \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 VPC CNI\ub294 eniconfig\uc5d0 \uc815\uc758\ub41c \uc11c\ube0c\ub137\uc5d0 \ubcf4\uc870 ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. CNI\ub294 ENIConfig CRD\uc5d0 \uc815\uc758\ub41c CIDR \ubc94\uc704\uc758 IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc5d0\uc11c\ub294 \uae30\ubcf8 ENI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 \ub354 \uc801\ub2e4. \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc\ub294 \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c IP \uc8fc\uc18c\ub97c \uacc4\uc18d \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uae30\ubcf8 ENI\ub294 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubcc0\ud658\uc744 \ucc98\ub9ac\ud558\uace0 \ud30c\ub4dc \ud2b8\ub798\ud53d\uc744 \ub178\ub4dc \uc678\ubd80\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\uc81c \uad6c\uc131 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ubcf4\uc870 CIDR \ubc94\uc704\uc5d0 \uc720\ud6a8\ud55c VPC \ubc94\uc704\ub97c \ud5c8\uc6a9\ud558\uc9c0\ub9cc CG-NAT \uacf5\uac04 (\uc608: 100.64.0.0/10 \ub610\ub294 198.19.0.0/16) \uc758 CIDR (/16) \uc740 \ub2e4\ub978 RFC1918 \ubc94\uc704\ubcf4\ub2e4 \uae30\uc5c5 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ub420 \uac00\ub2a5\uc131\uc774 \uc801\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. VPC\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud5c8\uc6a9 \ubc0f \uc81c\ud55c\ub41c CIDR \ube14\ub85d \uc5f0\uacb0\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC \uc124\uba85\uc11c\uc758 VPC \ubc0f \uc11c\ube0c\ub137 \ud06c\uae30 \uc870\uc815 \uc139\uc158\uc5d0\uc11c IPv4 CIDR \ube14\ub85d \uc5f0\uacb0 \uc81c\ud55c \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \uae30\ubcf8 \uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 ( ENI ) \ub294 \uc5ec\uc804\ud788 \uae30\ubcf8 VPC CIDR \ubc94\uc704 (\uc774 \uacbd\uc6b0 10.0.0.0/16) \ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \ubcf4\uc870 ENI\ub294 \ubcf4\uc870 VPC CIDR \ubc94\uc704 (\uc774 \uacbd\uc6b0 100.64.0.0/16) \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uc81c \ud30c\ub4dc\uac00 100.64.0.0/16 CIDR \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0 \uc124\uba85\ub41c \ub300\ub85c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uba74 \ub429\ub2c8\ub2e4. CNI\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub824\uba74 AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG \ud658\uacbd \ubcc0\uc218\ub97c true \ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true AWS_VPC_K8S_CNI_CUSTOM_Network_CFG=true \uc778 \uacbd\uc6b0, CNI\ub294 ENIConfig \uc5d0 \uc815\uc758\ub41c \uc11c\ube0c\ub137\uc758 \ud30c\ub4dc IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud55c\ub2e4. ENIConfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub294 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub420 \uc11c\ube0c\ub137\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. apiVersion : crd.k8s.amazonaws.com/v1alpha1 kind : ENIConfig metadata: name: us-west-2a spec: securityGroups: - sg-0dff111a1d11c1c11 subnet: subnet-011b111c1f11fdf11 eniconfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c \uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\uace0 \uae30\uc874 \ub178\ub4dc\ub97c \ube44\uc6cc\uc57c \ud569\ub2c8\ub2e4.\uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\uc6a9\uc744 \uad8c\uc7a5\ud558\ub294 \uacbd\uc6b0 \u00b6 IPv4\uac00 \uace0\uac08\ub418\uace0 \uc788\uace0 \uc544\uc9c1 IPv6\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uace0\ub824\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 RFC6598 \uacf5\uac04\uc744 \uc9c0\uc6d0\ud558\ubbc0\ub85c RFC1918 \ubb38\uc81c \uc18c\ubaa8 \ubb38\uc81c \uc774\uc0c1\uc73c\ub85c \ud30c\ub4dc\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uacfc \ud568\uaed8 \uc811\ub450\uc0ac \uc704\uc784\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc758 \ud3ec\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ubcf4\uc548 \uadf8\ub8f9 \uc694\uad6c \uc0ac\ud56d\uc774 \ub2e4\ub978 \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c Pod\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 \ud3ec\ub4dc\ub294 Eniconfig\uc5d0 \uc815\uc758\ub41c \ub300\ub85c \ub178\ub4dc\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc640 \ub2e4\ub978 \uc11c\ube0c\ub137 \ub610\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \uc5ec\ub7ec EKS \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc30\ud3ec\ud558\uc5ec \uc628\ud504\ub808\ubbf8\uc2a4 \ub370\uc774\ud130 \uc13c\ud130 \uc11c\ube44\uc2a4\ub97c \uc5f0\uacb0\ud558\ub294 \ub370 \uac00\uc7a5 \uc801\ud569\ud55c \uc635\uc158\uc785\ub2c8\ub2e4. Amazon Elastic Load Balancing \ubc0f NAT-GW\uc640 \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \uc704\ud574 VPC\uc5d0\uc11c EKS\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud504\ub77c\uc774\ube57 \uc8fc\uc18c (RFC1918) \uc758 \uc218\ub97c \ub298\ub9ac\ub294 \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud30c\ub4dc\uc5d0 \ub77c\uc6b0\ud305\ud560 \uc218 \uc5c6\ub294 CG-NAT \uacf5\uac04\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc0f \uacf5\uc720 \uc11c\ube44\uc2a4 VPC (\uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uac78\uce5c NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ud3ec\ud568) \ub97c \uc0ac\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud1b5\ud574 \ud655\uc7a5 \uac00\ub2a5\ud558\uace0 \uc608\uce21 \uac00\ub2a5\ud55c \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS Pod\ub97c \ub370\uc774\ud130 \uc13c\ud130 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ud558\ub294 \ub370 \uac00\uc7a5 \uad8c\uc7a5\ub418\ub294 \ubc29\ubc95 \uc911 \ud558\ub098\uc778 \uc544\ud0a4\ud14d\ucc98 \ud328\ud134\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\uc6a9\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \u00b6 IPv6 \uad6c\ud604 \uc900\ube44 \uc644\ub8cc \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 IP \uace0\uac08 \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc9c0\ub9cc \ucd94\uac00 \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc774\uc911 \uc2a4\ud0dd (IPv4/IPv6) VPC\ub97c \ubc30\ud3ec \uc911\uc774\uac70\ub098 \uacc4\ud68d\uc5d0 IPv6 \uc9c0\uc6d0\uc774 \ud3ec\ud568\ub41c \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uc2e0 \uad6c\ud604\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc124\uc815\ud558\uace0 \uc571\uc744 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc640 \ud3ec\ub4dc \ubaa8\ub450 IPv6 \uc8fc\uc18c\ub97c \uc5bb\uace0 IPv4 \ubc0f IPv6 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub450\uc640 \uc1a1\uc218\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589 \uc5d0 \ub300\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. \uace0\uac08\ub41c CG-NAT \uacf5\uac04 \u00b6 \ub610\ud55c \ud604\uc7ac CG-NAT \uacf5\uac04\uc758 CIDR\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uac70\ub098 \ubcf4\uc870 CIDR\uc744 \ud074\ub7ec\uc2a4\ud130 VPC\uc640 \uc5f0\uacb0\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uccb4 CNI \uc0ac\uc6a9\uacfc \uac19\uc740 \ub2e4\ub978 \uc635\uc158\uc744 \ud0d0\uc0c9\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\uc6a9 \uc9c0\uc6d0\uc744 \ubc1b\uac70\ub098 \uc0ac\ub0b4 \uc9c0\uc2dd\uc744 \ubcf4\uc720\ud558\uc5ec \uc624\ud508\uc18c\uc2a4 CNI \ud50c\ub7ec\uadf8\uc778 \ud504\ub85c\uc81d\ud2b8\ub97c \ub514\ubc84\uae45\ud558\uace0 \ud328\uce58\ub97c \uc81c\ucd9c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub300\uccb4 CNI \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uc0ac\uc6a9 \u00b6 Amazon VPC\ub294 \uc774\uc81c \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon\uc758 \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uba74 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c CIDR\uc774 \uacb9\uce58\ub294 \ub2e4\ub978 VPC \ubc0f \uc628\ud504\ub808\ubbf8\uc2a4 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0 \uc124\uba85\ub41c \ubc29\ubc95\uc744 \ud65c\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec CIDR \uc911\ubcf5\uc73c\ub85c \uc778\ud55c EKS \uc6cc\ud06c\ub85c\ub4dc\uc758 \ud1b5\uc2e0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc774\ub294 \uace0\uac1d\uc774 \uc81c\uae30\ud55c \uc911\ub300\ud55c \ubd88\ub9cc \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ub9de\ucda4\ud615 \ub124\ud2b8\uc6cc\ud0b9\ub9cc\uc73c\ub85c\ub294 \uc911\ubcf5\ub418\ub294 CIDR \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc5c6\uc73c\uba70 \uad6c\uc131 \ubb38\uc81c\uac00 \uac00\uc911\ub429\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uad6c\ud604\uc5d0 \uc0ac\uc6a9\ub41c \ub124\ud2b8\uc6cc\ud06c \uc544\ud0a4\ud14d\ucc98\ub294 Amazon VPC \uc124\uba85\uc11c\uc758 \uc911\ubcf5 \ub124\ud2b8\uc6cc\ud06c \uac04 \ud1b5\uc2e0 \ud65c\uc131\ud654 \uc5d0 \uc788\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \ub530\ub985\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c RFC6598 \uc8fc\uc18c\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d\uc758 \ud504\ub77c\uc774\ube57 IP \uace0\uac08 \ubb38\uc81c\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \ubaa8\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130, \uc791\uc5c5\uc790 \ub178\ub4dc\ub294 \ub77c\uc6b0\ud305\uc774 \ubd88\uac00\ub2a5\ud55c 100.64.0.0/16 VPC \ubcf4\uc870 CIDR \ubc94\uc704\uc5d0 \ubc30\ud3ec\ub418\ub294 \ubc18\uba74, \uc0ac\uc124 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc778 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c RFC1918 CIDR \ubc94\uc704\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8\uc5d0\uc11c\ub294 \ub77c\uc6b0\ud305\uc774 \ubd88\uac00\ub2a5\ud55c CIDR \ubc94\uc704\uac00 \uacb9\uce58\ub294 VPC \uac04\uc758 \ud1b5\uc2e0\uc744 \uc6a9\uc774\ud558\uac8c \ud558\uae30 \uc704\ud574 \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec VPC\ub97c \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. VPC\uc758 \ub77c\uc6b0\ud305 \ubd88\uac00\ub2a5\ud55c \uc8fc\uc18c \ubc94\uc704\uc5d0 \uc788\ub294 EKS \ub9ac\uc18c\uc2a4\uac00 \uc8fc\uc18c \ubc94\uc704\uac00 \uacb9\uce58\uc9c0 \uc54a\ub294 \ub2e4\ub978 VPC\uc640 \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9 \uc0ac\ub840\uc758 \uacbd\uc6b0 \uace0\uac1d\uc740 VPC \ud53c\uc5b4\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c VPC\ub97c \uc0c1\ud638 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c VPC \ud53c\uc5b4\ub9c1 \uc5f0\uacb0\uc744 \ud1b5\ud55c \uac00\uc6a9 \uc601\uc5ed \ub0b4\uc758 \ubaa8\ub4e0 \ub370\uc774\ud130 \uc804\uc1a1\uc774 \ubb34\ub8cc\uc774\ubbc0\ub85c \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uba74 \ube44\uc6a9\uc744 \uc808\uac10\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubc0f \ud30c\ub4dc\ub97c \uc704\ud55c \uace0\uc720\ud55c \ub124\ud2b8\uc6cc\ud06c \u00b6 \ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \ud2b9\uc815 \ub124\ud2b8\uc6cc\ud06c\ub85c \uaca9\ub9ac\ud574\uc57c \ud558\ub294 \uacbd\uc6b0, \ub354 \ud070 \ubcf4\uc870 CIDR \ube14\ub85d (\uc608: 100.64.0.0/8) \uc758 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. VPC\uc5d0 \uc0c8 CIDR\uc744 \uc124\uce58\ud55c \ud6c4\uc5d0\ub294 \ubcf4\uc870 CIDR\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9\uc744 \ubc30\ud3ec\ud558\uace0 \uc6d0\ub798 \ub178\ub4dc\ub97c \ub4dc\ub808\uc778\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc7ac\ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0 \ud45c\uc2dc\ub41c \uc124\uc815\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\ub294 VPC\uc758 \ubcf4\uc870 VPC CIDR \ubc94\uc704 (\uc608: 100.64.0.0/10) \uc5d0 \uc18d\ud558\ub294 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uacc4\uc18d \uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc (\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uc6d0\ub798 \uc11c\ube0c\ub137\uc5d0 \uc720\uc9c0\ub428), \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \ubcf4\uc870 \uc11c\ube0c\ub137\uc73c\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4. \uc774\ub294 VPC\uc5d0\uc11c IP \uace0\uac08\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\uae30 \uc704\ud55c \ud754\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc \ub610 \ub2e4\ub978 \uae30\ubc95\uc785\ub2c8\ub2e4.\uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud3ec\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \uae30\uc874 \ub178\ub4dc\ub97c \ube44\uc6b0\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uac00\uc6a9 \uc601\uc5ed \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud55c \uad6c\uc131 \uc790\ub3d9\ud654 \u00b6 Kubernetes\ub97c \ud65c\uc131\ud654\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc \uac00\uc6a9 \uc601\uc5ed (AZ) \uc5d0 \ud574\ub2f9\ud558\ub294 eniConfig\ub97c \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 topology.kubernetes.io/zone \ud0dc\uadf8\ub97c \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud569\ub2c8\ub2e4. Amazon EKS\ub294 AZ\ub2f9 \ubcf4\uc870 \uc11c\ube0c\ub137 (\ub300\uccb4 CIDR) \uc774 \ud558\ub098\ubfd0\uc778 \uacbd\uc6b0 \uac00\uc6a9 \uc601\uc5ed\uc744 ENI \uad6c\uc131 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c failure-domain.beta.kubernetes.io/zone \ud0dc\uadf8\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc73c\uba70 topology.kubernetes.io/zone \ud0dc\uadf8\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. name \ud544\ub4dc\ub97c VPC\uc758 \uac00\uc6a9 \uc601\uc5ed\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc790\ub3d9 \uad6c\uc131\uc744 \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true \uac00\uc6a9 \uc601\uc5ed\ub2f9 \ubcf4\uc870 \uc11c\ube0c\ub137\uc774 \uc5ec\ub7ec \uac1c \uc788\ub294 \uacbd\uc6b0, \ud2b9\uc815 ENI_CONFIG_LABEL_DEF \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. ENI_CONFIG_LABEL_DEF \ub97c k8s.amazonaws.com/eniConfig \ub85c \uad6c\uc131\ud558\uace0 k8s.amazonaws.com/eniConfig=us-west-2a-subnet-1 \ubc0f k8s.amazonaws.com/eniConfig=us-west-2a-subnet-2 \uac19\uc740 \uc0ac\uc6a9\uc790 \uc815\uc758 eniConfig \uc774\ub984\uc73c\ub85c \ub178\ub4dc\ub97c \ub77c\ubca8\ub9c1\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf4\uc870 \ub124\ud2b8\uc6cc\ud0b9 \uad6c\uc131 \uc2dc \ud30c\ub4dc \uad50\uccb4 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud65c\uc131\ud654\ud574\ub3c4 \uae30\uc874 \ub178\ub4dc\ub294 \uc218\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub9de\ucda4\ud615 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ud30c\uad34\uc801\uc778 \uc870\uce58\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud65c\uc131\ud654\ud55c \ud6c4 \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0, \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uae30 \uc804\uc5d0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uac00\ub2a5\ud558\ub3c4\ub85d Lambda \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub85c EKS \uc2dc\uc791 \uc548\ub0b4\uc11c \uc758 AWS CloudFormation \ud15c\ud50c\ub9bf\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \ud658\uacbd \ubcc0\uc218\ub85c aws-node \ub370\ubaac\uc14b\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 CNI \ub124\ud2b8\uc6cc\ud0b9 \uae30\ub2a5\uc73c\ub85c \uc804\ud658\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub178\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0, \ud30c\ub4dc\ub97c \ucc28\ub2e8\ud558\uace0 \ub4dc\ub808\uc774\ub2dd \ud558\uc5ec \ud30c\ub4dc\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud55c \ub2e4\uc74c \ub178\ub4dc\ub97c \uc885\ub8cc\ud574\uc57c \ud569\ub2c8\ub2e4. ENIConfig \ub77c\ubca8 \ub610\ub294 \uc8fc\uc11d\uacfc \uc77c\uce58\ud558\ub294 \uc0c8 \ub178\ub4dc\ub9cc \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \uc774\ub7ec\ud55c \uc0c8 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\uc5d0\ub294 \ubcf4\uc870 CIDR\uc758 IP\ub97c \ud560\ub2f9\ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub2f9 \ucd5c\ub300 \ud30c\ub4dc \uc218 \uacc4\uc0b0 \u00b6 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\ub294 \ub354 \uc774\uc0c1 Pod IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 Pod \uc218\uac00 \uac10\uc18c\ud569\ub2c8\ub2e4. \uc774 \uc81c\ud55c\uc744 \uc6b0\ud68c\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uacfc \ud568\uaed8 \uc811\ub450\uc0ac \ud560\ub2f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud558\uba74 \ubcf4\uc870 ENI\uc5d0\uc11c \uac01 \ubcf4\uc870 IP\uac00 /28 \uc811\ub450\uc0ac\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uc788\ub294 m5.large \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uace0\ub824\ud574\ubd05\uc2dc\ub2e4. \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 29\uac1c\uc785\ub2c8\ub2e4. ((3 ENIs - 1) * (10 secondary IPs per ENI - 1)) + 2 = 20 \ud504\ub9ac\ud53d\uc2a4 \uc5b4\ud0dc\uce58\uba3c\ud2b8\ub97c \ud65c\uc131\ud654\ud558\uba74 \ud30c\ub4dc\uc758 \uc218\uac00 290\uac1c\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4. (((3 ENIs - 1) * ((10 secondary IPs per ENI - 1) * 16)) + 2 = 290 \ud558\uc9c0\ub9cc \uc778\uc2a4\ud134\uc2a4\uc758 \uac00\uc0c1 CPU \uc218\uac00 \ub9e4\uc6b0 \uc801\uae30 \ub54c\ubb38\uc5d0 max-pod\ub97c 290\uc774 \uc544\ub2cc 110\uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \uc778\uc2a4\ud134\uc2a4\uc758 \uacbd\uc6b0 EKS\ub294 \ucd5c\ub300 \ud3ec\ub4dc \uac12\uc744 250\uc73c\ub85c \uc124\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ub354 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 (\uc608: m5.large) \uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 IP \uc8fc\uc18c\ubcf4\ub2e4 \ud6e8\uc52c \uba3c\uc800 \uc778\uc2a4\ud134\uc2a4\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 CNI \uc811\ub450\uc0ac\uac00 ENI\uc5d0 /28 \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud560 \ub54c\ub294 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc811\ub450\uc0ac\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \uace0\ub3c4\ub85c \ubd84\ud560\ub41c \uacbd\uc6b0 \uc811\ub450\uc0ac \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc6a9 \uc804\uc6a9 VPC\ub97c \uc0c8\ub85c \ub9cc\ub4e4\uac70\ub098 \uc11c\ube0c\ub137\uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \uc804\uc6a9\uc73c\ub85c CIDR \uc138\ud2b8\ub97c \uc608\uc57d\ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. CG-NAT \uacf5\uac04\uc758 \uae30\uc874 \uc0ac\uc6a9 \ud604\ud669 \ud30c\uc545 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uba74 IP \uc18c\ubaa8 \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc9c0\ub9cc \ubaa8\ub4e0 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc774\ubbf8 CG-NAT \uacf5\uac04\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uac70\ub098 \ub2e8\uc21c\ud788 \ubcf4\uc870 CIDR\uc744 \ud074\ub7ec\uc2a4\ud130 VPC\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 \ub300\uccb4 CNI\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 IPv6 \ud074\ub7ec\uc2a4\ud130\ub85c \uc774\ub3d9\ud558\ub294 \ub4f1\uc758 \ub2e4\ub978 \uc635\uc158\uc744 \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9"},{"location":"networking/custom-networking/index.kr/#_1","text":"\uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \uae30\ubcf8 \uc11c\ube0c\ub137\uc5d0\uc11c \uc120\ud0dd\ud55c IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc740 \uae30\ubcf8 ENI\uac00 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137 CIDR\uc774\uba70, \uc77c\ubc18\uc801\uc73c\ub85c \ub178\ub4dc/\ud638\uc2a4\ud2b8\uc758 \uc11c\ube0c\ub137\uc785\ub2c8\ub2e4. \uc11c\ube0c\ub137 CIDR\uc774 \ub108\ubb34 \uc791\uc73c\uba74 CNI\uac00 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud558\uae30\uc5d0 \ucda9\ubd84\ud55c \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \ud655\ubcf4\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 EKS IPv4 \ud074\ub7ec\uc2a4\ud130\uc758 \uc77c\ubc18\uc801\uc778 \ubb38\uc81c\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \uc774 \ubb38\uc81c\uc5d0 \ub300\ud55c \ud55c \uac00\uc9c0 \ud574\uacb0\ucc45\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ubcf4\uc870 VPC \uc8fc\uc18c \uacf5\uac04 (CIDR) \uc5d0\uc11c \ub178\ub4dc \ubc0f \ud3ec\ub4dc IP\ub97c \ud560\ub2f9\ud558\uc5ec IP \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc9c0\uc6d0\uc740 Eniconfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ENIConfig\uc5d0\ub294 \ud30c\ub4dc\uac00 \uc18d\ud558\uac8c \ub420 \ubcf4\uc548 \uadf8\ub8f9\uacfc \ud568\uaed8 \ub300\uccb4 \uc11c\ube0c\ub137 CIDR \ubc94\uc704 (\ubcf4\uc870 VPC CIDR\uc5d0\uc11c \ud30c\ubc0d) \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 VPC CNI\ub294 eniconfig\uc5d0 \uc815\uc758\ub41c \uc11c\ube0c\ub137\uc5d0 \ubcf4\uc870 ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. CNI\ub294 ENIConfig CRD\uc5d0 \uc815\uc758\ub41c CIDR \ubc94\uc704\uc758 IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc5d0\uc11c\ub294 \uae30\ubcf8 ENI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 \ub354 \uc801\ub2e4. \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ud30c\ub4dc\ub294 \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c IP \uc8fc\uc18c\ub97c \uacc4\uc18d \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uae30\ubcf8 ENI\ub294 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubcc0\ud658\uc744 \ucc98\ub9ac\ud558\uace0 \ud30c\ub4dc \ud2b8\ub798\ud53d\uc744 \ub178\ub4dc \uc678\ubd80\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9"},{"location":"networking/custom-networking/index.kr/#_2","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ubcf4\uc870 CIDR \ubc94\uc704\uc5d0 \uc720\ud6a8\ud55c VPC \ubc94\uc704\ub97c \ud5c8\uc6a9\ud558\uc9c0\ub9cc CG-NAT \uacf5\uac04 (\uc608: 100.64.0.0/10 \ub610\ub294 198.19.0.0/16) \uc758 CIDR (/16) \uc740 \ub2e4\ub978 RFC1918 \ubc94\uc704\ubcf4\ub2e4 \uae30\uc5c5 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ub420 \uac00\ub2a5\uc131\uc774 \uc801\uae30 \ub54c\ubb38\uc5d0 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. VPC\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud5c8\uc6a9 \ubc0f \uc81c\ud55c\ub41c CIDR \ube14\ub85d \uc5f0\uacb0\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC \uc124\uba85\uc11c\uc758 VPC \ubc0f \uc11c\ube0c\ub137 \ud06c\uae30 \uc870\uc815 \uc139\uc158\uc5d0\uc11c IPv4 CIDR \ube14\ub85d \uc5f0\uacb0 \uc81c\ud55c \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \uae30\ubcf8 \uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 ( ENI ) \ub294 \uc5ec\uc804\ud788 \uae30\ubcf8 VPC CIDR \ubc94\uc704 (\uc774 \uacbd\uc6b0 10.0.0.0/16) \ub97c \uc0ac\uc6a9\ud558\uc9c0\ub9cc \ubcf4\uc870 ENI\ub294 \ubcf4\uc870 VPC CIDR \ubc94\uc704 (\uc774 \uacbd\uc6b0 100.64.0.0/16) \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774\uc81c \ud30c\ub4dc\uac00 100.64.0.0/16 CIDR \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0 \uc124\uba85\ub41c \ub300\ub85c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uba74 \ub429\ub2c8\ub2e4. CNI\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\ub824\uba74 AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG \ud658\uacbd \ubcc0\uc218\ub97c true \ub85c \uc124\uc815\ud558\uc2ed\uc2dc\uc624. kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true AWS_VPC_K8S_CNI_CUSTOM_Network_CFG=true \uc778 \uacbd\uc6b0, CNI\ub294 ENIConfig \uc5d0 \uc815\uc758\ub41c \uc11c\ube0c\ub137\uc758 \ud30c\ub4dc IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud55c\ub2e4. ENIConfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub294 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub420 \uc11c\ube0c\ub137\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. apiVersion : crd.k8s.amazonaws.com/v1alpha1 kind : ENIConfig metadata: name: us-west-2a spec: securityGroups: - sg-0dff111a1d11c1c11 subnet: subnet-011b111c1f11fdf11 eniconfig \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c \uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\uace0 \uae30\uc874 \ub178\ub4dc\ub97c \ube44\uc6cc\uc57c \ud569\ub2c8\ub2e4.\uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc608\uc81c \uad6c\uc131"},{"location":"networking/custom-networking/index.kr/#_3","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/custom-networking/index.kr/#_4","text":"IPv4\uac00 \uace0\uac08\ub418\uace0 \uc788\uace0 \uc544\uc9c1 IPv6\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uace0\ub824\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 RFC6598 \uacf5\uac04\uc744 \uc9c0\uc6d0\ud558\ubbc0\ub85c RFC1918 \ubb38\uc81c \uc18c\ubaa8 \ubb38\uc81c \uc774\uc0c1\uc73c\ub85c \ud30c\ub4dc\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uacfc \ud568\uaed8 \uc811\ub450\uc0ac \uc704\uc784\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc758 \ud3ec\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ubcf4\uc548 \uadf8\ub8f9 \uc694\uad6c \uc0ac\ud56d\uc774 \ub2e4\ub978 \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c Pod\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 \ud3ec\ub4dc\ub294 Eniconfig\uc5d0 \uc815\uc758\ub41c \ub300\ub85c \ub178\ub4dc\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc640 \ub2e4\ub978 \uc11c\ube0c\ub137 \ub610\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 \uc5ec\ub7ec EKS \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc30\ud3ec\ud558\uc5ec \uc628\ud504\ub808\ubbf8\uc2a4 \ub370\uc774\ud130 \uc13c\ud130 \uc11c\ube44\uc2a4\ub97c \uc5f0\uacb0\ud558\ub294 \ub370 \uac00\uc7a5 \uc801\ud569\ud55c \uc635\uc158\uc785\ub2c8\ub2e4. Amazon Elastic Load Balancing \ubc0f NAT-GW\uc640 \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \uc704\ud574 VPC\uc5d0\uc11c EKS\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud504\ub77c\uc774\ube57 \uc8fc\uc18c (RFC1918) \uc758 \uc218\ub97c \ub298\ub9ac\ub294 \ub3d9\uc2dc\uc5d0 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud30c\ub4dc\uc5d0 \ub77c\uc6b0\ud305\ud560 \uc218 \uc5c6\ub294 CG-NAT \uacf5\uac04\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc0f \uacf5\uc720 \uc11c\ube44\uc2a4 VPC (\uace0\uac00\uc6a9\uc131\uc744 \uc704\ud55c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uac78\uce5c NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ud3ec\ud568) \ub97c \uc0ac\uc6a9\ud55c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud1b5\ud574 \ud655\uc7a5 \uac00\ub2a5\ud558\uace0 \uc608\uce21 \uac00\ub2a5\ud55c \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS Pod\ub97c \ub370\uc774\ud130 \uc13c\ud130 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ud558\ub294 \ub370 \uac00\uc7a5 \uad8c\uc7a5\ub418\ub294 \ubc29\ubc95 \uc911 \ud558\ub098\uc778 \uc544\ud0a4\ud14d\ucc98 \ud328\ud134\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\uc6a9\uc744 \uad8c\uc7a5\ud558\ub294 \uacbd\uc6b0"},{"location":"networking/custom-networking/index.kr/#_5","text":"","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\uc6a9\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0"},{"location":"networking/custom-networking/index.kr/#ipv6","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 IP \uace0\uac08 \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc9c0\ub9cc \ucd94\uac00 \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc774\uc911 \uc2a4\ud0dd (IPv4/IPv6) VPC\ub97c \ubc30\ud3ec \uc911\uc774\uac70\ub098 \uacc4\ud68d\uc5d0 IPv6 \uc9c0\uc6d0\uc774 \ud3ec\ud568\ub41c \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uc2e0 \uad6c\ud604\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc124\uc815\ud558\uace0 \uc571\uc744 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc640 \ud3ec\ub4dc \ubaa8\ub450 IPv6 \uc8fc\uc18c\ub97c \uc5bb\uace0 IPv4 \ubc0f IPv6 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub450\uc640 \uc1a1\uc218\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589 \uc5d0 \ub300\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624.","title":"IPv6 \uad6c\ud604 \uc900\ube44 \uc644\ub8cc"},{"location":"networking/custom-networking/index.kr/#cg-nat","text":"\ub610\ud55c \ud604\uc7ac CG-NAT \uacf5\uac04\uc758 CIDR\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uac70\ub098 \ubcf4\uc870 CIDR\uc744 \ud074\ub7ec\uc2a4\ud130 VPC\uc640 \uc5f0\uacb0\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ub300\uccb4 CNI \uc0ac\uc6a9\uacfc \uac19\uc740 \ub2e4\ub978 \uc635\uc158\uc744 \ud0d0\uc0c9\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\uc6a9 \uc9c0\uc6d0\uc744 \ubc1b\uac70\ub098 \uc0ac\ub0b4 \uc9c0\uc2dd\uc744 \ubcf4\uc720\ud558\uc5ec \uc624\ud508\uc18c\uc2a4 CNI \ud50c\ub7ec\uadf8\uc778 \ud504\ub85c\uc81d\ud2b8\ub97c \ub514\ubc84\uae45\ud558\uace0 \ud328\uce58\ub97c \uc81c\ucd9c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub300\uccb4 CNI \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uace0\uac08\ub41c CG-NAT \uacf5\uac04"},{"location":"networking/custom-networking/index.kr/#nat","text":"Amazon VPC\ub294 \uc774\uc81c \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon\uc758 \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uba74 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c CIDR\uc774 \uacb9\uce58\ub294 \ub2e4\ub978 VPC \ubc0f \uc628\ud504\ub808\ubbf8\uc2a4 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0 \uc124\uba85\ub41c \ubc29\ubc95\uc744 \ud65c\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec CIDR \uc911\ubcf5\uc73c\ub85c \uc778\ud55c EKS \uc6cc\ud06c\ub85c\ub4dc\uc758 \ud1b5\uc2e0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc774\ub294 \uace0\uac1d\uc774 \uc81c\uae30\ud55c \uc911\ub300\ud55c \ubd88\ub9cc \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ub9de\ucda4\ud615 \ub124\ud2b8\uc6cc\ud0b9\ub9cc\uc73c\ub85c\ub294 \uc911\ubcf5\ub418\ub294 CIDR \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc5c6\uc73c\uba70 \uad6c\uc131 \ubb38\uc81c\uac00 \uac00\uc911\ub429\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uad6c\ud604\uc5d0 \uc0ac\uc6a9\ub41c \ub124\ud2b8\uc6cc\ud06c \uc544\ud0a4\ud14d\ucc98\ub294 Amazon VPC \uc124\uba85\uc11c\uc758 \uc911\ubcf5 \ub124\ud2b8\uc6cc\ud06c \uac04 \ud1b5\uc2e0 \ud65c\uc131\ud654 \uc5d0 \uc788\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \ub530\ub985\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c RFC6598 \uc8fc\uc18c\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d\uc758 \ud504\ub77c\uc774\ube57 IP \uace0\uac08 \ubb38\uc81c\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \ubaa8\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130, \uc791\uc5c5\uc790 \ub178\ub4dc\ub294 \ub77c\uc6b0\ud305\uc774 \ubd88\uac00\ub2a5\ud55c 100.64.0.0/16 VPC \ubcf4\uc870 CIDR \ubc94\uc704\uc5d0 \ubc30\ud3ec\ub418\ub294 \ubc18\uba74, \uc0ac\uc124 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc778 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c RFC1918 CIDR \ubc94\uc704\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc774 \ube14\ub85c\uadf8\uc5d0\uc11c\ub294 \ub77c\uc6b0\ud305\uc774 \ubd88\uac00\ub2a5\ud55c CIDR \ubc94\uc704\uac00 \uacb9\uce58\ub294 VPC \uac04\uc758 \ud1b5\uc2e0\uc744 \uc6a9\uc774\ud558\uac8c \ud558\uae30 \uc704\ud574 \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec VPC\ub97c \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. VPC\uc758 \ub77c\uc6b0\ud305 \ubd88\uac00\ub2a5\ud55c \uc8fc\uc18c \ubc94\uc704\uc5d0 \uc788\ub294 EKS \ub9ac\uc18c\uc2a4\uac00 \uc8fc\uc18c \ubc94\uc704\uac00 \uacb9\uce58\uc9c0 \uc54a\ub294 \ub2e4\ub978 VPC\uc640 \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \uc0ac\uc6a9 \uc0ac\ub840\uc758 \uacbd\uc6b0 \uace0\uac1d\uc740 VPC \ud53c\uc5b4\ub9c1\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c VPC\ub97c \uc0c1\ud638 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c VPC \ud53c\uc5b4\ub9c1 \uc5f0\uacb0\uc744 \ud1b5\ud55c \uac00\uc6a9 \uc601\uc5ed \ub0b4\uc758 \ubaa8\ub4e0 \ub370\uc774\ud130 \uc804\uc1a1\uc774 \ubb34\ub8cc\uc774\ubbc0\ub85c \uc774 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uba74 \ube44\uc6a9\uc744 \uc808\uac10\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uc0ac\uc6a9"},{"location":"networking/custom-networking/index.kr/#_6","text":"\ubcf4\uc548\uc0c1\uc758 \uc774\uc720\ub85c \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \ud2b9\uc815 \ub124\ud2b8\uc6cc\ud06c\ub85c \uaca9\ub9ac\ud574\uc57c \ud558\ub294 \uacbd\uc6b0, \ub354 \ud070 \ubcf4\uc870 CIDR \ube14\ub85d (\uc608: 100.64.0.0/8) \uc758 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. VPC\uc5d0 \uc0c8 CIDR\uc744 \uc124\uce58\ud55c \ud6c4\uc5d0\ub294 \ubcf4\uc870 CIDR\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9\uc744 \ubc30\ud3ec\ud558\uace0 \uc6d0\ub798 \ub178\ub4dc\ub97c \ub4dc\ub808\uc778\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc7ac\ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0 \ud45c\uc2dc\ub41c \uc124\uc815\uc5d0\uc11c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\ub294 VPC\uc758 \ubcf4\uc870 VPC CIDR \ubc94\uc704 (\uc608: 100.64.0.0/10) \uc5d0 \uc18d\ud558\ub294 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uacc4\uc18d \uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc (\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uc6d0\ub798 \uc11c\ube0c\ub137\uc5d0 \uc720\uc9c0\ub428), \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \ubcf4\uc870 \uc11c\ube0c\ub137\uc73c\ub85c \uc774\ub3d9\ud569\ub2c8\ub2e4. \uc774\ub294 VPC\uc5d0\uc11c IP \uace0\uac08\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\uae30 \uc704\ud55c \ud754\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc \ub610 \ub2e4\ub978 \uae30\ubc95\uc785\ub2c8\ub2e4.\uc0c8 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud3ec\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \uae30\uc874 \ub178\ub4dc\ub97c \ube44\uc6b0\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \ubc0f \ud30c\ub4dc\ub97c \uc704\ud55c \uace0\uc720\ud55c \ub124\ud2b8\uc6cc\ud06c"},{"location":"networking/custom-networking/index.kr/#_7","text":"Kubernetes\ub97c \ud65c\uc131\ud654\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc \uac00\uc6a9 \uc601\uc5ed (AZ) \uc5d0 \ud574\ub2f9\ud558\ub294 eniConfig\ub97c \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 topology.kubernetes.io/zone \ud0dc\uadf8\ub97c \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud569\ub2c8\ub2e4. Amazon EKS\ub294 AZ\ub2f9 \ubcf4\uc870 \uc11c\ube0c\ub137 (\ub300\uccb4 CIDR) \uc774 \ud558\ub098\ubfd0\uc778 \uacbd\uc6b0 \uac00\uc6a9 \uc601\uc5ed\uc744 ENI \uad6c\uc131 \uc774\ub984\uc73c\ub85c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c failure-domain.beta.kubernetes.io/zone \ud0dc\uadf8\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc73c\uba70 topology.kubernetes.io/zone \ud0dc\uadf8\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. name \ud544\ub4dc\ub97c VPC\uc758 \uac00\uc6a9 \uc601\uc5ed\uc73c\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc790\ub3d9 \uad6c\uc131\uc744 \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. kubectl set env daemonset aws-node -n kube-system AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG=true \uac00\uc6a9 \uc601\uc5ed\ub2f9 \ubcf4\uc870 \uc11c\ube0c\ub137\uc774 \uc5ec\ub7ec \uac1c \uc788\ub294 \uacbd\uc6b0, \ud2b9\uc815 ENI_CONFIG_LABEL_DEF \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. ENI_CONFIG_LABEL_DEF \ub97c k8s.amazonaws.com/eniConfig \ub85c \uad6c\uc131\ud558\uace0 k8s.amazonaws.com/eniConfig=us-west-2a-subnet-1 \ubc0f k8s.amazonaws.com/eniConfig=us-west-2a-subnet-2 \uac19\uc740 \uc0ac\uc6a9\uc790 \uc815\uc758 eniConfig \uc774\ub984\uc73c\ub85c \ub178\ub4dc\ub97c \ub77c\ubca8\ub9c1\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uac00\uc6a9 \uc601\uc5ed \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud55c \uad6c\uc131 \uc790\ub3d9\ud654"},{"location":"networking/custom-networking/index.kr/#_8","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud65c\uc131\ud654\ud574\ub3c4 \uae30\uc874 \ub178\ub4dc\ub294 \uc218\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub9de\ucda4\ud615 \ub124\ud2b8\uc6cc\ud0b9\uc740 \ud30c\uad34\uc801\uc778 \uc870\uce58\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \ud65c\uc131\ud654\ud55c \ud6c4 \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0, \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uae30 \uc804\uc5d0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uac00\ub2a5\ud558\ub3c4\ub85d Lambda \ud568\uc218\ub97c \ud638\ucd9c\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4\ub85c EKS \uc2dc\uc791 \uc548\ub0b4\uc11c \uc758 AWS CloudFormation \ud15c\ud50c\ub9bf\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \ud658\uacbd \ubcc0\uc218\ub85c aws-node \ub370\ubaac\uc14b\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 CNI \ub124\ud2b8\uc6cc\ud0b9 \uae30\ub2a5\uc73c\ub85c \uc804\ud658\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub178\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0, \ud30c\ub4dc\ub97c \ucc28\ub2e8\ud558\uace0 \ub4dc\ub808\uc774\ub2dd \ud558\uc5ec \ud30c\ub4dc\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud55c \ub2e4\uc74c \ub178\ub4dc\ub97c \uc885\ub8cc\ud574\uc57c \ud569\ub2c8\ub2e4. ENIConfig \ub77c\ubca8 \ub610\ub294 \uc8fc\uc11d\uacfc \uc77c\uce58\ud558\ub294 \uc0c8 \ub178\ub4dc\ub9cc \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \uc774\ub7ec\ud55c \uc0c8 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\uc5d0\ub294 \ubcf4\uc870 CIDR\uc758 IP\ub97c \ud560\ub2f9\ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubcf4\uc870 \ub124\ud2b8\uc6cc\ud0b9 \uad6c\uc131 \uc2dc \ud30c\ub4dc \uad50\uccb4"},{"location":"networking/custom-networking/index.kr/#_9","text":"\ub178\ub4dc\uc758 \uae30\ubcf8 ENI\ub294 \ub354 \uc774\uc0c1 Pod IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 Pod \uc218\uac00 \uac10\uc18c\ud569\ub2c8\ub2e4. \uc774 \uc81c\ud55c\uc744 \uc6b0\ud68c\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uacfc \ud568\uaed8 \uc811\ub450\uc0ac \ud560\ub2f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud558\uba74 \ubcf4\uc870 ENI\uc5d0\uc11c \uac01 \ubcf4\uc870 IP\uac00 /28 \uc811\ub450\uc0ac\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \uc788\ub294 m5.large \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uace0\ub824\ud574\ubd05\uc2dc\ub2e4. \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 29\uac1c\uc785\ub2c8\ub2e4. ((3 ENIs - 1) * (10 secondary IPs per ENI - 1)) + 2 = 20 \ud504\ub9ac\ud53d\uc2a4 \uc5b4\ud0dc\uce58\uba3c\ud2b8\ub97c \ud65c\uc131\ud654\ud558\uba74 \ud30c\ub4dc\uc758 \uc218\uac00 290\uac1c\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4. (((3 ENIs - 1) * ((10 secondary IPs per ENI - 1) * 16)) + 2 = 290 \ud558\uc9c0\ub9cc \uc778\uc2a4\ud134\uc2a4\uc758 \uac00\uc0c1 CPU \uc218\uac00 \ub9e4\uc6b0 \uc801\uae30 \ub54c\ubb38\uc5d0 max-pod\ub97c 290\uc774 \uc544\ub2cc 110\uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \uc778\uc2a4\ud134\uc2a4\uc758 \uacbd\uc6b0 EKS\ub294 \ucd5c\ub300 \ud3ec\ub4dc \uac12\uc744 250\uc73c\ub85c \uc124\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ub354 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 (\uc608: m5.large) \uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 IP \uc8fc\uc18c\ubcf4\ub2e4 \ud6e8\uc52c \uba3c\uc800 \uc778\uc2a4\ud134\uc2a4\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 CNI \uc811\ub450\uc0ac\uac00 ENI\uc5d0 /28 \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud560 \ub54c\ub294 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc811\ub450\uc0ac\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \uace0\ub3c4\ub85c \ubd84\ud560\ub41c \uacbd\uc6b0 \uc811\ub450\uc0ac \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc6a9 \uc804\uc6a9 VPC\ub97c \uc0c8\ub85c \ub9cc\ub4e4\uac70\ub098 \uc11c\ube0c\ub137\uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \uc804\uc6a9\uc73c\ub85c CIDR \uc138\ud2b8\ub97c \uc608\uc57d\ud558\uc5ec \uc774\ub7ec\ud55c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\ub178\ub4dc\ub2f9 \ucd5c\ub300 \ud30c\ub4dc \uc218 \uacc4\uc0b0"},{"location":"networking/custom-networking/index.kr/#cg-nat_1","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uba74 IP \uc18c\ubaa8 \ubb38\uc81c\ub97c \uc644\ud654\ud560 \uc218 \uc788\uc9c0\ub9cc \ubaa8\ub4e0 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc774\ubbf8 CG-NAT \uacf5\uac04\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uac70\ub098 \ub2e8\uc21c\ud788 \ubcf4\uc870 CIDR\uc744 \ud074\ub7ec\uc2a4\ud130 VPC\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 \ub300\uccb4 CNI\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 IPv6 \ud074\ub7ec\uc2a4\ud130\ub85c \uc774\ub3d9\ud558\ub294 \ub4f1\uc758 \ub2e4\ub978 \uc635\uc158\uc744 \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"CG-NAT \uacf5\uac04\uc758 \uae30\uc874 \uc0ac\uc6a9 \ud604\ud669 \ud30c\uc545"},{"location":"networking/index/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Amazon EKS Best Practices Guide for Networking \u00b6 It is critical to understand Kubernetes networking to operate your cluster and applications efficiently. Pod networking, also called the cluster networking, is the center of Kubernetes networking. Kubernetes supports Container Network Interface (CNI) plugins for cluster networking. Amazon EKS officially supports Amazon Virtual Private Cloud (VPC) CNI plugin to implement Kubernetes Pod networking. The VPC CNI provides native integration with AWS VPC and works in underlay mode. In underlay mode, Pods and hosts are located at the same network layer and share the network namespace. The IP address of the Pod is consistent from the cluster and VPC perspective. This guide introduces the Amazon VPC Container Network Interface (VPC CNI) in the context of Kubernetes cluster networking. The VPC CNI is the default networking plugin supported by EKS and hence is the focus of the guide. The VPC CNI is highly configurable to support different use cases. This guide further includes dedicated sections on different VPC CNI use cases, operating modes, sub-components, followed by the recommendations. Amazon EKS runs upstream Kubernetes and is certified Kubernetes conformant. Although you can use alternate CNI plugins, this guide does not provide recommendations for managing alternate CNIs. Check the EKS Alternate CNI documentation for a list of partners and resources for managing alternate CNIs effectively. Kubernetes Networking Model \u00b6 Kubernetes sets the following requirements on cluster networking: Pods scheduled on the same node must be able to communicate with other Pods without using NAT (Network Address Translation). All system daemons (background processes, for example, kubelet ) running on a particular node can communicate with the Pods running on the same node. Pods that use the host network must be able to contact all other Pods on all other nodes without using NAT. See the Kubernetes network model for details on what Kubernetes expects from compatible networking implementations. The following figure illustrates the relationship between Pod network namespaces and the host network namespace. Container Networking Interface (CNI) \u00b6 Kubernetes supports CNI specifications and plugins to implement Kubernetes network model. A CNI consists of a specification (current version 1.0.0) and libraries for writing plugins to configure network interfaces in containers, along with a number of supported plugins. CNI concerns itself only with network connectivity of containers and removing allocated resources when the container is deleted. The CNI plugin is enabled by passing kubelet the --network-plugin=cni command-line option. Kubelet reads a file from --cni-conf-dir (default /etc/cni/net.d) and uses the CNI configuration from that file to set up each Pod\u2019s network. The CNI configuration file must match the CNI specification (minimum v0.4.0) and any required CNI plugins referenced by the configuration must be present in the --cni-bin-dir directory (default /opt/cni/bin). If there are multiple CNI configuration files in the directory, the kubelet uses the configuration file that comes first by name in lexicographic order . Amazon Virtual Private Cloud (VPC) CNI \u00b6 The AWS-provided VPC CNI is the default networking add-on for EKS clusters. VPC CNI add-on is installed by default when you provision EKS clusters. VPC CNI runs on Kubernetes worker nodes. The VPC CNI add-on consists of the CNI binary and the IP Address Management (ipamd) plugin. The CNI assigns an IP address from the VPC network to a Pod. The ipamd manages AWS Elastic Networking Interfaces (ENIs) to each Kubernetes node and maintains the warm pool of IPs. The VPC CNI provides configuration options for pre-allocation of ENIs and IP addresses for fast Pod startup times. Refer to Amazon VPC CNI for recommended plugin management best practices. Amazon EKS recommends you specify subnets in at least two availability zones when you create a cluster. Amazon VPC CNI allocates IP addresses to Pods from the node subnets. We strongly recommend checking the subnets for available IP addresses. Please consider VPC and Subnet recommendations before deploying EKS clusters. Amazon VPC CNI allocates a warm pool of ENIs and secondary IP addresses from the subnet attached to the node\u2019s primary ENI. This mode of VPC CNI is called the \" secondary IP mode .\" The number of IP addresses and hence the number of Pods (Pod density) is defined by the number of ENIs and the IP address per ENI (limits) as defined by the instance type. The secondary mode is the default and works well for small clusters with smaller instance types. Please consider using prefix mode if you are experiencing pod density challenges. You can also increase the available IP addresses on node for Pods by assigning prefixes to ENIs. Amazon VPC CNI natively integrates with AWS VPC and allows users to apply existing AWS VPC networking and security best practices for building Kubernetes clusters. This includes the ability to use VPC flow logs, VPC routing policies, and security groups for network traffic isolation. By default, the Amazon VPC CNI applies security group associated with the primary ENI on the node to the Pods. Consider enabling security groups for Pods when you would like to assign different network rules for a Pod. By default, VPC CNI assigns IP addresses to Pods from the subnet assigned to the primary ENI of a node. It is common to experience a shortage of IPv4 addresses when running large clusters with thousands of workloads. AWS VPC allows you to extend available IPs by assigning a secondary CIDRs to work around exhaustion of IPv4 CIDR blocks. AWS VPC CNI allows you to use a different subnet CIDR range for Pods. This feature of VPC CNI is called custom networking . You might consider using custom networking to use 100.64.0.0/10 and 198.19.0.0/16 CIDRs (CG-NAT) with EKS. This effectively allows you to create an environment where Pods no longer consume any RFC1918 IP addresses from your VPC. Custom networking is one option to address the IPv4 address exhaustion problem, but it requires operational overhead. We recommend IPv6 clusters over custom networking to resolve this problem. Specifically, we recommend migrating to IPv6 clusters if you have completely exhausted all available IPv4 address space for your VPC. Evaluate your organization\u2019s plans to support IPv6, and consider if investing in IPv6 may have more long-term value. EKS\u2019s support for IPv6 is focused on solving the IP exhaustion problem caused by a limited IPv4 address space. In response to customer issues with IPv4 exhaustion, EKS has prioritized IPv6-only Pods over dual-stack Pods. That is, Pods may be able to access IPv4 resources, but they are not assigned an IPv4 address from VPC CIDR range. The VPC CNI assigns IPv6 addresses to Pods from the AWS managed VPC IPv6 CIDR block. Subnet Calculator \u00b6 This project includes a Subnet Calculator Excel Document . This calculator document simulates the IP address consumption of a specified workload under different ENI configuration options, such as WARM_IP_TARGET and WARM_ENI_TARGET . The document includes two sheets, a first for Warm ENI mode, and a second for Warm IP mode. Review the VPC CNI guidance for more information on these modes. Inputs: - Subnet CIDR Size - Warm ENI Target or Warm IP Target - List of instances - type, number, and number of workload pods scheduled per instance Outputs: - Total number of pods hosted - Number of Subnet IPs consumed - Number of Subnet IPs remaining - Instance Level Details - Number of Warm IPs/ENIs per instance - Number of Active IPs/ENIs per instance","title":"Home ({'name': 'English', 'build': True})"},{"location":"networking/index/#amazon-eks-best-practices-guide-for-networking","text":"It is critical to understand Kubernetes networking to operate your cluster and applications efficiently. Pod networking, also called the cluster networking, is the center of Kubernetes networking. Kubernetes supports Container Network Interface (CNI) plugins for cluster networking. Amazon EKS officially supports Amazon Virtual Private Cloud (VPC) CNI plugin to implement Kubernetes Pod networking. The VPC CNI provides native integration with AWS VPC and works in underlay mode. In underlay mode, Pods and hosts are located at the same network layer and share the network namespace. The IP address of the Pod is consistent from the cluster and VPC perspective. This guide introduces the Amazon VPC Container Network Interface (VPC CNI) in the context of Kubernetes cluster networking. The VPC CNI is the default networking plugin supported by EKS and hence is the focus of the guide. The VPC CNI is highly configurable to support different use cases. This guide further includes dedicated sections on different VPC CNI use cases, operating modes, sub-components, followed by the recommendations. Amazon EKS runs upstream Kubernetes and is certified Kubernetes conformant. Although you can use alternate CNI plugins, this guide does not provide recommendations for managing alternate CNIs. Check the EKS Alternate CNI documentation for a list of partners and resources for managing alternate CNIs effectively.","title":"Amazon EKS Best Practices Guide for Networking"},{"location":"networking/index/#kubernetes-networking-model","text":"Kubernetes sets the following requirements on cluster networking: Pods scheduled on the same node must be able to communicate with other Pods without using NAT (Network Address Translation). All system daemons (background processes, for example, kubelet ) running on a particular node can communicate with the Pods running on the same node. Pods that use the host network must be able to contact all other Pods on all other nodes without using NAT. See the Kubernetes network model for details on what Kubernetes expects from compatible networking implementations. The following figure illustrates the relationship between Pod network namespaces and the host network namespace.","title":"Kubernetes Networking Model"},{"location":"networking/index/#container-networking-interface-cni","text":"Kubernetes supports CNI specifications and plugins to implement Kubernetes network model. A CNI consists of a specification (current version 1.0.0) and libraries for writing plugins to configure network interfaces in containers, along with a number of supported plugins. CNI concerns itself only with network connectivity of containers and removing allocated resources when the container is deleted. The CNI plugin is enabled by passing kubelet the --network-plugin=cni command-line option. Kubelet reads a file from --cni-conf-dir (default /etc/cni/net.d) and uses the CNI configuration from that file to set up each Pod\u2019s network. The CNI configuration file must match the CNI specification (minimum v0.4.0) and any required CNI plugins referenced by the configuration must be present in the --cni-bin-dir directory (default /opt/cni/bin). If there are multiple CNI configuration files in the directory, the kubelet uses the configuration file that comes first by name in lexicographic order .","title":"Container Networking Interface (CNI)"},{"location":"networking/index/#amazon-virtual-private-cloud-vpc-cni","text":"The AWS-provided VPC CNI is the default networking add-on for EKS clusters. VPC CNI add-on is installed by default when you provision EKS clusters. VPC CNI runs on Kubernetes worker nodes. The VPC CNI add-on consists of the CNI binary and the IP Address Management (ipamd) plugin. The CNI assigns an IP address from the VPC network to a Pod. The ipamd manages AWS Elastic Networking Interfaces (ENIs) to each Kubernetes node and maintains the warm pool of IPs. The VPC CNI provides configuration options for pre-allocation of ENIs and IP addresses for fast Pod startup times. Refer to Amazon VPC CNI for recommended plugin management best practices. Amazon EKS recommends you specify subnets in at least two availability zones when you create a cluster. Amazon VPC CNI allocates IP addresses to Pods from the node subnets. We strongly recommend checking the subnets for available IP addresses. Please consider VPC and Subnet recommendations before deploying EKS clusters. Amazon VPC CNI allocates a warm pool of ENIs and secondary IP addresses from the subnet attached to the node\u2019s primary ENI. This mode of VPC CNI is called the \" secondary IP mode .\" The number of IP addresses and hence the number of Pods (Pod density) is defined by the number of ENIs and the IP address per ENI (limits) as defined by the instance type. The secondary mode is the default and works well for small clusters with smaller instance types. Please consider using prefix mode if you are experiencing pod density challenges. You can also increase the available IP addresses on node for Pods by assigning prefixes to ENIs. Amazon VPC CNI natively integrates with AWS VPC and allows users to apply existing AWS VPC networking and security best practices for building Kubernetes clusters. This includes the ability to use VPC flow logs, VPC routing policies, and security groups for network traffic isolation. By default, the Amazon VPC CNI applies security group associated with the primary ENI on the node to the Pods. Consider enabling security groups for Pods when you would like to assign different network rules for a Pod. By default, VPC CNI assigns IP addresses to Pods from the subnet assigned to the primary ENI of a node. It is common to experience a shortage of IPv4 addresses when running large clusters with thousands of workloads. AWS VPC allows you to extend available IPs by assigning a secondary CIDRs to work around exhaustion of IPv4 CIDR blocks. AWS VPC CNI allows you to use a different subnet CIDR range for Pods. This feature of VPC CNI is called custom networking . You might consider using custom networking to use 100.64.0.0/10 and 198.19.0.0/16 CIDRs (CG-NAT) with EKS. This effectively allows you to create an environment where Pods no longer consume any RFC1918 IP addresses from your VPC. Custom networking is one option to address the IPv4 address exhaustion problem, but it requires operational overhead. We recommend IPv6 clusters over custom networking to resolve this problem. Specifically, we recommend migrating to IPv6 clusters if you have completely exhausted all available IPv4 address space for your VPC. Evaluate your organization\u2019s plans to support IPv6, and consider if investing in IPv6 may have more long-term value. EKS\u2019s support for IPv6 is focused on solving the IP exhaustion problem caused by a limited IPv4 address space. In response to customer issues with IPv4 exhaustion, EKS has prioritized IPv6-only Pods over dual-stack Pods. That is, Pods may be able to access IPv4 resources, but they are not assigned an IPv4 address from VPC CIDR range. The VPC CNI assigns IPv6 addresses to Pods from the AWS managed VPC IPv6 CIDR block.","title":"Amazon Virtual Private Cloud (VPC) CNI"},{"location":"networking/index/#subnet-calculator","text":"This project includes a Subnet Calculator Excel Document . This calculator document simulates the IP address consumption of a specified workload under different ENI configuration options, such as WARM_IP_TARGET and WARM_ENI_TARGET . The document includes two sheets, a first for Warm ENI mode, and a second for Warm IP mode. Review the VPC CNI guidance for more information on these modes. Inputs: - Subnet CIDR Size - Warm ENI Target or Warm IP Target - List of instances - type, number, and number of workload pods scheduled per instance Outputs: - Total number of pods hosted - Number of Subnet IPs consumed - Number of Subnet IPs remaining - Instance Level Details - Number of Warm IPs/ENIs per instance - Number of Active IPs/ENIs per instance","title":"Subnet Calculator"},{"location":"networking/index/index.kr/","text":"{'name': 'English', 'build': True} \ub124\ud2b8\uc6cc\ud06c\ub97c \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \u00b6 \ud074\ub7ec\uc2a4\ud130\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc6b4\uc601\ud558\ub824\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc774\ub77c\uace0\ub3c4 \ud558\ub294 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9\uc758 \uc911\uc2ec\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc704\ud55c \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 (CNI) \ud50c\ub7ec\uadf8\uc778\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc744 \uad6c\ud604\ud558\ub294 Amazon Virtual Private Cloud(VPC) CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uacf5\uc2dd\uc801\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC CNI\ub294 AWS VPC\uc640\uc758 \ub124\uc774\ud2f0\ube0c \ud1b5\ud569\uc744 \uc81c\uacf5\ud558\uba70 \uc5b8\ub354\ub808\uc774(underlay) \ubaa8\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc5b8\ub354\ub808\uc774 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ud30c\ub4dc\uc640 \ud638\uc2a4\ud2b8\uac00 \ub3d9\uc77c\ud55c \ub124\ud2b8\uc6cc\ud06c \uacc4\uce35\uc5d0 \uc704\uce58\ud558\uba70 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub294 \ud074\ub7ec\uc2a4\ud130 \ubc0f VPC \uad00\uc810\uc5d0\uc11c \uc77c\uad00\ub418\uac8c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc758 \ub9e5\ub77d\uc5d0\uc11c Amazon VPC \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 (VPC CNI) \ub97c \uc18c\uac1c\ud569\ub2c8\ub2e4. VPC CNI\ub294 EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud0b9 \ud50c\ub7ec\uadf8\uc778\uc774\ubbc0\ub85c \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c \uc911\uc810\uc801\uc73c\ub85c \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. VPC CNI\ub294 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774 \uac00\uc774\ub4dc\uc5d0\ub294 \ub2e4\uc591\ud55c VPC CNI \uc0ac\uc6a9 \uc0ac\ub840, \uc6b4\uc601 \ubaa8\ub4dc, \ud558\uc704 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc804\uc6a9 \uc139\uc158\uacfc \uad8c\uc7a5 \uc0ac\ud56d\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud558\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uaddc\uc815 \uc900\uc218 \uc778\uc99d\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4. \ub300\uccb4 CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ub300\uccb4 CNI \uad00\ub9ac\uc5d0 \ub300\ud55c \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uccb4 CNI\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \uc704\ud55c \ud30c\ud2b8\ub108 \ubc0f \ub9ac\uc18c\uc2a4 \ubaa9\ub85d\uc740 EKS Alternate CNI \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub378 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uad6c \uc0ac\ud56d\uc744 \uc815\uc758\ud588\uc2b5\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\ub294 NAT(\ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658)\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub2e4\ub978 \ud30c\ub4dc\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud2b9\uc815 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \ub370\ubaac(\ubc31\uadf8\ub77c\uc6b4\ub4dc \ud504\ub85c\uc138\uc2a4, \uc608: kubelet )\uc740 \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub294 NAT\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0\ub3c4 \ub2e4\ub978 \ubaa8\ub4e0 \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \ud30c\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uae30\ub300\ub418\ub294 \ud638\ud658 \uac00\ub2a5\ud55c \ub124\ud2b8\uc6cc\ud0b9\uc758 \uad6c\ud604\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uadf8\ub9bc\uc740 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc758 \uad00\uacc4\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud0b9 \uc778\ud130\ud398\uc774\uc2a4 (CNI) \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378\uc744 \uad6c\ud604\ud558\uae30 \uc704\ud55c CNI \uc0ac\uc591 \ubc0f \ud50c\ub7ec\uadf8\uc778\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. CNI\ub294 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\uc131\ud558\uae30 \uc704\ud55c \ud50c\ub7ec\uadf8\uc778\uc744 \uc791\uc131\ud558\uae30 \uc704\ud55c \uc0ac\uc591 (\ud604\uc7ac \ubc84\uc804 1.0.0)\uacfc \ub77c\uc774\ube0c\ub7ec\ub9ac, \uc9c0\uc6d0\ub418\ub294 \uc5ec\ub7ec \ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. CNI\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uacfc \ucee8\ud14c\uc774\ub108 \uc0ad\uc81c \uc2dc \ud560\ub2f9\ub41c \ub9ac\uc18c\uc2a4 \uc81c\uac70\uc5d0\ub9cc \uad00\uc5ec\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 kubelet\uc5d0 --network-plugin=cni \uba85\ub839\uc904 \uc635\uc158\uc744 \uc804\ub2ec\ud568\uc73c\ub85c\uc368 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. kubelet\uc740 --cni-conf-dir (\uae30\ubcf8\uc801\uc73c\ub85c /etc/cni/net.d)\uc5d0\uc11c \ud30c\uc77c\uc744 \uc77d\uace0 \ud574\ub2f9 \ud30c\uc77c\uc758 CNI \uad6c\uc131\uc744 \ud65c\uc6a9\ud558\uc5ec \uac01 \ud30c\ub4dc\uc758 \ub124\ud2b8\uc6cc\ud06c\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. CNI \uad6c\uc131 \ud30c\uc77c\uc740 CNI \uc0ac\uc591 (\ucd5c\uc18c v0.4.0) \uacfc \uc77c\uce58\ud574\uc57c \ud558\uba70 \uad6c\uc131\uc5d0\uc11c \ucc38\uc870\ud558\ub294 \ubaa8\ub4e0 \ud544\uc218 CNI \ud50c\ub7ec\uadf8\uc778\uc740 --cni-bin-dir \ub514\ub809\ud130\ub9ac(\uae30\ubcf8\uc801\uc73c\ub85c /opt/cni/bin)\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\ub514\ub809\ud130\ub9ac\uc5d0 CNI \uad6c\uc131 \ud30c\uc77c\uc774 \uc5ec\ub7ec \uac1c \uc788\ub294 \uacbd\uc6b0, kubelet\uc740 \uad6c\uc131 \ud30c\uc77c\uc744 \uc624\ub984\ucc28\uc21c \uae30\uc900 \uc55e\uc5d0 \uc624\ub294 \uc774\ub984\uc744 \uac00\uc9c4 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4*. Amazon Virtual Private Cloud (VPC) CNI \u00b6 AWS\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 VPC CNI\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud0b9 \uc560\ub4dc\uc628\uc785\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc740 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. VPC CNI\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc740 CNI \ubc14\uc774\ub108\ub9ac\uc640 ipamd (IP \uc8fc\uc18c \uad00\ub9ac) \ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 VPC \ub124\ud2b8\uc6cc\ud06c\uc758 IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. ipamd\ub294 \uac01 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc\uc5d0 \ub300\ud55c AWS Elastic Networking Interface (ENI) \ub97c \uad00\ub9ac\ud558\uace0 IP \uc6dc \ud480\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. VPC CNI\ub294 \ube60\ub978 \ud30c\ub4dc \uae30\ub3d9 \uc2dc\uac04\uc744 \uc704\ud574 ENI\uc640 IP \uc8fc\uc18c\ub97c \uc0ac\uc804 \ud560\ub2f9\ud558\uae30 \uc704\ud55c \uad6c\uc131 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon VPC CNI \uc5d0\uc11c \uad8c\uc7a5 \ud50c\ub7ec\uadf8\uc778 \uad00\ub9ac \ubaa8\ubc94 \uc0ac\ub840\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \ud30c\ub4dc IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ud655\uc778\ud560 \uac83\uc744 \uac15\ub825\ud558\uac8c \uad8c\uc7a5\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 VPC \ubc0f \uc11c\ube0c\ub137 \uc744 \uace0\ub824\ud569\ub2c8\ub2e4. Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137\uc758 ENI\uc640 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uad6c\uc131\ub41c \uc6dc \ud480\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 VPC CNI \ubaa8\ub4dc\ub97c \u201c \ubcf4\uc870 IP \ubaa8\ub4dc(secondary IP mode) \u201d\ub77c\uace0 \ud569\ub2c8\ub2e4. IP \uc8fc\uc18c \uc218\uc640 \uc774\uc5d0 \ub530\ub978 \ud30c\ub4dc \uc218 (\ud30c\ub4dc\uc758 \ubc00\ub3c4) \ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc815\uc758\ub41c ENI \uc218\uc640 ENI \ub2f9 IP \uc8fc\uc18c (\uc81c\ud55c) \uc5d0 \ub530\ub77c \uc815\uc758\ub429\ub2c8\ub2e4. \ubcf4\uc870 \ubaa8\ub4dc\ub294 \uae30\ubcf8\uac12\uc774\uba70 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc791\uc740 \uc18c\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0, Prefix \ubaa8\ub4dc \uc0ac\uc6a9\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. ENI\uc5d0 Prefix\ub97c \ud560\ub2f9\ud558\uc5ec \ud30c\ub4dc\uc6a9 \ub178\ub4dc\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ub298\ub9b4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\ub294 \uae30\ubcf8\uc801\uc73c\ub85c AWS VPC\uc640 \ud1b5\ud569\ub418\uba70, \uc774\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \uae30\uc874 AWS VPC \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc801\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 VPC flow logs, VPC \ub77c\uc6b0\ud305 \uc815\ucc45 \ubc0f \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \uaca9\ub9ac\ub97c \uc704\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \ubcc4\ub3c4\uc758 \ub124\ud2b8\uc6cc\ud06c \uaddc\uce59\uc744 \ud560\ub2f9\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \ud65c\uc131\ud654\ub97c \uace0\ub824\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c\ub97c Pod\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc218\ucc9c \uac1c\uc758 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud560 \uacbd\uc6b0\uc5d0\ub294 IPv4 \uc8fc\uc18c \ubd80\uc871\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. AWS VPC\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\uc870 CIDR \ud560\ub2f9 \uc744 \ud1b5\ud574 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP\ub97c \ud655\uc7a5\ud558\uc5ec IPv4 CIDR \ube14\ub85d \uace0\uac08\uc744 \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ub300\ud574 \ub2e4\ub978 \uc11c\ube0c\ub137 CIDR \ubc94\uc704\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI\uc758 \uc774\ub7ec\ud55c \uae30\ub2a5\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. EKS\uc640 \ud568\uaed8 100.64.0.0/10 \ubc0f 198.19.0.0/16 CIDR (CG-NAT) \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud30c\ub4dc\uac00 VPC\uc758 RFC1918 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0\uc758 \ud658\uacbd\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 IPv4 \uc8fc\uc18c \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ud55c \uac00\uc9c0 \uc635\uc158\uc774\uc9c0\ub9cc \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\ubcf4\ub2e4 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud2b9\ud788, VPC\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \uc8fc\uc18c\ub97c \ubaa8\ub450 \uc18c\uc9c4\ud55c \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130 \ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. IPv6\uc758 \uc9c0\uc6d0\uc744 \uc704\ud55c \uc870\uc9c1\uc758 \uacc4\ud68d\uc744 \ud655\uc778\ud558\uace0, IPv6\uc5d0 \ud22c\uc790\ud558\ub294 \uac83\uc774 \uc7a5\uae30\uc801 \uac00\uce58\uac00 \ub354 \ub192\uc740\uc9c0 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. EKS\uc758 IPv6 \uc9c0\uc6d0\uc740 \uc81c\ud55c\ub41c IPv4 \uc8fc\uc18c \uacf5\uac04\uc73c\ub85c \uc778\ud574 \ubc1c\uc0dd\ud558\ub294 IP \uc18c\ubaa8 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \uc911\uc810\uc744 \ub450\uace0 \uc788\uc2b5\ub2c8\ub2e4. IPv4 \uace0\uac08\ub85c \uc778\ud55c \uace0\uac1d\ub4e4\uc758 \ubb38\uc81c\uc5d0 \ub300\uc751\ud558\uc5ec EKS\ub294 \ub4c0\uc5bc \uc2a4\ud0dd \ud30c\ub4dc\ubcf4\ub2e4 IPv6 \uc804\uc6a9 \ud30c\ub4dc\uc758 \uc6b0\uc120\uc21c\uc704\ub97c \ub192\uc785\ub2c8\ub2e4. \uc989, \ud30c\ub4dc\ub294 IPv4 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc9c0\ub9cc VPC CIDR \ubc94\uc704\uc758 IPv4 \uc8fc\uc18c\ub294 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. VPC CNI\ub294 AWS \uad00\ub9ac\ud615 VPC IPv6 CIDR \ube14\ub85d\uc5d0\uc11c \ud30c\ub4dc\uc5d0 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 \u00b6 \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 Excel \ubb38\uc11c \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacc4\uc0b0\uae30 \ubb38\uc11c\ub294 WARM_IP_TARGET \ubc0f WARM_ENI_TARGET \uacfc \uac19\uc740 \ub2e4\uc591\ud55c ENI \uad6c\uc131 \uc635\uc158\uc5d0 \ub530\ub77c \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc758 IP \uc8fc\uc18c \uc0ac\uc6a9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\ub294 \ub450 \uac1c\uc758 \uc2dc\ud2b8\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc2dc\ud2b8\ub294 \uc6dc ENI \ubaa8\ub4dc\uc6a9\uc774\uace0 \ub2e4\ub978 \ud558\ub098\ub294 \uc6dc IP \ubaa8\ub4dc\uc6a9\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC CNI guidance \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc785\ub825 \uac12: - \uc11c\ube0c\ub137 CIDR \ud06c\uae30 - \uc6dc ENI \ud0c0\uac9f \ub610\ub294 \uc6dc IP \ud0c0\uac9f - \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d - \uc720\ud615, \uac1c\uc218, \uc778\uc2a4\ud134\uc2a4\ub2f9 \uc2a4\ucf00\uc904\ub9c1\ub41c \uc6cc\ud06c\ub85c\ub4dc \ud30c\ub4dc\uc758 \uc218 \ucd9c\ub825 \uac12: - \ud638\uc2a4\ud305\ub41c \ucd1d \ud30c\ub4dc \uc218 - \uc0ac\uc6a9\ub41c \uc11c\ube0c\ub137 IP \uc218 - \ub0a8\uc544 \uc788\ub294 \uc11c\ube0c\ub137 IP \uc218 - \uc778\uc2a4\ud134\uc2a4 \uc218\uc900 \uc138\ubd80 \uc815\ubcf4 - \uc778\uc2a4\ud134\uc2a4\ub2f9 \uc6dc IP/ENI \uc218 - \uc778\uc2a4\ud134\uc2a4\ub2f9 \ud65c\uc131 IP/ENI \uc218","title":"\ub124\ud2b8\uc6cc\ud06c\ub97c \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"networking/index/index.kr/#amazon-eks","text":"\ud074\ub7ec\uc2a4\ud130\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc6b4\uc601\ud558\ub824\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc774\ub77c\uace0\ub3c4 \ud558\ub294 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9\uc758 \uc911\uc2ec\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc704\ud55c \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 (CNI) \ud50c\ub7ec\uadf8\uc778\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc744 \uad6c\ud604\ud558\ub294 Amazon Virtual Private Cloud(VPC) CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uacf5\uc2dd\uc801\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC CNI\ub294 AWS VPC\uc640\uc758 \ub124\uc774\ud2f0\ube0c \ud1b5\ud569\uc744 \uc81c\uacf5\ud558\uba70 \uc5b8\ub354\ub808\uc774(underlay) \ubaa8\ub4dc\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc5b8\ub354\ub808\uc774 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ud30c\ub4dc\uc640 \ud638\uc2a4\ud2b8\uac00 \ub3d9\uc77c\ud55c \ub124\ud2b8\uc6cc\ud06c \uacc4\uce35\uc5d0 \uc704\uce58\ud558\uba70 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub294 \ud074\ub7ec\uc2a4\ud130 \ubc0f VPC \uad00\uc810\uc5d0\uc11c \uc77c\uad00\ub418\uac8c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc758 \ub9e5\ub77d\uc5d0\uc11c Amazon VPC \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 (VPC CNI) \ub97c \uc18c\uac1c\ud569\ub2c8\ub2e4. VPC CNI\ub294 EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud0b9 \ud50c\ub7ec\uadf8\uc778\uc774\ubbc0\ub85c \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c \uc911\uc810\uc801\uc73c\ub85c \ub2e4\ub8e8\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. VPC CNI\ub294 \ub2e4\uc591\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774 \uac00\uc774\ub4dc\uc5d0\ub294 \ub2e4\uc591\ud55c VPC CNI \uc0ac\uc6a9 \uc0ac\ub840, \uc6b4\uc601 \ubaa8\ub4dc, \ud558\uc704 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc804\uc6a9 \uc139\uc158\uacfc \uad8c\uc7a5 \uc0ac\ud56d\uc744 \ud3ec\ud568\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud558\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uaddc\uc815 \uc900\uc218 \uc778\uc99d\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4. \ub300\uccb4 CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ub300\uccb4 CNI \uad00\ub9ac\uc5d0 \ub300\ud55c \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uccb4 CNI\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \uc704\ud55c \ud30c\ud2b8\ub108 \ubc0f \ub9ac\uc18c\uc2a4 \ubaa9\ub85d\uc740 EKS Alternate CNI \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c\ub97c \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"networking/index/index.kr/#_1","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud574 \ub2e4\uc74c\uacfc \uac19\uc740 \uc694\uad6c \uc0ac\ud56d\uc744 \uc815\uc758\ud588\uc2b5\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud30c\ub4dc\ub294 NAT(\ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658)\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ub2e4\ub978 \ud30c\ub4dc\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud2b9\uc815 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \ub370\ubaac(\ubc31\uadf8\ub77c\uc6b4\ub4dc \ud504\ub85c\uc138\uc2a4, \uc608: kubelet )\uc740 \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub294 NAT\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0\ub3c4 \ub2e4\ub978 \ubaa8\ub4e0 \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \ud30c\ub4dc\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uae30\ub300\ub418\ub294 \ud638\ud658 \uac00\ub2a5\ud55c \ub124\ud2b8\uc6cc\ud0b9\uc758 \uad6c\ud604\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uadf8\ub9bc\uc740 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc758 \uad00\uacc4\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub378"},{"location":"networking/index/index.kr/#cni","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378\uc744 \uad6c\ud604\ud558\uae30 \uc704\ud55c CNI \uc0ac\uc591 \ubc0f \ud50c\ub7ec\uadf8\uc778\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. CNI\ub294 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\uc131\ud558\uae30 \uc704\ud55c \ud50c\ub7ec\uadf8\uc778\uc744 \uc791\uc131\ud558\uae30 \uc704\ud55c \uc0ac\uc591 (\ud604\uc7ac \ubc84\uc804 1.0.0)\uacfc \ub77c\uc774\ube0c\ub7ec\ub9ac, \uc9c0\uc6d0\ub418\ub294 \uc5ec\ub7ec \ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. CNI\ub294 \ucee8\ud14c\uc774\ub108\uc758 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uacfc \ucee8\ud14c\uc774\ub108 \uc0ad\uc81c \uc2dc \ud560\ub2f9\ub41c \ub9ac\uc18c\uc2a4 \uc81c\uac70\uc5d0\ub9cc \uad00\uc5ec\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 kubelet\uc5d0 --network-plugin=cni \uba85\ub839\uc904 \uc635\uc158\uc744 \uc804\ub2ec\ud568\uc73c\ub85c\uc368 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4. kubelet\uc740 --cni-conf-dir (\uae30\ubcf8\uc801\uc73c\ub85c /etc/cni/net.d)\uc5d0\uc11c \ud30c\uc77c\uc744 \uc77d\uace0 \ud574\ub2f9 \ud30c\uc77c\uc758 CNI \uad6c\uc131\uc744 \ud65c\uc6a9\ud558\uc5ec \uac01 \ud30c\ub4dc\uc758 \ub124\ud2b8\uc6cc\ud06c\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. CNI \uad6c\uc131 \ud30c\uc77c\uc740 CNI \uc0ac\uc591 (\ucd5c\uc18c v0.4.0) \uacfc \uc77c\uce58\ud574\uc57c \ud558\uba70 \uad6c\uc131\uc5d0\uc11c \ucc38\uc870\ud558\ub294 \ubaa8\ub4e0 \ud544\uc218 CNI \ud50c\ub7ec\uadf8\uc778\uc740 --cni-bin-dir \ub514\ub809\ud130\ub9ac(\uae30\ubcf8\uc801\uc73c\ub85c /opt/cni/bin)\uc5d0 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.\ub514\ub809\ud130\ub9ac\uc5d0 CNI \uad6c\uc131 \ud30c\uc77c\uc774 \uc5ec\ub7ec \uac1c \uc788\ub294 \uacbd\uc6b0, kubelet\uc740 \uad6c\uc131 \ud30c\uc77c\uc744 \uc624\ub984\ucc28\uc21c \uae30\uc900 \uc55e\uc5d0 \uc624\ub294 \uc774\ub984\uc744 \uac00\uc9c4 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4*.","title":"\ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud0b9 \uc778\ud130\ud398\uc774\uc2a4 (CNI)"},{"location":"networking/index/index.kr/#amazon-virtual-private-cloud-vpc-cni","text":"AWS\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 VPC CNI\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud0b9 \uc560\ub4dc\uc628\uc785\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc740 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. VPC CNI\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc740 CNI \ubc14\uc774\ub108\ub9ac\uc640 ipamd (IP \uc8fc\uc18c \uad00\ub9ac) \ud50c\ub7ec\uadf8\uc778\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 VPC \ub124\ud2b8\uc6cc\ud06c\uc758 IP \uc8fc\uc18c\ub97c \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. ipamd\ub294 \uac01 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc\uc5d0 \ub300\ud55c AWS Elastic Networking Interface (ENI) \ub97c \uad00\ub9ac\ud558\uace0 IP \uc6dc \ud480\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. VPC CNI\ub294 \ube60\ub978 \ud30c\ub4dc \uae30\ub3d9 \uc2dc\uac04\uc744 \uc704\ud574 ENI\uc640 IP \uc8fc\uc18c\ub97c \uc0ac\uc804 \ud560\ub2f9\ud558\uae30 \uc704\ud55c \uad6c\uc131 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon VPC CNI \uc5d0\uc11c \uad8c\uc7a5 \ud50c\ub7ec\uadf8\uc778 \uad00\ub9ac \ubaa8\ubc94 \uc0ac\ub840\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \ud30c\ub4dc IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ud655\uc778\ud560 \uac83\uc744 \uac15\ub825\ud558\uac8c \uad8c\uc7a5\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 VPC \ubc0f \uc11c\ube0c\ub137 \uc744 \uace0\ub824\ud569\ub2c8\ub2e4. Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137\uc758 ENI\uc640 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uad6c\uc131\ub41c \uc6dc \ud480\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 VPC CNI \ubaa8\ub4dc\ub97c \u201c \ubcf4\uc870 IP \ubaa8\ub4dc(secondary IP mode) \u201d\ub77c\uace0 \ud569\ub2c8\ub2e4. IP \uc8fc\uc18c \uc218\uc640 \uc774\uc5d0 \ub530\ub978 \ud30c\ub4dc \uc218 (\ud30c\ub4dc\uc758 \ubc00\ub3c4) \ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc815\uc758\ub41c ENI \uc218\uc640 ENI \ub2f9 IP \uc8fc\uc18c (\uc81c\ud55c) \uc5d0 \ub530\ub77c \uc815\uc758\ub429\ub2c8\ub2e4. \ubcf4\uc870 \ubaa8\ub4dc\ub294 \uae30\ubcf8\uac12\uc774\uba70 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc774 \uc791\uc740 \uc18c\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0, Prefix \ubaa8\ub4dc \uc0ac\uc6a9\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. ENI\uc5d0 Prefix\ub97c \ud560\ub2f9\ud558\uc5ec \ud30c\ub4dc\uc6a9 \ub178\ub4dc\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ub298\ub9b4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\ub294 \uae30\ubcf8\uc801\uc73c\ub85c AWS VPC\uc640 \ud1b5\ud569\ub418\uba70, \uc774\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \uae30\uc874 AWS VPC \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc801\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 VPC flow logs, VPC \ub77c\uc6b0\ud305 \uc815\ucc45 \ubc0f \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \uaca9\ub9ac\ub97c \uc704\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \ubcc4\ub3c4\uc758 \ub124\ud2b8\uc6cc\ud06c \uaddc\uce59\uc744 \ud560\ub2f9\ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \ud65c\uc131\ud654\ub97c \uace0\ub824\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c\ub97c Pod\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc218\ucc9c \uac1c\uc758 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud560 \uacbd\uc6b0\uc5d0\ub294 IPv4 \uc8fc\uc18c \ubd80\uc871\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. AWS VPC\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\uc870 CIDR \ud560\ub2f9 \uc744 \ud1b5\ud574 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP\ub97c \ud655\uc7a5\ud558\uc5ec IPv4 CIDR \ube14\ub85d \uace0\uac08\uc744 \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ub300\ud574 \ub2e4\ub978 \uc11c\ube0c\ub137 CIDR \ubc94\uc704\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI\uc758 \uc774\ub7ec\ud55c \uae30\ub2a5\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. EKS\uc640 \ud568\uaed8 100.64.0.0/10 \ubc0f 198.19.0.0/16 CIDR (CG-NAT) \uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud30c\ub4dc\uac00 VPC\uc758 RFC1918 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0\uc758 \ud658\uacbd\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc740 IPv4 \uc8fc\uc18c \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ud55c \uac00\uc9c0 \uc635\uc158\uc774\uc9c0\ub9cc \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\ubcf4\ub2e4 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud2b9\ud788, VPC\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \uc8fc\uc18c\ub97c \ubaa8\ub450 \uc18c\uc9c4\ud55c \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130 \ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. IPv6\uc758 \uc9c0\uc6d0\uc744 \uc704\ud55c \uc870\uc9c1\uc758 \uacc4\ud68d\uc744 \ud655\uc778\ud558\uace0, IPv6\uc5d0 \ud22c\uc790\ud558\ub294 \uac83\uc774 \uc7a5\uae30\uc801 \uac00\uce58\uac00 \ub354 \ub192\uc740\uc9c0 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. EKS\uc758 IPv6 \uc9c0\uc6d0\uc740 \uc81c\ud55c\ub41c IPv4 \uc8fc\uc18c \uacf5\uac04\uc73c\ub85c \uc778\ud574 \ubc1c\uc0dd\ud558\ub294 IP \uc18c\ubaa8 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \uc911\uc810\uc744 \ub450\uace0 \uc788\uc2b5\ub2c8\ub2e4. IPv4 \uace0\uac08\ub85c \uc778\ud55c \uace0\uac1d\ub4e4\uc758 \ubb38\uc81c\uc5d0 \ub300\uc751\ud558\uc5ec EKS\ub294 \ub4c0\uc5bc \uc2a4\ud0dd \ud30c\ub4dc\ubcf4\ub2e4 IPv6 \uc804\uc6a9 \ud30c\ub4dc\uc758 \uc6b0\uc120\uc21c\uc704\ub97c \ub192\uc785\ub2c8\ub2e4. \uc989, \ud30c\ub4dc\ub294 IPv4 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc9c0\ub9cc VPC CIDR \ubc94\uc704\uc758 IPv4 \uc8fc\uc18c\ub294 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. VPC CNI\ub294 AWS \uad00\ub9ac\ud615 VPC IPv6 CIDR \ube14\ub85d\uc5d0\uc11c \ud30c\ub4dc\uc5d0 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4.","title":"Amazon Virtual Private Cloud (VPC) CNI"},{"location":"networking/index/index.kr/#_2","text":"\uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 Excel \ubb38\uc11c \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacc4\uc0b0\uae30 \ubb38\uc11c\ub294 WARM_IP_TARGET \ubc0f WARM_ENI_TARGET \uacfc \uac19\uc740 \ub2e4\uc591\ud55c ENI \uad6c\uc131 \uc635\uc158\uc5d0 \ub530\ub77c \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc758 IP \uc8fc\uc18c \uc0ac\uc6a9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\ub294 \ub450 \uac1c\uc758 \uc2dc\ud2b8\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uccab \ubc88\uc9f8 \uc2dc\ud2b8\ub294 \uc6dc ENI \ubaa8\ub4dc\uc6a9\uc774\uace0 \ub2e4\ub978 \ud558\ub098\ub294 \uc6dc IP \ubaa8\ub4dc\uc6a9\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC CNI guidance \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc785\ub825 \uac12: - \uc11c\ube0c\ub137 CIDR \ud06c\uae30 - \uc6dc ENI \ud0c0\uac9f \ub610\ub294 \uc6dc IP \ud0c0\uac9f - \uc778\uc2a4\ud134\uc2a4 \ubaa9\ub85d - \uc720\ud615, \uac1c\uc218, \uc778\uc2a4\ud134\uc2a4\ub2f9 \uc2a4\ucf00\uc904\ub9c1\ub41c \uc6cc\ud06c\ub85c\ub4dc \ud30c\ub4dc\uc758 \uc218 \ucd9c\ub825 \uac12: - \ud638\uc2a4\ud305\ub41c \ucd1d \ud30c\ub4dc \uc218 - \uc0ac\uc6a9\ub41c \uc11c\ube0c\ub137 IP \uc218 - \ub0a8\uc544 \uc788\ub294 \uc11c\ube0c\ub137 IP \uc218 - \uc778\uc2a4\ud134\uc2a4 \uc218\uc900 \uc138\ubd80 \uc815\ubcf4 - \uc778\uc2a4\ud134\uc2a4\ub2f9 \uc6dc IP/ENI \uc218 - \uc778\uc2a4\ud134\uc2a4\ub2f9 \ud65c\uc131 IP/ENI \uc218","title":"\uc11c\ube0c\ub137 \uacc4\uc0b0\uae30"},{"location":"networking/ipv6/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Running IPv6 EKS Clusters \u00b6 EKS in IPv6 mode solves the IPv4 exhaustion challenge often manifested in large scale EKS clusters. EKS\u2019s support for IPv6 is focused on resolving the IPv4 exhaustion problem, which stems from the limited size of the IPv4 address space. This is a significant concern raised by a number of our customers and is distinct from Kubernetes\u2019 \u201c IPv4/IPv6 dual-stack \u201d feature. EKS/IPv6 will also provide the flexability to inter-connect network boundaries using IPv6 CIDRs hence minimizing the chances to suffer from CIDR overlap, therefor solving a 2-Fold problem (In-Cluster, Cross-Cluster). When deploying EKS clusters in IPv6 mode (--ip-family ipv6), the action is not a reversible. in simple words EKS IPv6 support is enabled for the entire lifetime of your cluster. In an IPv6 EKS cluster, Pods and Services will receive IPv6 addresses while maintaining compatibility with legacy IPv4 Endpoints. This includes the ability for external IPv4 endpoints to access in-cluster services, and Pods to access external IPv4 endpoints. Amazon EKS IPv6 support leverages the native VPC IPv6 capabilities. Each VPC is allocated with an IPv4 address prefix (CIDR block size can be from /16 to /28) and a unique /56 IPv6 address prefix (fixed) from within Amazon\u2019s GUA (Global Unicast Address); you can assign a /64 address prefix to each subnet in your VPC. IPv4 features, like Route Tables, Network Access Control Lists, Peering, and DNS resolution, work the same way in an IPv6 enabled VPC. The VPC is then referred as dual-stack VPC, following dual-stack subnets, the following diagram depict the IPV4&IPv6 VPC foundation pattern that support EKS/IPv6 based clusters: In the IPv6 world, every address is internet routable. By default, VPC allocates IPv6 CIDR from the public GUA range. VPCs do not support assigning private IPv6 addresses from the Unique Local Address (ULA) range as defined by RFC 4193 (fd00::/8 or fc00::/8). This is true even when you would like to assign an IPv6 CIDR owned by you. Egressing to the internet from Private Subnets is supported by implementing an egress-only internet gateway (EIGW) in a VPC, allowing outbound traffic while blocking all incoming traffic. The following diagram depict a Pod IPv6 Internet egress flow inside an EKS/IPv6 cluster: Best practices for implementing IPv6 subnets can be found in the VPC user guide . In an IPv6 EKS cluster, nodes and Pods receive public IPv6 addresses. EKS assigns IPv6 addresses to services based on Unique Local IPv6 Unicast Addresses (ULA). The ULA Service CIDR for an IPv6 cluster is automatically assigned during the cluster creation stage and cannot be specified, unlike IPv4. The following diagram depict an EKS/IPv6 based cluster control-plane & data-plan foundation pattern: Overview \u00b6 EKS/IPv6 is only supported in prefix mode (VPC-CNI Plug-in ENI IP assign mode). Learn more on Prefix Mode . Prefix assignment only works on Nitro-based EC2 instances, hence EKS/IPv6 is only supported when the cluster data-plane uses EC2 Nitro-based instances. In simple words an IPv6 prefix of /80 (Per worker-node) will yield ~10^14 IPv6 addresses, the limiting factor will no longer be IPs but Pod density (Resources wise). IPv6 prefix assignment only occurs at the EKS worker-node bootstrap time. This behaviour is known to mitigate scenarios where high Pod churn EKS/IPv4 clusters are often delayed in Pod scheduling due to throttled API calls generated by the VPC CNI plug-in (ipamd) aimed to allocate Private IPv4 addresses in a timely fashion. It is also known to make the VPC-CNI plug-in advanced knobs tuning WARM_IP/ENI , MINIMUM_IP unnecessarily. The following diagram zooms into an IPv6 worker-node Elastic Network Interface (ENI): Every EKS worker-node is assigned with IPv4 and IPv6 addresses, along with corresponding DNS entries. For a given worker-node, only a single IPv4 address from the dual-stack subnet is consumed. EKS support for IPv6 enables you to communicate with IPv4 endpoints (AWS, on-premise, internet) through a highly opinionated egress-only IPv4 model. EKS implements a host-local CNI plugin, secondary to the VPC CNI plugin, which allocates and configures an IPv4 address for a Pod. The CNI plugin configures a host-specific non-routable IPv4 address for a Pod from the 169.254.172.0/22 range. The IPv4 address assigned to the Pod is unique to the worker-node and is not advertised beyond the worker-node . 169.254.172.0/22 provides up to 1024 unique IPv4 addresses which can support large instance types. The following diagram depict the flow of an IPv6 Pod connecting to an IPv4 endpoint outside the cluster boundary (non-internet): In the above diagram Pods will perform a DNS lookup for the endpoint and, upon receiving an IPv4 \u201cA\u201d response, Pod\u2019s node-only unique IPv4 address is translated through source network address translation (SNAT) to the Private IPv4 (VPC) address of the primary network interface attached to the EC2 Worker-node. EKS/IPv6 Pods will also need to connect to IPv4 endpoints over the internet using public IPv4 Addresses, to achieve that a similar flow exists. The following diagram depict the flow of an IPv6 Pod connecting to an IPv4 endpoint outside the cluster boundary (internet routable): In the above diagram Pods will perform a DNS lookup for the endpoint and, upon receiving an IPv4 \u201cA\u201d response, Pod\u2019s node-only unique IPv4 address is translated through source network address translation (SNAT) to the Private IPv4 (VPC) address of the primary network interface attached to the EC2 Worker-node. The Pod IPv4 Address (Source IPv4: EC2 Primary IP) is then routed to the IPv4 NAT Gateway where the EC2 Primary IP is translated (SNAT) into a valid internet routable IPv4 Public IP Address (NAT Gateway Assigned Public IP). Any Pod-to-Pod communication across the nodes always uses an IPv6 address. VPC CNI configures iptables to handle IPv6 while blocking any IPv4 connections. Kubernetes services will receive only IPv6 addresses (ClusterIP) from Unique Local IPv6 Unicast Addresses (ULA) . The ULA Service CIDR for an IPv6 cluster is automatically assigned during EKS cluster creation stage and cannot be modified. The following diagram depict the Pod to Kubernetes Service flow: Services are exposed to the internet using an AWS load balancer. The load balancer receives public IPv4 and IPv6 addresses, a.k.a dual-stack load balancer. For IPv4 clients accessing IPv6 cluster kubernetes services, the load balancer does IPv4 to IPv6 translation. Amazon EKS recommends running worker nodes and Pods in private subnets. You can create public load balancers in the public subnets that load balance traffic to Pods running on nodes that are in private subnets. The following diagram depict an internet IPv4 user accessing an EKS/IPv6 Ingress based service: Note: The above pattern requires to deploy the most recent version of the AWS load balancer controller EKS Control Plane <-> Data Plane communication \u00b6 EKS will provision Cross-Account ENIs (X-ENIs) in dual stack mode (IPv4/IPv6). Kubernetes node components such as kubelet and kube-proxy are configured to support dual stack. Kubelet and kube-proxy run in a hostNetwork mode and bind to both IPv4 and IPv6 addresses attached to the primary network interface of a node. The Kubernetes api-server communicates to Pods and node components via the X-ENIs is IPv6 based. Pods communicate with the api-servers via the X-ENIs, and Pod to api-server communication always uses IPv6 mode. Recommendations \u00b6 Maintain Access to IPv4 EKS APIs \u00b6 EKS APIs are accessible by IPv4 only. This also includes the Cluster API Endpoint. You will not be able to access cluster endpoints and APIs from an IPv6 only network. It is required that your network supports (1) an IPv6 transition mechanism such as NAT64/DNS64 that facilitates communication between IPv6 and IPv4 hosts and (2) a DNS service that supports translations of IPv4 endpoints. Schedule Based on Compute Resources \u00b6 A single IPv6 prefix is sufficient to run many Pods on a single node. This also effectively removes ENI and IP limitations on the maximum number of Pods on a node. Although IPv6 removes direct dependency on max-Pods, when using prefix attachments with smaller instance types like the m5.large, you\u2019re likely to exhaust the instance\u2019s CPU and memory resources long before you exhaust its IP addresses. You must set the EKS recommended maximum Pod value by hand if you are using self-managed node groups or a managed node group with a custom AMI ID. You can use the following formula to determine the maximum number of Pods you can deploy on a node for a IPv6 EKS cluster. ((Number of network interfaces for instance type (number of prefixes per network interface-1)* 16) + 2 ((3 ENIs) ((10 secondary IPs per ENI-1) 16)) + 2 = 460 (real) Managed node groups automatically calculate the maximum number of Pods for you. Avoid changing EKS\u2019s recommended value for the maximum number of Pods to avoid Pod scheduling failures due to resource limitations. Evaluate Purpose of Existing Custom Networking \u00b6 If custom networking is currently enabled, Amazon EKS recommends re-evaluating your need for it with IPv6. If you chose to use custom networking to address the IPv4 exhaustion issue, it is no longer necessary with IPv6. If you are utilizing custom networking to satisfy a security requirement, such as a separate network for nodes and Pods, you are encouraged to submit an EKS roadmap request . Fargate Pods in EKS/IPv6 Cluster \u00b6 EKS supports IPv6 for Pods running on Fargate. Pods running on Fargate will consume IPv6 and VPC Routable Private IPv4 addresses carved from the VPC CIDR ranges (IPv4&IPv6). In simple words your EKS/Fargate Pods cluster wide density will be limited to the available IPv4 and IPv6 addresses. It is recommended to size your dual-stack subnets/VPC CIDRs for future growth. You will not be able to schedule new Fargate Pods if the underlying subnet does not contain an available IPv4 address, irrespective of IPv6 available addresses. Deploy the AWS Load Balancer Controller (LBC) \u00b6 The upstream in-tree Kubernetes service controller does not support IPv6 . We recommend using the most recent version of the AWS Load Balancer Controller add-on. The LBC will only deploy a dual-stack NLB or a dual-stack ALB upon consuming corresponding kubernetes service/ingress definition annotated with: \"alb.ingress.kubernetes.io/ip-address-type: dualstack\" and \"alb.ingress.kubernetes.io/target-type: ip\" AWS Network Load Balancer does not support dual-stack UDP protocol address types. If you have strong requirements for low-latency, real-time streaming, online gaming, and IoT, we recommend running IPv4 clusters. To learn more about managing health checks for UDP services, please refer to \u201cHow to route UDP traffic into Kubernetes\u201d . Identify Dependencies on IMDSv2 \u00b6 EKS in IPv6 mode does not support IMDSv2 endpoints (yet). Please open a support ticket if IMDSv2 is a blocker for you to migrate to EKS/IPv6.","title":"Running IPv6 Clusters ({'name': 'English', 'build': True})"},{"location":"networking/ipv6/#running-ipv6-eks-clusters","text":"EKS in IPv6 mode solves the IPv4 exhaustion challenge often manifested in large scale EKS clusters. EKS\u2019s support for IPv6 is focused on resolving the IPv4 exhaustion problem, which stems from the limited size of the IPv4 address space. This is a significant concern raised by a number of our customers and is distinct from Kubernetes\u2019 \u201c IPv4/IPv6 dual-stack \u201d feature. EKS/IPv6 will also provide the flexability to inter-connect network boundaries using IPv6 CIDRs hence minimizing the chances to suffer from CIDR overlap, therefor solving a 2-Fold problem (In-Cluster, Cross-Cluster). When deploying EKS clusters in IPv6 mode (--ip-family ipv6), the action is not a reversible. in simple words EKS IPv6 support is enabled for the entire lifetime of your cluster. In an IPv6 EKS cluster, Pods and Services will receive IPv6 addresses while maintaining compatibility with legacy IPv4 Endpoints. This includes the ability for external IPv4 endpoints to access in-cluster services, and Pods to access external IPv4 endpoints. Amazon EKS IPv6 support leverages the native VPC IPv6 capabilities. Each VPC is allocated with an IPv4 address prefix (CIDR block size can be from /16 to /28) and a unique /56 IPv6 address prefix (fixed) from within Amazon\u2019s GUA (Global Unicast Address); you can assign a /64 address prefix to each subnet in your VPC. IPv4 features, like Route Tables, Network Access Control Lists, Peering, and DNS resolution, work the same way in an IPv6 enabled VPC. The VPC is then referred as dual-stack VPC, following dual-stack subnets, the following diagram depict the IPV4&IPv6 VPC foundation pattern that support EKS/IPv6 based clusters: In the IPv6 world, every address is internet routable. By default, VPC allocates IPv6 CIDR from the public GUA range. VPCs do not support assigning private IPv6 addresses from the Unique Local Address (ULA) range as defined by RFC 4193 (fd00::/8 or fc00::/8). This is true even when you would like to assign an IPv6 CIDR owned by you. Egressing to the internet from Private Subnets is supported by implementing an egress-only internet gateway (EIGW) in a VPC, allowing outbound traffic while blocking all incoming traffic. The following diagram depict a Pod IPv6 Internet egress flow inside an EKS/IPv6 cluster: Best practices for implementing IPv6 subnets can be found in the VPC user guide . In an IPv6 EKS cluster, nodes and Pods receive public IPv6 addresses. EKS assigns IPv6 addresses to services based on Unique Local IPv6 Unicast Addresses (ULA). The ULA Service CIDR for an IPv6 cluster is automatically assigned during the cluster creation stage and cannot be specified, unlike IPv4. The following diagram depict an EKS/IPv6 based cluster control-plane & data-plan foundation pattern:","title":"Running IPv6 EKS Clusters"},{"location":"networking/ipv6/#overview","text":"EKS/IPv6 is only supported in prefix mode (VPC-CNI Plug-in ENI IP assign mode). Learn more on Prefix Mode . Prefix assignment only works on Nitro-based EC2 instances, hence EKS/IPv6 is only supported when the cluster data-plane uses EC2 Nitro-based instances. In simple words an IPv6 prefix of /80 (Per worker-node) will yield ~10^14 IPv6 addresses, the limiting factor will no longer be IPs but Pod density (Resources wise). IPv6 prefix assignment only occurs at the EKS worker-node bootstrap time. This behaviour is known to mitigate scenarios where high Pod churn EKS/IPv4 clusters are often delayed in Pod scheduling due to throttled API calls generated by the VPC CNI plug-in (ipamd) aimed to allocate Private IPv4 addresses in a timely fashion. It is also known to make the VPC-CNI plug-in advanced knobs tuning WARM_IP/ENI , MINIMUM_IP unnecessarily. The following diagram zooms into an IPv6 worker-node Elastic Network Interface (ENI): Every EKS worker-node is assigned with IPv4 and IPv6 addresses, along with corresponding DNS entries. For a given worker-node, only a single IPv4 address from the dual-stack subnet is consumed. EKS support for IPv6 enables you to communicate with IPv4 endpoints (AWS, on-premise, internet) through a highly opinionated egress-only IPv4 model. EKS implements a host-local CNI plugin, secondary to the VPC CNI plugin, which allocates and configures an IPv4 address for a Pod. The CNI plugin configures a host-specific non-routable IPv4 address for a Pod from the 169.254.172.0/22 range. The IPv4 address assigned to the Pod is unique to the worker-node and is not advertised beyond the worker-node . 169.254.172.0/22 provides up to 1024 unique IPv4 addresses which can support large instance types. The following diagram depict the flow of an IPv6 Pod connecting to an IPv4 endpoint outside the cluster boundary (non-internet): In the above diagram Pods will perform a DNS lookup for the endpoint and, upon receiving an IPv4 \u201cA\u201d response, Pod\u2019s node-only unique IPv4 address is translated through source network address translation (SNAT) to the Private IPv4 (VPC) address of the primary network interface attached to the EC2 Worker-node. EKS/IPv6 Pods will also need to connect to IPv4 endpoints over the internet using public IPv4 Addresses, to achieve that a similar flow exists. The following diagram depict the flow of an IPv6 Pod connecting to an IPv4 endpoint outside the cluster boundary (internet routable): In the above diagram Pods will perform a DNS lookup for the endpoint and, upon receiving an IPv4 \u201cA\u201d response, Pod\u2019s node-only unique IPv4 address is translated through source network address translation (SNAT) to the Private IPv4 (VPC) address of the primary network interface attached to the EC2 Worker-node. The Pod IPv4 Address (Source IPv4: EC2 Primary IP) is then routed to the IPv4 NAT Gateway where the EC2 Primary IP is translated (SNAT) into a valid internet routable IPv4 Public IP Address (NAT Gateway Assigned Public IP). Any Pod-to-Pod communication across the nodes always uses an IPv6 address. VPC CNI configures iptables to handle IPv6 while blocking any IPv4 connections. Kubernetes services will receive only IPv6 addresses (ClusterIP) from Unique Local IPv6 Unicast Addresses (ULA) . The ULA Service CIDR for an IPv6 cluster is automatically assigned during EKS cluster creation stage and cannot be modified. The following diagram depict the Pod to Kubernetes Service flow: Services are exposed to the internet using an AWS load balancer. The load balancer receives public IPv4 and IPv6 addresses, a.k.a dual-stack load balancer. For IPv4 clients accessing IPv6 cluster kubernetes services, the load balancer does IPv4 to IPv6 translation. Amazon EKS recommends running worker nodes and Pods in private subnets. You can create public load balancers in the public subnets that load balance traffic to Pods running on nodes that are in private subnets. The following diagram depict an internet IPv4 user accessing an EKS/IPv6 Ingress based service: Note: The above pattern requires to deploy the most recent version of the AWS load balancer controller","title":"Overview"},{"location":"networking/ipv6/#eks-control-plane-data-plane-communication","text":"EKS will provision Cross-Account ENIs (X-ENIs) in dual stack mode (IPv4/IPv6). Kubernetes node components such as kubelet and kube-proxy are configured to support dual stack. Kubelet and kube-proxy run in a hostNetwork mode and bind to both IPv4 and IPv6 addresses attached to the primary network interface of a node. The Kubernetes api-server communicates to Pods and node components via the X-ENIs is IPv6 based. Pods communicate with the api-servers via the X-ENIs, and Pod to api-server communication always uses IPv6 mode.","title":"EKS Control Plane &lt;-&gt; Data Plane communication"},{"location":"networking/ipv6/#recommendations","text":"","title":"Recommendations"},{"location":"networking/ipv6/#maintain-access-to-ipv4-eks-apis","text":"EKS APIs are accessible by IPv4 only. This also includes the Cluster API Endpoint. You will not be able to access cluster endpoints and APIs from an IPv6 only network. It is required that your network supports (1) an IPv6 transition mechanism such as NAT64/DNS64 that facilitates communication between IPv6 and IPv4 hosts and (2) a DNS service that supports translations of IPv4 endpoints.","title":"Maintain Access to IPv4 EKS APIs"},{"location":"networking/ipv6/#schedule-based-on-compute-resources","text":"A single IPv6 prefix is sufficient to run many Pods on a single node. This also effectively removes ENI and IP limitations on the maximum number of Pods on a node. Although IPv6 removes direct dependency on max-Pods, when using prefix attachments with smaller instance types like the m5.large, you\u2019re likely to exhaust the instance\u2019s CPU and memory resources long before you exhaust its IP addresses. You must set the EKS recommended maximum Pod value by hand if you are using self-managed node groups or a managed node group with a custom AMI ID. You can use the following formula to determine the maximum number of Pods you can deploy on a node for a IPv6 EKS cluster. ((Number of network interfaces for instance type (number of prefixes per network interface-1)* 16) + 2 ((3 ENIs) ((10 secondary IPs per ENI-1) 16)) + 2 = 460 (real) Managed node groups automatically calculate the maximum number of Pods for you. Avoid changing EKS\u2019s recommended value for the maximum number of Pods to avoid Pod scheduling failures due to resource limitations.","title":"Schedule Based on Compute Resources"},{"location":"networking/ipv6/#evaluate-purpose-of-existing-custom-networking","text":"If custom networking is currently enabled, Amazon EKS recommends re-evaluating your need for it with IPv6. If you chose to use custom networking to address the IPv4 exhaustion issue, it is no longer necessary with IPv6. If you are utilizing custom networking to satisfy a security requirement, such as a separate network for nodes and Pods, you are encouraged to submit an EKS roadmap request .","title":"Evaluate Purpose of Existing Custom Networking"},{"location":"networking/ipv6/#fargate-pods-in-eksipv6-cluster","text":"EKS supports IPv6 for Pods running on Fargate. Pods running on Fargate will consume IPv6 and VPC Routable Private IPv4 addresses carved from the VPC CIDR ranges (IPv4&IPv6). In simple words your EKS/Fargate Pods cluster wide density will be limited to the available IPv4 and IPv6 addresses. It is recommended to size your dual-stack subnets/VPC CIDRs for future growth. You will not be able to schedule new Fargate Pods if the underlying subnet does not contain an available IPv4 address, irrespective of IPv6 available addresses.","title":"Fargate Pods in EKS/IPv6 Cluster"},{"location":"networking/ipv6/#deploy-the-aws-load-balancer-controller-lbc","text":"The upstream in-tree Kubernetes service controller does not support IPv6 . We recommend using the most recent version of the AWS Load Balancer Controller add-on. The LBC will only deploy a dual-stack NLB or a dual-stack ALB upon consuming corresponding kubernetes service/ingress definition annotated with: \"alb.ingress.kubernetes.io/ip-address-type: dualstack\" and \"alb.ingress.kubernetes.io/target-type: ip\" AWS Network Load Balancer does not support dual-stack UDP protocol address types. If you have strong requirements for low-latency, real-time streaming, online gaming, and IoT, we recommend running IPv4 clusters. To learn more about managing health checks for UDP services, please refer to \u201cHow to route UDP traffic into Kubernetes\u201d .","title":"Deploy the AWS Load Balancer Controller (LBC)"},{"location":"networking/ipv6/#identify-dependencies-on-imdsv2","text":"EKS in IPv6 mode does not support IMDSv2 endpoints (yet). Please open a support ticket if IMDSv2 is a blocker for you to migrate to EKS/IPv6.","title":"Identify Dependencies on IMDSv2"},{"location":"networking/ipv6/index.kr/","text":"{'name': 'English', 'build': True} IPv6 EKS \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589 \u00b6 IPv6 \ubaa8\ub4dc\uc758 EKS\ub294 \ub300\uaddc\ubaa8 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc790\uc8fc \ub098\ud0c0\ub098\ub294 IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. EKS\uc758 IPv6 \uc9c0\uc6d0\uc740 IPv4 \uc8fc\uc18c \uacf5\uac04\uc758 \uc81c\ud55c\ub41c \ud06c\uae30\ub85c \uc778\ud574 \ubc1c\uc0dd\ud558\ub294 IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \uc911\uc810\uc744 \ub450\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \uace0\uac1d\uc774 \uc81c\uae30\ud55c \uc911\uc694\ud55c \uc6b0\ub824 \uc0ac\ud56d\uc774\uba70 Kubernetes\uc758 \u201c IPv4/IPv6 \uc774\uc911 \uc2a4\ud0dd \u201c \uae30\ub2a5\uacfc\ub294 \ub2e4\ub985\ub2c8\ub2e4. \ub610\ud55c EKS/IPv6\ub294 IPv6 CIDR\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uacbd\uacc4\ub97c \uc0c1\ud638 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \uc720\uc5f0\uc131\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c CIDR \uc911\ubcf5\uc73c\ub85c \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc744 \ucd5c\uc18c\ud654\ud558\uc5ec 2\uc911 \ubb38\uc81c(\ud074\ub7ec\uc2a4\ud130 \ub0b4, \ud074\ub7ec\uc2a4\ud130 \uac04)\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud3ec\ub4dc\uc640 \uc11c\ube44\uc2a4\ub294 \ub808\uac70\uc2dc IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640\uc758 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\uba74\uc11c IPv6 \uc8fc\uc18c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \uc678\ubd80 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uae30\ub2a5\uacfc \ud3ec\ub4dc\uac00 \uc678\ubd80 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. Amazon EKS IPv6 \uc9c0\uc6d0\uc740 \ub124\uc774\ud2f0\ube0c VPC IPv6 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud569\ub2c8\ub2e4. \uac01 VPC\uc5d0\ub294 IPv4 \uc8fc\uc18c \uc811\ub450\uc0ac (CIDR \ube14\ub85d \ud06c\uae30\ub294 /16\uc5d0\uc11c /28\uae4c\uc9c0 \uac00\ub2a5) \ubc0f \uc544\ub9c8\uc874 GUA (\uae00\ub85c\ubc8c \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c) \ub0b4\uc758 \uace0\uc720\ud55c /56 IPv6 \uc8fc\uc18c \uc811\ub450\uc0ac (\uace0\uc815) \uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. VPC\uc758 \uac01 \uc11c\ube0c\ub137\uc5d0 /64 \uc8fc\uc18c \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub77c\uc6b0\ud305 \ud14c\uc774\ube14, \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4 \uc81c\uc5b4 \ubaa9\ub85d, \ud53c\uc5b4\ub9c1, DNS \ud655\uc778\uacfc \uac19\uc740 IPv4 \uae30\ub2a5\uc740 IPv6 \uc9c0\uc6d0 VPC\uc5d0\uc11c \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. VPC\ub97c \uc774\uc911 \uc2a4\ud0dd VPC\ub77c\uace0 \ud558\uba70 \uc774\uc911 \uc2a4\ud0dd \uc11c\ube0c\ub137\uc5d0 \uc774\uc5b4 \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EK/IPv6 \uae30\ubc18 \ud074\ub7ec\uc2a4\ud130\ub97c \uc9c0\uc6d0\ud558\ub294 IPv4&IPv6 VPC \uae30\ubc18 \ud328\ud134\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. IPv6 \ud658\uacbd\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc8fc\uc18c\ub97c \uc778\ud130\ub137\uc73c\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC\ub294 \ud37c\ube14\ub9ad GUA \ubc94\uc704\uc5d0\uc11c IPv6 CIDR\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. VPC\ub294 RFC 4193 (fd00: :/8 \ub610\ub294 fc00: :/8) \uc5d0 \uc815\uc758\ub41c \uace0\uc720 \ub85c\uceec \uc8fc\uc18c (ULA) \ubc94\uc704\uc5d0\uc11c \ud504\ub77c\uc774\ube57 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc0ac\uc6a9\uc790\uac00 \uc18c\uc720\ud55c IPv6 CIDR\uc744 \ud560\ub2f9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc785\ub2c8\ub2e4. VPC\uc5d0 \uc678\ubd80 \uc804\uc6a9 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 (EIGW) \ub97c \uad6c\ud604\ud558\uc5ec \ub4e4\uc5b4\uc624\ub294 \ud2b8\ub798\ud53d\uc740 \ubaa8\ub450 \ucc28\ub2e8\ud558\uba74\uc11c \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc740 \ud5c8\uc6a9\ud568\uc73c\ub85c\uc368 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\ud130\ub137\uc73c\ub85c \ub098\uac00\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 Pod IPv6 \uc778\ud130\ub137 \uc1a1\uc2e0 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. IPv6 \uc11c\ube0c\ub137\uc744 \uad6c\ud604\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\ub294 VPC \uc0ac\uc6a9 \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \ud37c\ube14\ub9ad IPv6 \uc8fc\uc18c\ub97c \uac16\uc2b5\ub2c8\ub2e4. EKS\ub294 \uace0\uc720\ud55c \ub85c\uceec IPv6 \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c (ULA) \ub97c \uae30\ubc18\uc73c\ub85c \uc11c\ube44\uc2a4\uc5d0 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc758 ULA \uc11c\ube44\uc2a4 CIDR\uc740 IPv4\uc640 \ub2ec\ub9ac \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \ub2e8\uacc4\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uba70 \uc9c0\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \uae30\ubc18 \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub370\uc774\ud130 \ud50c\ub79c \uae30\ubc18 \ud328\ud134\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uac1c\uc694 \u00b6 EKS/IPv6\ub294 \uc811\ub450\uc0ac \ubaa8\ub4dc (VPC-CNI \ud50c\ub7ec\uadf8\uc778 ENI IP \ud560\ub2f9 \ubaa8\ub4dc) \uc5d0\uc11c\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc811\ub450\uc0ac \ubaa8\ub4dc \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. \uc811\ub450\uc0ac \ud560\ub2f9\uc740 Nitro \uae30\ubc18 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c EKS/IPv6\ub294 \ud074\ub7ec\uc2a4\ud130 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 EC2 Nitro \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c IPv6 \uc811\ub450\uc0ac\uac00 /80 (\uc791\uc5c5\uc790 \ub178\ub4dc\ub2f9) \uc774\uba74 \ucd5c\ub300 10^14 IPv6 \uc8fc\uc18c\uac00 \uc0dd\uc131\ub418\uba70, \uc81c\ud55c \uc694\uc18c\ub294 \ub354 \uc774\uc0c1 IP\uac00 \uc544\ub2c8\ub77c \ud30c\ub4dc\uc758 \ubc00\ub3c4\uc785\ub2c8\ub2e4 (\ucc38\uace0 \uc790\ub8cc \uae30\uc900). IPv6 \uc811\ub450\uc0ac \ud560\ub2f9\uc740 EKS \uc791\uc5c5\uc790 \ub178\ub4dc \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uc2dc\uc5d0\ub9cc \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c\ub97c \uc801\uc2dc\uc5d0 \ud560\ub2f9\ud558\uae30 \uc704\ud55c VPC CNI \ud50c\ub7ec\uadf8\uc778 (ipamd) \uc5d0\uc11c \uc0dd\uc131\ub418\ub294 API \ud638\ucd9c \uc18d\ub3c4 \uc81c\ud55c\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0\uc11c \ud30c\ub4dc \uc774\ud0c8\uc774 \uc2ec\ud55c EKS/IPv4 \ud074\ub7ec\uc2a4\ud130\uac00 \uc885\uc885 \uc9c0\uc5f0\ub418\ub294 \uc2dc\ub098\ub9ac\uc624\ub97c \uc644\ud654\ud558\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c VPC-CNI \ud50c\ub7ec\uadf8\uc778 \uace0\uae09 \ub178\ube0c \ud29c\ub2dd WARM_IP/ENI , MINIMUM_IP \uc744 \ubd88\ud544\uc694\ud558\uac8c \ub9cc\ub4dc\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 IPv6 \uc791\uc5c5\uc790 \ub178\ub4dc ENI (\uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4) \ub97c \ud655\ub300\ud55c \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 EKS \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\ub294 \ud574\ub2f9 DNS \ud56d\ubaa9\uacfc \ud568\uaed8 IPv4 \ubc0f IPv6 \uc8fc\uc18c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud2b9\uc815 \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \uacbd\uc6b0 \uc774\uc911 \uc2a4\ud0dd \uc11c\ube0c\ub137\uc758 \ub2e8\uc77c IPv4 \uc8fc\uc18c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. IPv6\uc5d0 \ub300\ud55c EKS \uc9c0\uc6d0\uc744 \ud1b5\ud574 \ub3c5\ubcf4\uc801\uc778 \uc678\ubd80 \uc804\uc6a9 IPv4 \ubaa8\ub378\uc744 \ud1b5\ud574 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 (AWS, \uc628\ud504\ub808\ubbf8\uc2a4, \uc778\ud130\ub137) \uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub294 Pod\uc5d0 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\uace0 \uad6c\uc131\ud558\ub294 VPC CNI \ud50c\ub7ec\uadf8\uc778\uc758 \ubcf4\uc870 \uae30\ub2a5\uc778 \ud638\uc2a4\ud2b8-\ub85c\uceec CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 169.254.172.0/22 \ubc94\uc704\uc758 \ud30c\ub4dc\uc5d0 \ub300\ud574 \ud638\uc2a4\ud2b8\ubcc4\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc5c6\ub294 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IPv4 \uc8fc\uc18c\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uace0\uc720\ud55c \uac83\uc73c\ub85c \uc791\uc5c5\uc790 \ub178\ub4dc \uc774\uc678\uc758 \ub2e4\ub978 \uc8fc\uc18c\ub294 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . 169.254.172.0/22\ub294 \ub300\uaddc\ubaa8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 1024\uac1c\uc758 \uace0\uc720\ud55c IPv4 \uc8fc\uc18c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud074\ub7ec\uc2a4\ud130 \uacbd\uacc4 \uc678\ubd80 (\uc778\ud130\ub137 \uc544\ub2d8) \uc5d0 \uc788\ub294 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 IPv6 Pod\uc758 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc704 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ud30c\ub4dc\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c DNS \uc870\ud68c\ub97c \uc218\ud589\ud558\uace0, IPv4 \u201cA\u201d \uc751\ub2f5\uc744 \ubc1b\uc73c\uba74 \ud30c\ub4dc\uc758 \ub178\ub4dc \uc804\uc6a9 \uace0\uc720 IPv4 \uc8fc\uc18c\uac00 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658 (SNAT) \uc744 \ud1b5\ud574 EC2 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ub41c \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud504\ub77c\uc774\ube57 IPv4 (VPC) \uc8fc\uc18c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c EK/IPv6 \ud30c\ub4dc\ub294 \ud37c\ube14\ub9ad IPv4 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\ud130\ub137\uc744 \ud1b5\ud574 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud574\uc57c \ube44\uc2b7\ud55c \ud750\ub984\uc774 \uc874\uc7ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud074\ub7ec\uc2a4\ud130 \uacbd\uacc4 \uc678\ubd80\uc758 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 IPv6 Pod\uc758 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4 (\uc778\ud130\ub137 \ub77c\uc6b0\ud305 \uac00\ub2a5). \uc704 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ud30c\ub4dc\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c DNS \uc870\ud68c\ub97c \uc218\ud589\ud558\uace0, IPv4 \u201cA\u201d \uc751\ub2f5\uc744 \ubc1b\uc73c\uba74 \ud30c\ub4dc\uc758 \ub178\ub4dc \uc804\uc6a9 \uace0\uc720 IPv4 \uc8fc\uc18c\ub294 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658 (SNAT) \uc744 \ud1b5\ud574 EC2 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ub41c \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud504\ub77c\uc774\ube57 IPv4 (VPC) \uc8fc\uc18c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud3ec\ub4dc IPv4 \uc8fc\uc18c (\uc18c\uc2a4 IPv4: EC2 \uae30\ubcf8 IP) \ub294 IPv4 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub85c \ub77c\uc6b0\ud305\ub418\uba70, \uc5ec\uae30\uc11c EC2 \uae30\ubcf8 IP\ub294 \uc720\ud6a8\ud55c \uc778\ud130\ub137 \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c IPv4 \ud37c\ube14\ub9ad IP \uc8fc\uc18c (NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ud560\ub2f9 \ud37c\ube14\ub9ad IP) \ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \ub178\ub4dc \uac04\uc758 \ubaa8\ub4e0 \ud30c\ub4dc \uac04 \ud1b5\uc2e0\uc740 \ud56d\uc0c1 IPv6 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. VPC CNI\ub294 IPv4 \uc5f0\uacb0\uc744 \ucc28\ub2e8\ud558\uba74\uc11c IPv6\ub97c \ucc98\ub9ac\ud558\ub3c4\ub85d iptables\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub294 \uace0\uc720\ud55c \ub85c\uceec IPv6 \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c (ULA) \uc5d0\uc11c IPv6 \uc8fc\uc18c (\ud074\ub7ec\uc2a4\ud130IP) \ub9cc \uc218\uc2e0\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc6a9 ULA \uc11c\ube44\uc2a4 CIDR\uc740 EKS \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \ub2e8\uacc4\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uba70 \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud30c\ub4dc\uc5d0\uc11c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub85c\uc758 \ud750\ub984\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc11c\ube44\uc2a4\ub294 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\ud130\ub137\uc5d0 \ub178\ucd9c\ub429\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 \ud37c\ube14\ub9ad IPv4 \ubc0f IPv6 \uc8fc\uc18c, \uc989 \ub4c0\uc5bc \uc2a4\ud0dd \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 IPv4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uacbd\uc6b0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 IPv4\uc5d0\uc11c IPv6\uc73c\ub85c\uc758 \ubcc0\ud658\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ud37c\ube14\ub9ad \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0dd\uc131\ud558\uc5ec \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \uc788\ub294 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub85c\ub4dc \ubc38\ub7f0\uc2f1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \uc778\uadf8\ub808\uc2a4 \uae30\ubc18 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc778\ud130\ub137 IPv4 \uc0ac\uc6a9\uc790\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucc38\uace0: \uc704 \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uc758 \ucd5c\uc2e0 \ubc84\uc804 \uc744 \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 <-> \ub370\uc774\ud130 \ud50c\ub808\uc778 \ud1b5\uc2e0 \u00b6 EKS\ub294 \ub4c0\uc5bc \uc2a4\ud0dd \ubaa8\ub4dc (IPv4/IPv6) \uc5d0\uc11c \ud06c\ub85c\uc2a4 \uc5b4\uce74\uc6b4\ud2b8 ENI (X-eni) \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. kubelet \ubc0f kube-proxy\uc640 \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uad6c\uc131 \uc694\uc18c\ub294 \uc774\uc911 \uc2a4\ud0dd\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uacfc kube-proxy\ub294 \ud638\uc2a4\ud2b8\ub124\ud2b8\uc6cc\ud06c \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc5f0\uacb0\ub41c IPv4 \ubc0f IPv6 \uc8fc\uc18c \ubaa8\ub450\uc5d0 \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub294 IPv6 \uae30\ubc18\uc778 X-ENI\ub97c \ud1b5\ud574 \ud30c\ub4dc \ubc0f \ub178\ub4dc \ucef4\ud3ec\ub10c\ud2b8\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 X-ENI\ub97c \ud1b5\ud574 API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\uba70, \ud30c\ub4dc\uc640 API-\uc11c\ubc84 \uac04 \ud1b5\uc2e0\uc740 \ud56d\uc0c1 IPv6 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 IPv4 EKS API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc720\uc9c0 \u00b6 EKS API\ub294 IPv4\uc5d0\uc11c\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. IPv6 \uc804\uc6a9 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 API\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\ub294 (1) IPv6\uc640 IPv4 \ud638\uc2a4\ud2b8 \uac04\uc758 \ud1b5\uc2e0\uc744 \uc6a9\uc774\ud558\uac8c \ud558\ub294 NAT64/DNS64\uc640 \uac19\uc740 IPv6 \uc804\ud658 \uba54\ucee4\ub2c8\uc998\uacfc (2) IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ubcc0\ud658\uc744 \uc9c0\uc6d0\ud558\ub294 DNS \uc11c\ube44\uc2a4\ub97c \uc9c0\uc6d0\ud574\uc57c \ud569\ub2c8\ub2e4. \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc77c\uc815 \u00b6 \ub2e8\uc77c IPv6 \uc811\ub450\uc0ac\ub294 \ub2e8\uc77c \ub178\ub4dc\uc5d0\uc11c \ub9ce\uc740 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uae30\uc5d0 \ucda9\ubd84\ud558\ub2e4.\ub610\ud55c \uc774\ub294 \ub178\ub4dc\uc758 \ucd5c\ub300 \ud3ec\ub4dc \uc218\uc5d0 \ub300\ud55c ENI \ubc0f IP \uc81c\ud55c\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uc81c\uac70\ud569\ub2c8\ub2e4. IPv6\ub294 \ucd5c\ub300 POD\uc5d0 \ub300\ud55c \uc9c1\uc811\uc801\uc778 \uc885\uc18d\uc131\uc744 \uc81c\uac70\ud558\uc9c0\ub9cc m5.large\uc640 \uac19\uc740 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uba74 IP \uc8fc\uc18c\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud558\uae30 \ud6e8\uc52c \uc804\uc5d0 \uc778\uc2a4\ud134\uc2a4\uc758 CPU\uc640 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI ID\uac00 \uc788\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 EKS \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc \uac12\uc744 \uc9c1\uc811 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ((\uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218 (\ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 \uc811\ub450\uc0ac \uc218-1)* 16) + 2 ((3 ENIs) ((10 secondary IPs per ENI-1) 16)) + 2 = 460 (real) \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc790\ub3d9\uc73c\ub85c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc73c\ub85c \uc778\ud55c \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc2e4\ud328\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ucd5c\ub300 \ud30c\ub4dc \uc218\uc5d0 \ub300\ud55c EKS \uad8c\uc7a5\uac12\uc744 \ubcc0\uacbd\ud558\uc9c0 \ub9c8\uc138\uc694. \uae30\uc874\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc758 \ubaa9\uc801 \ud3c9\uac00 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774 \ud604\uc7ac \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 Amazon EKS\ub294 IPv6\uc5d0\uc11c \ud574\ub2f9 \ub124\ud2b8\uc6cc\ud0b9 \uc694\uad6c \uc0ac\ud56d\uc744 \uc7ac\ud3c9\uac00\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 IPv6\uc5d0\uc11c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d(\uc608: \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc704\ud55c \ubcc4\ub3c4\uc758 \ub124\ud2b8\uc6cc\ud06c)\uc744 \ucda9\uc871\ud558\ub294 \uacbd\uc6b0 EKS \ub85c\ub4dc\ub9f5 \uc694\uccad \uc744 \uc81c\ucd9c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EKS/IPv6 \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\uac8c\uc774\ud2b8 \ud3ec\ub4dc \u00b6 EKS\ub294 \ud30c\uac8c\uc774\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc6a9 IPv6\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub294 VPC CIDR \ubc94\uc704 (IPv4&IPv6) \uc5d0\uc11c \ubd84\ud560\ub41c IPv6 \ubc0f VPC \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c EKS/Fargate \ud3ec\ub4dc \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \ubc00\ub3c4\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \ubc0f IPv6 \uc8fc\uc18c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud5a5\ud6c4 \uc131\uc7a5\uc5d0 \ub300\ube44\ud558\uc5ec \ub4c0\uc5bc \uc2a4\ud0dd \uc11c\ube0c\ub137/vPC CIDR\uc758 \ud06c\uae30\ub97c \uc870\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \uc8fc\uc18c\uac00 \uc5c6\uc73c\uba74 IPv6 \uc0ac\uc6a9 \uac00\ub2a5 \uc8fc\uc18c\uc640 \uc0c1\uad00\uc5c6\uc774 \uc0c8 Fargate Pod\ub97c \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec (LBC) \ubc30\ud3ec \u00b6 \uc5c5\uc2a4\ud2b8\ub9bc \uc778\ud2b8\ub9ac \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 IPv6\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \uc560\ub4dc\uc628\uc758 \ucd5c\uc2e0 \ubc84\uc804 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.LBC\ub294 \"alb.ingress.kubernetes.io/ip-address type: dualstack\" \ubc0f `\"alb.ingress.kubernetes.io/target-type: ip\"\"\ub77c\ub294 \uc8fc\uc11d\uc774 \ub2ec\ub9b0 \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4/\uc778\uadf8\ub808\uc2a4 \uc815\uc758\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc774\uc911 \uc2a4\ud0dd NLB \ub610\ub294 \uc774\uc911 \uc2a4\ud0dd ALB\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. AWS \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 \ub4c0\uc5bc \uc2a4\ud0dd UDP \ud504\ub85c\ud1a0\ucf5c \uc8fc\uc18c \uc720\ud615\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc9e7\uc740 \uc2e4\uc2dc\uac04 \uc2a4\ud2b8\ub9ac\ubc0d, \uc628\ub77c\uc778 \uac8c\uc784 \ubc0f IoT\uc5d0 \ub300\ud55c \uac15\ub825\ud55c \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 IPv4 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.UDP \uc11c\ube44\uc2a4\uc758 \uc0c1\ud0dc \uc810\uac80 \uad00\ub9ac\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \u201cUDP \ud2b8\ub798\ud53d\uc744 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\u201d \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. IMDSv2\uc5d0 \ub300\ud55c \uc758\uc874\uc131 \u00b6 IPv6 \ubaa8\ub4dc\uc758 EKS\ub294 \uc544\uc9c1 IMDSv2 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. IMDSv2\uac00 EKS/IPv6\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \ub370 \ubc29\ud574\uac00 \ub418\ub294 \uacbd\uc6b0 \uc9c0\uc6d0 \ud2f0\ucf13\uc744 \uc5ec\uc2ed\uc2dc\uc624.","title":"IPv6 EKS \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589"},{"location":"networking/ipv6/index.kr/#ipv6-eks","text":"IPv6 \ubaa8\ub4dc\uc758 EKS\ub294 \ub300\uaddc\ubaa8 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc790\uc8fc \ub098\ud0c0\ub098\ub294 IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. EKS\uc758 IPv6 \uc9c0\uc6d0\uc740 IPv4 \uc8fc\uc18c \uacf5\uac04\uc758 \uc81c\ud55c\ub41c \ud06c\uae30\ub85c \uc778\ud574 \ubc1c\uc0dd\ud558\ub294 IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \uc911\uc810\uc744 \ub450\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub9ce\uc740 \uace0\uac1d\uc774 \uc81c\uae30\ud55c \uc911\uc694\ud55c \uc6b0\ub824 \uc0ac\ud56d\uc774\uba70 Kubernetes\uc758 \u201c IPv4/IPv6 \uc774\uc911 \uc2a4\ud0dd \u201c \uae30\ub2a5\uacfc\ub294 \ub2e4\ub985\ub2c8\ub2e4. \ub610\ud55c EKS/IPv6\ub294 IPv6 CIDR\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uacbd\uacc4\ub97c \uc0c1\ud638 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \uc720\uc5f0\uc131\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c CIDR \uc911\ubcf5\uc73c\ub85c \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc744 \ucd5c\uc18c\ud654\ud558\uc5ec 2\uc911 \ubb38\uc81c(\ud074\ub7ec\uc2a4\ud130 \ub0b4, \ud074\ub7ec\uc2a4\ud130 \uac04)\ub97c \ud574\uacb0\ud569\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud3ec\ub4dc\uc640 \uc11c\ube44\uc2a4\ub294 \ub808\uac70\uc2dc IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640\uc758 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\uba74\uc11c IPv6 \uc8fc\uc18c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \uc678\ubd80 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uae30\ub2a5\uacfc \ud3ec\ub4dc\uac00 \uc678\ubd80 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. Amazon EKS IPv6 \uc9c0\uc6d0\uc740 \ub124\uc774\ud2f0\ube0c VPC IPv6 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud569\ub2c8\ub2e4. \uac01 VPC\uc5d0\ub294 IPv4 \uc8fc\uc18c \uc811\ub450\uc0ac (CIDR \ube14\ub85d \ud06c\uae30\ub294 /16\uc5d0\uc11c /28\uae4c\uc9c0 \uac00\ub2a5) \ubc0f \uc544\ub9c8\uc874 GUA (\uae00\ub85c\ubc8c \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c) \ub0b4\uc758 \uace0\uc720\ud55c /56 IPv6 \uc8fc\uc18c \uc811\ub450\uc0ac (\uace0\uc815) \uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. VPC\uc758 \uac01 \uc11c\ube0c\ub137\uc5d0 /64 \uc8fc\uc18c \uc811\ub450\uc0ac\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub77c\uc6b0\ud305 \ud14c\uc774\ube14, \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4 \uc81c\uc5b4 \ubaa9\ub85d, \ud53c\uc5b4\ub9c1, DNS \ud655\uc778\uacfc \uac19\uc740 IPv4 \uae30\ub2a5\uc740 IPv6 \uc9c0\uc6d0 VPC\uc5d0\uc11c \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. VPC\ub97c \uc774\uc911 \uc2a4\ud0dd VPC\ub77c\uace0 \ud558\uba70 \uc774\uc911 \uc2a4\ud0dd \uc11c\ube0c\ub137\uc5d0 \uc774\uc5b4 \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EK/IPv6 \uae30\ubc18 \ud074\ub7ec\uc2a4\ud130\ub97c \uc9c0\uc6d0\ud558\ub294 IPv4&IPv6 VPC \uae30\ubc18 \ud328\ud134\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. IPv6 \ud658\uacbd\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc8fc\uc18c\ub97c \uc778\ud130\ub137\uc73c\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC\ub294 \ud37c\ube14\ub9ad GUA \ubc94\uc704\uc5d0\uc11c IPv6 CIDR\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. VPC\ub294 RFC 4193 (fd00: :/8 \ub610\ub294 fc00: :/8) \uc5d0 \uc815\uc758\ub41c \uace0\uc720 \ub85c\uceec \uc8fc\uc18c (ULA) \ubc94\uc704\uc5d0\uc11c \ud504\ub77c\uc774\ube57 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc0ac\uc6a9\uc790\uac00 \uc18c\uc720\ud55c IPv6 CIDR\uc744 \ud560\ub2f9\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc785\ub2c8\ub2e4. VPC\uc5d0 \uc678\ubd80 \uc804\uc6a9 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 (EIGW) \ub97c \uad6c\ud604\ud558\uc5ec \ub4e4\uc5b4\uc624\ub294 \ud2b8\ub798\ud53d\uc740 \ubaa8\ub450 \ucc28\ub2e8\ud558\uba74\uc11c \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc740 \ud5c8\uc6a9\ud568\uc73c\ub85c\uc368 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\ud130\ub137\uc73c\ub85c \ub098\uac00\ub294 \uac83\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 Pod IPv6 \uc778\ud130\ub137 \uc1a1\uc2e0 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. IPv6 \uc11c\ube0c\ub137\uc744 \uad6c\ud604\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\ub294 VPC \uc0ac\uc6a9 \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\uc640 \ud30c\ub4dc\ub294 \ud37c\ube14\ub9ad IPv6 \uc8fc\uc18c\ub97c \uac16\uc2b5\ub2c8\ub2e4. EKS\ub294 \uace0\uc720\ud55c \ub85c\uceec IPv6 \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c (ULA) \ub97c \uae30\ubc18\uc73c\ub85c \uc11c\ube44\uc2a4\uc5d0 IPv6 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc758 ULA \uc11c\ube44\uc2a4 CIDR\uc740 IPv4\uc640 \ub2ec\ub9ac \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \ub2e8\uacc4\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uba70 \uc9c0\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \uae30\ubc18 \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub370\uc774\ud130 \ud50c\ub79c \uae30\ubc18 \ud328\ud134\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.","title":"IPv6 EKS \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589"},{"location":"networking/ipv6/index.kr/#_1","text":"EKS/IPv6\ub294 \uc811\ub450\uc0ac \ubaa8\ub4dc (VPC-CNI \ud50c\ub7ec\uadf8\uc778 ENI IP \ud560\ub2f9 \ubaa8\ub4dc) \uc5d0\uc11c\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uc811\ub450\uc0ac \ubaa8\ub4dc \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. \uc811\ub450\uc0ac \ud560\ub2f9\uc740 Nitro \uae30\ubc18 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub9cc \uc791\ub3d9\ud558\ubbc0\ub85c EKS/IPv6\ub294 \ud074\ub7ec\uc2a4\ud130 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 EC2 Nitro \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c IPv6 \uc811\ub450\uc0ac\uac00 /80 (\uc791\uc5c5\uc790 \ub178\ub4dc\ub2f9) \uc774\uba74 \ucd5c\ub300 10^14 IPv6 \uc8fc\uc18c\uac00 \uc0dd\uc131\ub418\uba70, \uc81c\ud55c \uc694\uc18c\ub294 \ub354 \uc774\uc0c1 IP\uac00 \uc544\ub2c8\ub77c \ud30c\ub4dc\uc758 \ubc00\ub3c4\uc785\ub2c8\ub2e4 (\ucc38\uace0 \uc790\ub8cc \uae30\uc900). IPv6 \uc811\ub450\uc0ac \ud560\ub2f9\uc740 EKS \uc791\uc5c5\uc790 \ub178\ub4dc \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uc2dc\uc5d0\ub9cc \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c\ub97c \uc801\uc2dc\uc5d0 \ud560\ub2f9\ud558\uae30 \uc704\ud55c VPC CNI \ud50c\ub7ec\uadf8\uc778 (ipamd) \uc5d0\uc11c \uc0dd\uc131\ub418\ub294 API \ud638\ucd9c \uc18d\ub3c4 \uc81c\ud55c\uc73c\ub85c \uc778\ud574 \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1\uc5d0\uc11c \ud30c\ub4dc \uc774\ud0c8\uc774 \uc2ec\ud55c EKS/IPv4 \ud074\ub7ec\uc2a4\ud130\uac00 \uc885\uc885 \uc9c0\uc5f0\ub418\ub294 \uc2dc\ub098\ub9ac\uc624\ub97c \uc644\ud654\ud558\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c VPC-CNI \ud50c\ub7ec\uadf8\uc778 \uace0\uae09 \ub178\ube0c \ud29c\ub2dd WARM_IP/ENI , MINIMUM_IP \uc744 \ubd88\ud544\uc694\ud558\uac8c \ub9cc\ub4dc\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 IPv6 \uc791\uc5c5\uc790 \ub178\ub4dc ENI (\uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4) \ub97c \ud655\ub300\ud55c \uac83\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 EKS \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\ub294 \ud574\ub2f9 DNS \ud56d\ubaa9\uacfc \ud568\uaed8 IPv4 \ubc0f IPv6 \uc8fc\uc18c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud2b9\uc815 \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \uacbd\uc6b0 \uc774\uc911 \uc2a4\ud0dd \uc11c\ube0c\ub137\uc758 \ub2e8\uc77c IPv4 \uc8fc\uc18c\ub9cc \uc0ac\uc6a9\ub429\ub2c8\ub2e4. IPv6\uc5d0 \ub300\ud55c EKS \uc9c0\uc6d0\uc744 \ud1b5\ud574 \ub3c5\ubcf4\uc801\uc778 \uc678\ubd80 \uc804\uc6a9 IPv4 \ubaa8\ub378\uc744 \ud1b5\ud574 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 (AWS, \uc628\ud504\ub808\ubbf8\uc2a4, \uc778\ud130\ub137) \uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub294 Pod\uc5d0 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\uace0 \uad6c\uc131\ud558\ub294 VPC CNI \ud50c\ub7ec\uadf8\uc778\uc758 \ubcf4\uc870 \uae30\ub2a5\uc778 \ud638\uc2a4\ud2b8-\ub85c\uceec CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 169.254.172.0/22 \ubc94\uc704\uc758 \ud30c\ub4dc\uc5d0 \ub300\ud574 \ud638\uc2a4\ud2b8\ubcc4\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc5c6\ub294 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IPv4 \uc8fc\uc18c\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uace0\uc720\ud55c \uac83\uc73c\ub85c \uc791\uc5c5\uc790 \ub178\ub4dc \uc774\uc678\uc758 \ub2e4\ub978 \uc8fc\uc18c\ub294 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . 169.254.172.0/22\ub294 \ub300\uaddc\ubaa8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 1024\uac1c\uc758 \uace0\uc720\ud55c IPv4 \uc8fc\uc18c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud074\ub7ec\uc2a4\ud130 \uacbd\uacc4 \uc678\ubd80 (\uc778\ud130\ub137 \uc544\ub2d8) \uc5d0 \uc788\ub294 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 IPv6 Pod\uc758 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc704 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ud30c\ub4dc\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c DNS \uc870\ud68c\ub97c \uc218\ud589\ud558\uace0, IPv4 \u201cA\u201d \uc751\ub2f5\uc744 \ubc1b\uc73c\uba74 \ud30c\ub4dc\uc758 \ub178\ub4dc \uc804\uc6a9 \uace0\uc720 IPv4 \uc8fc\uc18c\uac00 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658 (SNAT) \uc744 \ud1b5\ud574 EC2 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ub41c \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud504\ub77c\uc774\ube57 IPv4 (VPC) \uc8fc\uc18c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c EK/IPv6 \ud30c\ub4dc\ub294 \ud37c\ube14\ub9ad IPv4 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\ud130\ub137\uc744 \ud1b5\ud574 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud574\uc57c \ube44\uc2b7\ud55c \ud750\ub984\uc774 \uc874\uc7ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud074\ub7ec\uc2a4\ud130 \uacbd\uacc4 \uc678\ubd80\uc758 IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 IPv6 Pod\uc758 \ud750\ub984\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4 (\uc778\ud130\ub137 \ub77c\uc6b0\ud305 \uac00\ub2a5). \uc704 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \ud30c\ub4dc\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c DNS \uc870\ud68c\ub97c \uc218\ud589\ud558\uace0, IPv4 \u201cA\u201d \uc751\ub2f5\uc744 \ubc1b\uc73c\uba74 \ud30c\ub4dc\uc758 \ub178\ub4dc \uc804\uc6a9 \uace0\uc720 IPv4 \uc8fc\uc18c\ub294 \uc18c\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc8fc\uc18c \ubcc0\ud658 (SNAT) \uc744 \ud1b5\ud574 EC2 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ub41c \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud504\ub77c\uc774\ube57 IPv4 (VPC) \uc8fc\uc18c\ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud3ec\ub4dc IPv4 \uc8fc\uc18c (\uc18c\uc2a4 IPv4: EC2 \uae30\ubcf8 IP) \ub294 IPv4 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub85c \ub77c\uc6b0\ud305\ub418\uba70, \uc5ec\uae30\uc11c EC2 \uae30\ubcf8 IP\ub294 \uc720\ud6a8\ud55c \uc778\ud130\ub137 \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c IPv4 \ud37c\ube14\ub9ad IP \uc8fc\uc18c (NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ud560\ub2f9 \ud37c\ube14\ub9ad IP) \ub85c \ubcc0\ud658\ub429\ub2c8\ub2e4. \ub178\ub4dc \uac04\uc758 \ubaa8\ub4e0 \ud30c\ub4dc \uac04 \ud1b5\uc2e0\uc740 \ud56d\uc0c1 IPv6 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. VPC CNI\ub294 IPv4 \uc5f0\uacb0\uc744 \ucc28\ub2e8\ud558\uba74\uc11c IPv6\ub97c \ucc98\ub9ac\ud558\ub3c4\ub85d iptables\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub294 \uace0\uc720\ud55c \ub85c\uceec IPv6 \uc720\ub2c8\uce90\uc2a4\ud2b8 \uc8fc\uc18c (ULA) \uc5d0\uc11c IPv6 \uc8fc\uc18c (\ud074\ub7ec\uc2a4\ud130IP) \ub9cc \uc218\uc2e0\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc6a9 ULA \uc11c\ube44\uc2a4 CIDR\uc740 EKS \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \ub2e8\uacc4\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uba70 \uc218\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud30c\ub4dc\uc5d0\uc11c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub85c\uc758 \ud750\ub984\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc11c\ube44\uc2a4\ub294 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\ud130\ub137\uc5d0 \ub178\ucd9c\ub429\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 \ud37c\ube14\ub9ad IPv4 \ubc0f IPv6 \uc8fc\uc18c, \uc989 \ub4c0\uc5bc \uc2a4\ud0dd \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 IPv4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc758 \uacbd\uc6b0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 IPv4\uc5d0\uc11c IPv6\uc73c\ub85c\uc758 \ubcc0\ud658\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ud37c\ube14\ub9ad \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0dd\uc131\ud558\uc5ec \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \uc788\ub294 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub85c\ub4dc \ubc38\ub7f0\uc2f1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 EKS/IPv6 \uc778\uadf8\ub808\uc2a4 \uae30\ubc18 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uc778\ud130\ub137 IPv4 \uc0ac\uc6a9\uc790\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucc38\uace0: \uc704 \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uc758 \ucd5c\uc2e0 \ubc84\uc804 \uc744 \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uac1c\uc694"},{"location":"networking/ipv6/index.kr/#eks-","text":"EKS\ub294 \ub4c0\uc5bc \uc2a4\ud0dd \ubaa8\ub4dc (IPv4/IPv6) \uc5d0\uc11c \ud06c\ub85c\uc2a4 \uc5b4\uce74\uc6b4\ud2b8 ENI (X-eni) \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. kubelet \ubc0f kube-proxy\uc640 \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uad6c\uc131 \uc694\uc18c\ub294 \uc774\uc911 \uc2a4\ud0dd\uc744 \uc9c0\uc6d0\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uacfc kube-proxy\ub294 \ud638\uc2a4\ud2b8\ub124\ud2b8\uc6cc\ud06c \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc\uc758 \uae30\ubcf8 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uc5f0\uacb0\ub41c IPv4 \ubc0f IPv6 \uc8fc\uc18c \ubaa8\ub450\uc5d0 \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub294 IPv6 \uae30\ubc18\uc778 X-ENI\ub97c \ud1b5\ud574 \ud30c\ub4dc \ubc0f \ub178\ub4dc \ucef4\ud3ec\ub10c\ud2b8\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 X-ENI\ub97c \ud1b5\ud574 API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud558\uba70, \ud30c\ub4dc\uc640 API-\uc11c\ubc84 \uac04 \ud1b5\uc2e0\uc740 \ud56d\uc0c1 IPv6 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud55c\ub2e4.","title":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 &lt;-&gt; \ub370\uc774\ud130 \ud50c\ub808\uc778 \ud1b5\uc2e0"},{"location":"networking/ipv6/index.kr/#_2","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/ipv6/index.kr/#ipv4-eks-api","text":"EKS API\ub294 IPv4\uc5d0\uc11c\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub3c4 \ud3ec\ud568\ub429\ub2c8\ub2e4. IPv6 \uc804\uc6a9 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 API\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c\ub294 (1) IPv6\uc640 IPv4 \ud638\uc2a4\ud2b8 \uac04\uc758 \ud1b5\uc2e0\uc744 \uc6a9\uc774\ud558\uac8c \ud558\ub294 NAT64/DNS64\uc640 \uac19\uc740 IPv6 \uc804\ud658 \uba54\ucee4\ub2c8\uc998\uacfc (2) IPv4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ubcc0\ud658\uc744 \uc9c0\uc6d0\ud558\ub294 DNS \uc11c\ube44\uc2a4\ub97c \uc9c0\uc6d0\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"IPv4 EKS API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc720\uc9c0"},{"location":"networking/ipv6/index.kr/#_3","text":"\ub2e8\uc77c IPv6 \uc811\ub450\uc0ac\ub294 \ub2e8\uc77c \ub178\ub4dc\uc5d0\uc11c \ub9ce\uc740 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uae30\uc5d0 \ucda9\ubd84\ud558\ub2e4.\ub610\ud55c \uc774\ub294 \ub178\ub4dc\uc758 \ucd5c\ub300 \ud3ec\ub4dc \uc218\uc5d0 \ub300\ud55c ENI \ubc0f IP \uc81c\ud55c\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uc81c\uac70\ud569\ub2c8\ub2e4. IPv6\ub294 \ucd5c\ub300 POD\uc5d0 \ub300\ud55c \uc9c1\uc811\uc801\uc778 \uc885\uc18d\uc131\uc744 \uc81c\uac70\ud558\uc9c0\ub9cc m5.large\uc640 \uac19\uc740 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \uc811\ub450\uc0ac \ucca8\ubd80 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uba74 IP \uc8fc\uc18c\ub97c \ubaa8\ub450 \uc0ac\uc6a9\ud558\uae30 \ud6e8\uc52c \uc804\uc5d0 \uc778\uc2a4\ud134\uc2a4\uc758 CPU\uc640 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI ID\uac00 \uc788\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 EKS \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc \uac12\uc744 \uc9c1\uc811 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec IPv6 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ((\uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218 (\ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 \uc811\ub450\uc0ac \uc218-1)* 16) + 2 ((3 ENIs) ((10 secondary IPs per ENI-1) 16)) + 2 = 460 (real) \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc790\ub3d9\uc73c\ub85c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc73c\ub85c \uc778\ud55c \ud30c\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc2e4\ud328\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ucd5c\ub300 \ud30c\ub4dc \uc218\uc5d0 \ub300\ud55c EKS \uad8c\uc7a5\uac12\uc744 \ubcc0\uacbd\ud558\uc9c0 \ub9c8\uc138\uc694.","title":"\ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc77c\uc815"},{"location":"networking/ipv6/index.kr/#_4","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc774 \ud604\uc7ac \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 Amazon EKS\ub294 IPv6\uc5d0\uc11c \ud574\ub2f9 \ub124\ud2b8\uc6cc\ud0b9 \uc694\uad6c \uc0ac\ud56d\uc744 \uc7ac\ud3c9\uac00\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. IPv4 \uace0\uac08 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 IPv6\uc5d0\uc11c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d(\uc608: \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc704\ud55c \ubcc4\ub3c4\uc758 \ub124\ud2b8\uc6cc\ud06c)\uc744 \ucda9\uc871\ud558\ub294 \uacbd\uc6b0 EKS \ub85c\ub4dc\ub9f5 \uc694\uccad \uc744 \uc81c\ucd9c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\uae30\uc874\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc758 \ubaa9\uc801 \ud3c9\uac00"},{"location":"networking/ipv6/index.kr/#eksipv6","text":"EKS\ub294 \ud30c\uac8c\uc774\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc6a9 IPv6\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub294 VPC CIDR \ubc94\uc704 (IPv4&IPv6) \uc5d0\uc11c \ubd84\ud560\ub41c IPv6 \ubc0f VPC \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c EKS/Fargate \ud3ec\ub4dc \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \ubc00\ub3c4\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \ubc0f IPv6 \uc8fc\uc18c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud5a5\ud6c4 \uc131\uc7a5\uc5d0 \ub300\ube44\ud558\uc5ec \ub4c0\uc5bc \uc2a4\ud0dd \uc11c\ube0c\ub137/vPC CIDR\uc758 \ud06c\uae30\ub97c \uc870\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IPv4 \uc8fc\uc18c\uac00 \uc5c6\uc73c\uba74 IPv6 \uc0ac\uc6a9 \uac00\ub2a5 \uc8fc\uc18c\uc640 \uc0c1\uad00\uc5c6\uc774 \uc0c8 Fargate Pod\ub97c \uc608\uc57d\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"EKS/IPv6 \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\uac8c\uc774\ud2b8 \ud3ec\ub4dc"},{"location":"networking/ipv6/index.kr/#aws-lbc","text":"\uc5c5\uc2a4\ud2b8\ub9bc \uc778\ud2b8\ub9ac \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 IPv6\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \uc560\ub4dc\uc628\uc758 \ucd5c\uc2e0 \ubc84\uc804 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.LBC\ub294 \"alb.ingress.kubernetes.io/ip-address type: dualstack\" \ubc0f `\"alb.ingress.kubernetes.io/target-type: ip\"\"\ub77c\ub294 \uc8fc\uc11d\uc774 \ub2ec\ub9b0 \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4/\uc778\uadf8\ub808\uc2a4 \uc815\uc758\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uc774\uc911 \uc2a4\ud0dd NLB \ub610\ub294 \uc774\uc911 \uc2a4\ud0dd ALB\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. AWS \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub294 \ub4c0\uc5bc \uc2a4\ud0dd UDP \ud504\ub85c\ud1a0\ucf5c \uc8fc\uc18c \uc720\ud615\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc9e7\uc740 \uc2e4\uc2dc\uac04 \uc2a4\ud2b8\ub9ac\ubc0d, \uc628\ub77c\uc778 \uac8c\uc784 \ubc0f IoT\uc5d0 \ub300\ud55c \uac15\ub825\ud55c \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 IPv4 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.UDP \uc11c\ube44\uc2a4\uc758 \uc0c1\ud0dc \uc810\uac80 \uad00\ub9ac\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \u201cUDP \ud2b8\ub798\ud53d\uc744 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\u201d \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec (LBC) \ubc30\ud3ec"},{"location":"networking/ipv6/index.kr/#imdsv2","text":"IPv6 \ubaa8\ub4dc\uc758 EKS\ub294 \uc544\uc9c1 IMDSv2 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. IMDSv2\uac00 EKS/IPv6\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \ub370 \ubc29\ud574\uac00 \ub418\ub294 \uacbd\uc6b0 \uc9c0\uc6d0 \ud2f0\ucf13\uc744 \uc5ec\uc2ed\uc2dc\uc624.","title":"IMDSv2\uc5d0 \ub300\ud55c \uc758\uc874\uc131"},{"location":"networking/loadbalancing/loadbalancing.kr/","text":"{'name': 'English', 'build': True} Kubernetes \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud1b5\ud55c \uc624\ub958 \ubc0f \ud0c0\uc784\uc544\uc6c3 \ubc29\uc9c0 \u00b6 \ud544\uc694\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4 (\uc11c\ube44\uc2a4, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8, \uc778\uadf8\ub808\uc2a4 \ub4f1) \ub97c \uc0dd\uc131\ud55c \ud6c4, \ud30c\ub4dc\ub294 Elastic Load Balancer\ub97c \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 Kubernetes \ud658\uacbd\uc744 \ubcc0\uacbd\ud560 \ub54c \uc624\ub958, \uc2dc\uac04 \ucd08\uacfc \ub610\ub294 \uc5f0\uacb0 \uc7ac\uc124\uc815\uc774 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubcc0\uacbd\uc73c\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \ub610\ub294 \uc870\uc815 \uc791\uc5c5 (\uc218\ub3d9 \ub610\ub294 \uc790\ub3d9) \uc774 \ud2b8\ub9ac\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc774\ub7ec\ud55c \uc624\ub958\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ubb38\uc81c\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\ub97c \uc81c\uc5b4\ud558\ub294 Kubernetes \uc2dc\uc2a4\ud15c\uc774 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \ub300\uc0c1 \ub4f1\ub85d \ubc0f \uc0c1\ud0dc\ub97c \uc81c\uc5b4\ud558\ub294 AWS \uc2dc\uc2a4\ud15c\ubcf4\ub2e4 \ube60\ub974\uac8c \uc2e4\ud589\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc694\uccad\uc744 \uc218\uc2e0\ud560 \uc900\ube44\uac00 \ub418\uae30 \uc804\uc5d0 \ud30c\ub4dc\uac00 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uae30 \uc2dc\uc791\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 Ready \uc0c1\ud0dc\uac00 \ub418\ub294 \ud504\ub85c\uc138\uc2a4\uc640 \ud2b8\ub798\ud53d\uc744 \ud3ec\ub4dc\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc Readiness \u00b6 2019 Kubecon talk \uc5d0\uc11c \ubc1c\ucdcc\ud55c \uc774 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud30c\ub4dc\uac00 \ub808\ub514 \uc0c1\ud0dc\uac00 \ub418\uace0 '\ub85c\ub4dc\ubc38\ub7f0\uc11c' \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uae30 \uc704\ud574 \uac70\uccd0\uc9c4 \ub2e8\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou NodePort \uc11c\ube44\uc2a4\uc758 \uba64\ubc84\uc778 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub2e4\uc74c \ub2e8\uacc4\ub97c \uac70\uce69\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 (\uc989, kubectl \uba85\ub839 \ub610\ub294 \uc2a4\ucf00\uc77c\ub9c1 \uc561\uc158\uc73c\ub85c\ubd80\ud130) \uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud30c\ub4dc\ub294 kube-scheduler \uc5d0 \uc758\ud574 \uc2a4\ucf00\uc904\ub9c1\ub418\uba70 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud560\ub2f9\ub41c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 kubelet\uc740 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uace0 ('watch'\ub97c \ud1b5\ud574) \ub85c\uceec \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \ud1b5\uc2e0\ud558\uc5ec \ud30c\ub4dc\uc5d0 \uc9c0\uc815\ub41c \ucee8\ud14c\uc774\ub108\ub97c \uc2dc\uc791\ud55c\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc2e4\ud589\uc744 \uc2dc\uc791\ud558\uba74 (\uadf8\ub9ac\uace0 \uc120\ud0dd\uc801\uc73c\ub85c ReadinessProbes \ub9cc \uc804\ub2ec\ud558\uba74), kubelet\uc740 kube-apiserver \ub85c \uc5c5\ub370\uc774\ud2b8\ub97c \uc804\uc1a1\ud558\uc5ec \ud30c\ub4dc \uc0c1\ud0dc\ub97c Ready \ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ucee8\ud2b8\ub864\ub7ec\ub294 ('watch'\ub97c \ud1b5\ud574) \uc11c\ube44\uc2a4\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud560 \uc0c8 \ud30c\ub4dc\uac00 Ready \ub77c\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uace0 \uc801\uc808\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubc30\uc5f4\uc5d0 \ud3ec\ub4dc IP/\ud3ec\ud2b8 \ud29c\ud50c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. kube-proxy \ub294 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c iptables \uaddc\uce59\uc5d0 \ucd94\uac00\ud560 \uc0c8 IP/\ud3ec\ud2b8\uac00 \uc788\ub2e4\ub294 \uc5c5\ub370\uc774\ud2b8 ( watch \ub97c \ud1b5\ud574) \ub97c \uc218\uc2e0\ud55c\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc758 \ub85c\uceec iptables \uaddc\uce59\uc774 NodePort \uc11c\ube44\uc2a4\uc758 \ucd94\uac00 \ub300\uc0c1 \ud3ec\ub4dc\ub85c \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \ucc38\uc870 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\uc640 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec (\uc608: AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec) \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 5\ub2e8\uacc4\ub294 kube-proxy \ub300\uc2e0 \uad00\ub828 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4.\uadf8\ub7ec\uba74 \ucee8\ud2b8\ub864\ub7ec\ub294 \ud544\uc694\ud55c \uad6c\uc131 \ub2e8\uacc4 (\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \ub300\uc0c1 \ub4f1\ub85d/\ub4f1\ub85d \ucde8\uc18c) \ub97c \uc218\ud589\ud558\uc5ec \ud2b8\ub798\ud53d\uc774 \uc608\uc0c1\ub300\ub85c \ud750\ub974\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uc885\ub8cc\ub418\uac70\ub098 \uc900\ube44\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\ub85c \ubcc0\uacbd\ub418\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc720\uc0ac\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. API \uc11c\ubc84\ub294 \ucee8\ud2b8\ub864\ub7ec, kubelet \ub610\ub294 kubectl \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c\ubd80\ud130 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc885\ub8cc\ud569\ub2c8\ub2e4. 3~5\ub2e8\uacc4\ub294 \uac70\uae30\uc11c\ubd80\ud130 \uacc4\uc18d\ub418\uc9c0\ub9cc, \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa9\ub85d\uacfc iptables \uaddc\uce59\uc5d0\uc11c \ud30c\ub4dc IP/\ud29c\ud50c\uc744 \uc0bd\uc785\ud558\ub294 \ub300\uc2e0 \uc81c\uac70\ud569\ub2c8\ub2e4. \ubc30\ud3ec\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5 \u00b6 \ub2e4\uc74c\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\ub85c \uc778\ud574 \ud3ec\ub4dc \uad50\uccb4\uac00 \ud2b8\ub9ac\uac70\ub420 \ub54c \ucde8\ud574\uc9c4 \ub2e8\uacc4\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc785\ub2c8\ub2e4. Below is a diagram showing the steps taken when an application deployment triggers the replacement of pods: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou \uc774 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \uc8fc\ubaa9\ud560 \uc810\uc740 \uccab \ubc88\uc9f8 \ud30c\ub4dc\uac00 \u201cReady\u201d \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 \ub450 \ubc88\uc9f8 \ud30c\ub4dc\uac00 \ubc30\ud3ec\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uc804 \uc139\uc158\uc758 4\ub2e8\uacc4\uc640 5\ub2e8\uacc4\ub3c4 \uc704\uc758 \ubc30\ud3ec \uc791\uc5c5\uacfc \ubcd1\ud589\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \uc989, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub2e4\uc74c \ud30c\ub4dc\ub85c \ub118\uc5b4\uac08 \ub54c \uc0c8 \ud30c\ub4dc \uc0c1\ud0dc\ub97c \uc804\ud30c\ud558\ub294 \uc561\uc158\uc774 \uc5ec\uc804\ud788 \uc9c4\ud589 \uc911\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \uc774\uc804 \ubc84\uc804\uc758 \ud30c\ub4dc\ub3c4 \uc885\ub8cc\ud558\ubbc0\ub85c, \ud30c\ub4dc\uac00 Ready \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud588\uc9c0\ub9cc \ubcc0\uacbd \uc0ac\ud56d\uc774 \uacc4\uc18d \uc804\ud30c\ub418\uace0 \uc774\uc804 \ubc84\uc804\uc758 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\ub294 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc124\uba85\ud55c Kubernetes \uc2dc\uc2a4\ud15c\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \ub4f1\ub85d \uc2dc\uac04\uc774\ub098 \uc0c1\ud0dc \ud655\uc778\uc744 \uace0\ub824\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 AWS\uc640 \uac19\uc740 \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790\uc758 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \ubb38\uc81c\uac00 \ub354\uc6b1 \uc545\ud654\ub429\ub2c8\ub2e4. \uc989 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc5c5\ub370\uc774\ud2b8\uac00 \ud3ec\ub4dc \uc804\uccb4\uc5d0 \uac78\uccd0 \uc644\uc804\ud788 \uc21c\ud658\ub420 \uc218 \uc788\uc9c0\ub9cc \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc0c1\ud0dc \uc810\uac80 \uc218\ud589 \ub610\ub294 \uc0c8 \ud30c\ub4dc \ub4f1\ub85d\uc744 \uc644\ub8cc\ud558\uc9c0 \uc54a\uc544 \uc6b4\uc601 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c\ub3c4 \ube44\uc2b7\ud55c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c \uad6c\uc131\uc5d0 \ub530\ub77c \ud30c\ub4dc\uc758 \ub4f1\ub85d\uc744 \ucde8\uc18c\ud558\uace0 \uc0c8 \uc694\uccad \uc218\uc2e0\uc744 \uc911\uc9c0\ud558\ub294 \ub370 1~2\ubd84 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc774\ub7ec\ud55c \ub4f1\ub85d \ucde8\uc18c\ub97c \uc704\ud574 \ub864\ub9c1 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc9c0\uc5f0\uc2dc\ud0a4\uc9c0 \uc54a\uc73c\uba70, \uc774\ub85c \uc778\ud574 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc774\ubbf8 \uc885\ub8cc\ub41c \ub300\uc0c1 \ud30c\ub4dc\uc758 IP/\ud3ec\ud2b8\ub85c \ud2b8\ub798\ud53d\uc744 \uacc4\uc18d \ubcf4\ub0b4\ub294 \uc0c1\ud0dc\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 Kubernetes \uc2dc\uc2a4\ud15c\uc774 AWS Load Balancer \ub3d9\uc791\uc5d0 \ub354 \ubd80\ud569\ud558\ub294 \uc870\uce58\ub97c \ucde8\ud558\ub3c4\ub85d \uad6c\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 IP \ub300\uc0c1 \uc720\ud615 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc774\uc6a9 \u00b6 LoadBalancer \uc720\ud615\uc758 \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c, \uc778\uc2a4\ud134\uc2a4 \ub300\uc0c1 \uc720\ud615 \ub4f1\ub85d\uc744 \ud1b5\ud574 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ub178\ub4dc \ub85c \ud2b8\ub798\ud53d\uc774 \uc804\uc1a1\ub429\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uac01 \ub178\ub4dc\uac00 'NodePort'\uc758 \ud2b8\ub798\ud53d\uc744 \uc11c\ube44\uc2a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5b4\ub808\uc774\uc758 \ud3ec\ub4dc/IP \ud29c\ud50c\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. \uc774 \ud0c0\uac9f\uc740 \ubcc4\ub3c4\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870 \ubc30\uc5f4\uc5d0\ub294 \u201cReady\u201d \ud30c\ub4dc\ub9cc \uc788\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc810\uc744 \uae30\uc5b5\ud558\uc138\uc694. \uc774\ub807\uac8c \ud558\uba74 \uc694\uccad\uc5d0 \ud649\uc774 \ucd94\uac00\ub418\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uad6c\uc131\uc774 \ubcf5\uc7a1\ud574\uc9d1\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \uc704\uc758 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc138\uc158 \uc5b4\ud53c\ub2c8\ud2f0\ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 \uc5b4\ud53c\ub2c8\ud2f0\ub294 \uc5b4\ud53c\ub2c8\ud2f0 \uad6c\uc131\uc5d0 \ub530\ub77c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \ubc31\uc5d4\ub4dc \ub178\ub4dc \uc0ac\uc774\uc5d0\ub9cc \uc720\uc9c0\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \ubc31\uc5d4\ub4dc \ud30c\ub4dc\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud2b8\ub798\ud53d \ud750\ub984\uacfc \ud0c0\uc774\ubc0d\uc744 \uc81c\uc5b4\ud558\uae30\uac00 \ub354 \uc5b4\ub824\uc6cc\uc9d1\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, IP \ub300\uc0c1 \uc720\ud615 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc IP/\ud3ec\ud2b8 \ud29c\ud50c\uc744 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \uc9c1\uc811 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ub300\uc0c1 \ud30c\ub4dc\ub85c\uc758 \ud2b8\ub798\ud53d \uacbd\ub85c\ub97c \ub2e8\uc21c\ud654 \ud569\ub2c8\ub2e4. \uc989 \uc0c8 \ub300\uc0c1\uc774 \ub4f1\ub85d\ub418\uba74 \ub300\uc0c1\uc774 \u201cReady\u201d Pod IP \ubc0f \ud3ec\ud2b8\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uace0, \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \uc0c1\ud0dc \ud655\uc778\uc774 Pod\uc5d0 \uc9c1\uc811 \uc804\ub2ec\ub418\uba70, VPC \ud750\ub984 \ub85c\uadf8\ub97c \uac80\ud1a0\ud558\uac70\ub098 \uc720\ud2f8\ub9ac\ud2f0\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \ub54c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \ud30c\ub4dc \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c IP \ub4f1\ub85d\uc744 \uc0ac\uc6a9\ud558\uba74 NodePort \uaddc\uce59\uc744 \ud1b5\ud574 \uc5f0\uacb0\uc744 \uad00\ub9ac\ud558\ub294 \ub300\uc2e0 \ubc31\uc5d4\ub4dc \ud30c\ub4dc\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc758 \ud0c0\uc774\ubc0d\uacfc \uad6c\uc131\uc744 \uc9c1\uc811 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8 \ud65c\uc6a9 \u00b6 \ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8 \ub294 \ud30c\ub4dc\uac00 \u201c\uc900\ube44 \uc644\ub8cc\u201d \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \ucda9\uc871\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \uc694\uad6c\uc0ac\ud56d\uc774\ub2e4. [...] AWS Load Balancer \ucee8\ud2b8\ub864\ub7ec\ub294 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \uc11c\ube44\uc2a4 \ubc31\uc5d4\ub4dc\ub97c \uad6c\uc131\ud558\ub294 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \uc900\ube44 \uc870\uac74\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ALB/NLB \ub300\uc0c1 \uadf8\ub8f9\uc758 \ud574\ub2f9 \ub300\uc0c1\uc758 \uc0c1\ud0dc\uac00 \u201cHealthy\u201d\ub85c \ud45c\uc2dc\ub418\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ud3ec\ub4dc\uc758 \uc870\uac74 \uc0c1\ud0dc\uac00 'True'\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc0c8\ub85c \uc0dd\uc131\ub41c \ud3ec\ub4dc\uac00 ALB/NLB \ub300\uc0c1 \uadf8\ub8f9\uc5d0\uc11c \u201c\uc815\uc0c1\u201d\uc73c\ub85c \ub418\uc5b4 \ud2b8\ub798\ud53d\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub420 \ub54c\uae4c\uc9c0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\uac00 \uae30\uc874 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud55c\ub2e4. \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8\ub294 \ubc30\ud3ec \uc911\uc5d0 \uc0c8 \ubcf5\uc81c\ubcf8\uc744 \uc0dd\uc131\ud560 \ub54c Kubernetes\uac00 \u201c\ub108\ubb34 \ube68\ub9ac\u201d \uc6c0\uc9c1\uc774\uc9c0 \uc54a\ub3c4\ub85d \ud558\uace0 Kubernetes\ub294 \ubc30\ud3ec\ub97c \uc644\ub8cc\ud588\uc9c0\ub9cc \uc0c8 Pod\uac00 \ub4f1\ub85d\uc744 \uc644\ub8cc\ud558\uc9c0 \uc54a\uc740 \uc0c1\ud669\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub97c \ud65c\uc131\ud654\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864 \ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. ( \uc774\uc804 \ubc84\uc804\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \uacbd\uc6b0 \uc124\uba85\uc11c\ub97c \ucc38\uc870 ) \ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8\ub97c \uc790\ub3d9\uc73c\ub85c \uc8fc\uc785\ud558\ub824\uba74 elbv2.k8s.aws/pod-readiness-gate-inject: enabled \ub77c\ubca8\ub85c \ud0c0\uac9f \ud30c\ub4dc\uac00 \uc2e4\ud589 \uc911\uc778 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub77c\ubca8\uc744 \ubd99\uc785\ub2c8\ub2e4. . \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \uc900\ube44 \uac8c\uc774\ud2b8 \ucee8\ud53c\uadf8\ub808\uc774\uc158\uc744 \uac00\uc838\uc624\ub3c4\ub85d \ud558\ub824\uba74 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud558\uace0 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc804\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub77c\ubca8\uc744 \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4. \uc885\ub8cc \uc804 \uc5d0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud30c\ub4dc\uc758 \ub4f1\ub85d\uc774 \ucde8\uc18c\ub418\uc5c8\ub294\uc9c0 \ud655\uc778 \u00b6 When a pod is terminated steps 4 and 5 from the pod readiness section occur at the same time that the container processes receive the termination signals. This means that if your container is able to shut down quickly it may shut down faster than the Load Balancer is able to deregister the target. To avoid this situation adjust the Pod spec with: \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub4f1\ub85d\uc744 \ucde8\uc18c\ud558\uace0 \uc5f0\uacb0\uc744 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud560 \uc218 \uc788\ub3c4\ub85d 'PreStop' \ub77c\uc774\ud504\uc0ac\uc774\ud074 \ud6c5\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc774 \ud6c5\uc740 API \uc694\uccad \ub610\ub294 \uad00\ub9ac \uc774\ubca4\ud2b8 (\uc608: \ub77c\uc774\ube0c\ub2c8\uc2a4/\uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c \uc2e4\ud328, \uc120\uc810, \ub9ac\uc18c\uc2a4 \uacbd\ud569 \ub4f1) \ub85c \uc778\ud574 \ucee8\ud14c\uc774\ub108\uac00 \uc885\ub8cc\ub418\uae30 \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 \uc774 \ud6c5\uc774 \ud638\ucd9c\ub418\uc5b4 \uc885\ub8cc \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30 \uc804\uc5d0 \uc644\ub8cc\ub418\ub3c4\ub85d \ud5c8\uc6a9\ub428 \uc785\ub2c8\ub2e4. \ub2e8, \uc720\uc608 \uae30\uac04\uc774 \uc2e4\ud589\uc744 \uc218\uc6a9\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \ucda9\ubd84\ud788 \uae38\uc5b4\uc57c \ud569\ub2c8\ub2e4. lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] \uc704\uc640 \uac19\uc740 \uac04\ub2e8\ud55c sleep \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uac00 Terminating (\uc885\ub8cc \uc911) \uc73c\ub85c \ud45c\uc2dc\ub41c \uc2dc\uc810 (\uadf8\ub9ac\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub4f1\ub85d \ucde8\uc18c\uac00 \uc2dc\uc791\ub418\ub294 \uc2dc\uc810) \uacfc \uc885\ub8cc \uc2e0\ud638\uac00 \ucee8\ud14c\uc774\ub108 \ud504\ub85c\uc138\uc2a4\ub85c \uc804\uc1a1\ub418\ub294 \uc2dc\uc810 \uc0ac\uc774\uc5d0 \uc9e7\uc740 \uc9c0\uc5f0\uc744 \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\ub2e4.\ud544\uc694\ud55c \uacbd\uc6b0 \uc774 \ud6c4\ud06c\ub97c \uace0\uae09 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc885\ub8cc/\uc885\ub8cc \uc808\ucc28\uc5d0\ub3c4 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \ud504\ub9ac\uc2a4\ud1b1 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc885\ub8cc \uc2e0\ud638\uc5d0 \uc815\uc0c1\uc801\uc73c\ub85c \uc751\ub2f5\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uc218\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d 'TerminationGracePeriodsSeconds'\ub97c \uc5f0\uc7a5\ud558\uc2ed\uc2dc\uc624.\uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 \uc720\uc608 \uae30\uac04\uc744 200\ucd08\ub85c \uc5f0\uc7a5\ud558\uc5ec \uc804\uccb4 sleep 180 \uba85\ub839\uc744 \uc644\ub8cc\ud55c \ub2e4\uc74c, \uc571\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ub420 \uc218 \uc788\ub3c4\ub85d 20\ucd08 \ub354 \uc5f0\uc7a5\ud588\uc2b5\ub2c8\ub2e4. spec: terminationGracePeriodSeconds: 200 containers: - name: webapp image: webapp-st:v1.3 [...] lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] \ud30c\ub4dc\uc5d0 \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c\uac00 \uc788\ub294\uc9c0 \ud655\uc778 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uae30\ubcf8 \uc900\ube44 \uc0c1\ud0dc\ub294 \u201cReady\u201d\uc774\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0 \uc694\uccad\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub418\ub294 \ub370 1~2\ubd84 \uc815\ub3c4 \uac78\ub9bd\ub2c8\ub2e4. \ud30c\ub4dc \uc2a4\ud399\uc5d0\uc11c '\ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c'\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud589 \uba85\ub839\uc5b4 \ub610\ub294 \ub124\ud2b8\uc6cc\ud06c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2dc\uc791\uc744 \uc644\ub8cc\ud558\uace0 \ud2b8\ub798\ud53d\uc744 \ucc98\ub9ac\ud560 \uc900\ube44\uac00 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c \ub85c \uc815\uc758\ub41c \ud30c\ub4dc\ub294 \u201cNotReady\u201d \uc0c1\ud0dc\uc5d0\uc11c \uc2dc\uc791\ud558\uba70, \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c \uac00 \uc131\uacf5\ud588\uc744 \ub54c\ub9cc \u201c\uc900\ube44 \uc644\ub8cc\u201d\ub85c \ubcc0\uacbd\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \u201c\uc11c\ube44\uc2a4 \uc911\u201d\uc73c\ub85c \uc804\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uc560 \uc0c1\ud0dc (\uc608: \uad50\ucc29 \uc0c1\ud0dc) \uc5d0 \ub4e4\uc5b4\uac08 \ub54c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud560 \uc218 \uc788\ub3c4\ub85d \ub77c\uc774\ube0c\ub2c8\uc2a4 \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc, \ud65c\uc131 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc7ac\uc2dc\uc791\uc744 \ud2b8\ub9ac\uac70\ud558\ubbc0\ub85c Stateful \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uc791 \uc18d\ub3c4\uac00 \ub290\ub9b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub3c4 \uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c \ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ud504\ub85c\ube0c\ub294 \ud3ec\ud2b8 80\uc5d0 \ub300\ud55c HTTP \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc5b8\uc81c \uc900\ube44\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4 (\ud65c\uc131 \ud504\ub85c\ube0c\uc5d0\ub3c4 \ub3d9\uc77c\ud55c \ud504\ub85c\ube0c \uad6c\uc131\uc774 \uc0ac\uc6a9\ub428). [...] ports: - containerPort: 80 livenessProbe: httpGet: path: / port: 80 failureThreshold: 1 periodSeconds: 10 initialDelaySeconds: 5 readinessProbe: httpGet: path: / port: 80 periodSeconds: 5 [...] \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc124\uc815 \u00b6 \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc740 \ubcf5\uc81c\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911 \uc790\ubc1c\uc801 \uc911\ub2e8 \uc73c\ub85c \uc778\ud574 \ub3d9\uc2dc\uc5d0 \ub2e4\uc6b4\ub418\ub294 \ud30c\ub4dc\uc758 \uc218\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucffc\ub7fc \uae30\ubc18 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \uc2e4\ud589 \uc911\uc778 \ubcf5\uc81c\ubcf8 \uc218\uac00 \ucffc\ub7fc\uc5d0 \ud544\uc694\ud55c \uc218 \uc774\ud558\ub85c \ub5a8\uc5b4\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc6f9 \ud504\ub7f0\ud2b8 \uc5d4\ub4dc\ub294 \ubd80\ud558\ub97c \ucc98\ub9ac\ud558\ub294 \ubcf5\uc81c\ubcf8\uc758 \uc218\uac00 \uc804\uccb4 \ubcf5\uc81c\ubcf8\uc758 \ud2b9\uc815 \ube44\uc728 \uc774\ud558\ub85c \ub5a8\uc5b4\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PDB\ub294 \ub178\ub4dc \ub4dc\ub808\uc774\ub2dd \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\uc640 \uac19\uc740 \uac83\uc73c\ub85c\ubd80\ud130 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud569\ub2c8\ub2e4. PDB\ub294 \uc774\ub7ec\ud55c \uc870\uce58\ub97c \ucde8\ud558\ub294 \ub3d9\uc548 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218 \ub610\ub294 \ube44\uc728\uc744 \ucd5c\uc18c\ud55c\uc73c\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4. \uc8fc\uc758 PDB\ub294 \ud638\uc2a4\ud2b8 OS \uc7a5\uc560 \ub610\ub294 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0 \uc190\uc2e4\uacfc \uac19\uc740 \ube44\uc790\ubc1c\uc801 \uc911\ub2e8\uc73c\ub85c\ubd80\ud130 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\ub294 app: echoserver \ub77c\ubca8\uc774 \ubd99\uc740 \ud30c\ub4dc\ub97c \ud56d\uc0c1 1\uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub9de\ub294 \uc62c\ubc14\ub978 \ub808\ud50c\ub9ac\uce74 \uc218\ub97c \uad6c\uc131\ud558\uac70\ub098 \ubc31\ubd84\uc728\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. : apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: echoserver-pdb namespace: echoserver spec: minAvailable: 1 selector: matchLabels: app: echoserver \uc885\ub8cc \uc2e0\ud638\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac \u00b6 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ub450 \uac1c\uc758 Signal \uc744 \uc218\uc2e0\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8\ub294 SIGTERM \uc2e0\ud638 \uc774\uba70, \uc774\ub294 \ud504\ub85c\uc138\uc2a4 \uc2e4\ud589\uc744 \uc911\ub2e8\ud558\ub77c\ub294 \u201c\uc815\uc911\ud55c\u201d \uc694\uccad\uc785\ub2c8\ub2e4. \uc774 \uc2e0\ud638\ub294 \ucc28\ub2e8\ub420 \uc218\ub3c4 \uc788\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc21c\ud788 \uc774 \uc2e0\ud638\ub97c \ubb34\uc2dc\ud560 \uc218\ub3c4 \uc788\uc73c\ubbc0\ub85c, terminationGracePeriodSeconds \uc774 \uacbd\uacfc\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 SIGKILL \uc2e0\ud638 \ub97c \ubc1b\uac8c \ub429\ub2c8\ub2e4. SIGKILL \uc740 \ud504\ub85c\uc138\uc2a4\ub97c \uac15\uc81c\ub85c \uc911\uc9c0\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70, \ucc28\ub2e8, \ucc98\ub9ac \ub610\ub294 \ubb34\uc2dc \ub420 \uc218 \uc5c6\uc73c\ubbc0\ub85c \ud56d\uc0c1 \uce58\uba85\uc801\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc2e0\ud638\ub294 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc885\ub8cc\ub97c \ud2b8\ub9ac\uac70\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\ub610\ud55c SIGTERM \uc2e0\ud638\ub294 preStop \ud6c5\uc774 \uc2e4\ud589\ub41c \ud6c4\uc5d0 \uc804\uc1a1\ub429\ub2c8\ub2e4. \uc704 \uad6c\uc131\uc5d0\uc11c preStop \ud6c5\uc740 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud3ec\ub4dc\uc758 \ub4f1\ub85d\uc774 \ucde8\uc18c\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ubbc0\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 SIGTERM \uc2e0\ud638\uac00 \uc218\uc2e0\ub420 \ub54c \uc5f4\ub824 \uc788\ub294 \ub098\uba38\uc9c0 \uc5f0\uacb0\uc744 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc9c4\uc785\uc810\uc5d0 \u201c\ub798\ud37c \uc2a4\ud06c\ub9bd\ud2b8\u201d\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ucee8\ud14c\uc774\ub108 \ud658\uacbd\uc5d0\uc11c\uc758 \uc2e0\ud638 \ucc98\ub9ac\ub294 \ubcf5\uc7a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8\ub294 PID 1\uc774\ubbc0\ub85c \uc2e0\ud638\ub97c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c \uc804\ub2ec\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc5d0 \uc8fc\uc758 \u00b6 Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \uc911\uc778 \ub300\uc0c1\uc5d0 \ub300\ud55c \uc694\uccad \uc804\uc1a1\uc744 \uc911\uc9c0\ud569\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\ub97c \uc644\ub8cc\ud558\uae30 \uc804\uc5d0 300\ucd08 \uc815\ub3c4 \ub300\uae30\ud558\ubbc0\ub85c \ub300\uc0c1\uc5d0 \ub300\ud55c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc744 \uc644\ub8cc\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Elastic Load Balancing\uc774 \ub300\uae30\ud558\ub294 \uc2dc\uac04\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0 \uac12\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc2ed\uc2dc\uc624. \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc758 \ucd08\uae30 \uc0c1\ud0dc\ub294 draining \uc785\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud558\uba74 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\uac00 \uc644\ub8cc\ub418\uace0 \ub300\uc0c1\uc758 \uc0c1\ud0dc\ub294 unused \uac00 \ub429\ub2c8\ub2e4. \ub300\uc0c1\uc774 Auto Scaling \uadf8\ub8f9\uc758 \uc77c\ubd80\uc778 \uacbd\uc6b0 \ub300\uc0c1\uc744 \uc885\ub8cc\ud558\uace0 \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc5d0 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc774 \uc5c6\uace0 \ud65c\uc131 \uc5f0\uacb0\uc774 \uc5c6\ub294 \uacbd\uc6b0 Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud560 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uc9c0 \uc54a\uace0 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\ub97c \uc989\uc2dc \uc644\ub8cc\ud569\ub2c8\ub2e4. \uc8fc\uc758 \ub300\uc0c1 \ub4f1\ub85d \ucde8\uc18c\uac00 \uc644\ub8cc\ub418\ub354\ub77c\ub3c4 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0 \uc81c\ud55c \uc2dc\uac04\uc774 \ub9cc\ub8cc\ub420 \ub54c\uae4c\uc9c0 \ub300\uc0c1 \uc0c1\ud0dc\uac00 '\ub4dc\ub808\uc774\ub2dd \uc911'\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc81c\ud55c \uc2dc\uac04\uc774 \ub9cc\ub8cc\ub418\uba74 \ub300\uc0c1\uc740 '\ubbf8\uc0ac\uc6a9' \uc0c1\ud0dc\ub85c \uc804\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud558\uae30 \uc804\uc5d0 \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc774 \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 500\ub808\ubca8 \uc624\ub958 \uc751\ub2f5\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. . \uc774\ub294 alb.ingress.kubernetes.io/target-group-attributes \uc5b4\ub178\ud14c\uc774\uc158 \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: echoserver-ip namespace: echoserver annotations: alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip alb.ingress.kubernetes.io/load-balancer-name: echoserver-ip alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30 spec: ingressClassName: alb rules: - host: echoserver.example.com http: paths: - path: / pathType: Exact backend: service: name: echoserver-service port: number: 8080","title":"Kubernetes \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud1b5\ud55c \uc624\ub958 \ubc0f \ud0c0\uc784\uc544\uc6c3 \ubc29\uc9c0"},{"location":"networking/loadbalancing/loadbalancing.kr/#kubernetes-aws","text":"\ud544\uc694\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4 (\uc11c\ube44\uc2a4, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8, \uc778\uadf8\ub808\uc2a4 \ub4f1) \ub97c \uc0dd\uc131\ud55c \ud6c4, \ud30c\ub4dc\ub294 Elastic Load Balancer\ub97c \ud1b5\ud574 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 Kubernetes \ud658\uacbd\uc744 \ubcc0\uacbd\ud560 \ub54c \uc624\ub958, \uc2dc\uac04 \ucd08\uacfc \ub610\ub294 \uc5f0\uacb0 \uc7ac\uc124\uc815\uc774 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubcc0\uacbd\uc73c\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \ub610\ub294 \uc870\uc815 \uc791\uc5c5 (\uc218\ub3d9 \ub610\ub294 \uc790\ub3d9) \uc774 \ud2b8\ub9ac\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc774\ub7ec\ud55c \uc624\ub958\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ubb38\uc81c\ub97c \uae30\ub85d\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\ub97c \uc81c\uc5b4\ud558\ub294 Kubernetes \uc2dc\uc2a4\ud15c\uc774 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \ub300\uc0c1 \ub4f1\ub85d \ubc0f \uc0c1\ud0dc\ub97c \uc81c\uc5b4\ud558\ub294 AWS \uc2dc\uc2a4\ud15c\ubcf4\ub2e4 \ube60\ub974\uac8c \uc2e4\ud589\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc694\uccad\uc744 \uc218\uc2e0\ud560 \uc900\ube44\uac00 \ub418\uae30 \uc804\uc5d0 \ud30c\ub4dc\uac00 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uae30 \uc2dc\uc791\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 Ready \uc0c1\ud0dc\uac00 \ub418\ub294 \ud504\ub85c\uc138\uc2a4\uc640 \ud2b8\ub798\ud53d\uc744 \ud3ec\ub4dc\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"Kubernetes \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud1b5\ud55c \uc624\ub958 \ubc0f \ud0c0\uc784\uc544\uc6c3 \ubc29\uc9c0"},{"location":"networking/loadbalancing/loadbalancing.kr/#readiness","text":"2019 Kubecon talk \uc5d0\uc11c \ubc1c\ucdcc\ud55c \uc774 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc740 \ud30c\ub4dc\uac00 \ub808\ub514 \uc0c1\ud0dc\uac00 \ub418\uace0 '\ub85c\ub4dc\ubc38\ub7f0\uc11c' \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uae30 \uc704\ud574 \uac70\uccd0\uc9c4 \ub2e8\uacc4\ub97c \ubcf4\uc5ec\uc900\ub2e4. Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou NodePort \uc11c\ube44\uc2a4\uc758 \uba64\ubc84\uc778 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub2e4\uc74c \ub2e8\uacc4\ub97c \uac70\uce69\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 (\uc989, kubectl \uba85\ub839 \ub610\ub294 \uc2a4\ucf00\uc77c\ub9c1 \uc561\uc158\uc73c\ub85c\ubd80\ud130) \uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud30c\ub4dc\ub294 kube-scheduler \uc5d0 \uc758\ud574 \uc2a4\ucf00\uc904\ub9c1\ub418\uba70 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud560\ub2f9\ub41c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 kubelet\uc740 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uace0 ('watch'\ub97c \ud1b5\ud574) \ub85c\uceec \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \ud1b5\uc2e0\ud558\uc5ec \ud30c\ub4dc\uc5d0 \uc9c0\uc815\ub41c \ucee8\ud14c\uc774\ub108\ub97c \uc2dc\uc791\ud55c\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc2e4\ud589\uc744 \uc2dc\uc791\ud558\uba74 (\uadf8\ub9ac\uace0 \uc120\ud0dd\uc801\uc73c\ub85c ReadinessProbes \ub9cc \uc804\ub2ec\ud558\uba74), kubelet\uc740 kube-apiserver \ub85c \uc5c5\ub370\uc774\ud2b8\ub97c \uc804\uc1a1\ud558\uc5ec \ud30c\ub4dc \uc0c1\ud0dc\ub97c Ready \ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ucee8\ud2b8\ub864\ub7ec\ub294 ('watch'\ub97c \ud1b5\ud574) \uc11c\ube44\uc2a4\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud560 \uc0c8 \ud30c\ub4dc\uac00 Ready \ub77c\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uace0 \uc801\uc808\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubc30\uc5f4\uc5d0 \ud3ec\ub4dc IP/\ud3ec\ud2b8 \ud29c\ud50c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. kube-proxy \ub294 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c iptables \uaddc\uce59\uc5d0 \ucd94\uac00\ud560 \uc0c8 IP/\ud3ec\ud2b8\uac00 \uc788\ub2e4\ub294 \uc5c5\ub370\uc774\ud2b8 ( watch \ub97c \ud1b5\ud574) \ub97c \uc218\uc2e0\ud55c\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc758 \ub85c\uceec iptables \uaddc\uce59\uc774 NodePort \uc11c\ube44\uc2a4\uc758 \ucd94\uac00 \ub300\uc0c1 \ud3ec\ub4dc\ub85c \uc5c5\ub370\uc774\ud2b8\ub429\ub2c8\ub2e4. \ucc38\uc870 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\uc640 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec (\uc608: AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec) \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 5\ub2e8\uacc4\ub294 kube-proxy \ub300\uc2e0 \uad00\ub828 \ucee8\ud2b8\ub864\ub7ec\uc5d0\uc11c \ucc98\ub9ac\ub429\ub2c8\ub2e4.\uadf8\ub7ec\uba74 \ucee8\ud2b8\ub864\ub7ec\ub294 \ud544\uc694\ud55c \uad6c\uc131 \ub2e8\uacc4 (\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \ub300\uc0c1 \ub4f1\ub85d/\ub4f1\ub85d \ucde8\uc18c) \ub97c \uc218\ud589\ud558\uc5ec \ud2b8\ub798\ud53d\uc774 \uc608\uc0c1\ub300\ub85c \ud750\ub974\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uc885\ub8cc\ub418\uac70\ub098 \uc900\ube44\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\ub85c \ubcc0\uacbd\ub418\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \uc720\uc0ac\ud55c \ud504\ub85c\uc138\uc2a4\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. API \uc11c\ubc84\ub294 \ucee8\ud2b8\ub864\ub7ec, kubelet \ub610\ub294 kubectl \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c\ubd80\ud130 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\uc2e0\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc885\ub8cc\ud569\ub2c8\ub2e4. 3~5\ub2e8\uacc4\ub294 \uac70\uae30\uc11c\ubd80\ud130 \uacc4\uc18d\ub418\uc9c0\ub9cc, \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa9\ub85d\uacfc iptables \uaddc\uce59\uc5d0\uc11c \ud30c\ub4dc IP/\ud29c\ud50c\uc744 \uc0bd\uc785\ud558\ub294 \ub300\uc2e0 \uc81c\uac70\ud569\ub2c8\ub2e4.","title":"\ud30c\ub4dc Readiness"},{"location":"networking/loadbalancing/loadbalancing.kr/#_1","text":"\ub2e4\uc74c\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\ub85c \uc778\ud574 \ud3ec\ub4dc \uad50\uccb4\uac00 \ud2b8\ub9ac\uac70\ub420 \ub54c \ucde8\ud574\uc9c4 \ub2e8\uacc4\ub97c \ubcf4\uc5ec\uc8fc\ub294 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc785\ub2c8\ub2e4. Below is a diagram showing the steps taken when an application deployment triggers the replacement of pods: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou \uc774 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c \uc8fc\ubaa9\ud560 \uc810\uc740 \uccab \ubc88\uc9f8 \ud30c\ub4dc\uac00 \u201cReady\u201d \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 \ub450 \ubc88\uc9f8 \ud30c\ub4dc\uac00 \ubc30\ud3ec\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uc804 \uc139\uc158\uc758 4\ub2e8\uacc4\uc640 5\ub2e8\uacc4\ub3c4 \uc704\uc758 \ubc30\ud3ec \uc791\uc5c5\uacfc \ubcd1\ud589\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \uc989, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub2e4\uc74c \ud30c\ub4dc\ub85c \ub118\uc5b4\uac08 \ub54c \uc0c8 \ud30c\ub4dc \uc0c1\ud0dc\ub97c \uc804\ud30c\ud558\ub294 \uc561\uc158\uc774 \uc5ec\uc804\ud788 \uc9c4\ud589 \uc911\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \uc774\uc804 \ubc84\uc804\uc758 \ud30c\ub4dc\ub3c4 \uc885\ub8cc\ud558\ubbc0\ub85c, \ud30c\ub4dc\uac00 Ready \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud588\uc9c0\ub9cc \ubcc0\uacbd \uc0ac\ud56d\uc774 \uacc4\uc18d \uc804\ud30c\ub418\uace0 \uc774\uc804 \ubc84\uc804\uc758 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\ub294 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc124\uba85\ud55c Kubernetes \uc2dc\uc2a4\ud15c\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \ub4f1\ub85d \uc2dc\uac04\uc774\ub098 \uc0c1\ud0dc \ud655\uc778\uc744 \uace0\ub824\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 AWS\uc640 \uac19\uc740 \ud074\ub77c\uc6b0\ub4dc \uacf5\uae09\uc790\uc758 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774 \ubb38\uc81c\uac00 \ub354\uc6b1 \uc545\ud654\ub429\ub2c8\ub2e4. \uc989 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc5c5\ub370\uc774\ud2b8\uac00 \ud3ec\ub4dc \uc804\uccb4\uc5d0 \uac78\uccd0 \uc644\uc804\ud788 \uc21c\ud658\ub420 \uc218 \uc788\uc9c0\ub9cc \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc0c1\ud0dc \uc810\uac80 \uc218\ud589 \ub610\ub294 \uc0c8 \ud30c\ub4dc \ub4f1\ub85d\uc744 \uc644\ub8cc\ud558\uc9c0 \uc54a\uc544 \uc6b4\uc601 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c\ub3c4 \ube44\uc2b7\ud55c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c \uad6c\uc131\uc5d0 \ub530\ub77c \ud30c\ub4dc\uc758 \ub4f1\ub85d\uc744 \ucde8\uc18c\ud558\uace0 \uc0c8 \uc694\uccad \uc218\uc2e0\uc744 \uc911\uc9c0\ud558\ub294 \ub370 1~2\ubd84 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc774\ub7ec\ud55c \ub4f1\ub85d \ucde8\uc18c\ub97c \uc704\ud574 \ub864\ub9c1 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc9c0\uc5f0\uc2dc\ud0a4\uc9c0 \uc54a\uc73c\uba70, \uc774\ub85c \uc778\ud574 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc774\ubbf8 \uc885\ub8cc\ub41c \ub300\uc0c1 \ud30c\ub4dc\uc758 IP/\ud3ec\ud2b8\ub85c \ud2b8\ub798\ud53d\uc744 \uacc4\uc18d \ubcf4\ub0b4\ub294 \uc0c1\ud0dc\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 Kubernetes \uc2dc\uc2a4\ud15c\uc774 AWS Load Balancer \ub3d9\uc791\uc5d0 \ub354 \ubd80\ud569\ud558\ub294 \uc870\uce58\ub97c \ucde8\ud558\ub3c4\ub85d \uad6c\uc131\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc30\ud3ec\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5"},{"location":"networking/loadbalancing/loadbalancing.kr/#_2","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/loadbalancing/loadbalancing.kr/#ip","text":"LoadBalancer \uc720\ud615\uc758 \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c, \uc778\uc2a4\ud134\uc2a4 \ub300\uc0c1 \uc720\ud615 \ub4f1\ub85d\uc744 \ud1b5\ud574 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ub178\ub4dc \ub85c \ud2b8\ub798\ud53d\uc774 \uc804\uc1a1\ub429\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uac01 \ub178\ub4dc\uac00 'NodePort'\uc758 \ud2b8\ub798\ud53d\uc744 \uc11c\ube44\uc2a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5b4\ub808\uc774\uc758 \ud3ec\ub4dc/IP \ud29c\ud50c\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. \uc774 \ud0c0\uac9f\uc740 \ubcc4\ub3c4\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870 \ubc30\uc5f4\uc5d0\ub294 \u201cReady\u201d \ud30c\ub4dc\ub9cc \uc788\uc5b4\uc57c \ud55c\ub2e4\ub294 \uc810\uc744 \uae30\uc5b5\ud558\uc138\uc694. \uc774\ub807\uac8c \ud558\uba74 \uc694\uccad\uc5d0 \ud649\uc774 \ucd94\uac00\ub418\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uad6c\uc131\uc774 \ubcf5\uc7a1\ud574\uc9d1\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uc5b4 \uc704\uc758 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \uc138\uc158 \uc5b4\ud53c\ub2c8\ud2f0\ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 \uc5b4\ud53c\ub2c8\ud2f0\ub294 \uc5b4\ud53c\ub2c8\ud2f0 \uad6c\uc131\uc5d0 \ub530\ub77c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \ubc31\uc5d4\ub4dc \ub178\ub4dc \uc0ac\uc774\uc5d0\ub9cc \uc720\uc9c0\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \ubc31\uc5d4\ub4dc \ud30c\ub4dc\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ud2b8\ub798\ud53d \ud750\ub984\uacfc \ud0c0\uc774\ubc0d\uc744 \uc81c\uc5b4\ud558\uae30\uac00 \ub354 \uc5b4\ub824\uc6cc\uc9d1\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, IP \ub300\uc0c1 \uc720\ud615 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc IP/\ud3ec\ud2b8 \ud29c\ud50c\uc744 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \uc9c1\uc811 \ub4f1\ub85d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ub300\uc0c1 \ud30c\ub4dc\ub85c\uc758 \ud2b8\ub798\ud53d \uacbd\ub85c\ub97c \ub2e8\uc21c\ud654 \ud569\ub2c8\ub2e4. \uc989 \uc0c8 \ub300\uc0c1\uc774 \ub4f1\ub85d\ub418\uba74 \ub300\uc0c1\uc774 \u201cReady\u201d Pod IP \ubc0f \ud3ec\ud2b8\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uace0, \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc758 \uc0c1\ud0dc \ud655\uc778\uc774 Pod\uc5d0 \uc9c1\uc811 \uc804\ub2ec\ub418\uba70, VPC \ud750\ub984 \ub85c\uadf8\ub97c \uac80\ud1a0\ud558\uac70\ub098 \uc720\ud2f8\ub9ac\ud2f0\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \ub54c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \ud30c\ub4dc \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc27d\uac8c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c IP \ub4f1\ub85d\uc744 \uc0ac\uc6a9\ud558\uba74 NodePort \uaddc\uce59\uc744 \ud1b5\ud574 \uc5f0\uacb0\uc744 \uad00\ub9ac\ud558\ub294 \ub300\uc2e0 \ubc31\uc5d4\ub4dc \ud30c\ub4dc\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc758 \ud0c0\uc774\ubc0d\uacfc \uad6c\uc131\uc744 \uc9c1\uc811 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"IP \ub300\uc0c1 \uc720\ud615 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc774\uc6a9"},{"location":"networking/loadbalancing/loadbalancing.kr/#_3","text":"\ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8 \ub294 \ud30c\ub4dc\uac00 \u201c\uc900\ube44 \uc644\ub8cc\u201d \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \ucda9\uc871\ub418\uc5b4\uc57c \ud558\ub294 \ucd94\uac00 \uc694\uad6c\uc0ac\ud56d\uc774\ub2e4. [...] AWS Load Balancer \ucee8\ud2b8\ub864\ub7ec\ub294 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \uc11c\ube44\uc2a4 \ubc31\uc5d4\ub4dc\ub97c \uad6c\uc131\ud558\ub294 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \uc900\ube44 \uc870\uac74\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ALB/NLB \ub300\uc0c1 \uadf8\ub8f9\uc758 \ud574\ub2f9 \ub300\uc0c1\uc758 \uc0c1\ud0dc\uac00 \u201cHealthy\u201d\ub85c \ud45c\uc2dc\ub418\ub294 \uacbd\uc6b0\uc5d0\ub9cc \ud3ec\ub4dc\uc758 \uc870\uac74 \uc0c1\ud0dc\uac00 'True'\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc0c8\ub85c \uc0dd\uc131\ub41c \ud3ec\ub4dc\uac00 ALB/NLB \ub300\uc0c1 \uadf8\ub8f9\uc5d0\uc11c \u201c\uc815\uc0c1\u201d\uc73c\ub85c \ub418\uc5b4 \ud2b8\ub798\ud53d\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub420 \ub54c\uae4c\uc9c0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\uac00 \uae30\uc874 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud55c\ub2e4. \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8\ub294 \ubc30\ud3ec \uc911\uc5d0 \uc0c8 \ubcf5\uc81c\ubcf8\uc744 \uc0dd\uc131\ud560 \ub54c Kubernetes\uac00 \u201c\ub108\ubb34 \ube68\ub9ac\u201d \uc6c0\uc9c1\uc774\uc9c0 \uc54a\ub3c4\ub85d \ud558\uace0 Kubernetes\ub294 \ubc30\ud3ec\ub97c \uc644\ub8cc\ud588\uc9c0\ub9cc \uc0c8 Pod\uac00 \ub4f1\ub85d\uc744 \uc644\ub8cc\ud558\uc9c0 \uc54a\uc740 \uc0c1\ud669\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub97c \ud65c\uc131\ud654\ud558\ub824\uba74 \ub2e4\uc74c\uc744 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864 \ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. ( \uc774\uc804 \ubc84\uc804\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \uacbd\uc6b0 \uc124\uba85\uc11c\ub97c \ucc38\uc870 ) \ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8\ub97c \uc790\ub3d9\uc73c\ub85c \uc8fc\uc785\ud558\ub824\uba74 elbv2.k8s.aws/pod-readiness-gate-inject: enabled \ub77c\ubca8\ub85c \ud0c0\uac9f \ud30c\ub4dc\uac00 \uc2e4\ud589 \uc911\uc778 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub77c\ubca8\uc744 \ubd99\uc785\ub2c8\ub2e4. . \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \uc900\ube44 \uac8c\uc774\ud2b8 \ucee8\ud53c\uadf8\ub808\uc774\uc158\uc744 \uac00\uc838\uc624\ub3c4\ub85d \ud558\ub824\uba74 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud558\uace0 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc804\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub77c\ubca8\uc744 \uc9c0\uc815\ud574\uc57c \ud55c\ub2e4.","title":"\ud30c\ub4dc \ub808\ub514\ub2c8\uc2a4 \uac8c\uc774\ud2b8 \ud65c\uc6a9"},{"location":"networking/loadbalancing/loadbalancing.kr/#_4","text":"When a pod is terminated steps 4 and 5 from the pod readiness section occur at the same time that the container processes receive the termination signals. This means that if your container is able to shut down quickly it may shut down faster than the Load Balancer is able to deregister the target. To avoid this situation adjust the Pod spec with: \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub4f1\ub85d\uc744 \ucde8\uc18c\ud558\uace0 \uc5f0\uacb0\uc744 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud560 \uc218 \uc788\ub3c4\ub85d 'PreStop' \ub77c\uc774\ud504\uc0ac\uc774\ud074 \ud6c5\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc774 \ud6c5\uc740 API \uc694\uccad \ub610\ub294 \uad00\ub9ac \uc774\ubca4\ud2b8 (\uc608: \ub77c\uc774\ube0c\ub2c8\uc2a4/\uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c \uc2e4\ud328, \uc120\uc810, \ub9ac\uc18c\uc2a4 \uacbd\ud569 \ub4f1) \ub85c \uc778\ud574 \ucee8\ud14c\uc774\ub108\uac00 \uc885\ub8cc\ub418\uae30 \uc9c1\uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 \uc774 \ud6c5\uc774 \ud638\ucd9c\ub418\uc5b4 \uc885\ub8cc \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30 \uc804\uc5d0 \uc644\ub8cc\ub418\ub3c4\ub85d \ud5c8\uc6a9\ub428 \uc785\ub2c8\ub2e4. \ub2e8, \uc720\uc608 \uae30\uac04\uc774 \uc2e4\ud589\uc744 \uc218\uc6a9\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \ucda9\ubd84\ud788 \uae38\uc5b4\uc57c \ud569\ub2c8\ub2e4. lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] \uc704\uc640 \uac19\uc740 \uac04\ub2e8\ud55c sleep \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uac00 Terminating (\uc885\ub8cc \uc911) \uc73c\ub85c \ud45c\uc2dc\ub41c \uc2dc\uc810 (\uadf8\ub9ac\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub4f1\ub85d \ucde8\uc18c\uac00 \uc2dc\uc791\ub418\ub294 \uc2dc\uc810) \uacfc \uc885\ub8cc \uc2e0\ud638\uac00 \ucee8\ud14c\uc774\ub108 \ud504\ub85c\uc138\uc2a4\ub85c \uc804\uc1a1\ub418\ub294 \uc2dc\uc810 \uc0ac\uc774\uc5d0 \uc9e7\uc740 \uc9c0\uc5f0\uc744 \ubc1c\uc0dd\uc2dc\ud0ac \uc218 \uc788\ub2e4.\ud544\uc694\ud55c \uacbd\uc6b0 \uc774 \ud6c4\ud06c\ub97c \uace0\uae09 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc885\ub8cc/\uc885\ub8cc \uc808\ucc28\uc5d0\ub3c4 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \ud504\ub9ac\uc2a4\ud1b1 \uc2e4\ud589 \uc2dc\uac04\uacfc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc885\ub8cc \uc2e0\ud638\uc5d0 \uc815\uc0c1\uc801\uc73c\ub85c \uc751\ub2f5\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \uc218\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d 'TerminationGracePeriodsSeconds'\ub97c \uc5f0\uc7a5\ud558\uc2ed\uc2dc\uc624.\uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 \uc720\uc608 \uae30\uac04\uc744 200\ucd08\ub85c \uc5f0\uc7a5\ud558\uc5ec \uc804\uccb4 sleep 180 \uba85\ub839\uc744 \uc644\ub8cc\ud55c \ub2e4\uc74c, \uc571\uc774 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ub420 \uc218 \uc788\ub3c4\ub85d 20\ucd08 \ub354 \uc5f0\uc7a5\ud588\uc2b5\ub2c8\ub2e4. spec: terminationGracePeriodSeconds: 200 containers: - name: webapp image: webapp-st:v1.3 [...] lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"]","title":"\uc885\ub8cc\uc804\uc5d0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud30c\ub4dc\uc758 \ub4f1\ub85d\uc774 \ucde8\uc18c\ub418\uc5c8\ub294\uc9c0 \ud655\uc778"},{"location":"networking/loadbalancing/loadbalancing.kr/#_5","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uae30\ubcf8 \uc900\ube44 \uc0c1\ud0dc\ub294 \u201cReady\u201d\uc774\uc9c0\ub9cc, \ub300\ubd80\ubd84\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uace0 \uc694\uccad\uc744 \ubc1b\uc744 \uc900\ube44\uac00 \ub418\ub294 \ub370 1~2\ubd84 \uc815\ub3c4 \uac78\ub9bd\ub2c8\ub2e4. \ud30c\ub4dc \uc2a4\ud399\uc5d0\uc11c '\ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c'\ub97c \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud589 \uba85\ub839\uc5b4 \ub610\ub294 \ub124\ud2b8\uc6cc\ud06c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2dc\uc791\uc744 \uc644\ub8cc\ud558\uace0 \ud2b8\ub798\ud53d\uc744 \ucc98\ub9ac\ud560 \uc900\ube44\uac00 \ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c \ub85c \uc815\uc758\ub41c \ud30c\ub4dc\ub294 \u201cNotReady\u201d \uc0c1\ud0dc\uc5d0\uc11c \uc2dc\uc791\ud558\uba70, \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c \uac00 \uc131\uacf5\ud588\uc744 \ub54c\ub9cc \u201c\uc900\ube44 \uc644\ub8cc\u201d\ub85c \ubcc0\uacbd\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791\uc774 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \u201c\uc11c\ube44\uc2a4 \uc911\u201d\uc73c\ub85c \uc804\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7a5\uc560 \uc0c1\ud0dc (\uc608: \uad50\ucc29 \uc0c1\ud0dc) \uc5d0 \ub4e4\uc5b4\uac08 \ub54c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub2e4\uc2dc \uc2dc\uc791\ud560 \uc218 \uc788\ub3c4\ub85d \ub77c\uc774\ube0c\ub2c8\uc2a4 \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc9c0\ub9cc, \ud65c\uc131 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc7ac\uc2dc\uc791\uc744 \ud2b8\ub9ac\uac70\ud558\ubbc0\ub85c Stateful \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uc791 \uc18d\ub3c4\uac00 \ub290\ub9b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub3c4 \uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c \ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ud504\ub85c\ube0c\ub294 \ud3ec\ud2b8 80\uc5d0 \ub300\ud55c HTTP \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc5b8\uc81c \uc900\ube44\ub418\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4 (\ud65c\uc131 \ud504\ub85c\ube0c\uc5d0\ub3c4 \ub3d9\uc77c\ud55c \ud504\ub85c\ube0c \uad6c\uc131\uc774 \uc0ac\uc6a9\ub428). [...] ports: - containerPort: 80 livenessProbe: httpGet: path: / port: 80 failureThreshold: 1 periodSeconds: 10 initialDelaySeconds: 5 readinessProbe: httpGet: path: / port: 80 periodSeconds: 5 [...]","title":"\ud30c\ub4dc\uc5d0 \ub808\ub514\ub2c8\uc2a4 \ud504\ub85c\ube0c\uac00 \uc788\ub294\uc9c0 \ud655\uc778"},{"location":"networking/loadbalancing/loadbalancing.kr/#pdb","text":"\ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc740 \ubcf5\uc81c\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911 \uc790\ubc1c\uc801 \uc911\ub2e8 \uc73c\ub85c \uc778\ud574 \ub3d9\uc2dc\uc5d0 \ub2e4\uc6b4\ub418\ub294 \ud30c\ub4dc\uc758 \uc218\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucffc\ub7fc \uae30\ubc18 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \uc2e4\ud589 \uc911\uc778 \ubcf5\uc81c\ubcf8 \uc218\uac00 \ucffc\ub7fc\uc5d0 \ud544\uc694\ud55c \uc218 \uc774\ud558\ub85c \ub5a8\uc5b4\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc6f9 \ud504\ub7f0\ud2b8 \uc5d4\ub4dc\ub294 \ubd80\ud558\ub97c \ucc98\ub9ac\ud558\ub294 \ubcf5\uc81c\ubcf8\uc758 \uc218\uac00 \uc804\uccb4 \ubcf5\uc81c\ubcf8\uc758 \ud2b9\uc815 \ube44\uc728 \uc774\ud558\ub85c \ub5a8\uc5b4\uc9c0\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PDB\ub294 \ub178\ub4dc \ub4dc\ub808\uc774\ub2dd \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\uc640 \uac19\uc740 \uac83\uc73c\ub85c\ubd80\ud130 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud569\ub2c8\ub2e4. PDB\ub294 \uc774\ub7ec\ud55c \uc870\uce58\ub97c \ucde8\ud558\ub294 \ub3d9\uc548 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218 \ub610\ub294 \ube44\uc728\uc744 \ucd5c\uc18c\ud55c\uc73c\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4. \uc8fc\uc758 PDB\ub294 \ud638\uc2a4\ud2b8 OS \uc7a5\uc560 \ub610\ub294 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0 \uc190\uc2e4\uacfc \uac19\uc740 \ube44\uc790\ubc1c\uc801 \uc911\ub2e8\uc73c\ub85c\ubd80\ud130 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\ub294 app: echoserver \ub77c\ubca8\uc774 \ubd99\uc740 \ud30c\ub4dc\ub97c \ud56d\uc0c1 1\uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub9cc\ub4ed\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub9de\ub294 \uc62c\ubc14\ub978 \ub808\ud50c\ub9ac\uce74 \uc218\ub97c \uad6c\uc131\ud558\uac70\ub098 \ubc31\ubd84\uc728\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. : apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: echoserver-pdb namespace: echoserver spec: minAvailable: 1 selector: matchLabels: app: echoserver","title":"\ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc124\uc815"},{"location":"networking/loadbalancing/loadbalancing.kr/#_6","text":"\ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ub450 \uac1c\uc758 Signal \uc744 \uc218\uc2e0\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8\ub294 SIGTERM \uc2e0\ud638 \uc774\uba70, \uc774\ub294 \ud504\ub85c\uc138\uc2a4 \uc2e4\ud589\uc744 \uc911\ub2e8\ud558\ub77c\ub294 \u201c\uc815\uc911\ud55c\u201d \uc694\uccad\uc785\ub2c8\ub2e4. \uc774 \uc2e0\ud638\ub294 \ucc28\ub2e8\ub420 \uc218\ub3c4 \uc788\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc21c\ud788 \uc774 \uc2e0\ud638\ub97c \ubb34\uc2dc\ud560 \uc218\ub3c4 \uc788\uc73c\ubbc0\ub85c, terminationGracePeriodSeconds \uc774 \uacbd\uacfc\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 SIGKILL \uc2e0\ud638 \ub97c \ubc1b\uac8c \ub429\ub2c8\ub2e4. SIGKILL \uc740 \ud504\ub85c\uc138\uc2a4\ub97c \uac15\uc81c\ub85c \uc911\uc9c0\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70, \ucc28\ub2e8, \ucc98\ub9ac \ub610\ub294 \ubb34\uc2dc \ub420 \uc218 \uc5c6\uc73c\ubbc0\ub85c \ud56d\uc0c1 \uce58\uba85\uc801\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc2e0\ud638\ub294 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc885\ub8cc\ub97c \ud2b8\ub9ac\uac70\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.\ub610\ud55c SIGTERM \uc2e0\ud638\ub294 preStop \ud6c5\uc774 \uc2e4\ud589\ub41c \ud6c4\uc5d0 \uc804\uc1a1\ub429\ub2c8\ub2e4. \uc704 \uad6c\uc131\uc5d0\uc11c preStop \ud6c5\uc740 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \ud3ec\ub4dc\uc758 \ub4f1\ub85d\uc774 \ucde8\uc18c\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ubbc0\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 SIGTERM \uc2e0\ud638\uac00 \uc218\uc2e0\ub420 \ub54c \uc5f4\ub824 \uc788\ub294 \ub098\uba38\uc9c0 \uc5f0\uacb0\uc744 \uc815\uc0c1\uc801\uc73c\ub85c \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uc870 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc9c4\uc785\uc810\uc5d0 \u201c\ub798\ud37c \uc2a4\ud06c\ub9bd\ud2b8\u201d\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ucee8\ud14c\uc774\ub108 \ud658\uacbd\uc5d0\uc11c\uc758 \uc2e0\ud638 \ucc98\ub9ac\ub294 \ubcf5\uc7a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8\ub294 PID 1\uc774\ubbc0\ub85c \uc2e0\ud638\ub97c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c \uc804\ub2ec\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc885\ub8cc \uc2e0\ud638\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac"},{"location":"networking/loadbalancing/loadbalancing.kr/#_7","text":"Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \uc911\uc778 \ub300\uc0c1\uc5d0 \ub300\ud55c \uc694\uccad \uc804\uc1a1\uc744 \uc911\uc9c0\ud569\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\ub97c \uc644\ub8cc\ud558\uae30 \uc804\uc5d0 300\ucd08 \uc815\ub3c4 \ub300\uae30\ud558\ubbc0\ub85c \ub300\uc0c1\uc5d0 \ub300\ud55c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc744 \uc644\ub8cc\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Elastic Load Balancing\uc774 \ub300\uae30\ud558\ub294 \uc2dc\uac04\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0 \uac12\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc2ed\uc2dc\uc624. \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc758 \ucd08\uae30 \uc0c1\ud0dc\ub294 draining \uc785\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud558\uba74 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\uac00 \uc644\ub8cc\ub418\uace0 \ub300\uc0c1\uc758 \uc0c1\ud0dc\ub294 unused \uac00 \ub429\ub2c8\ub2e4. \ub300\uc0c1\uc774 Auto Scaling \uadf8\ub8f9\uc758 \uc77c\ubd80\uc778 \uacbd\uc6b0 \ub300\uc0c1\uc744 \uc885\ub8cc\ud558\uace0 \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc5d0 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc774 \uc5c6\uace0 \ud65c\uc131 \uc5f0\uacb0\uc774 \uc5c6\ub294 \uacbd\uc6b0 Elastic Load Balancing\uc740 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud560 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uc9c0 \uc54a\uace0 \ub4f1\ub85d \ucde8\uc18c \ud504\ub85c\uc138\uc2a4\ub97c \uc989\uc2dc \uc644\ub8cc\ud569\ub2c8\ub2e4. \uc8fc\uc758 \ub300\uc0c1 \ub4f1\ub85d \ucde8\uc18c\uac00 \uc644\ub8cc\ub418\ub354\ub77c\ub3c4 \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0 \uc81c\ud55c \uc2dc\uac04\uc774 \ub9cc\ub8cc\ub420 \ub54c\uae4c\uc9c0 \ub300\uc0c1 \uc0c1\ud0dc\uac00 '\ub4dc\ub808\uc774\ub2dd \uc911'\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc81c\ud55c \uc2dc\uac04\uc774 \ub9cc\ub8cc\ub418\uba74 \ub300\uc0c1\uc740 '\ubbf8\uc0ac\uc6a9' \uc0c1\ud0dc\ub85c \uc804\ud658\ub429\ub2c8\ub2e4. \ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc774 \uacbd\uacfc\ud558\uae30 \uc804\uc5d0 \ub4f1\ub85d \ucde8\uc18c \ub300\uc0c1\uc774 \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 500\ub808\ubca8 \uc624\ub958 \uc751\ub2f5\uc744 \ubc1b\uc2b5\ub2c8\ub2e4. . \uc774\ub294 alb.ingress.kubernetes.io/target-group-attributes \uc5b4\ub178\ud14c\uc774\uc158 \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\uc758 \uc5b4\ub178\ud14c\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: echoserver-ip namespace: echoserver annotations: alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip alb.ingress.kubernetes.io/load-balancer-name: echoserver-ip alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30 spec: ingressClassName: alb rules: - host: echoserver.example.com http: paths: - path: / pathType: Exact backend: service: name: echoserver-service port: number: 8080","title":"\ub4f1\ub85d \ucde8\uc18c \uc9c0\uc5f0\uc5d0 \uc8fc\uc758"},{"location":"networking/loadbalancing/loadbalancing/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Avoiding Errors & Timeouts with Kubernetes Applications and AWS Load Balancers \u00b6 After creating the necessary Kubernetes resources (Service, Deployment, Ingress, etc), your pods should be able to receive traffic from your clients through an Elastic Load Balancer. However, you may find that errors, timeouts, or connection resets are being generated when you make changes to the application or Kubernetes environment. Those changes could trigger an application deployment or a scaling action (either manual or automatic). Unfortunately, those errors may be generated even when your application is not logging problems. This is because the Kubernetes systems controlling the resources in your cluster may be running faster than the AWS systems that control the Load Balancer's target registration and health. Your Pods may also start receiving traffic before your application is ready to receive requests. Lets review the process through which a pod becomes Ready and how traffic can be routed into the pods. Pod Readiness \u00b6 This diagram from a 2019 Kubecon talk , shows the steps taken for a pod to become Ready and receive traffic for a LoadBalancer service: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou When a pod that is a member of a NodePort Service is created, Kubernetes will go through the following steps: The pod is created on the Kubernetes control plane (i.e. from a kubectl command or scaling action). The pod is scheduled by the kube-scheduler and is assigned to a node in the cluster. The kubelet running on the assigned node will receive the update (via watch ) and will communicate with it\u2019s local Container Runtime to start the containers specified in the pod. When the containers have started running (and optionally pass ReadinessProbes ), the kubelet will update the pod status to Ready by sending an update to the kube-apiserver The Endpoint Controller will receive an update (via watch ) that there is a new pod that is Ready to be added to the Endpoints list for the Service and will add the pod IP/Port tuples to the appropriate endpoints array. kube-proxy receives an update (via watch ) that there is a new IP/Port to add to the iptables rules for the Service. The local iptables rules on the worker node will be updated with the additional target pod for the NodePort Service. Note When using an Ingress resource and Ingress Controller (like the AWS Load Balancer Controller) step 5 is handled by the relevant controller instead of kube-proxy . The controller will then take the necessary configuration steps (such as registering/deregistering the target to a load balancer) to allow traffic to flow as expected. When a pod is terminated , or changes to a not-ready state, a similar process occurs. The API server will receive either an update from a controller, kubelet, or kubectl client to terminate the pod. Steps 3-5 continue from there but will remove the Pod IP/Tuple from the endpoints list and iptables rules rather than insert. Impact on Deployments \u00b6 Below is a diagram showing the steps taken when an application deployment triggers the replacement of pods: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou Of note in this diagram is that the second Pod will not be deployed until the first pod has reached the \u201cReady\u201d state. Steps 4 and 5 from the previous section will also happen in parallel with the deployment actions above. This means that the actions to propagate the new pod status may still be in-progress when the Deployment controller moves on to the next pods. Since this process also terminates the older version of pods, this could lead to a situation where the pods have reached a Ready status but those changes are still being propagated and the older versions of the pod have been terminated. This problem is exacerbated when working with load balancers from Cloud Providers like AWS as the Kubernetes systems described above do not, by default, take into account registration times or health checks on the Load Balancer. This means the Deployment update could completely cycle through the pods, but the Load Balancer has not finished performing the health checks or registrating the new Pods which could cause an outage. A similar problem occurs when a pod is terminated. Depending on the Load Balancer configuration the Pod may take a minute or two to deregister and stop taking new requests. Kubernetes does not delay rolling deployments for this deregistration, this can lead to a state where the Load Balancer is still sending traffic to the IP/port for a target Pod that has already been terminated. To avoid these problems we can add configuration to ensure the Kubernetes systems take actions more in line with the AWS Load Balancer behavior. Recommendations \u00b6 Use IP Target-Type Load Balancers \u00b6 When creating a LoadBalancer type service the traffic is sent from the load balancer to any node in the cluster via Instance target type registration. Each node then redirects the traffic from the NodePort to a Pod/IP tuple in the Service\u2019s Endpoints array, this target could be running on a separate worker node Note Remember that array should only have \u201cReady\u201d pods This adds an additional hop to your request, and adds complexity to the Load Balancer configuration. For example, if the Load Balancer above was configured with session affinity, that affinity could only hold between the load balancer and the backend node (depending on the affinity configuration). Since the Load Balancer is not communicating with the backend Pod directly, controlling the traffic flow and timing with the Kubernetes systems becomes more difficult. When using the AWS Load Balancer Controller , IP target type can be used to register the Pod IP/Port tuples with the Load Balancer directly: This simplifies the traffic path from the Load Balancer to the target Pods. This means when a new target is registered we can be sure that target is a \u201cReady\u201d Pod IP and port, the health checks from the load balancer will hit the Pod Directly, and when reviewing VPC flow logs or monitoring utilities traffic between the Load Balancer and the Pods will be easily traceable. Using IP registration also allows us to control the timing and configuration of the traffic directly against the backend Pods, rather than trying to manage connections through the NodePort rules as well. Utilize Pod Readiness Gates \u00b6 Pod Readiness Gates are additional requirements that must be met before the Pod is allowed to reach the \u201cReady\u201d state. [...] the AWS Load Balancer controller can set the readiness condition on the pods that constitute your ingress or service backend. The condition status on a pod will be set to True only when the corresponding target in the ALB/NLB target group shows a health state of \u00bbHealthy\u00ab. This prevents the rolling update of a deployment from terminating old pods until the newly created pods are \u00bbHealthy\u00ab in the ALB/NLB target group and ready to take traffic. The readiness gates ensure that Kubernetes doesn\u2019t move \u201ctoo fast\u201d when creating new replicas during a deployment and avoids the situation where Kubernetes has completed the deployment but the new Pods have not completed registration. To enable these you will need to: Deploy the latest version of the AWS Load Balancer Controller ( Refer to the documentation if upgrading older versions ) Label the namespace where the target pods are running with the elbv2.k8s.aws/pod-readiness-gate-inject: enabled label to inject Pod Readiness Gates automatically. To ensure all of your pods in a namespace get the readiness gate config, you need create your Ingress or Service and label the namespace before creating the pods. Ensure Pods are Deregistered from Load Balancers before Termination \u00b6 When a pod is terminated steps 4 and 5 from the pod readiness section occur at the same time that the container processes receive the termination signals. This means that if your container is able to shut down quickly it may shut down faster than the Load Balancer is able to deregister the target. To avoid this situation adjust the Pod spec with: Add a preStop lifecycle hook to allow the application to deregister and gracefully close connections. This hook is called immediately before a container is terminated due to an API request or management event such as a liveness/startup probe failure, preemption, resource contention and others. Critically, this hook is called and allowed to complete before the termination signals are sent , provided the grace period is long enough to accommodate the execution. lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] A simple sleep command like the one above can be used to introduce a short delay between when the pod is marked Terminating (and Load Balancer deregistration begins) and when the termination signal is sent to the container process. If needed this hook can also be leveraged for more advanced application termination/shutdown procedures. Extend the terminationGracePeriodSeconds to accommodate the entire prestop execution time, as well as the time your application takes to gracefully respond to the termination signal. In the example below the grace period is extended to 200s which allows the entire sleep 180 command to complete and then an extra 20s just to be sure my app can shutdown gracefully. spec: terminationGracePeriodSeconds: 200 containers: - name: webapp image: webapp-st:v1.3 [...] lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] Ensure Pods have Readiness Probes \u00b6 When creating Pods in Kubernetes the default Readiness state is \u201cReady\u201d, however most applications take a moment or two to instantiate and become ready for requests. You can define a readinessProbe in the Pod spec with an exec command or network request that is used to determine if the application has completed its start up and is ready for traffic. Pods that are created with a readinessProbe defined start in a \u201cNotReady\u201d state, and only change to \u201cReady\u201d when the readinessProbe is successful. This ensures that applications are not put \u201cin-service\u201d until the application has completed startup. Liveness probes are recommended to allow for application restarts when entering a broken state, e.g. deadlocks, however care should be taken with stateful applications as liveness failures will trigger a restart of the application. Startup probes can also be leveraged for applications that are slow to start. The below probes use HTTP probes against port 80 to check when the web application becomes ready (the same probe configuration is also used for the liveness probe): [...] ports: - containerPort: 80 livenessProbe: httpGet: path: / port: 80 failureThreshold: 1 periodSeconds: 10 initialDelaySeconds: 5 readinessProbe: httpGet: path: / port: 80 periodSeconds: 5 [...] Configure a Pod Disruption Budget \u00b6 A Pod Disruption Budget (PDB) limits the number of Pods of a replicated application that are down simultaneously from voluntary disruptions . For example, a quorum-based application would like to ensure that the number of replicas running is never brought below the number needed for a quorum. A web front end might want to ensure that the number of replicas serving load never falls below a certain percentage of the total. The PDB will protect the application against things like the nodes being drained, or application deployments. The PDB ensures that a minimum number or percentage of pods remain available while taking these actions. Attention PDB\u2019s will NOT protect the application against involuntary disruptions like a failure in the host OS or loss of network connectivity. The example below ensures that there is always at least 1 Pod available with the label app: echoserver . You can configure the correct replica count for your application or use a percentage : apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: echoserver-pdb namespace: echoserver spec: minAvailable: 1 selector: matchLabels: app: echoserver Gracefully handle Termination Signals \u00b6 When a pod is Terminated the application running inside the container will receive two Signals . The first is the SIGTERM signal , which is a \u201cpolite\u201d request that the process cease execution. This signal can be blocked or the application could simply ignore this signal, so after the terminationGracePeriodSeconds has elapsed the application will receive the SIGKILL signal . SIGKILL is used to forcibly stop a process, it cannot be blocked, handled or ignored , and is therefore always fatal. These Signals are used by the container runtime to trigger your application to shutdown. The SIGTERM signal will also be sent after the preStop hook has executed. With the above configuration the preStop hook will ensure the pod has been deregistered from the Load Balancer, so the application can then gracefully closes any remaining open connections when the SIGTERM signal is received. Note Signal handling in container environments can be complicated when using \u201cwrapper scripts\u201d for the entrypoint of your application as the script will be PID 1 and may not forward the signal to your application. Be Wary of the Deregistration Delay \u00b6 Elastic Load Balancing stops sending requests to targets that are deregistering. By default, Elastic Load Balancing waits 300 seconds before completing the deregistration process, which can help in-flight requests to the target to complete. To change the amount of time that Elastic Load Balancing waits, update the deregistration delay value. The initial state of a deregistering target is draining . After the deregistration delay elapses, the deregistration process completes and the state of the target is unused . If the target is part of an Auto Scaling group, it can be terminated and replaced. If a deregistering target has no in-flight requests and no active connections, Elastic Load Balancing immediately completes the deregistration process, without waiting for the deregistration delay to elapse. Attention Even though target deregistration is complete, the status of the target is displayed as draining until the deregistration delay timeout expires. After the timeout expires, the target transitions to an unused state. If a deregistering target terminates the connection before the deregistration delay elapses, the client receives a 500-level error response . This can be configured using annotations on the Ingress resource using the alb.ingress.kubernetes.io/target-group-attributes annotation . Example: apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: echoserver-ip namespace: echoserver annotations: alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip alb.ingress.kubernetes.io/load-balancer-name: echoserver-ip alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30 spec: ingressClassName: alb rules: - host: echoserver.example.com http: paths: - path: / pathType: Exact backend: service: name: echoserver-service port: number: 8080","title":"Load Balancing ({'name': 'English', 'build': True})"},{"location":"networking/loadbalancing/loadbalancing/#avoiding-errors-timeouts-with-kubernetes-applications-and-aws-load-balancers","text":"After creating the necessary Kubernetes resources (Service, Deployment, Ingress, etc), your pods should be able to receive traffic from your clients through an Elastic Load Balancer. However, you may find that errors, timeouts, or connection resets are being generated when you make changes to the application or Kubernetes environment. Those changes could trigger an application deployment or a scaling action (either manual or automatic). Unfortunately, those errors may be generated even when your application is not logging problems. This is because the Kubernetes systems controlling the resources in your cluster may be running faster than the AWS systems that control the Load Balancer's target registration and health. Your Pods may also start receiving traffic before your application is ready to receive requests. Lets review the process through which a pod becomes Ready and how traffic can be routed into the pods.","title":"Avoiding Errors &amp; Timeouts with Kubernetes Applications and AWS Load Balancers"},{"location":"networking/loadbalancing/loadbalancing/#pod-readiness","text":"This diagram from a 2019 Kubecon talk , shows the steps taken for a pod to become Ready and receive traffic for a LoadBalancer service: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou When a pod that is a member of a NodePort Service is created, Kubernetes will go through the following steps: The pod is created on the Kubernetes control plane (i.e. from a kubectl command or scaling action). The pod is scheduled by the kube-scheduler and is assigned to a node in the cluster. The kubelet running on the assigned node will receive the update (via watch ) and will communicate with it\u2019s local Container Runtime to start the containers specified in the pod. When the containers have started running (and optionally pass ReadinessProbes ), the kubelet will update the pod status to Ready by sending an update to the kube-apiserver The Endpoint Controller will receive an update (via watch ) that there is a new pod that is Ready to be added to the Endpoints list for the Service and will add the pod IP/Port tuples to the appropriate endpoints array. kube-proxy receives an update (via watch ) that there is a new IP/Port to add to the iptables rules for the Service. The local iptables rules on the worker node will be updated with the additional target pod for the NodePort Service. Note When using an Ingress resource and Ingress Controller (like the AWS Load Balancer Controller) step 5 is handled by the relevant controller instead of kube-proxy . The controller will then take the necessary configuration steps (such as registering/deregistering the target to a load balancer) to allow traffic to flow as expected. When a pod is terminated , or changes to a not-ready state, a similar process occurs. The API server will receive either an update from a controller, kubelet, or kubectl client to terminate the pod. Steps 3-5 continue from there but will remove the Pod IP/Tuple from the endpoints list and iptables rules rather than insert.","title":"Pod Readiness"},{"location":"networking/loadbalancing/loadbalancing/#impact-on-deployments","text":"Below is a diagram showing the steps taken when an application deployment triggers the replacement of pods: Ready? A Deep Dive into Pod Readiness Gates for Service Health... - Minhan Xia & Ping Zou Of note in this diagram is that the second Pod will not be deployed until the first pod has reached the \u201cReady\u201d state. Steps 4 and 5 from the previous section will also happen in parallel with the deployment actions above. This means that the actions to propagate the new pod status may still be in-progress when the Deployment controller moves on to the next pods. Since this process also terminates the older version of pods, this could lead to a situation where the pods have reached a Ready status but those changes are still being propagated and the older versions of the pod have been terminated. This problem is exacerbated when working with load balancers from Cloud Providers like AWS as the Kubernetes systems described above do not, by default, take into account registration times or health checks on the Load Balancer. This means the Deployment update could completely cycle through the pods, but the Load Balancer has not finished performing the health checks or registrating the new Pods which could cause an outage. A similar problem occurs when a pod is terminated. Depending on the Load Balancer configuration the Pod may take a minute or two to deregister and stop taking new requests. Kubernetes does not delay rolling deployments for this deregistration, this can lead to a state where the Load Balancer is still sending traffic to the IP/port for a target Pod that has already been terminated. To avoid these problems we can add configuration to ensure the Kubernetes systems take actions more in line with the AWS Load Balancer behavior.","title":"Impact on Deployments"},{"location":"networking/loadbalancing/loadbalancing/#recommendations","text":"","title":"Recommendations"},{"location":"networking/loadbalancing/loadbalancing/#use-ip-target-type-load-balancers","text":"When creating a LoadBalancer type service the traffic is sent from the load balancer to any node in the cluster via Instance target type registration. Each node then redirects the traffic from the NodePort to a Pod/IP tuple in the Service\u2019s Endpoints array, this target could be running on a separate worker node Note Remember that array should only have \u201cReady\u201d pods This adds an additional hop to your request, and adds complexity to the Load Balancer configuration. For example, if the Load Balancer above was configured with session affinity, that affinity could only hold between the load balancer and the backend node (depending on the affinity configuration). Since the Load Balancer is not communicating with the backend Pod directly, controlling the traffic flow and timing with the Kubernetes systems becomes more difficult. When using the AWS Load Balancer Controller , IP target type can be used to register the Pod IP/Port tuples with the Load Balancer directly: This simplifies the traffic path from the Load Balancer to the target Pods. This means when a new target is registered we can be sure that target is a \u201cReady\u201d Pod IP and port, the health checks from the load balancer will hit the Pod Directly, and when reviewing VPC flow logs or monitoring utilities traffic between the Load Balancer and the Pods will be easily traceable. Using IP registration also allows us to control the timing and configuration of the traffic directly against the backend Pods, rather than trying to manage connections through the NodePort rules as well.","title":"Use IP Target-Type Load Balancers"},{"location":"networking/loadbalancing/loadbalancing/#utilize-pod-readiness-gates","text":"Pod Readiness Gates are additional requirements that must be met before the Pod is allowed to reach the \u201cReady\u201d state. [...] the AWS Load Balancer controller can set the readiness condition on the pods that constitute your ingress or service backend. The condition status on a pod will be set to True only when the corresponding target in the ALB/NLB target group shows a health state of \u00bbHealthy\u00ab. This prevents the rolling update of a deployment from terminating old pods until the newly created pods are \u00bbHealthy\u00ab in the ALB/NLB target group and ready to take traffic. The readiness gates ensure that Kubernetes doesn\u2019t move \u201ctoo fast\u201d when creating new replicas during a deployment and avoids the situation where Kubernetes has completed the deployment but the new Pods have not completed registration. To enable these you will need to: Deploy the latest version of the AWS Load Balancer Controller ( Refer to the documentation if upgrading older versions ) Label the namespace where the target pods are running with the elbv2.k8s.aws/pod-readiness-gate-inject: enabled label to inject Pod Readiness Gates automatically. To ensure all of your pods in a namespace get the readiness gate config, you need create your Ingress or Service and label the namespace before creating the pods.","title":"Utilize Pod Readiness Gates"},{"location":"networking/loadbalancing/loadbalancing/#ensure-pods-are-deregistered-from-load-balancers-before-termination","text":"When a pod is terminated steps 4 and 5 from the pod readiness section occur at the same time that the container processes receive the termination signals. This means that if your container is able to shut down quickly it may shut down faster than the Load Balancer is able to deregister the target. To avoid this situation adjust the Pod spec with: Add a preStop lifecycle hook to allow the application to deregister and gracefully close connections. This hook is called immediately before a container is terminated due to an API request or management event such as a liveness/startup probe failure, preemption, resource contention and others. Critically, this hook is called and allowed to complete before the termination signals are sent , provided the grace period is long enough to accommodate the execution. lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"] A simple sleep command like the one above can be used to introduce a short delay between when the pod is marked Terminating (and Load Balancer deregistration begins) and when the termination signal is sent to the container process. If needed this hook can also be leveraged for more advanced application termination/shutdown procedures. Extend the terminationGracePeriodSeconds to accommodate the entire prestop execution time, as well as the time your application takes to gracefully respond to the termination signal. In the example below the grace period is extended to 200s which allows the entire sleep 180 command to complete and then an extra 20s just to be sure my app can shutdown gracefully. spec: terminationGracePeriodSeconds: 200 containers: - name: webapp image: webapp-st:v1.3 [...] lifecycle: preStop: exec: command: [\"/bin/sh\", \"-c\", \"sleep 180\"]","title":"Ensure Pods are Deregistered from Load Balancers before Termination"},{"location":"networking/loadbalancing/loadbalancing/#ensure-pods-have-readiness-probes","text":"When creating Pods in Kubernetes the default Readiness state is \u201cReady\u201d, however most applications take a moment or two to instantiate and become ready for requests. You can define a readinessProbe in the Pod spec with an exec command or network request that is used to determine if the application has completed its start up and is ready for traffic. Pods that are created with a readinessProbe defined start in a \u201cNotReady\u201d state, and only change to \u201cReady\u201d when the readinessProbe is successful. This ensures that applications are not put \u201cin-service\u201d until the application has completed startup. Liveness probes are recommended to allow for application restarts when entering a broken state, e.g. deadlocks, however care should be taken with stateful applications as liveness failures will trigger a restart of the application. Startup probes can also be leveraged for applications that are slow to start. The below probes use HTTP probes against port 80 to check when the web application becomes ready (the same probe configuration is also used for the liveness probe): [...] ports: - containerPort: 80 livenessProbe: httpGet: path: / port: 80 failureThreshold: 1 periodSeconds: 10 initialDelaySeconds: 5 readinessProbe: httpGet: path: / port: 80 periodSeconds: 5 [...]","title":"Ensure Pods have Readiness Probes"},{"location":"networking/loadbalancing/loadbalancing/#configure-a-pod-disruption-budget","text":"A Pod Disruption Budget (PDB) limits the number of Pods of a replicated application that are down simultaneously from voluntary disruptions . For example, a quorum-based application would like to ensure that the number of replicas running is never brought below the number needed for a quorum. A web front end might want to ensure that the number of replicas serving load never falls below a certain percentage of the total. The PDB will protect the application against things like the nodes being drained, or application deployments. The PDB ensures that a minimum number or percentage of pods remain available while taking these actions. Attention PDB\u2019s will NOT protect the application against involuntary disruptions like a failure in the host OS or loss of network connectivity. The example below ensures that there is always at least 1 Pod available with the label app: echoserver . You can configure the correct replica count for your application or use a percentage : apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: echoserver-pdb namespace: echoserver spec: minAvailable: 1 selector: matchLabels: app: echoserver","title":"Configure a Pod Disruption Budget"},{"location":"networking/loadbalancing/loadbalancing/#gracefully-handle-termination-signals","text":"When a pod is Terminated the application running inside the container will receive two Signals . The first is the SIGTERM signal , which is a \u201cpolite\u201d request that the process cease execution. This signal can be blocked or the application could simply ignore this signal, so after the terminationGracePeriodSeconds has elapsed the application will receive the SIGKILL signal . SIGKILL is used to forcibly stop a process, it cannot be blocked, handled or ignored , and is therefore always fatal. These Signals are used by the container runtime to trigger your application to shutdown. The SIGTERM signal will also be sent after the preStop hook has executed. With the above configuration the preStop hook will ensure the pod has been deregistered from the Load Balancer, so the application can then gracefully closes any remaining open connections when the SIGTERM signal is received. Note Signal handling in container environments can be complicated when using \u201cwrapper scripts\u201d for the entrypoint of your application as the script will be PID 1 and may not forward the signal to your application.","title":"Gracefully handle Termination Signals"},{"location":"networking/loadbalancing/loadbalancing/#be-wary-of-the-deregistration-delay","text":"Elastic Load Balancing stops sending requests to targets that are deregistering. By default, Elastic Load Balancing waits 300 seconds before completing the deregistration process, which can help in-flight requests to the target to complete. To change the amount of time that Elastic Load Balancing waits, update the deregistration delay value. The initial state of a deregistering target is draining . After the deregistration delay elapses, the deregistration process completes and the state of the target is unused . If the target is part of an Auto Scaling group, it can be terminated and replaced. If a deregistering target has no in-flight requests and no active connections, Elastic Load Balancing immediately completes the deregistration process, without waiting for the deregistration delay to elapse. Attention Even though target deregistration is complete, the status of the target is displayed as draining until the deregistration delay timeout expires. After the timeout expires, the target transitions to an unused state. If a deregistering target terminates the connection before the deregistration delay elapses, the client receives a 500-level error response . This can be configured using annotations on the Ingress resource using the alb.ingress.kubernetes.io/target-group-attributes annotation . Example: apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: echoserver-ip namespace: echoserver annotations: alb.ingress.kubernetes.io/scheme: internet-facing alb.ingress.kubernetes.io/target-type: ip alb.ingress.kubernetes.io/load-balancer-name: echoserver-ip alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30 spec: ingressClassName: alb rules: - host: echoserver.example.com http: paths: - path: / pathType: Exact backend: service: name: echoserver-service port: number: 8080","title":"Be Wary of the Deregistration Delay"},{"location":"networking/monitoring/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Monitoring EKS workloads for Network performance issues \u00b6 Monitoring CoreDNS traffic for DNS throttling issues \u00b6 Running DNS intensive workloads can sometimes experience intermittent CoreDNS failures due to DNS throttling, and this can impact applications where you may encounter occasional UnknownHostException errors. The Deployment for CoreDNS has an anti-affinity policy that instructs the Kubernetes scheduler to run instances of CoreDNS on separate worker nodes in the cluster, i.e. it should avoid co-locating replicas on the same worker node. This effectively reduces the number of DNS queries per network interface because traffic from each replica is routed through a different ENI. If you notice that DNS queries are being throttled because of the 1024 packets per second limit, you can 1) try increasing the number of CoreDNS replicas or 2) implement NodeLocal DNSCache . See Monitor CoreDNS Metrics for further information. Challenge \u00b6 Packet drop happens in seconds and it can be tricky for us to properly monitor these patterns to determine if DNS throttling is actually happening. DNS queries are throttled at the elastic network interface level. So, throttled queries don't appear in the query logging. Flow logs do not capture all IP traffic. E.g. Traffic generated by instances when they contact the Amazon DNS server. If you use your own DNS server, then all traffic to that DNS server is logged Solution \u00b6 An easy way to identify the DNS throttling issues in worker nodes is by capturing linklocal_allowance_exceeded metric. The linklocal_allowance_exceeded is number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service. Instead of tracking this event real-time, we can stream this metric to Amazon Managed Service for Prometheus as well and can have them visualized in Amazon Managed Grafana Monitoring DNS query delays using Conntrack metrics \u00b6 Another metric that can help in monitoring the CoreDNS throttling / query delay are conntrack_allowance_available and conntrack_allowance_exceeded . Connectivity failures caused by exceeding Connections Tracked allowances can have a larger impact than those resulting from exceeding other allowances. When relying on TCP to transfer data, packets that are queued or dropped due to exceeding EC2 instance network allowances, such as Bandwidth, PPS, etc., are typically handled gracefully thanks to TCP\u2019s congestion control capabilities. Impacted flows will be slowed down, and lost packets will be retransmitted. However, when an instance exceeds its Connections Tracked allowance, no new connections can be established until some of the existing ones are closed to make room for new connections. conntrack_allowance_available and conntrack_allowance_exceeded helps customers in monitoring the connections tracked allowance which varies for every instance. These network performance metrics give customers visibility into the number of packets queued or dropped when an instance\u2019s networking allowances, such as Network Bandwidth, Packets-Per-Second (PPS), Connections Tracked, and Link-local service access (Amazon DNS, Instance Meta Data Service, Amazon Time Sync) are exceeded conntrack_allowance_available is the number of tracked connections that can be established by the instance before hitting the Connections Tracked allowance of that instance type (supported for nitro-based instance only). conntrack_allowance_exceeded is the number of packets dropped because connection tracking exceeded the maximum for the instance and new connections could not be established. Other important Network performance metrics \u00b6 Other important network performance metrics include: bw_in_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the inbound aggregate bandwidth exceeded the maximum for the instance bw_out_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the outbound aggregate bandwidth exceeded the maximum for the instance pps_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the bidirectional PPS exceeded the maximum for the instance Capturing the metrics to monitor workloads for network performance issues \u00b6 The Elastic Network Adapter (ENA ) driver publishes network performance metrics discussed above from the instances where they are enabled. All the network performance metrics can be published to CloudWatch using the CloudWatch agent. Please refer to the blog for more information. Let's now capture the metrics discussed above, store them in Amazon Managed Service for Prometheus and visualize using Amazon Managed Grafana Prerequisites \u00b6 ethtool - Ensure the worker nodes have ethtool installed An AMP workspace configured in your AWS account. For instructions, see Create a workspace in the AMP User Guide. Amazon Managed Grafana Workspace Deploying Prometheus ethtool exporter \u00b6 The deployment contains a python script that pulls information from ethtool and publishes it in prometheus format. kubectl apply -f https://raw.githubusercontent.com/Showmax/prometheus-ethtool-exporter/master/deploy/k8s-daemonset.yaml Deploy the ADOT collector to scrape the ethtool metrics and store in Amazon Managed Service for Prometheus workspace \u00b6 Each cluster where you install AWS Distro for OpenTelemetry (ADOT) must have this role to grant your AWS service account permissions to store metrics into Amazon Managed Service for Prometheus. Follow these steps to create and associate your IAM role to your Amazon EKS service account using IRSA: eksctl create iamserviceaccount --name adot-collector --namespace default --cluster <CLUSTER_NAME> --attach-policy-arn arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess --attach-policy-arn arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy --region <REGION> --approve --override-existing-serviceaccounts Let's deploy the ADOT collector to scrape the metrcis from the prometheus ethtool exporter and store it in Amazon Managed Service for Prometheus The following procedure uses an example YAML file with deployment as the mode value. This is the default mode and deploys the ADOT Collector similarly to a standalone application. This configuration receives OTLP metrics from the sample application and Amazon Managed Service for Prometheus metrics scraped from pods on the cluster curl -o collector-config-amp.yaml https://raw.githubusercontent.com/aws-observability/aws-otel-community/master/sample-configs/operator/collector-config-amp.yaml In collector-config-amp.yaml, replace the following with your own values: * mode: deployment * serviceAccount: adot-collector * endpoint: \" \" * region: \" \" * name: adot-collector kubectl apply -f collector-config-amp.yaml Once the adot collector is deployed, the metrics will be stored successfully in Amazon Prometheus Configure alert manager in Amazon Managed Service for Prometheus to send notifications \u00b6 Let's configure recording rules and alerting rules to check for the metrics discussed so far. We will use the ACK Controller for Amazon Managed Service for Prometheus to provision the alerting and recording rules. Let's deploy the ACL controller for the Amazon Managed Service for Prometheus service: export SERVICE=prometheusservice export RELEASE_VERSION=`curl -sL https://api.github.com/repos/aws-controllers-k8s/$SERVICE-controller/releases/latest | grep '\"tag_name\":' | cut -d'\"' -f4` export ACK_SYSTEM_NAMESPACE=ack-system export AWS_REGION=us-east-1 aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin public.ecr.aws helm install --create-namespace -n $ACK_SYSTEM_NAMESPACE ack-$SERVICE-controller \\ oci://public.ecr.aws/aws-controllers-k8s/$SERVICE-chart --version=$RELEASE_VERSION --set=aws.region=$AWS_REGION Run the command and after a few moments you should see the following message: You are now able to create Amazon Managed Service for Prometheus (AMP) resources! The controller is running in \"cluster\" mode. The controller is configured to manage AWS resources in region: \"us-east-1\" The ACK controller has been successfully installed and ACK can now be used to provision an Amazon Managed Service for Prometheus workspace. Let's now create a yaml file for provisioning the alert manager defnition and rule groups. Save the below file as rulegroup.yaml apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: RuleGroupsNamespace metadata: name: default-rule spec: workspaceID: <Your WORKSPACE-ID> name: default-rule configuration: | groups: - name: ppsallowance rules: - record: metric:pps_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"}[30s]) - alert: PPSAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"PPSAllowanceExceeded is greater than 0\" - name: bw_in rules: - record: metric:bw_in_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"}[30s]) - alert: BWINAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWInAllowanceExceeded is greater than 0\" - name: bw_out rules: - record: metric:bw_out_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"}[30s]) - alert: BWOutAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWoutAllowanceExceeded is greater than 0\" - name: conntrack rules: - record: metric:conntrack_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) - alert: ConntrackAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"ConnTrackAllowanceExceeded is greater than 0\" - name: linklocal rules: - record: metric:linklocal_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) - alert: LinkLocalAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Packets dropped due to PPS rate allowance exceeded for local services (instance {{ $labels.instance }}) description: \"LinkLocalAllowanceExceeded is greater than 0\" Replace Your WORKSPACE-ID with the Workspace ID of the workspace you are using. Let's now configure the alert manager definition. Save the below fie as alertmanager.yaml apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: AlertManagerDefinition metadata: name: alert-manager spec: workspaceID: <Your WORKSPACE-ID > configuration: | alertmanager_config: | route: receiver: default_receiver receivers: - name: default_receiver sns_configs: - topic_arn: TOPIC-ARN sigv4: region: REGION message: | alert_type: {{ .CommonLabels.alertname }} event_type: {{ .CommonLabels.event_type }} Replace You WORKSPACE-ID with the Workspace ID of the new workspace, TOPIC-ARN with the ARN of an Amazon Simple Notification Service topic where you want to send the alerts, and REGION with the current region of the workload. Make sure that your workspace has permissions to send messages to Amazon SNS. Visualize ethtool metrics in Amazon Managed Grafana \u00b6 Let's visualize the metrics within the Amazon Managed Grafana and build a dashboard. Configure the Amazon Managed Service for Prometheus as a datasource inside the Amazon Managed Grafana console. For instructions, see Add Amazon Prometheus as a datasource Let's explore the metrics in Amazon Managed Grafana now: Click the explore button, and search for ethtool: Let's build a dashboard for the linklocal_allowance_exceeded metric by using the query rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) . It will result in the below dashboard. We can clearly see that there were no packets dropped as the value is zero. Let's build a dashboard for the conntrack_allowance_exceeded metric by using the query rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) . It will result in the below dashboard. The metric conntrack_allowance_exceeded can be visualized in CloudWatch, provided you run a cloudwatch agent as described here . The resulting dashboard in CloudWatch will look like below: We can clearly see that there were no packets dropped as the value is zero. If you are using Nitro-based instances, you can create a similar dashboard for conntrack_allowance_available and pro-actively monitor the connections in your EC2 instance. You can further extend this by configuring alerts in Amazon Managed Grafana to send notifications to Slack, SNS, Pagerduty etc.","title":"Monitoring for Network performance issues"},{"location":"networking/monitoring/#monitoring-eks-workloads-for-network-performance-issues","text":"","title":"Monitoring EKS workloads for Network performance issues"},{"location":"networking/monitoring/#monitoring-coredns-traffic-for-dns-throttling-issues","text":"Running DNS intensive workloads can sometimes experience intermittent CoreDNS failures due to DNS throttling, and this can impact applications where you may encounter occasional UnknownHostException errors. The Deployment for CoreDNS has an anti-affinity policy that instructs the Kubernetes scheduler to run instances of CoreDNS on separate worker nodes in the cluster, i.e. it should avoid co-locating replicas on the same worker node. This effectively reduces the number of DNS queries per network interface because traffic from each replica is routed through a different ENI. If you notice that DNS queries are being throttled because of the 1024 packets per second limit, you can 1) try increasing the number of CoreDNS replicas or 2) implement NodeLocal DNSCache . See Monitor CoreDNS Metrics for further information.","title":"Monitoring CoreDNS traffic for DNS throttling issues"},{"location":"networking/monitoring/#challenge","text":"Packet drop happens in seconds and it can be tricky for us to properly monitor these patterns to determine if DNS throttling is actually happening. DNS queries are throttled at the elastic network interface level. So, throttled queries don't appear in the query logging. Flow logs do not capture all IP traffic. E.g. Traffic generated by instances when they contact the Amazon DNS server. If you use your own DNS server, then all traffic to that DNS server is logged","title":"Challenge"},{"location":"networking/monitoring/#solution","text":"An easy way to identify the DNS throttling issues in worker nodes is by capturing linklocal_allowance_exceeded metric. The linklocal_allowance_exceeded is number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service. Instead of tracking this event real-time, we can stream this metric to Amazon Managed Service for Prometheus as well and can have them visualized in Amazon Managed Grafana","title":"Solution"},{"location":"networking/monitoring/#monitoring-dns-query-delays-using-conntrack-metrics","text":"Another metric that can help in monitoring the CoreDNS throttling / query delay are conntrack_allowance_available and conntrack_allowance_exceeded . Connectivity failures caused by exceeding Connections Tracked allowances can have a larger impact than those resulting from exceeding other allowances. When relying on TCP to transfer data, packets that are queued or dropped due to exceeding EC2 instance network allowances, such as Bandwidth, PPS, etc., are typically handled gracefully thanks to TCP\u2019s congestion control capabilities. Impacted flows will be slowed down, and lost packets will be retransmitted. However, when an instance exceeds its Connections Tracked allowance, no new connections can be established until some of the existing ones are closed to make room for new connections. conntrack_allowance_available and conntrack_allowance_exceeded helps customers in monitoring the connections tracked allowance which varies for every instance. These network performance metrics give customers visibility into the number of packets queued or dropped when an instance\u2019s networking allowances, such as Network Bandwidth, Packets-Per-Second (PPS), Connections Tracked, and Link-local service access (Amazon DNS, Instance Meta Data Service, Amazon Time Sync) are exceeded conntrack_allowance_available is the number of tracked connections that can be established by the instance before hitting the Connections Tracked allowance of that instance type (supported for nitro-based instance only). conntrack_allowance_exceeded is the number of packets dropped because connection tracking exceeded the maximum for the instance and new connections could not be established.","title":"Monitoring DNS query delays using Conntrack metrics"},{"location":"networking/monitoring/#other-important-network-performance-metrics","text":"Other important network performance metrics include: bw_in_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the inbound aggregate bandwidth exceeded the maximum for the instance bw_out_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the outbound aggregate bandwidth exceeded the maximum for the instance pps_allowance_exceeded (ideal value of the metric should be zero) is the number of packets queued and/or dropped because the bidirectional PPS exceeded the maximum for the instance","title":"Other important Network performance metrics"},{"location":"networking/monitoring/#capturing-the-metrics-to-monitor-workloads-for-network-performance-issues","text":"The Elastic Network Adapter (ENA ) driver publishes network performance metrics discussed above from the instances where they are enabled. All the network performance metrics can be published to CloudWatch using the CloudWatch agent. Please refer to the blog for more information. Let's now capture the metrics discussed above, store them in Amazon Managed Service for Prometheus and visualize using Amazon Managed Grafana","title":"Capturing the metrics to monitor workloads for network performance issues"},{"location":"networking/monitoring/#prerequisites","text":"ethtool - Ensure the worker nodes have ethtool installed An AMP workspace configured in your AWS account. For instructions, see Create a workspace in the AMP User Guide. Amazon Managed Grafana Workspace","title":"Prerequisites"},{"location":"networking/monitoring/#deploying-prometheus-ethtool-exporter","text":"The deployment contains a python script that pulls information from ethtool and publishes it in prometheus format. kubectl apply -f https://raw.githubusercontent.com/Showmax/prometheus-ethtool-exporter/master/deploy/k8s-daemonset.yaml","title":"Deploying Prometheus ethtool exporter"},{"location":"networking/monitoring/#deploy-the-adot-collector-to-scrape-the-ethtool-metrics-and-store-in-amazon-managed-service-for-prometheus-workspace","text":"Each cluster where you install AWS Distro for OpenTelemetry (ADOT) must have this role to grant your AWS service account permissions to store metrics into Amazon Managed Service for Prometheus. Follow these steps to create and associate your IAM role to your Amazon EKS service account using IRSA: eksctl create iamserviceaccount --name adot-collector --namespace default --cluster <CLUSTER_NAME> --attach-policy-arn arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess --attach-policy-arn arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy --region <REGION> --approve --override-existing-serviceaccounts Let's deploy the ADOT collector to scrape the metrcis from the prometheus ethtool exporter and store it in Amazon Managed Service for Prometheus The following procedure uses an example YAML file with deployment as the mode value. This is the default mode and deploys the ADOT Collector similarly to a standalone application. This configuration receives OTLP metrics from the sample application and Amazon Managed Service for Prometheus metrics scraped from pods on the cluster curl -o collector-config-amp.yaml https://raw.githubusercontent.com/aws-observability/aws-otel-community/master/sample-configs/operator/collector-config-amp.yaml In collector-config-amp.yaml, replace the following with your own values: * mode: deployment * serviceAccount: adot-collector * endpoint: \" \" * region: \" \" * name: adot-collector kubectl apply -f collector-config-amp.yaml Once the adot collector is deployed, the metrics will be stored successfully in Amazon Prometheus","title":"Deploy the ADOT collector to scrape the ethtool metrics and store in Amazon Managed Service for Prometheus workspace"},{"location":"networking/monitoring/#configure-alert-manager-in-amazon-managed-service-for-prometheus-to-send-notifications","text":"Let's configure recording rules and alerting rules to check for the metrics discussed so far. We will use the ACK Controller for Amazon Managed Service for Prometheus to provision the alerting and recording rules. Let's deploy the ACL controller for the Amazon Managed Service for Prometheus service: export SERVICE=prometheusservice export RELEASE_VERSION=`curl -sL https://api.github.com/repos/aws-controllers-k8s/$SERVICE-controller/releases/latest | grep '\"tag_name\":' | cut -d'\"' -f4` export ACK_SYSTEM_NAMESPACE=ack-system export AWS_REGION=us-east-1 aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin public.ecr.aws helm install --create-namespace -n $ACK_SYSTEM_NAMESPACE ack-$SERVICE-controller \\ oci://public.ecr.aws/aws-controllers-k8s/$SERVICE-chart --version=$RELEASE_VERSION --set=aws.region=$AWS_REGION Run the command and after a few moments you should see the following message: You are now able to create Amazon Managed Service for Prometheus (AMP) resources! The controller is running in \"cluster\" mode. The controller is configured to manage AWS resources in region: \"us-east-1\" The ACK controller has been successfully installed and ACK can now be used to provision an Amazon Managed Service for Prometheus workspace. Let's now create a yaml file for provisioning the alert manager defnition and rule groups. Save the below file as rulegroup.yaml apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: RuleGroupsNamespace metadata: name: default-rule spec: workspaceID: <Your WORKSPACE-ID> name: default-rule configuration: | groups: - name: ppsallowance rules: - record: metric:pps_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"}[30s]) - alert: PPSAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"PPSAllowanceExceeded is greater than 0\" - name: bw_in rules: - record: metric:bw_in_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"}[30s]) - alert: BWINAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWInAllowanceExceeded is greater than 0\" - name: bw_out rules: - record: metric:bw_out_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"}[30s]) - alert: BWOutAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWoutAllowanceExceeded is greater than 0\" - name: conntrack rules: - record: metric:conntrack_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) - alert: ConntrackAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"ConnTrackAllowanceExceeded is greater than 0\" - name: linklocal rules: - record: metric:linklocal_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) - alert: LinkLocalAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Packets dropped due to PPS rate allowance exceeded for local services (instance {{ $labels.instance }}) description: \"LinkLocalAllowanceExceeded is greater than 0\" Replace Your WORKSPACE-ID with the Workspace ID of the workspace you are using. Let's now configure the alert manager definition. Save the below fie as alertmanager.yaml apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: AlertManagerDefinition metadata: name: alert-manager spec: workspaceID: <Your WORKSPACE-ID > configuration: | alertmanager_config: | route: receiver: default_receiver receivers: - name: default_receiver sns_configs: - topic_arn: TOPIC-ARN sigv4: region: REGION message: | alert_type: {{ .CommonLabels.alertname }} event_type: {{ .CommonLabels.event_type }} Replace You WORKSPACE-ID with the Workspace ID of the new workspace, TOPIC-ARN with the ARN of an Amazon Simple Notification Service topic where you want to send the alerts, and REGION with the current region of the workload. Make sure that your workspace has permissions to send messages to Amazon SNS.","title":"Configure alert manager in Amazon Managed Service for Prometheus to send notifications"},{"location":"networking/monitoring/#visualize-ethtool-metrics-in-amazon-managed-grafana","text":"Let's visualize the metrics within the Amazon Managed Grafana and build a dashboard. Configure the Amazon Managed Service for Prometheus as a datasource inside the Amazon Managed Grafana console. For instructions, see Add Amazon Prometheus as a datasource Let's explore the metrics in Amazon Managed Grafana now: Click the explore button, and search for ethtool: Let's build a dashboard for the linklocal_allowance_exceeded metric by using the query rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) . It will result in the below dashboard. We can clearly see that there were no packets dropped as the value is zero. Let's build a dashboard for the conntrack_allowance_exceeded metric by using the query rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) . It will result in the below dashboard. The metric conntrack_allowance_exceeded can be visualized in CloudWatch, provided you run a cloudwatch agent as described here . The resulting dashboard in CloudWatch will look like below: We can clearly see that there were no packets dropped as the value is zero. If you are using Nitro-based instances, you can create a similar dashboard for conntrack_allowance_available and pro-actively monitor the connections in your EC2 instance. You can further extend this by configuring alerts in Amazon Managed Grafana to send notifications to Slack, SNS, Pagerduty etc.","title":"Visualize ethtool metrics in Amazon Managed Grafana"},{"location":"networking/monitoring/index.kr/","text":"{'name': 'English', 'build': True} \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c EKS \uc6cc\ud06c\ub85c\ub4dc \ubaa8\ub2c8\ud130\ub9c1 \u00b6 DNS \uc2a4\ub85c\ud2c0\ub9c1 \ubb38\uc81c\uc5d0 \ub300\ud55c CoreDNS \ud2b8\ub798\ud53d \ubaa8\ub2c8\ud130\ub9c1 \u00b6 DNS \uc9d1\uc57d\uc801 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\uba74 DNS \uc2a4\ub85c\ud2c0\ub9c1\uc73c\ub85c \uc778\ud574 \uac04\ud5d0\uc801\uc73c\ub85c CoreDNS \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub85c \uc778\ud574 \uac00\ub054 \uc54c \uc218 \uc5c6\ub294 Hostexception \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \ubc30\ud3ec\uc5d0\ub294 Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \ud074\ub7ec\uc2a4\ud130\uc758 \uac1c\ubcc4 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c CoreDNS \uc778\uc2a4\ud134\uc2a4\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud558\ub294 \ubc18\uc120\ud638\ub3c4 \uc815\ucc45\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc989, \ub3d9\uc77c\ud55c \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uac01 \ubcf5\uc81c\ubcf8\uc758 \ud2b8\ub798\ud53d\uc774 \ub2e4\ub978 ENI\ub97c \ud1b5\ud574 \ub77c\uc6b0\ud305\ub418\ubbc0\ub85c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 DNS \ucffc\ub9ac \uc218\uac00 \ud6a8\uacfc\uc801\uc73c\ub85c \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \ucd08\ub2f9 1024\uac1c\uc758 \ud328\ud0b7 \uc81c\ud55c\uc73c\ub85c \uc778\ud574 DNS \ucffc\ub9ac\uac00 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uacaa\ub294 \uacbd\uc6b0 1) \ucf54\uc5b4 DNS \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9ac\uac70\ub098 2) NodeLocal DNS \uce90\uc2dc \ub97c \uad6c\ud604\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CoreDNS \uba54\ud2b8\ub9ad \ubaa8\ub2c8\ud130\ub9c1 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub3c4\uc804 \uacfc\uc81c \u00b6 \ud328\ud0b7 \ub4dc\ub86d\uc740 \uba87 \ucd08 \ub9cc\uc5d0 \ubc1c\uc0dd\ud558\uba70 DNS \uc2a4\ub85c\ud2c0\ub9c1\uc774 \uc2e4\uc81c\ub85c \ubc1c\uc0dd\ud558\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c \ud328\ud134\uc744 \uc801\uc808\ud558\uac8c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc740 \uae4c\ub2e4\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \ucffc\ub9ac\ub294 \uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uc870\uc808\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud55c \ucffc\ub9ac\ub294 \ucffc\ub9ac \ub85c\uae45\uc5d0 \ub098\ud0c0\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud50c\ub85c\uc6b0 \ub85c\uadf8\ub294 \ubaa8\ub4e0 IP \ud2b8\ub798\ud53d\uc744 \ucea1\ucc98\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608: \uc778\uc2a4\ud134\uc2a4\uac00 Amazon DNS \uc11c\ubc84\uc5d0 \uc811\uc18d\ud560 \ub54c \uc0dd\uc131\ub418\ub294 \ud2b8\ub798\ud53d \uc790\uccb4 DNS \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 DNS \uc11c\ubc84\ub85c \ud5a5\ud558\ub294 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \ub85c\uae45\ub429\ub2c8\ub2e4. \uc194\ub8e8\uc158 \u00b6 An easy way to identify the DNS throttling issues in worker nodes is by capturing linklocal_allowance_exceeded metric. The linklocal_allowance_exceeded is number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service. Instead of tracking this event real-time, we can stream this metric to Amazon Managed Service for Prometheus as well and can have them visualized in Amazon Managed Grafana Conntrack \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud558\uc5ec DNS \ucffc\ub9ac \uc9c0\uc5f0 \ubaa8\ub2c8\ud130\ub9c1 \u00b6 CoreDNS \uc2a4\ub85c\ud2c0\ub9c1/\ucffc\ub9ac \uc9c0\uc5f0\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 \ub610 \ub2e4\ub978 \uc9c0\ud45c\ub294 conntrack_allowance_available \uacfc conntrack_allowance_exceed \uc785\ub2c8\ub2e4. \uc5f0\uacb0 \ucd94\uc801 \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ubc1c\uc0dd\ud558\ub294 \uc5f0\uacb0 \uc7a5\uc560\ub294 \ub2e4\ub978 \ud5c8\uc6a9\uce58\ub97c \ucd08\uacfc\ud558\uc5ec \ubc1c\uc0dd\ud558\ub294 \uc5f0\uacb0 \uc2e4\ud328\ubcf4\ub2e4 \ub354 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TCP\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\ub294 \uacbd\uc6b0, \ub300\uc5ed\ud3ed, PPS \ub4f1\uacfc \uac19\uc774 EC2 \uc778\uc2a4\ud134\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30\uc5f4\uc5d0 \uc788\uac70\ub098 \uc0ad\uc81c\ub418\ub294 \ud328\ud0b7\uc740 \uc77c\ubc18\uc801\uc73c\ub85c TCP\uc758 \ud63c\uc7a1 \uc81c\uc5b4 \uae30\ub2a5 \ub355\ubd84\uc5d0 \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc601\ud5a5\uc744 \ubc1b\uc740 \ud750\ub984\uc740 \ub290\ub824\uc9c0\uace0 \uc190\uc2e4\ub41c \ud328\ud0b7\uc740 \uc7ac\uc804\uc1a1\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc778\uc2a4\ud134\uc2a4\uac00 Connections Tracked \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\ub294 \uacbd\uc6b0 \uc0c8 \uc5f0\uacb0\uc744 \uc704\ud55c \uacf5\uac04\uc744 \ub9c8\ub828\ud558\uae30 \uc704\ud574 \uae30\uc874 \uc5f0\uacb0 \uc911 \uc77c\ubd80\ub97c \ub2eb\uae30 \uc804\uae4c\uc9c0\ub294 \uc0c8 \uc5f0\uacb0\uc744 \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. conntrack_allowance_available \ubc0f conntrack_allowance_exceed \ub294 \uace0\uac1d\uc774 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\ub9c8\ub2e4 \ub2ec\ub77c\uc9c0\ub294 \uc5f0\uacb0 \ucd94\uc801 \ud5c8\uc6a9\ub7c9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub97c \ud1b5\ud574 \uace0\uac1d\uc740 \ub124\ud2b8\uc6cc\ud06c \ub300\uc5ed\ud3ed, \ucd08\ub2f9 \ud328\ud0b7 \uc218 (PPS), \ucd94\uc801\ub41c \uc5f0\uacb0, \ub9c1\ud06c \ub85c\uceec \uc11c\ube44\uc2a4 \uc561\uc138\uc2a4 (Amazon DNS, \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0 \ub370\uc774\ud130 \uc11c\ube44\uc2a4, Amazon Time Sync) \uc640 \uac19\uc740 \uc778\uc2a4\ud134\uc2a4\uc758 \ub124\ud2b8\uc6cc\ud0b9 \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud588\uc744 \ub54c \ub300\uae30 \ub610\ub294 \uc0ad\uc81c\ub418\ub294 \ud328\ud0b7 \uc218\ub97c \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. conntrack_allowance_available \uc740 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ucd94\uc801\ub41c \uc5f0\uacb0 \ud5c8\uc6a9\ub7c9\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc124\uc815\ud560 \uc218 \uc788\ub294 \ucd94\uc801\ub41c \uc5f0\uacb0 \uc218\uc785\ub2c8\ub2e4 (\ub2c8\ud2b8\ub85c \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub9cc \uc9c0\uc6d0\ub428). conntrack_allowance_exceed \ub294 \uc778\uc2a4\ud134\uc2a4\uc758 \uc5f0\uacb0 \ucd94\uc801\uc774 \ucd5c\ub300\uce58\ub97c \ucd08\uacfc\ud558\uc5ec \uc0c8 \uc5f0\uacb0\uc744 \uc124\uc815\ud560 \uc218 \uc5c6\uc5b4\uc11c \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. \uae30\ud0c0 \uc911\uc694\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c \u00b6 \uae30\ud0c0 \uc911\uc694\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. bw_in_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc778\ubc14\uc6b4\ub4dc \uc9d1\uacc4 \ub300\uc5ed\ud3ed\uc774 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. bw_out_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ucd1d \ub300\uc5ed\ud3ed\uc774 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. pps_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc591\ubc29\ud5a5 PPS\uac00 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c \uc6cc\ud06c\ub85c\ub4dc \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud55c \uc9c0\ud45c \ucea1\ucc98 \u00b6 Elastic Network Adapter (ENA) \ub4dc\ub77c\uc774\ubc84\ub294 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc774 \ud65c\uc131\ud654\ub41c \uc778\uc2a4\ud134\uc2a4\ub85c\ubd80\ud130 \ud574\ub2f9 \uba54\ud2b8\ub9ad\uc744 \uac8c\uc2dc\ud569\ub2c8\ub2e4. CloudWatch \uc5d0\uc774\uc804\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub97c CloudWatch\uc5d0 \uac8c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774\uc81c \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uc9c0\ud45c\ub97c \ucea1\ucc98\ud558\uc5ec Prometheus\uc6a9 Amazon Managed Service\uc5d0 \uc800\uc7a5\ud558\uace0 Amazon Managed Grafana\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uac01\ud654\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d \u00b6 ethtool - \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 ethtool\uc774 \uc124\uce58\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. AWS \uacc4\uc815\uc5d0 \uad6c\uc131\ub41c AMP \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4.\uc9c0\uce68\uc740 AMP \uc0ac\uc6a9 \uc124\uba85\uc11c\uc758 \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4 \ub9cc\ub4e4\uae30 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon Managed Grafana \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 ethtool \uc775\uc2a4\ud3ec\ud130 \uad6c\ucd95 \u00b6 \ubc30\ud3ec\uc5d0\ub294 ethtool\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc640 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud615\uc2dd\uc73c\ub85c \uac8c\uc2dc\ud558\ub294 Python \uc2a4\ud06c\ub9bd\ud2b8\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. kubectl apply -f https://raw.githubusercontent.com/Showmax/prometheus-ethtool-exporter/master/deploy/k8s-daemonset.yaml ADOT \uceec\ub809\ud130\ub97c \ubc30\ud3ec\ud558\uc5ec ethtool \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uace0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4 \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc800\uc7a5 \u00b6 OpenTelemetry\uc6a9 AWS \ubc30\ud3ec\ud310 (ADOT) \uc744 \uc124\uce58\ud558\ub294 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \uc774 \uc5ed\ud560\uc774 \uc788\uc5b4\uc57c AWS \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uba54\ud2b8\ub9ad\uc744 Prometheus\uc6a9 Amazon \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\uc5d0 \uc800\uc7a5\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub2e4\uc74c \ub2e8\uacc4\uc5d0 \ub530\ub77c IRSA\ub97c \uc0ac\uc6a9\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\uace0 Amazon EKS \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uc5f0\uacb0\ud558\uc2ed\uc2dc\uc624. eksctl create iamserviceaccount --name adot-collector --namespace default --cluster <CLUSTER_NAME> --attach-policy-arn arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess --attach-policy-arn arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy --region <REGION> --approve --override-existing-serviceaccounts ADOT \uceec\ub809\ud130\ub97c \ubc30\ud3ec\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 ethtool \uc775\uc2a4\ud3ec\ud130\uc758 \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\uc5d0 \uc800\uc7a5\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc808\ucc28\uc5d0\uc11c\ub294 \ubc30\ud3ec\ub97c \ubaa8\ub4dc \uac12\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c YAML \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ubaa8\ub4dc\ub294 \uae30\ubcf8 \ubaa8\ub4dc\uc774\uba70 \ub3c5\ub9bd \uc2e4\ud589\ud615 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \uc720\uc0ac\ud558\uac8c ADOT Collector\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ud3ec\ub4dc\uc5d0\uc11c \uc2a4\ud06c\ub7a9\ud55c \uc0d8\ud50c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc Amazon Managed Service for Prometheus \uc9c0\ud45c\ub85c\ubd80\ud130 OTLP \uc9c0\ud45c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. curl -o collector-config-amp.yaml https://raw.githubusercontent.com/aws-observability/aws-otel-community/master/sample-configs/operator/collector-config-amp.yaml \uceec\ub809\ud130-config-amp.yaml\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc0ac\uc6a9\uc790 \uace0\uc720\uc758 \uac12\uc73c\ub85c \ubc14\uafb8\uc2ed\uc2dc\uc624. * mode: deployment * serviceAccount: adot-collector * endpoint: \" \" * region: \" \" * name: adot-collector kubectl apply -f collector-config-amp.yaml \ucc44\ud0dd \uc218\uc9d1\uae30\uac00 \ubc30\ud3ec\ub418\uba74 \uc9c0\ud45c\uac00 Amazon Prometheus\uc5d0 \uc131\uacf5\uc801\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4. Prometheus\uac00 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub3c4\ub85d Amazon \uad00\ub9ac \uc11c\ube44\uc2a4\uc758 \uc54c\ub9bc \uad00\ub9ac\uc790\ub97c \uad6c\uc131 \u00b6 \uc9c0\uae08\uae4c\uc9c0 \uc124\uba85\ud55c \uba54\ud2b8\ub9ad\uc744 \ud655\uc778\ud558\uae30 \uc704\ud574 \uae30\ub85d \uaddc\uce59 \ubc0f \uacbd\uace0 \uaddc\uce59\uc744 \uad6c\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\uc6a9 ACK \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc54c\ub9bc \ubc0f \uae30\ub85d \uaddc\uce59\uc744 \uaddc\uc815\ud560 \uac83\uc785\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 Amazon \uad00\ub9ac \uc11c\ube44\uc2a4 \uc11c\ube44\uc2a4\ub97c \uc704\ud55c ACL \ucee8\ud2b8\ub864\ub7ec\ub97c \ubc30\ud3ec\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. export SERVICE=prometheusservice export RELEASE_VERSION=`curl -sL https://api.github.com/repos/aws-controllers-k8s/$SERVICE-controller/releases/latest | grep '\"tag_name\":' | cut -d'\"' -f4` export ACK_SYSTEM_NAMESPACE=ack-system export AWS_REGION=us-east-1 aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin public.ecr.aws helm install --create-namespace -n $ACK_SYSTEM_NAMESPACE ack-$SERVICE-controller \\ oci://public.ecr.aws/aws-controllers-k8s/$SERVICE-chart --version=$RELEASE_VERSION --set=aws.region=$AWS_REGION \uba85\ub839\uc744 \uc2e4\ud589\ud558\uba74 \uba87 \ubd84 \ud6c4 \ub2e4\uc74c \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. You are now able to create Amazon Managed Service for Prometheus (AMP) resources! The controller is running in \"cluster\" mode. The controller is configured to manage AWS resources in region: \"us-east-1\" The ACK controller has been successfully installed and ACK can now be used to provision an Amazon Managed Service for Prometheus workspace. \uc774\uc81c \uacbd\uace0 \uad00\ub9ac\uc790 \uc815\uc758 \ubc0f \uaddc\uce59 \uadf8\ub8f9\uc744 \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc704\ud55c yaml \ud30c\uc77c\uc744 \uc0dd\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ud30c\uc77c\uc744 rulegroup.yaml \ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: RuleGroupsNamespace metadata: name: default-rule spec: workspaceID: <Your WORKSPACE-ID> name: default-rule configuration: | groups: - name: ppsallowance rules: - record: metric:pps_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"}[30s]) - alert: PPSAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"PPSAllowanceExceeded is greater than 0\" - name: bw_in rules: - record: metric:bw_in_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"}[30s]) - alert: BWINAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWInAllowanceExceeded is greater than 0\" - name: bw_out rules: - record: metric:bw_out_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"}[30s]) - alert: BWOutAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWoutAllowanceExceeded is greater than 0\" - name: conntrack rules: - record: metric:conntrack_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) - alert: ConntrackAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"ConnTrackAllowanceExceeded is greater than 0\" - name: linklocal rules: - record: metric:linklocal_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) - alert: LinkLocalAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Packets dropped due to PPS rate allowance exceeded for local services (instance {{ $labels.instance }}) description: \"LinkLocalAllowanceExceeded is greater than 0\" WORKSPACE-ID\ub97c \uc0ac\uc6a9 \uc911\uc778 \uc791\uc5c5 \uacf5\uac04\uc758 \uc791\uc5c5 \uc601\uc5ed ID\ub85c \ubc14\uafb8\uc2ed\uc2dc\uc624. \uc774\uc81c \uc54c\ub9bc \uad00\ub9ac\uc790 \uc815\uc758\ub97c \uad6c\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uc544\ub798 \ud30c\uc77c\uc744 alertmanager.yaml \uc73c\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: AlertManagerDefinition metadata: name: alert-manager spec: workspaceID: <Your WORKSPACE-ID > configuration: | alertmanager_config: | route: receiver: default_receiver receivers: - name: default_receiver sns_configs: - topic_arn: TOPIC-ARN sigv4: region: REGION message: | alert_type: {{ .CommonLabels.alertname }} event_type: {{ .CommonLabels.event_type }} WORKSPACE-ID\ub97c \uc0c8 \uc791\uc5c5 \uacf5\uac04\uc758 \uc791\uc5c5 \uacf5\uac04 ID\ub85c, TOPIC-ARN\uc744 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub824\ub294 Amazon \ub2e8\uc21c \uc54c\ub9bc \uc11c\ube44\uc2a4 \uc8fc\uc81c\uc758 ARN\uc73c\ub85c, \uadf8\ub9ac\uace0 REGION\uc744 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ud604\uc7ac \uc9c0\uc5ed\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \uc791\uc5c5 \uc601\uc5ed\uc5d0 Amazon SNS\ub85c \uba54\uc2dc\uc9c0\ub97c \ubcf4\ub0bc \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098\uc5d0\uc11c ethtool \uba54\ud2b8\ub9ad\uc744 \uc2dc\uac01\ud654 \u00b6 Amazon Managed Grafana \ub0b4\uc5d0\uc11c \uc9c0\ud45c\ub97c \uc2dc\uac01\ud654\ud558\uace0 \ub300\uc2dc\ubcf4\ub4dc\ub97c \uad6c\ucd95\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\ub97c \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098 \ucf58\uc194 \ub0b4\uc5d0\uc11c \ub370\uc774\ud130 \uc18c\uc2a4\ub85c \uad6c\uc131\ud558\uc2ed\uc2dc\uc624.\uc9c0\uce68\uc740 \uc544\ub9c8\uc874 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub97c \ub370\uc774\ud130 \uc18c\uc2a4\ub85c \ucd94\uac00 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774\uc81c \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098\uc758 \uba54\ud2b8\ub9ad\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud0d0\uc0c9 \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uace0 ethtool\uc744 \uac80\uc0c9\ud558\uc138\uc694. rate (node_net_ethtool {device=\"eth0\", type=\"linklocal_allowance_Exceed \"} [30s]) \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec linklocal_allowance_Exceed \uc9c0\ud45c\uc5d0 \ub300\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uadf8\ub7ec\uba74 \uc544\ub798 \ub300\uc2dc\ubcf4\ub4dc\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \uac12\uc774 0\uc774\ubbc0\ub85c \uc0ad\uc81c\ub41c \ud328\ud0b7\uc774 \uc5c6\uc74c\uc744 \ubd84\uba85\ud788 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. rate (node_net_ethtool {device=\"eth0\", type=\"conntrack_allowance_Exceed \"} [30s]) \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec conntrack_allowance_Exceed \uba54\ud2b8\ub9ad\uc5d0 \ub300\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uacb0\uacfc\ub294 \uc544\ub798 \ub300\uc2dc\ubcf4\ub4dc\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0 \uc124\uba85\ub41c \ub300\ub85c \ud074\ub77c\uc6b0\ub4dc\uc6cc\uce58 \uc5d0\uc774\uc804\ud2b8\ub97c \uc2e4\ud589\ud558\uba74 conntrack_allowance_exceed \uc9c0\ud45c\ub97c CloudWatch\uc5d0\uc11c \uc2dc\uac01\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch\uc758 \uacb0\uacfc \ub300\uc2dc\ubcf4\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uac12\uc774 0\uc774\ubbc0\ub85c \uc0ad\uc81c\ub41c \ud328\ud0b7\uc774 \uc5c6\uc74c\uc744 \ubd84\uba85\ud788 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.Nitro \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 'conntrack_allowance_available'\uc5d0 \ub300\ud55c \uc720\uc0ac\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uace0 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \uc5f0\uacb0\uc744 \uc0ac\uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Amazon Managed Grafana\uc5d0\uc11c \uc2ac\ub799, SNS, Pagerduty \ub4f1\uc5d0 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub3c4\ub85d \uc54c\ub9bc\uc744 \uad6c\uc131\ud558\uc5ec \uc774\ub97c \ub354\uc6b1 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c EKS \uc6cc\ud06c\ub85c\ub4dc \ubaa8\ub2c8\ud130\ub9c1"},{"location":"networking/monitoring/index.kr/#eks","text":"","title":"\ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c EKS \uc6cc\ud06c\ub85c\ub4dc \ubaa8\ub2c8\ud130\ub9c1"},{"location":"networking/monitoring/index.kr/#dns-coredns","text":"DNS \uc9d1\uc57d\uc801 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\uba74 DNS \uc2a4\ub85c\ud2c0\ub9c1\uc73c\ub85c \uc778\ud574 \uac04\ud5d0\uc801\uc73c\ub85c CoreDNS \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub85c \uc778\ud574 \uac00\ub054 \uc54c \uc218 \uc5c6\ub294 Hostexception \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \ubc30\ud3ec\uc5d0\ub294 Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \ud074\ub7ec\uc2a4\ud130\uc758 \uac1c\ubcc4 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c CoreDNS \uc778\uc2a4\ud134\uc2a4\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud558\ub294 \ubc18\uc120\ud638\ub3c4 \uc815\ucc45\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc989, \ub3d9\uc77c\ud55c \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uac01 \ubcf5\uc81c\ubcf8\uc758 \ud2b8\ub798\ud53d\uc774 \ub2e4\ub978 ENI\ub97c \ud1b5\ud574 \ub77c\uc6b0\ud305\ub418\ubbc0\ub85c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 DNS \ucffc\ub9ac \uc218\uac00 \ud6a8\uacfc\uc801\uc73c\ub85c \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \ucd08\ub2f9 1024\uac1c\uc758 \ud328\ud0b7 \uc81c\ud55c\uc73c\ub85c \uc778\ud574 DNS \ucffc\ub9ac\uac00 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uacaa\ub294 \uacbd\uc6b0 1) \ucf54\uc5b4 DNS \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9ac\uac70\ub098 2) NodeLocal DNS \uce90\uc2dc \ub97c \uad6c\ud604\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CoreDNS \uba54\ud2b8\ub9ad \ubaa8\ub2c8\ud130\ub9c1 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"DNS \uc2a4\ub85c\ud2c0\ub9c1 \ubb38\uc81c\uc5d0 \ub300\ud55c CoreDNS \ud2b8\ub798\ud53d \ubaa8\ub2c8\ud130\ub9c1"},{"location":"networking/monitoring/index.kr/#_1","text":"\ud328\ud0b7 \ub4dc\ub86d\uc740 \uba87 \ucd08 \ub9cc\uc5d0 \ubc1c\uc0dd\ud558\uba70 DNS \uc2a4\ub85c\ud2c0\ub9c1\uc774 \uc2e4\uc81c\ub85c \ubc1c\uc0dd\ud558\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c \ud328\ud134\uc744 \uc801\uc808\ud558\uac8c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc740 \uae4c\ub2e4\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \ucffc\ub9ac\ub294 \uc5d8\ub77c\uc2a4\ud2f1 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uc870\uc808\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud55c \ucffc\ub9ac\ub294 \ucffc\ub9ac \ub85c\uae45\uc5d0 \ub098\ud0c0\ub098\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud50c\ub85c\uc6b0 \ub85c\uadf8\ub294 \ubaa8\ub4e0 IP \ud2b8\ub798\ud53d\uc744 \ucea1\ucc98\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608: \uc778\uc2a4\ud134\uc2a4\uac00 Amazon DNS \uc11c\ubc84\uc5d0 \uc811\uc18d\ud560 \ub54c \uc0dd\uc131\ub418\ub294 \ud2b8\ub798\ud53d \uc790\uccb4 DNS \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 DNS \uc11c\ubc84\ub85c \ud5a5\ud558\ub294 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \ub85c\uae45\ub429\ub2c8\ub2e4.","title":"\ub3c4\uc804 \uacfc\uc81c"},{"location":"networking/monitoring/index.kr/#_2","text":"An easy way to identify the DNS throttling issues in worker nodes is by capturing linklocal_allowance_exceeded metric. The linklocal_allowance_exceeded is number of packets dropped because the PPS of the traffic to local proxy services exceeded the maximum for the network interface. This impacts traffic to the DNS service, the Instance Metadata Service, and the Amazon Time Sync Service. Instead of tracking this event real-time, we can stream this metric to Amazon Managed Service for Prometheus as well and can have them visualized in Amazon Managed Grafana","title":"\uc194\ub8e8\uc158"},{"location":"networking/monitoring/index.kr/#conntrack-dns","text":"CoreDNS \uc2a4\ub85c\ud2c0\ub9c1/\ucffc\ub9ac \uc9c0\uc5f0\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 \ub610 \ub2e4\ub978 \uc9c0\ud45c\ub294 conntrack_allowance_available \uacfc conntrack_allowance_exceed \uc785\ub2c8\ub2e4. \uc5f0\uacb0 \ucd94\uc801 \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ubc1c\uc0dd\ud558\ub294 \uc5f0\uacb0 \uc7a5\uc560\ub294 \ub2e4\ub978 \ud5c8\uc6a9\uce58\ub97c \ucd08\uacfc\ud558\uc5ec \ubc1c\uc0dd\ud558\ub294 \uc5f0\uacb0 \uc2e4\ud328\ubcf4\ub2e4 \ub354 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. TCP\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud558\ub294 \uacbd\uc6b0, \ub300\uc5ed\ud3ed, PPS \ub4f1\uacfc \uac19\uc774 EC2 \uc778\uc2a4\ud134\uc2a4 \ub124\ud2b8\uc6cc\ud06c \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30\uc5f4\uc5d0 \uc788\uac70\ub098 \uc0ad\uc81c\ub418\ub294 \ud328\ud0b7\uc740 \uc77c\ubc18\uc801\uc73c\ub85c TCP\uc758 \ud63c\uc7a1 \uc81c\uc5b4 \uae30\ub2a5 \ub355\ubd84\uc5d0 \uc815\uc0c1\uc801\uc73c\ub85c \ucc98\ub9ac\ub429\ub2c8\ub2e4. \uc601\ud5a5\uc744 \ubc1b\uc740 \ud750\ub984\uc740 \ub290\ub824\uc9c0\uace0 \uc190\uc2e4\ub41c \ud328\ud0b7\uc740 \uc7ac\uc804\uc1a1\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc778\uc2a4\ud134\uc2a4\uac00 Connections Tracked \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\ub294 \uacbd\uc6b0 \uc0c8 \uc5f0\uacb0\uc744 \uc704\ud55c \uacf5\uac04\uc744 \ub9c8\ub828\ud558\uae30 \uc704\ud574 \uae30\uc874 \uc5f0\uacb0 \uc911 \uc77c\ubd80\ub97c \ub2eb\uae30 \uc804\uae4c\uc9c0\ub294 \uc0c8 \uc5f0\uacb0\uc744 \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. conntrack_allowance_available \ubc0f conntrack_allowance_exceed \ub294 \uace0\uac1d\uc774 \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\ub9c8\ub2e4 \ub2ec\ub77c\uc9c0\ub294 \uc5f0\uacb0 \ucd94\uc801 \ud5c8\uc6a9\ub7c9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub97c \ud1b5\ud574 \uace0\uac1d\uc740 \ub124\ud2b8\uc6cc\ud06c \ub300\uc5ed\ud3ed, \ucd08\ub2f9 \ud328\ud0b7 \uc218 (PPS), \ucd94\uc801\ub41c \uc5f0\uacb0, \ub9c1\ud06c \ub85c\uceec \uc11c\ube44\uc2a4 \uc561\uc138\uc2a4 (Amazon DNS, \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0 \ub370\uc774\ud130 \uc11c\ube44\uc2a4, Amazon Time Sync) \uc640 \uac19\uc740 \uc778\uc2a4\ud134\uc2a4\uc758 \ub124\ud2b8\uc6cc\ud0b9 \ud5c8\uc6a9\ub7c9\uc744 \ucd08\uacfc\ud588\uc744 \ub54c \ub300\uae30 \ub610\ub294 \uc0ad\uc81c\ub418\ub294 \ud328\ud0b7 \uc218\ub97c \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. conntrack_allowance_available \uc740 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ucd94\uc801\ub41c \uc5f0\uacb0 \ud5c8\uc6a9\ub7c9\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc124\uc815\ud560 \uc218 \uc788\ub294 \ucd94\uc801\ub41c \uc5f0\uacb0 \uc218\uc785\ub2c8\ub2e4 (\ub2c8\ud2b8\ub85c \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub9cc \uc9c0\uc6d0\ub428). conntrack_allowance_exceed \ub294 \uc778\uc2a4\ud134\uc2a4\uc758 \uc5f0\uacb0 \ucd94\uc801\uc774 \ucd5c\ub300\uce58\ub97c \ucd08\uacfc\ud558\uc5ec \uc0c8 \uc5f0\uacb0\uc744 \uc124\uc815\ud560 \uc218 \uc5c6\uc5b4\uc11c \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4.","title":"Conntrack \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud558\uc5ec DNS \ucffc\ub9ac \uc9c0\uc5f0 \ubaa8\ub2c8\ud130\ub9c1"},{"location":"networking/monitoring/index.kr/#_3","text":"\uae30\ud0c0 \uc911\uc694\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. bw_in_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc778\ubc14\uc6b4\ub4dc \uc9d1\uacc4 \ub300\uc5ed\ud3ed\uc774 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. bw_out_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ucd1d \ub300\uc5ed\ud3ed\uc774 \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4. pps_allowance_exceed (\uc774\uc0c1\uc801\uc778 \uc9c0\ud45c \uac12\uc740 0\uc774\uc5b4\uc57c \ud568) \ub294 \uc591\ubc29\ud5a5 PPS\uac00 \uc778\uc2a4\ud134\uc2a4\uc758 \ucd5c\ub300\uac12\uc744 \ucd08\uacfc\ud558\uc5ec \ub300\uae30 \ubc0f/\ub610\ub294 \uc0ad\uc81c\ub41c \ud328\ud0b7 \uc218\uc785\ub2c8\ub2e4.","title":"\uae30\ud0c0 \uc911\uc694\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c"},{"location":"networking/monitoring/index.kr/#_4","text":"Elastic Network Adapter (ENA) \ub4dc\ub77c\uc774\ubc84\ub294 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uba54\ud2b8\ub9ad\uc774 \ud65c\uc131\ud654\ub41c \uc778\uc2a4\ud134\uc2a4\ub85c\ubd80\ud130 \ud574\ub2f9 \uba54\ud2b8\ub9ad\uc744 \uac8c\uc2dc\ud569\ub2c8\ub2e4. CloudWatch \uc5d0\uc774\uc804\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \uc9c0\ud45c\ub97c CloudWatch\uc5d0 \uac8c\uc2dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774\uc81c \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uc9c0\ud45c\ub97c \ucea1\ucc98\ud558\uc5ec Prometheus\uc6a9 Amazon Managed Service\uc5d0 \uc800\uc7a5\ud558\uace0 Amazon Managed Grafana\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uac01\ud654\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c \uc6cc\ud06c\ub85c\ub4dc \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud55c \uc9c0\ud45c \ucea1\ucc98"},{"location":"networking/monitoring/index.kr/#_5","text":"ethtool - \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 ethtool\uc774 \uc124\uce58\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. AWS \uacc4\uc815\uc5d0 \uad6c\uc131\ub41c AMP \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4.\uc9c0\uce68\uc740 AMP \uc0ac\uc6a9 \uc124\uba85\uc11c\uc758 \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4 \ub9cc\ub4e4\uae30 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon Managed Grafana \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4","title":"\uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d"},{"location":"networking/monitoring/index.kr/#ethtool","text":"\ubc30\ud3ec\uc5d0\ub294 ethtool\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc640 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud615\uc2dd\uc73c\ub85c \uac8c\uc2dc\ud558\ub294 Python \uc2a4\ud06c\ub9bd\ud2b8\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. kubectl apply -f https://raw.githubusercontent.com/Showmax/prometheus-ethtool-exporter/master/deploy/k8s-daemonset.yaml","title":"\ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 ethtool \uc775\uc2a4\ud3ec\ud130 \uad6c\ucd95"},{"location":"networking/monitoring/index.kr/#adot-ethtool","text":"OpenTelemetry\uc6a9 AWS \ubc30\ud3ec\ud310 (ADOT) \uc744 \uc124\uce58\ud558\ub294 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \uc774 \uc5ed\ud560\uc774 \uc788\uc5b4\uc57c AWS \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uba54\ud2b8\ub9ad\uc744 Prometheus\uc6a9 Amazon \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\uc5d0 \uc800\uc7a5\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub2e4\uc74c \ub2e8\uacc4\uc5d0 \ub530\ub77c IRSA\ub97c \uc0ac\uc6a9\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\uace0 Amazon EKS \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uc5f0\uacb0\ud558\uc2ed\uc2dc\uc624. eksctl create iamserviceaccount --name adot-collector --namespace default --cluster <CLUSTER_NAME> --attach-policy-arn arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess --attach-policy-arn arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess --attach-policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy --region <REGION> --approve --override-existing-serviceaccounts ADOT \uceec\ub809\ud130\ub97c \ubc30\ud3ec\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 ethtool \uc775\uc2a4\ud3ec\ud130\uc758 \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\uc5d0 \uc800\uc7a5\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc808\ucc28\uc5d0\uc11c\ub294 \ubc30\ud3ec\ub97c \ubaa8\ub4dc \uac12\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uc608\uc81c YAML \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \ubaa8\ub4dc\ub294 \uae30\ubcf8 \ubaa8\ub4dc\uc774\uba70 \ub3c5\ub9bd \uc2e4\ud589\ud615 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \uc720\uc0ac\ud558\uac8c ADOT Collector\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ud3ec\ub4dc\uc5d0\uc11c \uc2a4\ud06c\ub7a9\ud55c \uc0d8\ud50c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc Amazon Managed Service for Prometheus \uc9c0\ud45c\ub85c\ubd80\ud130 OTLP \uc9c0\ud45c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. curl -o collector-config-amp.yaml https://raw.githubusercontent.com/aws-observability/aws-otel-community/master/sample-configs/operator/collector-config-amp.yaml \uceec\ub809\ud130-config-amp.yaml\uc5d0\uc11c \ub2e4\uc74c\uc744 \uc0ac\uc6a9\uc790 \uace0\uc720\uc758 \uac12\uc73c\ub85c \ubc14\uafb8\uc2ed\uc2dc\uc624. * mode: deployment * serviceAccount: adot-collector * endpoint: \" \" * region: \" \" * name: adot-collector kubectl apply -f collector-config-amp.yaml \ucc44\ud0dd \uc218\uc9d1\uae30\uac00 \ubc30\ud3ec\ub418\uba74 \uc9c0\ud45c\uac00 Amazon Prometheus\uc5d0 \uc131\uacf5\uc801\uc73c\ub85c \uc800\uc7a5\ub429\ub2c8\ub2e4.","title":"ADOT \uceec\ub809\ud130\ub97c \ubc30\ud3ec\ud558\uc5ec ethtool \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uace0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4 \uc6cc\ud06c\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc800\uc7a5"},{"location":"networking/monitoring/index.kr/#prometheus-amazon","text":"\uc9c0\uae08\uae4c\uc9c0 \uc124\uba85\ud55c \uba54\ud2b8\ub9ad\uc744 \ud655\uc778\ud558\uae30 \uc704\ud574 \uae30\ub85d \uaddc\uce59 \ubc0f \uacbd\uace0 \uaddc\uce59\uc744 \uad6c\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\uc6a9 ACK \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc54c\ub9bc \ubc0f \uae30\ub85d \uaddc\uce59\uc744 \uaddc\uc815\ud560 \uac83\uc785\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 Amazon \uad00\ub9ac \uc11c\ube44\uc2a4 \uc11c\ube44\uc2a4\ub97c \uc704\ud55c ACL \ucee8\ud2b8\ub864\ub7ec\ub97c \ubc30\ud3ec\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. export SERVICE=prometheusservice export RELEASE_VERSION=`curl -sL https://api.github.com/repos/aws-controllers-k8s/$SERVICE-controller/releases/latest | grep '\"tag_name\":' | cut -d'\"' -f4` export ACK_SYSTEM_NAMESPACE=ack-system export AWS_REGION=us-east-1 aws ecr-public get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin public.ecr.aws helm install --create-namespace -n $ACK_SYSTEM_NAMESPACE ack-$SERVICE-controller \\ oci://public.ecr.aws/aws-controllers-k8s/$SERVICE-chart --version=$RELEASE_VERSION --set=aws.region=$AWS_REGION \uba85\ub839\uc744 \uc2e4\ud589\ud558\uba74 \uba87 \ubd84 \ud6c4 \ub2e4\uc74c \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. You are now able to create Amazon Managed Service for Prometheus (AMP) resources! The controller is running in \"cluster\" mode. The controller is configured to manage AWS resources in region: \"us-east-1\" The ACK controller has been successfully installed and ACK can now be used to provision an Amazon Managed Service for Prometheus workspace. \uc774\uc81c \uacbd\uace0 \uad00\ub9ac\uc790 \uc815\uc758 \ubc0f \uaddc\uce59 \uadf8\ub8f9\uc744 \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc704\ud55c yaml \ud30c\uc77c\uc744 \uc0dd\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ud30c\uc77c\uc744 rulegroup.yaml \ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: RuleGroupsNamespace metadata: name: default-rule spec: workspaceID: <Your WORKSPACE-ID> name: default-rule configuration: | groups: - name: ppsallowance rules: - record: metric:pps_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"}[30s]) - alert: PPSAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"pps_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"PPSAllowanceExceeded is greater than 0\" - name: bw_in rules: - record: metric:bw_in_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"}[30s]) - alert: BWINAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_in_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWInAllowanceExceeded is greater than 0\" - name: bw_out rules: - record: metric:bw_out_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"}[30s]) - alert: BWOutAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"bw_out_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"BWoutAllowanceExceeded is greater than 0\" - name: conntrack rules: - record: metric:conntrack_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"}[30s]) - alert: ConntrackAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"conntrack_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Connections dropped due to total allowance exceeding for the (instance {{ $labels.instance }}) description: \"ConnTrackAllowanceExceeded is greater than 0\" - name: linklocal rules: - record: metric:linklocal_allowance_exceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"}[30s]) - alert: LinkLocalAllowanceExceeded expr: rate(node_net_ethtool{device=\"eth0\",type=\"linklocal_allowance_exceeded\"} [30s]) > 0 labels: severity: critical annotations: summary: Packets dropped due to PPS rate allowance exceeded for local services (instance {{ $labels.instance }}) description: \"LinkLocalAllowanceExceeded is greater than 0\" WORKSPACE-ID\ub97c \uc0ac\uc6a9 \uc911\uc778 \uc791\uc5c5 \uacf5\uac04\uc758 \uc791\uc5c5 \uc601\uc5ed ID\ub85c \ubc14\uafb8\uc2ed\uc2dc\uc624. \uc774\uc81c \uc54c\ub9bc \uad00\ub9ac\uc790 \uc815\uc758\ub97c \uad6c\uc131\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uc544\ub798 \ud30c\uc77c\uc744 alertmanager.yaml \uc73c\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. apiVersion: prometheusservice.services.k8s.aws/v1alpha1 kind: AlertManagerDefinition metadata: name: alert-manager spec: workspaceID: <Your WORKSPACE-ID > configuration: | alertmanager_config: | route: receiver: default_receiver receivers: - name: default_receiver sns_configs: - topic_arn: TOPIC-ARN sigv4: region: REGION message: | alert_type: {{ .CommonLabels.alertname }} event_type: {{ .CommonLabels.event_type }} WORKSPACE-ID\ub97c \uc0c8 \uc791\uc5c5 \uacf5\uac04\uc758 \uc791\uc5c5 \uacf5\uac04 ID\ub85c, TOPIC-ARN\uc744 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub824\ub294 Amazon \ub2e8\uc21c \uc54c\ub9bc \uc11c\ube44\uc2a4 \uc8fc\uc81c\uc758 ARN\uc73c\ub85c, \uadf8\ub9ac\uace0 REGION\uc744 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ud604\uc7ac \uc9c0\uc5ed\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. \uc791\uc5c5 \uc601\uc5ed\uc5d0 Amazon SNS\ub85c \uba54\uc2dc\uc9c0\ub97c \ubcf4\ub0bc \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"Prometheus\uac00 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub3c4\ub85d Amazon \uad00\ub9ac \uc11c\ube44\uc2a4\uc758 \uc54c\ub9bc \uad00\ub9ac\uc790\ub97c \uad6c\uc131"},{"location":"networking/monitoring/index.kr/#ethtool_1","text":"Amazon Managed Grafana \ub0b4\uc5d0\uc11c \uc9c0\ud45c\ub97c \uc2dc\uac01\ud654\ud558\uace0 \ub300\uc2dc\ubcf4\ub4dc\ub97c \uad6c\ucd95\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc6a9 \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uc11c\ube44\uc2a4\ub97c \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098 \ucf58\uc194 \ub0b4\uc5d0\uc11c \ub370\uc774\ud130 \uc18c\uc2a4\ub85c \uad6c\uc131\ud558\uc2ed\uc2dc\uc624.\uc9c0\uce68\uc740 \uc544\ub9c8\uc874 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub97c \ub370\uc774\ud130 \uc18c\uc2a4\ub85c \ucd94\uac00 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774\uc81c \uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098\uc758 \uba54\ud2b8\ub9ad\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud0d0\uc0c9 \ubc84\ud2bc\uc744 \ud074\ub9ad\ud558\uace0 ethtool\uc744 \uac80\uc0c9\ud558\uc138\uc694. rate (node_net_ethtool {device=\"eth0\", type=\"linklocal_allowance_Exceed \"} [30s]) \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec linklocal_allowance_Exceed \uc9c0\ud45c\uc5d0 \ub300\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uadf8\ub7ec\uba74 \uc544\ub798 \ub300\uc2dc\ubcf4\ub4dc\uac00 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \uac12\uc774 0\uc774\ubbc0\ub85c \uc0ad\uc81c\ub41c \ud328\ud0b7\uc774 \uc5c6\uc74c\uc744 \ubd84\uba85\ud788 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. rate (node_net_ethtool {device=\"eth0\", type=\"conntrack_allowance_Exceed \"} [30s]) \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec conntrack_allowance_Exceed \uba54\ud2b8\ub9ad\uc5d0 \ub300\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\uacb0\uacfc\ub294 \uc544\ub798 \ub300\uc2dc\ubcf4\ub4dc\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc5ec\uae30 \uc5d0 \uc124\uba85\ub41c \ub300\ub85c \ud074\ub77c\uc6b0\ub4dc\uc6cc\uce58 \uc5d0\uc774\uc804\ud2b8\ub97c \uc2e4\ud589\ud558\uba74 conntrack_allowance_exceed \uc9c0\ud45c\ub97c CloudWatch\uc5d0\uc11c \uc2dc\uac01\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch\uc758 \uacb0\uacfc \ub300\uc2dc\ubcf4\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uac12\uc774 0\uc774\ubbc0\ub85c \uc0ad\uc81c\ub41c \ud328\ud0b7\uc774 \uc5c6\uc74c\uc744 \ubd84\uba85\ud788 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4.Nitro \uae30\ubc18 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 'conntrack_allowance_available'\uc5d0 \ub300\ud55c \uc720\uc0ac\ud55c \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4\uace0 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \uc5f0\uacb0\uc744 \uc0ac\uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Amazon Managed Grafana\uc5d0\uc11c \uc2ac\ub799, SNS, Pagerduty \ub4f1\uc5d0 \uc54c\ub9bc\uc744 \ubcf4\ub0b4\ub3c4\ub85d \uc54c\ub9bc\uc744 \uad6c\uc131\ud558\uc5ec \uc774\ub97c \ub354\uc6b1 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc544\ub9c8\uc874 \ub9e4\ub2c8\uc9c0\ub4dc \uadf8\ub77c\ud30c\ub098\uc5d0\uc11c ethtool \uba54\ud2b8\ub9ad\uc744 \uc2dc\uac01\ud654"},{"location":"networking/prefix-mode/index_linux.kr/","text":"{'name': 'English', 'build': True} Linux\uc6a9 Prefix \ubaa8\ub4dc \u00b6 Amazon VPC CNI\ub294 Amazon EC2 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc5d0 \ub124\ud2b8\uc6cc\ud06c Prefix\ub97c \ud560\ub2f9\ud558\uc5ec \ub178\ub4dc\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9ac\uace0 \ub178\ub4dc\ub2f9 \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc785\ub2c8\ub2e4. Amazon VPC CNI \uc560\ub4dc\uc628 \ubc84\uc804 1.9.0 \uc774\uc0c1\uc744 \uad6c\uc131\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uac1c\ubcc4 \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub300\uc2e0 IPv4 \ubc0f IPv6 CIDR\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Prefix \ubaa8\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uba70 \ud574\ub2f9 \uc635\uc158\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. VPC CNI\ub294 ENI\uc758 \uc2ac\ub86f\uc5d0 /80 IPv6 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc758 IPv6 \uc139\uc158 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. Prefix \ud560\ub2f9 \ubaa8\ub4dc\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ub2f9 \ucd5c\ub300 elastic network interfaces \uc218\ub294 \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\uc9c0\ub9cc, \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \uc2ac\ub86f\uc5d0 \uac1c\ubcc4 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub300\uc2e0 /28 (16\uac1c\uc758 IP \uc8fc\uc18c) IPv4 \uc8fc\uc18c Prefix\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d Amazon VPC CNI\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ENABLE_PREFIX_DELEGATION \uc774 true\ub85c \uc124\uc815\ub418\uba74 CNI\ub294 ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc5d0\uc11c \ud30c\ub4dc\uc5d0 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \ub098\uc640 \uc788\ub294 \uc9c0\uce68\uc744 \ub530\ub77c Prefix IP \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654 \ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 IP \uc8fc\uc18c \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4.\ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud558\ub294 \uac01 Prefix\ub294 \ud558\ub098\uc758 IP \uc8fc\uc18c\ub85c \uac04\uc8fc\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \uc778\uc2a4\ud134\uc2a4\uc758 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IPv4 \uc8fc\uc18c\ub294 10 \uac1c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \uc774 \uc778\uc2a4\ud134\uc2a4\uc758 \uac01 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0\ub294 \uae30\ubcf8 IPv4 \uc8fc\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ubcf4\uc870 IPv4 \uc8fc\uc18c\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd5c\ub300 9\uac1c\uc758 Prefix\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd94\uac00\ub85c \ud560\ub2f9\ud558\ub294 IPv4 \uc8fc\uc18c\ub9c8\ub2e4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix\ub97c \ud558\ub098\uc529 \ub354 \uc801\uac8c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IP \uc8fc\uc18c \ubc0f \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix \ud560\ub2f9 \uc5d0 \ub300\ud55c AWS EC2 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \ucd08\uae30\ud654\ud558\ub294 \ub3d9\uc548 VPC CNI\ub294 \uae30\ubcf8 ENI\uc5d0 \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4.CNI\ub294 \uc6dc \ud480\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\uc5ec \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 Prefix\ub97c \ubbf8\ub9ac \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc5ec \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud560 Prefix \uc218\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WARM_PREFIX_TARGET , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 Prefix \uc218 WARM_IP_TARGET , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 IP \uc8fc\uc18c \uc218 MINIMUM_IP_TARGET , \uc5b8\uc81c\ub4e0\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc774 \uc124\uc815\ub41c \uacbd\uc6b0 WARM_PREFIX_TARGET \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud569\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud30c\ub4dc\uac00 \uc608\uc57d\ub418\uba74 \uae30\uc874 ENI\uc5d0 \ub300\ud574 \ucd94\uac00 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \uba3c\uc800 VPC CNI\ub294 \uae30\uc874 ENI\uc5d0 \uc0c8 Prefix\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub9cc\uc57d ENI\uc758 \uc6a9\ub7c9\uc774 \ubd80\uc871\ud560 \uacbd\uc6b0, VPC CNI\ub294 \ub178\ub4dc\uc5d0 \uc0c8 ENI\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ucd5c\ub300 ENI \ud55c\ub3c4 (\uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc815\uc758) \uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 \uc0c8 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uc0c8 ENI\uac00 \uc5f0\uacb0\ub418\uba74 ipamd\ub294 WARM_PREFIX_TARGET , WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc124\uc815\uc744 \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc694\ud55c \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix \ubaa8\ub4dc \uc0ac\uc6a9 \u00b6 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c Pod \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. VPC CNI \uc624\ub958\ub97c \ubc29\uc9c0\ud558\ub824\uba74 Prefix \ubaa8\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\uae30 \uc804\uc5d0 \uc11c\ube0c\ub137\uc5d0\uc11c /28 Prefix\uc758 \uc5f0\uc18d\ub41c \uc8fc\uc18c \ube14\ub85d\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d\uc5d0 \ub300\ud55c \uc138\ubd80 \uc815\ubcf4\ub294 \u201c \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ubc29\uc9c0 \u201d \uc139\uc158\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uacfc\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 max-pods \uc81c\ud55c\uc774 \ubcf4\uc870 IP \ubaa8\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\ub824\uba74, max-pods \uac12\uc744 Kubelet\uc5d0 \uc9c0\uc815\ud558\uace0, \ub178\ub4dc\uc758 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130(User data)\uc5d0 --use-max-pods=false \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. max-pod-calculator.sh \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub300\ud55c EKS\uc758 \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacc4\uc0b0\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uc758 \uc608\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. ./max-pods-calculator.sh --instance-type m5.large --cni-version ``1.9``.0 --cni-prefix-delegation-enabled Prefix \ud560\ub2f9 \ubaa8\ub4dc\ub294 \uae30\ubcf8 ENI\uac00 \ud30c\ub4dc\uc5d0 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 CNI \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud0b9 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud2b9\ud788 \uc801\ud569\ud569\ub2c8\ub2e4. Prefix \ud560\ub2f9\uc744 \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc5d0 \uae30\ubcf8 ENI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\ub3c4 \uac70\uc758 \ubaa8\ub4e0 Nitro \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub354 \ub9ce\uc740 IP\ub97c \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c \u00b6 \uc11c\ube0c\ub137\uc774 \ub9e4\uc6b0 \ud30c\ud3b8\ud654 \ub418\uc5b4 \uc788\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud558\uc5ec /28 Prefix\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654 \ub41c \uacbd\uc6b0(\uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uace0 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\ub294 \uc11c\ube0c\ub137), Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0 Prefix\ub97c \uc608\uc57d\ud558\uba74 \uc774 \ubb38\uc81c\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud30c\ub4dc\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. \uacf5\uc720 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\uc11c \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc5ec \uaddc\uc815 \uc900\uc218\ub97c \ub2ec\uc131\ud574\uc57c \ud558\ub294 \ubcf4\uc548 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc0ac\uc6a9 \u00b6 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \uc5ec\ub7ec \uc720\ud615\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\ub300 \ud30c\ub4dc \uc218\uac00 \uc801\uc740 \uc778\uc2a4\ud134\uc2a4\uc758 \uac12\uc774 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc0ac\uc6a9\uc744 \uadf9\ub300\ud654\ud558\ub824\uba74 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \ub178\ub4dc \ud655\uc7a5\uc744 \uc704\ud574 Karpenter\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud504\ub85c\ube44\uc800\ub108 API\uc758 \uc694\uad6c \uc0ac\ud56d \ubd80\ubd84\uc5d0\uc11c node.kubernetes.io/instance-type \uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Warning \ud2b9\uc815 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0 \ub300\ud55c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 \ub178\ub4dc \uadf8\ub8f9 \ub0b4 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ucd5c\uc18c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub85c \uc815\uc758\ub429\ub2c8\ub2e4. IPv4 \uc8fc\uc18c\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d 'WARM_PREFIX_TARGET'\uc744 \uad6c\uc131 \u00b6 WARM_PREFIX_TARGET \uc758 \uc124\uce58 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0, WARM_PREFIX_TARGET \uc758 \uad8c\uc7a5 \uac12\uc778 1\uc744 \uc0ac\uc6a9\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ubbf8\uc0ac\uc6a9 IP \uc8fc\uc18c\ub97c \ucd5c\uc18c\ud654\ud558\uba74\uc11c \ube60\ub978 \ud30c\ub4dc \uc2e4\ud589 \uc2dc\uac04\uc744 \uc801\uc808\ud788 \uc870\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub2f9 IPv4 \uc8fc\uc18c\ub97c \ucd94\uac00\ub85c \ubcf4\uc874\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uad6c\uc131 \uc2dc WARM_PREFIX_TARGET \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc124\uc815\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. WARM_IP_TARGET \uc744 16 \ubbf8\ub9cc\uc758 \uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 CNI\uac00 \ucd08\uacfc Prefix \uc804\uccb4\ub97c \uc5f0\uacb0\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc ENI \ucd94\uac00\ubcf4\ub2e4\ub294 \uc2e0\uaddc Prefix \ud560\ub2f9 \u00b6 EC2 API \uc791\uc5c5 \uc2dc \uae30\uc874 ENI\uc5d0 Prefix\ub97c \ucd94\uac00\ub85c \ud560\ub2f9\ud558\ub294 \uac83\uc774 \uc2e0\uaddc ENI\ub97c \uc0dd\uc131\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ube60\ub985\ub2c8\ub2e4. Prefix\ub97c \uc0ac\uc6a9\ud558\uba74 IPv4 \uc8fc\uc18c \ud560\ub2f9\uc744 \uc808\uc57d\ud558\uba74\uc11c \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix \uc5f0\uacb0\uc740 \uc77c\ubc18\uc801\uc73c\ub85c 1\ucd08 \uc774\ub0b4\uc5d0 \uc644\ub8cc\ub418\uc9c0\ub9cc \uc2e0\uaddc ENI\ub97c \uc5f0\uacb0\ud558\ub294 \ub370\uc5d0\ub294 \ucd5c\ub300 10\ucd08\uac00 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c CNI\ub294 Prefix \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c \uc6cc\ucee4 \ub178\ub4dc\ub2f9 \ud558\ub098\uc758 ENI\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \ucd5c\uc545\uc758 \uacbd\uc6b0 \ub178\ub4dc\ub2f9 \ucd5c\ub300 15\uac1c\uc758 \ubbf8\uc0ac\uc6a9 IP\ub97c \uac10\ub2f9\ud560 \uc218 \uc788\ub2e4\uba74 \ucd5c\uc2e0 Prefix \ud560\ub2f9 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uadf8\uc5d0 \ub530\ub978 \uc131\ub2a5 \ubc0f \ud6a8\uc728\uc131 \ud5a5\uc0c1\uc744 \uc2e4\ud604\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ub97c \ubc29\uc9c0 \u00b6 EC2\uac00 ENI\uc5d0 /28 IPv4 Prefix\ub97c \ud560\ub2f9\ud560 \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \uc11c\ube0c\ub137\uc758 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654\ub41c \uacbd\uc6b0 (\ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\uace0 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uc11c\ube0c\ub137) Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc73c\uba70 VPC CNI \ub85c\uadf8\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. failed to allocate a private IP/Prefix address: InsufficientCidrBlocks: There are not enough free cidr blocks in the specified subnet to satisfy the request. \ud30c\ud3b8\ud654\ub97c \ubc29\uc9c0\ud558\uba74\uc11c Prefix\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc5f0\uc18d \uacf5\uac04\uc744 \ud655\ubcf4\ud558\ub824\uba74 VPC \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \uc0ac\uc6a9\ud558\uc5ec Prefix\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc11c\ube0c\ub137 \ub0b4 IP \uacf5\uac04\uc744 \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc57d\uc744 \uc0dd\uc131\ud558\uba74 VPC CNI \ud50c\ub7ec\uadf8\uc778\uc740 EC2 API\ub97c \ud638\ucd9c\ud558\uc5ec \uc608\uc57d\ub41c \uacf5\uac04\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\ub294 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0, Prefix\ub97c \uc704\ud55c \uacf5\uac04\uc744 \uc608\uc57d\ud558\uace0, VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 Prefix\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC CNI Prefix \ud560\ub2f9\uc774 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc \uc804\uc6a9\uc778 \uacbd\uc6b0, Prefix \uc608\uc57d \ub2e8\uacc4\ub97c \uac74\ub108\ub6f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ub97c \ud53c\ud560 \uac83 \u00b6 Prefix \ubaa8\ub4dc\ub294 VPC CNI \ubc84\uc804 1.9.0 \uc774\uc0c1\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.Prefix \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud558\uace0 Prefix\ub97c ENI\uc5d0 \ud560\ub2f9\ud55c \ud6c4\uc5d0\ub294 Amazon VPC CNI \ucd94\uac00 \uae30\ub2a5\uc744 1.9.0 \ubbf8\ub9cc \ubc84\uc804\uc73c\ub85c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. VPC CNI\ub97c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uace0 \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. Prefix Delegation\uc73c\ub85c \uc804\ud658\ud558\ub294 \ub3d9\uc548 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \uad50\uccb4 \u00b6 \uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0 \uc2e0\uaddc \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9ac\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uae30\uc874 \ub178\ub4dc\ub97c \ubaa8\ub450 \ucc28\ub2e8\ud558\uace0 drain\ud558\uc5ec \ubaa8\ub4e0 \uae30\uc874 \ud30c\ub4dc\ub97c \uc548\uc804\ud558\uac8c \uc81c\uac70\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud574 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0 Pod Disruption Budgets \uc744 \uc124\uc815\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc2e0\uaddc \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0\ub294 ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc758 IP\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud55c \ud6c4, \uc774\uc804 \ub178\ub4dc\uc640 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc5ec\uae30\uc5d0 \uc124\uba85\ub41c \ub2e8\uacc4\uc5d0 \ub530\ub77c \uc548\uc804\ud558\uac8c \ub178\ub4dc \uadf8\ub8f9 \uc0ad\uc81c \ub97c \uc9c4\ud589 \ud569\ub2c8\ub2e4.","title":"Linux\uc6a9 Prefix \ubaa8\ub4dc"},{"location":"networking/prefix-mode/index_linux.kr/#linux-prefix","text":"Amazon VPC CNI\ub294 Amazon EC2 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc5d0 \ub124\ud2b8\uc6cc\ud06c Prefix\ub97c \ud560\ub2f9\ud558\uc5ec \ub178\ub4dc\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9ac\uace0 \ub178\ub4dc\ub2f9 \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc785\ub2c8\ub2e4. Amazon VPC CNI \uc560\ub4dc\uc628 \ubc84\uc804 1.9.0 \uc774\uc0c1\uc744 \uad6c\uc131\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \uac1c\ubcc4 \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub300\uc2e0 IPv4 \ubc0f IPv6 CIDR\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Prefix \ubaa8\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uba70 \ud574\ub2f9 \uc635\uc158\ub9cc \uc9c0\uc6d0\ub429\ub2c8\ub2e4. VPC CNI\ub294 ENI\uc758 \uc2ac\ub86f\uc5d0 /80 IPv6 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc758 IPv6 \uc139\uc158 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. Prefix \ud560\ub2f9 \ubaa8\ub4dc\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ub2f9 \ucd5c\ub300 elastic network interfaces \uc218\ub294 \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\uc9c0\ub9cc, \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \uc2ac\ub86f\uc5d0 \uac1c\ubcc4 IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub294 \ub300\uc2e0 /28 (16\uac1c\uc758 IP \uc8fc\uc18c) IPv4 \uc8fc\uc18c Prefix\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d Amazon VPC CNI\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ENABLE_PREFIX_DELEGATION \uc774 true\ub85c \uc124\uc815\ub418\uba74 CNI\ub294 ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc5d0\uc11c \ud30c\ub4dc\uc5d0 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \ub098\uc640 \uc788\ub294 \uc9c0\uce68\uc744 \ub530\ub77c Prefix IP \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654 \ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 IP \uc8fc\uc18c \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4.\ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud558\ub294 \uac01 Prefix\ub294 \ud558\ub098\uc758 IP \uc8fc\uc18c\ub85c \uac04\uc8fc\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \uc778\uc2a4\ud134\uc2a4\uc758 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IPv4 \uc8fc\uc18c\ub294 10 \uac1c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \uc774 \uc778\uc2a4\ud134\uc2a4\uc758 \uac01 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0\ub294 \uae30\ubcf8 IPv4 \uc8fc\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ubcf4\uc870 IPv4 \uc8fc\uc18c\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd5c\ub300 9\uac1c\uc758 Prefix\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd94\uac00\ub85c \ud560\ub2f9\ud558\ub294 IPv4 \uc8fc\uc18c\ub9c8\ub2e4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix\ub97c \ud558\ub098\uc529 \ub354 \uc801\uac8c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IP \uc8fc\uc18c \ubc0f \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix \ud560\ub2f9 \uc5d0 \ub300\ud55c AWS EC2 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \ucd08\uae30\ud654\ud558\ub294 \ub3d9\uc548 VPC CNI\ub294 \uae30\ubcf8 ENI\uc5d0 \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4.CNI\ub294 \uc6dc \ud480\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\uc5ec \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 Prefix\ub97c \ubbf8\ub9ac \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud558\uc5ec \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud560 Prefix \uc218\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WARM_PREFIX_TARGET , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 Prefix \uc218 WARM_IP_TARGET , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 IP \uc8fc\uc18c \uc218 MINIMUM_IP_TARGET , \uc5b8\uc81c\ub4e0\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc774 \uc124\uc815\ub41c \uacbd\uc6b0 WARM_PREFIX_TARGET \ub97c \uc624\ubc84\ub77c\uc774\ub4dc \ud569\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud30c\ub4dc\uac00 \uc608\uc57d\ub418\uba74 \uae30\uc874 ENI\uc5d0 \ub300\ud574 \ucd94\uac00 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \uba3c\uc800 VPC CNI\ub294 \uae30\uc874 ENI\uc5d0 \uc0c8 Prefix\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub9cc\uc57d ENI\uc758 \uc6a9\ub7c9\uc774 \ubd80\uc871\ud560 \uacbd\uc6b0, VPC CNI\ub294 \ub178\ub4dc\uc5d0 \uc0c8 ENI\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ucd5c\ub300 ENI \ud55c\ub3c4 (\uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc815\uc758) \uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 \uc0c8 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uc0c8 ENI\uac00 \uc5f0\uacb0\ub418\uba74 ipamd\ub294 WARM_PREFIX_TARGET , WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc124\uc815\uc744 \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc694\ud55c \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4.","title":"Linux\uc6a9 Prefix \ubaa8\ub4dc"},{"location":"networking/prefix-mode/index_linux.kr/#_1","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/prefix-mode/index_linux.kr/#prefix","text":"\uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c Pod \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. VPC CNI \uc624\ub958\ub97c \ubc29\uc9c0\ud558\ub824\uba74 Prefix \ubaa8\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\uae30 \uc804\uc5d0 \uc11c\ube0c\ub137\uc5d0\uc11c /28 Prefix\uc758 \uc5f0\uc18d\ub41c \uc8fc\uc18c \ube14\ub85d\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d\uc5d0 \ub300\ud55c \uc138\ubd80 \uc815\ubcf4\ub294 \u201c \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ubc29\uc9c0 \u201d \uc139\uc158\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uacfc\uc758 \ud638\ud658\uc131\uc744 \uc704\ud574 max-pods \uc81c\ud55c\uc774 \ubcf4\uc870 IP \ubaa8\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\ub824\uba74, max-pods \uac12\uc744 Kubelet\uc5d0 \uc9c0\uc815\ud558\uace0, \ub178\ub4dc\uc758 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130(User data)\uc5d0 --use-max-pods=false \ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. max-pod-calculator.sh \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub300\ud55c EKS\uc758 \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uacc4\uc0b0\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uc758 \uc608\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. ./max-pods-calculator.sh --instance-type m5.large --cni-version ``1.9``.0 --cni-prefix-delegation-enabled Prefix \ud560\ub2f9 \ubaa8\ub4dc\ub294 \uae30\ubcf8 ENI\uac00 \ud30c\ub4dc\uc5d0 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 CNI \ucee4\uc2a4\ud140 \ub124\ud2b8\uc6cc\ud0b9 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud2b9\ud788 \uc801\ud569\ud569\ub2c8\ub2e4. Prefix \ud560\ub2f9\uc744 \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc5d0 \uae30\ubcf8 ENI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\ub3c4 \uac70\uc758 \ubaa8\ub4e0 Nitro \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub354 \ub9ce\uc740 IP\ub97c \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix \ubaa8\ub4dc \uc0ac\uc6a9"},{"location":"networking/prefix-mode/index_linux.kr/#prefix_1","text":"\uc11c\ube0c\ub137\uc774 \ub9e4\uc6b0 \ud30c\ud3b8\ud654 \ub418\uc5b4 \uc788\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud558\uc5ec /28 Prefix\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654 \ub41c \uacbd\uc6b0(\uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uace0 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\ub294 \uc11c\ube0c\ub137), Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0 Prefix\ub97c \uc608\uc57d\ud558\uba74 \uc774 \ubb38\uc81c\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud30c\ub4dc\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. \uacf5\uc720 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\uc11c \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc5ec \uaddc\uc815 \uc900\uc218\ub97c \ub2ec\uc131\ud574\uc57c \ud558\ub294 \ubcf4\uc548 \uc694\uad6c\uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c"},{"location":"networking/prefix-mode/index_linux.kr/#_2","text":"\ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \uc5ec\ub7ec \uc720\ud615\uc758 \uc778\uc2a4\ud134\uc2a4\uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\ub300 \ud30c\ub4dc \uc218\uac00 \uc801\uc740 \uc778\uc2a4\ud134\uc2a4\uc758 \uac12\uc774 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc0ac\uc6a9\uc744 \uadf9\ub300\ud654\ud558\ub824\uba74 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \ub178\ub4dc \ud655\uc7a5\uc744 \uc704\ud574 Karpenter\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud504\ub85c\ube44\uc800\ub108 API\uc758 \uc694\uad6c \uc0ac\ud56d \ubd80\ubd84\uc5d0\uc11c node.kubernetes.io/instance-type \uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Warning \ud2b9\uc815 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0 \ub300\ud55c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub294 \ub178\ub4dc \uadf8\ub8f9 \ub0b4 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc758 \ucd5c\uc18c \ucd5c\ub300 \ud30c\ub4dc \uc218\ub85c \uc815\uc758\ub429\ub2c8\ub2e4.","title":"\ub3d9\uc77c\ud55c \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc720\uc0ac\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc0ac\uc6a9"},{"location":"networking/prefix-mode/index_linux.kr/#ipv4-warm_prefix_target","text":"WARM_PREFIX_TARGET \uc758 \uc124\uce58 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \uae30\ubcf8\uac12\uc740 1\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0, WARM_PREFIX_TARGET \uc758 \uad8c\uc7a5 \uac12\uc778 1\uc744 \uc0ac\uc6a9\ud558\uba74 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ubbf8\uc0ac\uc6a9 IP \uc8fc\uc18c\ub97c \ucd5c\uc18c\ud654\ud558\uba74\uc11c \ube60\ub978 \ud30c\ub4dc \uc2e4\ud589 \uc2dc\uac04\uc744 \uc801\uc808\ud788 \uc870\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub2f9 IPv4 \uc8fc\uc18c\ub97c \ucd94\uac00\ub85c \ubcf4\uc874\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uad6c\uc131 \uc2dc WARM_PREFIX_TARGET \uc744 \uc624\ubc84\ub77c\uc774\ub4dc\ud558\ub294 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc124\uc815\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. WARM_IP_TARGET \uc744 16 \ubbf8\ub9cc\uc758 \uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 CNI\uac00 \ucd08\uacfc Prefix \uc804\uccb4\ub97c \uc5f0\uacb0\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"IPv4 \uc8fc\uc18c\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d 'WARM_PREFIX_TARGET'\uc744 \uad6c\uc131"},{"location":"networking/prefix-mode/index_linux.kr/#eni-prefix","text":"EC2 API \uc791\uc5c5 \uc2dc \uae30\uc874 ENI\uc5d0 Prefix\ub97c \ucd94\uac00\ub85c \ud560\ub2f9\ud558\ub294 \uac83\uc774 \uc2e0\uaddc ENI\ub97c \uc0dd\uc131\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ube60\ub985\ub2c8\ub2e4. Prefix\ub97c \uc0ac\uc6a9\ud558\uba74 IPv4 \uc8fc\uc18c \ud560\ub2f9\uc744 \uc808\uc57d\ud558\uba74\uc11c \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix \uc5f0\uacb0\uc740 \uc77c\ubc18\uc801\uc73c\ub85c 1\ucd08 \uc774\ub0b4\uc5d0 \uc644\ub8cc\ub418\uc9c0\ub9cc \uc2e0\uaddc ENI\ub97c \uc5f0\uacb0\ud558\ub294 \ub370\uc5d0\ub294 \ucd5c\ub300 10\ucd08\uac00 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c CNI\ub294 Prefix \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \ub54c \uc6cc\ucee4 \ub178\ub4dc\ub2f9 \ud558\ub098\uc758 ENI\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \ucd5c\uc545\uc758 \uacbd\uc6b0 \ub178\ub4dc\ub2f9 \ucd5c\ub300 15\uac1c\uc758 \ubbf8\uc0ac\uc6a9 IP\ub97c \uac10\ub2f9\ud560 \uc218 \uc788\ub2e4\uba74 \ucd5c\uc2e0 Prefix \ud560\ub2f9 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uadf8\uc5d0 \ub530\ub978 \uc131\ub2a5 \ubc0f \ud6a8\uc728\uc131 \ud5a5\uc0c1\uc744 \uc2e4\ud604\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.","title":"\uc2e0\uaddc ENI \ucd94\uac00\ubcf4\ub2e4\ub294 \uc2e0\uaddc Prefix \ud560\ub2f9"},{"location":"networking/prefix-mode/index_linux.kr/#ipv4","text":"EC2\uac00 ENI\uc5d0 /28 IPv4 Prefix\ub97c \ud560\ub2f9\ud560 \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \uc11c\ube0c\ub137\uc758 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654\ub41c \uacbd\uc6b0 (\ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\uace0 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uc11c\ube0c\ub137) Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc73c\uba70 VPC CNI \ub85c\uadf8\uc5d0 \ub2e4\uc74c\uacfc \uac19\uc740 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. failed to allocate a private IP/Prefix address: InsufficientCidrBlocks: There are not enough free cidr blocks in the specified subnet to satisfy the request. \ud30c\ud3b8\ud654\ub97c \ubc29\uc9c0\ud558\uba74\uc11c Prefix\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc5f0\uc18d \uacf5\uac04\uc744 \ud655\ubcf4\ud558\ub824\uba74 VPC \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \uc0ac\uc6a9\ud558\uc5ec Prefix\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc11c\ube0c\ub137 \ub0b4 IP \uacf5\uac04\uc744 \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc57d\uc744 \uc0dd\uc131\ud558\uba74 VPC CNI \ud50c\ub7ec\uadf8\uc778\uc740 EC2 API\ub97c \ud638\ucd9c\ud558\uc5ec \uc608\uc57d\ub41c \uacf5\uac04\uc5d0\uc11c \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\ub294 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0, Prefix\ub97c \uc704\ud55c \uacf5\uac04\uc744 \uc608\uc57d\ud558\uace0, VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 Prefix\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d \uc124\uc815\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC CNI Prefix \ud560\ub2f9\uc774 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc \uc804\uc6a9\uc778 \uacbd\uc6b0, Prefix \uc608\uc57d \ub2e8\uacc4\ub97c \uac74\ub108\ub6f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ub97c \ubc29\uc9c0"},{"location":"networking/prefix-mode/index_linux.kr/#vpc-cni","text":"Prefix \ubaa8\ub4dc\ub294 VPC CNI \ubc84\uc804 1.9.0 \uc774\uc0c1\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4.Prefix \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud558\uace0 Prefix\ub97c ENI\uc5d0 \ud560\ub2f9\ud55c \ud6c4\uc5d0\ub294 Amazon VPC CNI \ucd94\uac00 \uae30\ub2a5\uc744 1.9.0 \ubbf8\ub9cc \ubc84\uc804\uc73c\ub85c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. VPC CNI\ub97c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub178\ub4dc\ub97c \uc0ad\uc81c\ud558\uace0 \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"VPC CNI \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ub97c \ud53c\ud560 \uac83"},{"location":"networking/prefix-mode/index_linux.kr/#prefix-delegation","text":"\uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0 \uc2e0\uaddc \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9ac\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uae30\uc874 \ub178\ub4dc\ub97c \ubaa8\ub450 \ucc28\ub2e8\ud558\uace0 drain\ud558\uc5ec \ubaa8\ub4e0 \uae30\uc874 \ud30c\ub4dc\ub97c \uc548\uc804\ud558\uac8c \uc81c\uac70\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud574 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0 Pod Disruption Budgets \uc744 \uc124\uc815\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc2e0\uaddc \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0\ub294 ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc758 IP\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud55c \ud6c4, \uc774\uc804 \ub178\ub4dc\uc640 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc5ec\uae30\uc5d0 \uc124\uba85\ub41c \ub2e8\uacc4\uc5d0 \ub530\ub77c \uc548\uc804\ud558\uac8c \ub178\ub4dc \uadf8\ub8f9 \uc0ad\uc81c \ub97c \uc9c4\ud589 \ud569\ub2c8\ub2e4.","title":"Prefix Delegation\uc73c\ub85c \uc804\ud658\ud558\ub294 \ub3d9\uc548 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \uad50\uccb4"},{"location":"networking/prefix-mode/index_linux/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Prefix Mode for Linux \u00b6 Amazon VPC CNI assigns network prefixes to Amazon EC2 network interfaces to increase the number of IP addresses available to nodes and increase pod density per node. You can configure version 1.9.0 or later of the Amazon VPC CNI add-on to assign IPv4 and IPv6 CIDRs instead of assigning individual secondary IP addresses to network interfaces. Prefix mode is enabled by default on IPv6 clusters and is the only option supported. The VPC CNI assigns a /80 IPv6 prefix to a slot on an ENI. Please refer to the IPv6 section of this guide for further information. With prefix assignment mode, the maximum number of elastic network interfaces per instance type remains the same, but you can now configure Amazon VPC CNI to assign /28 (16 IP addresses) IPv4 address prefixes, instead of assigning individual IPv4 addresses to the slots on network interfaces. When ENABLE_PREFIX_DELEGATION is set to true VPC CNI allocates an IP address to a Pod from the prefix assigned to an ENI. Please follow the instructions mentioned in the EKS user guide to enable Prefix IP mode. The maximum number of IP addresses that you can assign to a network interface depends on the instance type. Each prefix that you assign to a network interface counts as one IP address. For example, a c5.large instance has a limit of 10 IPv4 addresses per network interface. Each network interface for this instance has a primary IPv4 address. If a network interface has no secondary IPv4 addresses, you can assign up to 9 prefixes to the network interface. For each additional IPv4 address that you assign to a network interface, you can assign one less prefix to the network interface. Review the AWS EC2 documentation on IP addresses per network interface per instance type and assigning prefixes to network interfaces. During worker node initialization, the VPC CNI assigns one or more prefixes to the primary ENI. The CNI pre-allocates a prefix for faster pod startup by maintaining a warm pool. The number of prefixes to be held in warm pool can be controlled by setting environment variables. WARM_PREFIX_TARGET , the number of prefixes to be allocated in excess of current need. WARM_IP_TARGET , the number of IP addresses to be allocated in excess of current need. MINIMUM_IP_TARGET , the minimum number of IP addresses to be available at any time. WARM_IP_TARGET and MINIMUM_IP_TARGET if set will override WARM_PREFIX_TARGET . As more Pods scheduled additional prefixes will be requested for the existing ENI. First, the VPC CNI attempts to allocate a new prefix to an existing ENI. If the ENI is at capacity, the VPC CNI attempts to allocate a new ENI to the node. New ENIs will be attached until the maximum ENI limit (defined by the instance type) is reached. When a new ENI is attached, ipamd will allocate one or more prefixes needed to maintain the WARM_PREFIX_TARGET , WARM_IP_TARGET , and MINIMUM_IP_TARGET setting. Recommendations \u00b6 Use Prefix Mode when \u00b6 Use prefix mode if you are experiencing Pod density issue on the worker nodes. To avoid VPC CNI errors, we recommend examining the subnets for contiguous block of addresses for /28 prefix before migrate to prefix mode. Please refer \u201c Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u201d section for Subnet reservation details. For backward compatibility, the max-pods limit is set to support secondary IP mode. To increase the pod density, please specify the max-pods value to Kubelet and --use-max-pods=false as the user data for the nodes. You may consider using the max-pod-calculator.sh script to calculate EKS\u2019s recommended maximum number of pods for a given instance type. Refer to the EKS user guide for example user data. ./max-pods-calculator.sh --instance-type m5.large --cni-version ``1.9``.0 --cni-prefix-delegation-enabled Prefix assignment mode is especially relevant for users of CNI custom networking where the primary ENI is not used for pods. With prefix assignment, you can still attach more IPs on nearly every Nitro instance type, even without the primary ENI used for pods. Avoid Prefix Mode when \u00b6 If your subnet is very fragmented and has insufficient available IP addresses to create /28 prefixes, avoid using prefix mode. The prefix attachment may fail if the subnet from which the prefix is produced is fragmented (a heavily used subnet with scattered secondary IP addresses). This problem may be avoided by creating a new subnet and reserving a prefix. In prefix mode, the security group assigned to the worker nodes is shared by the Pods. Consider using Security groups for Pods if you have a security requirement to achieve compliance by running applications with varying network security requirements on shared compute resources. Use Similar Instance Types in the same Node Group \u00b6 Your node group may contain instances of many types. If an instance has a low maximum pod count, that value is applied to all nodes in the node group. Consider using similar instance types in a node group to maximize node use. We recommend configuring node.kubernetes.io/instance-type in the requirements part of the provisioner API if you are using Karpenter for automated node scaling. Warning The maximum pod count for all nodes in a particular node group is defined by the lowest maximum pod count of any single instance type in the node group. Configure WARM_PREFIX_TARGET to conserve IPv4 addresses \u00b6 The installation manifest\u2019s default value for WARM_PREFIX_TARGET is 1. In most cases, the recommended value of 1 for WARM_PREFIX_TARGET will provide a good mix of fast pod launch times while minimizing unused IP addresses assigned to the instance. If you have a need to further conserve IPv4 addresses per node use WARM_IP_TARGET and MINIMUM_IP_TARGET settings, which override WARM_PREFIX_TARGET when configured. By setting WARM_IP_TARGET to a value less than 16, you can prevent the CNI from keeping an entire excess prefix attached. Prefer allocating new prefixes over attaching a new ENI \u00b6 Allocating an additional prefix to an existing ENI is a faster EC2 API operation than creating and attaching a new ENI to the instance. Using prefixes improves performance while being frugal with IPv4 address allocation. Attaching a prefix typically completes in under a second, whereas attaching a new ENI can take up to 10 seconds. For most use cases, the CNI will only need a single ENI per worker node when running in prefix mode. If you can afford (in the worst case) up to 15 unused IPs per node, we strongly recommend using the newer prefix assignment networking mode, and realizing the performance and efficiency gains that come with it. Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u00b6 When EC2 allocates a /28 IPv4 prefix to an ENI, it has to be a contiguous block of IP addresses from your subnet. If the subnet that the prefix is generated from is fragmented (a highly used subnet with scattered secondary IP addresses), the prefix attachment may fail, and you will see the following error message in the VPC CNI logs: failed to allocate a private IP/Prefix address: InsufficientCidrBlocks: There are not enough free cidr blocks in the specified subnet to satisfy the request. To avoid fragmentation and have sufficient contiguous space for creating prefixes, you may use VPC Subnet CIDR reservations to reserve IP space within a subnet for exclusive use by prefixes. Once you create a reservation, the VPC CNI plugin will call EC2 APIs to assign prefixes that are automatically allocated from the reserved space. It is recommended to create a new subnet, reserve space for prefixes, and enable prefix assignment with VPC CNI for worker nodes running in that subnet. If the new subnet is dedicated only to Pods running in your EKS cluster with VPC CNI prefix assignment enabled, then you can skip the prefix reservation step. Avoid downgrading VPC CNI \u00b6 Prefix mode works with VPC CNI version 1.9.0 and later. Downgrading of the Amazon VPC CNI add-on to a version lower than 1.9.0 must be avoided once the prefix mode is enabled and prefixes are assigned to ENIs. You must delete and recreate nodes if you decide to downgrade the VPC CNI. Replace all nodes during the transition to Prefix Delegation \u00b6 It is highly recommended that you create new node groups to increase the number of available IP addresses rather than doing rolling replacement of existing worker nodes. Cordon and drain all the existing nodes to safely evict all of your existing Pods. To prevent service disruptions, we suggest implementing Pod Disruption Budgets on your production clusters for critical workloads. Pods on new nodes will be assigned an IP from a prefix assigned to an ENI. After you confirm the Pods are running, you can delete the old nodes and node groups. If you are using managed node groups, please follow steps mentioned here to safely delete a node group .","title":"Prefix Mode for Linux ({'name': 'English', 'build': True})"},{"location":"networking/prefix-mode/index_linux/#prefix-mode-for-linux","text":"Amazon VPC CNI assigns network prefixes to Amazon EC2 network interfaces to increase the number of IP addresses available to nodes and increase pod density per node. You can configure version 1.9.0 or later of the Amazon VPC CNI add-on to assign IPv4 and IPv6 CIDRs instead of assigning individual secondary IP addresses to network interfaces. Prefix mode is enabled by default on IPv6 clusters and is the only option supported. The VPC CNI assigns a /80 IPv6 prefix to a slot on an ENI. Please refer to the IPv6 section of this guide for further information. With prefix assignment mode, the maximum number of elastic network interfaces per instance type remains the same, but you can now configure Amazon VPC CNI to assign /28 (16 IP addresses) IPv4 address prefixes, instead of assigning individual IPv4 addresses to the slots on network interfaces. When ENABLE_PREFIX_DELEGATION is set to true VPC CNI allocates an IP address to a Pod from the prefix assigned to an ENI. Please follow the instructions mentioned in the EKS user guide to enable Prefix IP mode. The maximum number of IP addresses that you can assign to a network interface depends on the instance type. Each prefix that you assign to a network interface counts as one IP address. For example, a c5.large instance has a limit of 10 IPv4 addresses per network interface. Each network interface for this instance has a primary IPv4 address. If a network interface has no secondary IPv4 addresses, you can assign up to 9 prefixes to the network interface. For each additional IPv4 address that you assign to a network interface, you can assign one less prefix to the network interface. Review the AWS EC2 documentation on IP addresses per network interface per instance type and assigning prefixes to network interfaces. During worker node initialization, the VPC CNI assigns one or more prefixes to the primary ENI. The CNI pre-allocates a prefix for faster pod startup by maintaining a warm pool. The number of prefixes to be held in warm pool can be controlled by setting environment variables. WARM_PREFIX_TARGET , the number of prefixes to be allocated in excess of current need. WARM_IP_TARGET , the number of IP addresses to be allocated in excess of current need. MINIMUM_IP_TARGET , the minimum number of IP addresses to be available at any time. WARM_IP_TARGET and MINIMUM_IP_TARGET if set will override WARM_PREFIX_TARGET . As more Pods scheduled additional prefixes will be requested for the existing ENI. First, the VPC CNI attempts to allocate a new prefix to an existing ENI. If the ENI is at capacity, the VPC CNI attempts to allocate a new ENI to the node. New ENIs will be attached until the maximum ENI limit (defined by the instance type) is reached. When a new ENI is attached, ipamd will allocate one or more prefixes needed to maintain the WARM_PREFIX_TARGET , WARM_IP_TARGET , and MINIMUM_IP_TARGET setting.","title":"Prefix Mode for Linux"},{"location":"networking/prefix-mode/index_linux/#recommendations","text":"","title":"Recommendations"},{"location":"networking/prefix-mode/index_linux/#use-prefix-mode-when","text":"Use prefix mode if you are experiencing Pod density issue on the worker nodes. To avoid VPC CNI errors, we recommend examining the subnets for contiguous block of addresses for /28 prefix before migrate to prefix mode. Please refer \u201c Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u201d section for Subnet reservation details. For backward compatibility, the max-pods limit is set to support secondary IP mode. To increase the pod density, please specify the max-pods value to Kubelet and --use-max-pods=false as the user data for the nodes. You may consider using the max-pod-calculator.sh script to calculate EKS\u2019s recommended maximum number of pods for a given instance type. Refer to the EKS user guide for example user data. ./max-pods-calculator.sh --instance-type m5.large --cni-version ``1.9``.0 --cni-prefix-delegation-enabled Prefix assignment mode is especially relevant for users of CNI custom networking where the primary ENI is not used for pods. With prefix assignment, you can still attach more IPs on nearly every Nitro instance type, even without the primary ENI used for pods.","title":"Use Prefix Mode when"},{"location":"networking/prefix-mode/index_linux/#avoid-prefix-mode-when","text":"If your subnet is very fragmented and has insufficient available IP addresses to create /28 prefixes, avoid using prefix mode. The prefix attachment may fail if the subnet from which the prefix is produced is fragmented (a heavily used subnet with scattered secondary IP addresses). This problem may be avoided by creating a new subnet and reserving a prefix. In prefix mode, the security group assigned to the worker nodes is shared by the Pods. Consider using Security groups for Pods if you have a security requirement to achieve compliance by running applications with varying network security requirements on shared compute resources.","title":"Avoid Prefix Mode when"},{"location":"networking/prefix-mode/index_linux/#use-similar-instance-types-in-the-same-node-group","text":"Your node group may contain instances of many types. If an instance has a low maximum pod count, that value is applied to all nodes in the node group. Consider using similar instance types in a node group to maximize node use. We recommend configuring node.kubernetes.io/instance-type in the requirements part of the provisioner API if you are using Karpenter for automated node scaling. Warning The maximum pod count for all nodes in a particular node group is defined by the lowest maximum pod count of any single instance type in the node group.","title":"Use Similar Instance Types in the same Node Group"},{"location":"networking/prefix-mode/index_linux/#configure-warm_prefix_target-to-conserve-ipv4-addresses","text":"The installation manifest\u2019s default value for WARM_PREFIX_TARGET is 1. In most cases, the recommended value of 1 for WARM_PREFIX_TARGET will provide a good mix of fast pod launch times while minimizing unused IP addresses assigned to the instance. If you have a need to further conserve IPv4 addresses per node use WARM_IP_TARGET and MINIMUM_IP_TARGET settings, which override WARM_PREFIX_TARGET when configured. By setting WARM_IP_TARGET to a value less than 16, you can prevent the CNI from keeping an entire excess prefix attached.","title":"Configure WARM_PREFIX_TARGET to conserve IPv4 addresses"},{"location":"networking/prefix-mode/index_linux/#prefer-allocating-new-prefixes-over-attaching-a-new-eni","text":"Allocating an additional prefix to an existing ENI is a faster EC2 API operation than creating and attaching a new ENI to the instance. Using prefixes improves performance while being frugal with IPv4 address allocation. Attaching a prefix typically completes in under a second, whereas attaching a new ENI can take up to 10 seconds. For most use cases, the CNI will only need a single ENI per worker node when running in prefix mode. If you can afford (in the worst case) up to 15 unused IPs per node, we strongly recommend using the newer prefix assignment networking mode, and realizing the performance and efficiency gains that come with it.","title":"Prefer allocating new prefixes over attaching a new ENI"},{"location":"networking/prefix-mode/index_linux/#use-subnet-reservations-to-avoid-subnet-fragmentation-ipv4","text":"When EC2 allocates a /28 IPv4 prefix to an ENI, it has to be a contiguous block of IP addresses from your subnet. If the subnet that the prefix is generated from is fragmented (a highly used subnet with scattered secondary IP addresses), the prefix attachment may fail, and you will see the following error message in the VPC CNI logs: failed to allocate a private IP/Prefix address: InsufficientCidrBlocks: There are not enough free cidr blocks in the specified subnet to satisfy the request. To avoid fragmentation and have sufficient contiguous space for creating prefixes, you may use VPC Subnet CIDR reservations to reserve IP space within a subnet for exclusive use by prefixes. Once you create a reservation, the VPC CNI plugin will call EC2 APIs to assign prefixes that are automatically allocated from the reserved space. It is recommended to create a new subnet, reserve space for prefixes, and enable prefix assignment with VPC CNI for worker nodes running in that subnet. If the new subnet is dedicated only to Pods running in your EKS cluster with VPC CNI prefix assignment enabled, then you can skip the prefix reservation step.","title":"Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4)"},{"location":"networking/prefix-mode/index_linux/#avoid-downgrading-vpc-cni","text":"Prefix mode works with VPC CNI version 1.9.0 and later. Downgrading of the Amazon VPC CNI add-on to a version lower than 1.9.0 must be avoided once the prefix mode is enabled and prefixes are assigned to ENIs. You must delete and recreate nodes if you decide to downgrade the VPC CNI.","title":"Avoid downgrading VPC CNI"},{"location":"networking/prefix-mode/index_linux/#replace-all-nodes-during-the-transition-to-prefix-delegation","text":"It is highly recommended that you create new node groups to increase the number of available IP addresses rather than doing rolling replacement of existing worker nodes. Cordon and drain all the existing nodes to safely evict all of your existing Pods. To prevent service disruptions, we suggest implementing Pod Disruption Budgets on your production clusters for critical workloads. Pods on new nodes will be assigned an IP from a prefix assigned to an ENI. After you confirm the Pods are running, you can delete the old nodes and node groups. If you are using managed node groups, please follow steps mentioned here to safely delete a node group .","title":"Replace all nodes during the transition to Prefix Delegation"},{"location":"networking/prefix-mode/index_windows.kr/","text":"{'name': 'English', 'build': True} \uc708\ub3c4\uc6b0\uc6a9 Prefix \ubaa8\ub4dc \u00b6 Amazon EKS\uc5d0\uc11c, \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uac01 \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \uc5d0 \uc758\ud574 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \uc774 IP \uc8fc\uc18c\ub294 \ud638\uc2a4\ud2b8\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \ud560\ub2f9\ub418\uc5b4 VPC\uc5d0\uc11c \ub77c\uc6b0\ud305\uc774 \uac00\ub2a5\ud55c \uc8fc\uc18c\uc785\ub2c8\ub2e4. Linux\uc5d0\uc11c\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \uac01 ENI\uc5d0 \ubcf4\uc870 IP \uc8fc\uc18c \ub610\ub294 /28 CIDR(Prefix)\ub85c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc2ac\ub86f\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\ub294 \ub2e8\uc77c ENI\uc640 \uc2ac\ub86f\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \uc8fc\uc18c\ub9cc \uc0ac\uc6a9\ud558\uba74 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\uac00 \ub9ce\ub354\ub77c\ub3c4 \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc \uc218\uac00 \uc778\uc704\uc801\uc73c\ub85c \uc81c\ud55c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 \ube44\uad50\uc801 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc5d0 Prefix Delegation \uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix Delegation\uc744 \ud65c\uc131\ud654\ud558\uba74 /28 IPv4 Prefix\uac00 \ubcf4\uc870 IP \uc8fc\uc18c \ub300\uc2e0 ENI \uc2ac\ub86f\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. Prefix Delegation\uc740 amazon-vpc-cni ConfigMap\uc5d0 enable-windows-prefix-delegation: \u201ctrue \u201d \ud56d\ubaa9\uc744 \ucd94\uac00\ud558\uc5ec \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 ConfigMap\uc740 \uc708\ub3c4\uc6b0 \uc9c0\uc6d0\uc744 \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 enable-windows-ipam: \u201ctrue \u201d \ud56d\ubaa9\uc744 \uc124\uc815\ud588\ub358 \uac83\uacfc \ub3d9\uc77c\ud55c ConfigMap\uc785\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uc5d0 \ub530\ub77c \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc5d0 \ub300\ud574 Prefix Delegation \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. \uadf8\ub9bc: \ubcf4\uc870 IP \ubaa8\ub4dc\uc640 Prefix Delegation \ubaa8\ub4dc\uc758 \ube44\uad50 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 IP \uc8fc\uc18c \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uacfc \ud06c\uae30\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uac01 Prefix\ub294 \uac00\uc6a9 \uc2ac\ub86f\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \uc778\uc2a4\ud134\uc2a4\ub294 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 10 \uc2ac\ub86f\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \uccab \ubc88\uc9f8 \uc2ac\ub86f\uc740 \ud56d\uc0c1 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 IP \uc8fc\uc18c\uc5d0\uc11c \uc0ac\uc6a9\ub418\ubbc0\ub85c Prefix \ubc0f/\ub610\ub294 \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \uc704\ud55c \uc2ac\ub86f\uc774 9\uac1c\ub9cc \ub0a8\uac8c \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc2ac\ub86f\uc5d0 Prefix\uac00 \ud560\ub2f9\ub41c \uacbd\uc6b0 \ub178\ub4dc\ub294 (9 * 16) 144 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc9c0\ub9cc \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub41c \uacbd\uc6b0 9\uac1c\uc758 IP \uc8fc\uc18c\ub9cc \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IP \uc8fc\uc18c \ubc0f \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix \ud560\ub2f9 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc \ucd08\uae30\ud654 \uc911\uc5d0 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 IP \uc8fc\uc18c\uc758 \uc6dc \ud480\uc744 \uc720\uc9c0\ud558\uc5ec \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uae30\ubcf8 ENI\uc5d0 \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud560 Prefix \uc218\ub294 amazon-vpc-cni ConfigMap\uc5d0\uc11c \ub2e4\uc74c \uad6c\uc131 \ub9e4\uac1c\ubcc0\uc218\ub97c \uad6c\uc131\ud558\uc5ec \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. warm-prefix-target , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 Prefix \uc218 warm-ip-target , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 IP \uc8fc\uc18c \uc218 minimum-ip-target , \uc5b8\uc81c\ub4e0\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218 warm-ip-target \ubc0f/\ub610\ub294 minimum-ip-target \uac00 \uc801\uc6a9 \ub41c \uacbd\uc6b0, warm-prefix-target \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ub354 \ub9ce\uc740 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 \uae30\uc874 ENI\uc5d0 \ub300\ud574 \ucd94\uac00 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 \uba3c\uc800 \ub178\ub4dc\uc758 \uae30\uc874 Prefix\uc5d0\uc11c IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubd88\uac00\ud55c \uacbd\uc6b0, \uc11c\ube0c\ub137\uc5d0 \ud544\uc694\ud55c \uc6a9\ub7c9\uc774 \uc788\ub294 \ud55c \uc2e0\uaddc IPv4 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \uadf8\ub9bc: IPv4 \uc8fc\uc18c\ub97c Pod\uc5d0 \ud560\ub2f9\ud558\ub294 \ub3d9\uc548\uc758 \uc6cc\ud06c\ud50c\ub85c \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix Delegation \uc0ac\uc6a9 \u00b6 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix Delegation\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc624\ub958\ub97c \ubc29\uc9c0\ud558\ub824\uba74 Prefix \ubaa8\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\uae30 \uc804\uc5d0 \uc11c\ube0c\ub137\uc5d0\uc11c /28 Prefix\uc758 \uc5f0\uc18d\ub41c \uc8fc\uc18c \ube14\ub85d\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d \uc138\ubd80 \uc815\ubcf4\ub294 \u201c \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ubc29\uc9c0 \u201d \uc139\uc158\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 max-pods \ub294 '110'\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c\ub294 \uc774 \uc815\ub3c4\uba74 \ucda9\ubd84\ud569\ub2c8\ub2e4. \ud574\ub2f9 \ud55c\ub3c4\ub97c \ub298\ub9ac\uac70\ub098 \uc904\uc774\ub824\uba74 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130(User data)\uc758 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uba85\ub839\uc5d0 \ub2e4\uc74c\uc744 \ucd94\uac00\ud558\uc138\uc694. -KubeletExtraArgs '--max-pods=example-value' \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uad6c\uc131 \ub9e4\uac1c \ubcc0\uc218\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ub9c1\ud06c \uc758 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix Delegation\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c \u00b6 \uc11c\ube0c\ub137\uc774 \ub9e4\uc6b0 \ud30c\ud3b8\ud654\ub418\uc5b4 \uc788\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud558\uc5ec /28 Prefix\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654 \ub41c(\uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uace0 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\ub294 \uc11c\ube0c\ub137) \uacbd\uc6b0 Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0 Prefix\ub97c \uc608\uc57d\ud558\uba74 \uc774 \ubb38\uc81c\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv4 \uc8fc\uc18c\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d Prefix Delegation \ub9e4\uac1c \ubcc0\uc218 \uad6c\uc131 \u00b6 warm-prefix-target , warm-ip-target \ubc0f minimum-ip-target \uc740 Prefix\ub97c \uc0ac\uc6a9\ud55c \uc0ac\uc804 \uc2a4\ucf00\uc77c\ub9c1 \ubc0f \ub3d9\uc801 \uc2a4\ucf00\uc77c\ub9c1\uc758 \ub3d9\uc791\uc744 \ubbf8\uc138 \uc870\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. warm-ip-target: \"1\" minimum-ip-target: \"3\" \uc774\ub7ec\ud55c \uad6c\uc131 \ud30c\ub77c\ubbf8\ud130\ub97c \ubbf8\uc138 \uc870\uc815\ud558\uba74 IP \uc8fc\uc18c \ubcf4\uc874\uacfc IP \uc8fc\uc18c \ud560\ub2f9\uc73c\ub85c \uc778\ud55c \ud30c\ub4dc \uc9c0\uc5f0 \uc2dc\uac04 \uac10\uc18c \uc0ac\uc774\uc5d0\uc11c \ucd5c\uc801\uc758 \uade0\ud615\uc744 \uc774\ub8f0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uad6c\uc131 \ub9e4\uac1c\ubcc0\uc218\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ub9c1\ud06c \uc758 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ub97c \ubc29\uc9c0 \u00b6 EC2\uac00 ENI\uc5d0 /28 IPv4 Prefix\ub97c \ud560\ub2f9\ud560 \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \uc11c\ube0c\ub137\uc758 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654\ub41c \uacbd\uc6b0 (\ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\uace0 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uc11c\ube0c\ub137) Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc73c\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \ub178\ub4dc \uc774\ubca4\ud2b8\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. InsufficientCidrBlocks: The specified subnet does not have enough free cidr blocks to satisfy the request \ud30c\ud3b8\ud654\ub97c \ubc29\uc9c0\ud558\uace0 Prefix\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc5f0\uc18d \uacf5\uac04\uc744 \ud655\ubcf4\ud558\ub824\uba74 VPC \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \uc0ac\uc6a9\ud558\uc5ec Prefix\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc11c\ube0c\ub137 \ub0b4 IP \uacf5\uac04\uc744 \uc608\uc57d\ud569\ub2c8\ub2e4. \uc608\uc57d\uc744 \uc0dd\uc131\ud55c \ud6c4\uc5d0\ub294 \uc608\uc57d\ub41c \ube14\ub85d\uc758 IP \uc8fc\uc18c\uac00 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub178\ub4dc ENI\uc5d0 \ub300\ud55c \ud560\ub2f9 \ud638\ucd9c \uc911\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c Prefix\ub97c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0, Prefix\ub97c \uc704\ud55c \uacf5\uac04\uc744 \uc608\uc57d\ud558\uace0, \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 Prefix \ud560\ub2f9\uc744 \ud65c\uc131\ud654\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Prefix Delegation\uc774 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc \uc804\uc6a9\uc778 \uacbd\uc6b0, Prefix \uc608\uc57d \ub2e8\uacc4\ub97c \uac74\ub108\ub6f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \ub610\ub294 \uadf8 \ubc18\ub300\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uacbd\uc6b0 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \uad50\uccb4 \u00b6 \uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0 \uc2e0\uaddc \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9b4 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc0c8 \ub178\ub4dc\uac00 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc218\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9 \uc99d\uc124 \uc708\ub3c4\uc6b0\uc6a9 Prefix Delegation \uae30\ub2a5 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654 \uae30\uc874 \ub178\ub4dc\ub97c \ubaa8\ub450 \ucc28\ub2e8\ud558\uace0 drain\ud558\uc5ec \uae30\uc874 \ud30c\ub4dc\ub97c \uc548\uc804\ud558\uac8c \uc81c\uac70. \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud574 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0 Pod Disruption Budgets \uc801\uc6a9\uc744 \uad8c\uc7a5 \ud30c\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud55c \ud6c4 \uc774\uc804 \ub178\ub4dc\uc640 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ad\uc81c \uac00\ub2a5. \uc2e0\uaddc \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0\ub294 \ub178\ub4dc ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc758 IPv4 \uc8fc\uc18c\uac00 \ud560\ub2f9. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc708\ub3c4\uc6b0\uc6a9 Prefix Delegation \uae30\ub2a5 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654 \uc774 \ub9c1\ud06c \uc5d0 \uc124\uba85\ub41c \ub2e8\uacc4\ub97c \ub530\ub77c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc808\ucc28\ub294 \uc704\uc640 \ube44\uc2b7\ud55c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uc9c0\ub9cc EKS\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. Warning \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub3d9\uc77c\ud55c \ubaa8\ub4dc\ub85c \uc2e4\ud589 \uc708\ub3c4\uc6b0\uc758 \uacbd\uc6b0, \ubcf4\uc870 IP \ubaa8\ub4dc\uc640 Prefix Delegation \ubaa8\ub4dc\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc740 \uc708\ub3c4\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc0c1\ud0dc\uc5d0\uc11c \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \ub610\ub294 \uadf8 \ubc18\ub300\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ub54c \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc9c0\ub9cc, \ub178\ub4dc\uc758 IP \uc8fc\uc18c \uc6a9\ub7c9\uacfc \uad00\ub828\ud558\uc5ec \ubd88\uc77c\uce58\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubcf4\uc870 IPv4 \uc8fc\uc18c\uc6a9 \uc2ac\ub86f\uc774 14\uac1c \uc788\ub294 t3.xlarge \ub178\ub4dc\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. 10\uac1c\uc758 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0, ENI\uc758 \uc2ac\ub86f 10\uac1c\uac00 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Prefix Delegation\uc744 \ud65c\uc131\ud654\ud558\uba74 kube-api \uc11c\ubc84\uc5d0 \uad11\uace0\ub418\ub294 \uc6a9\ub7c9\uc740 (\uc2ac\ub86f 14\uac1c * Prefix\ub2f9 16\uac1c\uc758 IP \uc8fc\uc18c) 244\uac1c\uac00 \ub418\uc9c0\ub9cc, \ud574\ub2f9 \uc2dc\uc810\uc758 \uc2e4\uc81c \uc6a9\ub7c9\uc740 (\ub0a8\uc740 \uc2ac\ub86f 4\uac1c * Prefix\ub2f9 16\uac1c \uc8fc\uc18c) 64\uac1c\uac00 \ub429\ub2c8\ub2e4. \uc54c\ub824\uc9c4 \uc6a9\ub7c9\uacfc \uc2e4\uc81c \uc6a9\ub7c9 (\ub0a8\uc740 \uc2ac\ub86f) \uac04\uc758 \uc774\ub7ec\ud55c \ubd88\uc77c\uce58\ub85c \uc778\ud574 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\ubcf4\ub2e4 \ub9ce\uc740 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub9cc, \uc704\uc5d0\uc11c \uc124\uba85\ud55c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc804\ub7b5\uc744 \ud65c\uc6a9\ud558\uc5ec \ud30c\ub4dc\ub97c \ubcf4\uc870 IP \uc8fc\uc18c\uc5d0\uc11c Prefix\uc5d0\uc11c \uc5bb\uc740 \uc8fc\uc18c\ub85c \uc548\uc804\ud558\uac8c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ubcc0\uacbd\ud574\ub3c4 \ud30c\ub4dc\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uacc4\uc18d \uc2e4\ud589\ub418\uba70 \ub2e4\uc74c\uacfc \uac19\uc774 \ub3d9\uc791\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \uc804\ud658\ud560 \ub54c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ubcf4\uc870 IP \uc8fc\uc18c\ub294 \ud574\uc81c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ube48 \uc2ac\ub86f\uc5d0\ub294 Prefix\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \uc0ac\uc6a9\ud558\ub358 \ubcf4\uc870 IP\uc640 \uc2ac\ub86f\uc774 \ud574\uc81c\ub429\ub2c8\ub2e4. Prefix Delegation \ubaa8\ub4dc\uc5d0\uc11c \ubcf4\uc870 IP \ubaa8\ub4dc\ub85c \uc804\ud658\ud560 \uacbd\uc6b0, \ud574\ub2f9 \ubc94\uc704 \ub0b4\uc758 \ubaa8\ub4e0 IP\uac00 \ub354 \uc774\uc0c1 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc73c\uba74 Prefix\uac00 \ud574\uc81c\ub429\ub2c8\ub2e4. Prefix\uc758 IP\uac00 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc720\uc9c0\ub429\ub2c8\ub2e4. Prefix Delegation \uad00\ub828 \ub514\ubc84\uae45 \ubb38\uc81c \u00b6 \ub514\ubc84\uae45 \uac00\uc774\ub4dc \uc774 \ub9c1\ud06c \ub97c \ud65c\uc6a9\ud558\uc5ec \uc708\ub3c4\uc6b0\uc5d0\uc11c \uc9c1\uba74\ud558\uace0 \uc788\ub294 Prefix Delegation\uc640 \uad00\ub828\ub41c \ubb38\uc81c\ub97c \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc708\ub3c4\uc6b0\uc6a9 Prefix \ubaa8\ub4dc"},{"location":"networking/prefix-mode/index_windows.kr/#prefix","text":"Amazon EKS\uc5d0\uc11c, \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uac01 \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \uc5d0 \uc758\ud574 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \uc774 IP \uc8fc\uc18c\ub294 \ud638\uc2a4\ud2b8\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \ud560\ub2f9\ub418\uc5b4 VPC\uc5d0\uc11c \ub77c\uc6b0\ud305\uc774 \uac00\ub2a5\ud55c \uc8fc\uc18c\uc785\ub2c8\ub2e4. Linux\uc5d0\uc11c\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \uac01 ENI\uc5d0 \ubcf4\uc870 IP \uc8fc\uc18c \ub610\ub294 /28 CIDR(Prefix)\ub85c \ucc44\uc6b8 \uc218 \uc788\ub294 \uc5ec\ub7ec \uc2ac\ub86f\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\ub294 \ub2e8\uc77c ENI\uc640 \uc2ac\ub86f\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \uc8fc\uc18c\ub9cc \uc0ac\uc6a9\ud558\uba74 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\uac00 \ub9ce\ub354\ub77c\ub3c4 \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc \uc218\uac00 \uc778\uc704\uc801\uc73c\ub85c \uc81c\ud55c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 \ube44\uad50\uc801 \uc791\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc708\ub3c4\uc6b0 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ud30c\ub4dc \ubc00\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc5d0 Prefix Delegation \uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prefix Delegation\uc744 \ud65c\uc131\ud654\ud558\uba74 /28 IPv4 Prefix\uac00 \ubcf4\uc870 IP \uc8fc\uc18c \ub300\uc2e0 ENI \uc2ac\ub86f\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. Prefix Delegation\uc740 amazon-vpc-cni ConfigMap\uc5d0 enable-windows-prefix-delegation: \u201ctrue \u201d \ud56d\ubaa9\uc744 \ucd94\uac00\ud558\uc5ec \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 ConfigMap\uc740 \uc708\ub3c4\uc6b0 \uc9c0\uc6d0\uc744 \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 enable-windows-ipam: \u201ctrue \u201d \ud56d\ubaa9\uc744 \uc124\uc815\ud588\ub358 \uac83\uacfc \ub3d9\uc77c\ud55c ConfigMap\uc785\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uc5d0 \ub530\ub77c \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc5d0 \ub300\ud574 Prefix Delegation \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. \uadf8\ub9bc: \ubcf4\uc870 IP \ubaa8\ub4dc\uc640 Prefix Delegation \ubaa8\ub4dc\uc758 \ube44\uad50 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 IP \uc8fc\uc18c \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uacfc \ud06c\uae30\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uac01 Prefix\ub294 \uac00\uc6a9 \uc2ac\ub86f\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \uc778\uc2a4\ud134\uc2a4\ub294 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 10 \uc2ac\ub86f\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \uccab \ubc88\uc9f8 \uc2ac\ub86f\uc740 \ud56d\uc0c1 \uc778\ud130\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 IP \uc8fc\uc18c\uc5d0\uc11c \uc0ac\uc6a9\ub418\ubbc0\ub85c Prefix \ubc0f/\ub610\ub294 \ubcf4\uc870 IP \uc8fc\uc18c\ub97c \uc704\ud55c \uc2ac\ub86f\uc774 9\uac1c\ub9cc \ub0a8\uac8c \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc2ac\ub86f\uc5d0 Prefix\uac00 \ud560\ub2f9\ub41c \uacbd\uc6b0 \ub178\ub4dc\ub294 (9 * 16) 144 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud560 \uc218 \uc788\uc9c0\ub9cc \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub41c \uacbd\uc6b0 9\uac1c\uc758 IP \uc8fc\uc18c\ub9cc \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 IP \uc8fc\uc18c \ubc0f \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 Prefix \ud560\ub2f9 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc \ucd08\uae30\ud654 \uc911\uc5d0 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 IP \uc8fc\uc18c\uc758 \uc6dc \ud480\uc744 \uc720\uc9c0\ud558\uc5ec \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uae30\ubcf8 ENI\uc5d0 \ud558\ub098 \uc774\uc0c1\uc758 Prefix\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud560 Prefix \uc218\ub294 amazon-vpc-cni ConfigMap\uc5d0\uc11c \ub2e4\uc74c \uad6c\uc131 \ub9e4\uac1c\ubcc0\uc218\ub97c \uad6c\uc131\ud558\uc5ec \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. warm-prefix-target , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 Prefix \uc218 warm-ip-target , \ud604\uc7ac \ud544\uc694 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ud560\ub2f9\ud560 IP \uc8fc\uc18c \uc218 minimum-ip-target , \uc5b8\uc81c\ub4e0\uc9c0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218 warm-ip-target \ubc0f/\ub610\ub294 minimum-ip-target \uac00 \uc801\uc6a9 \ub41c \uacbd\uc6b0, warm-prefix-target \ub97c \uc624\ubc84\ub77c\uc774\ub4dc\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ub354 \ub9ce\uc740 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 \uae30\uc874 ENI\uc5d0 \ub300\ud574 \ucd94\uac00 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub418\uba74 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 \uba3c\uc800 \ub178\ub4dc\uc758 \uae30\uc874 Prefix\uc5d0\uc11c IPv4 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub9cc\uc57d \ubd88\uac00\ud55c \uacbd\uc6b0, \uc11c\ube0c\ub137\uc5d0 \ud544\uc694\ud55c \uc6a9\ub7c9\uc774 \uc788\ub294 \ud55c \uc2e0\uaddc IPv4 Prefix\uac00 \uc694\uccad\ub429\ub2c8\ub2e4. \uadf8\ub9bc: IPv4 \uc8fc\uc18c\ub97c Pod\uc5d0 \ud560\ub2f9\ud558\ub294 \ub3d9\uc548\uc758 \uc6cc\ud06c\ud50c\ub85c","title":"\uc708\ub3c4\uc6b0\uc6a9 Prefix \ubaa8\ub4dc"},{"location":"networking/prefix-mode/index_windows.kr/#_1","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/prefix-mode/index_windows.kr/#prefix-delegation","text":"\uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix Delegation\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc624\ub958\ub97c \ubc29\uc9c0\ud558\ub824\uba74 Prefix \ubaa8\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\uae30 \uc804\uc5d0 \uc11c\ube0c\ub137\uc5d0\uc11c /28 Prefix\uc758 \uc5f0\uc18d\ub41c \uc8fc\uc18c \ube14\ub85d\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \uc608\uc57d \uc138\ubd80 \uc815\ubcf4\ub294 \u201c \uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ubc29\uc9c0 \u201d \uc139\uc158\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 max-pods \ub294 '110'\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c\ub294 \uc774 \uc815\ub3c4\uba74 \ucda9\ubd84\ud569\ub2c8\ub2e4. \ud574\ub2f9 \ud55c\ub3c4\ub97c \ub298\ub9ac\uac70\ub098 \uc904\uc774\ub824\uba74 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130(User data)\uc758 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uba85\ub839\uc5d0 \ub2e4\uc74c\uc744 \ucd94\uac00\ud558\uc138\uc694. -KubeletExtraArgs '--max-pods=example-value' \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uad6c\uc131 \ub9e4\uac1c \ubcc0\uc218\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ub9c1\ud06c \uc758 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix Delegation \uc0ac\uc6a9"},{"location":"networking/prefix-mode/index_windows.kr/#prefix-delegation_1","text":"\uc11c\ube0c\ub137\uc774 \ub9e4\uc6b0 \ud30c\ud3b8\ud654\ub418\uc5b4 \uc788\uace0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud558\uc5ec /28 Prefix\ub97c \ub9cc\ub4e4 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Prefix \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654 \ub41c(\uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uace0 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\ub294 \uc11c\ube0c\ub137) \uacbd\uc6b0 Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0 Prefix\ub97c \uc608\uc57d\ud558\uba74 \uc774 \ubb38\uc81c\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 Prefix Delegation\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc74c"},{"location":"networking/prefix-mode/index_windows.kr/#ipv4-prefix-delegation","text":"warm-prefix-target , warm-ip-target \ubc0f minimum-ip-target \uc740 Prefix\ub97c \uc0ac\uc6a9\ud55c \uc0ac\uc804 \uc2a4\ucf00\uc77c\ub9c1 \ubc0f \ub3d9\uc801 \uc2a4\ucf00\uc77c\ub9c1\uc758 \ub3d9\uc791\uc744 \ubbf8\uc138 \uc870\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \uac12\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. warm-ip-target: \"1\" minimum-ip-target: \"3\" \uc774\ub7ec\ud55c \uad6c\uc131 \ud30c\ub77c\ubbf8\ud130\ub97c \ubbf8\uc138 \uc870\uc815\ud558\uba74 IP \uc8fc\uc18c \ubcf4\uc874\uacfc IP \uc8fc\uc18c \ud560\ub2f9\uc73c\ub85c \uc778\ud55c \ud30c\ub4dc \uc9c0\uc5f0 \uc2dc\uac04 \uac10\uc18c \uc0ac\uc774\uc5d0\uc11c \ucd5c\uc801\uc758 \uade0\ud615\uc744 \uc774\ub8f0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uad6c\uc131 \ub9e4\uac1c\ubcc0\uc218\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ub9c1\ud06c \uc758 \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"IPv4 \uc8fc\uc18c\ub97c \ubcf4\uc874\ud558\ub3c4\ub85d Prefix Delegation \ub9e4\uac1c \ubcc0\uc218 \uad6c\uc131"},{"location":"networking/prefix-mode/index_windows.kr/#ipv4","text":"EC2\uac00 ENI\uc5d0 /28 IPv4 Prefix\ub97c \ud560\ub2f9\ud560 \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \uc11c\ube0c\ub137\uc758 \uc5f0\uc18d\ub41c IP \uc8fc\uc18c \ube14\ub85d\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4. Prefix\uac00 \uc0dd\uc131\ub418\ub294 \uc11c\ube0c\ub137\uc774 \ud30c\ud3b8\ud654\ub41c \uacbd\uc6b0 (\ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud769\uc5b4\uc838 \uc788\uace0 \ub9ce\uc774 \uc0ac\uc6a9\ub418\ub294 \uc11c\ube0c\ub137) Prefix \uc5f0\uacb0\uc5d0 \uc2e4\ud328\ud560 \uc218 \uc788\uc73c\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \ub178\ub4dc \uc774\ubca4\ud2b8\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. InsufficientCidrBlocks: The specified subnet does not have enough free cidr blocks to satisfy the request \ud30c\ud3b8\ud654\ub97c \ubc29\uc9c0\ud558\uace0 Prefix\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc5f0\uc18d \uacf5\uac04\uc744 \ud655\ubcf4\ud558\ub824\uba74 VPC \uc11c\ube0c\ub137 CIDR \uc608\uc57d \uc744 \uc0ac\uc6a9\ud558\uc5ec Prefix\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \uc11c\ube0c\ub137 \ub0b4 IP \uacf5\uac04\uc744 \uc608\uc57d\ud569\ub2c8\ub2e4. \uc608\uc57d\uc744 \uc0dd\uc131\ud55c \ud6c4\uc5d0\ub294 \uc608\uc57d\ub41c \ube14\ub85d\uc758 IP \uc8fc\uc18c\uac00 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec\uac00 \ub178\ub4dc ENI\uc5d0 \ub300\ud55c \ud560\ub2f9 \ud638\ucd9c \uc911\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c Prefix\ub97c \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \ub9cc\ub4e4\uace0, Prefix\ub97c \uc704\ud55c \uacf5\uac04\uc744 \uc608\uc57d\ud558\uace0, \ud574\ub2f9 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 Prefix \ud560\ub2f9\uc744 \ud65c\uc131\ud654\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Prefix Delegation\uc774 \ud65c\uc131\ud654\ub41c \uc0c1\ud0dc\uc5d0\uc11c \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc \uc804\uc6a9\uc778 \uacbd\uc6b0, Prefix \uc608\uc57d \ub2e8\uacc4\ub97c \uac74\ub108\ub6f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc11c\ube0c\ub137 \uc608\uc57d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137 \ud30c\ud3b8\ud654 (IPv4) \ub97c \ubc29\uc9c0"},{"location":"networking/prefix-mode/index_windows.kr/#ip-prefix-delegation","text":"\uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \uad50\uccb4\ud558\ub294 \ub300\uc2e0 \uc2e0\uaddc \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\ub97c \ub298\ub9b4 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc0c8 \ub178\ub4dc\uac00 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc218\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9 \uc99d\uc124 \uc708\ub3c4\uc6b0\uc6a9 Prefix Delegation \uae30\ub2a5 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654 \uae30\uc874 \ub178\ub4dc\ub97c \ubaa8\ub450 \ucc28\ub2e8\ud558\uace0 drain\ud558\uc5ec \uae30\uc874 \ud30c\ub4dc\ub97c \uc548\uc804\ud558\uac8c \uc81c\uac70. \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud574 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0 Pod Disruption Budgets \uc801\uc6a9\uc744 \uad8c\uc7a5 \ud30c\ub4dc\uac00 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud55c \ud6c4 \uc774\uc804 \ub178\ub4dc\uc640 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ad\uc81c \uac00\ub2a5. \uc2e0\uaddc \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0\ub294 \ub178\ub4dc ENI\uc5d0 \ud560\ub2f9\ub41c Prefix\uc758 IPv4 \uc8fc\uc18c\uac00 \ud560\ub2f9. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc708\ub3c4\uc6b0\uc6a9 Prefix Delegation \uae30\ub2a5 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654 \uc774 \ub9c1\ud06c \uc5d0 \uc124\uba85\ub41c \ub2e8\uacc4\ub97c \ub530\ub77c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc808\ucc28\ub294 \uc704\uc640 \ube44\uc2b7\ud55c \ub2e8\uacc4\ub97c \uc218\ud589\ud558\uc9c0\ub9cc EKS\uc5d0\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. Warning \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub3d9\uc77c\ud55c \ubaa8\ub4dc\ub85c \uc2e4\ud589 \uc708\ub3c4\uc6b0\uc758 \uacbd\uc6b0, \ubcf4\uc870 IP \ubaa8\ub4dc\uc640 Prefix Delegation \ubaa8\ub4dc\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc740 \uc708\ub3c4\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc0c1\ud0dc\uc5d0\uc11c \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \ub610\ub294 \uadf8 \ubc18\ub300\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ub54c \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc9c0\ub9cc, \ub178\ub4dc\uc758 IP \uc8fc\uc18c \uc6a9\ub7c9\uacfc \uad00\ub828\ud558\uc5ec \ubd88\uc77c\uce58\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubcf4\uc870 IPv4 \uc8fc\uc18c\uc6a9 \uc2ac\ub86f\uc774 14\uac1c \uc788\ub294 t3.xlarge \ub178\ub4dc\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. 10\uac1c\uc758 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0, ENI\uc758 \uc2ac\ub86f 10\uac1c\uac00 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Prefix Delegation\uc744 \ud65c\uc131\ud654\ud558\uba74 kube-api \uc11c\ubc84\uc5d0 \uad11\uace0\ub418\ub294 \uc6a9\ub7c9\uc740 (\uc2ac\ub86f 14\uac1c * Prefix\ub2f9 16\uac1c\uc758 IP \uc8fc\uc18c) 244\uac1c\uac00 \ub418\uc9c0\ub9cc, \ud574\ub2f9 \uc2dc\uc810\uc758 \uc2e4\uc81c \uc6a9\ub7c9\uc740 (\ub0a8\uc740 \uc2ac\ub86f 4\uac1c * Prefix\ub2f9 16\uac1c \uc8fc\uc18c) 64\uac1c\uac00 \ub429\ub2c8\ub2e4. \uc54c\ub824\uc9c4 \uc6a9\ub7c9\uacfc \uc2e4\uc81c \uc6a9\ub7c9 (\ub0a8\uc740 \uc2ac\ub86f) \uac04\uc758 \uc774\ub7ec\ud55c \ubd88\uc77c\uce58\ub85c \uc778\ud574 \ud560\ub2f9\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\ubcf4\ub2e4 \ub9ce\uc740 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub9cc, \uc704\uc5d0\uc11c \uc124\uba85\ud55c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc804\ub7b5\uc744 \ud65c\uc6a9\ud558\uc5ec \ud30c\ub4dc\ub97c \ubcf4\uc870 IP \uc8fc\uc18c\uc5d0\uc11c Prefix\uc5d0\uc11c \uc5bb\uc740 \uc8fc\uc18c\ub85c \uc548\uc804\ud558\uac8c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4dc\ub97c \ubcc0\uacbd\ud574\ub3c4 \ud30c\ub4dc\ub294 \uc815\uc0c1\uc801\uc73c\ub85c \uacc4\uc18d \uc2e4\ud589\ub418\uba70 \ub2e4\uc74c\uacfc \uac19\uc774 \ub3d9\uc791\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \uc804\ud658\ud560 \ub54c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \ubcf4\uc870 IP \uc8fc\uc18c\ub294 \ud574\uc81c\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ube48 \uc2ac\ub86f\uc5d0\ub294 Prefix\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \uc0ac\uc6a9\ud558\ub358 \ubcf4\uc870 IP\uc640 \uc2ac\ub86f\uc774 \ud574\uc81c\ub429\ub2c8\ub2e4. Prefix Delegation \ubaa8\ub4dc\uc5d0\uc11c \ubcf4\uc870 IP \ubaa8\ub4dc\ub85c \uc804\ud658\ud560 \uacbd\uc6b0, \ud574\ub2f9 \ubc94\uc704 \ub0b4\uc758 \ubaa8\ub4e0 IP\uac00 \ub354 \uc774\uc0c1 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc73c\uba74 Prefix\uac00 \ud574\uc81c\ub429\ub2c8\ub2e4. Prefix\uc758 IP\uac00 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uacbd\uc6b0, \ud574\ub2f9 Prefix\ub294 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc720\uc9c0\ub429\ub2c8\ub2e4.","title":"\ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c Prefix Delegation \ubaa8\ub4dc\ub85c \ub610\ub294 \uadf8 \ubc18\ub300\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uacbd\uc6b0 \ubaa8\ub4e0 \ub178\ub4dc\ub97c \uad50\uccb4"},{"location":"networking/prefix-mode/index_windows.kr/#prefix-delegation_2","text":"\ub514\ubc84\uae45 \uac00\uc774\ub4dc \uc774 \ub9c1\ud06c \ub97c \ud65c\uc6a9\ud558\uc5ec \uc708\ub3c4\uc6b0\uc5d0\uc11c \uc9c1\uba74\ud558\uace0 \uc788\ub294 Prefix Delegation\uc640 \uad00\ub828\ub41c \ubb38\uc81c\ub97c \uc790\uc138\ud788 \uc0b4\ud3b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Prefix Delegation \uad00\ub828 \ub514\ubc84\uae45 \ubb38\uc81c"},{"location":"networking/prefix-mode/index_windows/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Prefix Mode for Windows \u00b6 In Amazon EKS, each Pod that runs on a Windows host is assigned a secondary IP address by the VPC resource controller by default. This IP address is a VPC-routable address that is allocated from the host's subnet. On Linux, each ENI attached to the instance has multiple slots that can be populated by a secondary IP address or a /28 CIDR (a prefix). Windows hosts, however, only support a single ENI and its available slots. Using only secondary IP addresses can artifically limit the number of pods you can run on a Windows host, even when there is an abundance of IP addresses available for assignment. In order to increase the pod density on Windows hosts, especially when using smaller instance types, you can enable Prefix Delegation for Windows nodes. When prefix delegation is enabled, /28 IPv4 prefixes are assigned to ENI slots rather than secondary IP addresses. Prefix delegation can be enabled by adding the enable-windows-prefix-delegation: \"true\" entry to the amazon-vpc-cni config map. This is the same config map where you need to set enable-windows-ipam: \"true\" entry for enabling Windows support. Please follow the instructions mentioned in the EKS user guide to enable Prefix Delegation mode for Windows nodes. Figure: Comparison of Secondary IP mode with Prefix Delegation mode The maximum number of IP addresses you can assign to a network interface depends on the instance type and its size. Each prefix assigned to a network interface consumes an available slot. For example, a c5.large instance has a limit of 10 slots per network interface. The first slot on a network interface is always consumed by the interface's primary IP address, leaving you with 9 slots for prefixes and/or secondary IP addresses. If these slots are assigned prefixes, the node can support (9 * 16) 144 IP address whereas if they're assigned secondary IP addresses it can only support 9 IP addresses. See the documentation on IP addresses per network interface per instance type and assigning prefixes to network interfaces for further information. During worker node initialization, the VPC Resource Controller assigns one or more prefixes to the primary ENI for faster pod startup by maintaining a warm pool of the IP addresses. The number of prefixes to be held in warm pool can be controlled by setting the following configuration parameters in amazon-vpc-cni config map. warm-prefix-target , the number of prefixes to be allocated in excess of current need. warm-ip-target , the number of IP addresses to be allocated in excess of current need. minimum-ip-target , the minimum number of IP addresses to be available at any time. warm-ip-target and/or minimum-ip-target if set will override warm-prefix-target . As more Pods are scheduled on the node, additional prefixes will be requested for the existing ENI. When a Pod is scheduled on the node, VPC Resource Controller would first try to assign an IPv4 address from the existing prefixes on the node. If that is not possible, then a new IPv4 prefix will be requested as long as the subnet has the required capacity. Figure: Workflow during assignment of IPv4 address to the Pod Recommendations \u00b6 Use Prefix Delegation when \u00b6 Use prefix delegation if you are experiencing Pod density issues on the worker nodes. To avoid errors, we recommend examining the subnets for contiguous block of addresses for /28 prefix before migrating to prefix mode. Please refer \u201c Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u201d section for Subnet reservation details. By default, the max-pods on Windows nodes is set to 110 . For the vast majority of instance types, this should be sufficient. If you want to increase or decrease this limit, then add the following to the bootstrap command in your user data: -KubeletExtraArgs '--max-pods=example-value' For more details about the bootstrap configuration parameters for Windows nodes, please visit the documentation here . Avoid Prefix Delegation when \u00b6 If your subnet is very fragmented and has insufficient available IP addresses to create /28 prefixes, avoid using prefix mode. The prefix attachment may fail if the subnet from which the prefix is produced is fragmented (a heavily used subnet with scattered secondary IP addresses). This problem may be avoided by creating a new subnet and reserving a prefix. Configure parameters for prefix delegation to conserve IPv4 addresses \u00b6 warm-prefix-target , warm-ip-target , and minimum-ip-target can be used to fine tune the behaviour of pre-scaling and dynamic scaling with prefixes. By default, the following values are used: warm-ip-target: \"1\" minimum-ip-target: \"3\" By fine tuning these configuration parameters, you can achieve an optimal balance of conserving the IP addresses and ensuring decreased Pod latency due to assignment of IP address. For more information about these configuration parameters, visit the documentation here . Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u00b6 When EC2 allocates a /28 IPv4 prefix to an ENI, it has to be a contiguous block of IP addresses from your subnet. If the subnet that the prefix is generated from is fragmented (a highly used subnet with scattered secondary IP addresses), the prefix attachment may fail, and you will see the following node event: InsufficientCidrBlocks: The specified subnet does not have enough free cidr blocks to satisfy the request To avoid fragmentation and have sufficient contiguous space for creating prefixes, use VPC Subnet CIDR reservations to reserve IP space within a subnet for exclusive use by prefixes. Once you create a reservation, the IP addresses from the reserved blocks will not be assigned to other resources. That way, VPC Resource Controller will be able to get available prefixes during the assignment call to the node ENI. It is recommended to create a new subnet, reserve space for prefixes, and enable prefix assignment for worker nodes running in that subnet. If the new subnet is dedicated only to Pods running in your EKS cluster with prefix delegation enabled, then you can skip the prefix reservation step. Replace all nodes when migrating from Secondary IP mode to Prefix Delegation mode or vice versa \u00b6 It is highly recommended that you create new node groups to increase the number of available IP addresses rather than doing rolling replacement of existing worker nodes. When using self-managed node groups, the steps for transition would be: Increase the capacity in your cluster such that the new nodes would be able to accomodate your workloads Enable/Disable the Prefix Delegation feature for Windows Cordon and drain all the existing nodes to safely evict all of your existing Pods. To prevent service disruptions, we suggest implementing Pod Disruption Budgets on your production clusters for critical workloads. After you confirm the Pods are running, you can delete the old nodes and node groups. Pods on new nodes will be assigned an IPv4 address from a prefix assigned to the node ENI. When using managed node groups, the steps for transition would be: Enable/Disable the Prefix Delegation feature for Windows Update the node group using the steps mentioned here . This performs similar steps as above but are managed by EKS. Warning Run all Pods on a node in the same mode For Windows, we recommend that you avoid running Pods in both secondary IP mode and prefix delegation mode at the same time. Such a situation can arise when you migrate from secondary IP mode to prefix delegation mode or vice versa with running Windows workloads. While this will not impact your running Pods, there can be inconsistency with respect to the node's IP address capacity. For example, consider that a t3.xlarge node which has 14 slots for secondary IPv4 addresses. If you are running 10 Pods, then 10 slots on the ENI will be consumed by secondary IP addresses. After you enable prefix delegation the capacity advertised to the kube-api server would be (14 slots * 16 ip addresses per prefix) 244 but the actual capacity at that moment would be (4 remaining slots * 16 addresses per prefix) 64. This inconsistency between the amount of capacity advertised and the actual amount of capacity (remaining slots) can cause issues if you run more Pods than there are IP addresses available for assignment. That being said, you can use the migration strategy as described above to safely transition your Pods from secondary IP address to addresses obtained from prefixes. When toggling between the modes, the Pods will continue running normally and: When toggling from secondary IP mode to prefix delegation mode, the secondary IP addresses assigned to the running pods will not be released. Prefixes will be assigned to the free slots. Once a pod is terminated, the secondary IP and slot it was using will be released. When toggling from prefix delegation mode to secondary IP mode, a prefix will be released when all the IPs within its range are no longer allocated to pods. If any IP from the prefix is assigned to a pod then that prefix will be kept until the pods are terminated. Debugging Issues with Prefix Delegation \u00b6 You can use our debugging guide here to deep dive into the issue you are facing with prefix delegation on Windows.","title":"Prefix Mode for Windows ({'name': 'English', 'build': True})"},{"location":"networking/prefix-mode/index_windows/#prefix-mode-for-windows","text":"In Amazon EKS, each Pod that runs on a Windows host is assigned a secondary IP address by the VPC resource controller by default. This IP address is a VPC-routable address that is allocated from the host's subnet. On Linux, each ENI attached to the instance has multiple slots that can be populated by a secondary IP address or a /28 CIDR (a prefix). Windows hosts, however, only support a single ENI and its available slots. Using only secondary IP addresses can artifically limit the number of pods you can run on a Windows host, even when there is an abundance of IP addresses available for assignment. In order to increase the pod density on Windows hosts, especially when using smaller instance types, you can enable Prefix Delegation for Windows nodes. When prefix delegation is enabled, /28 IPv4 prefixes are assigned to ENI slots rather than secondary IP addresses. Prefix delegation can be enabled by adding the enable-windows-prefix-delegation: \"true\" entry to the amazon-vpc-cni config map. This is the same config map where you need to set enable-windows-ipam: \"true\" entry for enabling Windows support. Please follow the instructions mentioned in the EKS user guide to enable Prefix Delegation mode for Windows nodes. Figure: Comparison of Secondary IP mode with Prefix Delegation mode The maximum number of IP addresses you can assign to a network interface depends on the instance type and its size. Each prefix assigned to a network interface consumes an available slot. For example, a c5.large instance has a limit of 10 slots per network interface. The first slot on a network interface is always consumed by the interface's primary IP address, leaving you with 9 slots for prefixes and/or secondary IP addresses. If these slots are assigned prefixes, the node can support (9 * 16) 144 IP address whereas if they're assigned secondary IP addresses it can only support 9 IP addresses. See the documentation on IP addresses per network interface per instance type and assigning prefixes to network interfaces for further information. During worker node initialization, the VPC Resource Controller assigns one or more prefixes to the primary ENI for faster pod startup by maintaining a warm pool of the IP addresses. The number of prefixes to be held in warm pool can be controlled by setting the following configuration parameters in amazon-vpc-cni config map. warm-prefix-target , the number of prefixes to be allocated in excess of current need. warm-ip-target , the number of IP addresses to be allocated in excess of current need. minimum-ip-target , the minimum number of IP addresses to be available at any time. warm-ip-target and/or minimum-ip-target if set will override warm-prefix-target . As more Pods are scheduled on the node, additional prefixes will be requested for the existing ENI. When a Pod is scheduled on the node, VPC Resource Controller would first try to assign an IPv4 address from the existing prefixes on the node. If that is not possible, then a new IPv4 prefix will be requested as long as the subnet has the required capacity. Figure: Workflow during assignment of IPv4 address to the Pod","title":"Prefix Mode for Windows"},{"location":"networking/prefix-mode/index_windows/#recommendations","text":"","title":"Recommendations"},{"location":"networking/prefix-mode/index_windows/#use-prefix-delegation-when","text":"Use prefix delegation if you are experiencing Pod density issues on the worker nodes. To avoid errors, we recommend examining the subnets for contiguous block of addresses for /28 prefix before migrating to prefix mode. Please refer \u201c Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4) \u201d section for Subnet reservation details. By default, the max-pods on Windows nodes is set to 110 . For the vast majority of instance types, this should be sufficient. If you want to increase or decrease this limit, then add the following to the bootstrap command in your user data: -KubeletExtraArgs '--max-pods=example-value' For more details about the bootstrap configuration parameters for Windows nodes, please visit the documentation here .","title":"Use Prefix Delegation when"},{"location":"networking/prefix-mode/index_windows/#avoid-prefix-delegation-when","text":"If your subnet is very fragmented and has insufficient available IP addresses to create /28 prefixes, avoid using prefix mode. The prefix attachment may fail if the subnet from which the prefix is produced is fragmented (a heavily used subnet with scattered secondary IP addresses). This problem may be avoided by creating a new subnet and reserving a prefix.","title":"Avoid Prefix Delegation when"},{"location":"networking/prefix-mode/index_windows/#configure-parameters-for-prefix-delegation-to-conserve-ipv4-addresses","text":"warm-prefix-target , warm-ip-target , and minimum-ip-target can be used to fine tune the behaviour of pre-scaling and dynamic scaling with prefixes. By default, the following values are used: warm-ip-target: \"1\" minimum-ip-target: \"3\" By fine tuning these configuration parameters, you can achieve an optimal balance of conserving the IP addresses and ensuring decreased Pod latency due to assignment of IP address. For more information about these configuration parameters, visit the documentation here .","title":"Configure parameters for prefix delegation to conserve IPv4 addresses"},{"location":"networking/prefix-mode/index_windows/#use-subnet-reservations-to-avoid-subnet-fragmentation-ipv4","text":"When EC2 allocates a /28 IPv4 prefix to an ENI, it has to be a contiguous block of IP addresses from your subnet. If the subnet that the prefix is generated from is fragmented (a highly used subnet with scattered secondary IP addresses), the prefix attachment may fail, and you will see the following node event: InsufficientCidrBlocks: The specified subnet does not have enough free cidr blocks to satisfy the request To avoid fragmentation and have sufficient contiguous space for creating prefixes, use VPC Subnet CIDR reservations to reserve IP space within a subnet for exclusive use by prefixes. Once you create a reservation, the IP addresses from the reserved blocks will not be assigned to other resources. That way, VPC Resource Controller will be able to get available prefixes during the assignment call to the node ENI. It is recommended to create a new subnet, reserve space for prefixes, and enable prefix assignment for worker nodes running in that subnet. If the new subnet is dedicated only to Pods running in your EKS cluster with prefix delegation enabled, then you can skip the prefix reservation step.","title":"Use Subnet Reservations to Avoid Subnet Fragmentation (IPv4)"},{"location":"networking/prefix-mode/index_windows/#replace-all-nodes-when-migrating-from-secondary-ip-mode-to-prefix-delegation-mode-or-vice-versa","text":"It is highly recommended that you create new node groups to increase the number of available IP addresses rather than doing rolling replacement of existing worker nodes. When using self-managed node groups, the steps for transition would be: Increase the capacity in your cluster such that the new nodes would be able to accomodate your workloads Enable/Disable the Prefix Delegation feature for Windows Cordon and drain all the existing nodes to safely evict all of your existing Pods. To prevent service disruptions, we suggest implementing Pod Disruption Budgets on your production clusters for critical workloads. After you confirm the Pods are running, you can delete the old nodes and node groups. Pods on new nodes will be assigned an IPv4 address from a prefix assigned to the node ENI. When using managed node groups, the steps for transition would be: Enable/Disable the Prefix Delegation feature for Windows Update the node group using the steps mentioned here . This performs similar steps as above but are managed by EKS. Warning Run all Pods on a node in the same mode For Windows, we recommend that you avoid running Pods in both secondary IP mode and prefix delegation mode at the same time. Such a situation can arise when you migrate from secondary IP mode to prefix delegation mode or vice versa with running Windows workloads. While this will not impact your running Pods, there can be inconsistency with respect to the node's IP address capacity. For example, consider that a t3.xlarge node which has 14 slots for secondary IPv4 addresses. If you are running 10 Pods, then 10 slots on the ENI will be consumed by secondary IP addresses. After you enable prefix delegation the capacity advertised to the kube-api server would be (14 slots * 16 ip addresses per prefix) 244 but the actual capacity at that moment would be (4 remaining slots * 16 addresses per prefix) 64. This inconsistency between the amount of capacity advertised and the actual amount of capacity (remaining slots) can cause issues if you run more Pods than there are IP addresses available for assignment. That being said, you can use the migration strategy as described above to safely transition your Pods from secondary IP address to addresses obtained from prefixes. When toggling between the modes, the Pods will continue running normally and: When toggling from secondary IP mode to prefix delegation mode, the secondary IP addresses assigned to the running pods will not be released. Prefixes will be assigned to the free slots. Once a pod is terminated, the secondary IP and slot it was using will be released. When toggling from prefix delegation mode to secondary IP mode, a prefix will be released when all the IPs within its range are no longer allocated to pods. If any IP from the prefix is assigned to a pod then that prefix will be kept until the pods are terminated.","title":"Replace all nodes when migrating from Secondary IP mode to Prefix Delegation mode or vice versa"},{"location":"networking/prefix-mode/index_windows/#debugging-issues-with-prefix-delegation","text":"You can use our debugging guide here to deep dive into the issue you are facing with prefix delegation on Windows.","title":"Debugging Issues with Prefix Delegation"},{"location":"networking/sgpp/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Security Groups Per Pod \u00b6 An AWS security group acts as a virtual firewall for EC2 instances to control inbound and outbound traffic. By default, the Amazon VPC CNI will use security groups associated with the primary ENI on the node. More specifically, every ENI associated with the instance will have the same EC2 Security Groups. Thus, every Pod on a node shares the same security groups as the node it runs on. As seen in the image below, all application Pods operating on worker nodes will have access to the RDS database service (considering RDS inbound allows node security group). Security groups are too coarse grained because they apply to all Pods running on a node. Security groups for Pods provides network segmentation for workloads which is an essential part a good defense in depth strategy. With security groups for Pods, you can improve compute efficiency by running applications with varying network security requirements on shared compute resources. Multiple types of security rules, such as Pod-to-Pod and Pod-to-External AWS services, can be defined in a single place with EC2 security groups and applied to workloads with Kubernetes native APIs. The image below shows security groups applied at the Pod level and how they simplify your application deployment and node architecture. The Pod can now access Amazon RDS database. You can enable security groups for Pods by setting ENABLE_POD_ENI=true for VPC CNI. Once enabled, the \u201c VPC Resource Controller \u201c running on the control plane (managed by EKS) creates and attaches a trunk interface called \u201caws-k8s-trunk-eni\u201c to the node. The trunk interface acts as a standard network interface attached to the instance. To manage trunk interfaces, you must add the AmazonEKSVPCResourceController managed policy to the cluster role that goes with your Amazon EKS cluster. The controller also creates branch interfaces named \"aws-k8s-branch-eni\" and associates them with the trunk interface. Pods are assigned a security group using the SecurityGroupPolicy custom resource and are associated with a branch interface. Since security groups are specified with network interfaces, we are now able to schedule Pods requiring specific security groups on these additional network interfaces. Review the EKS User Guide Section on Security Groups for Pods, including deployment prerequisites. Branch interface capacity is additive to existing instance type limits for secondary IP addresses. Pods that use security groups are not accounted for in the max-pods formula and when you use security group for pods you need to consider raising the max-pods value or be ok with running fewer pods than the node can actually support. A m5.large can have up to 9 branch network interfaces and up to 27 secondary IP addresses assigned to its standard network interfaces. As shown in the example below, the default max-pods for a m5.large is 29, and EKS counts the Pods that use security groups towards the maximum Pods. Please see the EKS user guide for instructions on how to change the max-pods for nodes. When security groups for Pods are used in combination with custom networking , the security group defined in security groups for Pods is used rather than the security group specified in the ENIConfig. As a result, when custom networking is enabled, carefully assess security group ordering while using security groups per Pod. Recommendations \u00b6 Disable TCP Early Demux for Liveness Probe \u00b6 If are you using liveness or readiness probes, you also need to disable TCP early demux, so that the kubelet can connect to Pods on branch network interfaces via TCP. This is only required in strict mode. To do this run the following command: kubectl edit daemonset aws-node -n kube-system Under the initContainer section, change the value for DISABLE_TCP_EARLY_DEMUX to true. Use Security Group For Pods to leverage existing AWS configuration investment. \u00b6 Security groups makes it easier to restrict network access to VPC resources, such as RDS databases or EC2 instances. One clear advantage of security groups per Pod is the opportunity to reuse existing AWS security group resources. If you are using security groups as a network firewall to limit access to your AWS services, we propose applying security groups to Pods using branch ENIs. Consider using security groups for Pods if you are transferring apps from EC2 instances to EKS and limit access to other AWS services with security groups. Configure Pod Security Group Enforcing Mode \u00b6 Amazon VPC CNI plugin version 1.11 added a new setting named POD_SECURITY_GROUP_ENFORCING_MODE (\u201cenforcing mode\u201d). The enforcing mode controls both which security groups apply to the pod, and if source NAT is enabled. You may specify the enforcing mode as either strict or standard. Strict is the default, reflecting the previous behavior of the VPC CNI with ENABLE_POD_ENI set to true . In Strict Mode, only the branch ENI security groups are enforced. The source NAT is also disabled. In Standard Mode, the security groups associated with both the primary ENI and branch ENI (associated with the pod) are applied. Network traffic must comply with both security groups. Warning Any mode change will only impact newly launched Pods. Existing Pods will use the mode that was configured when the Pod was created. Customers will need to recycle existing Pods with security groups if they want to change the traffic behavior. Enforcing Mode: Use Strict mode for isolating pod and node traffic: \u00b6 By default, security groups for Pods is set to \"strict mode.\" Use this setting if you must completely separate Pod traffic from the rest of the node's traffic. In strict mode, the source NAT is turned off so the branch ENI outbound security groups can be used. Warning When strict mode is enabled, all outbound traffic from a pod will leave the node and enter the VPC network. Traffic between pods on the same node will go over the VPC. This increases VPC traffic and limits node-based features. The NodeLocal DNSCache is not supported with strict mode. Enforcing Mode: Use Standard mode in the following situations \u00b6 Client source IP visible to the containers in the Pod If you need to keep the client source IP visible to the containers in the Pod, consider setting POD_SECURITY_GROUP_ENFORCING_MODE to standard . Kubernetes services support externalTrafficPolicy=local to support preservation of the client source IP (default type cluster). You can now run Kubernetes services of type NodePort and LoadBalancer using instance targets with an externalTrafficPolicy set to Local in the standard mode. Local preserves the client source IP and avoids a second hop for LoadBalancer and NodePort type Services. Deploying NodeLocal DNSCache When using security groups for pods, configure standard mode to support Pods that use NodeLocal DNSCache . NodeLocal DNSCache improves Cluster DNS performance by running a DNS caching agent on cluster nodes as a DaemonSet. This will help the pods that have the highest DNS QPS requirements to query local kube-dns/CoreDNS having a local cache, which will improve the latency. NodeLocal DNSCache is not supported in strict mode as all network traffic, even to the node, enters the VPC. Supporting Kubernetes Network Policy We recommend using standard enforcing mode when using network policy with Pods that have associated security groups. We strongly recommend to utilize security groups for Pods to limit network-level access to AWS services that are not part of a cluster. Consider network policies to restrict network traffic between Pods inside a cluster, often known as East/West traffic. Identify Incompatibilities with Security Groups per Pod \u00b6 Windows-based and non-nitro instances do not support security groups for Pods. To utilize security groups with Pods, the instances must be tagged with isTrunkingEnabled. Use network policies to manage access between Pods rather than security groups if your Pods do not depend on any AWS services within or outside of your VPC. Use Security Groups per Pod to efficiently control traffic to AWS Services \u00b6 If an application running within the EKS cluster has to communicate with another resource within the VPC, e.g. an RDS database, then consider using SGs for pods. While there are policy engines that allow you to specify an CIDR or a DNS name, they are a less optimal choice when communicating with AWS services that have endpoints that reside within a VPC. In contrast, Kubernetes network policies provide a mechanism for controlling ingress and egress traffic both within and outside the cluster. Kubernetes network policies should be considered if your application has limited dependencies on other AWS services. You may configure network policies that specify egress rules based on CIDR ranges to limit access to AWS services as opposed to AWS native semantics like SGs. You may use Kubernetes network policies to control network traffic between Pods (often referred to as East/West traffic) and between Pods and external services. Kubernetes network policies are implemented at OSI levels 3 and 4. Amazon EKS allows you to use network policy engines such as Calico and Cilium . By default, the network policy engines are not installed. Please check the respective install guides for instructions on how to set up. For more information on how to use network policy, see EKS Security best practices . The DNS hostnames feature is available in the enterprise versions of network policy engines, which could be useful for controlling traffic between Kubernetes Services/Pods and resources that run outside of AWS. Also, you can consider DNS hostname support for AWS services that don't support security groups by default. Tag a single Security Group to use AWS Loadbalancer Controller \u00b6 When many security groups are allocated to a Pod, Amazon EKS recommends tagging a single security group with kubernetes.io/cluster/$name shared or owned. The tag allows the AWS Loadbalancer Controller to update the rules of security groups to route traffic to the Pods. If just one security group is given to a Pod, the assignment of a tag is optional. Permissions set in a security group are additive, therefore tagging a single security group is sufficient for the loadbalancer controller to locate and reconcile the rules. It also helps to adhere to the default quotas defined by security groups. Configure NAT for Outbound Traffic \u00b6 Source NAT is disabled for outbound traffic from Pods that are assigned security groups. For Pods using security groups that require access the internet launch worker nodes on private subnets configured with a NAT gateway or instance and enable external SNAT in the CNI. kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true Deploy Pods with Security Groups to Private Subnets \u00b6 Pods that are assigned security groups must be run on nodes that are deployed on to private subnets. Note that Pods with assigned security groups deployed to public subnets will not able to access the internet. Verify terminationGracePeriodSeconds in Pod Specification File \u00b6 Ensure that terminationGracePeriodSeconds is non-zero in your Pod specification file (default 30 seconds). This is essential in order for Amazon VPC CNI to delete the Pod network from the worker node. When set to zero, the CNI plugin does not remove the Pod network from the host, and the branch ENI is not effectively cleaned up. Using Security Groups for Pods with Fargate \u00b6 Security groups for Pods that run on Fargate work very similarly to Pods that run on EC2 worker nodes. For example, you have to create the security group before referencing it in the SecurityGroupPolicy you associate with your Fargate Pod. By default, the cluster security group is assiged to all Fargate Pods when you don't explicitly assign a SecurityGroupPolicy to a Fargate Pod. For simplicity's sake, you may want to add the cluster security group to a Fagate Pod's SecurityGroupPolicy otherwise you will have to add the minimum security group rules to your security group. You can find the cluster security group using the describe-cluster API. aws eks describe-cluster --name CLUSTER_NAME --query 'cluster.resourcesVpcConfig.clusterSecurityGroupId' cat >my-fargate-sg-policy.yaml <<EOF apiVersion: vpcresources.k8s.aws/v1beta1 kind: SecurityGroupPolicy metadata: name: my-fargate-sg-policy namespace: my-fargate-namespace spec: podSelector: matchLabels: role: my-fargate-role securityGroups: groupIds: - cluster_security_group_id - my_fargate_pod_security_group_id EOF The minimum security group rules are listed here . These rules allow Fargate Pods to communicate with in-cluster services like kube-apiserver, kubelet, and CoreDNS. You also need add rules to allow inbound and outbound connections to and from your Fargate Pod. This will allow your Pod to communicate with other Pods or resources in your VPC. Additionally, you have to include rules for Fargate to pull container images from Amazon ECR or other container registries such as DockerHub. For more information, see AWS IP address ranges in the AWS General Reference . You can use the below commands to find the security groups applied to a Fargate Pod. kubectl get pod FARGATE_POD -o jsonpath = '{.metadata.annotations.vpc\\.amazonaws\\.com/pod-eni}{\"\\n\"}' Note down the eniId from above command. aws ec2 describe-network-interfaces --network-interface-ids ENI_ID --query 'NetworkInterfaces[*].Groups[*]' Existing Fargate pods must be deleted and recreated in order for new security groups to be applied. For instance, the following command initiates the deployment of the example-app. To update specific pods, you can change the namespace and deployment name in the below command. kubectl rollout restart -n example-ns deployment example-pod","title":"Security Groups per Pod"},{"location":"networking/sgpp/#security-groups-per-pod","text":"An AWS security group acts as a virtual firewall for EC2 instances to control inbound and outbound traffic. By default, the Amazon VPC CNI will use security groups associated with the primary ENI on the node. More specifically, every ENI associated with the instance will have the same EC2 Security Groups. Thus, every Pod on a node shares the same security groups as the node it runs on. As seen in the image below, all application Pods operating on worker nodes will have access to the RDS database service (considering RDS inbound allows node security group). Security groups are too coarse grained because they apply to all Pods running on a node. Security groups for Pods provides network segmentation for workloads which is an essential part a good defense in depth strategy. With security groups for Pods, you can improve compute efficiency by running applications with varying network security requirements on shared compute resources. Multiple types of security rules, such as Pod-to-Pod and Pod-to-External AWS services, can be defined in a single place with EC2 security groups and applied to workloads with Kubernetes native APIs. The image below shows security groups applied at the Pod level and how they simplify your application deployment and node architecture. The Pod can now access Amazon RDS database. You can enable security groups for Pods by setting ENABLE_POD_ENI=true for VPC CNI. Once enabled, the \u201c VPC Resource Controller \u201c running on the control plane (managed by EKS) creates and attaches a trunk interface called \u201caws-k8s-trunk-eni\u201c to the node. The trunk interface acts as a standard network interface attached to the instance. To manage trunk interfaces, you must add the AmazonEKSVPCResourceController managed policy to the cluster role that goes with your Amazon EKS cluster. The controller also creates branch interfaces named \"aws-k8s-branch-eni\" and associates them with the trunk interface. Pods are assigned a security group using the SecurityGroupPolicy custom resource and are associated with a branch interface. Since security groups are specified with network interfaces, we are now able to schedule Pods requiring specific security groups on these additional network interfaces. Review the EKS User Guide Section on Security Groups for Pods, including deployment prerequisites. Branch interface capacity is additive to existing instance type limits for secondary IP addresses. Pods that use security groups are not accounted for in the max-pods formula and when you use security group for pods you need to consider raising the max-pods value or be ok with running fewer pods than the node can actually support. A m5.large can have up to 9 branch network interfaces and up to 27 secondary IP addresses assigned to its standard network interfaces. As shown in the example below, the default max-pods for a m5.large is 29, and EKS counts the Pods that use security groups towards the maximum Pods. Please see the EKS user guide for instructions on how to change the max-pods for nodes. When security groups for Pods are used in combination with custom networking , the security group defined in security groups for Pods is used rather than the security group specified in the ENIConfig. As a result, when custom networking is enabled, carefully assess security group ordering while using security groups per Pod.","title":"Security Groups Per Pod"},{"location":"networking/sgpp/#recommendations","text":"","title":"Recommendations"},{"location":"networking/sgpp/#disable-tcp-early-demux-for-liveness-probe","text":"If are you using liveness or readiness probes, you also need to disable TCP early demux, so that the kubelet can connect to Pods on branch network interfaces via TCP. This is only required in strict mode. To do this run the following command: kubectl edit daemonset aws-node -n kube-system Under the initContainer section, change the value for DISABLE_TCP_EARLY_DEMUX to true.","title":"Disable TCP Early Demux for Liveness Probe"},{"location":"networking/sgpp/#use-security-group-for-pods-to-leverage-existing-aws-configuration-investment","text":"Security groups makes it easier to restrict network access to VPC resources, such as RDS databases or EC2 instances. One clear advantage of security groups per Pod is the opportunity to reuse existing AWS security group resources. If you are using security groups as a network firewall to limit access to your AWS services, we propose applying security groups to Pods using branch ENIs. Consider using security groups for Pods if you are transferring apps from EC2 instances to EKS and limit access to other AWS services with security groups.","title":"Use Security Group For Pods to leverage existing AWS configuration investment."},{"location":"networking/sgpp/#configure-pod-security-group-enforcing-mode","text":"Amazon VPC CNI plugin version 1.11 added a new setting named POD_SECURITY_GROUP_ENFORCING_MODE (\u201cenforcing mode\u201d). The enforcing mode controls both which security groups apply to the pod, and if source NAT is enabled. You may specify the enforcing mode as either strict or standard. Strict is the default, reflecting the previous behavior of the VPC CNI with ENABLE_POD_ENI set to true . In Strict Mode, only the branch ENI security groups are enforced. The source NAT is also disabled. In Standard Mode, the security groups associated with both the primary ENI and branch ENI (associated with the pod) are applied. Network traffic must comply with both security groups. Warning Any mode change will only impact newly launched Pods. Existing Pods will use the mode that was configured when the Pod was created. Customers will need to recycle existing Pods with security groups if they want to change the traffic behavior.","title":"Configure Pod Security Group Enforcing Mode"},{"location":"networking/sgpp/#enforcing-mode-use-strict-mode-for-isolating-pod-and-node-traffic","text":"By default, security groups for Pods is set to \"strict mode.\" Use this setting if you must completely separate Pod traffic from the rest of the node's traffic. In strict mode, the source NAT is turned off so the branch ENI outbound security groups can be used. Warning When strict mode is enabled, all outbound traffic from a pod will leave the node and enter the VPC network. Traffic between pods on the same node will go over the VPC. This increases VPC traffic and limits node-based features. The NodeLocal DNSCache is not supported with strict mode.","title":"Enforcing Mode: Use Strict mode for isolating pod and node traffic:"},{"location":"networking/sgpp/#enforcing-mode-use-standard-mode-in-the-following-situations","text":"Client source IP visible to the containers in the Pod If you need to keep the client source IP visible to the containers in the Pod, consider setting POD_SECURITY_GROUP_ENFORCING_MODE to standard . Kubernetes services support externalTrafficPolicy=local to support preservation of the client source IP (default type cluster). You can now run Kubernetes services of type NodePort and LoadBalancer using instance targets with an externalTrafficPolicy set to Local in the standard mode. Local preserves the client source IP and avoids a second hop for LoadBalancer and NodePort type Services. Deploying NodeLocal DNSCache When using security groups for pods, configure standard mode to support Pods that use NodeLocal DNSCache . NodeLocal DNSCache improves Cluster DNS performance by running a DNS caching agent on cluster nodes as a DaemonSet. This will help the pods that have the highest DNS QPS requirements to query local kube-dns/CoreDNS having a local cache, which will improve the latency. NodeLocal DNSCache is not supported in strict mode as all network traffic, even to the node, enters the VPC. Supporting Kubernetes Network Policy We recommend using standard enforcing mode when using network policy with Pods that have associated security groups. We strongly recommend to utilize security groups for Pods to limit network-level access to AWS services that are not part of a cluster. Consider network policies to restrict network traffic between Pods inside a cluster, often known as East/West traffic.","title":"Enforcing Mode: Use Standard mode in the following situations"},{"location":"networking/sgpp/#identify-incompatibilities-with-security-groups-per-pod","text":"Windows-based and non-nitro instances do not support security groups for Pods. To utilize security groups with Pods, the instances must be tagged with isTrunkingEnabled. Use network policies to manage access between Pods rather than security groups if your Pods do not depend on any AWS services within or outside of your VPC.","title":"Identify Incompatibilities with Security Groups per Pod"},{"location":"networking/sgpp/#use-security-groups-per-pod-to-efficiently-control-traffic-to-aws-services","text":"If an application running within the EKS cluster has to communicate with another resource within the VPC, e.g. an RDS database, then consider using SGs for pods. While there are policy engines that allow you to specify an CIDR or a DNS name, they are a less optimal choice when communicating with AWS services that have endpoints that reside within a VPC. In contrast, Kubernetes network policies provide a mechanism for controlling ingress and egress traffic both within and outside the cluster. Kubernetes network policies should be considered if your application has limited dependencies on other AWS services. You may configure network policies that specify egress rules based on CIDR ranges to limit access to AWS services as opposed to AWS native semantics like SGs. You may use Kubernetes network policies to control network traffic between Pods (often referred to as East/West traffic) and between Pods and external services. Kubernetes network policies are implemented at OSI levels 3 and 4. Amazon EKS allows you to use network policy engines such as Calico and Cilium . By default, the network policy engines are not installed. Please check the respective install guides for instructions on how to set up. For more information on how to use network policy, see EKS Security best practices . The DNS hostnames feature is available in the enterprise versions of network policy engines, which could be useful for controlling traffic between Kubernetes Services/Pods and resources that run outside of AWS. Also, you can consider DNS hostname support for AWS services that don't support security groups by default.","title":"Use Security Groups per Pod to efficiently control traffic to AWS Services"},{"location":"networking/sgpp/#tag-a-single-security-group-to-use-aws-loadbalancer-controller","text":"When many security groups are allocated to a Pod, Amazon EKS recommends tagging a single security group with kubernetes.io/cluster/$name shared or owned. The tag allows the AWS Loadbalancer Controller to update the rules of security groups to route traffic to the Pods. If just one security group is given to a Pod, the assignment of a tag is optional. Permissions set in a security group are additive, therefore tagging a single security group is sufficient for the loadbalancer controller to locate and reconcile the rules. It also helps to adhere to the default quotas defined by security groups.","title":"Tag a single Security Group to use AWS Loadbalancer Controller"},{"location":"networking/sgpp/#configure-nat-for-outbound-traffic","text":"Source NAT is disabled for outbound traffic from Pods that are assigned security groups. For Pods using security groups that require access the internet launch worker nodes on private subnets configured with a NAT gateway or instance and enable external SNAT in the CNI. kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true","title":"Configure NAT for Outbound Traffic"},{"location":"networking/sgpp/#deploy-pods-with-security-groups-to-private-subnets","text":"Pods that are assigned security groups must be run on nodes that are deployed on to private subnets. Note that Pods with assigned security groups deployed to public subnets will not able to access the internet.","title":"Deploy Pods with Security Groups to Private Subnets"},{"location":"networking/sgpp/#verify-terminationgraceperiodseconds-in-pod-specification-file","text":"Ensure that terminationGracePeriodSeconds is non-zero in your Pod specification file (default 30 seconds). This is essential in order for Amazon VPC CNI to delete the Pod network from the worker node. When set to zero, the CNI plugin does not remove the Pod network from the host, and the branch ENI is not effectively cleaned up.","title":"Verify terminationGracePeriodSeconds in Pod Specification File"},{"location":"networking/sgpp/#using-security-groups-for-pods-with-fargate","text":"Security groups for Pods that run on Fargate work very similarly to Pods that run on EC2 worker nodes. For example, you have to create the security group before referencing it in the SecurityGroupPolicy you associate with your Fargate Pod. By default, the cluster security group is assiged to all Fargate Pods when you don't explicitly assign a SecurityGroupPolicy to a Fargate Pod. For simplicity's sake, you may want to add the cluster security group to a Fagate Pod's SecurityGroupPolicy otherwise you will have to add the minimum security group rules to your security group. You can find the cluster security group using the describe-cluster API. aws eks describe-cluster --name CLUSTER_NAME --query 'cluster.resourcesVpcConfig.clusterSecurityGroupId' cat >my-fargate-sg-policy.yaml <<EOF apiVersion: vpcresources.k8s.aws/v1beta1 kind: SecurityGroupPolicy metadata: name: my-fargate-sg-policy namespace: my-fargate-namespace spec: podSelector: matchLabels: role: my-fargate-role securityGroups: groupIds: - cluster_security_group_id - my_fargate_pod_security_group_id EOF The minimum security group rules are listed here . These rules allow Fargate Pods to communicate with in-cluster services like kube-apiserver, kubelet, and CoreDNS. You also need add rules to allow inbound and outbound connections to and from your Fargate Pod. This will allow your Pod to communicate with other Pods or resources in your VPC. Additionally, you have to include rules for Fargate to pull container images from Amazon ECR or other container registries such as DockerHub. For more information, see AWS IP address ranges in the AWS General Reference . You can use the below commands to find the security groups applied to a Fargate Pod. kubectl get pod FARGATE_POD -o jsonpath = '{.metadata.annotations.vpc\\.amazonaws\\.com/pod-eni}{\"\\n\"}' Note down the eniId from above command. aws ec2 describe-network-interfaces --network-interface-ids ENI_ID --query 'NetworkInterfaces[*].Groups[*]' Existing Fargate pods must be deleted and recreated in order for new security groups to be applied. For instance, the following command initiates the deployment of the example-app. To update specific pods, you can change the namespace and deployment name in the below command. kubectl rollout restart -n example-ns deployment example-pod","title":"Using Security Groups for Pods with Fargate"},{"location":"networking/sgpp/index.kr/","text":"{'name': 'English', 'build': True} \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 (Security Group for Pod, SGP) \u00b6 AWS \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud574 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uac00\uc0c1 \ubc29\ud654\ubcbd\uc758 \uc5ed\ud560\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 ENI\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubaa8\ub4e0 \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud30c\ub4dc\uac00 \ub3d9\uc791\ud558\ub294 \ub178\ub4dc\uc640 \ub3d9\uc77c\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uacf5\uc720\ud558\uc5ec \uc774\uc6a9\ud569\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774, \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud30c\ub4dc\ub294 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (RDS \uc778\ubc14\uc6b4\ub4dc\uac00 \ub178\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud5c8\uc6a9\ud55c\ub2e4\ub294 \uac00\uc815\ud558\uc5d0). \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \ud070 \uadf8\ub8f9 \ub2e8\uc704\ub85c \ubcf4\uc548 \uaddc\uce59\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uae30\ub2a5\uc744 \uc774\uc6a9\ud558\uba74 \uac01 Pod\ubcc4\ub85c \ubcf4\uc548 \uaddc\uce59\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc138\uc138\ud55c \ubcf4\uc548 \uc804\ub7b5\uc744 \uc138\uc6b8\uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc90d\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 \uacf5\uc720 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\uc11c \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc744 \uac00\uc9c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc5ec \ucef4\ud4e8\ud305 \ud6a8\uc728\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \ubcf4\uc548 \uadf8\ub8f9\uacfc \ud568\uaed8 \ud30c\ub4dc\uc640 \ud30c\ub4dc \uc0ac\uc774 \ub610\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc678\ubd80 AWS \uc11c\ube44\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec \uc720\ud615\uc758 \ubcf4\uc548 \uaddc\uce59\uc744 \ud55c \uacf3\uc5d0\uc11c \uc815\uc758\ud558\uace0 Kubernetes \ub124\uc774\ud2f0\ube0c API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc758 \uadf8\ub9bc\uc740 \ud30c\ub4dc \uc218\uc900\uc5d0\uc11c \uc801\uc6a9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub098\ud0c0\ub0b4\uace0 \uc788\uc73c\uba70, \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \ubc0f \ub178\ub4dc \uc544\ud0a4\ud14d\ucc98\ub97c \uac04\uc18c\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\uc81c \ud30c\ub4dc\uc5d0\uc11c Amazon RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI\uc5d0 \ub300\ud574 Enable_POD_ENI=true \ub85c \uc124\uc815\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud65c\uc131\ud654\ub418\uba74 EKS\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \u201c VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \u201c\uac00 \u201caws-k8s-trunk-eni\u201c\ub77c\ub294 \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \ud45c\uc900 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \uc81c\uacf5\ub418\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5ed\ud560\uc5d0 'AmazonEKSVPCResourceController' \uad00\ub9ac\ud615 \uc815\ucc45\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ucee8\ud2b8\ub864\ub7ec\ub294 \u201caws-k8s-branch-eni\u201d\ub77c\ub294 \ube0c\ub79c\uce58 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc640 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 SecurityGroupPolicy \ucee4\uc2a4\ud140 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud560\ub2f9\ubc1b\uace0 \ube0c\ub79c\uce58 \uc778\ud130\ud398\uc774\uc2a4\uc640 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \ub2e8\uc704\ub85c \uc9c0\uc815\ub418\ubbc0\ub85c, \uc774\uc81c \uc774\ub7ec\ud55c \ucd94\uac00 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c \ud2b9\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud544\uc694\ub85c \ud558\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc30\ud3ec \uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3ec\ud568\ud558\uc5ec \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc139\uc158 \uc5d0\uc11c \uc880\ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\ub4e4\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd84\uae30 \uc778\ud130\ud398\uc774\uc2a4 \uc6a9\ub7c9\uc740 \ubcf4\uc870 IP \uc8fc\uc18c\uc5d0 \ub300\ud55c \uae30\uc874 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc81c\ud55c\uc5d0 \ucd94\uac00 \ub429\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ub4dc\ub294 max-pods \uacf5\uc2dd\uc5d0\uc11c \uace0\ub824\ub418\uc9c0 \uc54a\uc73c\uba70 \ud3ec\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 max-pods \uac12\uc744 \ub192\uc774\ub294 \uac83\uc744 \uace0\ub824\ud558\uac70\ub098 \ub178\ub4dc\uac00 \uc2e4\uc81c\ub85c \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \uc801\uc740 \uc218\uc758 \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud574\ub3c4 \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. m5.large\uc5d0\ub294 \ucd5c\ub300 9\uac1c\uc758 \ubd84\uae30 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uac00 \uc788\uc744 \uc218 \uc788\uc73c\uba70 \ud45c\uc900 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd5c\ub300 27\uac1c\uc758 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc5d0 \ud45c\uc2dc\ub41c \uac83\ucc98\ub7fc m5.large\uc758 \uae30\ubcf8 max-pods\ub294 29\uc774\uba70 EKS\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 Pod\ub97c \ucd5c\ub300 Pod \uc218\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc758 max-pods\ub97c \ubcc0\uacbd\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, ENIConfig\uc5d0 \uc9c0\uc815\ub41c \ubcf4\uc548 \uadf8\ub8f9 \ub300\uc2e0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \uc815\uc758\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 \ud30c\ub4dc\ubcc4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74\uc11c \ubcf4\uc548 \uadf8\ub8f9 \uc21c\uc11c\ub97c \uc2e0\uc911\ud558\uac8c \uc0b4\ud3b4\ubd10\uc57c \ud569\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ud65c\uc131 \ud504\ub85c\ube0c\ub97c \uc704\ud55c TCP Early Demux \uae30\ub2a5 \ube44\ud65c\uc131\ud654 \u00b6 \ud65c\uc131 \ub610\ub294 \uc900\ube44 \uc0c1\ud0dc \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, kubelet\uc774 TCP\ub97c \ud1b5\ud574 \ube0c\ub79c\uce58 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud30c\ub4dc\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub3c4\ub85d TCP Early Dmux \uae30\ub2a5\uc744 \ube44\ud65c\uc131\ud654 \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. kubectl edit daemonset aws-node -n kube-system \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108 \uc139\uc158\uc5d0\uc11c DISABLE_TCP_EARLY_DEMUX \uc758 \uac12\uc744 true \ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4. Pod\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\uc874 AWS \uad6c\uc131\uc744 \ud65c\uc6a9\ud558\uc2ed\uc2dc\uc624. \u00b6 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub610\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 VPC \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4\ub97c \ub354 \uc27d\uac8c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc758 \ubd84\uba85\ud55c \uc774\uc810 \uc911 \ud558\ub098\ub294 \uae30\uc874 AWS \ubcf4\uc548 \uadf8\ub8f9 \ub9ac\uc18c\uc2a4\ub97c \uc7ac\uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub124\ud2b8\uc6cc\ud06c \ubc29\ud654\ubcbd\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uacbd\uc6b0, \ube0c\ub79c\uce58 ENI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c EKS\ub85c \uc571\uc744 \uc804\uc1a1\ud558\uace0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud1b5\ud574 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc801\uc6a9 \ubaa8\ub4dc \uad6c\uc131 \u00b6 Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778 \ubc84\uc804 1.11\uc5d0\ub294 POD_SECURITY_GROUP_ENFORCING_MODE (\u201c\uac15\uc81c \ubaa8\ub4dc\u201d)\ub77c\ub294 \uc0c8\ub85c\uc6b4 \uc124\uc815\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc801\uc6a9 \ubaa8\ub4dc\ub294 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub418\ub294 \ubcf4\uc548 \uadf8\ub8f9\uacfc \uc18c\uc2a4 NAT \ud65c\uc131\ud654 \uc5ec\ubd80\ub97c \ubaa8\ub450 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \uc801\uc6a9 \ubaa8\ub4dc\ub97c \uc5c4\uaca9 \ub610\ub294 \ud45c\uc900\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5c4\uaca9\uc774 \uae30\ubcf8\uac12\uc774\uba70 ENABLE_POD_ENI \uac00 true \ub85c \uc124\uc815\ub41c VPC CNI\uc758 \uc774\uc804 \ub3d9\uc791\uc744 \ubc18\uc601\ud569\ub2c8\ub2e4. \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ubd84\uae30 ENI \ubcf4\uc548 \uadf8\ub8f9\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc18c\uc2a4 NAT\ub3c4 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ud45c\uc900 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uae30\ubcf8 ENI \ubc0f \ubd84\uae30 ENI(\ud3ec\ub4dc\uc640 \uc5f0\uacb0\ub428)\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc740 \ub450 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubaa8\ub450 \uc900\uc218\ud574\uc57c \ud569\ub2c8\ub2e4. \uacbd\uace0 Any mode change will only impact newly launched Pods. Existing Pods will use the mode that was configured when the Pod was created. Customers will need to recycle existing Pods with security groups if they want to change the traffic behavior. \uc801\uc6a9 \ubaa8\ub4dc: \ud3ec\ub4dc \ubc0f \ub178\ub4dc \ud2b8\ub798\ud53d\uc744 \uaca9\ub9ac\ud558\uae30 \uc704\ud574 \uc5c4\uaca9 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9 \u00b6 By default, security groups for Pods is set to \"strict mode.\" Use this setting if you must completely separate Pod traffic from the rest of the node's traffic. In strict mode, the source NAT is turned off so the branch ENI outbound security groups can be used. Warning \ubaa8\ub4e0 \ubaa8\ub4dc \ubcc0\uacbd\uc740 \uc0c8\ub85c \uc2e4\ud589\ub41c \ud3ec\ub4dc\uc5d0\ub9cc \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uae30\uc874 \ud3ec\ub4dc\ub294 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub420 \ub54c \uad6c\uc131\ub41c \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uace0\uac1d\uc774 \ud2b8\ub798\ud53d \ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud3ec\ud568\ub41c \uae30\uc874 \ud3ec\ub4dc\ub97c \uc7ac\ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc801\uc6a9 \ubaa8\ub4dc: \ub2e4\uc74c \uc0c1\ud669\uc5d0\uc11c\ub294 \ud45c\uc900 \ubaa8\ub4dc\ub97c \u200b\u200b\uc0ac\uc6a9 \u00b6 \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ud45c\uc2dc\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP\ub97c \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \uc720\uc9c0\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 POD_SECURITY_GROUP_ENFORCING_MODE \ub97c \ud45c\uc900 \uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes \uc11c\ube44\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP(\uae30\ubcf8 \uc720\ud615 \ud074\ub7ec\uc2a4\ud130) \ubcf4\uc874\uc744 \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 externalTrafficPolicy=local\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uc81c \ud45c\uc900 \ubaa8\ub4dc\uc5d0\uc11c externalTrafficPolicy\uac00 Local\ub85c \uc124\uc815\ub41c \uc778\uc2a4\ud134\uc2a4 \ub300\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc5ec NodePort \ubc0f LoadBalancer \uc720\ud615\uc758 Kubernetes \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Local \uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP\ub97c \uc720\uc9c0\ud558\uace0 LoadBalancer \ubc0f NodePort \uc720\ud615 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub450 \ubc88\uc9f8 \ud649\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. NodeLocal DNSCache \ubc30\ud3ec \ud30c\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 NodeLocal DNSCache \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud45c\uc900 \ubaa8\ub4dc\ub97c \u200b\u200b\uad6c\uc131\ud569\ub2c8\ub2e4. NodeLocal DNSCache\ub294 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc5d0\uc11c DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c DaemonSet\uc73c\ub85c \uc2e4\ud589\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 DNS QPS \uc694\uad6c \uc0ac\ud56d\uc774 \uac00\uc7a5 \ub192\uc740 \ud3ec\ub4dc\uac00 \ub85c\uceec \uce90\uc2dc\uac00 \uc788\ub294 \ub85c\uceec kube-dns/CoreDNS\ub97c \ucffc\ub9ac\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\uc5b4 \ub300\uae30 \uc2dc\uac04\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. NodeLocal DNSCache\ub294 \ub178\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc774 VPC\ub85c \uc9c4\uc785\ud558\ubbc0\ub85c \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc9c0\uc6d0 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294 \ud3ec\ub4dc\uc5d0 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \ud45c\uc900 \uc2dc\ud589 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc18d\ud558\uc9c0 \uc54a\uc740 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc218\uc900 \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub824\uba74 \ud3ec\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 Pod \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0\ub3c4 \ud568)\uc744 \uc81c\ud55c\ud558\ub824\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uace0\ub824\ud558\uc138\uc694. \ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9\uacfc\uc758 \ube44\ud638\ud658\uc131 \uc2dd\ubcc4 \u00b6 Windows \uae30\ubc18 \ubc0f \ube44 Nitro \uc778\uc2a4\ud134\uc2a4\ub294 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0\uc11c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc6a9\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4\uc5d0 isTrunkingEnabled \ud0dc\uadf8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 VPC \ub0b4\ubd80 \ub610\ub294 \uc678\ubd80\uc758 AWS \uc11c\ube44\uc2a4\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc544\ub2cc \ud3ec\ub4dc \uac04\uc758 \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc81c\uc5b4 \u00b6 EKS \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 VPC \ub0b4\uc758 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc640 \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \uacbd\uc6b0. RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uad6c\ucd95\ud55c \ub2e4\uc74c \ud3ec\ub4dc\uc5d0 SG\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5 \ub4dc\ub9bd\ub2c8\ub2e4. CIDR \ub610\ub294 DNS \uc774\ub984\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \uc815\ucc45 \uc5d4\uc9c4\uc774 \uc788\uc9c0\ub9cc VPC \ub0b4\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\ub294 AWS \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \ub54c\ub294 \ub35c \ucd5c\uc801\uc758 \uc120\ud0dd\uc785\ub2c8\ub2e4. \uc774\uc640 \ub300\uc870\uc801\uc73c\ub85c Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \ubc0f \uc678\ubd80 \ubaa8\ub450\uc5d0\uc11c \uc218\uc2e0 \ubc0f \uc1a1\uc2e0 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc774 \uc81c\ud55c\uc801\uc778 \uacbd\uc6b0 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. SG\uc640 \uac19\uc740 AWS \uae30\ubcf8 \uc758\ubbf8 \uccb4\uacc4\uc640 \ubc18\ub300\ub85c AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud574 CIDR \ubc94\uc704\ub97c \uae30\ubc18\uc73c\ub85c \uc1a1\uc2e0 \uaddc\uce59\uc744 \uc9c0\uc815\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec Pod \uac04(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0\ub3c4 \ud568) \ubc0f Pod\uc640 \uc678\ubd80 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 OSI \ub808\ubca8 3\uacfc 4\uc5d0\uc11c \uad6c\ud604\ub429\ub2c8\ub2e4. Amazon EKS\ub97c \uc0ac\uc6a9\ud558\uba74 Calico \ubc0f Cilium . \uae30\ubcf8\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5d4\uc9c4\uc740 \uc124\uce58\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc124\uc815 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 \ud574\ub2f9 \uc124\uce58 \uac00\uc774\ub4dc\ub97c \ud655\uc778\ud558\uc138\uc694. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc0ac\uc6a9 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uc870\ud558\uc138\uc694. DNS \ud638\uc2a4\ud2b8 \uc774\ub984 \uae30\ub2a5\uc740 \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ubc84\uc804\uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5d4\uc9c4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 Kubernetes \uc11c\ube44\uc2a4/Pod\uc640 AWS \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub9ac\uc18c\uc2a4 \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \u200b\u200b\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uae30\ubcf8\uc801\uc73c\ub85c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c DNS \ud638\uc2a4\ud2b8 \uc774\ub984 \uc9c0\uc6d0\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS Loadbalancer Controller\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8 \uc9c0\uc815 \u00b6 \ub9ce\uc740 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud3ec\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uacbd\uc6b0 Amazon EKS\ub294 \uacf5\uc720 \ub610\ub294 \uc18c\uc720\ub41c kubernetes.io/cluster/$name \uc73c\ub85c \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8\ub97c \uc9c0\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 AWS Loadbalancer Controller\uac00 \ubcf4\uc548 \uadf8\ub8f9\uc758 \uaddc\uce59\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \ud2b8\ub798\ud53d\uc744 \ud3ec\ub4dc\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0 \ud558\ub098\uc758 \ubcf4\uc548 \uadf8\ub8f9\ub9cc \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ud0dc\uadf8 \ud560\ub2f9\uc740 \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \uc124\uc815\ub41c \uad8c\ud55c\uc740 \ucd94\uac00\ub418\ubbc0\ub85c \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uac00 \uaddc\uce59\uc744 \ucc3e\uace0 \uc870\uc815\ud558\ub824\uba74 \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \uc815\uc758\ud55c \uae30\ubcf8 \ud560\ub2f9\ub7c9 \uc744 \uc900\uc218\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c NAT \uad6c\uc131 \u00b6 \uc18c\uc2a4 NAT\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\uc758 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud574 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uc758 \uacbd\uc6b0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4\ub85c \uad6c\uc131\ub41c \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\uace0 CNI\uc5d0\uc11c \uc678\ubd80 SNAT \ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294 \ud30c\ub4dc\ub97c \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec \u00b6 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub2e8 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\ub294 \uc778\ud130\ub137\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \uc2a4\ud399\uc5d0\uc11c terminationGracePeriodSeconds \ubd80\ubd84 \ud655\uc778 \u00b6 \ud30c\ub4dc \uc0ac\uc591 \ud30c\uc77c\uc5d0\uc11c 'terminationGracePeriodSeconds'\uac00 0\uc774 \uc544\ub2cc\uc9c0 \ud655\uc778\ud558\uc138\uc694. (\uae30\ubcf8\uac12 30\ucd08) \uc774\ub294 Amazon VPC CNI\uac00 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc0ad\uc81c\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. 0\uc73c\ub85c \uc124\uc815\ud558\uba74 CNI \ud50c\ub7ec\uadf8\uc778\uc774 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc81c\uac70\ud558\uc9c0 \uc54a\uc73c\uba70 \ubd84\uae30 ENI\uac00 \ud6a8\uacfc\uc801\uc73c\ub85c \uc815\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Fargate\ub97c \uc774\uc6a9\ud558\ub294 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc0ac\uc6a9 \u00b6 Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 EC2 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate \ud30c\ub4dc\uc5d0 \uc5f0\uacb0\ud558\ub294 \ubcf4\uc548 \uadf8\ub8f9 \uc815\ucc45\uc5d0\uc11c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc38\uc870\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c \ubcf4\uc548 \uadf8\ub8f9 \uc815\ucc45\uc744 Fargate \ud30c\ub4dc\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ud560\ub2f9\ud558\uc9c0 \uc54a\uc73c\uba74 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9 \uc774 \ubaa8\ub4e0 Fargate \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ub2e8\uc21c\ud654\ub97c \uc704\ud574 Fagate Pod\uc758 SecurityGroupPolicy\uc5d0 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucd94\uac00\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ucd5c\uc18c \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc124\uba85 \ud074\ub7ec\uc2a4\ud130 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws eks describe-cluster --name CLUSTER_NAME --query 'cluster.resourcesVpcConfig.clusterSecurityGroupId' cat >my-fargate-sg-policy.yaml <<EOF apiVersion: vpcresources.k8s.aws/v1beta1 kind: SecurityGroupPolicy metadata: name: my-fargate-sg-policy namespace: my-fargate-namespace spec: podSelector: matchLabels: role: my-fargate-role securityGroups: groupIds: - cluster_security_group_id - my_fargate_pod_security_group_id EOF \ucd5c\uc18c \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc740 \uc5ec\uae30 \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \ud1b5\ud574 Fargate \ud30c\ub4dc\ub294 kube-apiserver, kubelet, CoreDNS\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c Fargate \ud3ec\ub4dc\uc640\uc758 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc5f0\uacb0\uc744 \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud30c\ub4dc\uac00 VPC\uc758 \ub2e4\ub978 \ud30c\ub4dc\ub098 \ub9ac\uc18c\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uac8c \ub41c\ub2e4. \ub610\ud55c Fargate\uac00 Amazon ECR \ub610\ub294 DockerHub\uc640 \uac19\uc740 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub3c4\ub85d \ud558\ub294 \uaddc\uce59\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \uc77c\ubc18 \ucc38\uc870 \uc758 AWS IP \uc8fc\uc18c \ubc94\uc704\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec Fargate Pod\uc5d0 \uc801\uc6a9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pod FARGATE_POD -o jsonpath = '{.metadata.annotations.vpc\\.amazonaws\\.com/pod-eni}{\"\\n\"}' \uc704 \uba85\ub839\uc758 ENI ID\ub97c \uc801\uc5b4 \ub461\ub2c8\ub2e4. aws ec2 describe-network-interfaces --network-interface-ids ENI_ID --query 'NetworkInterfaces[*].Groups[*]' \uc0c8 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc801\uc6a9\ud558\ub824\uba74 \uae30\uc874 Fargate \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud558\uace0 \ub2e4\uc2dc \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c \uba85\ub839\uc740 example-app \ubc30\ud3ec\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ud3ec\ub4dc\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 \uc544\ub798 \uba85\ub839\uc5b4\uc5d0\uc11c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc774\ub984\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl rollout restart -n example-ns deployment example-pod","title":"\ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 (Security Group for Pod, SGP)"},{"location":"networking/sgpp/index.kr/#security-group-for-pod-sgp","text":"AWS \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud574 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uac00\uc0c1 \ubc29\ud654\ubcbd\uc758 \uc5ed\ud560\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c Amazon VPC CNI\ub294 \ub178\ub4dc\uc758 ENI\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \ubaa8\ub4e0 \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud30c\ub4dc\uac00 \ub3d9\uc791\ud558\ub294 \ub178\ub4dc\uc640 \ub3d9\uc77c\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uacf5\uc720\ud558\uc5ec \uc774\uc6a9\ud569\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774, \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ub3d9\uc791\ud558\ub294 \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud30c\ub4dc\ub294 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (RDS \uc778\ubc14\uc6b4\ub4dc\uac00 \ub178\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud5c8\uc6a9\ud55c\ub2e4\ub294 \uac00\uc815\ud558\uc5d0). \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ub418\uae30 \ub54c\ubb38\uc5d0 \ud070 \uadf8\ub8f9 \ub2e8\uc704\ub85c \ubcf4\uc548 \uaddc\uce59\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uae30\ub2a5\uc744 \uc774\uc6a9\ud558\uba74 \uac01 Pod\ubcc4\ub85c \ubcf4\uc548 \uaddc\uce59\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc138\uc138\ud55c \ubcf4\uc548 \uc804\ub7b5\uc744 \uc138\uc6b8\uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc90d\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 \uacf5\uc720 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\uc11c \ub2e4\uc591\ud55c \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc744 \uac00\uc9c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc5ec \ucef4\ud4e8\ud305 \ud6a8\uc728\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \ubcf4\uc548 \uadf8\ub8f9\uacfc \ud568\uaed8 \ud30c\ub4dc\uc640 \ud30c\ub4dc \uc0ac\uc774 \ub610\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc678\ubd80 AWS \uc11c\ube44\uc2a4\uc640 \uac19\uc740 \uc5ec\ub7ec \uc720\ud615\uc758 \ubcf4\uc548 \uaddc\uce59\uc744 \ud55c \uacf3\uc5d0\uc11c \uc815\uc758\ud558\uace0 Kubernetes \ub124\uc774\ud2f0\ube0c API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc758 \uadf8\ub9bc\uc740 \ud30c\ub4dc \uc218\uc900\uc5d0\uc11c \uc801\uc6a9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub098\ud0c0\ub0b4\uace0 \uc788\uc73c\uba70, \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \ubc0f \ub178\ub4dc \uc544\ud0a4\ud14d\ucc98\ub97c \uac04\uc18c\ud654\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\uc81c \ud30c\ub4dc\uc5d0\uc11c Amazon RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI\uc5d0 \ub300\ud574 Enable_POD_ENI=true \ub85c \uc124\uc815\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud65c\uc131\ud654\ub418\uba74 EKS\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \u201c VPC \ub9ac\uc18c\uc2a4 \ucee8\ud2b8\ub864\ub7ec \u201c\uac00 \u201caws-k8s-trunk-eni\u201c\ub77c\ub294 \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \ud45c\uc900 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad00\ub9ac\ud558\ub824\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \uc81c\uacf5\ub418\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5ed\ud560\uc5d0 'AmazonEKSVPCResourceController' \uad00\ub9ac\ud615 \uc815\ucc45\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ucee8\ud2b8\ub864\ub7ec\ub294 \u201caws-k8s-branch-eni\u201d\ub77c\ub294 \ube0c\ub79c\uce58 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ud2b8\ub801\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc640 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 SecurityGroupPolicy \ucee4\uc2a4\ud140 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud560\ub2f9\ubc1b\uace0 \ube0c\ub79c\uce58 \uc778\ud130\ud398\uc774\uc2a4\uc640 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \ub2e8\uc704\ub85c \uc9c0\uc815\ub418\ubbc0\ub85c, \uc774\uc81c \uc774\ub7ec\ud55c \ucd94\uac00 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0\uc11c \ud2b9\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud544\uc694\ub85c \ud558\ub294 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc30\ud3ec \uc0ac\uc804 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3ec\ud568\ud558\uc5ec \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc139\uc158 \uc5d0\uc11c \uc880\ub354 \uc790\uc138\ud55c \ub0b4\uc6a9\ub4e4\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd84\uae30 \uc778\ud130\ud398\uc774\uc2a4 \uc6a9\ub7c9\uc740 \ubcf4\uc870 IP \uc8fc\uc18c\uc5d0 \ub300\ud55c \uae30\uc874 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc81c\ud55c\uc5d0 \ucd94\uac00 \ub429\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ub4dc\ub294 max-pods \uacf5\uc2dd\uc5d0\uc11c \uace0\ub824\ub418\uc9c0 \uc54a\uc73c\uba70 \ud3ec\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 max-pods \uac12\uc744 \ub192\uc774\ub294 \uac83\uc744 \uace0\ub824\ud558\uac70\ub098 \ub178\ub4dc\uac00 \uc2e4\uc81c\ub85c \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \uc801\uc740 \uc218\uc758 \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud574\ub3c4 \uad1c\ucc2e\uc2b5\ub2c8\ub2e4. m5.large\uc5d0\ub294 \ucd5c\ub300 9\uac1c\uc758 \ubd84\uae30 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uac00 \uc788\uc744 \uc218 \uc788\uc73c\uba70 \ud45c\uc900 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ucd5c\ub300 27\uac1c\uc758 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc5d0 \ud45c\uc2dc\ub41c \uac83\ucc98\ub7fc m5.large\uc758 \uae30\ubcf8 max-pods\ub294 29\uc774\uba70 EKS\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 Pod\ub97c \ucd5c\ub300 Pod \uc218\ub85c \uacc4\uc0b0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc758 max-pods\ub97c \ubcc0\uacbd\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, ENIConfig\uc5d0 \uc9c0\uc815\ub41c \ubcf4\uc548 \uadf8\ub8f9 \ub300\uc2e0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \uc815\uc758\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc774 \ud65c\uc131\ud654\ub418\uba74 \ud30c\ub4dc\ubcc4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74\uc11c \ubcf4\uc548 \uadf8\ub8f9 \uc21c\uc11c\ub97c \uc2e0\uc911\ud558\uac8c \uc0b4\ud3b4\ubd10\uc57c \ud569\ub2c8\ub2e4.","title":"\ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 (Security Group for Pod, SGP)"},{"location":"networking/sgpp/index.kr/#_1","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/sgpp/index.kr/#tcp-early-demux","text":"\ud65c\uc131 \ub610\ub294 \uc900\ube44 \uc0c1\ud0dc \ud504\ub85c\ube0c\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, kubelet\uc774 TCP\ub97c \ud1b5\ud574 \ube0c\ub79c\uce58 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\uc758 \ud30c\ub4dc\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub3c4\ub85d TCP Early Dmux \uae30\ub2a5\uc744 \ube44\ud65c\uc131\ud654 \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub9cc \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. kubectl edit daemonset aws-node -n kube-system \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108 \uc139\uc158\uc5d0\uc11c DISABLE_TCP_EARLY_DEMUX \uc758 \uac12\uc744 true \ub85c \ubcc0\uacbd\ud569\ub2c8\ub2e4.","title":"\ud65c\uc131 \ud504\ub85c\ube0c\ub97c \uc704\ud55c TCP Early Demux \uae30\ub2a5 \ube44\ud65c\uc131\ud654"},{"location":"networking/sgpp/index.kr/#pod-aws","text":"\ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ub610\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 VPC \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4\ub97c \ub354 \uc27d\uac8c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc758 \ubd84\uba85\ud55c \uc774\uc810 \uc911 \ud558\ub098\ub294 \uae30\uc874 AWS \ubcf4\uc548 \uadf8\ub8f9 \ub9ac\uc18c\uc2a4\ub97c \uc7ac\uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub124\ud2b8\uc6cc\ud06c \ubc29\ud654\ubcbd\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uacbd\uc6b0, \ube0c\ub79c\uce58 ENI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c EKS\ub85c \uc571\uc744 \uc804\uc1a1\ud558\uace0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud1b5\ud574 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uacbd\uc6b0 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"Pod\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uae30\uc874 AWS \uad6c\uc131\uc744 \ud65c\uc6a9\ud558\uc2ed\uc2dc\uc624."},{"location":"networking/sgpp/index.kr/#_2","text":"Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778 \ubc84\uc804 1.11\uc5d0\ub294 POD_SECURITY_GROUP_ENFORCING_MODE (\u201c\uac15\uc81c \ubaa8\ub4dc\u201d)\ub77c\ub294 \uc0c8\ub85c\uc6b4 \uc124\uc815\uc774 \ucd94\uac00\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc801\uc6a9 \ubaa8\ub4dc\ub294 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub418\ub294 \ubcf4\uc548 \uadf8\ub8f9\uacfc \uc18c\uc2a4 NAT \ud65c\uc131\ud654 \uc5ec\ubd80\ub97c \ubaa8\ub450 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \uc801\uc6a9 \ubaa8\ub4dc\ub97c \uc5c4\uaca9 \ub610\ub294 \ud45c\uc900\uc73c\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5c4\uaca9\uc774 \uae30\ubcf8\uac12\uc774\uba70 ENABLE_POD_ENI \uac00 true \ub85c \uc124\uc815\ub41c VPC CNI\uc758 \uc774\uc804 \ub3d9\uc791\uc744 \ubc18\uc601\ud569\ub2c8\ub2e4. \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \ubd84\uae30 ENI \ubcf4\uc548 \uadf8\ub8f9\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc18c\uc2a4 NAT\ub3c4 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ud45c\uc900 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uae30\ubcf8 ENI \ubc0f \ubd84\uae30 ENI(\ud3ec\ub4dc\uc640 \uc5f0\uacb0\ub428)\uc640 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc740 \ub450 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubaa8\ub450 \uc900\uc218\ud574\uc57c \ud569\ub2c8\ub2e4. \uacbd\uace0 Any mode change will only impact newly launched Pods. Existing Pods will use the mode that was configured when the Pod was created. Customers will need to recycle existing Pods with security groups if they want to change the traffic behavior.","title":"\ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc801\uc6a9 \ubaa8\ub4dc \uad6c\uc131"},{"location":"networking/sgpp/index.kr/#_3","text":"By default, security groups for Pods is set to \"strict mode.\" Use this setting if you must completely separate Pod traffic from the rest of the node's traffic. In strict mode, the source NAT is turned off so the branch ENI outbound security groups can be used. Warning \ubaa8\ub4e0 \ubaa8\ub4dc \ubcc0\uacbd\uc740 \uc0c8\ub85c \uc2e4\ud589\ub41c \ud3ec\ub4dc\uc5d0\ub9cc \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uae30\uc874 \ud3ec\ub4dc\ub294 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub420 \ub54c \uad6c\uc131\ub41c \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uace0\uac1d\uc774 \ud2b8\ub798\ud53d \ub3d9\uc791\uc744 \ubcc0\uacbd\ud558\ub824\uba74 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud3ec\ud568\ub41c \uae30\uc874 \ud3ec\ub4dc\ub97c \uc7ac\ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc801\uc6a9 \ubaa8\ub4dc: \ud3ec\ub4dc \ubc0f \ub178\ub4dc \ud2b8\ub798\ud53d\uc744 \uaca9\ub9ac\ud558\uae30 \uc704\ud574 \uc5c4\uaca9 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9"},{"location":"networking/sgpp/index.kr/#_4","text":"\ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ud45c\uc2dc\ub418\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP\ub97c \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ud45c\uc2dc\ub418\ub3c4\ub85d \uc720\uc9c0\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 POD_SECURITY_GROUP_ENFORCING_MODE \ub97c \ud45c\uc900 \uc73c\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes \uc11c\ube44\uc2a4\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP(\uae30\ubcf8 \uc720\ud615 \ud074\ub7ec\uc2a4\ud130) \ubcf4\uc874\uc744 \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 externalTrafficPolicy=local\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\uc81c \ud45c\uc900 \ubaa8\ub4dc\uc5d0\uc11c externalTrafficPolicy\uac00 Local\ub85c \uc124\uc815\ub41c \uc778\uc2a4\ud134\uc2a4 \ub300\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc5ec NodePort \ubc0f LoadBalancer \uc720\ud615\uc758 Kubernetes \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Local \uc740 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc18c\uc2a4 IP\ub97c \uc720\uc9c0\ud558\uace0 LoadBalancer \ubc0f NodePort \uc720\ud615 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub450 \ubc88\uc9f8 \ud649\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. NodeLocal DNSCache \ubc30\ud3ec \ud30c\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 NodeLocal DNSCache \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub3c4\ub85d \ud45c\uc900 \ubaa8\ub4dc\ub97c \u200b\u200b\uad6c\uc131\ud569\ub2c8\ub2e4. NodeLocal DNSCache\ub294 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc5d0\uc11c DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c DaemonSet\uc73c\ub85c \uc2e4\ud589\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \ud5a5\uc0c1\uc2dc\ud0b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 DNS QPS \uc694\uad6c \uc0ac\ud56d\uc774 \uac00\uc7a5 \ub192\uc740 \ud3ec\ub4dc\uac00 \ub85c\uceec \uce90\uc2dc\uac00 \uc788\ub294 \ub85c\uceec kube-dns/CoreDNS\ub97c \ucffc\ub9ac\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\uc5b4 \ub300\uae30 \uc2dc\uac04\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. NodeLocal DNSCache\ub294 \ub178\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc774 VPC\ub85c \uc9c4\uc785\ud558\ubbc0\ub85c \uc5c4\uaca9 \ubaa8\ub4dc\uc5d0\uc11c\ub294 \uc9c0\uc6d0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc9c0\uc6d0 \uc5f0\uacb0\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294 \ud3ec\ub4dc\uc5d0 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \ud45c\uc900 \uc2dc\ud589 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc18d\ud558\uc9c0 \uc54a\uc740 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc218\uc900 \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub824\uba74 \ud3ec\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 Pod \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0\ub3c4 \ud568)\uc744 \uc81c\ud55c\ud558\ub824\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uace0\ub824\ud558\uc138\uc694.","title":"\uc801\uc6a9 \ubaa8\ub4dc: \ub2e4\uc74c \uc0c1\ud669\uc5d0\uc11c\ub294 \ud45c\uc900 \ubaa8\ub4dc\ub97c \u200b\u200b\uc0ac\uc6a9"},{"location":"networking/sgpp/index.kr/#_5","text":"Windows \uae30\ubc18 \ubc0f \ube44 Nitro \uc778\uc2a4\ud134\uc2a4\ub294 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0\uc11c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ud65c\uc6a9\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4\uc5d0 isTrunkingEnabled \ud0dc\uadf8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 VPC \ub0b4\ubd80 \ub610\ub294 \uc678\ubd80\uc758 AWS \uc11c\ube44\uc2a4\uc5d0 \uc758\uc874\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc544\ub2cc \ud3ec\ub4dc \uac04\uc758 \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.","title":"\ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9\uacfc\uc758 \ube44\ud638\ud658\uc131 \uc2dd\ubcc4"},{"location":"networking/sgpp/index.kr/#aws","text":"EKS \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 VPC \ub0b4\uc758 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc640 \ud1b5\uc2e0\ud574\uc57c \ud558\ub294 \uacbd\uc6b0. RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uad6c\ucd95\ud55c \ub2e4\uc74c \ud3ec\ub4dc\uc5d0 SG\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5 \ub4dc\ub9bd\ub2c8\ub2e4. CIDR \ub610\ub294 DNS \uc774\ub984\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \uc815\ucc45 \uc5d4\uc9c4\uc774 \uc788\uc9c0\ub9cc VPC \ub0b4\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\ub294 AWS \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \ub54c\ub294 \ub35c \ucd5c\uc801\uc758 \uc120\ud0dd\uc785\ub2c8\ub2e4. \uc774\uc640 \ub300\uc870\uc801\uc73c\ub85c Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \ubc0f \uc678\ubd80 \ubaa8\ub450\uc5d0\uc11c \uc218\uc2e0 \ubc0f \uc1a1\uc2e0 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\uae30 \uc704\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc774 \uc81c\ud55c\uc801\uc778 \uacbd\uc6b0 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. SG\uc640 \uac19\uc740 AWS \uae30\ubcf8 \uc758\ubbf8 \uccb4\uacc4\uc640 \ubc18\ub300\ub85c AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud574 CIDR \ubc94\uc704\ub97c \uae30\ubc18\uc73c\ub85c \uc1a1\uc2e0 \uaddc\uce59\uc744 \uc9c0\uc815\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec Pod \uac04(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0\ub3c4 \ud568) \ubc0f Pod\uc640 \uc678\ubd80 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 OSI \ub808\ubca8 3\uacfc 4\uc5d0\uc11c \uad6c\ud604\ub429\ub2c8\ub2e4. Amazon EKS\ub97c \uc0ac\uc6a9\ud558\uba74 Calico \ubc0f Cilium . \uae30\ubcf8\uc801\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5d4\uc9c4\uc740 \uc124\uce58\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc124\uc815 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 \ud574\ub2f9 \uc124\uce58 \uac00\uc774\ub4dc\ub97c \ud655\uc778\ud558\uc138\uc694. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc0ac\uc6a9 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uc870\ud558\uc138\uc694. DNS \ud638\uc2a4\ud2b8 \uc774\ub984 \uae30\ub2a5\uc740 \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ubc84\uc804\uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5d4\uc9c4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 Kubernetes \uc11c\ube44\uc2a4/Pod\uc640 AWS \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub9ac\uc18c\uc2a4 \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \u200b\u200b\ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uae30\ubcf8\uc801\uc73c\ub85c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c DNS \ud638\uc2a4\ud2b8 \uc774\ub984 \uc9c0\uc6d0\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec AWS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc81c\uc5b4"},{"location":"networking/sgpp/index.kr/#aws-loadbalancer-controller","text":"\ub9ce\uc740 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud3ec\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uacbd\uc6b0 Amazon EKS\ub294 \uacf5\uc720 \ub610\ub294 \uc18c\uc720\ub41c kubernetes.io/cluster/$name \uc73c\ub85c \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8\ub97c \uc9c0\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uba74 AWS Loadbalancer Controller\uac00 \ubcf4\uc548 \uadf8\ub8f9\uc758 \uaddc\uce59\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \ud2b8\ub798\ud53d\uc744 \ud3ec\ub4dc\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0 \ud558\ub098\uc758 \ubcf4\uc548 \uadf8\ub8f9\ub9cc \uc81c\uacf5\ub418\ub294 \uacbd\uc6b0 \ud0dc\uadf8 \ud560\ub2f9\uc740 \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \uc124\uc815\ub41c \uad8c\ud55c\uc740 \ucd94\uac00\ub418\ubbc0\ub85c \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uac00 \uaddc\uce59\uc744 \ucc3e\uace0 \uc870\uc815\ud558\ub824\uba74 \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \uc815\uc758\ud55c \uae30\ubcf8 \ud560\ub2f9\ub7c9 \uc744 \uc900\uc218\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.","title":"AWS Loadbalancer Controller\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub2e8\uc77c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud0dc\uadf8 \uc9c0\uc815"},{"location":"networking/sgpp/index.kr/#nat","text":"\uc18c\uc2a4 NAT\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\uc758 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud574 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \uc778\ud130\ub137 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uc758 \uacbd\uc6b0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \uc778\uc2a4\ud134\uc2a4\ub85c \uad6c\uc131\ub41c \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc2dc\uc791\ud558\uace0 CNI\uc5d0\uc11c \uc678\ubd80 SNAT \ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4. kubectl set env daemonset -n kube-system aws-node AWS_VPC_K8S_CNI_EXTERNALSNAT=true","title":"\uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c NAT \uad6c\uc131"},{"location":"networking/sgpp/index.kr/#_6","text":"\ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub2e8 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc774 \ud560\ub2f9\ub41c \ud30c\ub4dc\ub294 \uc778\ud130\ub137\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294 \ud30c\ub4dc\ub97c \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec"},{"location":"networking/sgpp/index.kr/#terminationgraceperiodseconds","text":"\ud30c\ub4dc \uc0ac\uc591 \ud30c\uc77c\uc5d0\uc11c 'terminationGracePeriodSeconds'\uac00 0\uc774 \uc544\ub2cc\uc9c0 \ud655\uc778\ud558\uc138\uc694. (\uae30\ubcf8\uac12 30\ucd08) \uc774\ub294 Amazon VPC CNI\uac00 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc0ad\uc81c\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. 0\uc73c\ub85c \uc124\uc815\ud558\uba74 CNI \ud50c\ub7ec\uadf8\uc778\uc774 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc81c\uac70\ud558\uc9c0 \uc54a\uc73c\uba70 \ubd84\uae30 ENI\uac00 \ud6a8\uacfc\uc801\uc73c\ub85c \uc815\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ud30c\ub4dc \uc2a4\ud399\uc5d0\uc11c terminationGracePeriodSeconds \ubd80\ubd84 \ud655\uc778"},{"location":"networking/sgpp/index.kr/#fargate","text":"Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 EC2 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc640 \ub9e4\uc6b0 \uc720\uc0ac\ud558\uac8c \uc791\ub3d9\ud55c\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate \ud30c\ub4dc\uc5d0 \uc5f0\uacb0\ud558\ub294 \ubcf4\uc548 \uadf8\ub8f9 \uc815\ucc45\uc5d0\uc11c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc38\uc870\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.\uae30\ubcf8\uc801\uc73c\ub85c \ubcf4\uc548 \uadf8\ub8f9 \uc815\ucc45\uc744 Fargate \ud30c\ub4dc\uc5d0 \uba85\uc2dc\uc801\uc73c\ub85c \ud560\ub2f9\ud558\uc9c0 \uc54a\uc73c\uba74 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9 \uc774 \ubaa8\ub4e0 Fargate \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ub2e8\uc21c\ud654\ub97c \uc704\ud574 Fagate Pod\uc758 SecurityGroupPolicy\uc5d0 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucd94\uac00\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ucd5c\uc18c \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc124\uba85 \ud074\ub7ec\uc2a4\ud130 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws eks describe-cluster --name CLUSTER_NAME --query 'cluster.resourcesVpcConfig.clusterSecurityGroupId' cat >my-fargate-sg-policy.yaml <<EOF apiVersion: vpcresources.k8s.aws/v1beta1 kind: SecurityGroupPolicy metadata: name: my-fargate-sg-policy namespace: my-fargate-namespace spec: podSelector: matchLabels: role: my-fargate-role securityGroups: groupIds: - cluster_security_group_id - my_fargate_pod_security_group_id EOF \ucd5c\uc18c \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc740 \uc5ec\uae30 \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \ud1b5\ud574 Fargate \ud30c\ub4dc\ub294 kube-apiserver, kubelet, CoreDNS\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub2e4. \ub610\ud55c Fargate \ud3ec\ub4dc\uc640\uc758 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc5f0\uacb0\uc744 \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud30c\ub4dc\uac00 VPC\uc758 \ub2e4\ub978 \ud30c\ub4dc\ub098 \ub9ac\uc18c\uc2a4\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\uac8c \ub41c\ub2e4. \ub610\ud55c Fargate\uac00 Amazon ECR \ub610\ub294 DockerHub\uc640 \uac19\uc740 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub3c4\ub85d \ud558\ub294 \uaddc\uce59\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \uc77c\ubc18 \ucc38\uc870 \uc758 AWS IP \uc8fc\uc18c \ubc94\uc704\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec Fargate Pod\uc5d0 \uc801\uc6a9\ub41c \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pod FARGATE_POD -o jsonpath = '{.metadata.annotations.vpc\\.amazonaws\\.com/pod-eni}{\"\\n\"}' \uc704 \uba85\ub839\uc758 ENI ID\ub97c \uc801\uc5b4 \ub461\ub2c8\ub2e4. aws ec2 describe-network-interfaces --network-interface-ids ENI_ID --query 'NetworkInterfaces[*].Groups[*]' \uc0c8 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc801\uc6a9\ud558\ub824\uba74 \uae30\uc874 Fargate \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud558\uace0 \ub2e4\uc2dc \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c \uba85\ub839\uc740 example-app \ubc30\ud3ec\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4. \ud2b9\uc815 \ud3ec\ub4dc\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 \uc544\ub798 \uba85\ub839\uc5b4\uc5d0\uc11c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc774\ub984\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl rollout restart -n example-ns deployment example-pod","title":"Fargate\ub97c \uc774\uc6a9\ud558\ub294 \ud30c\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 \uc0ac\uc6a9"},{"location":"networking/subnets/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} VPC and Subnet Considerations \u00b6 Operating an EKS cluster requires knowledge of AWS VPC networking, in addition to Kubernetes networking. We recommend you understand the EKS control plane communication mechanisms before you start designing your VPC or deploying clusters into existing VPCs. Refer to Cluster VPC considerations and Amazon EKS security group considerations when architecting a VPC and subnets to be used with EKS. Overview \u00b6 EKS Cluster Architecture \u00b6 An EKS cluster consists of two VPCs: An AWS-managed VPC that hosts the Kubernetes control plane. This VPC does not appear in the customer account. A customer-managed VPC that hosts the Kubernetes nodes. This is where containers run, as well as other customer-managed AWS infrastructure such as load balancers used by the cluster. This VPC appears in the customer account. You need to create customer-managed VPC prior creating a cluster. The eksctl creates a VPC if you do not provide one. The nodes in the customer VPC need the ability to connect to the managed API server endpoint in the AWS VPC. This allows the nodes to register with the Kubernetes control plane and receive requests to run application Pods. The nodes connect to the EKS control plane through (a) an EKS public endpoint or (b) a Cross-Account elastic network interfaces (X-ENI) managed by EKS. When a cluster is created, you need to specify at least two VPC subnets. EKS places a X-ENI in each subnet specified during cluster create (also called cluster subnets). The Kubernetes API server uses these Cross-Account ENIs to communicate with nodes deployed on the customer-managed cluster VPC subnets. As the node starts, the EKS bootstrap script is executed and Kubernetes node configuration files are installed. As part of the boot process on each instance, the container runtime agents, kubelet, and Kubernetes node agents are launched. To register a node, Kubelet contacts the Kubernetes cluster endpoint. It establishes a connection with either the public endpoint outside of the VPC or the private endpoint within the VPC. Kubelet receives API instructions and provides status updates and heartbeats to the endpoint on a regular basis. EKS Control Plane Communication \u00b6 EKS has two ways to control access to the cluster endpoint . Endpoint access control lets you choose whether the endpoint can be reached from the public internet or only through your VPC. You can turn on the public endpoint (which is the default), the private endpoint, or both at once. The configuration of the cluster API endpoint determines the path that nodes take to communicate to the control plane. Note that these endpoint settings can be changed at any time through the EKS console or API. Public Endpoint \u00b6 This is the default behavior for new Amazon EKS clusters. When only the public endpoint for the cluster is enabled, Kubernetes API requests that originate from within your cluster\u2019s VPC (such as worker node to control plane communication) leave the VPC, but not Amazon\u2019s network. In order for nodes to connect to the control plane, they must have a public IP address and a route to an internet gateway or a route to a NAT gateway where they can use the public IP address of the NAT gateway. Public and Private Endpoint \u00b6 When both the public and private endpoints are enabled, Kubernetes API requests from within the VPC communicate to the control plane via the X-ENIs within your VPC. Your cluster API server is accessible from the internet. Private Endpoint \u00b6 There is no public access to your API server from the internet when only private endpoint is enabled. All traffic to your cluster API server must come from within your cluster\u2019s VPC or a connected network. The nodes communicate to API server via X-ENIs within your VPC. Note that cluster management tools must have access to the private endpoint. Learn more about how to connect to a private Amazon EKS cluster endpoint from outside the Amazon VPC. Note that the cluster's API server endpoint is resolved by public DNS servers to a private IP address from the VPC. In the past, the endpoint could only be resolved from within the VPC. Guidance on Designing Hyperscale VPCs \u00b6 An environment can be considered \u201cHyperscale\u201d once it supports thousands of application endpoints and tens or hundreds of gigabits of traffic per second. When operating at Hyperscale, additional planning is required for network connectivity, security, private IPv4 address scarcity and overlap. Hyperscale network design involves leveraging cell-based infrastructure units, and understanding the benefits and limitations of each of the various AWS networking services. Learn more about Designing Hyperscale Amazon VPC networks on the AWS Networking & Content Delivery Blog. VPC configurations \u00b6 Amazon VPC supports IPv4 and IPv6 addressing. Amazon EKS supports IPv4 by default. A VPC must have an IPv4 CIDR block associated with it. You can optionally associate multiple IPv4 Classless Inter-Domain Routing (CIDR) blocks and multiple IPv6 CIDR blocks to your VPC. When you create a VPC, you must specify an IPv4 CIDR block for the VPC from the private IPv4 address ranges as specified in RFC 1918 . The allowed block size is between a /16 prefix (65,536 IP addresses) and /28 prefix (16 IP addresses). When creating a new VPC, you can attach a single IPv6 CIDR block, and up to five when changing an existing VPC. The prefix length of the CIDR block is fixed at /64 for IPv6 VPCs, which has more than one trillion IP addresses . You can request an IPv6 CIDR block from the pool of IPv6 addresses maintained by Amazon. Amazon EKS clusters support both IPv4 and IPv6. By default, EKS clusters use IPv4 IP. Specifying IPv6 at cluster creation time will enable the use IPv6 clusters. IPv6 clusters require dual-stack VPCs and subnets. Amazon EKS recommends you use at least two subnets that are in different Availability Zones during cluster creation. The subnets you pass in during cluster creation are known as cluster subnets. When you create a cluster, Amazon EKS creates up to 4 cross account (x-account or x-ENIs) ENIs in the subnets that you specify. The x-ENIs are always deployed and are used for cluster administration traffic such as log delivery, exec, and proxy. Please refer to the EKS user guide for complete VPC and subnet requirement details. Kubernetes worker nodes can run in the cluster subnets, but it is not recommended. You can create new subnets dedicated to run nodes and any Kubernetes resources. Nodes can run in either a public or a private subnet. Whether a subnet is public or private refers to whether traffic within the subnet is routed through an internet gateway . Public subnets have a route table entry to the internet through the internet gateway, but private subnets don't. The traffic that originates somewhere else and reaches your nodes is called ingress . Traffic that originates from the nodes and leaves the network is called egress . Nodes with public or elastic IP addresses (EIPs) within a subnet configured with an internet gateway allow ingress from outside of the VPC. Private subnets usually include a NAT gateway , which only allows ingress traffic to the nodes from within the VPC while still allowing traffic from the nodes to leave the VPC ( egress ). In the IPv6 world, every address is internet routable. The IPv6 addresses associated with the nodes and pods are public. Private subnets are supported by implementing an egress-only internet gateways (EIGW) in a VPC, allowing outbound traffic while blocking all incoming traffic. Best practices for implementing IPv6 subnets can be found in the VPC user guide . You can configure VPC and Subnets in three different ways: \u00b6 Using only public subnets \u00b6 In the same public subnets, both nodes and ingress resources (such as load balancers) are created. Tag the public subnet with kubernetes.io/role/elb to construct load balancers that face the internet. In this configuration, the cluster endpoint can be configured to be public, private, or both (public and private). Using private and public subnets \u00b6 Nodes are created on private subnets, whereas Ingress resources are instantiated in public subnets. You can enable public, private, or both (public and private) access to the cluster endpoint. Depending on the configuration of the cluster endpoint, node traffic will enter via the NAT gateway or the ENI. Using only private subnets \u00b6 Both nodes and ingress are created in private subnets. Using the kubernetes.io/role/internal-elb subnet tag to construct internal load balancers. Accessing your cluster's endpoint will require a VPN connection. You must activate AWS PrivateLink for EC2 and all Amazon ECR and S3 repositories. Only the private endpoint of the cluster should be enabled. We suggest going through the EKS private cluster requirements before provisioning private clusters. Communication across VPCs \u00b6 There are many scenarios when you require multiple VPCs and separate EKS clusters deployed to these VPCs. Multiple VPCs are needed when you have to support security, billing, multiple regions, or internal charge-back requirements. We recommend following the design patterns mentioned in the VPC-to-VPC connectivity guide to integrate multiple Amazon VPCs into a larger virtual network. VPC connectivity is best achieved when using non-overlapping IP ranges for each VPC being connected. For operational efficiency, we strongly recommend deploying EKS clusters and nodes to IP ranges that do not overlap. We suggest Private NAT Gateway , or VPC CNI in custom networking mode in conjunction with transit gateway to integrate workloads on EKS to solve overlapping CIDR challenges while preserving routable RFC1918 IP addresses. Consider utilizing AWS PrivateLink , also known as an endpoint service, if you are the service provider and would want to share your Kubernetes service and ingress (either ALB or NLB) with your customer VPC in separate accounts. Sharing VPC across multiple accounts \u00b6 Many enterprises adopted shared Amazon VPCs as a means to streamline network administration, reduce costs and improve security across multiple AWS Accounts in an AWS Organization. They utilize AWS Resource Access Manager (RAM) to securely share supported AWS resources with individual AWS Accounts, organizational units (OUs) or entire AWS Organization. You can deploy Amazon EKS clusters, managed node groups and other supporting AWS resources (like LoadBalancers, security groups, end points, etc.,) in shared VPC Subnets from an another AWS Account using AWS RAM. Below figure depicts an example highlevel architecture. This allows central networking teams control over the networking constructs like VPCs, Subnets, etc., while allowing application or platform teams to deploy Amazon EKS clusters in their respective AWS Accounts. A complete walkthrough of this scenario is available at this github repository . Considerations when using Shared Subnets \u00b6 Amazon EKS clusters and worker nodes can be created within shared subnets that are all part of the same VPC. Amazon EKS does not support the creation of clusters across multiple VPCs. Amazon EKS uses AWS VPC Security Groups (SGs) to control the traffic between the Kubernetes control plane and the cluster's worker nodes. Security groups are also used to control the traffic between worker nodes, and other VPC resources, and external IP addresses. You must create these security groups in the application/participant account. Ensure that the security groups you intend to use for your pods are also located in the participant account. You can configure the inbound and outbound rules within your security groups to permit the necessary traffic to and from security groups located in the Central VPC account. Create IAM roles and associated policies within the participant account where your Amazon EKS cluster resides. These IAM roles and policies are essential for granting the necessary permissions to Kubernetes clusters managed by Amazon EKS, as well as to the nodes and pods running on Fargate. The permissions enable Amazon EKS to make calls to other AWS services on your behalf. You can follow following approaches to allow cross Account access to AWS resources like Amazon S3 buckets, Dynamodb tables, etc., from k8s pods: Resource based policy approach : If the AWS service supports resource policies, you can add appropriate resource based policy to allow cross account access to IAM Roles assigned to the kubernetes pods. In this scenario, OIDC provider, IAM Roles, and permission policies exist in the application account. To find AWS Services that support Resource based policies, refer AWS services that work with IAM and look for the services that have Yes in the Resource Based column. OIDC Provider approach : IAM resources like OIDC Provider, IAM Roles, Permission, and Trust policies will be created in other participant AWS Account where the resources exists. These roles will be assigned to Kubernetes pods in application account, so that they can access cross account resources. Refer Cross account IAM roles for Kubernetes service accounts blog for a complete walkthrough of this approach. You can deploy the Amazon Elastic Loadbalancer (ELB) resources (ALB or NLB) to route traffic to k8s pods either in application or central networking accounts. Refer to Expose Amazon EKS Pods Through Cross-Account Load Balancer walkthrough for detailed instructions on deploying the ELB resources in central networking account. This option offers enhanced flexibility, as it grants the Central Networking account full control over the security configuration of the Load Balancer resources. When using custom networking feature of Amazon VPC CNI, you need to use the Availability Zone (AZ) ID mappings listed in the central networking account to create each ENIConfig . This is due to random mapping of physical AZs to the AZ names in each AWS account. Security Groups \u00b6 A security group controls the traffic that is allowed to reach and leave the resources that it is associated with. Amazon EKS uses security groups to manage the communication between the control plane and nodes . When you create a cluster, Amazon EKS creates a security group that's named eks-cluster-sg-my-cluster-uniqueID . EKS associates these security groups to the managed ENIs and the nodes. The default rules allow all traffic to flow freely between your cluster and nodes, and allows all outbound traffic to any destination. When you create a cluster, you can specify your own security groups. Please see recommendation for security groups when you specify own security groups. Recommendations \u00b6 Consider Multi-AZ Deployment \u00b6 AWS Regions provide multiple physically separated and isolated Availability Zones (AZ), which are connected with low-latency, high-throughput, and highly redundant networking. With Availability Zones, you can design and operate applications that automatically fail over between Availability Zones without interruption. Amazon EKS strongly recommends deploying EKS clusters to multiple availability zones. Please consider specifying subnets in at least two availability zones when you create the cluster. Kubelet running on nodes automatically adds labels to the node object such as topology.kubernetes.io/region=us-west-2 , and topology.kubernetes.io/zone=us-west-2d . We recommend to use node labels in conjunction with Pod topology spread constraints to control how Pods are spread across zones. These hints enable Kubernetes scheduler to place Pods for better expected availability, reducing the risk that a correlated failure affects your whole workload. Please refer Assigning nodes to Pods to see examples for node selector and AZ spread constraints. You can define the subnets or availability zones when you create nodes. The nodes are placed in cluster subnets if no subnets are configured. EKS support for managed node groups automatically spreads the nodes across multiple availability zones on available capacity. Karpenter will honor the AZ spread placement by scaling nodes to specified AZs if workloads define topology spread limits. AWS Elastic Load Balancers are managed by the AWS Load Balancer Controller for a Kubernetes cluster. It provisions an Application Load Balancer (ALB) for Kubernetes ingress resources and a Network Load Balancer (NLB) for Kubernetes services of type Loadbalancer. The Elastic Load Balancer controller uses tags to discover the subnets. ELB controller requires a minimum of two availability zones (AZs) to provision ingress resource successfully. Consider setting subnets in at least two AZs to take advantage of geographic redundancy's safety and reliability. Deploy Nodes to Private Subnets \u00b6 A VPC including both private and public subnets is the ideal method for deploying Kubernetes workloads on EKS. Consider setting a minimum of two public subnets and two private subnets in two distinct availability zones. The related route table of a public subnet contains a route to an internet gateway . Pods are able to interact with the Internet via a NAT gateway. Private subnets are supported by egress-only internet gateways in the IPv6 environment (EIGW). Instantiating nodes in private subnets offers maximal control over traffic to the nodes and is effective for the vast majority of Kubernetes applications. Ingress resources (like as load balancers) are instantiated in public subnets and route traffic to Pods operating on private subnets. Consider private only mode if you demand strict security and network isolation. In this configuration, three private subnets are deployed in distinct Availability Zones within the AWS Region's VPC. The resources deployed to the subnets cannot access the internet, nor can the internet access the resources in the subnets. In order for your Kubernetes application to access other AWS services, you must configure PrivateLink interfaces and/or gateway endpoints. You may setup internal load balancers to redirect traffic to Pods using AWS Load Balancer Controller. The private subnets must be tagged ( kubernetes.io/role/internal-elb: 1 ) for the controller to provision load balancers. For nodes to register with the cluster, the cluster endpoint must be set to private mode. Please visit private cluster guide for complete requirements and considerations. Consider Public and Private Mode for Cluster Endpoint \u00b6 Amazon EKS offers public-only, public-and-private, and private-only cluster endpoint modes. The default mode is public-only, however we recommend configuring cluster endpoint in public and private mode. This option allows Kubernetes API calls within your cluster's VPC (such as node-to-control-plane communication) to utilize the private VPC endpoint and traffic to remain within your cluster's VPC. Your cluster API server, on the other hand, can be reached from the internet. However, we strongly recommend limiting the CIDR blocks that can use the public endpoint. Learn how to configure public and private endpoint access, including limiting CIDR blocks. We suggest a private-only endpoint when you need security and network isolation. We recommend using either of the options listed in the EKS user guide to connect to an API server privately. Check available IPs \u00b6 When you create a cluster, Amazon EKS creates up to 4 elastic network interfaces in the cluster subnets. When you upgrade the cluster, Amazon EKS creates new X-ENIs and deletes the old ones when the upgrade is successful. Amazon EKS recommends a netmask of /28 (16 IP addresses) for cluster subnets to accommodate upgrades of the cluster. Before building VPC and subnets, it is advised to work backwards from the required workload scale. When clusters are built using \u201cekstcl\u201d, /19 subnets are created by default. A netmask of /19 is suitable for the majority of workload types. To learn about Pod IP allocations, refer Amazon VPC CNI . Consider using subnet-calc , a tool developed by EKS to help with subnet sizing. For IPv6 VPCs, a subnet's CIDR block has a fixed prefix length of /64 . We recommend to deploy nodes and workloads to cluster subnets to maximize IP usage. Configure Security Groups Carefully \u00b6 Amazon EKS supports using custom security groups. Any custom security groups must allow communication between nodes and the Kubernetes control plane. Please check port requirements and configure rules manually when your organization doesn't allow for open communication. EKS applies the custom security groups that you provide during cluster creation to the managed interfaces (X-ENIs). However, it does not immediately associate them with nodes. While creating node groups, it is strongly recommended to associate custom security groups manually. Please consider enabling securityGroupSelector to enable Karpenter node template discovery of custom security groups during autoscaling of nodes. We strongly recommend creating a security group to allow all inter-node communication traffic. During the bootstrap process, nodes require outbound Internet connectivity to access the cluster endpoint. Evaluate outward access requirements, such as on-premise connection and container registry access, and set rules appropriately. Before putting changes into production, we strongly suggest that you check connections carefully in your development environment. Deploy NAT Gateways in each Availability Zone \u00b6 If you deploy nodes in private subnets (IPv4 and IPv6), consider creating a NAT Gateway in each Availability Zone (AZ) to ensure zone-independent architecture and reduce cross AZ expenditures. Each NAT gateway in an AZ is implemented with redundancy. Use Cloud9 to access Private Clusters \u00b6 AWS Cloud9 is a web-based IDE than can run securely in Private Subnets without ingress access, using AWS Systems Manager. Egress can also be disabled on the Cloud9 instance. Learn more about using Cloud9 to access private clusters and subnets.","title":"VPC and Subnet Considerations ({'name': 'English', 'build': True})"},{"location":"networking/subnets/#vpc-and-subnet-considerations","text":"Operating an EKS cluster requires knowledge of AWS VPC networking, in addition to Kubernetes networking. We recommend you understand the EKS control plane communication mechanisms before you start designing your VPC or deploying clusters into existing VPCs. Refer to Cluster VPC considerations and Amazon EKS security group considerations when architecting a VPC and subnets to be used with EKS.","title":"VPC and Subnet Considerations"},{"location":"networking/subnets/#overview","text":"","title":"Overview"},{"location":"networking/subnets/#eks-cluster-architecture","text":"An EKS cluster consists of two VPCs: An AWS-managed VPC that hosts the Kubernetes control plane. This VPC does not appear in the customer account. A customer-managed VPC that hosts the Kubernetes nodes. This is where containers run, as well as other customer-managed AWS infrastructure such as load balancers used by the cluster. This VPC appears in the customer account. You need to create customer-managed VPC prior creating a cluster. The eksctl creates a VPC if you do not provide one. The nodes in the customer VPC need the ability to connect to the managed API server endpoint in the AWS VPC. This allows the nodes to register with the Kubernetes control plane and receive requests to run application Pods. The nodes connect to the EKS control plane through (a) an EKS public endpoint or (b) a Cross-Account elastic network interfaces (X-ENI) managed by EKS. When a cluster is created, you need to specify at least two VPC subnets. EKS places a X-ENI in each subnet specified during cluster create (also called cluster subnets). The Kubernetes API server uses these Cross-Account ENIs to communicate with nodes deployed on the customer-managed cluster VPC subnets. As the node starts, the EKS bootstrap script is executed and Kubernetes node configuration files are installed. As part of the boot process on each instance, the container runtime agents, kubelet, and Kubernetes node agents are launched. To register a node, Kubelet contacts the Kubernetes cluster endpoint. It establishes a connection with either the public endpoint outside of the VPC or the private endpoint within the VPC. Kubelet receives API instructions and provides status updates and heartbeats to the endpoint on a regular basis.","title":"EKS Cluster Architecture"},{"location":"networking/subnets/#eks-control-plane-communication","text":"EKS has two ways to control access to the cluster endpoint . Endpoint access control lets you choose whether the endpoint can be reached from the public internet or only through your VPC. You can turn on the public endpoint (which is the default), the private endpoint, or both at once. The configuration of the cluster API endpoint determines the path that nodes take to communicate to the control plane. Note that these endpoint settings can be changed at any time through the EKS console or API.","title":"EKS Control Plane Communication"},{"location":"networking/subnets/#public-endpoint","text":"This is the default behavior for new Amazon EKS clusters. When only the public endpoint for the cluster is enabled, Kubernetes API requests that originate from within your cluster\u2019s VPC (such as worker node to control plane communication) leave the VPC, but not Amazon\u2019s network. In order for nodes to connect to the control plane, they must have a public IP address and a route to an internet gateway or a route to a NAT gateway where they can use the public IP address of the NAT gateway.","title":"Public Endpoint"},{"location":"networking/subnets/#public-and-private-endpoint","text":"When both the public and private endpoints are enabled, Kubernetes API requests from within the VPC communicate to the control plane via the X-ENIs within your VPC. Your cluster API server is accessible from the internet.","title":"Public and Private Endpoint"},{"location":"networking/subnets/#private-endpoint","text":"There is no public access to your API server from the internet when only private endpoint is enabled. All traffic to your cluster API server must come from within your cluster\u2019s VPC or a connected network. The nodes communicate to API server via X-ENIs within your VPC. Note that cluster management tools must have access to the private endpoint. Learn more about how to connect to a private Amazon EKS cluster endpoint from outside the Amazon VPC. Note that the cluster's API server endpoint is resolved by public DNS servers to a private IP address from the VPC. In the past, the endpoint could only be resolved from within the VPC.","title":"Private Endpoint"},{"location":"networking/subnets/#guidance-on-designing-hyperscale-vpcs","text":"An environment can be considered \u201cHyperscale\u201d once it supports thousands of application endpoints and tens or hundreds of gigabits of traffic per second. When operating at Hyperscale, additional planning is required for network connectivity, security, private IPv4 address scarcity and overlap. Hyperscale network design involves leveraging cell-based infrastructure units, and understanding the benefits and limitations of each of the various AWS networking services. Learn more about Designing Hyperscale Amazon VPC networks on the AWS Networking & Content Delivery Blog.","title":"Guidance on Designing Hyperscale VPCs"},{"location":"networking/subnets/#vpc-configurations","text":"Amazon VPC supports IPv4 and IPv6 addressing. Amazon EKS supports IPv4 by default. A VPC must have an IPv4 CIDR block associated with it. You can optionally associate multiple IPv4 Classless Inter-Domain Routing (CIDR) blocks and multiple IPv6 CIDR blocks to your VPC. When you create a VPC, you must specify an IPv4 CIDR block for the VPC from the private IPv4 address ranges as specified in RFC 1918 . The allowed block size is between a /16 prefix (65,536 IP addresses) and /28 prefix (16 IP addresses). When creating a new VPC, you can attach a single IPv6 CIDR block, and up to five when changing an existing VPC. The prefix length of the CIDR block is fixed at /64 for IPv6 VPCs, which has more than one trillion IP addresses . You can request an IPv6 CIDR block from the pool of IPv6 addresses maintained by Amazon. Amazon EKS clusters support both IPv4 and IPv6. By default, EKS clusters use IPv4 IP. Specifying IPv6 at cluster creation time will enable the use IPv6 clusters. IPv6 clusters require dual-stack VPCs and subnets. Amazon EKS recommends you use at least two subnets that are in different Availability Zones during cluster creation. The subnets you pass in during cluster creation are known as cluster subnets. When you create a cluster, Amazon EKS creates up to 4 cross account (x-account or x-ENIs) ENIs in the subnets that you specify. The x-ENIs are always deployed and are used for cluster administration traffic such as log delivery, exec, and proxy. Please refer to the EKS user guide for complete VPC and subnet requirement details. Kubernetes worker nodes can run in the cluster subnets, but it is not recommended. You can create new subnets dedicated to run nodes and any Kubernetes resources. Nodes can run in either a public or a private subnet. Whether a subnet is public or private refers to whether traffic within the subnet is routed through an internet gateway . Public subnets have a route table entry to the internet through the internet gateway, but private subnets don't. The traffic that originates somewhere else and reaches your nodes is called ingress . Traffic that originates from the nodes and leaves the network is called egress . Nodes with public or elastic IP addresses (EIPs) within a subnet configured with an internet gateway allow ingress from outside of the VPC. Private subnets usually include a NAT gateway , which only allows ingress traffic to the nodes from within the VPC while still allowing traffic from the nodes to leave the VPC ( egress ). In the IPv6 world, every address is internet routable. The IPv6 addresses associated with the nodes and pods are public. Private subnets are supported by implementing an egress-only internet gateways (EIGW) in a VPC, allowing outbound traffic while blocking all incoming traffic. Best practices for implementing IPv6 subnets can be found in the VPC user guide .","title":"VPC configurations"},{"location":"networking/subnets/#you-can-configure-vpc-and-subnets-in-three-different-ways","text":"","title":"You can configure VPC and Subnets in three different ways:"},{"location":"networking/subnets/#using-only-public-subnets","text":"In the same public subnets, both nodes and ingress resources (such as load balancers) are created. Tag the public subnet with kubernetes.io/role/elb to construct load balancers that face the internet. In this configuration, the cluster endpoint can be configured to be public, private, or both (public and private).","title":"Using only public subnets"},{"location":"networking/subnets/#using-private-and-public-subnets","text":"Nodes are created on private subnets, whereas Ingress resources are instantiated in public subnets. You can enable public, private, or both (public and private) access to the cluster endpoint. Depending on the configuration of the cluster endpoint, node traffic will enter via the NAT gateway or the ENI.","title":"Using private and public subnets"},{"location":"networking/subnets/#using-only-private-subnets","text":"Both nodes and ingress are created in private subnets. Using the kubernetes.io/role/internal-elb subnet tag to construct internal load balancers. Accessing your cluster's endpoint will require a VPN connection. You must activate AWS PrivateLink for EC2 and all Amazon ECR and S3 repositories. Only the private endpoint of the cluster should be enabled. We suggest going through the EKS private cluster requirements before provisioning private clusters.","title":"Using only private subnets"},{"location":"networking/subnets/#communication-across-vpcs","text":"There are many scenarios when you require multiple VPCs and separate EKS clusters deployed to these VPCs. Multiple VPCs are needed when you have to support security, billing, multiple regions, or internal charge-back requirements. We recommend following the design patterns mentioned in the VPC-to-VPC connectivity guide to integrate multiple Amazon VPCs into a larger virtual network. VPC connectivity is best achieved when using non-overlapping IP ranges for each VPC being connected. For operational efficiency, we strongly recommend deploying EKS clusters and nodes to IP ranges that do not overlap. We suggest Private NAT Gateway , or VPC CNI in custom networking mode in conjunction with transit gateway to integrate workloads on EKS to solve overlapping CIDR challenges while preserving routable RFC1918 IP addresses. Consider utilizing AWS PrivateLink , also known as an endpoint service, if you are the service provider and would want to share your Kubernetes service and ingress (either ALB or NLB) with your customer VPC in separate accounts.","title":"Communication across VPCs"},{"location":"networking/subnets/#sharing-vpc-across-multiple-accounts","text":"Many enterprises adopted shared Amazon VPCs as a means to streamline network administration, reduce costs and improve security across multiple AWS Accounts in an AWS Organization. They utilize AWS Resource Access Manager (RAM) to securely share supported AWS resources with individual AWS Accounts, organizational units (OUs) or entire AWS Organization. You can deploy Amazon EKS clusters, managed node groups and other supporting AWS resources (like LoadBalancers, security groups, end points, etc.,) in shared VPC Subnets from an another AWS Account using AWS RAM. Below figure depicts an example highlevel architecture. This allows central networking teams control over the networking constructs like VPCs, Subnets, etc., while allowing application or platform teams to deploy Amazon EKS clusters in their respective AWS Accounts. A complete walkthrough of this scenario is available at this github repository .","title":"Sharing VPC across multiple accounts"},{"location":"networking/subnets/#considerations-when-using-shared-subnets","text":"Amazon EKS clusters and worker nodes can be created within shared subnets that are all part of the same VPC. Amazon EKS does not support the creation of clusters across multiple VPCs. Amazon EKS uses AWS VPC Security Groups (SGs) to control the traffic between the Kubernetes control plane and the cluster's worker nodes. Security groups are also used to control the traffic between worker nodes, and other VPC resources, and external IP addresses. You must create these security groups in the application/participant account. Ensure that the security groups you intend to use for your pods are also located in the participant account. You can configure the inbound and outbound rules within your security groups to permit the necessary traffic to and from security groups located in the Central VPC account. Create IAM roles and associated policies within the participant account where your Amazon EKS cluster resides. These IAM roles and policies are essential for granting the necessary permissions to Kubernetes clusters managed by Amazon EKS, as well as to the nodes and pods running on Fargate. The permissions enable Amazon EKS to make calls to other AWS services on your behalf. You can follow following approaches to allow cross Account access to AWS resources like Amazon S3 buckets, Dynamodb tables, etc., from k8s pods: Resource based policy approach : If the AWS service supports resource policies, you can add appropriate resource based policy to allow cross account access to IAM Roles assigned to the kubernetes pods. In this scenario, OIDC provider, IAM Roles, and permission policies exist in the application account. To find AWS Services that support Resource based policies, refer AWS services that work with IAM and look for the services that have Yes in the Resource Based column. OIDC Provider approach : IAM resources like OIDC Provider, IAM Roles, Permission, and Trust policies will be created in other participant AWS Account where the resources exists. These roles will be assigned to Kubernetes pods in application account, so that they can access cross account resources. Refer Cross account IAM roles for Kubernetes service accounts blog for a complete walkthrough of this approach. You can deploy the Amazon Elastic Loadbalancer (ELB) resources (ALB or NLB) to route traffic to k8s pods either in application or central networking accounts. Refer to Expose Amazon EKS Pods Through Cross-Account Load Balancer walkthrough for detailed instructions on deploying the ELB resources in central networking account. This option offers enhanced flexibility, as it grants the Central Networking account full control over the security configuration of the Load Balancer resources. When using custom networking feature of Amazon VPC CNI, you need to use the Availability Zone (AZ) ID mappings listed in the central networking account to create each ENIConfig . This is due to random mapping of physical AZs to the AZ names in each AWS account.","title":"Considerations when using Shared Subnets"},{"location":"networking/subnets/#security-groups","text":"A security group controls the traffic that is allowed to reach and leave the resources that it is associated with. Amazon EKS uses security groups to manage the communication between the control plane and nodes . When you create a cluster, Amazon EKS creates a security group that's named eks-cluster-sg-my-cluster-uniqueID . EKS associates these security groups to the managed ENIs and the nodes. The default rules allow all traffic to flow freely between your cluster and nodes, and allows all outbound traffic to any destination. When you create a cluster, you can specify your own security groups. Please see recommendation for security groups when you specify own security groups.","title":"Security Groups"},{"location":"networking/subnets/#recommendations","text":"","title":"Recommendations"},{"location":"networking/subnets/#consider-multi-az-deployment","text":"AWS Regions provide multiple physically separated and isolated Availability Zones (AZ), which are connected with low-latency, high-throughput, and highly redundant networking. With Availability Zones, you can design and operate applications that automatically fail over between Availability Zones without interruption. Amazon EKS strongly recommends deploying EKS clusters to multiple availability zones. Please consider specifying subnets in at least two availability zones when you create the cluster. Kubelet running on nodes automatically adds labels to the node object such as topology.kubernetes.io/region=us-west-2 , and topology.kubernetes.io/zone=us-west-2d . We recommend to use node labels in conjunction with Pod topology spread constraints to control how Pods are spread across zones. These hints enable Kubernetes scheduler to place Pods for better expected availability, reducing the risk that a correlated failure affects your whole workload. Please refer Assigning nodes to Pods to see examples for node selector and AZ spread constraints. You can define the subnets or availability zones when you create nodes. The nodes are placed in cluster subnets if no subnets are configured. EKS support for managed node groups automatically spreads the nodes across multiple availability zones on available capacity. Karpenter will honor the AZ spread placement by scaling nodes to specified AZs if workloads define topology spread limits. AWS Elastic Load Balancers are managed by the AWS Load Balancer Controller for a Kubernetes cluster. It provisions an Application Load Balancer (ALB) for Kubernetes ingress resources and a Network Load Balancer (NLB) for Kubernetes services of type Loadbalancer. The Elastic Load Balancer controller uses tags to discover the subnets. ELB controller requires a minimum of two availability zones (AZs) to provision ingress resource successfully. Consider setting subnets in at least two AZs to take advantage of geographic redundancy's safety and reliability.","title":"Consider Multi-AZ  Deployment"},{"location":"networking/subnets/#deploy-nodes-to-private-subnets","text":"A VPC including both private and public subnets is the ideal method for deploying Kubernetes workloads on EKS. Consider setting a minimum of two public subnets and two private subnets in two distinct availability zones. The related route table of a public subnet contains a route to an internet gateway . Pods are able to interact with the Internet via a NAT gateway. Private subnets are supported by egress-only internet gateways in the IPv6 environment (EIGW). Instantiating nodes in private subnets offers maximal control over traffic to the nodes and is effective for the vast majority of Kubernetes applications. Ingress resources (like as load balancers) are instantiated in public subnets and route traffic to Pods operating on private subnets. Consider private only mode if you demand strict security and network isolation. In this configuration, three private subnets are deployed in distinct Availability Zones within the AWS Region's VPC. The resources deployed to the subnets cannot access the internet, nor can the internet access the resources in the subnets. In order for your Kubernetes application to access other AWS services, you must configure PrivateLink interfaces and/or gateway endpoints. You may setup internal load balancers to redirect traffic to Pods using AWS Load Balancer Controller. The private subnets must be tagged ( kubernetes.io/role/internal-elb: 1 ) for the controller to provision load balancers. For nodes to register with the cluster, the cluster endpoint must be set to private mode. Please visit private cluster guide for complete requirements and considerations.","title":"Deploy Nodes to Private Subnets"},{"location":"networking/subnets/#consider-public-and-private-mode-for-cluster-endpoint","text":"Amazon EKS offers public-only, public-and-private, and private-only cluster endpoint modes. The default mode is public-only, however we recommend configuring cluster endpoint in public and private mode. This option allows Kubernetes API calls within your cluster's VPC (such as node-to-control-plane communication) to utilize the private VPC endpoint and traffic to remain within your cluster's VPC. Your cluster API server, on the other hand, can be reached from the internet. However, we strongly recommend limiting the CIDR blocks that can use the public endpoint. Learn how to configure public and private endpoint access, including limiting CIDR blocks. We suggest a private-only endpoint when you need security and network isolation. We recommend using either of the options listed in the EKS user guide to connect to an API server privately.","title":"Consider Public and Private Mode for Cluster Endpoint"},{"location":"networking/subnets/#check-available-ips","text":"When you create a cluster, Amazon EKS creates up to 4 elastic network interfaces in the cluster subnets. When you upgrade the cluster, Amazon EKS creates new X-ENIs and deletes the old ones when the upgrade is successful. Amazon EKS recommends a netmask of /28 (16 IP addresses) for cluster subnets to accommodate upgrades of the cluster. Before building VPC and subnets, it is advised to work backwards from the required workload scale. When clusters are built using \u201cekstcl\u201d, /19 subnets are created by default. A netmask of /19 is suitable for the majority of workload types. To learn about Pod IP allocations, refer Amazon VPC CNI . Consider using subnet-calc , a tool developed by EKS to help with subnet sizing. For IPv6 VPCs, a subnet's CIDR block has a fixed prefix length of /64 . We recommend to deploy nodes and workloads to cluster subnets to maximize IP usage.","title":"Check available IPs"},{"location":"networking/subnets/#configure-security-groups-carefully","text":"Amazon EKS supports using custom security groups. Any custom security groups must allow communication between nodes and the Kubernetes control plane. Please check port requirements and configure rules manually when your organization doesn't allow for open communication. EKS applies the custom security groups that you provide during cluster creation to the managed interfaces (X-ENIs). However, it does not immediately associate them with nodes. While creating node groups, it is strongly recommended to associate custom security groups manually. Please consider enabling securityGroupSelector to enable Karpenter node template discovery of custom security groups during autoscaling of nodes. We strongly recommend creating a security group to allow all inter-node communication traffic. During the bootstrap process, nodes require outbound Internet connectivity to access the cluster endpoint. Evaluate outward access requirements, such as on-premise connection and container registry access, and set rules appropriately. Before putting changes into production, we strongly suggest that you check connections carefully in your development environment.","title":"Configure Security Groups Carefully"},{"location":"networking/subnets/#deploy-nat-gateways-in-each-availability-zone","text":"If you deploy nodes in private subnets (IPv4 and IPv6), consider creating a NAT Gateway in each Availability Zone (AZ) to ensure zone-independent architecture and reduce cross AZ expenditures. Each NAT gateway in an AZ is implemented with redundancy.","title":"Deploy NAT Gateways in each Availability Zone"},{"location":"networking/subnets/#use-cloud9-to-access-private-clusters","text":"AWS Cloud9 is a web-based IDE than can run securely in Private Subnets without ingress access, using AWS Systems Manager. Egress can also be disabled on the Cloud9 instance. Learn more about using Cloud9 to access private clusters and subnets.","title":"Use Cloud9 to access Private Clusters"},{"location":"networking/subnets/index.kr/","text":"{'name': 'English', 'build': True} VPC \ubc0f \uc11c\ube0c\ub137 \uace0\ub824 \uc0ac\ud56d \u00b6 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc6b4\uc601\ud558\ub824\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9 \uc678\uc5d0\ub3c4 AWS VPC \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud55c \uc9c0\uc2dd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. VPC\ub97c \uc124\uacc4\ud558\uac70\ub098 \uae30\uc874 VPC\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0 \uba54\ucee4\ub2c8\uc998\uc744 \uc774\ud574\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. EKS\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 VPC\uc640 \uc11c\ube0c\ub137\uc744 \uc124\uacc4\ud560 \ub54c\ub294 \ud074\ub7ec\uc2a4\ud130 VPC \uace0\ub824 \uc0ac\ud56d \ubc0f Amazon EKS \ubcf4\uc548 \uadf8\ub8f9 \uace0\ub824 \uc0ac\ud56d \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uac1c\uc694 \u00b6 EKS \ud074\ub7ec\uc2a4\ud130 \uc544\ud0a4\ud14d\ucc98 \u00b6 EKS \ud074\ub7ec\uc2a4\ud130\ub294 \ub450 \uac1c\uc758 VPC\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ud638\uc2a4\ud305\ud558\ub294 AWS \uad00\ub9ac\ud615 VPC. \uc774 VPC\ub294 \uace0\uac1d \uacc4\uc815\uc5d0 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc\ub97c \ud638\uc2a4\ud305\ud558\ub294 \uace0\uac1d \uad00\ub9ac\ud615 VPC. \uc5ec\uae30\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub294 \ubb3c\ub860 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uac19\uc740 \uae30\ud0c0 \uace0\uac1d \uad00\ub9ac\ud615 AWS \uc778\ud504\ub77c\uac00 \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 VPC\ub294 \uace0\uac1d \uacc4\uc815\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc804, \uace0\uac1d \uad00\ub9ac\ud615 VPC\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 VPC\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 eksctl\uc774 VPC\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uace0\uac1d VPC\uc758 \ub178\ub4dc\ub294 AWS VPC\uc758 \uad00\ub9ac\ud615 API \uc11c\ubc84 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub178\ub4dc\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ub4f1\ub85d\ub418\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub77c\ub294 \uc694\uccad\uc744 \uc218\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub294 (a) EKS \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 (b) EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \uad50\ucc28 \uacc4\uc815 Elastic Network Interface (X-ENI)\ub97c \ud1b5\ud574 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c\ub294 \ucd5c\uc18c \ub450 \uac1c\uc758 VPC \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc2dc \uc9c0\uc815\ub41c \uac01 \uc11c\ube0c\ub137(\ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc774\ub77c\uace0\ub3c4 \ud568)\uc5d0 X-ENI\ub97c \ubc30\uce58\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub294 \uc774\ub7ec\ud55c \uad50\ucc28 \uacc4\uc815 ENI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d \uad00\ub9ac\ud615 \ud074\ub7ec\uc2a4\ud130 VPC \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub178\ub4dc\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \uc2dc\uc791\ub418\uba74 EKS \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \uc2e4\ud589\ub418\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uad6c\uc131 \ud30c\uc77c\uc774 \uc124\uce58\ub429\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4\uc758 \ubd80\ud305 \ud504\ub85c\uc138\uc2a4\uc758 \uc77c\ubd80\ub85c\uc368 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uc5d0\uc774\uc804\ud2b8, kubelet \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub429\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574 kubelet\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc811\uc18d\ud569\ub2c8\ub2e4. VPC \uc678\ubd80\uc758 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 VPC \ub0b4\uc758 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \uc5f0\uacb0\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. Kubelet\uc740 API \uba85\ub839\uc744 \uc218\uc2e0\ud558\uace0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8 \ubc0f \ud558\ud2b8\ube44\ud2b8\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0 \u00b6 EKS\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uc5b4\ud558\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc81c\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ud37c\ube14\ub9ad \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\ub294\uc9c0 \uc544\ub2c8\uba74 VPC\ub97c \ud1b5\ud574\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8(\uae30\ubcf8\uac12), \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 \ub458 \ub2e4\ub97c \ud55c \ubc88\uc5d0 \ud65c\uc131\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uad6c\uc131\uc740 \ub178\ub4dc\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud1b5\uc2e0\ud558\uae30 \uc704\ud55c \uacbd\ub85c\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc774\ub7ec\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uc815\uc740 EKS \ucf58\uc194 \ub610\ub294 API\ub97c \ud1b5\ud574 \uc5b8\uc81c\ub4e0\uc9c0 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \u00b6 \ud574\ub2f9 \uad6c\uc131\uc740 \uc2e0\uaddc Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\ubcf8 \ub3d9\uc791\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub0b4\uc5d0\uc11c \uc2dc\uc791\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc694\uccad(\uc608: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0\uc744 \uc704\ud55c \uc6cc\ucee4 \ub178\ub4dc)\uc740 VPC \uc678\ubd80\ub85c \uac00\uc9c0\ub9cc Amazon \ub124\ud2b8\uc6cc\ud06c \uc678\ubd80\ub85c\ub294 \uac00\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc5f0\uacb0\ub418\ub824\uba74 \ud37c\ube14\ub9ad IP \uc8fc\uc18c \ubc0f \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c \ub610\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc758 \ud37c\ube14\ub9ad IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \u00b6 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub450 \ud65c\uc131\ud654\ub418\uba74 VPC \ub0b4\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc694\uccad\uc774 VPC \ub0b4\uc758 X-ENIs\ub97c \ud1b5\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub294 \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \u00b6 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \uc778\ud130\ub137\uc5d0\uc11c API \uc11c\ubc84\uc5d0 \uacf5\uac1c\uc801\uc73c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub85c \ud5a5\ud558\ub294 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub610\ub294 \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c \uc548\uc5d0\uc11c \ub4e4\uc5b4\uc640\uc57c \ud569\ub2c8\ub2e4. \ub178\ub4dc\ub294 VPC \ub0b4\uc758 X-ENIs\ub97c \ud1b5\ud574 API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ub2e8, \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ub3c4\uad6c\ub294 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. Amazon VPC \uc678\ubd80\uc5d0\uc11c \ud504\ub77c\uc774\ube57 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95 \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubd05\ub2c8\ub2e4. \ucc38\uace0\ub85c \ud074\ub7ec\uc2a4\ud130\uc758 API \uc11c\ubc84 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \ud37c\ube14\ub9ad DNS \uc11c\ubc84\uc5d0\uc11c VPC\uc758 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub85c \ub9ac\uc878\ube0c\ub429\ub2c8\ub2e4. \uacfc\uac70\uc5d0\ub294 VPC \ub0b4\uc5d0\uc11c\ub9cc \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4. \ud558\uc774\ud37c\uc2a4\ucf00\uc77c VPC \uc124\uacc4 \uc9c0\uce68 \u00b6 \uc218\ucc9c \uac1c\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \ucd08\ub2f9 \uc218\uc2ed \ub610\ub294 \uc218\ubc31 \uae30\uac00\ube44\ud2b8\uc758 \ud2b8\ub798\ud53d\uc744 \uc9c0\uc6d0\ud558\ub294 \ud658\uacbd\uc740 \u201c\ud558\uc774\ud37c\uc2a4\ucf00\uc77c\u201d\uc774\ub77c\uace0 \uac04\uc8fc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc774\ud37c\uc2a4\ucf00\uc77c \uc6b4\uc601\uc758 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0, \ubcf4\uc548, \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c \ubd80\uc871 \ubc0f \uc911\ubcf5\uc5d0 \ub300\ud55c \ucd94\uac00 \uc124\uacc4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\uc774\ud37c\uc2a4\ucf00\uc77c \ub124\ud2b8\uc6cc\ud06c \uc124\uacc4\ub294 \uc140 \uae30\ubc18 \uc778\ud504\ub77c \uc720\ub2db\uc744 \ud65c\uc6a9\ud558\uace0 \ub2e4\uc591\ud55c AWS \ub124\ud2b8\uc6cc\ud0b9 \uc11c\ube44\uc2a4 \uac01\uac01\uc758 \uc774\uc810\uacfc \ud55c\uacc4\ub97c \uc774\ud574\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. AWS \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \ucf58\ud150\uce20 \uc804\uc1a1 \ube14\ub85c\uadf8\uc5d0\uc11c \ud558\uc774\ud37c\uc2a4\ucf00\uc77c Amazon VPC \ub124\ud2b8\uc6cc\ud06c \uc124\uacc4 \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. VPC \uad6c\uc131 \u00b6 Amazon VPC\ub294 IPv4 \ubc0f IPv6 \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uae30\ubcf8\uc801\uc73c\ub85c IPv4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC\uc5d0\ub294 IPv4 CIDR \ube14\ub85d\uc774 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \uc5ec\ub7ec IPv4 Classless Inter-Domain Routing (CIDR) \ube14\ub85d\uacfc \uc5ec\ub7ec IPv6 CIDR \ube14\ub85d\uc744 VPC\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 RFC 1918 \uc5d0 \uc9c0\uc815\ub41c \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c \ubc94\uc704\uc5d0\uc11c VPC\uc5d0 \ub300\ud55c IPv4 CIDR \ube14\ub85d\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud5c8\uc6a9\ub418\ub294 \ube14\ub85d \ud06c\uae30\ub294 /16 Prefix(65,536\uac1c\uc758 IP \uc8fc\uc18c)\uc640 /28 Prefix(16\uac1c\uc758 IP \uc8fc\uc18c) \uc0ac\uc774\uc785\ub2c8\ub2e4. \uc2e0\uaddc VPC\ub97c \ub9cc\ub4e4 \ub54c\ub294 \ud558\ub098\uc758 IPv6 CIDR \ube14\ub85d\uc744 \ucca8\ubd80\ud560 \uc218 \uc788\uc73c\uba70, \uae30\uc874 VPC\ub97c \ubcc0\uacbd\ud560 \ub54c\ub294 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ucca8\ubd80\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CIDR \ube14\ub85d\uc758 Prefix \uae38\uc774\ub294 1\uc870 \uac1c \uc774\uc0c1\uc758 IP \uc8fc\uc18c \ub97c \uac00\uc9c4 IPv6 VPC\uc758 \uacbd\uc6b0 /64\ub85c \uace0\uc815\ub429\ub2c8\ub2e4. Amazon\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 IPv6 \uc8fc\uc18c \ud480\uc5d0\uc11c IPv6 CIDR \ube14\ub85d\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub294 IPv4\uc640 IPv6\ub97c \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c EKS \ud074\ub7ec\uc2a4\ud130\ub294 IPv4 IP\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc2dc IPv6\uc744 \uc9c0\uc815\ud558\uba74 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \ub4c0\uc5bc \uc2a4\ud0dd VPC\uc640 \uc11c\ube0c\ub137\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \ub3d9\uc548 \uc11c\ub85c \ub2e4\ub978 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc788\ub294 \uc11c\ube0c\ub137\uc744 \ub450 \uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc804\ub2ec\ud558\ub294 \uc11c\ube0c\ub137\uc744 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c Amazon EKS\ub294 \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc5d0 \ucd5c\ub300 4\uac1c\uc758 \uad50\ucc28 \uacc4\uc815(x-account \ub610\ub294 x-ENIs) ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.x-ENIs\ub294 \ud56d\uc0c1 \ubc30\ud3ec\ub418\uba70 \ub85c\uadf8 \uc804\uc1a1, \uc2e4\ud589 \ubc0f \ud504\ub85d\uc2dc\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ud2b8\ub798\ud53d\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc804\uccb4 VPC \ubc0f \uc11c\ube0c\ub137 \uc694\uad6c \uc0ac\ud56d \uc138\ubd80 \uc815\ubcf4\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc \uad8c\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uc804\uc6a9 \uc11c\ube0c\ub137\uc744 \uc0c8\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub294 \ud37c\ube14\ub9ad \ub610\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc774 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc778\uc9c0 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc778\uc9c0\ub294 \uc11c\ube0c\ub137 \ub0b4\uc758 \ud2b8\ub798\ud53d\uc774 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 \ub97c \ud1b5\ud574 \ub77c\uc6b0\ud305\ub418\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\ub294 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ud1b5\ud574 \uc778\ud130\ub137\uc73c\ub85c \uc5f0\uacb0\ub418\ub294 \ub77c\uc6b0\ud305 \ud14c\uc774\ube14 \ud56d\ubaa9\uc774 \uc788\uc9c0\ub9cc \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uacf3\uc5d0\uc11c \uc2dc\uc791\ub418\uc5b4 \ub178\ub4dc\uc5d0 \ub3c4\ub2ec\ud558\ub294 \ud2b8\ub798\ud53d\uc744 \uc778\uadf8\ub808\uc2a4(ingress) \ub77c\uace0 \ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2dc\uc791\ub418\uc5b4 \ud574\ub2f9 \ub124\ud2b8\uc6cc\ud06c \uc678\ubd80\ub85c \uac00\ub294 \ud2b8\ub798\ud53d\uc744 \uc774\uadf8\ub808\uc2a4(egress) \ub77c\uace0 \ud569\ub2c8\ub2e4. \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\ub85c \uad6c\uc131\ub41c \uc11c\ube0c\ub137 \ub0b4\uc5d0 \ud37c\ube14\ub9ad \ub610\ub294 Elastic IP Address(EIP)\uac00 \uc788\ub294 \ub178\ub4dc\ub294 VPC \uc678\ubd80\ub85c\ubd80\ud130\uc758 \uc218\uc2e0\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\ub294 \uc77c\ubc18\uc801\uc73c\ub85c NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774 \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 VPC \ub0b4\uc5d0\uc11c \ub178\ub4dc\ub85c\uc758 \uc778\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\ub9cc \ud5c8\uc6a9\ud558\uace0 \ub178\ub4dc \ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc774 VPC\ub97c \ube60\uc838\ub098\uac00\ub294 \uac83( \uc774\uadf8\ub808\uc2a4 )\uc740 \uc5ec\uc804\ud788 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. IPv6 \ud658\uacbd\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc8fc\uc18c\ub97c \uc778\ud130\ub137\uc73c\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubc0f \ud30c\ub4dc\uc640 \uc5f0\uacb0\ub41c IPv6 \uc8fc\uc18c\ub294 \ud37c\ube14\ub9ad\uc785\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 VPC\uc5d0 egress-only internet gateways (EIGW) \ub97c \uad6c\ud604\ud558\uc5ec \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud558\ub294 \ub3d9\uc2dc\uc5d0 \ub4e4\uc5b4\uc624\ub294 \ud2b8\ub798\ud53d\uc740 \ubaa8\ub450 \ucc28\ub2e8\ud568\uc73c\ub85c\uc368 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. IPv6 \uc11c\ube0c\ub137 \uad6c\ud604\uc758 \ubaa8\ubc94 \uc0ac\ub840\ub294 VPC \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uc138 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c VPC\uc640 \uc11c\ube0c\ub137\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \u00b6 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\ub9cc \uc0ac\uc6a9 \u00b6 \ub3d9\uc77c\ud55c \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \ub178\ub4dc\uc640 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c)\uac00 \ubaa8\ub450 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 kubernetes.io/role/elb \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\uc5ec \uc778\ud130\ub137\uc5d0 \uc5f0\uacb0\ub41c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uad6c\uc131\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud37c\ube14\ub9ad, \ud504\ub77c\uc774\ube57 \ub610\ub294 \ub458 \ub2e4 (\ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57)\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \ubc0f \ud37c\ube14\ub9ad \uc11c\ube0c\ub137 \uc0ac\uc6a9 \u00b6 \ub178\ub4dc\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0dd\uc131\ub418\ub294 \ubc18\uba74, \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub294 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c \ud37c\ube14\ub9ad, \ud504\ub77c\uc774\ube57 \ub610\ub294 \ub458 \ub2e4(\ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57) \uc561\uc138\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uad6c\uc131\uc5d0 \ub530\ub77c \ub178\ub4dc \ud2b8\ub798\ud53d\uc740 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 ENI\ub97c \ud1b5\ud574 \ub4e4\uc5b4\uc635\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\ub9cc \uc0ac\uc6a9 \u00b6 \ub178\ub4dc\uc640 \uc778\uadf8\ub808\uc2a4 \ubaa8\ub450 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. [ kubernetes.io/role/internal-elb ] (http://kubernetes.io/role/internal-elb:1) \uc11c\ube0c\ub137 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub0b4\ubd80\uc6a9 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc811\uadfc\ud558\ub824\uba74 VPN \uc5f0\uacb0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. EC2\uc640 \ubaa8\ub4e0 Amazon ECR \ubc0f S3 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud574 AWS PrivateLink \ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc804 EKS \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 \uc694\uad6c \uc0ac\ud56d \uc744 \uac80\ud1a0\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC\uac04 \ud1b5\uc2e0 \u00b6 \uc5ec\ub7ec VPC\uc640 \uc774\ub7ec\ud55c VPC\uc5d0 \ubcc4\ub3c4\uc758 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud574\uc57c \ud558\ub294 \uc2dc\ub098\ub9ac\uc624\uac00 \ub9ce\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ubcf4\uc548, \ube4c\ub9c1, \ub2e4\uc911 \uc9c0\uc5ed \ub610\ub294 \ub0b4\ubd80 chargeback \uc694\uad6c \uc0ac\ud56d\uc744 \ub9cc\uc871\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc5ec\ub7ec VPC\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. VPC-VPC \uc5f0\uacb0 \uac00\uc774\ub4dc \uc5d0 \uc5b8\uae09\ub41c \uc124\uacc4 \ud328\ud134\uc744 \ub530\ub77c \uc5ec\ub7ec \uac1c\uc758 Amazon VPC\ub97c \ubcf4\ub2e4 \ud070 \uac00\uc0c1 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ud1b5\ud569\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC \uc5f0\uacb0\uc740 \uc5f0\uacb0 \uc911\uc778 \uac01 VPC\uc5d0 \ub300\ud574 \uc911\ubcf5\ub418\uc9c0 \uc54a\ub294 IP \ubc94\uc704\ub97c \uc0ac\uc6a9\ud560 \ub54c \uac00\uc7a5 \uc798 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc6b4\uc601 \ud6a8\uc728\uc131\uc744 \uc704\ud574 EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ub178\ub4dc\ub97c \uacb9\uce58\uc9c0 \uc54a\ub294 IP \ubc94\uc704\uc5d0 \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c RFC1918 IP \uc8fc\uc18c\ub97c \uc720\uc9c0\ud558\uba74\uc11c \uc911\ubcf5\ub418\ub294 CIDR \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub4dc\uc5d0\uc11c \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc640 \ud568\uaed8 VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec EKS\uc758 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud1b5\ud569\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uc774\uba70, \ubcc4\ub3c4\uc758 \uacc4\uc815\uc73c\ub85c \uace0\uac1d VPC\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \ubc0f \uc778\uadf8\ub808\uc2a4(ALB \ub610\ub294 NLB)\ub97c \uacf5\uc720\ud558\ub824\ub294 \uacbd\uc6b0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc11c\ube44\uc2a4\ub85c\ub3c4 \uc54c\ub824\uc9c4 AWS PrivateLink \ub97c \ud65c\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud558\uc138\uc694. \uc5ec\ub7ec \uacc4\uc815\uc5d0\uc11c\uc758 VPC \uacf5\uc720 \u00b6 \ub9ce\uc740 \uae30\uc5c5\uc774 AWS \uc870\uc9c1 \ub0b4 \uc5ec\ub7ec AWS \uacc4\uc815\uc758 \ub124\ud2b8\uc6cc\ud06c \uad00\ub9ac\ub97c \uac04\uc18c\ud654\ud558\uace0, \ube44\uc6a9\uc744 \uc808\uac10\ud558\uace0, \ubcf4\uc548\uc744 \uac1c\uc120\ud558\uae30 \uc704\ud55c \uc218\ub2e8\uc73c\ub85c \uacf5\uc720\uc6a9 Amazon VPC\ub97c \ucc44\ud0dd\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub4e4\uc740 AWS Resource Access Manager(RAM)\ub97c \ud65c\uc6a9\ud558\uc5ec \uc9c0\uc6d0\ub418\ub294 AWS \ub9ac\uc18c\uc2a4 \ub97c \uac1c\ubcc4 AWS \uacc4\uc815, \uc870\uc9c1 \ub2e8\uc704(OU) \ub610\ub294 \uc804\uccb4 AWS \uc870\uc9c1\uacfc \uc548\uc804\ud558\uac8c \uacf5\uc720\ud569\ub2c8\ub2e4. AWS RAM\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 AWS \uacc4\uc815\uc758 \uacf5\uc720\uc6a9 VPC \uc11c\ube0c\ub137\uc5d0 Amazon EKS \ud074\ub7ec\uc2a4\ud130, \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f \uae30\ud0c0 \uc9c0\uc6d0 AWS \ub9ac\uc18c\uc2a4 (\uc608: \ub85c\ub4dc\ubc38\ub7f0\uc11c, \ubcf4\uc548 \uadf8\ub8f9, \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub4f1) \ub97c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc740 \uc0c1\uc704 \uc218\uc900 \uc544\ud0a4\ud14d\ucc98\uc758 \uc608\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc911\uc559 \ub124\ud2b8\uc6cc\ud06c \ud300\uc740 VPC, \uc11c\ube0c\ub137 \ub4f1\uacfc \uac19\uc740 \ub124\ud2b8\uc6cc\ud0b9 \uad6c\uc870\ub97c \uc81c\uc5b4\uace0, \ub3d9\uc2dc\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 \ud50c\ub7ab\ud3fc \ud300\uc740 \uac01\uc790\uc758 AWS \uacc4\uc815\uc5d0 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0 \ub300\ud55c \uc804\uccb4 \uc124\uba85\uc740 \uc774 github \uc800\uc7a5\uc18c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc720\uc6a9 \uc11c\ube0c\ub137 \uc0ac\uc6a9 \uc2dc \uace0\ub824 \uc0ac\ud56d \u00b6 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc640 \uc6cc\ucee4 \ub178\ub4dc\ub294 \ubaa8\ub450 \ub3d9\uc77c\ud55c VPC\uc758 \uacf5\uc720\uc6a9 \uc11c\ube0c\ub137 \ub0b4\uc5d0\uc11c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 \uc5ec\ub7ec VPC\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 AWS VPC \ubcf4\uc548 \uadf8\ub8f9(SG)\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ucee4 \ub178\ub4dc \uc0ac\uc774\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc6cc\ucee4 \ub178\ub4dc, \uae30\ud0c0 VPC \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 IP \uc8fc\uc18c \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158/\ucc38\uc5ec\uc790(participant) \uacc4\uc815\uc5d0\uc11c \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \uc0ac\uc6a9\ud560 \ubcf4\uc548 \uadf8\ub8f9\ub3c4 \ucc38\uc5ec\uc790 \uacc4\uc815\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9 \ub0b4\uc5d0\uc11c \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \uaddc\uce59\uc744 \uad6c\uc131\ud558\uc5ec \uc911\uc559 VPC \uacc4\uc815\uc5d0 \uc788\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \uc1a1\uc218\uc2e0\ub418\ub294 \ud544\uc694\ud55c \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \ucc38\uc5ec\uc790 \uacc4\uc815 \ub0b4\uc5d0 IAM \uc5ed\ud560 \ubc0f \uad00\ub828 \uc815\ucc45\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c IAM \uc5ed\ud560 \ubc0f \uc815\ucc45\uc740 Amazon EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc640 Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub178\ub4dc \ubc0f \ud30c\ub4dc\uc5d0 \ud544\uc694\ud55c \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uae30 \uc704\ud574 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc744 \ud1b5\ud574 Amazon EKS\ub294 \uc0ac\uc6a9\uc790\ub97c \ub300\uc2e0\ud558\uc5ec \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc811\uadfc \ubc29\uc2dd\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0\uc11c Amazon S3 \ubc84\ud0b7, Dynamodb \ud14c\uc774\ube14 \ub4f1\uacfc \uac19\uc740 AWS \ub9ac\uc18c\uc2a4\uc5d0 \uacc4\uc815 \uac04 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45 \uc811\uadfc\ubc95 : AWS \uc11c\ube44\uc2a4\uac00 \ub9ac\uc18c\uc2a4 \uc815\ucc45\uc744 \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0 \uc801\uc808\ud55c \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45\uc744 \ucd94\uac00\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IAM \uc5ed\ud560\uc5d0 \ub300\ud55c \uacc4\uc815 \uac04 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub294 OIDC \uacf5\uae09\uc790, IAM \uc5ed\ud560 \ubc0f \uad8c\ud55c \uc815\ucc45\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uacc4\uc815\uc5d0 \uc874\uc7ac\ud558\uac8c \ub429\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45\uc744 \uc9c0\uc6d0\ud558\ub294 AWS \uc11c\ube44\uc2a4\ub97c \ucc3e\uc73c\ub824\uba74 IAM\uacfc \ud568\uaed8 \uc791\ub3d9\ud558\ub294 AWS \uc11c\ube44\uc2a4 \ub97c \ucc38\uc870\ud558\uace0 \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc5f4\uc5d0\uc11c '\uc608'\ub77c\uace0 \ud45c\uc2dc\ub41c \uc11c\ube44\uc2a4\ub97c \ucc3e\uc544\ubcf4\uc2ed\uc2dc\uc624. OIDC \uacf5\uae09\uc790 \uc811\uadfc \ubc29\uc2dd : OIDC \uacf5\uae09\uc790, IAM \uc5ed\ud560, \uad8c\ud55c \ubc0f \uc2e0\ub8b0 \uc815\ucc45\uacfc \uac19\uc740 IAM \ub9ac\uc18c\uc2a4\ub294 \ub9ac\uc18c\uc2a4\uac00 \uc788\ub294 \ub2e4\ub978 \ucc38\uc5ec\uc790 AWS \uacc4\uc815\uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc5ed\ud560\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uacc4\uc815\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4 \uacc4\uc815 \uac04 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc704\ud55c \uad50\ucc28 \uacc4\uc815 \uac04 IAM \uc5ed\ud560 \ube14\ub85c\uadf8\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. Amazon Elastic Loadbalancer(ELB) \ub9ac\uc18c\uc2a4(ALB \ub610\ub294 NLB)\ub97c \ubc30\ud3ec\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 ELB \ub9ac\uc18c\uc2a4\ub97c \ubc30\ud3ec\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc548\ub0b4\ub294 \uad50\ucc28 \uacc4\uc815 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud1b5\ud574 Amazon EKS \ud30c\ub4dc \ub178\ucd9c \uc548\ub0b4\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub9ac\uc18c\uc2a4\uc758 \ubcf4\uc548 \uad6c\uc131\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\ubbc0\ub85c \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. Amazon VPC CNI\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uae30\ub2a5(custom networking feature) \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 \ub098\uc5f4\ub41c \uac00\uc6a9 \uc601\uc5ed (AZ) ID \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01\uac01\uc758 ENIConfig \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac\uc801 AZ\ub97c \uac01 AWS \uacc4\uc815\uc758 AZ \uc774\ub984\uc5d0 \ubb34\uc791\uc704\ub85c \ub9e4\ud551\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9 \u00b6 \ubcf4\uc548 \uadf8\ub8f9 \uc740 \uc5f0\uacb0\ub41c \ub9ac\uc18c\uc2a4\uc5d0 \ub4e4\uc5b4\uc624\uac70\ub098 \ub098\uac00\ub294 \uac83\uc774 \ud5c8\uc6a9\ub418\ub294 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub178\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 Amazon EKS\ub294 eks-cluster-sg-my-cluster-uniqueID \ub77c\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad00\ub9ac\ud615 ENI \ubc0f \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc640 \ub178\ub4dc \uac04\uc5d0 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \uc790\uc720\ub86d\uac8c \uc804\ub2ec\ub418\uace0, \ubaa8\ub4e0 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc774 \ubaa8\ub4e0 \ubaa9\uc801\uc9c0\ub85c \uc804\ub2ec\ub418\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc790\uccb4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud558\ub294 \uacbd\uc6b0 \ubcf4\uc548 \uadf8\ub8f9 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ub2e4\uc911 AZ \ubc30\ud3ec \uace0\ub824 \u00b6 AWS \ub9ac\uc804\uc740 \ubb3c\ub9ac\uc801\uc73c\ub85c \ubd84\ub9ac\ub418\uace0 \uaca9\ub9ac\ub41c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed (AZ) \uc744 \uc81c\uacf5\ud558\uba70, \uc774\ub7ec\ud55c \uac00\uc6a9 \uc601\uc5ed\uc740 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc9e7\uace0 \ucc98\ub9ac\ub7c9\uc774 \ub192\uc73c\uba70 \uc911\ubcf5\uc131\uc774 \ub192\uc740 \ub124\ud2b8\uc6cc\ud0b9\uc73c\ub85c \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uac00\uc6a9 \uc601\uc5ed\uc744 \uc0ac\uc6a9\ud558\uba74 \uac00\uc6a9 \uc601\uc5ed \uac04\uc5d0 \uc911\ub2e8 \uc5c6\uc774 \uc790\ub3d9\uc73c\ub85c \uc7a5\uc560 \uc870\uce58\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uacc4\ud558\uace0 \uc6b4\uc601\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubc30\ud3ec\ud560 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Kubelet\uc740 topology.kubernetes.io/region=us-west-2 , topology.kubernetes.io/zone=us-west-2d \uc640 \uac19\uc740 \ub808\uc774\ube14\uc744 \ub178\ub4dc \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud569\ub2c8\ub2e4. \ub178\ub4dc \ub808\uc774\ube14\uc744 Pod topology spread constraints \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uac00 \uc5ec\ub7ec \uc601\uc5ed\uc5d0 \ubd84\uc0b0\ub418\ub294 \ubc29\uc2dd\uc744 \uc81c\uc5b4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud78c\ud2b8\ub97c \ud1b5\ud574 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec \uac00 \uc608\uc0c1 \uac00\uc6a9\uc131\uc744 \ub192\uc774\uae30 \uc704\ud574 \ud30c\ub4dc\ub97c \ubc30\uce58\ud558\uc5ec \uc0c1\uad00 \uad00\uacc4\uac00 \uc788\ub294 \uc7a5\uc560\uac00 \uc804\uccb4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc704\ud5d8\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130 \ubc0f AZ \ubd84\uc0b0 \uc81c\uc57d \uc870\uac74\uc758 \uc608\ub97c \ubcf4\ub824\uba74 \ud30c\ub4dc\uc5d0 \ub178\ub4dc \ud560\ub2f9 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uc11c\ube0c\ub137 \ub610\ub294 \uac00\uc6a9 \uc601\uc5ed\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ub178\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ubc30\uce58\ub429\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c EKS \uc9c0\uc6d0\uc740 \uac00\uc6a9 \uc6a9\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc0b0\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 topology spread constraints\ub97c \uc815\uc758\ud558\ub294 \uacbd\uc6b0 Karpenter \ub294 \ub178\ub4dc\ub97c \uc9c0\uc815\ub41c AZ\ub85c \ud655\uc7a5\ud558\uc5ec AZ \ubd84\uc0b0 \ubc30\uce58\ub97c \uc900\uc218\ud569\ub2c8\ub2e4. AWS Elastic Loadbalancer\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc6a9 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc704\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\ub4dc \ubc38\ub7f0\uc11c(ALB) \uc640 \ub85c\ub4dc\ubc38\ub7f0\uc11c \uc720\ud615\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub97c \uc704\ud55c \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c(NLB) \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. Elastic Loadbalancer \ucee8\ud2b8\ub864\ub7ec\ub294 \ud0dc\uadf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4. ELB \ucee8\ud2b8\ub864\ub7ec\uac00 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed (AZ) \uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc9c0\ub9ac\uc801 \uc774\uc911\ud654\uc758 \uc548\uc804\uc131\uacfc \uc548\uc815\uc131\uc744 \ud65c\uc6a9\ud558\ub824\uba74 \ucd5c\uc18c \ub450 \uac1c\uc758 AZ\uc5d0 \uc11c\ube0c\ub137\uc744 \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc \ubc30\ud3ec \u00b6 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uacfc \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc744 \ubaa8\ub450 \ud3ec\ud568\ud558\ub294 VPC\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ud06c\ub85c\ub4dc\ub97c EKS\uc5d0 \ubc30\ud3ec\ud558\ub294 \ub370 \uac00\uc7a5 \uc801\ud569\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ub450 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ucd5c\uc18c \ub450 \uac1c\uc758 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uacfc \ub450 \uac1c\uc758 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc744 \uc124\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc758 \ub77c\uc6b0\ud305 \ud14c\uc774\ube14\uc5d0\ub294 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ud1b5\ud574 \uc778\ud130\ub137\uacfc \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 IPv6 \ud658\uacbd (EIGW)\uc758 \uc678\ubd80 \uc804\uc6a9 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc5d0\uc11c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \ub178\ub4dc\ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uba74 \ub178\ub4dc\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \ucd5c\ub300\ud55c \uc81c\uc5b4\ud560 \uc218 \uc788\uc73c\uba70 \ub300\ubd80\ubd84\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c)\ub294 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uace0 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud569\ub2c8\ub2e4. \uc5c4\uaca9\ud55c \ubcf4\uc548 \ubc0f \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \ubaa8\ub4dc\ub97c \uace0\ub824\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc5d0\uc11c\ub294 \uc138 \uac1c\uc758 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc774 AWS \ub9ac\uc804 VPC \ub0b4\uc758 \uc11c\ub85c \ub2e4\ub978 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub9ac\uc18c\uc2a4\ub294 \uc778\ud130\ub137\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc73c\uba70 \uc778\ud130\ub137\uc5d0\uc11c \uc11c\ube0c\ub137\uc758 \ub9ac\uc18c\uc2a4\ub85c\ub3c4 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\ub824\uba74 PrivateLink \uc778\ud130\ud398\uc774\uc2a4 \ubc0f/\ub610\ub294 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub0b4\ubd80 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \ud2b8\ub798\ud53d\uc744 \ud30c\ub4dc\ub85c \ub9ac\ub514\ub809\uc158\ud558\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\uac00 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 ( `kubernetes.io/role/internal-elb: 1 ) \ud0dc\uadf8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub4f1\ub85d\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc804\uccb4 \uc694\uad6c \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d\uc740 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc \uace0\ub824 \u00b6 Amazon EKS\ub294 \ud37c\ube14\ub9ad \uc804\uc6a9, \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57, \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc\ub294 \ud37c\ube14\ub9ad \uc804\uc6a9\uc774\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc\ub85c \uad6c\uc131\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 VPC \ub0b4\uc5d0\uc11c\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ud638\ucd9c(\uc608: \ub178\ub4dc\uc640 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uac04 \ud1b5\uc2e0)\uc5d0 \ud504\ub77c\uc774\ube57 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud65c\uc6a9\ud558\uace0 \ud2b8\ub798\ud53d\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub0b4\uc5d0 \uc720\uc9c0\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74 \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub294 \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CIDR \ube14\ub85d\uc740 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. CIDR \ube14\ub85d \uc81c\ud55c\uc744 \ud3ec\ud568\ud558\uc5ec \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4\ub97c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\ub2c8\ub2e4. \ubcf4\uc548 \ubc0f \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \ud45c\uc2dc\ub41c \uc635\uc158 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec API \uc11c\ubc84\uc5d0 \ud504\ub77c\uc774\ube57\ud558\uac8c \uc5f0\uacb0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \ud655\uc778 \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ucd5c\ub300 4\uac1c\uc758 ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uba74 Amazon EKS\uc5d0\uc11c \uc2e0\uaddc X-ENI\ub97c \uc0dd\uc131\ud558\uace0 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc131\uacf5\ud558\uba74 \uae30\uc874 X-ENI\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\uc6a9\ud558\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 /28(16\uac1c\uc758 IP \uc8fc\uc18c) \ub137\ub9c8\uc2a4\ud06c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC\uc640 \uc11c\ube0c\ub137\uc744 \uad6c\ucd95\ud558\uae30 \uc804\uc5d0 \ud544\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc \uaddc\ubaa8\uc5d0\uc11c \uc5ed\ubc29\ud5a5\uc73c\ub85c \uc791\uc5c5\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\u201cekstcl\u201d\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c /19 \uc11c\ube0c\ub137\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. /19\uc758 \ub137\ub9c8\uc2a4\ud06c\ub294 \ub300\ubd80\ubd84\uc758 \uc6cc\ud06c\ub85c\ub4dc \uc720\ud615\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ud30c\ub4dc IP \ud560\ub2f9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon VPC CNI \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \ud06c\uae30 \uc870\uc815\uc744 \uc704\ud574 EKS\uc5d0\uc11c \uac1c\ubc1c\ud55c \ub3c4\uc6b0\uae34 subnet-calc \uc758 \uc0ac\uc6a9\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. IPv6 VPC\uc758 \uacbd\uc6b0 \uc11c\ube0c\ub137\uc758 CIDR \ube14\ub85d\uc758 \uace0\uc815 Prefix \uae38\uc774\ub294 /64 \uc785\ub2c8\ub2e4. IP \uc0ac\uc6a9\uc744 \uadf9\ub300\ud654\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc\uc640 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc2e0\uc911\ud558\uac8c \uad6c\uc131 \u00b6 Amazon EKS\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9 \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub178\ub4dc\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uac04\uc758 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc870\uc9c1 \ub0b4\uc5d0\uc11c \uac1c\ubc29\ud615 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ud3ec\ud2b8 \uc694\uad6c \uc0ac\ud56d \uc744 \ud655\uc778\ud558\uace0 \uaddc\uce59\uc744 \uc218\ub3d9\uc73c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc911\uc5d0 \uc81c\uacf5\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad00\ub9ac\ud615 \uc778\ud130\ud398\uc774\uc2a4(X-ENI) \uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548\uadf8\ub8f9\uc774 \ub178\ub4dc\uc640 \uc989\uc2dc \uc5f0\uacb0\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud560 \ub54c\ub294 \uc218\ub3d9\uc73c\ub85c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc5f0\uacb0 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc911 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc758 Karpenter \ub178\ub4dc \ud15c\ud50c\ub9bf \uac80\uc0c9\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 SecurityGroupSelector \ub97c \ud65c\uc131\ud654\ud560 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ub178\ub4dc \uac04 \ud1b5\uc2e0 \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud558\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0 \ub178\ub4dc\uac00 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc5f0\uacb0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc628\ud504\ub808\ubbf8\uc2a4 \uc5f0\uacb0 \ubc0f \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc561\uc138\uc2a4\uc640 \uac19\uc740 \uc678\ubd80 \uc561\uc138\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3c9\uac00\ud558\uace0 \uaddc\uce59\uc744 \uc801\uc808\ud558\uac8c \uc124\uc815\ud569\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud504\ub85c\ub355\uc158\uc5d0 \uc801\uc6a9\ud558\uae30 \uc804\uc5d0 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \uc8fc\uc758 \uae4a\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uac01 \uac00\uc6a9 \uc601\uc5ed\uc5d0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc30\ud3ec \u00b6 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137 (IPv4 \ubc0f IPv6) \uc5d0 \ub178\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uacbd\uc6b0 \uac01 \uac00\uc6a9 \uc601\uc5ed(AZ) \uc5d0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ub9cc\ub4e4\uc5b4 \uc601\uc5ed \ub3c5\ub9bd\uc801 \uc544\ud0a4\ud14d\ucc98\ub97c \ubcf4\uc7a5\ud558\uace0 AZ \uac04 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. AZ\uc758 \uac01 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 \uc774\uc911\ud654\ub85c \uad6c\ud604\ub429\ub2c8\ub2e4. Cloud9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4 \u00b6 AWS Cloud9\ub294 AWS Systems Manager\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\uadf8\ub808\uc2a4 \uc561\uc138\uc2a4 \uc5c6\uc774 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc548\uc804\ud558\uac8c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6f9 \uae30\ubc18 IDE\uc785\ub2c8\ub2e4. Cloud9 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc774\uadf8\ub808\uc2a4\ub97c \ube44\ud65c\uc131\ud654\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Cloud9\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc640 \uc11c\ube0c\ub137\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.","title":"VPC \ubc0f \uc11c\ube0c\ub137 \uace0\ub824 \uc0ac\ud56d"},{"location":"networking/subnets/index.kr/#vpc","text":"EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc6b4\uc601\ud558\ub824\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud0b9 \uc678\uc5d0\ub3c4 AWS VPC \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud55c \uc9c0\uc2dd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. VPC\ub97c \uc124\uacc4\ud558\uac70\ub098 \uae30\uc874 VPC\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0 \uba54\ucee4\ub2c8\uc998\uc744 \uc774\ud574\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. EKS\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 VPC\uc640 \uc11c\ube0c\ub137\uc744 \uc124\uacc4\ud560 \ub54c\ub294 \ud074\ub7ec\uc2a4\ud130 VPC \uace0\ub824 \uc0ac\ud56d \ubc0f Amazon EKS \ubcf4\uc548 \uadf8\ub8f9 \uace0\ub824 \uc0ac\ud56d \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"VPC \ubc0f \uc11c\ube0c\ub137 \uace0\ub824 \uc0ac\ud56d"},{"location":"networking/subnets/index.kr/#_1","text":"","title":"\uac1c\uc694"},{"location":"networking/subnets/index.kr/#eks","text":"EKS \ud074\ub7ec\uc2a4\ud130\ub294 \ub450 \uac1c\uc758 VPC\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ud638\uc2a4\ud305\ud558\ub294 AWS \uad00\ub9ac\ud615 VPC. \uc774 VPC\ub294 \uace0\uac1d \uacc4\uc815\uc5d0 \ud45c\uc2dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc\ub97c \ud638\uc2a4\ud305\ud558\ub294 \uace0\uac1d \uad00\ub9ac\ud615 VPC. \uc5ec\uae30\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub294 \ubb3c\ub860 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uac19\uc740 \uae30\ud0c0 \uace0\uac1d \uad00\ub9ac\ud615 AWS \uc778\ud504\ub77c\uac00 \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 VPC\ub294 \uace0\uac1d \uacc4\uc815\uc5d0 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc804, \uace0\uac1d \uad00\ub9ac\ud615 VPC\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 VPC\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\uc744 \uacbd\uc6b0 eksctl\uc774 VPC\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uace0\uac1d VPC\uc758 \ub178\ub4dc\ub294 AWS VPC\uc758 \uad00\ub9ac\ud615 API \uc11c\ubc84 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub178\ub4dc\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ub4f1\ub85d\ub418\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub77c\ub294 \uc694\uccad\uc744 \uc218\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub294 (a) EKS \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 (b) EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \uad50\ucc28 \uacc4\uc815 Elastic Network Interface (X-ENI)\ub97c \ud1b5\ud574 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c\ub294 \ucd5c\uc18c \ub450 \uac1c\uc758 VPC \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc2dc \uc9c0\uc815\ub41c \uac01 \uc11c\ube0c\ub137(\ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc774\ub77c\uace0\ub3c4 \ud568)\uc5d0 X-ENI\ub97c \ubc30\uce58\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub294 \uc774\ub7ec\ud55c \uad50\ucc28 \uacc4\uc815 ENI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d \uad00\ub9ac\ud615 \ud074\ub7ec\uc2a4\ud130 VPC \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub178\ub4dc\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \uc2dc\uc791\ub418\uba74 EKS \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \uc2a4\ud06c\ub9bd\ud2b8\uac00 \uc2e4\ud589\ub418\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uad6c\uc131 \ud30c\uc77c\uc774 \uc124\uce58\ub429\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4\uc758 \ubd80\ud305 \ud504\ub85c\uc138\uc2a4\uc758 \uc77c\ubd80\ub85c\uc368 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uc5d0\uc774\uc804\ud2b8, kubelet \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub178\ub4dc \uc5d0\uc774\uc804\ud2b8\uac00 \uc2dc\uc791\ub429\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ub4f1\ub85d\ud558\uae30 \uc704\ud574 kubelet\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc811\uc18d\ud569\ub2c8\ub2e4. VPC \uc678\ubd80\uc758 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 VPC \ub0b4\uc758 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \uc5f0\uacb0\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. Kubelet\uc740 API \uba85\ub839\uc744 \uc218\uc2e0\ud558\uace0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8 \ubc0f \ud558\ud2b8\ube44\ud2b8\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"EKS \ud074\ub7ec\uc2a4\ud130 \uc544\ud0a4\ud14d\ucc98"},{"location":"networking/subnets/index.kr/#eks_1","text":"EKS\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uc5b4\ud558\ub294 \ub450 \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc81c\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ud37c\ube14\ub9ad \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc811\uadfc\ud560 \uc218 \uc788\ub294\uc9c0 \uc544\ub2c8\uba74 VPC\ub97c \ud1b5\ud574\uc11c\ub9cc \uc811\uadfc\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8(\uae30\ubcf8\uac12), \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub610\ub294 \ub458 \ub2e4\ub97c \ud55c \ubc88\uc5d0 \ud65c\uc131\ud654 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uad6c\uc131\uc740 \ub178\ub4dc\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud1b5\uc2e0\ud558\uae30 \uc704\ud55c \uacbd\ub85c\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc774\ub7ec\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc124\uc815\uc740 EKS \ucf58\uc194 \ub610\ub294 API\ub97c \ud1b5\ud574 \uc5b8\uc81c\ub4e0\uc9c0 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0"},{"location":"networking/subnets/index.kr/#_2","text":"\ud574\ub2f9 \uad6c\uc131\uc740 \uc2e0\uaddc Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\ubcf8 \ub3d9\uc791\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub0b4\uc5d0\uc11c \uc2dc\uc791\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc694\uccad(\uc608: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ud1b5\uc2e0\uc744 \uc704\ud55c \uc6cc\ucee4 \ub178\ub4dc)\uc740 VPC \uc678\ubd80\ub85c \uac00\uc9c0\ub9cc Amazon \ub124\ud2b8\uc6cc\ud06c \uc678\ubd80\ub85c\ub294 \uac00\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc5f0\uacb0\ub418\ub824\uba74 \ud37c\ube14\ub9ad IP \uc8fc\uc18c \ubc0f \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c \ub610\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc758 \ud37c\ube14\ub9ad IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"\ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8"},{"location":"networking/subnets/index.kr/#_3","text":"\ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \ubaa8\ub450 \ud65c\uc131\ud654\ub418\uba74 VPC \ub0b4\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc694\uccad\uc774 VPC \ub0b4\uc758 X-ENIs\ub97c \ud1b5\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub294 \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8"},{"location":"networking/subnets/index.kr/#_4","text":"\ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \uc778\ud130\ub137\uc5d0\uc11c API \uc11c\ubc84\uc5d0 \uacf5\uac1c\uc801\uc73c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub85c \ud5a5\ud558\ub294 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub610\ub294 \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c \uc548\uc5d0\uc11c \ub4e4\uc5b4\uc640\uc57c \ud569\ub2c8\ub2e4. \ub178\ub4dc\ub294 VPC \ub0b4\uc758 X-ENIs\ub97c \ud1b5\ud574 API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \ub2e8, \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ub3c4\uad6c\ub294 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. Amazon VPC \uc678\ubd80\uc5d0\uc11c \ud504\ub77c\uc774\ube57 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95 \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubd05\ub2c8\ub2e4. \ucc38\uace0\ub85c \ud074\ub7ec\uc2a4\ud130\uc758 API \uc11c\ubc84 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \ud37c\ube14\ub9ad DNS \uc11c\ubc84\uc5d0\uc11c VPC\uc758 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub85c \ub9ac\uc878\ube0c\ub429\ub2c8\ub2e4. \uacfc\uac70\uc5d0\ub294 VPC \ub0b4\uc5d0\uc11c\ub9cc \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc5c8\uc2b5\ub2c8\ub2e4.","title":"\ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8"},{"location":"networking/subnets/index.kr/#vpc_1","text":"\uc218\ucc9c \uac1c\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc640 \ucd08\ub2f9 \uc218\uc2ed \ub610\ub294 \uc218\ubc31 \uae30\uac00\ube44\ud2b8\uc758 \ud2b8\ub798\ud53d\uc744 \uc9c0\uc6d0\ud558\ub294 \ud658\uacbd\uc740 \u201c\ud558\uc774\ud37c\uc2a4\ucf00\uc77c\u201d\uc774\ub77c\uace0 \uac04\uc8fc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc774\ud37c\uc2a4\ucf00\uc77c \uc6b4\uc601\uc758 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0, \ubcf4\uc548, \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c \ubd80\uc871 \ubc0f \uc911\ubcf5\uc5d0 \ub300\ud55c \ucd94\uac00 \uc124\uacc4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ud558\uc774\ud37c\uc2a4\ucf00\uc77c \ub124\ud2b8\uc6cc\ud06c \uc124\uacc4\ub294 \uc140 \uae30\ubc18 \uc778\ud504\ub77c \uc720\ub2db\uc744 \ud65c\uc6a9\ud558\uace0 \ub2e4\uc591\ud55c AWS \ub124\ud2b8\uc6cc\ud0b9 \uc11c\ube44\uc2a4 \uac01\uac01\uc758 \uc774\uc810\uacfc \ud55c\uacc4\ub97c \uc774\ud574\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. AWS \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \ucf58\ud150\uce20 \uc804\uc1a1 \ube14\ub85c\uadf8\uc5d0\uc11c \ud558\uc774\ud37c\uc2a4\ucf00\uc77c Amazon VPC \ub124\ud2b8\uc6cc\ud06c \uc124\uacc4 \uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.","title":"\ud558\uc774\ud37c\uc2a4\ucf00\uc77c VPC \uc124\uacc4 \uc9c0\uce68"},{"location":"networking/subnets/index.kr/#vpc_2","text":"Amazon VPC\ub294 IPv4 \ubc0f IPv6 \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uae30\ubcf8\uc801\uc73c\ub85c IPv4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC\uc5d0\ub294 IPv4 CIDR \ube14\ub85d\uc774 \uc5f0\uacb0\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc120\ud0dd\uc801\uc73c\ub85c \uc5ec\ub7ec IPv4 Classless Inter-Domain Routing (CIDR) \ube14\ub85d\uacfc \uc5ec\ub7ec IPv6 CIDR \ube14\ub85d\uc744 VPC\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC\ub97c \uc0dd\uc131\ud560 \uacbd\uc6b0 RFC 1918 \uc5d0 \uc9c0\uc815\ub41c \ud504\ub77c\uc774\ube57 IPv4 \uc8fc\uc18c \ubc94\uc704\uc5d0\uc11c VPC\uc5d0 \ub300\ud55c IPv4 CIDR \ube14\ub85d\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud5c8\uc6a9\ub418\ub294 \ube14\ub85d \ud06c\uae30\ub294 /16 Prefix(65,536\uac1c\uc758 IP \uc8fc\uc18c)\uc640 /28 Prefix(16\uac1c\uc758 IP \uc8fc\uc18c) \uc0ac\uc774\uc785\ub2c8\ub2e4. \uc2e0\uaddc VPC\ub97c \ub9cc\ub4e4 \ub54c\ub294 \ud558\ub098\uc758 IPv6 CIDR \ube14\ub85d\uc744 \ucca8\ubd80\ud560 \uc218 \uc788\uc73c\uba70, \uae30\uc874 VPC\ub97c \ubcc0\uacbd\ud560 \ub54c\ub294 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ucca8\ubd80\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CIDR \ube14\ub85d\uc758 Prefix \uae38\uc774\ub294 1\uc870 \uac1c \uc774\uc0c1\uc758 IP \uc8fc\uc18c \ub97c \uac00\uc9c4 IPv6 VPC\uc758 \uacbd\uc6b0 /64\ub85c \uace0\uc815\ub429\ub2c8\ub2e4. Amazon\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 IPv6 \uc8fc\uc18c \ud480\uc5d0\uc11c IPv6 CIDR \ube14\ub85d\uc744 \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub294 IPv4\uc640 IPv6\ub97c \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c EKS \ud074\ub7ec\uc2a4\ud130\ub294 IPv4 IP\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc2dc IPv6\uc744 \uc9c0\uc815\ud558\uba74 IPv6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \ub4c0\uc5bc \uc2a4\ud0dd VPC\uc640 \uc11c\ube0c\ub137\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \ub3d9\uc548 \uc11c\ub85c \ub2e4\ub978 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc788\ub294 \uc11c\ube0c\ub137\uc744 \ub450 \uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc804\ub2ec\ud558\ub294 \uc11c\ube0c\ub137\uc744 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c Amazon EKS\ub294 \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc5d0 \ucd5c\ub300 4\uac1c\uc758 \uad50\ucc28 \uacc4\uc815(x-account \ub610\ub294 x-ENIs) ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.x-ENIs\ub294 \ud56d\uc0c1 \ubc30\ud3ec\ub418\uba70 \ub85c\uadf8 \uc804\uc1a1, \uc2e4\ud589 \ubc0f \ud504\ub85d\uc2dc\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ud2b8\ub798\ud53d\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc804\uccb4 VPC \ubc0f \uc11c\ube0c\ub137 \uc694\uad6c \uc0ac\ud56d \uc138\ubd80 \uc815\ubcf4\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ucee4 \ub178\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc \uad8c\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud55c \uc804\uc6a9 \uc11c\ube0c\ub137\uc744 \uc0c8\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub294 \ud37c\ube14\ub9ad \ub610\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc774 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc778\uc9c0 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc778\uc9c0\ub294 \uc11c\ube0c\ub137 \ub0b4\uc758 \ud2b8\ub798\ud53d\uc774 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 \ub97c \ud1b5\ud574 \ub77c\uc6b0\ud305\ub418\ub294\uc9c0 \uc5ec\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\ub294 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ud1b5\ud574 \uc778\ud130\ub137\uc73c\ub85c \uc5f0\uacb0\ub418\ub294 \ub77c\uc6b0\ud305 \ud14c\uc774\ube14 \ud56d\ubaa9\uc774 \uc788\uc9c0\ub9cc \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 \uadf8\ub807\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uacf3\uc5d0\uc11c \uc2dc\uc791\ub418\uc5b4 \ub178\ub4dc\uc5d0 \ub3c4\ub2ec\ud558\ub294 \ud2b8\ub798\ud53d\uc744 \uc778\uadf8\ub808\uc2a4(ingress) \ub77c\uace0 \ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2dc\uc791\ub418\uc5b4 \ud574\ub2f9 \ub124\ud2b8\uc6cc\ud06c \uc678\ubd80\ub85c \uac00\ub294 \ud2b8\ub798\ud53d\uc744 \uc774\uadf8\ub808\uc2a4(egress) \ub77c\uace0 \ud569\ub2c8\ub2e4. \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\ub85c \uad6c\uc131\ub41c \uc11c\ube0c\ub137 \ub0b4\uc5d0 \ud37c\ube14\ub9ad \ub610\ub294 Elastic IP Address(EIP)\uac00 \uc788\ub294 \ub178\ub4dc\ub294 VPC \uc678\ubd80\ub85c\ubd80\ud130\uc758 \uc218\uc2e0\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\ub294 \uc77c\ubc18\uc801\uc73c\ub85c NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774 \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 VPC \ub0b4\uc5d0\uc11c \ub178\ub4dc\ub85c\uc758 \uc778\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\ub9cc \ud5c8\uc6a9\ud558\uace0 \ub178\ub4dc \ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc774 VPC\ub97c \ube60\uc838\ub098\uac00\ub294 \uac83( \uc774\uadf8\ub808\uc2a4 )\uc740 \uc5ec\uc804\ud788 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. IPv6 \ud658\uacbd\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc8fc\uc18c\ub97c \uc778\ud130\ub137\uc73c\ub85c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubc0f \ud30c\ub4dc\uc640 \uc5f0\uacb0\ub41c IPv6 \uc8fc\uc18c\ub294 \ud37c\ube14\ub9ad\uc785\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 VPC\uc5d0 egress-only internet gateways (EIGW) \ub97c \uad6c\ud604\ud558\uc5ec \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud558\ub294 \ub3d9\uc2dc\uc5d0 \ub4e4\uc5b4\uc624\ub294 \ud2b8\ub798\ud53d\uc740 \ubaa8\ub450 \ucc28\ub2e8\ud568\uc73c\ub85c\uc368 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. IPv6 \uc11c\ube0c\ub137 \uad6c\ud604\uc758 \ubaa8\ubc94 \uc0ac\ub840\ub294 VPC \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"VPC \uad6c\uc131"},{"location":"networking/subnets/index.kr/#vpc_3","text":"","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uc138 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c VPC\uc640 \uc11c\ube0c\ub137\uc744 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."},{"location":"networking/subnets/index.kr/#_5","text":"\ub3d9\uc77c\ud55c \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \ub178\ub4dc\uc640 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c)\uac00 \ubaa8\ub450 \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 kubernetes.io/role/elb \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\uc5ec \uc778\ud130\ub137\uc5d0 \uc5f0\uacb0\ub41c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uad6c\uc131\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud37c\ube14\ub9ad, \ud504\ub77c\uc774\ube57 \ub610\ub294 \ub458 \ub2e4 (\ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57)\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud37c\ube14\ub9ad \uc11c\ube0c\ub137\ub9cc \uc0ac\uc6a9"},{"location":"networking/subnets/index.kr/#_6","text":"\ub178\ub4dc\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0dd\uc131\ub418\ub294 \ubc18\uba74, \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub294 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \ub300\ud55c \ud37c\ube14\ub9ad, \ud504\ub77c\uc774\ube57 \ub610\ub294 \ub458 \ub2e4(\ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57) \uc561\uc138\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \uad6c\uc131\uc5d0 \ub530\ub77c \ub178\ub4dc \ud2b8\ub798\ud53d\uc740 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 ENI\ub97c \ud1b5\ud574 \ub4e4\uc5b4\uc635\ub2c8\ub2e4.","title":"\ud504\ub77c\uc774\ube57 \ubc0f \ud37c\ube14\ub9ad \uc11c\ube0c\ub137 \uc0ac\uc6a9"},{"location":"networking/subnets/index.kr/#_7","text":"\ub178\ub4dc\uc640 \uc778\uadf8\ub808\uc2a4 \ubaa8\ub450 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. [ kubernetes.io/role/internal-elb ] (http://kubernetes.io/role/internal-elb:1) \uc11c\ube0c\ub137 \ud0dc\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub0b4\ubd80\uc6a9 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc811\uadfc\ud558\ub824\uba74 VPN \uc5f0\uacb0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. EC2\uc640 \ubaa8\ub4e0 Amazon ECR \ubc0f S3 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud574 AWS PrivateLink \ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub9cc \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc804 EKS \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 \uc694\uad6c \uc0ac\ud56d \uc744 \uac80\ud1a0\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.","title":"\ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\ub9cc \uc0ac\uc6a9"},{"location":"networking/subnets/index.kr/#vpc_4","text":"\uc5ec\ub7ec VPC\uc640 \uc774\ub7ec\ud55c VPC\uc5d0 \ubcc4\ub3c4\uc758 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud574\uc57c \ud558\ub294 \uc2dc\ub098\ub9ac\uc624\uac00 \ub9ce\uc774 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ubcf4\uc548, \ube4c\ub9c1, \ub2e4\uc911 \uc9c0\uc5ed \ub610\ub294 \ub0b4\ubd80 chargeback \uc694\uad6c \uc0ac\ud56d\uc744 \ub9cc\uc871\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc5ec\ub7ec VPC\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. VPC-VPC \uc5f0\uacb0 \uac00\uc774\ub4dc \uc5d0 \uc5b8\uae09\ub41c \uc124\uacc4 \ud328\ud134\uc744 \ub530\ub77c \uc5ec\ub7ec \uac1c\uc758 Amazon VPC\ub97c \ubcf4\ub2e4 \ud070 \uac00\uc0c1 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \ud1b5\ud569\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC \uc5f0\uacb0\uc740 \uc5f0\uacb0 \uc911\uc778 \uac01 VPC\uc5d0 \ub300\ud574 \uc911\ubcf5\ub418\uc9c0 \uc54a\ub294 IP \ubc94\uc704\ub97c \uc0ac\uc6a9\ud560 \ub54c \uac00\uc7a5 \uc798 \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. \uc6b4\uc601 \ud6a8\uc728\uc131\uc744 \uc704\ud574 EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ub178\ub4dc\ub97c \uacb9\uce58\uc9c0 \uc54a\ub294 IP \ubc94\uc704\uc5d0 \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub77c\uc6b0\ud305 \uac00\ub2a5\ud55c RFC1918 IP \uc8fc\uc18c\ub97c \uc720\uc9c0\ud558\uba74\uc11c \uc911\ubcf5\ub418\ub294 CIDR \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud574 \ud504\ub77c\uc774\ube57 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ub4dc\uc5d0\uc11c \ud2b8\ub79c\uc9d3 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc640 \ud568\uaed8 VPC CNI\ub97c \uc0ac\uc6a9\ud558\uc5ec EKS\uc758 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud1b5\ud569\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud604\uc7ac \uc11c\ube44\uc2a4 \uc81c\uacf5\uc790\uc774\uba70, \ubcc4\ub3c4\uc758 \uacc4\uc815\uc73c\ub85c \uace0\uac1d VPC\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \ubc0f \uc778\uadf8\ub808\uc2a4(ALB \ub610\ub294 NLB)\ub97c \uacf5\uc720\ud558\ub824\ub294 \uacbd\uc6b0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc11c\ube44\uc2a4\ub85c\ub3c4 \uc54c\ub824\uc9c4 AWS PrivateLink \ub97c \ud65c\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud558\uc138\uc694.","title":"VPC\uac04 \ud1b5\uc2e0"},{"location":"networking/subnets/index.kr/#vpc_5","text":"\ub9ce\uc740 \uae30\uc5c5\uc774 AWS \uc870\uc9c1 \ub0b4 \uc5ec\ub7ec AWS \uacc4\uc815\uc758 \ub124\ud2b8\uc6cc\ud06c \uad00\ub9ac\ub97c \uac04\uc18c\ud654\ud558\uace0, \ube44\uc6a9\uc744 \uc808\uac10\ud558\uace0, \ubcf4\uc548\uc744 \uac1c\uc120\ud558\uae30 \uc704\ud55c \uc218\ub2e8\uc73c\ub85c \uacf5\uc720\uc6a9 Amazon VPC\ub97c \ucc44\ud0dd\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub4e4\uc740 AWS Resource Access Manager(RAM)\ub97c \ud65c\uc6a9\ud558\uc5ec \uc9c0\uc6d0\ub418\ub294 AWS \ub9ac\uc18c\uc2a4 \ub97c \uac1c\ubcc4 AWS \uacc4\uc815, \uc870\uc9c1 \ub2e8\uc704(OU) \ub610\ub294 \uc804\uccb4 AWS \uc870\uc9c1\uacfc \uc548\uc804\ud558\uac8c \uacf5\uc720\ud569\ub2c8\ub2e4. AWS RAM\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 AWS \uacc4\uc815\uc758 \uacf5\uc720\uc6a9 VPC \uc11c\ube0c\ub137\uc5d0 Amazon EKS \ud074\ub7ec\uc2a4\ud130, \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f \uae30\ud0c0 \uc9c0\uc6d0 AWS \ub9ac\uc18c\uc2a4 (\uc608: \ub85c\ub4dc\ubc38\ub7f0\uc11c, \ubcf4\uc548 \uadf8\ub8f9, \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub4f1) \ub97c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc740 \uc0c1\uc704 \uc218\uc900 \uc544\ud0a4\ud14d\ucc98\uc758 \uc608\ub97c \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc911\uc559 \ub124\ud2b8\uc6cc\ud06c \ud300\uc740 VPC, \uc11c\ube0c\ub137 \ub4f1\uacfc \uac19\uc740 \ub124\ud2b8\uc6cc\ud0b9 \uad6c\uc870\ub97c \uc81c\uc5b4\uace0, \ub3d9\uc2dc\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 \ud50c\ub7ab\ud3fc \ud300\uc740 \uac01\uc790\uc758 AWS \uacc4\uc815\uc5d0 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0 \ub300\ud55c \uc804\uccb4 \uc124\uba85\uc740 \uc774 github \uc800\uc7a5\uc18c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \uacc4\uc815\uc5d0\uc11c\uc758 VPC \uacf5\uc720"},{"location":"networking/subnets/index.kr/#_8","text":"Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc640 \uc6cc\ucee4 \ub178\ub4dc\ub294 \ubaa8\ub450 \ub3d9\uc77c\ud55c VPC\uc758 \uacf5\uc720\uc6a9 \uc11c\ube0c\ub137 \ub0b4\uc5d0\uc11c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 \uc5ec\ub7ec VPC\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 AWS VPC \ubcf4\uc548 \uadf8\ub8f9(SG)\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ucee4 \ub178\ub4dc \uc0ac\uc774\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc6cc\ucee4 \ub178\ub4dc, \uae30\ud0c0 VPC \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 IP \uc8fc\uc18c \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158/\ucc38\uc5ec\uc790(participant) \uacc4\uc815\uc5d0\uc11c \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ud30c\ub4dc\uc5d0 \uc0ac\uc6a9\ud560 \ubcf4\uc548 \uadf8\ub8f9\ub3c4 \ucc38\uc5ec\uc790 \uacc4\uc815\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9 \ub0b4\uc5d0\uc11c \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \uaddc\uce59\uc744 \uad6c\uc131\ud558\uc5ec \uc911\uc559 VPC \uacc4\uc815\uc5d0 \uc788\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \uc1a1\uc218\uc2e0\ub418\ub294 \ud544\uc694\ud55c \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \ucc38\uc5ec\uc790 \uacc4\uc815 \ub0b4\uc5d0 IAM \uc5ed\ud560 \ubc0f \uad00\ub828 \uc815\ucc45\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c IAM \uc5ed\ud560 \ubc0f \uc815\ucc45\uc740 Amazon EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc640 Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub178\ub4dc \ubc0f \ud30c\ub4dc\uc5d0 \ud544\uc694\ud55c \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uae30 \uc704\ud574 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc774 \uad8c\ud55c\uc744 \ud1b5\ud574 Amazon EKS\ub294 \uc0ac\uc6a9\uc790\ub97c \ub300\uc2e0\ud558\uc5ec \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc811\uadfc \ubc29\uc2dd\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0\uc11c Amazon S3 \ubc84\ud0b7, Dynamodb \ud14c\uc774\ube14 \ub4f1\uacfc \uac19\uc740 AWS \ub9ac\uc18c\uc2a4\uc5d0 \uacc4\uc815 \uac04 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45 \uc811\uadfc\ubc95 : AWS \uc11c\ube44\uc2a4\uac00 \ub9ac\uc18c\uc2a4 \uc815\ucc45\uc744 \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0 \uc801\uc808\ud55c \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45\uc744 \ucd94\uac00\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IAM \uc5ed\ud560\uc5d0 \ub300\ud55c \uacc4\uc815 \uac04 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub294 OIDC \uacf5\uae09\uc790, IAM \uc5ed\ud560 \ubc0f \uad8c\ud55c \uc815\ucc45\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uacc4\uc815\uc5d0 \uc874\uc7ac\ud558\uac8c \ub429\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc815\ucc45\uc744 \uc9c0\uc6d0\ud558\ub294 AWS \uc11c\ube44\uc2a4\ub97c \ucc3e\uc73c\ub824\uba74 IAM\uacfc \ud568\uaed8 \uc791\ub3d9\ud558\ub294 AWS \uc11c\ube44\uc2a4 \ub97c \ucc38\uc870\ud558\uace0 \ub9ac\uc18c\uc2a4 \uae30\ubc18 \uc5f4\uc5d0\uc11c '\uc608'\ub77c\uace0 \ud45c\uc2dc\ub41c \uc11c\ube44\uc2a4\ub97c \ucc3e\uc544\ubcf4\uc2ed\uc2dc\uc624. OIDC \uacf5\uae09\uc790 \uc811\uadfc \ubc29\uc2dd : OIDC \uacf5\uae09\uc790, IAM \uc5ed\ud560, \uad8c\ud55c \ubc0f \uc2e0\ub8b0 \uc815\ucc45\uacfc \uac19\uc740 IAM \ub9ac\uc18c\uc2a4\ub294 \ub9ac\uc18c\uc2a4\uac00 \uc788\ub294 \ub2e4\ub978 \ucc38\uc5ec\uc790 AWS \uacc4\uc815\uc5d0\uc11c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc5ed\ud560\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uacc4\uc815\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc5b4 \uacc4\uc815 \uac04 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc704\ud55c \uad50\ucc28 \uacc4\uc815 \uac04 IAM \uc5ed\ud560 \ube14\ub85c\uadf8\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. Amazon Elastic Loadbalancer(ELB) \ub9ac\uc18c\uc2a4(ALB \ub610\ub294 NLB)\ub97c \ubc30\ud3ec\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub610\ub294 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 ELB \ub9ac\uc18c\uc2a4\ub97c \ubc30\ud3ec\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc548\ub0b4\ub294 \uad50\ucc28 \uacc4\uc815 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud1b5\ud574 Amazon EKS \ud30c\ub4dc \ub178\ucd9c \uc548\ub0b4\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc740 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub9ac\uc18c\uc2a4\uc758 \ubcf4\uc548 \uad6c\uc131\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\ubbc0\ub85c \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. Amazon VPC CNI\uc758 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uae30\ub2a5(custom networking feature) \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc911\uc559 \ub124\ud2b8\uc6cc\ud0b9 \uacc4\uc815\uc5d0 \ub098\uc5f4\ub41c \uac00\uc6a9 \uc601\uc5ed (AZ) ID \ub9e4\ud551\uc744 \uc0ac\uc6a9\ud558\uc5ec \uac01\uac01\uc758 ENIConfig \ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ubb3c\ub9ac\uc801 AZ\ub97c \uac01 AWS \uacc4\uc815\uc758 AZ \uc774\ub984\uc5d0 \ubb34\uc791\uc704\ub85c \ub9e4\ud551\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"\uacf5\uc720\uc6a9 \uc11c\ube0c\ub137 \uc0ac\uc6a9 \uc2dc \uace0\ub824 \uc0ac\ud56d"},{"location":"networking/subnets/index.kr/#_9","text":"\ubcf4\uc548 \uadf8\ub8f9 \uc740 \uc5f0\uacb0\ub41c \ub9ac\uc18c\uc2a4\uc5d0 \ub4e4\uc5b4\uc624\uac70\ub098 \ub098\uac00\ub294 \uac83\uc774 \ud5c8\uc6a9\ub418\ub294 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub178\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 Amazon EKS\ub294 eks-cluster-sg-my-cluster-uniqueID \ub77c\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \uc774\ub7ec\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad00\ub9ac\ud615 ENI \ubc0f \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc640 \ub178\ub4dc \uac04\uc5d0 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \uc790\uc720\ub86d\uac8c \uc804\ub2ec\ub418\uace0, \ubaa8\ub4e0 \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc774 \ubaa8\ub4e0 \ubaa9\uc801\uc9c0\ub85c \uc804\ub2ec\ub418\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc790\uccb4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud558\ub294 \uacbd\uc6b0 \ubcf4\uc548 \uadf8\ub8f9 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"\ubcf4\uc548 \uadf8\ub8f9"},{"location":"networking/subnets/index.kr/#_10","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/subnets/index.kr/#az","text":"AWS \ub9ac\uc804\uc740 \ubb3c\ub9ac\uc801\uc73c\ub85c \ubd84\ub9ac\ub418\uace0 \uaca9\ub9ac\ub41c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed (AZ) \uc744 \uc81c\uacf5\ud558\uba70, \uc774\ub7ec\ud55c \uac00\uc6a9 \uc601\uc5ed\uc740 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc9e7\uace0 \ucc98\ub9ac\ub7c9\uc774 \ub192\uc73c\uba70 \uc911\ubcf5\uc131\uc774 \ub192\uc740 \ub124\ud2b8\uc6cc\ud0b9\uc73c\ub85c \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uac00\uc6a9 \uc601\uc5ed\uc744 \uc0ac\uc6a9\ud558\uba74 \uac00\uc6a9 \uc601\uc5ed \uac04\uc5d0 \uc911\ub2e8 \uc5c6\uc774 \uc790\ub3d9\uc73c\ub85c \uc7a5\uc560 \uc870\uce58\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uacc4\ud558\uace0 \uc6b4\uc601\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\ub294 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubc30\ud3ec\ud560 \uac83\uc744 \uac15\ub825\ud788 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uc11c\ube0c\ub137\uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Kubelet\uc740 topology.kubernetes.io/region=us-west-2 , topology.kubernetes.io/zone=us-west-2d \uc640 \uac19\uc740 \ub808\uc774\ube14\uc744 \ub178\ub4dc \uc624\ube0c\uc81d\ud2b8\uc5d0 \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud569\ub2c8\ub2e4. \ub178\ub4dc \ub808\uc774\ube14\uc744 Pod topology spread constraints \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uac00 \uc5ec\ub7ec \uc601\uc5ed\uc5d0 \ubd84\uc0b0\ub418\ub294 \ubc29\uc2dd\uc744 \uc81c\uc5b4\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud78c\ud2b8\ub97c \ud1b5\ud574 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec \uac00 \uc608\uc0c1 \uac00\uc6a9\uc131\uc744 \ub192\uc774\uae30 \uc704\ud574 \ud30c\ub4dc\ub97c \ubc30\uce58\ud558\uc5ec \uc0c1\uad00 \uad00\uacc4\uac00 \uc788\ub294 \uc7a5\uc560\uac00 \uc804\uccb4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc704\ud5d8\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130 \ubc0f AZ \ubd84\uc0b0 \uc81c\uc57d \uc870\uac74\uc758 \uc608\ub97c \ubcf4\ub824\uba74 \ud30c\ub4dc\uc5d0 \ub178\ub4dc \ud560\ub2f9 \uc744 \ucc38\uc870\ud569\ub2c8\ub2e4. \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uc11c\ube0c\ub137 \ub610\ub294 \uac00\uc6a9 \uc601\uc5ed\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc774 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ub178\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ubc30\uce58\ub429\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c EKS \uc9c0\uc6d0\uc740 \uac00\uc6a9 \uc6a9\ub7c9\uc744 \uae30\uc900\uc73c\ub85c \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc0b0\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 topology spread constraints\ub97c \uc815\uc758\ud558\ub294 \uacbd\uc6b0 Karpenter \ub294 \ub178\ub4dc\ub97c \uc9c0\uc815\ub41c AZ\ub85c \ud655\uc7a5\ud558\uc5ec AZ \ubd84\uc0b0 \ubc30\uce58\ub97c \uc900\uc218\ud569\ub2c8\ub2e4. AWS Elastic Loadbalancer\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc6a9 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc758\ud574 \uad00\ub9ac\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc704\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\ub4dc \ubc38\ub7f0\uc11c(ALB) \uc640 \ub85c\ub4dc\ubc38\ub7f0\uc11c \uc720\ud615\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub97c \uc704\ud55c \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c(NLB) \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. Elastic Loadbalancer \ucee8\ud2b8\ub864\ub7ec\ub294 \ud0dc\uadf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137\uc744 \uac80\uc0c9\ud569\ub2c8\ub2e4. ELB \ucee8\ud2b8\ub864\ub7ec\uac00 \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \ucd5c\uc18c \ub450 \uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed (AZ) \uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc9c0\ub9ac\uc801 \uc774\uc911\ud654\uc758 \uc548\uc804\uc131\uacfc \uc548\uc815\uc131\uc744 \ud65c\uc6a9\ud558\ub824\uba74 \ucd5c\uc18c \ub450 \uac1c\uc758 AZ\uc5d0 \uc11c\ube0c\ub137\uc744 \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc911 AZ \ubc30\ud3ec \uace0\ub824"},{"location":"networking/subnets/index.kr/#_11","text":"\ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uacfc \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc744 \ubaa8\ub450 \ud3ec\ud568\ud558\ub294 VPC\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ud06c\ub85c\ub4dc\ub97c EKS\uc5d0 \ubc30\ud3ec\ud558\ub294 \ub370 \uac00\uc7a5 \uc801\ud569\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc11c\ub85c \ub2e4\ub978 \ub450 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ucd5c\uc18c \ub450 \uac1c\uc758 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uacfc \ub450 \uac1c\uc758 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc744 \uc124\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc758 \ub77c\uc6b0\ud305 \ud14c\uc774\ube14\uc5d0\ub294 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774\uc5d0 \ub300\ud55c \uacbd\ub85c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\ub294 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ud1b5\ud574 \uc778\ud130\ub137\uacfc \uc0c1\ud638\uc791\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc740 IPv6 \ud658\uacbd (EIGW)\uc758 \uc678\ubd80 \uc804\uc6a9 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc5d0\uc11c \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \ub178\ub4dc\ub97c \uc778\uc2a4\ud134\uc2a4\ud654\ud558\uba74 \ub178\ub4dc\uc5d0 \ub300\ud55c \ud2b8\ub798\ud53d\uc744 \ucd5c\ub300\ud55c \uc81c\uc5b4\ud560 \uc218 \uc788\uc73c\uba70 \ub300\ubd80\ubd84\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c)\ub294 \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0\uc11c \uc778\uc2a4\ud134\uc2a4\ud654\ub418\uace0 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud569\ub2c8\ub2e4. \uc5c4\uaca9\ud55c \ubcf4\uc548 \ubc0f \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \ubaa8\ub4dc\ub97c \uace0\ub824\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc5d0\uc11c\ub294 \uc138 \uac1c\uc758 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc774 AWS \ub9ac\uc804 VPC \ub0b4\uc758 \uc11c\ub85c \ub2e4\ub978 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ub41c \ub9ac\uc18c\uc2a4\ub294 \uc778\ud130\ub137\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc73c\uba70 \uc778\ud130\ub137\uc5d0\uc11c \uc11c\ube0c\ub137\uc758 \ub9ac\uc18c\uc2a4\ub85c\ub3c4 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\ub824\uba74 PrivateLink \uc778\ud130\ud398\uc774\uc2a4 \ubc0f/\ub610\ub294 \uac8c\uc774\ud2b8\uc6e8\uc774 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uad6c\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub0b4\ubd80 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uac00 \ud2b8\ub798\ud53d\uc744 \ud30c\ub4dc\ub85c \ub9ac\ub514\ub809\uc158\ud558\ub3c4\ub85d \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\uac00 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 ( `kubernetes.io/role/internal-elb: 1 ) \ud0dc\uadf8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub4f1\ub85d\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc804\uccb4 \uc694\uad6c \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d\uc740 \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"\ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc \ubc30\ud3ec"},{"location":"networking/subnets/index.kr/#_12","text":"Amazon EKS\ub294 \ud37c\ube14\ub9ad \uc804\uc6a9, \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57, \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uae30\ubcf8 \ubaa8\ub4dc\ub294 \ud37c\ube14\ub9ad \uc804\uc6a9\uc774\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc\ub85c \uad6c\uc131\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 VPC \ub0b4\uc5d0\uc11c\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ud638\ucd9c(\uc608: \ub178\ub4dc\uc640 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uac04 \ud1b5\uc2e0)\uc5d0 \ud504\ub77c\uc774\ube57 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud65c\uc6a9\ud558\uace0 \ud2b8\ub798\ud53d\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 VPC \ub0b4\uc5d0 \uc720\uc9c0\ub418\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74 \ud074\ub7ec\uc2a4\ud130 API \uc11c\ubc84\ub294 \uc778\ud130\ub137\uc744 \ud1b5\ud574 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CIDR \ube14\ub85d\uc740 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. CIDR \ube14\ub85d \uc81c\ud55c\uc744 \ud3ec\ud568\ud558\uc5ec \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4\ub97c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubd05\ub2c8\ub2e4. \ubcf4\uc548 \ubc0f \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ud504\ub77c\uc774\ube57 \uc804\uc6a9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \ud45c\uc2dc\ub41c \uc635\uc158 \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud558\uc5ec API \uc11c\ubc84\uc5d0 \ud504\ub77c\uc774\ube57\ud558\uac8c \uc5f0\uacb0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc758 \ud37c\ube14\ub9ad \ubc0f \ud504\ub77c\uc774\ube57 \ubaa8\ub4dc \uace0\ub824"},{"location":"networking/subnets/index.kr/#ip","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ucd5c\ub300 4\uac1c\uc758 ENI\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uba74 Amazon EKS\uc5d0\uc11c \uc2e0\uaddc X-ENI\ub97c \uc0dd\uc131\ud558\uace0 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc131\uacf5\ud558\uba74 \uae30\uc874 X-ENI\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\uc6a9\ud558\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 /28(16\uac1c\uc758 IP \uc8fc\uc18c) \ub137\ub9c8\uc2a4\ud06c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. VPC\uc640 \uc11c\ube0c\ub137\uc744 \uad6c\ucd95\ud558\uae30 \uc804\uc5d0 \ud544\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc \uaddc\ubaa8\uc5d0\uc11c \uc5ed\ubc29\ud5a5\uc73c\ub85c \uc791\uc5c5\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\u201cekstcl\u201d\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c /19 \uc11c\ube0c\ub137\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. /19\uc758 \ub137\ub9c8\uc2a4\ud06c\ub294 \ub300\ubd80\ubd84\uc758 \uc6cc\ud06c\ub85c\ub4dc \uc720\ud615\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \ud30c\ub4dc IP \ud560\ub2f9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon VPC CNI \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137 \ud06c\uae30 \uc870\uc815\uc744 \uc704\ud574 EKS\uc5d0\uc11c \uac1c\ubc1c\ud55c \ub3c4\uc6b0\uae34 subnet-calc \uc758 \uc0ac\uc6a9\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. IPv6 VPC\uc758 \uacbd\uc6b0 \uc11c\ube0c\ub137\uc758 CIDR \ube14\ub85d\uc758 \uace0\uc815 Prefix \uae38\uc774\ub294 /64 \uc785\ub2c8\ub2e4. IP \uc0ac\uc6a9\uc744 \uadf9\ub300\ud654\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc5d0 \ub178\ub4dc\uc640 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.","title":"\uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \ud655\uc778"},{"location":"networking/subnets/index.kr/#_13","text":"Amazon EKS\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9 \uc0ac\uc6a9\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc740 \ub178\ub4dc\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uac04\uc758 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc870\uc9c1 \ub0b4\uc5d0\uc11c \uac1c\ubc29\ud615 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ud3ec\ud2b8 \uc694\uad6c \uc0ac\ud56d \uc744 \ud655\uc778\ud558\uace0 \uaddc\uce59\uc744 \uc218\ub3d9\uc73c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \uc911\uc5d0 \uc81c\uacf5\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad00\ub9ac\ud615 \uc778\ud130\ud398\uc774\uc2a4(X-ENI) \uc5d0 \uc801\uc6a9\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548\uadf8\ub8f9\uc774 \ub178\ub4dc\uc640 \uc989\uc2dc \uc5f0\uacb0\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud560 \ub54c\ub294 \uc218\ub3d9\uc73c\ub85c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc5f0\uacb0 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uc911 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubcf4\uc548 \uadf8\ub8f9\uc758 Karpenter \ub178\ub4dc \ud15c\ud50c\ub9bf \uac80\uc0c9\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 SecurityGroupSelector \ub97c \ud65c\uc131\ud654\ud560 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ub178\ub4dc \uac04 \ud1b5\uc2e0 \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud558\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ubd80\ud2b8\uc2a4\ud2b8\ub7a9 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0 \ub178\ub4dc\uac00 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc778\ud130\ub137 \uc5f0\uacb0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc628\ud504\ub808\ubbf8\uc2a4 \uc5f0\uacb0 \ubc0f \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac \uc561\uc138\uc2a4\uc640 \uac19\uc740 \uc678\ubd80 \uc561\uc138\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc744 \ud3c9\uac00\ud558\uace0 \uaddc\uce59\uc744 \uc801\uc808\ud558\uac8c \uc124\uc815\ud569\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud504\ub85c\ub355\uc158\uc5d0 \uc801\uc6a9\ud558\uae30 \uc804\uc5d0 \uac1c\ubc1c \ud658\uacbd\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0\uc744 \uc8fc\uc758 \uae4a\uac8c \ud655\uc778\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\ubcf4\uc548 \uadf8\ub8f9\uc744 \uc2e0\uc911\ud558\uac8c \uad6c\uc131"},{"location":"networking/subnets/index.kr/#nat","text":"\ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137 (IPv4 \ubc0f IPv6) \uc5d0 \ub178\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uacbd\uc6b0 \uac01 \uac00\uc6a9 \uc601\uc5ed(AZ) \uc5d0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \ub9cc\ub4e4\uc5b4 \uc601\uc5ed \ub3c5\ub9bd\uc801 \uc544\ud0a4\ud14d\ucc98\ub97c \ubcf4\uc7a5\ud558\uace0 AZ \uac04 \ube44\uc6a9\uc744 \uc808\uac10\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. AZ\uc758 \uac01 NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub294 \uc774\uc911\ud654\ub85c \uad6c\ud604\ub429\ub2c8\ub2e4.","title":"\uac01 \uac00\uc6a9 \uc601\uc5ed\uc5d0 NAT \uac8c\uc774\ud2b8\uc6e8\uc774 \ubc30\ud3ec"},{"location":"networking/subnets/index.kr/#cloud9","text":"AWS Cloud9\ub294 AWS Systems Manager\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\uadf8\ub808\uc2a4 \uc561\uc138\uc2a4 \uc5c6\uc774 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc548\uc804\ud558\uac8c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6f9 \uae30\ubc18 IDE\uc785\ub2c8\ub2e4. Cloud9 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc774\uadf8\ub808\uc2a4\ub97c \ube44\ud65c\uc131\ud654\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Cloud9\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc640 \uc11c\ube0c\ub137\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.","title":"Cloud9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud504\ub77c\uc774\ube57 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4"},{"location":"networking/vpc-cni/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Amazon VPC CNI \u00b6 Amazon EKS implements cluster networking through the Amazon VPC Container Network Interface (VPC CNI) plugin. The CNI plugin allows Kubernetes Pods to have the same IP address as they do on the VPC network. More specifically, all containers inside the Pod share a network namespace, and they can communicate with each-other using local ports. Amazon VPC CNI has two components: CNI Binary, which will setup Pod network to enable Pod-to-Pod communication. The CNI binary runs on a node root file system and is invoked by the kubelet when a new Pod gets added to, or an existing Pod removed from the node. ipamd, a long-running node-local IP Address Management (IPAM) daemon and is responsible for: managing ENIs on a node, and maintaining a warm-pool of available IP addresses or prefix When an instance is created, EC2 creates and attaches a primary ENI associated with a primary subnet. The primary subnet may be public or private. The Pods that run in hostNetwork mode use the primary IP address assigned to the node primary ENI and share the same network namespace as the host. The CNI plugin manages Elastic Network Interfaces (ENI) on the node. When a node is provisioned, the CNI plugin automatically allocates a pool of slots (IPs or Prefix\u2019s) from the node\u2019s subnet to the primary ENI. This pool is known as the warm pool , and its size is determined by the node\u2019s instance type. Depending on CNI settings, a slot may be an IP address or a prefix. When a slot on an ENI has been assigned, the CNI may attach additional ENIs with warm pool of slots to the nodes. These additional ENIs are called Secondary ENIs. Each ENI can only support a certain number of slots, based on instance type. The CNI attaches more ENIs to instances based on the number of slots needed, which usually corresponds to the number of Pods. This process continues until the node can no longer support additional ENI. The CNI also pre-allocates \u201cwarm\u201d ENIs and slots for faster Pod startup. Note each instance type has a maximum number of ENIs that may be attached. This is one constraint on Pod density (number of Pods per node), in addition to compute resources. The maximum number of network interfaces, and the maximum number of slots that you can use varies by the type of EC2 Instance. Since each Pod consumes an IP address on a slot, the number of Pods you can run on a particular EC2 Instance depends on how many ENIs can be attached to it and how many slots each ENI supports. We suggest setting the maximum Pods per EKS user guide to avoid exhaustion of the instance\u2019s CPU and memory resources. Pods using hostNetwork are excluded from this calculation. You may consider using a script called max-pod-calculator.sh to calculate EKS\u2019s recommended maximum Pods for a given instance type. Overview \u00b6 Secondary IP mode is the default mode for VPC CNI. This guide provides a generic overview of VPC CNI behavior when Secondary IP mode is enabled. The functionality of ipamd (allocation of IP addresses) may vary depending on the configuration settings for VPC CNI, such as Prefix Mode , Security Groups Per Pod , and Custom Networking . The Amazon VPC CNI is deployed as a Kubernetes Daemonset named aws-node on worker nodes. When a worker node is provisioned, it has a default ENI, called the primary ENI, attached to it. The CNI allocates a warm pool of ENIs and secondary IP addresses from the subnet attached to the node\u2019s primary ENI. By default, ipamd attempts to allocate an additional ENI to the node. The IPAMD allocates additional ENI when a single Pod is scheduled and assigned a secondary IP address from the primary ENI. This \"warm\" ENI enables faster Pod networking. As the pool of secondary IP addresses runs out, the CNI adds another ENI to assign more. The number of ENIs and IP addresses in a pool are configured through environment variables called WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET . The aws-node Daemonset will periodically check that a sufficient number of ENIs are attached. A sufficient number of ENIs are attached when all of the WARM_ENI_TARGET , or WARM_IP_TARGET and MINIMUM_IP_TARGET conditions are met. If there are insufficient ENIs attached, the CNI will make an API call to EC2 to attach more until MAX_ENI limit is reached. WARM_ENI_TARGET - Integer, Values >0 indicate requirement Enabled The number of Warm ENIs to be maintained. An ENI is \u201cwarm\u201d when it is attached as a secondary ENI to a node, but it is not in use by any Pod. More specifically, no IP addresses of the ENI have been associated with a Pod. Example: Consider an instance with 2 ENIs, each ENI supporting 5 IP addresses. WARM_ENI_TARGET is set to 1. If exactly 5 IP addresses are associated with the instance, the CNI maintains 2 ENIs attached to the instance. The first ENI is in use, and all 5 possible IP addresses of this ENI are used. The second ENI is \u201cwarm\u201d with all 5 IP addresses in pool. If another Pod is launched on the instance, a 6th IP address will be needed. The CNI will assign this 6th Pod an IP address from the second ENI and from 5 IPs from the pool. The second ENI is now in use, and no longer in a \u201cwarm\u201d status. The CNI will allocate a 3rd ENI to maintain at least 1 warm ENI. Note The warm ENIs still consume IP addresses from the CIDR of your VPC. IP addresses are \u201cunused\u201d or \u201cwarm\u201d until they are associated with a workload, such as a Pod. WARM_IP_TARGET , Integer, Values >0 indicate requirement Enabled The number of Warm IP addresses to be maintained. A Warm IP is available on an actively attached ENI, but has not been assigned to a Pod. In other words, the number of Warm IPs available is the number of IPs that may be assigned to a Pod without requiring an additional ENI. Example: Consider an instance with 1 ENI, each ENI supporting 20 IP addresses. WARM_IP_TARGET is set to 5. WARM_ENI_TARGET is set to 0. Only 1 ENI will be attached until a 16th IP address is needed. Then, the CNI will attach a second ENI, consuming 20 possible addresses from the subnet CIDR. MINIMUM_IP_TARGET , Integer, Values >0 indicate requirement Enabled The minimum number of IP addresses to be allocated at any time. This is commonly used to front-load the assignment of multiple ENIs at instance launch. Example: Consider a newly launched instance. It has 1 ENI and each ENI supports 10 IP addresses. MINIMUM_IP_TARGET is set to 100. The ENI immediately attaches 9 more ENIs for a total of 100 addresses. This happens regardless of any WARM_IP_TARGET or WARM_ENI_TARGET values. This project includes a Subnet Calculator Excel Document . This calculator document simulates the IP address consumption of a specified workload under different ENI configuration options, such as WARM_IP_TARGET and WARM_ENI_TARGET . When Kubelet receives an add Pod request, the CNI binary queries ipamd for an available IP address, which ipamd then provides to the Pod. The CNI binary wires up the host and Pod network. Pods deployed on a node are, by default, assigned to the same security groups as the primary ENI. Alternatively, Pods may be configured with different security groups. As the pool of IP addresses is depleted, the plugin automatically attaches another elastic network interface to the instance and allocates another set of secondary IP addresses to that interface. This process continues until the node can no longer support additional elastic network interfaces. When a Pod is deleted, VPC CNI places the Pod\u2019s IP address in a 30-second cool down cache. The IPs in a cool down cache are not assigned to new Pods. When the cooling-off period is over, VPC CNI moves Pod IP back to the warm pool. The cooling-off period prevents Pod IP addresses from being recycled prematurely and allows kube-proxy on all cluster nodes to finish updating the iptables rules. When the number of IPs or ENIs exceeds the number of warm pool settings, the ipamd plugin returns IPs and ENIs to the VPC. As described above in Secondary IP mode, each Pod receives one secondary private IP address from one of the ENIs attached to an instance. Since each Pod uses an IP address, the number of Pods you can run on a particular EC2 Instance depends on how many ENIs can be attached to it and how many IP addresses it supports. The VPC CNI checks the limits file to find out how many ENIs and IP addresses are allowed for each type of instance. You can use the following formula to determine maximum number of Pods you can deploy on a node. (Number of network interfaces for the instance type \u00d7 (the number of IP addresses per network interface - 1)) + 2 The +2 indicates Pods that require host networking, such as kube-proxy and VPC CNI. Amazon EKS requires kube-proxy and VPC CNI to be operating on each node, and these requirements are factored into the max-pods value. If you want to run additional host networking pods, consider updating the max-pods value. The +2 indicates Kubernetes Pods that use host networking, such as kube-proxy and VPC CNI. Amazon EKS requires kube-proxy and VPC CNI to be running on every node and are calculated towards max-pods. Consider updating max-pods if you plan to run more host networking Pods. You can specify --kubelet-extra-args \"\u2014max-pods=110\" as user data in the launch template. As an example, on a cluster with 3 c5.large nodes (3 ENIs and max 10 IPs per ENI), when the cluster starts up and has 2 CoreDNS pods, the CNI will consume 49 IP addresses and keeps them in warm pool. The warm pool enables faster Pod launches when the application is deployed. Node 1 (with CoreDNS pod): 2 ENIs, 20 IPs assigned Node 2 (with CoreDNS pod): 2 ENIs, 20 IPs assigned Node 3 (no Pod): 1 ENI. 10 IPs assigned. Keep in mind that infrastructure pods, often running as daemon sets, each contribute to the max-pod count. These can include: CoreDNS Amazon Elastic LoadBalancer Operational pods for metrics-server We suggest that you plan your infrastructure by combining these Pods' capacities. For a list of the maximum number of Pods supported by each instance type, see eni-max-Pods.txt on GitHub. Recommendations \u00b6 Use Secondary IP Mode when \u00b6 Secondary IP mode is an ideal configuration option for ephemeral EKS clusters. Greenfield customers who are either new to EKS or in the process of migrating can take advantage of VPC CNI in secondary mode. Avoid Secondary IP Mode when \u00b6 If you are experiencing Pod density issues, we suggest enabling prefix mode. If you are facing IPv4 depletion issues, we advise migrating to IPv6 clusters. If IPv6 is not on the horizon, you may choose to use custom networking. Deploy VPC CNI Managed Add-On \u00b6 When you provision a cluster, Amazon EKS installs VPC CNI automatically. Amazon EKS nevertheless supports managed add-ons that enable the cluster to interact with underlying AWS resources such as computing, storage, and networking. We highly recommend that you deploy clusters with managed add-ons including VPC CNI. Amazon EKS managed add-on offer VPC CNI installation and management for Amazon EKS clusters. Amazon EKS add-ons include the latest security patches, bug fixes, and are validated by AWS to work with Amazon EKS. The VPC CNI add-on enables you to continuously ensure the security and stability of your Amazon EKS clusters and decrease the amount of effort required to install, configure, and update add-ons. Additionally, a managed add-on can be added, updated, or deleted via the Amazon EKS API, AWS Management Console, AWS CLI, and eksctl. You can find the managed fields of VPC CNI using --show-managed-fields flag with the kubectl get command. kubectl get daemonset aws-node --show-managed-fields -n kube-system -o yaml Managed add-ons prevents configuration drift by automatically overwriting configurations every 15 minutes. This means that any changes to managed add-ons, made via the Kubernetes API after add-on creation, will overwrite by the automated drift-prevention process and also set to defaults during add-on update process. The fields managed by EKS are listed under managedFields with manager as EKS. Fields managed by EKS include service account, image, image url, liveness probe, readiness probe, labels, volumes, and volume mounts. Info The most frequently used fields such as WARM_ENI_TARGET, WARM_IP_TARGET, and MINIMUM_IP_TARGET are not managed and will not be reconciled. The changes to these fields will be preserved upon updating of the add-on. We suggest testing the add-on behavior in your non-production clusters for a specific configuration before updating production clusters. Additionally, follow the steps in the EKS user guide for add-on configurations. Migrate to Managed Add-On \u00b6 You will manage the version compatibility and update the security patches of self-managed VPC CNI. To update a self-managed add-on, you must use the Kubernetes APIs and instructions outlined in the EKS user guide . We recommend migrating to a managed add-on for existing EKS clusters and highly suggest creating a backup of your current CNI settings prior to migration. To configure managed add-ons, you can utilize the Amazon EKS API, AWS Management Console, or AWS Command Line Interface. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml Amazon EKS will replace the CNI configuration settings if the field is listed as managed with default settings. We caution against modifying the managed fields. The add-on does not reconcile configuration fields such as the warm environment variables and CNI modes. The Pods and applications will continue to run while you migrate to a managed CNI. Backup CNI Settings Before Update \u00b6 VPC CNI runs on customer data plane (nodes), and hence Amazon EKS does not automatically update the add-on (managed and self-managed) when new versions are released or after you update your cluster to a new Kubernetes minor version. To update the add-on for an existing cluster, you must trigger an update via update-addon API or clicking update now link in the EKS console for add-ons. If you have deployed self-managed add-on, follow steps mentioned under updating self-managed VPC CNI add-on. We strongly recommend that you update one minor version at a time. For example, if your current minor version is 1.9 and you want to update to 1.11 , you should update to the latest patch version of 1.10 first, then update to the latest patch version of 1.11 . Perform an inspection of the aws-node Daemonset before updating Amazon VPC CNI. Take a backup of existing settings. If using a managed add-on, confirm that you have not updated any settings that Amazon EKS might override. We recommend a post update hook in your automation workflow or a manual apply step after an add-on update. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml For a self-managed add-on, compare the backup with releases on GitHub to see the available versions and familiarize yourself with the changes in the version that you want to update to. We recommend using Helm to manage self-managed add-ons and leverage values files to apply settings. Any update operations involving Daemonset delete will result in application downtime and must be avoided. Understand Security Context \u00b6 We strongly suggest you to understand the security contexts configured for managing VPC CNI efficiently. Amazon VPC CNI has two components CNI binary and ipamd (aws-node) Daemonset. The CNI runs as a binary on a node and has access to node root file system, also has privileged access as it deals with iptables at the node level. The CNI binary is invoked by the kubelet when Pods gets added or removed. The aws-node Daemonset is a long-running process responsible for IP address management at the node level. The aws-node runs in hostNetwork mode and allows access to the loopback device, and network activity of other pods on the same node. The aws-node init-container runs in privileged mode and mounts the CRI socket allowing the Daemonset to monitor IP usage by the Pods running on the node. Amazon EKS is working to remove the privileged requirement of aws-node init container. Additionally, the aws-node needs to update NAT entries and to load the iptables modules and hence runs with NET_ADMIN privileges. Amazon EKS recommends deploying the security policies as defined by the aws-node manifest for IP management for the Pods and networking settings. Please consider updating to the latest version of VPC CNI. Furthermore, please consider opening a GitHub issue if you have a specific security requirement. Use separate IAM role for CNI \u00b6 The AWS VPC CNI requires AWS Identity and Access Management (IAM) permissions. The CNI policy needs to be set up before the IAM role can be used. You can use AmazonEKS_CNI_Policy , which is an AWS managed policy for IPv4 clusters. AmazonEKS CNI managed policy only has permissions for IPv4 clusters. You must create a separate IAM policy for IPv6 clusters with the permissions listed here . By default, VPC CNI inherits the Amazon EKS node IAM role (both managed and self-managed node groups). Configuring a separate IAM role with the relevant policies for Amazon VPC CNI is strongly recommended. If not, the pods of Amazon VPC CNI gets the permission assigned to the node IAM role and have access to the instance profile assigned to the node. The VPC CNI plugin creates and configures a service account called aws-node. By default, the service account binds to the Amazon EKS node IAM role with Amazon EKS CNI policy attached. To use the separate IAM role, we recommend that you create a new service account with Amazon EKS CNI policy attached. To use a new service account you must redeploy the CNI pods . Consider specifying a --service-account-role-arn for VPC CNI managed add-on when creating new clusters. Make sure you remove Amazon EKS CNI policy for both IPv4 and IPv6 from Amazon EKS node role. It is advised that you block access instance metadata to minimize the blast radius of security breach. Handle Liveness/Readiness Probe failures \u00b6 We advise increasing the liveness and readiness probe timeout values (default timeoutSeconds: 10 ) for EKS 1.20 an later clusters to prevent probe failures from causing your application's Pod to become stuck in a containerCreating state. This problem has been seen in data-intensive and batch-processing clusters. High CPU use causes aws-node probe health failures, leading to unfulfilled Pod CPU requests. In addition to modifying the probe timeout, ensure that the CPU resource requests (default CPU: 25m ) for aws-node are correctly configured. We do not suggest updating the settings unless your node is having issues. We highly encourage you to run sudo bash /opt/cni/bin/aws-cni-support.sh on a node while you engage Amazon EKS support. The script will assist in evaluating kubelet logs and memory utilization on the node. Please consider installing SSM Agent on Amazon EKS worker nodes to run the script. Monitor IP Address Inventory \u00b6 You can monitor the IP addresses inventory of subnets using CNI Metrics Helper . maximum number of ENIs the cluster can support number of ENIs already allocated number of IP addresses currently assigned to Pods total and maximum number of IP address available You can also set CloudWatch alarms to get notified if a subnet is running out of IP addresses. Please visit EKS user guide for install instructions of CNI metrics helper . Make sure DISABLE_METRICS variable for VPC CNI is set to false. Plan for Growth \u00b6 We strongly recommend to size your subnets for growth. Right sizing the subnets will prevent your subnets from running out of IP addresses as your Pods and nodes scale. You will not be able to create new Pods or nodes if the subnets don\u2019t have enough available IP addresses. If you need to limit the IP addresses the CNI caches, then you can use warm pool CNI environment variables. If subnets in your VPC run out of available IP addresses, we suggest creating a new subnet using the VPC\u2019s original CIDR blocks. Use the sample EKS Subnet Calculator spreadsheet to plan your network. The spreadsheet calculates IP usage based on workloads and VPC ENI configuration. The IP usage is compared to an IPv4 subnet to determine if the configuration and subnet size is sufficient for your workload. Configure IP and ENI Target values in address constrained environments \u00b6 Warning Improving your VPC design is the recommended response to IP address exhaustion. Consider solutions like IPv6 and Secondary CIDRs. Adjusting these values to minimize the number of Warm IPs should be a temporary solution after other options are excluded. Misconfiguring these values may interfere with cluster operation. In the default configuration, VPC CNI keeps an entire ENI (and associated IPs) in the warm pool. This may consume a large number of IPs, especially on larger instance types. If your cluster subnet has a limited number of free IP addresses, scrutinize these VPC CNI configuration environment variables: WARM_IP_TARGET MINIMUM_IP_TARGET WARM_ENI_TARGET Configure the value of MINIMUM_IP_TARGET to closely match the number of Pods you expect to run on your nodes. Doing so will ensure that as Pods get created, and the CNI can assign IP addresses from the warm pool without calling the EC2 API. Avoid setting the value of WARM_IP_TARGET too low as it will cause additional calls to the EC2 API, and that might cause throttling of the requests. For large clusters use along with MINIMUM_IP_TARGET to avoid throttling of the requests. To configure these options, download aws-k8s-cni.yaml and set the environment variables. At the time of writing, the latest release is located here . Check the version of the configuration value matches the installed VPC CNI version. Warning The warm settings will be reset to defaults when you update the CNI. Please take a backup of the CNI, before you update the CNI. Review the configuration settings to determine if you need to reapply them after update is successful. Configure Warm ENI value for Batch Workloads \u00b6 We recommend updating the default WARM_ENI_TARGET to match the Pod scale needs for batch workloads. Setting WARM_ENI_TARGET to a high value always maintains the warm IP pool required to run large batch workloads and hence avoid data processing delays. Configure IPTables Forward Policy on non-EKS Optimized AMI Instances \u00b6 If you are using custom AMI, make sure to set iptables forward policy to ACCEPT under kubelet.service . Many systems set the iptables forward policy to DROP. You can build custom AMI using HashiCorp Packer and a build specification with resources and configuration scripts from the Amazon EKS AMI repository on AWS GitHub . You can update the kubelet.service and follow the instructions specified here to create a custom AMI. Routinely Upgrade CNI Version \u00b6 The VPC CNI is backward compatible. The latest version works with all Amazon EKS supported Kubernetes versions. Additionally, the VPC CNI is offered as an EKS add-on (see \u201cDeploy VPC CNI Managed Add-On\u201d above). While EKS add-ons orchestrates upgrades of add-ons, it will not automatically upgrade add-ons like the CNI because they run on the data plane. You are responsible for upgrading the VPC CNI add-on following managed and self-managed worker node upgrades.","title":"Amazon VPC CNI ({'name': 'English', 'build': True})"},{"location":"networking/vpc-cni/#amazon-vpc-cni","text":"Amazon EKS implements cluster networking through the Amazon VPC Container Network Interface (VPC CNI) plugin. The CNI plugin allows Kubernetes Pods to have the same IP address as they do on the VPC network. More specifically, all containers inside the Pod share a network namespace, and they can communicate with each-other using local ports. Amazon VPC CNI has two components: CNI Binary, which will setup Pod network to enable Pod-to-Pod communication. The CNI binary runs on a node root file system and is invoked by the kubelet when a new Pod gets added to, or an existing Pod removed from the node. ipamd, a long-running node-local IP Address Management (IPAM) daemon and is responsible for: managing ENIs on a node, and maintaining a warm-pool of available IP addresses or prefix When an instance is created, EC2 creates and attaches a primary ENI associated with a primary subnet. The primary subnet may be public or private. The Pods that run in hostNetwork mode use the primary IP address assigned to the node primary ENI and share the same network namespace as the host. The CNI plugin manages Elastic Network Interfaces (ENI) on the node. When a node is provisioned, the CNI plugin automatically allocates a pool of slots (IPs or Prefix\u2019s) from the node\u2019s subnet to the primary ENI. This pool is known as the warm pool , and its size is determined by the node\u2019s instance type. Depending on CNI settings, a slot may be an IP address or a prefix. When a slot on an ENI has been assigned, the CNI may attach additional ENIs with warm pool of slots to the nodes. These additional ENIs are called Secondary ENIs. Each ENI can only support a certain number of slots, based on instance type. The CNI attaches more ENIs to instances based on the number of slots needed, which usually corresponds to the number of Pods. This process continues until the node can no longer support additional ENI. The CNI also pre-allocates \u201cwarm\u201d ENIs and slots for faster Pod startup. Note each instance type has a maximum number of ENIs that may be attached. This is one constraint on Pod density (number of Pods per node), in addition to compute resources. The maximum number of network interfaces, and the maximum number of slots that you can use varies by the type of EC2 Instance. Since each Pod consumes an IP address on a slot, the number of Pods you can run on a particular EC2 Instance depends on how many ENIs can be attached to it and how many slots each ENI supports. We suggest setting the maximum Pods per EKS user guide to avoid exhaustion of the instance\u2019s CPU and memory resources. Pods using hostNetwork are excluded from this calculation. You may consider using a script called max-pod-calculator.sh to calculate EKS\u2019s recommended maximum Pods for a given instance type.","title":"Amazon VPC CNI"},{"location":"networking/vpc-cni/#overview","text":"Secondary IP mode is the default mode for VPC CNI. This guide provides a generic overview of VPC CNI behavior when Secondary IP mode is enabled. The functionality of ipamd (allocation of IP addresses) may vary depending on the configuration settings for VPC CNI, such as Prefix Mode , Security Groups Per Pod , and Custom Networking . The Amazon VPC CNI is deployed as a Kubernetes Daemonset named aws-node on worker nodes. When a worker node is provisioned, it has a default ENI, called the primary ENI, attached to it. The CNI allocates a warm pool of ENIs and secondary IP addresses from the subnet attached to the node\u2019s primary ENI. By default, ipamd attempts to allocate an additional ENI to the node. The IPAMD allocates additional ENI when a single Pod is scheduled and assigned a secondary IP address from the primary ENI. This \"warm\" ENI enables faster Pod networking. As the pool of secondary IP addresses runs out, the CNI adds another ENI to assign more. The number of ENIs and IP addresses in a pool are configured through environment variables called WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET . The aws-node Daemonset will periodically check that a sufficient number of ENIs are attached. A sufficient number of ENIs are attached when all of the WARM_ENI_TARGET , or WARM_IP_TARGET and MINIMUM_IP_TARGET conditions are met. If there are insufficient ENIs attached, the CNI will make an API call to EC2 to attach more until MAX_ENI limit is reached. WARM_ENI_TARGET - Integer, Values >0 indicate requirement Enabled The number of Warm ENIs to be maintained. An ENI is \u201cwarm\u201d when it is attached as a secondary ENI to a node, but it is not in use by any Pod. More specifically, no IP addresses of the ENI have been associated with a Pod. Example: Consider an instance with 2 ENIs, each ENI supporting 5 IP addresses. WARM_ENI_TARGET is set to 1. If exactly 5 IP addresses are associated with the instance, the CNI maintains 2 ENIs attached to the instance. The first ENI is in use, and all 5 possible IP addresses of this ENI are used. The second ENI is \u201cwarm\u201d with all 5 IP addresses in pool. If another Pod is launched on the instance, a 6th IP address will be needed. The CNI will assign this 6th Pod an IP address from the second ENI and from 5 IPs from the pool. The second ENI is now in use, and no longer in a \u201cwarm\u201d status. The CNI will allocate a 3rd ENI to maintain at least 1 warm ENI. Note The warm ENIs still consume IP addresses from the CIDR of your VPC. IP addresses are \u201cunused\u201d or \u201cwarm\u201d until they are associated with a workload, such as a Pod. WARM_IP_TARGET , Integer, Values >0 indicate requirement Enabled The number of Warm IP addresses to be maintained. A Warm IP is available on an actively attached ENI, but has not been assigned to a Pod. In other words, the number of Warm IPs available is the number of IPs that may be assigned to a Pod without requiring an additional ENI. Example: Consider an instance with 1 ENI, each ENI supporting 20 IP addresses. WARM_IP_TARGET is set to 5. WARM_ENI_TARGET is set to 0. Only 1 ENI will be attached until a 16th IP address is needed. Then, the CNI will attach a second ENI, consuming 20 possible addresses from the subnet CIDR. MINIMUM_IP_TARGET , Integer, Values >0 indicate requirement Enabled The minimum number of IP addresses to be allocated at any time. This is commonly used to front-load the assignment of multiple ENIs at instance launch. Example: Consider a newly launched instance. It has 1 ENI and each ENI supports 10 IP addresses. MINIMUM_IP_TARGET is set to 100. The ENI immediately attaches 9 more ENIs for a total of 100 addresses. This happens regardless of any WARM_IP_TARGET or WARM_ENI_TARGET values. This project includes a Subnet Calculator Excel Document . This calculator document simulates the IP address consumption of a specified workload under different ENI configuration options, such as WARM_IP_TARGET and WARM_ENI_TARGET . When Kubelet receives an add Pod request, the CNI binary queries ipamd for an available IP address, which ipamd then provides to the Pod. The CNI binary wires up the host and Pod network. Pods deployed on a node are, by default, assigned to the same security groups as the primary ENI. Alternatively, Pods may be configured with different security groups. As the pool of IP addresses is depleted, the plugin automatically attaches another elastic network interface to the instance and allocates another set of secondary IP addresses to that interface. This process continues until the node can no longer support additional elastic network interfaces. When a Pod is deleted, VPC CNI places the Pod\u2019s IP address in a 30-second cool down cache. The IPs in a cool down cache are not assigned to new Pods. When the cooling-off period is over, VPC CNI moves Pod IP back to the warm pool. The cooling-off period prevents Pod IP addresses from being recycled prematurely and allows kube-proxy on all cluster nodes to finish updating the iptables rules. When the number of IPs or ENIs exceeds the number of warm pool settings, the ipamd plugin returns IPs and ENIs to the VPC. As described above in Secondary IP mode, each Pod receives one secondary private IP address from one of the ENIs attached to an instance. Since each Pod uses an IP address, the number of Pods you can run on a particular EC2 Instance depends on how many ENIs can be attached to it and how many IP addresses it supports. The VPC CNI checks the limits file to find out how many ENIs and IP addresses are allowed for each type of instance. You can use the following formula to determine maximum number of Pods you can deploy on a node. (Number of network interfaces for the instance type \u00d7 (the number of IP addresses per network interface - 1)) + 2 The +2 indicates Pods that require host networking, such as kube-proxy and VPC CNI. Amazon EKS requires kube-proxy and VPC CNI to be operating on each node, and these requirements are factored into the max-pods value. If you want to run additional host networking pods, consider updating the max-pods value. The +2 indicates Kubernetes Pods that use host networking, such as kube-proxy and VPC CNI. Amazon EKS requires kube-proxy and VPC CNI to be running on every node and are calculated towards max-pods. Consider updating max-pods if you plan to run more host networking Pods. You can specify --kubelet-extra-args \"\u2014max-pods=110\" as user data in the launch template. As an example, on a cluster with 3 c5.large nodes (3 ENIs and max 10 IPs per ENI), when the cluster starts up and has 2 CoreDNS pods, the CNI will consume 49 IP addresses and keeps them in warm pool. The warm pool enables faster Pod launches when the application is deployed. Node 1 (with CoreDNS pod): 2 ENIs, 20 IPs assigned Node 2 (with CoreDNS pod): 2 ENIs, 20 IPs assigned Node 3 (no Pod): 1 ENI. 10 IPs assigned. Keep in mind that infrastructure pods, often running as daemon sets, each contribute to the max-pod count. These can include: CoreDNS Amazon Elastic LoadBalancer Operational pods for metrics-server We suggest that you plan your infrastructure by combining these Pods' capacities. For a list of the maximum number of Pods supported by each instance type, see eni-max-Pods.txt on GitHub.","title":"Overview"},{"location":"networking/vpc-cni/#recommendations","text":"","title":"Recommendations"},{"location":"networking/vpc-cni/#use-secondary-ip-mode-when","text":"Secondary IP mode is an ideal configuration option for ephemeral EKS clusters. Greenfield customers who are either new to EKS or in the process of migrating can take advantage of VPC CNI in secondary mode.","title":"Use Secondary IP Mode when"},{"location":"networking/vpc-cni/#avoid-secondary-ip-mode-when","text":"If you are experiencing Pod density issues, we suggest enabling prefix mode. If you are facing IPv4 depletion issues, we advise migrating to IPv6 clusters. If IPv6 is not on the horizon, you may choose to use custom networking.","title":"Avoid Secondary IP Mode when"},{"location":"networking/vpc-cni/#deploy-vpc-cni-managed-add-on","text":"When you provision a cluster, Amazon EKS installs VPC CNI automatically. Amazon EKS nevertheless supports managed add-ons that enable the cluster to interact with underlying AWS resources such as computing, storage, and networking. We highly recommend that you deploy clusters with managed add-ons including VPC CNI. Amazon EKS managed add-on offer VPC CNI installation and management for Amazon EKS clusters. Amazon EKS add-ons include the latest security patches, bug fixes, and are validated by AWS to work with Amazon EKS. The VPC CNI add-on enables you to continuously ensure the security and stability of your Amazon EKS clusters and decrease the amount of effort required to install, configure, and update add-ons. Additionally, a managed add-on can be added, updated, or deleted via the Amazon EKS API, AWS Management Console, AWS CLI, and eksctl. You can find the managed fields of VPC CNI using --show-managed-fields flag with the kubectl get command. kubectl get daemonset aws-node --show-managed-fields -n kube-system -o yaml Managed add-ons prevents configuration drift by automatically overwriting configurations every 15 minutes. This means that any changes to managed add-ons, made via the Kubernetes API after add-on creation, will overwrite by the automated drift-prevention process and also set to defaults during add-on update process. The fields managed by EKS are listed under managedFields with manager as EKS. Fields managed by EKS include service account, image, image url, liveness probe, readiness probe, labels, volumes, and volume mounts. Info The most frequently used fields such as WARM_ENI_TARGET, WARM_IP_TARGET, and MINIMUM_IP_TARGET are not managed and will not be reconciled. The changes to these fields will be preserved upon updating of the add-on. We suggest testing the add-on behavior in your non-production clusters for a specific configuration before updating production clusters. Additionally, follow the steps in the EKS user guide for add-on configurations.","title":"Deploy VPC CNI Managed Add-On"},{"location":"networking/vpc-cni/#migrate-to-managed-add-on","text":"You will manage the version compatibility and update the security patches of self-managed VPC CNI. To update a self-managed add-on, you must use the Kubernetes APIs and instructions outlined in the EKS user guide . We recommend migrating to a managed add-on for existing EKS clusters and highly suggest creating a backup of your current CNI settings prior to migration. To configure managed add-ons, you can utilize the Amazon EKS API, AWS Management Console, or AWS Command Line Interface. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml Amazon EKS will replace the CNI configuration settings if the field is listed as managed with default settings. We caution against modifying the managed fields. The add-on does not reconcile configuration fields such as the warm environment variables and CNI modes. The Pods and applications will continue to run while you migrate to a managed CNI.","title":"Migrate to Managed Add-On"},{"location":"networking/vpc-cni/#backup-cni-settings-before-update","text":"VPC CNI runs on customer data plane (nodes), and hence Amazon EKS does not automatically update the add-on (managed and self-managed) when new versions are released or after you update your cluster to a new Kubernetes minor version. To update the add-on for an existing cluster, you must trigger an update via update-addon API or clicking update now link in the EKS console for add-ons. If you have deployed self-managed add-on, follow steps mentioned under updating self-managed VPC CNI add-on. We strongly recommend that you update one minor version at a time. For example, if your current minor version is 1.9 and you want to update to 1.11 , you should update to the latest patch version of 1.10 first, then update to the latest patch version of 1.11 . Perform an inspection of the aws-node Daemonset before updating Amazon VPC CNI. Take a backup of existing settings. If using a managed add-on, confirm that you have not updated any settings that Amazon EKS might override. We recommend a post update hook in your automation workflow or a manual apply step after an add-on update. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml For a self-managed add-on, compare the backup with releases on GitHub to see the available versions and familiarize yourself with the changes in the version that you want to update to. We recommend using Helm to manage self-managed add-ons and leverage values files to apply settings. Any update operations involving Daemonset delete will result in application downtime and must be avoided.","title":"Backup CNI Settings Before Update"},{"location":"networking/vpc-cni/#understand-security-context","text":"We strongly suggest you to understand the security contexts configured for managing VPC CNI efficiently. Amazon VPC CNI has two components CNI binary and ipamd (aws-node) Daemonset. The CNI runs as a binary on a node and has access to node root file system, also has privileged access as it deals with iptables at the node level. The CNI binary is invoked by the kubelet when Pods gets added or removed. The aws-node Daemonset is a long-running process responsible for IP address management at the node level. The aws-node runs in hostNetwork mode and allows access to the loopback device, and network activity of other pods on the same node. The aws-node init-container runs in privileged mode and mounts the CRI socket allowing the Daemonset to monitor IP usage by the Pods running on the node. Amazon EKS is working to remove the privileged requirement of aws-node init container. Additionally, the aws-node needs to update NAT entries and to load the iptables modules and hence runs with NET_ADMIN privileges. Amazon EKS recommends deploying the security policies as defined by the aws-node manifest for IP management for the Pods and networking settings. Please consider updating to the latest version of VPC CNI. Furthermore, please consider opening a GitHub issue if you have a specific security requirement.","title":"Understand Security Context"},{"location":"networking/vpc-cni/#use-separate-iam-role-for-cni","text":"The AWS VPC CNI requires AWS Identity and Access Management (IAM) permissions. The CNI policy needs to be set up before the IAM role can be used. You can use AmazonEKS_CNI_Policy , which is an AWS managed policy for IPv4 clusters. AmazonEKS CNI managed policy only has permissions for IPv4 clusters. You must create a separate IAM policy for IPv6 clusters with the permissions listed here . By default, VPC CNI inherits the Amazon EKS node IAM role (both managed and self-managed node groups). Configuring a separate IAM role with the relevant policies for Amazon VPC CNI is strongly recommended. If not, the pods of Amazon VPC CNI gets the permission assigned to the node IAM role and have access to the instance profile assigned to the node. The VPC CNI plugin creates and configures a service account called aws-node. By default, the service account binds to the Amazon EKS node IAM role with Amazon EKS CNI policy attached. To use the separate IAM role, we recommend that you create a new service account with Amazon EKS CNI policy attached. To use a new service account you must redeploy the CNI pods . Consider specifying a --service-account-role-arn for VPC CNI managed add-on when creating new clusters. Make sure you remove Amazon EKS CNI policy for both IPv4 and IPv6 from Amazon EKS node role. It is advised that you block access instance metadata to minimize the blast radius of security breach.","title":"Use separate IAM role for CNI"},{"location":"networking/vpc-cni/#handle-livenessreadiness-probe-failures","text":"We advise increasing the liveness and readiness probe timeout values (default timeoutSeconds: 10 ) for EKS 1.20 an later clusters to prevent probe failures from causing your application's Pod to become stuck in a containerCreating state. This problem has been seen in data-intensive and batch-processing clusters. High CPU use causes aws-node probe health failures, leading to unfulfilled Pod CPU requests. In addition to modifying the probe timeout, ensure that the CPU resource requests (default CPU: 25m ) for aws-node are correctly configured. We do not suggest updating the settings unless your node is having issues. We highly encourage you to run sudo bash /opt/cni/bin/aws-cni-support.sh on a node while you engage Amazon EKS support. The script will assist in evaluating kubelet logs and memory utilization on the node. Please consider installing SSM Agent on Amazon EKS worker nodes to run the script.","title":"Handle Liveness/Readiness Probe failures"},{"location":"networking/vpc-cni/#monitor-ip-address-inventory","text":"You can monitor the IP addresses inventory of subnets using CNI Metrics Helper . maximum number of ENIs the cluster can support number of ENIs already allocated number of IP addresses currently assigned to Pods total and maximum number of IP address available You can also set CloudWatch alarms to get notified if a subnet is running out of IP addresses. Please visit EKS user guide for install instructions of CNI metrics helper . Make sure DISABLE_METRICS variable for VPC CNI is set to false.","title":"Monitor IP Address Inventory"},{"location":"networking/vpc-cni/#plan-for-growth","text":"We strongly recommend to size your subnets for growth. Right sizing the subnets will prevent your subnets from running out of IP addresses as your Pods and nodes scale. You will not be able to create new Pods or nodes if the subnets don\u2019t have enough available IP addresses. If you need to limit the IP addresses the CNI caches, then you can use warm pool CNI environment variables. If subnets in your VPC run out of available IP addresses, we suggest creating a new subnet using the VPC\u2019s original CIDR blocks. Use the sample EKS Subnet Calculator spreadsheet to plan your network. The spreadsheet calculates IP usage based on workloads and VPC ENI configuration. The IP usage is compared to an IPv4 subnet to determine if the configuration and subnet size is sufficient for your workload.","title":"Plan for Growth"},{"location":"networking/vpc-cni/#configure-ip-and-eni-target-values-in-address-constrained-environments","text":"Warning Improving your VPC design is the recommended response to IP address exhaustion. Consider solutions like IPv6 and Secondary CIDRs. Adjusting these values to minimize the number of Warm IPs should be a temporary solution after other options are excluded. Misconfiguring these values may interfere with cluster operation. In the default configuration, VPC CNI keeps an entire ENI (and associated IPs) in the warm pool. This may consume a large number of IPs, especially on larger instance types. If your cluster subnet has a limited number of free IP addresses, scrutinize these VPC CNI configuration environment variables: WARM_IP_TARGET MINIMUM_IP_TARGET WARM_ENI_TARGET Configure the value of MINIMUM_IP_TARGET to closely match the number of Pods you expect to run on your nodes. Doing so will ensure that as Pods get created, and the CNI can assign IP addresses from the warm pool without calling the EC2 API. Avoid setting the value of WARM_IP_TARGET too low as it will cause additional calls to the EC2 API, and that might cause throttling of the requests. For large clusters use along with MINIMUM_IP_TARGET to avoid throttling of the requests. To configure these options, download aws-k8s-cni.yaml and set the environment variables. At the time of writing, the latest release is located here . Check the version of the configuration value matches the installed VPC CNI version. Warning The warm settings will be reset to defaults when you update the CNI. Please take a backup of the CNI, before you update the CNI. Review the configuration settings to determine if you need to reapply them after update is successful.","title":"Configure IP and ENI Target values in address constrained environments"},{"location":"networking/vpc-cni/#configure-warm-eni-value-for-batch-workloads","text":"We recommend updating the default WARM_ENI_TARGET to match the Pod scale needs for batch workloads. Setting WARM_ENI_TARGET to a high value always maintains the warm IP pool required to run large batch workloads and hence avoid data processing delays.","title":"Configure Warm ENI value for Batch Workloads"},{"location":"networking/vpc-cni/#configure-iptables-forward-policy-on-non-eks-optimized-ami-instances","text":"If you are using custom AMI, make sure to set iptables forward policy to ACCEPT under kubelet.service . Many systems set the iptables forward policy to DROP. You can build custom AMI using HashiCorp Packer and a build specification with resources and configuration scripts from the Amazon EKS AMI repository on AWS GitHub . You can update the kubelet.service and follow the instructions specified here to create a custom AMI.","title":"Configure IPTables Forward Policy on non-EKS Optimized AMI Instances"},{"location":"networking/vpc-cni/#routinely-upgrade-cni-version","text":"The VPC CNI is backward compatible. The latest version works with all Amazon EKS supported Kubernetes versions. Additionally, the VPC CNI is offered as an EKS add-on (see \u201cDeploy VPC CNI Managed Add-On\u201d above). While EKS add-ons orchestrates upgrades of add-ons, it will not automatically upgrade add-ons like the CNI because they run on the data plane. You are responsible for upgrading the VPC CNI add-on following managed and self-managed worker node upgrades.","title":"Routinely Upgrade CNI Version"},{"location":"networking/vpc-cni/index.kr/","text":"{'name': 'English', 'build': True} Amazon VPC CNI \u00b6 Amazon EKS\ub294 Amazon VPC \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(VPC CNI) \ud50c\ub7ec\uadf8\uc778\uc744 \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uac00 VPC \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c\uc640 \ub3d9\uc77c\ud55c IP \uc8fc\uc18c\ub97c \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c\ub294 \ud30c\ub4dc \ub0b4\ubd80\uc758 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\ub294 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud558\uba70 \ub85c\uceec \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ub85c \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\uc5d0\ub294 \ub450 \uac00\uc9c0 \uad6c\uc131 \uc694\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud30c\ub4dc \uac04 \ud1b5\uc2e0\uc744 \ud65c\uc131\ud654\ud558\ub294 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ub178\ub4dc\uc758 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc2e4\ud589\ub418\uba70, \uc0c8 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0 \ucd94\uac00\ub418\uac70\ub098 \uae30\uc874 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c kubelet\uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc624\ub798 \uc2e4\ud589\ub418\ub294(long-running) \ub178\ub4dc-\ub85c\uceec \uac04(node-local) IP \uc8fc\uc18c \uad00\ub9ac (IPAM) \ub370\ubaac\uc778 ipamd\ub294 \ub2e4\uc74c\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc758 ENI \uad00\ub9ac \ubc0f \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \ub610\ub294 Prefix\uc758 \uc6dc \ud480 \uc720\uc9c0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc0dd\uc131\ub418\uba74 EC2\ub294 \uae30\ubcf8 \uc11c\ube0c\ub137\uacfc \uc5f0\uacb0\ub41c \uae30\ubcf8 ENI\ub97c \uc0dd\uc131\ud558\uc5ec \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc740 \ud37c\ube14\ub9ad \ub610\ub294 \ud504\ub77c\uc774\ube57\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. HostNetwork \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub294 \ub178\ub4dc \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c \uae30\ubcf8 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uba70 \ud638\uc2a4\ud2b8\uc640 \ub3d9\uc77c\ud55c \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 \ub178\ub4dc\uc758 Elastic Network Interface (ENI) \ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uba74 CNI \ud50c\ub7ec\uadf8\uc778\uc740 \ub178\ub4dc\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \uae30\ubcf8 ENI\uc5d0 \uc2ac\ub86f \ud480(IP \ub610\ub294 Prefix)\uc744 \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud480\uc744 \uc6dc \ud480 \uc774\ub77c\uace0 \ud558\uba70, \ud06c\uae30\ub294 \ub178\ub4dc\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4. CNI \uc124\uc815\uc5d0 \ub530\ub77c \uc2ac\ub86f\uc740 IP \uc8fc\uc18c \ub610\ub294 Prefix\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ENI\uc758 \uc2ac\ub86f\uc774 \ud560\ub2f9\ub418\uba74 CNI\ub294 \uc6dc \uc2ac\ub86f \ud480\uc774 \uc788\ub294 \ucd94\uac00 ENI\ub97c \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucd94\uac00 ENI\ub97c \ubcf4\uc870 ENI\ub77c\uace0 \ud569\ub2c8\ub2e4. \uac01 ENI\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ud2b9\uc815 \uac2f\uc218\uc758 \uc2ac\ub86f\ub9cc \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 \ud544\uc694\ud55c \uc2ac\ub86f \uc218\ub97c \uae30\ubc18\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub354 \ub9ce\uc740 ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uc2ac\ub86f \uac2f\uc218\ub294 \ubcf4\ud1b5 \ud30c\ub4dc \uac2f\uc218\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \ub178\ub4dc\uac00 \ucd94\uac00 ENI\ub97c \ub354 \uc774\uc0c1 \uc81c\uacf5\ud560 \uc218 \uc5c6\uc744 \ub54c\uae4c\uc9c0 \uacc4\uc18d\ub429\ub2c8\ub2e4. \ub610\ud55c CNI\ub294 \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 '\uc6dc' ENI\uc640 \uc2ac\ub86f\uc744 \uc0ac\uc804 \ud560\ub2f9\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 ENI \uc218\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \uc870\uac74\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc640 \ub354\ubd88\uc5b4 \ud30c\ub4dc \ubc00\ub3c4(\ub178\ub4dc\ub2f9 \ud30c\ub4dc \uc218)\uc5d0 \ub300\ud55c \ub610 \ud558\ub098\uc758 \uc81c\uc57d \uc870\uac74\uc785\ub2c8\ub2e4. \ucd5c\ub300 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218, \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc2ac\ub86f \uc218\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uac01 \ud30c\ub4dc\ub294 \uc2ac\ub86f\uc758 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 ENI\uc758 \uc218\uc640 \uac01 ENI\uac00 \uc9c0\uc6d0\ud558\ub294 \uc2ac\ub86f\uc758 \uc218\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub418\uc9c0 \uc54a\ub3c4\ub85d EKS \uc0ac\uc6a9 \uac00\uc774\ub4dc\uc5d0 \ub530\ub77c \ucd5c\ub300 \ud30c\ub4dc\ub97c \uc124\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. hostNetwork \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub294 \uc774 \uacc4\uc0b0\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub300\ud55c EKS\uc758 \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 max-pod-calculator.sh \ub77c\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac1c\uc694 \u00b6 \ubcf4\uc870 IP \ubaa8\ub4dc\ub294 VPC CNI\uc758 \uae30\ubcf8 \ubaa8\ub4dc\uc785\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ubcf4\uc870 IP \ubaa8\ub4dc\uac00 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0\uc758 VPC CNI \ub3d9\uc791\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. ipamd\uc758 \uae30\ub2a5(IP \uc8fc\uc18c \ud560\ub2f9)\uc740 VPC CNI\uc758 \uad6c\uc131 \uc124\uc815, \uc608\ub97c \ub4e4\uc5b4 Prefix \ubaa8\ub4dc , \ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9 \uc218 , \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 aws-node\ub77c\ub294 \uc774\ub984\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc14b\uc73c\ub85c \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uba74 \uae30\ubcf8 ENI\ub77c\uace0 \ud558\ub294 \uae30\ubcf8 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137\uc758 ENI\uc640 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uad6c\uc131\ub41c \uc6dc \ud480\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c ipamd\ub294 \ub178\ub4dc\uc5d0 \ucd94\uac00 ENI\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub2e8\uc77c \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub418\uace0 \uae30\ubcf8 ENI\uc758 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub418\uba74 IPAMD\ub294 \ucd94\uac00 ENI\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \u201c\uc6dc\u201d ENI\ub294 \ub354 \ube60\ub978 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc744 \uac00\ub2a5\ud558\uac8c \ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \uc8fc\uc18c \ud480\uc774 \ubd80\uc871\ud574\uc9c0\uba74 CNI\ub294 \ub2e4\ub978 ENI\ub97c \ucd94\uac00\ud558\uc5ec \ub354 \ub9ce\uc740 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud480\uc758 ENI \ubc0f IP \uc8fc\uc18c \uc218\ub294 WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET \uc774\ub77c\ub294 \ud658\uacbd \ubcc0\uc218\ub97c \ud1b5\ud574 \uad6c\uc131\ub429\ub2c8\ub2e4. aws-node \ub370\ubaac\uc14b\uc740 \ucda9\ubd84\ud55c \uc218\uc758 ENI\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294\uc9c0 \uc8fc\uae30\uc801\uc73c\ub85c \ud655\uc778\ud569\ub2c8\ub2e4. WARM_ENI_TARGET \ub610\ub294 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc870\uac74\uc774 \ubaa8\ub450 \ucda9\uc871\ub418\uba74 \ucda9\ubd84\ud55c \uc218\uc758 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uc5f0\uacb0\ub41c ENI\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 CNI\ub294 'MAX_ENI' \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 EC2\uc5d0 API\ub97c \ud638\ucd9c\ud558\uc5ec \ucd94\uac00\ub85c ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. WARM_ENI_TARGET - \uc815\uc218 \uac12, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uad00\ub9ac\ud560 \uc6dc ENI\uc758 \uc218\uc785\ub2c8\ub2e4. ENI\ub294 \ub178\ub4dc\uc5d0 \ubcf4\uc870 ENI\ub85c \uc5f0\uacb0\ub418\uba74 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \ub418\uc9c0\ub9cc, \uc5b4\ub5a4 \ud30c\ub4dc\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c \ub9d0\ud558\uba74 ENI\uc758 IP \uc8fc\uc18c\uac00 \ud30c\ub4dc\uc640 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc608: ENI\uac00 2\uac1c\uc774\uace0 \uac01 ENI\uac00 5\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.WARM_ENI_TARGET\uc740 1\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc815\ud655\ud788 5\uac1c\uc758 IP \uc8fc\uc18c\uac00 \uc5f0\uacb0\ub41c \uacbd\uc6b0 CNI\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 2\uac1c\uc758 ENI\ub97c \uc5f0\uacb0\ud55c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 ENI\uac00 \uc0ac\uc6a9 \uc911\uc774\uba70 \uc774 ENI\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c 5\uac1c IP \uc8fc\uc18c\uac00 \ubaa8\ub450 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 ENI\ub294 \ud480\uc5d0 5\uac1c IP \uc8fc\uc18c\uac00 \ubaa8\ub450 \uc788\ub294 \u201c\uc6dc\u201d \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \uacbd\uc6b0 6\ubc88\uc9f8 IP \uc8fc\uc18c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. CNI\ub294 \uc774 6\ubc88\uc9f8 \ud30c\ub4dc\uc5d0 \ub450 \ubc88\uc9f8 ENI \ubc0f \ud480\uc758 5\uac1c\uc758 IP\uc5d0\uc11c IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774\uc81c \ub450 \ubc88\uc9f8 ENI\uac00 \uc0ac\uc6a9\ub418\uba70 \ub354 \uc774\uc0c1 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \uc544\ub2c8\uac8c \ub429\ub2c8\ub2e4. CNI\ub294 \ucd5c\uc18c 1\uac1c\uc758 \uc6dc ENI\ub97c \uc720\uc9c0\ud558\uae30 \uc704\ud574 \uc138 \ubc88\uc9f8 ENI\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. Note \uc6dc ENI\ub294 \uc5ec\uc804\ud788 VPC\uc758 CIDR\uc5d0 \uc788\ub294 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. IP \uc8fc\uc18c\ub294 \ud30c\ub4dc\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc5f0\uacb0\ub418\uae30 \uc804\uae4c\uc9c0\ub294 \u201c\ubbf8\uc0ac\uc6a9\u201d \ub610\ub294 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \ub429\ub2c8\ub2e4. WARM_IP_TARGET , \uc815\uc218, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uc720\uc9c0\ud560 \uc6dc IP \uc8fc\uc18c \uc218\uc785\ub2c8\ub2e4. \uc6dc IP\ub294 \ud65c\uc131 \uc5f0\uacb0\ub41c ENI\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \uc989, \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6dc IP\uc758 \uc218\ub294 \ucd94\uac00 ENI \uc5c6\uc774 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 IP\uc758 \uc218\uc785\ub2c8\ub2e4. \uc608: ENI\uac00 1\uac1c\uc774\uace0 \uac01 ENI\uac00 20\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.WARM_IP_TARGET\uc740 5\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. WARM_ENI_TARGET\uc740 0\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. 16\ubc88\uc9f8 IP \uc8fc\uc18c\uac00 \ud544\uc694\ud560 \ub54c\uae4c\uc9c0\ub294 ENI 1\uac1c\ub9cc \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc5d0\ub294 CNI\uac00 \uc11c\ube0c\ub137 CIDR\uc758 \uac00\ub2a5\ud55c \uc8fc\uc18c 20\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \ubc88\uc9f8 ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. MINIMUM_IP_TARGET , \uc815\uc218, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uc5b8\uc81c\ub4e0\uc9c0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218\uc785\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4 \uc2dc\uc791 \uc2dc \uc5ec\ub7ec ENI \ud560\ub2f9\uc744 \ubbf8\ub9ac \ubd88\ub7ec\uc624\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608: \uc0c8\ub85c \uc2dc\uc791\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. ENI\ub294 1\uac1c\uc774\uace0 \uac01 ENI\ub294 10\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucd5c\uc18c_IP_TARGET\uc740 100\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. ENI\ub294 \ucd1d 100\uac1c\uc758 \uc8fc\uc18c\uc5d0 \ub300\ud574 9\uac1c\uc758 ENI\ub97c \uc989\uc2dc \ucd94\uac00\ub85c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc774\ub294 WARM_IP_TARGET \ub610\ub294 WARM_ENI_TARGET \uac12\uacfc \uc0c1\uad00\uc5c6\uc774 \uc774\ub904\uc9d1\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 Excel \ubb38\uc11c \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 WARM_IP_TARGET \ubc0f WARM_ENI_TARGET \uacfc \uac19\uc740 \ub2e4\uc591\ud55c ENI \uad6c\uc131 \uc635\uc158\uc5d0 \ub530\ub77c \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc758 IP \uc8fc\uc18c \uc0ac\uc6a9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. Kubelet\uc774 \ud30c\ub4dc \ucd94\uac00 \uc694\uccad\uc744 \ubc1b\uc73c\uba74, CNI \ubc14\uc774\ub108\ub9ac\ub294 ipamd\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ucffc\ub9ac\ud558\uace0, ipamd\ub294 \uc774\ub97c \ud30c\ub4dc\uc5d0 \uc81c\uacf5\ud569\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud638\uc2a4\ud2b8\uc640 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ub41c \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uae30\ubcf8 ENI\uc640 \ub3d9\uc77c\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud560\ub2f9\ub418\uba70, \ud30c\ub4dc\ub97c \ub2e4\ub978 \ubcf4\uc548 \uadf8\ub8f9\uc73c\ub85c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. IP \uc8fc\uc18c \ud480\uc774 \uace0\uac08\ub418\uba74 \ud50c\ub7ec\uadf8\uc778\uc740 \uc790\ub3d9\uc73c\ub85c \ub2e4\ub978 ENI\ub97c \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ud558\uace0 \ub2e4\ub978 \ubcf4\uc870 IP \uc8fc\uc18c \uc14b\uc744 \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \ub178\ub4dc\uac00 \ucd94\uac00 ENI\ub97c \ub354 \uc774\uc0c1 \uc9c0\uc6d0\ud560 \uc218 \uc5c6\uc744 \ub54c\uae4c\uc9c0 \uacc4\uc18d\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0ad\uc81c\ub418\uba74 VPC CNI\ub294 \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub97c 30\ucd08 \ucfe8\ub2e4\uc6b4 \uce90\uc2dc\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. \ucfe8 \ub2e4\uc6b4 \uce90\uc2dc\uc758 IP\ub294 \uc2e0\uaddc \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucfe8\ub9c1\uc624\ud504 \uc8fc\uae30\uac00 \ub05d\ub098\uba74 VPC CNI\ub294 \ud30c\ub4dc IP\ub97c \uc6dc \ud480\ub85c \ub2e4\uc2dc \uc62e\uae41\ub2c8\ub2e4. \ucfe8\ub9c1 \uc624\ud504 \uc8fc\uae30\ub294 \ud30c\ub4dc IP \uc8fc\uc18c\uac00 \ub108\ubb34 \uc774\ub974\uac8c \uc7ac\ud65c\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uace0 \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc758 kube-proxy\uac00 iptables \uaddc\uce59 \uc5c5\ub370\uc774\ud2b8\ub97c \uc644\ub8cc\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. IP \ub610\ub294 ENI\uc758 \uc218\uac00 \uc6dc \ud480 \uc124\uc815 \uc218\ub97c \ucd08\uacfc\ud558\uba74 ipamd \ud50c\ub7ec\uadf8\uc778\uc740 VPC\uc5d0 IP\uc640 ENI\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c \uc55e\uc11c \uc124\uba85\ud55c \ubc14\uc640 \uac19\uc774, \uac01 \ud30c\ub4dc\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c ENI \uc911 \ud558\ub098\ub85c\ubd80\ud130 \ud558\ub098\uc758 \ubcf4\uc870 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. \uac01 \ud30c\ub4dc\ub294 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 ENI\uc758 \uc218\uc640 \uc9c0\uc6d0\ud558\ub294 IP \uc8fc\uc18c\uc758 \uc218\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. VPC CNI\ub294 limit \ud30c\uc77c\uc744 \uac80\uc0ac\ud558\uc5ec \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ud5c8\uc6a9\ub418\ub294 ENI\uc640 IP \uc8fc\uc18c \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (Number of network interfaces for the instance type \u00d7 (the number of IP addresses per network interface - 1)) + 2 +2\ub294 kube-proxy \ubc0f VPC CNI\uc640 \uac19\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9\uc5d0\uc11c \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Amazon EKS\uc5d0\uc11c\ub294 \uac01 \ub178\ub4dc\uc5d0\uc11c kube-proxy \ubc0f VPC CNI\uac00 \uc791\ub3d9\ud574\uc57c \ud558\uba70, \uc774\ub7ec\ud55c \uc694\uad6c \uc0ac\ud56d\uc740 max-pods \uac12\uc5d0 \ubc18\uc601\ub429\ub2c8\ub2e4. \ucd94\uac00 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub824\uba74 max-pods \uac12 \uc5c5\ub370\uc774\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. +2\ub294 kube-proxy \ubc0f VPC CNI\uc640 \uac19\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.Amazon EKS\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0\uc11c kube-proxy\uc640 VPC CNI\ub97c \uc2e4\ud589\ud574\uc57c \ud558\uba70, \uc774\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uae30\uc900\uc73c\ub85c \uacc4\uc0b0\ub429\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uacc4\ud68d\uc774\ub77c\uba74 max-pod\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0\uc11c --kubelet-extra-args \"\u2014max-pods=110\" \uc744 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \ub178\ub4dc 3\uac1c (ENI 3\uac1c, ENI\ub2f9 \ucd5c\ub300 10\uac1c IP)\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\uac00 \uc2dc\uc791\ub418\uace0, CoreDNS \ud30c\ub4dc 2\uac1c\uac00 \uc788\ub294 \uacbd\uc6b0 CNI\ub294 49\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \uc6dc \ud480\uc744 \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \uc2dc \ud30c\ub4dc\ub97c \ub354 \ube60\ub974\uac8c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc 1 (CoreDNS \ud30c\ub4dc \ud3ec\ud568): ENI 2\uac1c, IP 20\uac1c \ud560\ub2f9 \ub178\ub4dc 2 (CoreDNS \ud30c\ub4dc \ud3ec\ud568): ENI 2\uac1c, IP 20\uac1c \ud560\ub2f9 \ub178\ub4dc 3 (\ud30c\ub4dc \uc5c6\uc74c): ENI 1\uac1c, IP 10\uac1c \ud560\ub2f9 \uc8fc\ub85c \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ub418\ub294 \uc778\ud504\ub77c \ud30c\ub4dc\ub294 \uac01\uac01 \ucd5c\ub300 \ud30c\ub4dc \uc218\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\ub294 \uc810\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS Amazon Elastic LoadBalancer for metrics-server\uc6a9 \uc6b4\uc601 Pods \uc774\ub7ec\ud55c \ud30c\ub4dc\uc758 \uc6a9\ub7c9\uc744 \uc870\ud569\ud558\uc5ec \uc778\ud504\ub77c\ub97c \uacc4\ud68d\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218 \ubaa9\ub85d\uc740 GitHub\uc758 eni-max-Pods.txt \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ubcf4\uc870 IP \ubaa8\ub4dc \uc0ac\uc6a9 \u00b6 \ubcf4\uc870 IP \ubaa8\ub4dc\ub294 \uc784\uc2dc EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud55c \uad6c\uc131 \uc635\uc158\uc785\ub2c8\ub2e4. EKS\ub97c \ucc98\uc74c \uc0ac\uc6a9\ud558\uac70\ub098 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911\uc778 \uc2e0\uaddc(Greenfield) \uace0\uac1d\uc740 \ubcf4\uc870 \ubaa8\ub4dc\uc5d0\uc11c VPC CNI\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ubcf4\uc870 IP \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \u00b6 \ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv4 \uace0\uac08 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv6\ub97c \uace0\ub824\ud558\uace0 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0, \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \ubc30\ud3ec \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 Amazon EKS\uac00 VPC CNI\ub97c \uc790\ub3d9\uc73c\ub85c \uc124\uce58\ud569\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \ucef4\ud4e8\ud305, \uc2a4\ud1a0\ub9ac\uc9c0, \ub124\ud2b8\uc6cc\ud0b9\uacfc \uac19\uc740 \uae30\ubcf8 AWS \ub9ac\uc18c\uc2a4\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC CNI\ub97c \ube44\ub86f\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon EKS \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc704\ud55c VPC CNI \uc124\uce58 \ubc0f \uad00\ub9ac\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon EKS \uc560\ub4dc\uc628\uc5d0\ub294 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58, \ubc84\uadf8 \uc218\uc815\uc774 \ud3ec\ud568\ub418\uba70, Amazon EKS\uc640 \ud638\ud658\ub418\ub294\uc9c0 AWS\uc758 \uac80\uc99d\uc744 \uac70\ucce4\uc2b5\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf4\uc548 \ubc0f \uc548\uc815\uc131\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubcf4\uc7a5\ud558\uace0 \ucd94\uac00 \uae30\ub2a5\uc744 \uc124\uce58, \uad6c\uc131 \ubc0f \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub178\ub825\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 Amazon EKS API, AWS \uad00\ub9ac \ucf58\uc194, AWS CLI \ubc0f eksctl\uc744 \ud1b5\ud574 \ucd94\uac00, \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get \uba85\ub839\uc5b4\uc640 \ud568\uaed8 --show-managed-fields \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec VPC CNI\uc758 \uad00\ub9ac\ud615 \ud544\ub4dc\ub97c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get daemonset aws-node --show-managed-fields -n kube-system -o yaml \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 15\ubd84\ub9c8\ub2e4 \uad6c\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \ub36e\uc5b4\uc368\uc11c \uad6c\uc131 \ubcc0\ub3d9\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc989, \uc560\ub4dc\uc628 \uc0dd\uc131 \ud6c4 Kubernetes API\ub97c \ud1b5\ud574 \ubcc0\uacbd\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 \uc790\ub3d9\ud654\ub41c \ub4dc\ub9ac\ud504\ud2b8 \ubc29\uc9c0 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc4f0\uc5ec\uc9c0\uace0 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0\ub3c4 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ud544\ub4dc\ub294 \uad00\ub9ac\ud615 \ud544\ub4dc \uc544\ub798\uc5d0 \ub098\uc5f4\ub418\uba70 \uc774 \ud544\ub4dc\uc5d0 \ub300\ud55c \uad00\ub9ac\uc790\ub294 EKS\uc785\ub2c8\ub2e4. EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ud544\ub4dc\uc5d0\ub294 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8, \uc774\ubbf8\uc9c0, \uc774\ubbf8\uc9c0 URL, liveness probe, readiness probe, \ub808\uc774\ube14, \ubcfc\ub968 \ubc0f \ubcfc\ub968 \ub9c8\uc6b4\ud2b8\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Info WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET\uacfc \uac19\uc774 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \ud544\ub4dc\ub294 \uad00\ub9ac\ub418\uc9c0 \uc54a\uc73c\uba70 \uc870\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc740 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \uc2dc\uc5d0\ub3c4 \uc720\uc9c0\ub429\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804, \ud2b9\uc815 \uad6c\uc131\uc758 \ube44\ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc560\ub4dc\uc628 \ub3d9\uc791\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc560\ub4dc\uc628 \uad6c\uc131\uc5d0 \ub300\ud574\uc11c\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\uc758 \ub2e8\uacc4\ub97c \ub530\ub77c\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \u00b6 \uc790\uccb4 \uad00\ub9ac\ud615 VPC CNI\uc758 \ubc84\uc804 \ud638\ud658\uc131\uc744 \uad00\ub9ac\ud558\uace0 \ubcf4\uc548 \ud328\uce58\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \uc124\uba85\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc640 \uc548\ub0b4\ub97c \ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\uc874 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0, \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc774 \uc88b\uc73c\uba70, \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc804\uc5d0 \ud604\uc7ac CNI \uc124\uc815\uc744 \ubc31\uc5c5\ud574 \ub458 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uad6c\uc131\ud558\ub824\uba74 Amazon EKS API, AWS \uad00\ub9ac \ucf58\uc194 \ub610\ub294 AWS \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml \ud544\ub4dc\uac00 \uae30\ubcf8 \uc124\uc815\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc\ub41c \uacbd\uc6b0 Amazon EKS\ub294 CNI \uad6c\uc131 \uc124\uc815\uc744 \ub300\uccb4\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ud544\ub4dc\ub97c \uc218\uc815\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud569\ub2c8\ub2e4. \uc560\ub4dc\uc628\uc740 \uc6dc \ud658\uacbd \ubcc0\uc218 \ubc0f CNI \ubaa8\ub4dc\uc640 \uac19\uc740 \uad6c\uc131 \ud544\ub4dc\ub97c \uc870\uc815\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uad00\ub9ac\ud615 CNI\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \ub3d9\uc548 \uacc4\uc18d \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8 \uc804 CNI \uc124\uc815 \ubc31\uc5c5 \u00b6 VPC CNI\ub294 \uace0\uac1d\uc758 \ub370\uc774\ud130 \ud50c\ub808\uc778(\ub178\ub4dc)\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c Amazon EKS\ub294 \uc2e0\uaddc \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uac70\ub098 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8 \ud55c \ud6c4\uc5d0 \uc2e0\uaddc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c (\uad00\ub9ac\ud615 \ubc0f \uc790\uccb4 \uad00\ub9ac\ud615)\uc560\ub4dc\uc628\uc744 \uc790\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uae30\uc874 \ud074\ub7ec\uc2a4\ud130\uc758 \uc560\ub4dc\uc628\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 update-adon API\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 EKS \ucf58\uc194\uc5d0\uc11c \uc560\ub4dc\uc628\uc6a9 update now \ub9c1\ud06c\ub97c \ud074\ub9ad\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\ub97c \ud2b8\ub9ac\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \ubc30\ud3ec\ud55c \uacbd\uc6b0 \uc790\uccb4 \uad00\ub9ac\ud615 VPC CNI \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \uc5d0 \uc548\ub0b4\ub41c \ub2e8\uacc4\ub97c \ub530\ub974\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc529 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud604\uc7ac \ub9c8\uc774\ub108 \ubc84\uc804\uc774 1.9 \uc774\uace0 1.11 \ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uacbd\uc6b0, \uba3c\uc800 1.10 \uc758 \ucd5c\uc2e0 \ud328\uce58 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c \ub2e4\uc74c 1.11 \uc758 \ucd5c\uc2e0 \ud328\uce58 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon VPC CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 AWS \ub178\ub4dc \ub370\ubaac\uc14b \uac80\uc0ac\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uae30\uc874 \uc124\uc815\uc744 \ubc31\uc5c5\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 Amazon EKS\uc5d0\uc11c \uc7ac\uc815\uc758\ud560 \uc218 \uc788\ub294 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc790\ub3d9\ud654 \uc6cc\ud06c\ud50c\ub85c\uc758 \uc5c5\ub370\uc774\ud2b8 \ud6c5 \ud639\uc740 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ud6c4 \uc218\ub3d9 \uc801\uc6a9 \ub2e8\uacc4\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc758 \uacbd\uc6b0 \ubc31\uc5c5\uc744 GitHub\uc758 releases \ub0b4\uc6a9\uacfc \ube44\uad50\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubc84\uc804\uc744 \ud655\uc778\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\ub294 \ubc84\uc804\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc219\uc9c0\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uad00\ub9ac\ud558\uace0 values \ud30c\uc77c\uc744 \ud65c\uc6a9\ud558\uc5ec \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74 \ud5ec\ub984(Helm)\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub370\ubaac\uc14b \uc0ad\uc81c\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub2e4\uc6b4\ud0c0\uc784\uc73c\ub85c \uc774\uc5b4\uc9c0\ubbc0\ub85c \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 \uc774\ud574 \u00b6 VPC CNI\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \uc704\ud574 \uad6c\uc131\ub41c \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\uc5d0\ub294 CNI \ubc14\uc774\ub108\ub9ac\uc640 ipamd(AWS-node) \ub370\ubaac\uc14b\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uad6c\uc131 \uc694\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 \ub178\ub4dc\uc5d0\uc11c \ubc14\uc774\ub108\ub9ac\ub85c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\uba70, \ub178\ub4dc \uc218\uc900\uc5d0\uc11c iptables\ub97c \ucc98\ub9ac\ud558\ubbc0\ub85c privileged \uc811\uadfc\uc5d0 \ub300\ud55c \uad8c\ud55c\ub3c4 \uac16\uc2b5\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud30c\ub4dc\uac00 \ucd94\uac00\ub418\uac70\ub098 \uc81c\uac70\ub420 \ub54c kubelet\uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. aws-node \ub370\ubaac\uc14b\uc740 \ub178\ub4dc \uc218\uc900\uc5d0\uc11c IP \uc8fc\uc18c \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud558\ub294 \uc7a5\uae30 \uc2e4\ud589 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4. aws-node\ub294 hostNetwork \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ub8e8\ud504\ubc31 \ub514\ubc14\uc774\uc2a4 \ubc0f \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0 \uc788\ub294 \ub2e4\ub978 \ud30c\ub4dc\uc758 \ub124\ud2b8\uc6cc\ud06c \ud65c\ub3d9\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. aws-node\uc758 \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108\ub294 privileged \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 CRI \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\uc5ec \ub370\ubaac\uc14b\uc774 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc758 IP \uc0ac\uc6a9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Amazon EKS\ub294 aws-node\uc758 \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108\uc758 privileged \uc694\uad6c \uc0ac\ud56d\uc744 \uc81c\uac70\ud558\uae30 \uc704\ud574 \ub178\ub825\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c aws-node\ub294 NAT \ud56d\ubaa9\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uace0 iptables \ubaa8\ub4c8\uc744 \ub85c\ub4dc\ud574\uc57c \ud558\ubbc0\ub85c NET_ADMIN \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud30c\ub4dc \ubc0f \ub124\ud2b8\uc6cc\ud0b9 \uc124\uc815\uc758 IP \uad00\ub9ac\ub97c \uc704\ud574 aws-node \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0\uc11c \uc815\uc758\ud55c \ub300\ub85c \ubcf4\uc548 \uc815\ucc45\uc744 \ubc30\ud3ec\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 VPC CNI\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 GitHub \uc774\uc288 \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4. CNI\uc5d0 \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560 \uc0ac\uc6a9 \u00b6 AWS VPC CNI\uc5d0\ub294 AWS \uc790\uaca9 \uc99d\uba85 \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac(IAM) \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uba3c\uc800 CNI \uc815\ucc45\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. IPv4 \ud074\ub7ec\uc2a4\ud130\uc6a9 AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc778 AmazonEKS_CNI_Policy \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AmazonEK\uc758 CNI \uad00\ub9ac\ud615 \uc815\ucc45\uc5d0\ub294 IPv4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uad8c\ud55c\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ub9c1\ud06c\uc5d0 \uc5d0 \ud45c\uc2dc\ub41c \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\uc5ec IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 IAM \uc815\ucc45\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC CNI\ub294 (\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubaa8\ub450) Amazon EKS \ub178\ub4dc IAM \uc5ed\ud560 \uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. Amazon VPC CNI\uc5d0 \ub300\ud55c \uad00\ub828 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uac15\ub825\ud558\uac8c \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Amazon VPC CNI\uc758 \ud30c\ub4dc\ub294 \ub178\ub4dc IAM \uc5ed\ud560\uc5d0 \ud560\ub2f9\ub41c \uad8c\ud55c\uc744 \uc5bb\uace0 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI \ud50c\ub7ec\uadf8\uc778\uc740 aws-node\ub77c\ub294 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0dd\uc131\ud558\uace0 \uad6c\uc131\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub294 Amazon EKS CNI \uc815\ucc45\uc774 \uc5f0\uacb0\ub41c Amazon EKS \ub178\ub4dc\uc758 IAM \uc5ed\ud560\uc5d0 \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 Amazon EKS CNI \uc815\ucc45\uc774 \uc5f0\uacb0\ub41c \uc2e0\uaddc \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0dd\uc131 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 CNI \ud30c\ub4dc \uc7ac\ubc30\ud3ec \ub97c \uc9c4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2e0\uaddc \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c VPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc5d0 --service-account-role-arn \uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc774 \ub54c Amazon EKS \ub178\ub4dc\uc758 IAM \uc5ed\ud560\uc5d0\uc11c IPv4\uc640 IPv6 \ubaa8\ub450\uc5d0 \ub300\ud55c Amazon EKS CNI \uc815\ucc45\uc744 \ubc18\ub4dc\uc2dc \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \ubcf4\uc548 \uce68\ud574\uc758 \ud53c\ud574 \ubc94\uc704\ub97c \ucd5c\uc18c\ud654\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \uc811\uadfc\uc744 \ucc28\ub2e8 \ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Liveness/Readiness Probe \uc2e4\ud328 \ucc98\ub9ac \u00b6 \ud504\ub85c\ube0c \uc2e4\ud328\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\uac00 \ucee8\ud14c\uc774\ub108 \uc0dd\uc131 \uc0c1\ud0dc\uc5d0\uc11c \uba48\ucd94\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 EKS 1.20 \ubc84\uc804 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc758 liveness \ubc0f readiness probe\uc758 \ud0c0\uc784\uc544\uc6c3 \uac12 (\uae30\ubcf8\uac12 TimeoutSeconds: 10 )\uc744 \ub192\uc77c \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc774\uc288\ub294 \ub370\uc774\ud130 \uc9d1\uc57d\uc801\uc778 \ubc30\uce58 \ucc98\ub9ac \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubc1c\uacac\ub418\uc5c8\uc2b5\ub2c8\ub2e4. CPU\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud558\uba74 AWS \ub178\ub4dc \ud504\ub85c\ube0c \uc0c1\ud0dc \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uc5ec Pod CPU \ub9ac\uc18c\uc2a4 \uc694\uccad\uc774 \ucda9\uc871\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ube0c \ud0c0\uc784\uc544\uc6c3\uc744 \uc218\uc815\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 aws-node\uc5d0 \ub300\ud55c CPU \ub9ac\uc18c\uc2a4 \uc694\uccad (\uae30\ubcf8\uac12 CPU: 25m ) \uc774 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \uc544\ub2c8\uba74 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Amazon EKS \uc9c0\uc6d0\uc744 \ubc1b\ub294 \ub3d9\uc548 \ub178\ub4dc\uc5d0\uc11c sudo bash /opt/cni/bin/aws-cni-support.sh \ub97c \uc2e4\ud589\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \ub178\ub4dc\uc758 kubelet \ub85c\uadf8\uc640 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960\uc744 \ud3c9\uac00\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud574 Amazon EKS \uc6cc\ucee4 \ub178\ub4dc\uc5d0 SSM \uc5d0\uc774\uc804\ud2b8\ub97c \ud558\ub294 \uac83\uc744 \uace0\ub824\ud574\ubcf4\uc138\uc694. IP \uc8fc\uc18c \uc778\ubca4\ud1a0\ub9ac \ubaa8\ub2c8\ud130\ub9c1 \u00b6 CNI \uba54\ud2b8\ub9ad \ub3c4\uc6b0\ubbf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c \uc778\ubca4\ud1a0\ub9ac\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 ENI \uc218 \uc774\ubbf8 \ud560\ub2f9\ub41c ENI \uc218 \ud604\uc7ac \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IP \uc8fc\uc18c \uc218 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd1d IP \uc8fc\uc18c \uc218 \ubc0f \ucd5c\ub300 \uc218 \uc11c\ube0c\ub137\uc5d0 IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud560 \uacbd\uc6b0 \uc54c\ub9bc\uc744 \ubc1b\ub3c4\ub85d CloudWatch Alarm \uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. CNI metrics helper \uc758 \uc124\uce58 \ubc29\ubc95\uc740 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. VPC CNI\uc758 DISABLE_METRICS \ubcc0\uc218\uac00 false\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ud655\uc7a5 \uacc4\ud68d \u00b6 \ud655\uc7a5\uc744 \uc704\ud574\uc11c\ub294 \uc11c\ube0c\ub137 \ud06c\uae30\ub97c \uc870\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc758 \ud06c\uae30\ub97c \uc801\uc808\ud558\uac8c \uc870\uc815\ud558\uba74 \ud30c\ub4dc\uc640 \ub178\ub4dc\uac00 \ud655\uc7a5\ub420 \ub54c \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud574\uc9c0\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 \uc2e0\uaddc \ud30c\ub4dc\ub098 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. CNI\uac00 \uce90\uc2f1\ud558\ub294 IP \uc8fc\uc18c\ub97c \uc81c\ud55c\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc6dc \ud480 CNI \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud55c \uacbd\uc6b0 VPC\uc758 \uc6d0\ub798 CIDR \ube14\ub85d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \uc0dd\uc131 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc0d8\ud50c EKS \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 \uc2a4\ud504\ub808\ub4dc\uc2dc\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uad6c\uc131\uc744 \uacc4\ud68d\ud569\ub2c8\ub2e4. EKS \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 \uc2a4\ud504\ub808\ub4dc\uc2dc\ud2b8\ub294 \uc6cc\ud06c\ub85c\ub4dc \ubc0f VPC ENI \uad6c\uc131\uc744 \uae30\ubc18\uc73c\ub85c IP \uc0ac\uc6a9\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. IP \uc0ac\uc6a9\ub7c9\uc744 IPv4 \uc11c\ube0c\ub137\uacfc \ube44\uad50\ud558\uc5ec \uad6c\uc131 \uac12 \ubc0f \uc11c\ube0c\ub137 \ud06c\uae30\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucda9\ubd84\ud55c\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc8fc\uc18c \uc81c\uc57d\uc774 \uc788\ub294 \ud658\uacbd\uc5d0\uc11c IP \ubc0f ENI \ub300\uc0c1 \uac12 \uad6c\uc131 \u00b6 Warning IP \uc8fc\uc18c \uace0\uac08\uc5d0 \ub300\ud55c \uad8c\uc7a5 \ub300\uc751 \ubc29\ubc95\uc740 VPC \uc124\uacc4\ub97c \uac1c\uc120\ud558\ub294 \uac83\uc73c\ub85c, IPv6 \ubc0f \ubcf4\uc870 CIDR\uacfc \uac19\uc740 \uc194\ub8e8\uc158\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc544\ub798 \uac12\uc744 \uc870\uc815\ud558\uc5ec \uc6dc IP \uc218\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \uc635\uc158\uc774 \ubd88\uac00\ud55c \uc0c1\ud669\uc5d0\uc11c\uc758 \uc784\uc2dc \ud574\uacb0\ucc45\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac12\uc744 \uc798\ubabb \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub3d9\uc791\uc5d0 \ubc29\ud574\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\uc131\uc5d0\uc11c VPC CNI\ub294 \uc804\uccb4 ENI(\ubc0f \uc5f0\uacb0\ub41c IP)\ub97c \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc5d0\uc11c\ub294 \ub300\uaddc\ubaa8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \ub9ce\uc740 \uc218\uc758 IP\ub97c \uc18c\ube44\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\uac00 \uc81c\ud55c\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c VPC CNI \uad6c\uc131 \ud658\uacbd \ubcc0\uc218\ub97c \uba74\ubc00\ud788 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4. WARM_IP_TARGET MINIMUM_IP_TARGET WARM_ENI_TARGET \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\ub294 \ud30c\ub4dc\uc758 \uc218\uc640 \uac70\uc758 \uc77c\uce58\ud558\ub3c4\ub85d MINIMUM_IP_TARGET\uc758 \uac12\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud30c\ub4dc\uac00 \uc0dd\uc131\ub420 \ub54c CNI\uac00 EC2 API\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc6dc \ud480\uc758 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WARM_IP_TARGET \uac12\uc744 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uba74 EC2 API\uc5d0 \ub300\ud55c \ucd94\uac00 \ud638\ucd9c\uc774 \ubc1c\uc0dd\ud558\uc5ec API\uc694\uccad\uc5d0 \ub300\ud55c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 MINIMUM_IP_TARGET\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc635\uc158\uc744 \uad6c\uc131\ud558\ub824\uba74 aws-k8s-cni.yaml \uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774 \uae00\uc758 \uc791\uc131 \uc2dc\uc810\uc5d0\uc11c \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4\ub294 \uc774 \ub9c1\ud06c \uc5d0 \uae30\uc7ac\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\uc131 \uac12\uc758 \ubc84\uc804\uc774 \uc124\uce58\ub41c VPC CNI \ubc84\uc804\uacfc \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. Warning CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \uc6dc \uc124\uc815\uc774 \uae30\ubcf8\uac12\uc73c\ub85c \uc7ac\uc124\uc815\ub429\ub2c8\ub2e4. CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 CNI\ub97c \ubc31\uc5c5\ud569\ub2c8\ub2e4. \uad6c\uc131 \uc124\uc815\uc744 \uac80\ud1a0\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\uac00 \uc131\uacf5\ud55c \ud6c4 \uc7ac\uc801\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c Warm ENI \uac12 \uad6c\uc131 \u00b6 \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ud30c\ub4dc \uc2a4\ucf00\uc77c\ub9c1 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\uac8c \uae30\ubcf8 WARM_ENI_TARGET \uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. WARM_ENI_TARGET \uc744 \ub192\uc740 \uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 \ub300\uaddc\ubaa8 \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc6dc IP \ud480\uc774 \ud56d\uc0c1 \uc720\uc9c0\ub418\ubbc0\ub85c \ub370\uc774\ud130 \ucc98\ub9ac \uc9c0\uc5f0\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44 EKS \ucd5c\uc801\ud654 AMI \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c IPtables \uc804\ub2ec \uc815\ucc45 \uad6c\uc131 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 kubelet.service \uc5d0\uc11c iptables \uc804\ub2ec \uc815\ucc45\uc744 ACCEPT\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc2dc\uc2a4\ud15c\uc5d0\uc11c iptables \uc804\ub2ec \uc815\ucc45\uc774 DROP\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. HashiCorp Packer \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \ube4c\ub4dc\ud558\uace0 AWS GitHub\uc758 Amazon EKS AMI \uc800\uc7a5\uc18c \uc5d0\uc11c \ub9ac\uc18c\uc2a4 \ubc0f \uad6c\uc131 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube4c\ub4dc \uc0ac\uc591\uc744 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubelet.service \ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uc774 \ub9c1\ud06c \uc5d0 \uc124\uba85\ub41c \uc548\ub0b4\uc5d0 \ub530\ub77c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\uae30\uc801\uc778 CNI \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc \u00b6 VPC CNI\ub294 \uc774\uc804 \ubc84\uc804\uacfc \ud638\ud658\ub429\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc740 \ubaa8\ub4e0 Amazon EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uacfc \ud638\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c VPC CNI\ub294 EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4(\uc704\uc758 \u201cVPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \ubc30\ud3ec\u201d \ucc38\uc870). EKS \uc560\ub4dc\uc628\uc740 \uc560\ub4dc\uc628 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad00\ub9ac\ud558\uc9c0\ub9cc CNI\uc640 \uac19\uc740 \uc560\ub4dc\uc628\uc740 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ubc0f \uc790\uccb4 \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4\uc5d0\ub294 VPC CNI \uc560\ub4dc\uc628\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Amazon VPC CNI"},{"location":"networking/vpc-cni/index.kr/#amazon-vpc-cni","text":"Amazon EKS\ub294 Amazon VPC \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(VPC CNI) \ud50c\ub7ec\uadf8\uc778\uc744 \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uac00 VPC \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c\uc640 \ub3d9\uc77c\ud55c IP \uc8fc\uc18c\ub97c \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c\ub294 \ud30c\ub4dc \ub0b4\ubd80\uc758 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\ub294 \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud558\uba70 \ub85c\uceec \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ub85c \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\uc5d0\ub294 \ub450 \uac00\uc9c0 \uad6c\uc131 \uc694\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud30c\ub4dc \uac04 \ud1b5\uc2e0\uc744 \ud65c\uc131\ud654\ud558\ub294 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ub178\ub4dc\uc758 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc2e4\ud589\ub418\uba70, \uc0c8 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0 \ucd94\uac00\ub418\uac70\ub098 \uae30\uc874 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \ub54c kubelet\uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc624\ub798 \uc2e4\ud589\ub418\ub294(long-running) \ub178\ub4dc-\ub85c\uceec \uac04(node-local) IP \uc8fc\uc18c \uad00\ub9ac (IPAM) \ub370\ubaac\uc778 ipamd\ub294 \ub2e4\uc74c\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc758 ENI \uad00\ub9ac \ubc0f \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \ub610\ub294 Prefix\uc758 \uc6dc \ud480 \uc720\uc9c0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc0dd\uc131\ub418\uba74 EC2\ub294 \uae30\ubcf8 \uc11c\ube0c\ub137\uacfc \uc5f0\uacb0\ub41c \uae30\ubcf8 ENI\ub97c \uc0dd\uc131\ud558\uc5ec \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc11c\ube0c\ub137\uc740 \ud37c\ube14\ub9ad \ub610\ub294 \ud504\ub77c\uc774\ube57\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. HostNetwork \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\ub294 \ub178\ub4dc \uae30\ubcf8 ENI\uc5d0 \ud560\ub2f9\ub41c \uae30\ubcf8 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uba70 \ud638\uc2a4\ud2b8\uc640 \ub3d9\uc77c\ud55c \ub124\ud2b8\uc6cc\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uacf5\uc720\ud569\ub2c8\ub2e4. CNI \ud50c\ub7ec\uadf8\uc778\uc740 \ub178\ub4dc\uc758 Elastic Network Interface (ENI) \ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uba74 CNI \ud50c\ub7ec\uadf8\uc778\uc740 \ub178\ub4dc\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \uae30\ubcf8 ENI\uc5d0 \uc2ac\ub86f \ud480(IP \ub610\ub294 Prefix)\uc744 \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud480\uc744 \uc6dc \ud480 \uc774\ub77c\uace0 \ud558\uba70, \ud06c\uae30\ub294 \ub178\ub4dc\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4. CNI \uc124\uc815\uc5d0 \ub530\ub77c \uc2ac\ub86f\uc740 IP \uc8fc\uc18c \ub610\ub294 Prefix\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ENI\uc758 \uc2ac\ub86f\uc774 \ud560\ub2f9\ub418\uba74 CNI\ub294 \uc6dc \uc2ac\ub86f \ud480\uc774 \uc788\ub294 \ucd94\uac00 ENI\ub97c \ub178\ub4dc\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucd94\uac00 ENI\ub97c \ubcf4\uc870 ENI\ub77c\uace0 \ud569\ub2c8\ub2e4. \uac01 ENI\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ud2b9\uc815 \uac2f\uc218\uc758 \uc2ac\ub86f\ub9cc \uc9c0\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 \ud544\uc694\ud55c \uc2ac\ub86f \uc218\ub97c \uae30\ubc18\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub354 \ub9ce\uc740 ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uc2ac\ub86f \uac2f\uc218\ub294 \ubcf4\ud1b5 \ud30c\ub4dc \uac2f\uc218\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \ub178\ub4dc\uac00 \ucd94\uac00 ENI\ub97c \ub354 \uc774\uc0c1 \uc81c\uacf5\ud560 \uc218 \uc5c6\uc744 \ub54c\uae4c\uc9c0 \uacc4\uc18d\ub429\ub2c8\ub2e4. \ub610\ud55c CNI\ub294 \ud30c\ub4dc \uc2dc\uc791 \uc18d\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 '\uc6dc' ENI\uc640 \uc2ac\ub86f\uc744 \uc0ac\uc804 \ud560\ub2f9\ud569\ub2c8\ub2e4. \ucc38\uace0\ub85c, \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 ENI \uc218\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \uc870\uac74\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc640 \ub354\ubd88\uc5b4 \ud30c\ub4dc \ubc00\ub3c4(\ub178\ub4dc\ub2f9 \ud30c\ub4dc \uc218)\uc5d0 \ub300\ud55c \ub610 \ud558\ub098\uc758 \uc81c\uc57d \uc870\uac74\uc785\ub2c8\ub2e4. \ucd5c\ub300 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4 \uc218, \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc2ac\ub86f \uc218\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uac01 \ud30c\ub4dc\ub294 \uc2ac\ub86f\uc758 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 ENI\uc758 \uc218\uc640 \uac01 ENI\uac00 \uc9c0\uc6d0\ud558\ub294 \uc2ac\ub86f\uc758 \uc218\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uac00 \uace0\uac08\ub418\uc9c0 \uc54a\ub3c4\ub85d EKS \uc0ac\uc6a9 \uac00\uc774\ub4dc\uc5d0 \ub530\ub77c \ucd5c\ub300 \ud30c\ub4dc\ub97c \uc124\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. hostNetwork \ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\ub294 \uc774 \uacc4\uc0b0\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. \uc8fc\uc5b4\uc9c4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ub300\ud55c EKS\uc758 \uad8c\uc7a5 \ucd5c\ub300 \ud30c\ub4dc\ub97c \uacc4\uc0b0\ud558\uae30 \uc704\ud574 max-pod-calculator.sh \ub77c\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Amazon VPC CNI"},{"location":"networking/vpc-cni/index.kr/#_1","text":"\ubcf4\uc870 IP \ubaa8\ub4dc\ub294 VPC CNI\uc758 \uae30\ubcf8 \ubaa8\ub4dc\uc785\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ubcf4\uc870 IP \ubaa8\ub4dc\uac00 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0\uc758 VPC CNI \ub3d9\uc791\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uac1c\uc694\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. ipamd\uc758 \uae30\ub2a5(IP \uc8fc\uc18c \ud560\ub2f9)\uc740 VPC CNI\uc758 \uad6c\uc131 \uc124\uc815, \uc608\ub97c \ub4e4\uc5b4 Prefix \ubaa8\ub4dc , \ud30c\ub4dc\ub2f9 \ubcf4\uc548 \uadf8\ub8f9 \uc218 , \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9 \uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 aws-node\ub77c\ub294 \uc774\ub984\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc14b\uc73c\ub85c \ubc30\ud3ec\ub429\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ub418\uba74 \uae30\ubcf8 ENI\ub77c\uace0 \ud558\ub294 \uae30\ubcf8 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. CNI\ub294 \ub178\ub4dc\uc758 \uae30\ubcf8 ENI\uc5d0 \uc5f0\uacb0\ub41c \uc11c\ube0c\ub137\uc758 ENI\uc640 \ubcf4\uc870 IP \uc8fc\uc18c\ub85c \uad6c\uc131\ub41c \uc6dc \ud480\uc744 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c ipamd\ub294 \ub178\ub4dc\uc5d0 \ucd94\uac00 ENI\ub97c \ud560\ub2f9\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \ub2e8\uc77c \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub418\uace0 \uae30\ubcf8 ENI\uc758 \ubcf4\uc870 IP \uc8fc\uc18c\uac00 \ud560\ub2f9\ub418\uba74 IPAMD\ub294 \ucd94\uac00 ENI\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \u201c\uc6dc\u201d ENI\ub294 \ub354 \ube60\ub978 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc744 \uac00\ub2a5\ud558\uac8c \ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \uc8fc\uc18c \ud480\uc774 \ubd80\uc871\ud574\uc9c0\uba74 CNI\ub294 \ub2e4\ub978 ENI\ub97c \ucd94\uac00\ud558\uc5ec \ub354 \ub9ce\uc740 \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \ud480\uc758 ENI \ubc0f IP \uc8fc\uc18c \uc218\ub294 WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET \uc774\ub77c\ub294 \ud658\uacbd \ubcc0\uc218\ub97c \ud1b5\ud574 \uad6c\uc131\ub429\ub2c8\ub2e4. aws-node \ub370\ubaac\uc14b\uc740 \ucda9\ubd84\ud55c \uc218\uc758 ENI\uac00 \uc5f0\uacb0\ub418\uc5b4 \uc788\ub294\uc9c0 \uc8fc\uae30\uc801\uc73c\ub85c \ud655\uc778\ud569\ub2c8\ub2e4. WARM_ENI_TARGET \ub610\ub294 WARM_IP_TARGET \ubc0f MINIMUM_IP_TARGET \uc870\uac74\uc774 \ubaa8\ub450 \ucda9\uc871\ub418\uba74 \ucda9\ubd84\ud55c \uc218\uc758 ENI\uac00 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uc5f0\uacb0\ub41c ENI\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 CNI\ub294 'MAX_ENI' \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud560 \ub54c\uae4c\uc9c0 EC2\uc5d0 API\ub97c \ud638\ucd9c\ud558\uc5ec \ucd94\uac00\ub85c ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. WARM_ENI_TARGET - \uc815\uc218 \uac12, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uad00\ub9ac\ud560 \uc6dc ENI\uc758 \uc218\uc785\ub2c8\ub2e4. ENI\ub294 \ub178\ub4dc\uc5d0 \ubcf4\uc870 ENI\ub85c \uc5f0\uacb0\ub418\uba74 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \ub418\uc9c0\ub9cc, \uc5b4\ub5a4 \ud30c\ub4dc\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad6c\uccb4\uc801\uc73c\ub85c \ub9d0\ud558\uba74 ENI\uc758 IP \uc8fc\uc18c\uac00 \ud30c\ub4dc\uc640 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc608: ENI\uac00 2\uac1c\uc774\uace0 \uac01 ENI\uac00 5\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.WARM_ENI_TARGET\uc740 1\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc815\ud655\ud788 5\uac1c\uc758 IP \uc8fc\uc18c\uac00 \uc5f0\uacb0\ub41c \uacbd\uc6b0 CNI\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 2\uac1c\uc758 ENI\ub97c \uc5f0\uacb0\ud55c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4. \uccab \ubc88\uc9f8 ENI\uac00 \uc0ac\uc6a9 \uc911\uc774\uba70 \uc774 ENI\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c 5\uac1c IP \uc8fc\uc18c\uac00 \ubaa8\ub450 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 ENI\ub294 \ud480\uc5d0 5\uac1c IP \uc8fc\uc18c\uac00 \ubaa8\ub450 \uc788\ub294 \u201c\uc6dc\u201d \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \uacbd\uc6b0 6\ubc88\uc9f8 IP \uc8fc\uc18c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. CNI\ub294 \uc774 6\ubc88\uc9f8 \ud30c\ub4dc\uc5d0 \ub450 \ubc88\uc9f8 ENI \ubc0f \ud480\uc758 5\uac1c\uc758 IP\uc5d0\uc11c IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774\uc81c \ub450 \ubc88\uc9f8 ENI\uac00 \uc0ac\uc6a9\ub418\uba70 \ub354 \uc774\uc0c1 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \uc544\ub2c8\uac8c \ub429\ub2c8\ub2e4. CNI\ub294 \ucd5c\uc18c 1\uac1c\uc758 \uc6dc ENI\ub97c \uc720\uc9c0\ud558\uae30 \uc704\ud574 \uc138 \ubc88\uc9f8 ENI\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. Note \uc6dc ENI\ub294 \uc5ec\uc804\ud788 VPC\uc758 CIDR\uc5d0 \uc788\ub294 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. IP \uc8fc\uc18c\ub294 \ud30c\ub4dc\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc5f0\uacb0\ub418\uae30 \uc804\uae4c\uc9c0\ub294 \u201c\ubbf8\uc0ac\uc6a9\u201d \ub610\ub294 \u201c\uc6dc\u201d \uc0c1\ud0dc\uac00 \ub429\ub2c8\ub2e4. WARM_IP_TARGET , \uc815\uc218, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uc720\uc9c0\ud560 \uc6dc IP \uc8fc\uc18c \uc218\uc785\ub2c8\ub2e4. \uc6dc IP\ub294 \ud65c\uc131 \uc5f0\uacb0\ub41c ENI\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \uc989, \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6dc IP\uc758 \uc218\ub294 \ucd94\uac00 ENI \uc5c6\uc774 \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 IP\uc758 \uc218\uc785\ub2c8\ub2e4. \uc608: ENI\uac00 1\uac1c\uc774\uace0 \uac01 ENI\uac00 20\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud558\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.WARM_IP_TARGET\uc740 5\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. WARM_ENI_TARGET\uc740 0\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. 16\ubc88\uc9f8 IP \uc8fc\uc18c\uac00 \ud544\uc694\ud560 \ub54c\uae4c\uc9c0\ub294 ENI 1\uac1c\ub9cc \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uadf8 \ub2e4\uc74c\uc5d0\ub294 CNI\uac00 \uc11c\ube0c\ub137 CIDR\uc758 \uac00\ub2a5\ud55c \uc8fc\uc18c 20\uac1c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub450 \ubc88\uc9f8 ENI\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. MINIMUM_IP_TARGET , \uc815\uc218, \uac12\uc774 >0\uc774\uba74 \uc694\uad6c \uc0ac\ud56d\uc774 \ud65c\uc131\ud654\ub41c \uac83\uc785\ub2c8\ub2e4. \uc5b8\uc81c\ub4e0\uc9c0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c IP \uc8fc\uc18c \uc218\uc785\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4 \uc2dc\uc791 \uc2dc \uc5ec\ub7ec ENI \ud560\ub2f9\uc744 \ubbf8\ub9ac \ubd88\ub7ec\uc624\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608: \uc0c8\ub85c \uc2dc\uc791\ud55c \uc778\uc2a4\ud134\uc2a4\ub97c \uc608\ub85c \ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. ENI\ub294 1\uac1c\uc774\uace0 \uac01 ENI\ub294 10\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucd5c\uc18c_IP_TARGET\uc740 100\uc73c\ub85c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. ENI\ub294 \ucd1d 100\uac1c\uc758 \uc8fc\uc18c\uc5d0 \ub300\ud574 9\uac1c\uc758 ENI\ub97c \uc989\uc2dc \ucd94\uac00\ub85c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc774\ub294 WARM_IP_TARGET \ub610\ub294 WARM_ENI_TARGET \uac12\uacfc \uc0c1\uad00\uc5c6\uc774 \uc774\ub904\uc9d1\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 Excel \ubb38\uc11c \uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\ub294 WARM_IP_TARGET \ubc0f WARM_ENI_TARGET \uacfc \uac19\uc740 \ub2e4\uc591\ud55c ENI \uad6c\uc131 \uc635\uc158\uc5d0 \ub530\ub77c \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc758 IP \uc8fc\uc18c \uc0ac\uc6a9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. Kubelet\uc774 \ud30c\ub4dc \ucd94\uac00 \uc694\uccad\uc744 \ubc1b\uc73c\uba74, CNI \ubc14\uc774\ub108\ub9ac\ub294 ipamd\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\ub97c \ucffc\ub9ac\ud558\uace0, ipamd\ub294 \uc774\ub97c \ud30c\ub4dc\uc5d0 \uc81c\uacf5\ud569\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud638\uc2a4\ud2b8\uc640 \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud06c\ub97c \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ub41c \ud30c\ub4dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uae30\ubcf8 ENI\uc640 \ub3d9\uc77c\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud560\ub2f9\ub418\uba70, \ud30c\ub4dc\ub97c \ub2e4\ub978 \ubcf4\uc548 \uadf8\ub8f9\uc73c\ub85c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. IP \uc8fc\uc18c \ud480\uc774 \uace0\uac08\ub418\uba74 \ud50c\ub7ec\uadf8\uc778\uc740 \uc790\ub3d9\uc73c\ub85c \ub2e4\ub978 ENI\ub97c \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ud558\uace0 \ub2e4\ub978 \ubcf4\uc870 IP \uc8fc\uc18c \uc14b\uc744 \ud574\ub2f9 \uc778\ud130\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ub294 \ub178\ub4dc\uac00 \ucd94\uac00 ENI\ub97c \ub354 \uc774\uc0c1 \uc9c0\uc6d0\ud560 \uc218 \uc5c6\uc744 \ub54c\uae4c\uc9c0 \uacc4\uc18d\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0ad\uc81c\ub418\uba74 VPC CNI\ub294 \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub97c 30\ucd08 \ucfe8\ub2e4\uc6b4 \uce90\uc2dc\uc5d0 \uc800\uc7a5\ud569\ub2c8\ub2e4. \ucfe8 \ub2e4\uc6b4 \uce90\uc2dc\uc758 IP\ub294 \uc2e0\uaddc \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucfe8\ub9c1\uc624\ud504 \uc8fc\uae30\uac00 \ub05d\ub098\uba74 VPC CNI\ub294 \ud30c\ub4dc IP\ub97c \uc6dc \ud480\ub85c \ub2e4\uc2dc \uc62e\uae41\ub2c8\ub2e4. \ucfe8\ub9c1 \uc624\ud504 \uc8fc\uae30\ub294 \ud30c\ub4dc IP \uc8fc\uc18c\uac00 \ub108\ubb34 \uc774\ub974\uac8c \uc7ac\ud65c\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uace0 \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc758 kube-proxy\uac00 iptables \uaddc\uce59 \uc5c5\ub370\uc774\ud2b8\ub97c \uc644\ub8cc\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. IP \ub610\ub294 ENI\uc758 \uc218\uac00 \uc6dc \ud480 \uc124\uc815 \uc218\ub97c \ucd08\uacfc\ud558\uba74 ipamd \ud50c\ub7ec\uadf8\uc778\uc740 VPC\uc5d0 IP\uc640 ENI\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ubcf4\uc870 IP \ubaa8\ub4dc\uc5d0\uc11c \uc55e\uc11c \uc124\uba85\ud55c \ubc14\uc640 \uac19\uc774, \uac01 \ud30c\ub4dc\ub294 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc5f0\uacb0\ub41c ENI \uc911 \ud558\ub098\ub85c\ubd80\ud130 \ud558\ub098\uc758 \ubcf4\uc870 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub97c \uc218\uc2e0\ud569\ub2c8\ub2e4. \uac01 \ud30c\ub4dc\ub294 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uae30 \ub54c\ubb38\uc5d0 \ud2b9\uc815 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc\uc758 \uc218\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 ENI\uc758 \uc218\uc640 \uc9c0\uc6d0\ud558\ub294 IP \uc8fc\uc18c\uc758 \uc218\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. VPC CNI\ub294 limit \ud30c\uc77c\uc744 \uac80\uc0ac\ud558\uc5ec \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0 \ud5c8\uc6a9\ub418\ub294 ENI\uc640 IP \uc8fc\uc18c \uc218\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uacf5\uc2dd\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. (Number of network interfaces for the instance type \u00d7 (the number of IP addresses per network interface - 1)) + 2 +2\ub294 kube-proxy \ubc0f VPC CNI\uc640 \uac19\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9\uc5d0\uc11c \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Amazon EKS\uc5d0\uc11c\ub294 \uac01 \ub178\ub4dc\uc5d0\uc11c kube-proxy \ubc0f VPC CNI\uac00 \uc791\ub3d9\ud574\uc57c \ud558\uba70, \uc774\ub7ec\ud55c \uc694\uad6c \uc0ac\ud56d\uc740 max-pods \uac12\uc5d0 \ubc18\uc601\ub429\ub2c8\ub2e4. \ucd94\uac00 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub824\uba74 max-pods \uac12 \uc5c5\ub370\uc774\ud2b8\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. +2\ub294 kube-proxy \ubc0f VPC CNI\uc640 \uac19\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4.Amazon EKS\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0\uc11c kube-proxy\uc640 VPC CNI\ub97c \uc2e4\ud589\ud574\uc57c \ud558\uba70, \uc774\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uae30\uc900\uc73c\ub85c \uacc4\uc0b0\ub429\ub2c8\ub2e4. \ub354 \ub9ce\uc740 \ud638\uc2a4\ud2b8 \ub124\ud2b8\uc6cc\ud0b9 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uacc4\ud68d\uc774\ub77c\uba74 max-pod\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0\uc11c --kubelet-extra-args \"\u2014max-pods=110\" \uc744 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\ub85c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, c5.large \ub178\ub4dc 3\uac1c (ENI 3\uac1c, ENI\ub2f9 \ucd5c\ub300 10\uac1c IP)\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\uac00 \uc2dc\uc791\ub418\uace0, CoreDNS \ud30c\ub4dc 2\uac1c\uac00 \uc788\ub294 \uacbd\uc6b0 CNI\ub294 49\uac1c\uc758 IP \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \uc6dc \ud480\uc744 \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec \uc2dc \ud30c\ub4dc\ub97c \ub354 \ube60\ub974\uac8c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc 1 (CoreDNS \ud30c\ub4dc \ud3ec\ud568): ENI 2\uac1c, IP 20\uac1c \ud560\ub2f9 \ub178\ub4dc 2 (CoreDNS \ud30c\ub4dc \ud3ec\ud568): ENI 2\uac1c, IP 20\uac1c \ud560\ub2f9 \ub178\ub4dc 3 (\ud30c\ub4dc \uc5c6\uc74c): ENI 1\uac1c, IP 10\uac1c \ud560\ub2f9 \uc8fc\ub85c \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ub418\ub294 \uc778\ud504\ub77c \ud30c\ub4dc\ub294 \uac01\uac01 \ucd5c\ub300 \ud30c\ub4dc \uc218\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\ub294 \uc810\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS Amazon Elastic LoadBalancer for metrics-server\uc6a9 \uc6b4\uc601 Pods \uc774\ub7ec\ud55c \ud30c\ub4dc\uc758 \uc6a9\ub7c9\uc744 \uc870\ud569\ud558\uc5ec \uc778\ud504\ub77c\ub97c \uacc4\ud68d\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218 \ubaa9\ub85d\uc740 GitHub\uc758 eni-max-Pods.txt \ub97c \ucc38\uc870\ud569\ub2c8\ub2e4.","title":"\uac1c\uc694"},{"location":"networking/vpc-cni/index.kr/#_2","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"networking/vpc-cni/index.kr/#ip","text":"\ubcf4\uc870 IP \ubaa8\ub4dc\ub294 \uc784\uc2dc EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\ud569\ud55c \uad6c\uc131 \uc635\uc158\uc785\ub2c8\ub2e4. EKS\ub97c \ucc98\uc74c \uc0ac\uc6a9\ud558\uac70\ub098 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911\uc778 \uc2e0\uaddc(Greenfield) \uace0\uac1d\uc740 \ubcf4\uc870 \ubaa8\ub4dc\uc5d0\uc11c VPC CNI\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ubcf4\uc870 IP \ubaa8\ub4dc \uc0ac\uc6a9"},{"location":"networking/vpc-cni/index.kr/#ip_1","text":"\ud30c\ub4dc \ubc00\ub3c4 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 Prefix \ubaa8\ub4dc\ub97c \ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv4 \uace0\uac08 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 IPv6 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. IPv6\ub97c \uace0\ub824\ud558\uace0 \uc788\uc9c0 \uc54a\uc740 \uacbd\uc6b0, \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub124\ud2b8\uc6cc\ud0b9\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \ubcf4\uc870 IP \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."},{"location":"networking/vpc-cni/index.kr/#vpc-cni","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 Amazon EKS\uac00 VPC CNI\ub97c \uc790\ub3d9\uc73c\ub85c \uc124\uce58\ud569\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \ucef4\ud4e8\ud305, \uc2a4\ud1a0\ub9ac\uc9c0, \ub124\ud2b8\uc6cc\ud0b9\uacfc \uac19\uc740 \uae30\ubcf8 AWS \ub9ac\uc18c\uc2a4\uc640 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\ub294 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. VPC CNI\ub97c \ube44\ub86f\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon EKS \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc704\ud55c VPC CNI \uc124\uce58 \ubc0f \uad00\ub9ac\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Amazon EKS \uc560\ub4dc\uc628\uc5d0\ub294 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58, \ubc84\uadf8 \uc218\uc815\uc774 \ud3ec\ud568\ub418\uba70, Amazon EKS\uc640 \ud638\ud658\ub418\ub294\uc9c0 AWS\uc758 \uac80\uc99d\uc744 \uac70\ucce4\uc2b5\ub2c8\ub2e4. VPC CNI \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf4\uc548 \ubc0f \uc548\uc815\uc131\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubcf4\uc7a5\ud558\uace0 \ucd94\uac00 \uae30\ub2a5\uc744 \uc124\uce58, \uad6c\uc131 \ubc0f \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub178\ub825\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 Amazon EKS API, AWS \uad00\ub9ac \ucf58\uc194, AWS CLI \ubc0f eksctl\uc744 \ud1b5\ud574 \ucd94\uac00, \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get \uba85\ub839\uc5b4\uc640 \ud568\uaed8 --show-managed-fields \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec VPC CNI\uc758 \uad00\ub9ac\ud615 \ud544\ub4dc\ub97c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get daemonset aws-node --show-managed-fields -n kube-system -o yaml \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 15\ubd84\ub9c8\ub2e4 \uad6c\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \ub36e\uc5b4\uc368\uc11c \uad6c\uc131 \ubcc0\ub3d9\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc989, \uc560\ub4dc\uc628 \uc0dd\uc131 \ud6c4 Kubernetes API\ub97c \ud1b5\ud574 \ubcc0\uacbd\ud55c \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc740 \uc790\ub3d9\ud654\ub41c \ub4dc\ub9ac\ud504\ud2b8 \ubc29\uc9c0 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc758\ud574 \ub36e\uc5b4\uc4f0\uc5ec\uc9c0\uace0 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0\ub3c4 \uae30\ubcf8\uac12\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ud544\ub4dc\ub294 \uad00\ub9ac\ud615 \ud544\ub4dc \uc544\ub798\uc5d0 \ub098\uc5f4\ub418\uba70 \uc774 \ud544\ub4dc\uc5d0 \ub300\ud55c \uad00\ub9ac\uc790\ub294 EKS\uc785\ub2c8\ub2e4. EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 \ud544\ub4dc\uc5d0\ub294 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8, \uc774\ubbf8\uc9c0, \uc774\ubbf8\uc9c0 URL, liveness probe, readiness probe, \ub808\uc774\ube14, \ubcfc\ub968 \ubc0f \ubcfc\ub968 \ub9c8\uc6b4\ud2b8\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Info WARM_ENI_TARGET, WARM_IP_TARGET, MINIMUM_IP_TARGET\uacfc \uac19\uc774 \uc790\uc8fc \uc0ac\uc6a9\ub418\ub294 \ud544\ub4dc\ub294 \uad00\ub9ac\ub418\uc9c0 \uc54a\uc73c\uba70 \uc870\uc815\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc740 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \uc2dc\uc5d0\ub3c4 \uc720\uc9c0\ub429\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804, \ud2b9\uc815 \uad6c\uc131\uc758 \ube44\ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc560\ub4dc\uc628 \ub3d9\uc791\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc560\ub4dc\uc628 \uad6c\uc131\uc5d0 \ub300\ud574\uc11c\ub294 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\uc758 \ub2e8\uacc4\ub97c \ub530\ub77c\ud569\ub2c8\ub2e4.","title":"VPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \ubc30\ud3ec"},{"location":"networking/vpc-cni/index.kr/#_3","text":"\uc790\uccb4 \uad00\ub9ac\ud615 VPC CNI\uc758 \ubc84\uc804 \ud638\ud658\uc131\uc744 \uad00\ub9ac\ud558\uace0 \ubcf4\uc548 \ud328\uce58\ub97c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc \uc5d0 \uc124\uba85\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc640 \uc548\ub0b4\ub97c \ud65c\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\uc874 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0, \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc774 \uc88b\uc73c\uba70, \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc804\uc5d0 \ud604\uc7ac CNI \uc124\uc815\uc744 \ubc31\uc5c5\ud574 \ub458 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uad6c\uc131\ud558\ub824\uba74 Amazon EKS API, AWS \uad00\ub9ac \ucf58\uc194 \ub610\ub294 AWS \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml \ud544\ub4dc\uac00 \uae30\ubcf8 \uc124\uc815\uc73c\ub85c \uad00\ub9ac\ub418\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc\ub41c \uacbd\uc6b0 Amazon EKS\ub294 CNI \uad6c\uc131 \uc124\uc815\uc744 \ub300\uccb4\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ud544\ub4dc\ub97c \uc218\uc815\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud569\ub2c8\ub2e4. \uc560\ub4dc\uc628\uc740 \uc6dc \ud658\uacbd \ubcc0\uc218 \ubc0f CNI \ubaa8\ub4dc\uc640 \uac19\uc740 \uad6c\uc131 \ud544\ub4dc\ub97c \uc870\uc815\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uad00\ub9ac\ud615 CNI\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \ub3d9\uc548 \uacc4\uc18d \uc2e4\ud589\ub429\ub2c8\ub2e4.","title":"\uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"},{"location":"networking/vpc-cni/index.kr/#cni","text":"VPC CNI\ub294 \uace0\uac1d\uc758 \ub370\uc774\ud130 \ud50c\ub808\uc778(\ub178\ub4dc)\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c Amazon EKS\ub294 \uc2e0\uaddc \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uac70\ub098 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8 \ud55c \ud6c4\uc5d0 \uc2e0\uaddc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c (\uad00\ub9ac\ud615 \ubc0f \uc790\uccb4 \uad00\ub9ac\ud615)\uc560\ub4dc\uc628\uc744 \uc790\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uae30\uc874 \ud074\ub7ec\uc2a4\ud130\uc758 \uc560\ub4dc\uc628\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 update-adon API\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 EKS \ucf58\uc194\uc5d0\uc11c \uc560\ub4dc\uc628\uc6a9 update now \ub9c1\ud06c\ub97c \ud074\ub9ad\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\ub97c \ud2b8\ub9ac\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \ubc30\ud3ec\ud55c \uacbd\uc6b0 \uc790\uccb4 \uad00\ub9ac\ud615 VPC CNI \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \uc5d0 \uc548\ub0b4\ub41c \ub2e8\uacc4\ub97c \ub530\ub974\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc529 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud604\uc7ac \ub9c8\uc774\ub108 \ubc84\uc804\uc774 1.9 \uc774\uace0 1.11 \ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uacbd\uc6b0, \uba3c\uc800 1.10 \uc758 \ucd5c\uc2e0 \ud328\uce58 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c \ub2e4\uc74c 1.11 \uc758 \ucd5c\uc2e0 \ud328\uce58 \ubc84\uc804\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon VPC CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 AWS \ub178\ub4dc \ub370\ubaac\uc14b \uac80\uc0ac\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uae30\uc874 \uc124\uc815\uc744 \ubc31\uc5c5\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 Amazon EKS\uc5d0\uc11c \uc7ac\uc815\uc758\ud560 \uc218 \uc788\ub294 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc790\ub3d9\ud654 \uc6cc\ud06c\ud50c\ub85c\uc758 \uc5c5\ub370\uc774\ud2b8 \ud6c5 \ud639\uc740 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ud6c4 \uc218\ub3d9 \uc801\uc6a9 \ub2e8\uacc4\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. kubectl apply view-last-applied daemonset aws-node -n kube-system > aws-k8s-cni-old.yaml \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc758 \uacbd\uc6b0 \ubc31\uc5c5\uc744 GitHub\uc758 releases \ub0b4\uc6a9\uacfc \ube44\uad50\ud558\uc5ec \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubc84\uc804\uc744 \ud655\uc778\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ud558\ub824\ub294 \ubc84\uc804\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc219\uc9c0\ud569\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc744 \uad00\ub9ac\ud558\uace0 values \ud30c\uc77c\uc744 \ud65c\uc6a9\ud558\uc5ec \uc124\uc815\uc744 \uc801\uc6a9\ud558\ub824\uba74 \ud5ec\ub984(Helm)\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub370\ubaac\uc14b \uc0ad\uc81c\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc5c5\ub370\uc774\ud2b8 \uc791\uc5c5\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub2e4\uc6b4\ud0c0\uc784\uc73c\ub85c \uc774\uc5b4\uc9c0\ubbc0\ub85c \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5c5\ub370\uc774\ud2b8 \uc804 CNI \uc124\uc815 \ubc31\uc5c5"},{"location":"networking/vpc-cni/index.kr/#_4","text":"VPC CNI\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \uc704\ud574 \uad6c\uc131\ub41c \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc774\ud574\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Amazon VPC CNI\uc5d0\ub294 CNI \ubc14\uc774\ub108\ub9ac\uc640 ipamd(AWS-node) \ub370\ubaac\uc14b\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uad6c\uc131 \uc694\uc18c\uac00 \uc788\uc2b5\ub2c8\ub2e4. CNI\ub294 \ub178\ub4dc\uc5d0\uc11c \ubc14\uc774\ub108\ub9ac\ub85c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\uba70, \ub178\ub4dc \uc218\uc900\uc5d0\uc11c iptables\ub97c \ucc98\ub9ac\ud558\ubbc0\ub85c privileged \uc811\uadfc\uc5d0 \ub300\ud55c \uad8c\ud55c\ub3c4 \uac16\uc2b5\ub2c8\ub2e4. CNI \ubc14\uc774\ub108\ub9ac\ub294 \ud30c\ub4dc\uac00 \ucd94\uac00\ub418\uac70\ub098 \uc81c\uac70\ub420 \ub54c kubelet\uc5d0 \uc758\ud574 \ud638\ucd9c\ub429\ub2c8\ub2e4. aws-node \ub370\ubaac\uc14b\uc740 \ub178\ub4dc \uc218\uc900\uc5d0\uc11c IP \uc8fc\uc18c \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud558\ub294 \uc7a5\uae30 \uc2e4\ud589 \ud504\ub85c\uc138\uc2a4\uc785\ub2c8\ub2e4. aws-node\ub294 hostNetwork \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ub8e8\ud504\ubc31 \ub514\ubc14\uc774\uc2a4 \ubc0f \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0 \uc788\ub294 \ub2e4\ub978 \ud30c\ub4dc\uc758 \ub124\ud2b8\uc6cc\ud06c \ud65c\ub3d9\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. aws-node\uc758 \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108\ub294 privileged \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 CRI \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\uc5ec \ub370\ubaac\uc14b\uc774 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc758 IP \uc0ac\uc6a9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Amazon EKS\ub294 aws-node\uc758 \ucd08\uae30\ud654 \ucee8\ud14c\uc774\ub108\uc758 privileged \uc694\uad6c \uc0ac\ud56d\uc744 \uc81c\uac70\ud558\uae30 \uc704\ud574 \ub178\ub825\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c aws-node\ub294 NAT \ud56d\ubaa9\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uace0 iptables \ubaa8\ub4c8\uc744 \ub85c\ub4dc\ud574\uc57c \ud558\ubbc0\ub85c NET_ADMIN \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon EKS\ub294 \ud30c\ub4dc \ubc0f \ub124\ud2b8\uc6cc\ud0b9 \uc124\uc815\uc758 IP \uad00\ub9ac\ub97c \uc704\ud574 aws-node \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0\uc11c \uc815\uc758\ud55c \ub300\ub85c \ubcf4\uc548 \uc815\ucc45\uc744 \ubc30\ud3ec\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 VPC CNI\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \ubcf4\uc548 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \uacbd\uc6b0 GitHub \uc774\uc288 \ud655\uc778\ud574 \ubd05\ub2c8\ub2e4.","title":"\ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 \uc774\ud574"},{"location":"networking/vpc-cni/index.kr/#cni-iam","text":"AWS VPC CNI\uc5d0\ub294 AWS \uc790\uaca9 \uc99d\uba85 \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac(IAM) \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \uba3c\uc800 CNI \uc815\ucc45\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. IPv4 \ud074\ub7ec\uc2a4\ud130\uc6a9 AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc778 AmazonEKS_CNI_Policy \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AmazonEK\uc758 CNI \uad00\ub9ac\ud615 \uc815\ucc45\uc5d0\ub294 IPv4 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uad8c\ud55c\ub9cc \uc874\uc7ac\ud569\ub2c8\ub2e4. \uc774 \ub9c1\ud06c\uc5d0 \uc5d0 \ud45c\uc2dc\ub41c \uad8c\ud55c\uc744 \uc0ac\uc6a9\ud558\uc5ec IPv6 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 IAM \uc815\ucc45\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c VPC CNI\ub294 (\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubaa8\ub450) Amazon EKS \ub178\ub4dc IAM \uc5ed\ud560 \uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. Amazon VPC CNI\uc5d0 \ub300\ud55c \uad00\ub828 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uac15\ub825\ud558\uac8c \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Amazon VPC CNI\uc758 \ud30c\ub4dc\ub294 \ub178\ub4dc IAM \uc5ed\ud560\uc5d0 \ud560\ub2f9\ub41c \uad8c\ud55c\uc744 \uc5bb\uace0 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc5d0 \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC CNI \ud50c\ub7ec\uadf8\uc778\uc740 aws-node\ub77c\ub294 \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0dd\uc131\ud558\uace0 \uad6c\uc131\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub294 Amazon EKS CNI \uc815\ucc45\uc774 \uc5f0\uacb0\ub41c Amazon EKS \ub178\ub4dc\uc758 IAM \uc5ed\ud560\uc5d0 \ubc14\uc778\ub529\ub429\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 Amazon EKS CNI \uc815\ucc45\uc774 \uc5f0\uacb0\ub41c \uc2e0\uaddc \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0dd\uc131 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2e0\uaddc \uc11c\ube44\uc2a4 \uc5b4\uce74\uc6b4\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 CNI \ud30c\ub4dc \uc7ac\ubc30\ud3ec \ub97c \uc9c4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2e0\uaddc \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c VPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc5d0 --service-account-role-arn \uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc774 \ub54c Amazon EKS \ub178\ub4dc\uc758 IAM \uc5ed\ud560\uc5d0\uc11c IPv4\uc640 IPv6 \ubaa8\ub450\uc5d0 \ub300\ud55c Amazon EKS CNI \uc815\ucc45\uc744 \ubc18\ub4dc\uc2dc \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \ubcf4\uc548 \uce68\ud574\uc758 \ud53c\ud574 \ubc94\uc704\ub97c \ucd5c\uc18c\ud654\ud558\ub824\uba74 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \uc811\uadfc\uc744 \ucc28\ub2e8 \ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.","title":"CNI\uc5d0 \ubcc4\ub3c4\uc758 IAM \uc5ed\ud560 \uc0ac\uc6a9"},{"location":"networking/vpc-cni/index.kr/#livenessreadiness-probe","text":"\ud504\ub85c\ube0c \uc2e4\ud328\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\uac00 \ucee8\ud14c\uc774\ub108 \uc0dd\uc131 \uc0c1\ud0dc\uc5d0\uc11c \uba48\ucd94\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 EKS 1.20 \ubc84\uc804 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc758 liveness \ubc0f readiness probe\uc758 \ud0c0\uc784\uc544\uc6c3 \uac12 (\uae30\ubcf8\uac12 TimeoutSeconds: 10 )\uc744 \ub192\uc77c \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc774\uc288\ub294 \ub370\uc774\ud130 \uc9d1\uc57d\uc801\uc778 \ubc30\uce58 \ucc98\ub9ac \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubc1c\uacac\ub418\uc5c8\uc2b5\ub2c8\ub2e4. CPU\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud558\uba74 AWS \ub178\ub4dc \ud504\ub85c\ube0c \uc0c1\ud0dc \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uc5ec Pod CPU \ub9ac\uc18c\uc2a4 \uc694\uccad\uc774 \ucda9\uc871\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ube0c \ud0c0\uc784\uc544\uc6c3\uc744 \uc218\uc815\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 aws-node\uc5d0 \ub300\ud55c CPU \ub9ac\uc18c\uc2a4 \uc694\uccad (\uae30\ubcf8\uac12 CPU: 25m ) \uc774 \uc62c\ubc14\ub974\uac8c \uad6c\uc131\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294 \uacbd\uc6b0\uac00 \uc544\ub2c8\uba74 \uc124\uc815\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. Amazon EKS \uc9c0\uc6d0\uc744 \ubc1b\ub294 \ub3d9\uc548 \ub178\ub4dc\uc5d0\uc11c sudo bash /opt/cni/bin/aws-cni-support.sh \ub97c \uc2e4\ud589\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc2a4\ud06c\ub9bd\ud2b8\ub294 \ub178\ub4dc\uc758 kubelet \ub85c\uadf8\uc640 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960\uc744 \ud3c9\uac00\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud574 Amazon EKS \uc6cc\ucee4 \ub178\ub4dc\uc5d0 SSM \uc5d0\uc774\uc804\ud2b8\ub97c \ud558\ub294 \uac83\uc744 \uace0\ub824\ud574\ubcf4\uc138\uc694.","title":"Liveness/Readiness Probe \uc2e4\ud328 \ucc98\ub9ac"},{"location":"networking/vpc-cni/index.kr/#ip_2","text":"CNI \uba54\ud2b8\ub9ad \ub3c4\uc6b0\ubbf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c \uc778\ubca4\ud1a0\ub9ac\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 ENI \uc218 \uc774\ubbf8 \ud560\ub2f9\ub41c ENI \uc218 \ud604\uc7ac \ud30c\ub4dc\uc5d0 \ud560\ub2f9\ub41c IP \uc8fc\uc18c \uc218 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd1d IP \uc8fc\uc18c \uc218 \ubc0f \ucd5c\ub300 \uc218 \uc11c\ube0c\ub137\uc5d0 IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud560 \uacbd\uc6b0 \uc54c\ub9bc\uc744 \ubc1b\ub3c4\ub85d CloudWatch Alarm \uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. CNI metrics helper \uc758 \uc124\uce58 \ubc29\ubc95\uc740 EKS \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc\ub97c \ucc38\uc870\ud569\ub2c8\ub2e4. VPC CNI\uc758 DISABLE_METRICS \ubcc0\uc218\uac00 false\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.","title":"IP \uc8fc\uc18c \uc778\ubca4\ud1a0\ub9ac \ubaa8\ub2c8\ud130\ub9c1"},{"location":"networking/vpc-cni/index.kr/#_5","text":"\ud655\uc7a5\uc744 \uc704\ud574\uc11c\ub294 \uc11c\ube0c\ub137 \ud06c\uae30\ub97c \uc870\uc815\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc758 \ud06c\uae30\ub97c \uc801\uc808\ud558\uac8c \uc870\uc815\ud558\uba74 \ud30c\ub4dc\uc640 \ub178\ub4dc\uac00 \ud655\uc7a5\ub420 \ub54c \uc11c\ube0c\ub137\uc758 IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud574\uc9c0\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube0c\ub137\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 \uc2e0\uaddc \ud30c\ub4dc\ub098 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. CNI\uac00 \uce90\uc2f1\ud558\ub294 IP \uc8fc\uc18c\ub97c \uc81c\ud55c\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc6dc \ud480 CNI \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPC\uc758 \uc11c\ube0c\ub137\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ubd80\uc871\ud55c \uacbd\uc6b0 VPC\uc758 \uc6d0\ub798 CIDR \ube14\ub85d\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e0\uaddc \uc11c\ube0c\ub137\uc744 \uc0dd\uc131 \ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc0d8\ud50c EKS \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 \uc2a4\ud504\ub808\ub4dc\uc2dc\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uad6c\uc131\uc744 \uacc4\ud68d\ud569\ub2c8\ub2e4. EKS \uc11c\ube0c\ub137 \uacc4\uc0b0\uae30 \uc2a4\ud504\ub808\ub4dc\uc2dc\ud2b8\ub294 \uc6cc\ud06c\ub85c\ub4dc \ubc0f VPC ENI \uad6c\uc131\uc744 \uae30\ubc18\uc73c\ub85c IP \uc0ac\uc6a9\ub7c9\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. IP \uc0ac\uc6a9\ub7c9\uc744 IPv4 \uc11c\ube0c\ub137\uacfc \ube44\uad50\ud558\uc5ec \uad6c\uc131 \uac12 \ubc0f \uc11c\ube0c\ub137 \ud06c\uae30\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucda9\ubd84\ud55c\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.","title":"\ud655\uc7a5 \uacc4\ud68d"},{"location":"networking/vpc-cni/index.kr/#ip-eni","text":"Warning IP \uc8fc\uc18c \uace0\uac08\uc5d0 \ub300\ud55c \uad8c\uc7a5 \ub300\uc751 \ubc29\ubc95\uc740 VPC \uc124\uacc4\ub97c \uac1c\uc120\ud558\ub294 \uac83\uc73c\ub85c, IPv6 \ubc0f \ubcf4\uc870 CIDR\uacfc \uac19\uc740 \uc194\ub8e8\uc158\uc744 \uace0\ub824\ud569\ub2c8\ub2e4. \uc544\ub798 \uac12\uc744 \uc870\uc815\ud558\uc5ec \uc6dc IP \uc218\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc740 \ub2e4\ub978 \uc635\uc158\uc774 \ubd88\uac00\ud55c \uc0c1\ud669\uc5d0\uc11c\uc758 \uc784\uc2dc \ud574\uacb0\ucc45\uc73c\ub85c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac12\uc744 \uc798\ubabb \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub3d9\uc791\uc5d0 \ubc29\ud574\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\uc131\uc5d0\uc11c VPC CNI\ub294 \uc804\uccb4 ENI(\ubc0f \uc5f0\uacb0\ub41c IP)\ub97c \uc6dc \ud480\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \uc774 \uad6c\uc131\uc5d0\uc11c\ub294 \ub300\uaddc\ubaa8 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\uc11c \ub9ce\uc740 \uc218\uc758 IP\ub97c \uc18c\ube44\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \uc218\uac00 \uc81c\ud55c\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c VPC CNI \uad6c\uc131 \ud658\uacbd \ubcc0\uc218\ub97c \uba74\ubc00\ud788 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4. WARM_IP_TARGET MINIMUM_IP_TARGET WARM_ENI_TARGET \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\ub294 \ud30c\ub4dc\uc758 \uc218\uc640 \uac70\uc758 \uc77c\uce58\ud558\ub3c4\ub85d MINIMUM_IP_TARGET\uc758 \uac12\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud30c\ub4dc\uac00 \uc0dd\uc131\ub420 \ub54c CNI\uac00 EC2 API\ub97c \ud638\ucd9c\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc6dc \ud480\uc758 IP \uc8fc\uc18c\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. WARM_IP_TARGET \uac12\uc744 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uba74 EC2 API\uc5d0 \ub300\ud55c \ucd94\uac00 \ud638\ucd9c\uc774 \ubc1c\uc0dd\ud558\uc5ec API\uc694\uccad\uc5d0 \ub300\ud55c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 MINIMUM_IP_TARGET\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc635\uc158\uc744 \uad6c\uc131\ud558\ub824\uba74 aws-k8s-cni.yaml \uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774 \uae00\uc758 \uc791\uc131 \uc2dc\uc810\uc5d0\uc11c \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4\ub294 \uc774 \ub9c1\ud06c \uc5d0 \uae30\uc7ac\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uad6c\uc131 \uac12\uc758 \ubc84\uc804\uc774 \uc124\uce58\ub41c VPC CNI \ubc84\uc804\uacfc \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. Warning CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \uc6dc \uc124\uc815\uc774 \uae30\ubcf8\uac12\uc73c\ub85c \uc7ac\uc124\uc815\ub429\ub2c8\ub2e4. CNI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 CNI\ub97c \ubc31\uc5c5\ud569\ub2c8\ub2e4. \uad6c\uc131 \uc124\uc815\uc744 \uac80\ud1a0\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8\uac00 \uc131\uacf5\ud55c \ud6c4 \uc7ac\uc801\uc6a9\ud574\uc57c \ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4.","title":"\uc8fc\uc18c \uc81c\uc57d\uc774 \uc788\ub294 \ud658\uacbd\uc5d0\uc11c IP \ubc0f ENI \ub300\uc0c1 \uac12 \uad6c\uc131"},{"location":"networking/vpc-cni/index.kr/#warm-eni","text":"\ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ud30c\ub4dc \uc2a4\ucf00\uc77c\ub9c1 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub9de\uac8c \uae30\ubcf8 WARM_ENI_TARGET \uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. WARM_ENI_TARGET \uc744 \ub192\uc740 \uac12\uc73c\ub85c \uc124\uc815\ud558\uba74 \ub300\uaddc\ubaa8 \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc6dc IP \ud480\uc774 \ud56d\uc0c1 \uc720\uc9c0\ub418\ubbc0\ub85c \ub370\uc774\ud130 \ucc98\ub9ac \uc9c0\uc5f0\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c Warm ENI \uac12 \uad6c\uc131"},{"location":"networking/vpc-cni/index.kr/#eks-ami-iptables","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 kubelet.service \uc5d0\uc11c iptables \uc804\ub2ec \uc815\ucc45\uc744 ACCEPT\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9ce\uc740 \uc2dc\uc2a4\ud15c\uc5d0\uc11c iptables \uc804\ub2ec \uc815\ucc45\uc774 DROP\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. HashiCorp Packer \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \ube4c\ub4dc\ud558\uace0 AWS GitHub\uc758 Amazon EKS AMI \uc800\uc7a5\uc18c \uc5d0\uc11c \ub9ac\uc18c\uc2a4 \ubc0f \uad6c\uc131 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube4c\ub4dc \uc0ac\uc591\uc744 \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubelet.service \ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uc774 \ub9c1\ud06c \uc5d0 \uc124\uba85\ub41c \uc548\ub0b4\uc5d0 \ub530\ub77c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ube44 EKS \ucd5c\uc801\ud654 AMI \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c IPtables \uc804\ub2ec \uc815\ucc45 \uad6c\uc131"},{"location":"networking/vpc-cni/index.kr/#cni_1","text":"VPC CNI\ub294 \uc774\uc804 \ubc84\uc804\uacfc \ud638\ud658\ub429\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc740 \ubaa8\ub4e0 Amazon EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uacfc \ud638\ud658\ub429\ub2c8\ub2e4. \ub610\ud55c VPC CNI\ub294 EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4(\uc704\uc758 \u201cVPC CNI \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \ubc30\ud3ec\u201d \ucc38\uc870). EKS \uc560\ub4dc\uc628\uc740 \uc560\ub4dc\uc628 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad00\ub9ac\ud558\uc9c0\ub9cc CNI\uc640 \uac19\uc740 \uc560\ub4dc\uc628\uc740 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ubc0f \uc790\uccb4 \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4\uc5d0\ub294 VPC CNI \uc560\ub4dc\uc628\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc815\uae30\uc801\uc778 CNI \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc"},{"location":"operational_excellence/operational_excellence/","text":"","title":"Operational excellence"},{"location":"performance/performance/","text":"Performance Efficiency Pillar \u00b6 The performance efficiency pillar focuses on the efficient use of computing resources to meet requirements and how to maintain that efficiency as demand changes and technologies evolve. This section provides in-depth, best practices guidance for architecting for performance efficiency on AWS. Definition \u00b6 To ensure the efficient use of EKS container services, you should gather data on all aspects of the architecture, from the high-level design to the selection of EKS resource types. By reviewing your choices on a regular basis, you ensure that you are taking advantage of the continually evolving Amazon EKS and Container services. Monitoring will ensure that you are aware of any deviance from expected performance so you can take action on it. Performance efficiency for EKS containers is composed of three areas: Optimize your container Resource Management Scalability Management Best Practices \u00b6 Optimize your container \u00b6 You can run most applications in a Docker container without too much hassle. There are a number of things that you need to do to ensure it's running effectively in a production environment, including streamlining the build process. The following best practices will help you to achieve that. Recommendations \u00b6 Make your container images stateless: A container created with a Docker image should be ephemeral and immutable. In other words, the container should be disposable and independent, i.e. a new one can be built and put in place with absolutely no configuration changes. Design your containers to be stateless. If you would like to use persistent data, use volumes instead. If you would like to store secrets or sensitive application data used by services, you can use solutions like AWS Systems Manager Parameter Store or third-party offerings or open source solutions, such as HashiCorp Valut and Consul , for runtime configurations. Minimal base image : Start with a small base image. Every other instruction in the Dockerfile builds on top of this image. The smaller the base image, the smaller the resulting image is, and the more quickly it can be downloaded. For example, the alpine:3.7 image is 71 MB smaller than the centos:7 image. You can even use the scratch base image, which is an empty image on which you can build your own runtime environment. Avoid unnecessary packages: When building a container image, include only the dependencies what your application needs and avoid installing unnecessary packages. For example if your application does not need an SSH server, don't include one. This will reduce complexity, dependencies, file sizes, and build times. To exclude files not relevant to the build use a .dockerignore file. Use multi-stage build :Multi-stage builds allow you to build your application in a first \"build\" container and use the result in another container, while using the same Dockerfile. To expand a bit on that, in multi-stage builds, you use multiple FROM statements in your Dockerfile. Each FROM instruction can use a different base, and each of them begins a new stage of the build. You can selectively copy artifacts from one stage to another, leaving behind everything you don't want in the final image. This method drastically reduces the size of your final image, without struggling to reduce the number of intermediate layers and files. Minimize number of layers: Each instruction in the Dockerfile adds an extra layer to the Docker image. The number of instructions and layers should be kept to a minimum as this affects build performance and time. For example, the first instruction below will create multiple layers, whereas the second instruction by using &&(chaining) we reduced the number of layers, which will help provide better performance. The is the best way to reduce the number of layers that will be created in your Dockerfile. RUN apt-get -y update RUN apt-get install -y python RUN apt-get -y update && apt-get install -y python Properly tag your images: When building images, always tag them with useful and meaningful tags. This is a good way to organize and document metadata describing an image, for example, by including a unique counter like build id from a CI server (e.g. CodeBuild or Jenkins) to help with identifying the correct image. The tag latest is used by default if you do not provide one in your Docker commands. We recommend not to use the automatically created latest tag, because by using this tag you'll automatically be running future major releases, which could include breaking changes for your application. The best practice is to avoid the latest tag and instead use the unique digest created by your CI server. Use Build Cache to improve build speed : The cache allows you to take advantage of existing cached images, rather than building each image from scratch. For example, you should add the source code of your application as late as possible in your Dockerfile so that the base image and your application's dependencies get cached and aren't rebuilt on every build. To reuse already cached images, By default in Amazon EKS, the kubelet will try to pull each image from the specified registry. However, if the imagePullPolicy property of the container is set to IfNotPresent or Never, then a local image is used (preferentially or exclusively, respectively). Image Security : Using public images may be a great way to start working on containers and deploying it to Kubernetes. However, using them in production can come with a set of challenges. Especially when it comes to security. Ensure to follow the best practices for packaging and distributing the containers/applications. For example, don't build your containers with passwords baked in also you might need to control what's inside them. Recommend to use private repository such as Amazon ECR and leverage the in-built image scanning feature to identify software vulnerabilities in your container images. Right size your containers: As you develop and run applications in containers, there are a few key areas to consider. How you size containers and manage your application deployments can negatively impact the end-user experience of services that you provide. To help you succeed, the following best practices will help you right size your containers. After you determine the number of resources required for your application, you should set requests and limits Kubernetes to ensure that your applications are running correctly. (a) Perform testing of the application : to gather vital statistics and other performance Based upon this data you can work out the optimal configuration, in terms of memory and CPU, for your container. Vital statistics such as : CPU, Latency, I/O, Memory usage, Network . Determine expected, mean, and peak container memory and CPU usage by doing a separate load test if necessary. Also consider all the processes that might potentially run in parallel in the container. Recommend to use CloudWatch Container insights or partner products, which will give you the right information to size containers and the Worker nodes. (b)Test services independently: As many applications depend on each other in a true microservice architecture, you need to test them with a high degree of independence meaning that the services are both able to properly function by themselves, as well as function as part of a cohesive system. Resource Management \u00b6 One of the most common questions that asked in the adoption of Kubernetes is \" What should I put in a Pod? \". For example, a three tier LAMP application container. Should we keep this application in the same pod? Well, this works effectively as a single pod but this is an example of an anti-pattern for Pod creation. There are two reasons for that (a) If you have both the containers in the same Pod, you are forced to use the same scaling strategy which is not ideal for production environment also you can't effectively manage or constraint resources based on the usage. E.g: you might need to scale just the frontend not frontend and backend (MySQL) as a unit also if you would like to increase the resources dedicated just to the backend, you cant just do that. (b) If you have two separate pods, one for frontend and other for backend. Scaling would be very easy and you get a better reliability. The above might not work in all the use-cases. In the above example frontend and backend may land in different machines and they will communicate with each other via network, So you need to ask the question \" Will my application work correctly, If they are placed and run on different machines? \" If the answer is a \" no \" may be because of the application design or for some other technical reasons, then grouping of containers in a single pod makes sense. If the answer is \" Yes \" then multiple Pods is the correct approach. Recommendations \u00b6 Package a single application per container: A container works best when a single application runs inside it. This application should have a single parent process. For example, do not run PHP and MySQL in the same container: it's harder to debug, and you can't horizontally scale the PHP container alone. This separation allows you to better tie the lifecycle of the application to that of the container. Your containers should be both stateless and immutable. Stateless means that any state (persistent data of any kind) is stored outside of the container, for example, you can use different kinds of external storage like Persistent disk, Amazon EBS, and Amazon EFS if needed, or managed database like Amazon RDS. Immutable means that a container will not be modified during its life: no updates, no patches, and no configuration changes. To update the application code or apply a patch, you build a new image and deploy it. Use Labels to Kubernetes Objects: Labels allow Kubernetes objects to be queried and operated upon in bulk. They can also be used to identify and organize Kubernetes objects into groups. As such defining labels should figure right at the top of any Kubernetes best practices list. Setting resource request limits: Setting request limits is the mechanism used to control the amount of system resources that a container can consume such as CPU and memory. These settings are what the container is guaranteed to get when the container initially starts. If a container requests a resource, container orchestrators such as Kubernetes will only schedule it on a node that can provide that resource. Limits, on the other hand, make sure that a container never goes above a certain value. The container is only allowed to go up to the limit, and then it is restricted. In the below example Pod manifest, we add a limit of 1.0 CPU and 256 MB of memory apiVersion: v1 kind: Pod metadata: name: nginx-pod-webserver labels: name: nginx-pod spec: containers: - name: nginx image: nginx:latest resources: limits: memory: \"256Mi\" cpu: \"1000m\" requests: memory: \"128Mi\" cpu: \"500m\" ports: - containerPort: 80 It's a best practice to define these requests and limits in your pod definitions. If you don't include these values, the scheduler doesn't understand what resources are needed. Without this information, the scheduler might schedule the pod on a node without sufficient resources to provide acceptable application performance. Limit the number of concurrent disruptions: Use PodDisruptionBudget , This settings allows you to set a policy on the minimum available and maximum unavailable pods during voluntary eviction events. An example of an eviction would be when perform maintenance on the node or draining a node. Example: A web frontend might want to ensure that 8 Pods to be available at any given time. In this scenario, an eviction can evict as many pods as it wants, as long as eight are available. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: frontend-demo spec: minAvailable: 8 selector: matchLabels: app: frontend N.B: You can also specify pod disruption budget as a percentage by using maxAvailable or maxUnavailable parameter. Use Namespaces: Namespaces allows a physical cluster to be shared by multiple teams. A namespace allows to partition created resources into a logically named group. This allows you to set resource quotas per namespace, Role-Based Access Control (RBAC) per namespace, and also network policies per namespace. It gives you soft multitenancy features. For example, If you have three applications running on a single Amazon EKS cluster accessed by three different teams which requires multiple resource constraints and different levels of QoS each group you could create a namespace per team and give each team a quota on the number of resources that it can utilize, such as CPU and memory. You can also specify default limits in Kubernetes namespaces level by enabling LimitRange admission controller. These default limits will constrain the amount of CPU or memory a given Pod can use unless the defaults are explicitly overridden by the Pod's configuration. Manage Resource Quota: Each namespace can be assigned resource quota. Specifying quota allows to restrict how much of cluster resources can be consumed across all resources in a namespace. Resource quota can be defined by a ResourceQuota object. A presence of ResourceQuota object in a namespace ensures that resource quotas are enforced. Configure Health Checks for Pods: Health checks are a simple way to let the system know if an instance of your app is working or not. If an instance of your app is not working, then other services should not access it or send requests to it. Instead, requests should be sent to another instance of the app that is working. The system also should bring your app back to a healthy state. By default, all the running pods have the restart policy set to always which means the kubelet running within a node will automatically restart a pod when the container encounters an error. Health checks extend this capability of kubelet through the concept of container probes . Kubernetes provides two types of health checks : readiness and liveness probes. For example, consider if one of your applications, which typically runs for long periods of time, transitions to a non-running state and can only recover by being restarted. You can use liveness probes to detect and remedy such situations. Using health checks gives your applications better reliability, and higher uptime. Advanced Scheduling Techniques: Generally, schedulers ensure that pods are placed only on nodes that have sufficient free resources, and across nodes, they try to balance out the resource utilization across nodes, deployments, replicas, and so on. But sometimes you want to control how your pods are scheduled. For example, perhaps you want to ensure that certain pods are only scheduled on nodes with specialized hardware, such as requiring a GPU machine for an ML workload. Or you want to collocate services that communicate frequently. Kubernetes offers many advanced scheduling features and multiple filters/constraints to schedule the pods on the right node. For example, when using Amazon EKS, you can use taints and tolerations to restrict what workloads can run on specific nodes. You can also control pod scheduling using node selectors and affinity and anti-affinity constructs and even have your own custom scheduler built for this purpose. Scalability Management \u00b6 Containers are stateless. They are born and when they die, they are not resurrected. There are many techniques that you can leverage on Amazon EKS, not only to scale out your containerized applications but also the Kubernetes worker node. Recommendations \u00b6 On Amazon EKS, you can configure Horizontal pod autoscaler ,which automatically scales the number of pods in a replication controller, deployment, or replica set based on observed CPU utilization (or use custom metrics based on application-provided metrics). You can use Vertical Pod Autoscaler which automatically adjusts the CPU and memory reservations for your pods to help \"right size\" your applications. This adjustment can improve cluster resource utilization and free up CPU and memory for other pods. This is useful in scenarios like your production database \"MongoDB\" does not scale the same way as a stateless application frontend, In this scenario you could use VPA to scale up the MongoDB Pod. To enable VPA you need to use Kubernetes metrics server, which is an aggregator of resource usage data in your cluster. It is not deployed by default in Amazon EKS clusters. You need to configure it before configure VPA alternatively you can also use Prometheus to provide metrics for the Vertical Pod Autoscaler. While HPA and VPA scale the deployments and pods, Cluster Autoscaler will scale-out and scale-in the size of the pool of worker nodes. It adjusts the size of a Kubernetes cluster based on the current utilization. Cluster Autoscaler increases the size of the cluster when there are pods that failed to schedule on any of the current nodes due to insufficient resources or when adding a new node would increase the overall availability of cluster resources. Please follow this step by step guide to setup Cluster Autoscaler. If you are using Amazon EKS on AWS Fargate, AWS Manages the control plane for you. Please have a look at the reliability pillar for detailed information. Monitoring \u00b6 Deployment Best Practices \u00b6 Trade-Offs \u00b6","title":"Performance Efficiency Pillar"},{"location":"performance/performance/#performance-efficiency-pillar","text":"The performance efficiency pillar focuses on the efficient use of computing resources to meet requirements and how to maintain that efficiency as demand changes and technologies evolve. This section provides in-depth, best practices guidance for architecting for performance efficiency on AWS.","title":"Performance Efficiency Pillar"},{"location":"performance/performance/#definition","text":"To ensure the efficient use of EKS container services, you should gather data on all aspects of the architecture, from the high-level design to the selection of EKS resource types. By reviewing your choices on a regular basis, you ensure that you are taking advantage of the continually evolving Amazon EKS and Container services. Monitoring will ensure that you are aware of any deviance from expected performance so you can take action on it. Performance efficiency for EKS containers is composed of three areas: Optimize your container Resource Management Scalability Management","title":"Definition"},{"location":"performance/performance/#best-practices","text":"","title":"Best Practices"},{"location":"performance/performance/#optimize-your-container","text":"You can run most applications in a Docker container without too much hassle. There are a number of things that you need to do to ensure it's running effectively in a production environment, including streamlining the build process. The following best practices will help you to achieve that.","title":"Optimize your container"},{"location":"performance/performance/#recommendations","text":"Make your container images stateless: A container created with a Docker image should be ephemeral and immutable. In other words, the container should be disposable and independent, i.e. a new one can be built and put in place with absolutely no configuration changes. Design your containers to be stateless. If you would like to use persistent data, use volumes instead. If you would like to store secrets or sensitive application data used by services, you can use solutions like AWS Systems Manager Parameter Store or third-party offerings or open source solutions, such as HashiCorp Valut and Consul , for runtime configurations. Minimal base image : Start with a small base image. Every other instruction in the Dockerfile builds on top of this image. The smaller the base image, the smaller the resulting image is, and the more quickly it can be downloaded. For example, the alpine:3.7 image is 71 MB smaller than the centos:7 image. You can even use the scratch base image, which is an empty image on which you can build your own runtime environment. Avoid unnecessary packages: When building a container image, include only the dependencies what your application needs and avoid installing unnecessary packages. For example if your application does not need an SSH server, don't include one. This will reduce complexity, dependencies, file sizes, and build times. To exclude files not relevant to the build use a .dockerignore file. Use multi-stage build :Multi-stage builds allow you to build your application in a first \"build\" container and use the result in another container, while using the same Dockerfile. To expand a bit on that, in multi-stage builds, you use multiple FROM statements in your Dockerfile. Each FROM instruction can use a different base, and each of them begins a new stage of the build. You can selectively copy artifacts from one stage to another, leaving behind everything you don't want in the final image. This method drastically reduces the size of your final image, without struggling to reduce the number of intermediate layers and files. Minimize number of layers: Each instruction in the Dockerfile adds an extra layer to the Docker image. The number of instructions and layers should be kept to a minimum as this affects build performance and time. For example, the first instruction below will create multiple layers, whereas the second instruction by using &&(chaining) we reduced the number of layers, which will help provide better performance. The is the best way to reduce the number of layers that will be created in your Dockerfile. RUN apt-get -y update RUN apt-get install -y python RUN apt-get -y update && apt-get install -y python Properly tag your images: When building images, always tag them with useful and meaningful tags. This is a good way to organize and document metadata describing an image, for example, by including a unique counter like build id from a CI server (e.g. CodeBuild or Jenkins) to help with identifying the correct image. The tag latest is used by default if you do not provide one in your Docker commands. We recommend not to use the automatically created latest tag, because by using this tag you'll automatically be running future major releases, which could include breaking changes for your application. The best practice is to avoid the latest tag and instead use the unique digest created by your CI server. Use Build Cache to improve build speed : The cache allows you to take advantage of existing cached images, rather than building each image from scratch. For example, you should add the source code of your application as late as possible in your Dockerfile so that the base image and your application's dependencies get cached and aren't rebuilt on every build. To reuse already cached images, By default in Amazon EKS, the kubelet will try to pull each image from the specified registry. However, if the imagePullPolicy property of the container is set to IfNotPresent or Never, then a local image is used (preferentially or exclusively, respectively). Image Security : Using public images may be a great way to start working on containers and deploying it to Kubernetes. However, using them in production can come with a set of challenges. Especially when it comes to security. Ensure to follow the best practices for packaging and distributing the containers/applications. For example, don't build your containers with passwords baked in also you might need to control what's inside them. Recommend to use private repository such as Amazon ECR and leverage the in-built image scanning feature to identify software vulnerabilities in your container images. Right size your containers: As you develop and run applications in containers, there are a few key areas to consider. How you size containers and manage your application deployments can negatively impact the end-user experience of services that you provide. To help you succeed, the following best practices will help you right size your containers. After you determine the number of resources required for your application, you should set requests and limits Kubernetes to ensure that your applications are running correctly. (a) Perform testing of the application : to gather vital statistics and other performance Based upon this data you can work out the optimal configuration, in terms of memory and CPU, for your container. Vital statistics such as : CPU, Latency, I/O, Memory usage, Network . Determine expected, mean, and peak container memory and CPU usage by doing a separate load test if necessary. Also consider all the processes that might potentially run in parallel in the container. Recommend to use CloudWatch Container insights or partner products, which will give you the right information to size containers and the Worker nodes. (b)Test services independently: As many applications depend on each other in a true microservice architecture, you need to test them with a high degree of independence meaning that the services are both able to properly function by themselves, as well as function as part of a cohesive system.","title":"Recommendations"},{"location":"performance/performance/#resource-management","text":"One of the most common questions that asked in the adoption of Kubernetes is \" What should I put in a Pod? \". For example, a three tier LAMP application container. Should we keep this application in the same pod? Well, this works effectively as a single pod but this is an example of an anti-pattern for Pod creation. There are two reasons for that (a) If you have both the containers in the same Pod, you are forced to use the same scaling strategy which is not ideal for production environment also you can't effectively manage or constraint resources based on the usage. E.g: you might need to scale just the frontend not frontend and backend (MySQL) as a unit also if you would like to increase the resources dedicated just to the backend, you cant just do that. (b) If you have two separate pods, one for frontend and other for backend. Scaling would be very easy and you get a better reliability. The above might not work in all the use-cases. In the above example frontend and backend may land in different machines and they will communicate with each other via network, So you need to ask the question \" Will my application work correctly, If they are placed and run on different machines? \" If the answer is a \" no \" may be because of the application design or for some other technical reasons, then grouping of containers in a single pod makes sense. If the answer is \" Yes \" then multiple Pods is the correct approach.","title":"Resource Management"},{"location":"performance/performance/#recommendations_1","text":"Package a single application per container: A container works best when a single application runs inside it. This application should have a single parent process. For example, do not run PHP and MySQL in the same container: it's harder to debug, and you can't horizontally scale the PHP container alone. This separation allows you to better tie the lifecycle of the application to that of the container. Your containers should be both stateless and immutable. Stateless means that any state (persistent data of any kind) is stored outside of the container, for example, you can use different kinds of external storage like Persistent disk, Amazon EBS, and Amazon EFS if needed, or managed database like Amazon RDS. Immutable means that a container will not be modified during its life: no updates, no patches, and no configuration changes. To update the application code or apply a patch, you build a new image and deploy it. Use Labels to Kubernetes Objects: Labels allow Kubernetes objects to be queried and operated upon in bulk. They can also be used to identify and organize Kubernetes objects into groups. As such defining labels should figure right at the top of any Kubernetes best practices list. Setting resource request limits: Setting request limits is the mechanism used to control the amount of system resources that a container can consume such as CPU and memory. These settings are what the container is guaranteed to get when the container initially starts. If a container requests a resource, container orchestrators such as Kubernetes will only schedule it on a node that can provide that resource. Limits, on the other hand, make sure that a container never goes above a certain value. The container is only allowed to go up to the limit, and then it is restricted. In the below example Pod manifest, we add a limit of 1.0 CPU and 256 MB of memory apiVersion: v1 kind: Pod metadata: name: nginx-pod-webserver labels: name: nginx-pod spec: containers: - name: nginx image: nginx:latest resources: limits: memory: \"256Mi\" cpu: \"1000m\" requests: memory: \"128Mi\" cpu: \"500m\" ports: - containerPort: 80 It's a best practice to define these requests and limits in your pod definitions. If you don't include these values, the scheduler doesn't understand what resources are needed. Without this information, the scheduler might schedule the pod on a node without sufficient resources to provide acceptable application performance. Limit the number of concurrent disruptions: Use PodDisruptionBudget , This settings allows you to set a policy on the minimum available and maximum unavailable pods during voluntary eviction events. An example of an eviction would be when perform maintenance on the node or draining a node. Example: A web frontend might want to ensure that 8 Pods to be available at any given time. In this scenario, an eviction can evict as many pods as it wants, as long as eight are available. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: frontend-demo spec: minAvailable: 8 selector: matchLabels: app: frontend N.B: You can also specify pod disruption budget as a percentage by using maxAvailable or maxUnavailable parameter. Use Namespaces: Namespaces allows a physical cluster to be shared by multiple teams. A namespace allows to partition created resources into a logically named group. This allows you to set resource quotas per namespace, Role-Based Access Control (RBAC) per namespace, and also network policies per namespace. It gives you soft multitenancy features. For example, If you have three applications running on a single Amazon EKS cluster accessed by three different teams which requires multiple resource constraints and different levels of QoS each group you could create a namespace per team and give each team a quota on the number of resources that it can utilize, such as CPU and memory. You can also specify default limits in Kubernetes namespaces level by enabling LimitRange admission controller. These default limits will constrain the amount of CPU or memory a given Pod can use unless the defaults are explicitly overridden by the Pod's configuration. Manage Resource Quota: Each namespace can be assigned resource quota. Specifying quota allows to restrict how much of cluster resources can be consumed across all resources in a namespace. Resource quota can be defined by a ResourceQuota object. A presence of ResourceQuota object in a namespace ensures that resource quotas are enforced. Configure Health Checks for Pods: Health checks are a simple way to let the system know if an instance of your app is working or not. If an instance of your app is not working, then other services should not access it or send requests to it. Instead, requests should be sent to another instance of the app that is working. The system also should bring your app back to a healthy state. By default, all the running pods have the restart policy set to always which means the kubelet running within a node will automatically restart a pod when the container encounters an error. Health checks extend this capability of kubelet through the concept of container probes . Kubernetes provides two types of health checks : readiness and liveness probes. For example, consider if one of your applications, which typically runs for long periods of time, transitions to a non-running state and can only recover by being restarted. You can use liveness probes to detect and remedy such situations. Using health checks gives your applications better reliability, and higher uptime. Advanced Scheduling Techniques: Generally, schedulers ensure that pods are placed only on nodes that have sufficient free resources, and across nodes, they try to balance out the resource utilization across nodes, deployments, replicas, and so on. But sometimes you want to control how your pods are scheduled. For example, perhaps you want to ensure that certain pods are only scheduled on nodes with specialized hardware, such as requiring a GPU machine for an ML workload. Or you want to collocate services that communicate frequently. Kubernetes offers many advanced scheduling features and multiple filters/constraints to schedule the pods on the right node. For example, when using Amazon EKS, you can use taints and tolerations to restrict what workloads can run on specific nodes. You can also control pod scheduling using node selectors and affinity and anti-affinity constructs and even have your own custom scheduler built for this purpose.","title":"Recommendations"},{"location":"performance/performance/#scalability-management","text":"Containers are stateless. They are born and when they die, they are not resurrected. There are many techniques that you can leverage on Amazon EKS, not only to scale out your containerized applications but also the Kubernetes worker node.","title":"Scalability Management"},{"location":"performance/performance/#recommendations_2","text":"On Amazon EKS, you can configure Horizontal pod autoscaler ,which automatically scales the number of pods in a replication controller, deployment, or replica set based on observed CPU utilization (or use custom metrics based on application-provided metrics). You can use Vertical Pod Autoscaler which automatically adjusts the CPU and memory reservations for your pods to help \"right size\" your applications. This adjustment can improve cluster resource utilization and free up CPU and memory for other pods. This is useful in scenarios like your production database \"MongoDB\" does not scale the same way as a stateless application frontend, In this scenario you could use VPA to scale up the MongoDB Pod. To enable VPA you need to use Kubernetes metrics server, which is an aggregator of resource usage data in your cluster. It is not deployed by default in Amazon EKS clusters. You need to configure it before configure VPA alternatively you can also use Prometheus to provide metrics for the Vertical Pod Autoscaler. While HPA and VPA scale the deployments and pods, Cluster Autoscaler will scale-out and scale-in the size of the pool of worker nodes. It adjusts the size of a Kubernetes cluster based on the current utilization. Cluster Autoscaler increases the size of the cluster when there are pods that failed to schedule on any of the current nodes due to insufficient resources or when adding a new node would increase the overall availability of cluster resources. Please follow this step by step guide to setup Cluster Autoscaler. If you are using Amazon EKS on AWS Fargate, AWS Manages the control plane for you. Please have a look at the reliability pillar for detailed information.","title":"Recommendations"},{"location":"performance/performance/#monitoring","text":"","title":"Monitoring"},{"location":"performance/performance/#deployment-best-practices","text":"","title":"Deployment Best Practices"},{"location":"performance/performance/#trade-offs","text":"","title":"Trade-Offs"},{"location":"reliability/docs/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Amazon EKS Best Practices Guide for Reliability \u00b6 This section provides guidance about making workloads running on EKS resilient and highly-available How to use this guide \u00b6 This guide is meant for developers and architects who want to develop and operate highly-available and fault-tolerant services in EKS. The guide is organized into different topic areas for easier consumption. Each topic starts with a brief overview, followed by a list of recommendations and best practices for the reliability of your EKS clusters. Introduction \u00b6 The reliability best practices for EKS have been grouped under the following topics: Applications Control Plane Data Plane What makes a system reliable? If a system can function consistently and meet demands in spite of changes in its environment over a period of time, it can be called reliable. To achieve this, the system has to detect failures, automatically heal itself, and have the ability to scale based on demand. Customers can use Kubernetes as a foundation to operate mission-critical applications and services reliably. But aside from incorporating container-based application design principles, running workloads reliably also requires a reliable infrastructure. In Kubernetes, infrastructure comprises the control plane and data plane. EKS provides a production-grade Kubernetes control plane that is designed to be highly-available and fault-tolerant. In EKS, AWS is responsible for the reliability of the Kubernetes control plane. EKS runs Kubernetes control plane across three availability zones in an AWS Region. It automatically manages the availability and scalability of the Kubernetes API servers and the etcd cluster. The responsibility for the data plane\u2019s reliability is shared between you, the customer, and AWS. EKS offers three options for Kubernetes data plane. Fargate, which is the most managed option, handles provisioning and scaling of the data plane. The second option, managed nodes groups, handles provisioning, and updates of the data plane. And finally, self-managed nodes is the least managed option for the data plane. The more AWS-managed data plane you use, the less responsibility you have Managed node groups automate the provisioning and lifecycle management of EC2 nodes. You can use the EKS API (using EKS console, AWS API, AWS CLI, CloudFormation, Terraform, or eksctl ), to create, scale, and upgrade managed nodes. Managed nodes run EKS-optimized Amazon Linux 2 EC2 instances in your account, and you can install custom software packages by enabling SSH access. When you provision managed nodes, they run as part of an EKS-managed Auto Scaling Group that can span multiple Availability Zones; you control this through the subnets you provide when creating managed nodes. EKS also automatically tags managed nodes so they can be used with Cluster Autoscaler. Amazon EKS follows the shared responsibility model for CVEs and security patches on managed node groups. Because managed nodes run the Amazon EKS-optimized AMIs, Amazon EKS is responsible for building patched versions of these AMIs when bug fixes. However, you are responsible for deploying these patched AMI versions to your managed node groups. EKS also manages updating the nodes although you have to initiate the update process. The process of updating managed node is explained in the EKS documentation. If you run self-managed nodes, you can use Amazon EKS-optimized Linux AMI to create worker nodes. You are responsible for patching and upgrading the AMI and the nodes. It is a best practice to use eksctl , CloudFormation, or infrastructure as code tools to provision self-managed nodes because this will make it easy for you to upgrade self-managed nodes . Consider migrating to new nodes when updating worker nodes because the migration process taints the old node group as NoSchedule and drains the nodes after a new stack is ready to accept the existing pod workload. However, you can also perform an in-place upgrade of self-managed nodes . This guide includes a set of recommendations that you can use to improve the reliability of your EKS data plane, Kubernetes core components, and your applications. Feedback \u00b6 This guide is being released on GitHub to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. We intend to update the guide periodically as new features are added to the service or when a new best practice evolves.","title":"Home"},{"location":"reliability/docs/#amazon-eks-best-practices-guide-for-reliability","text":"This section provides guidance about making workloads running on EKS resilient and highly-available","title":"Amazon EKS Best Practices Guide for Reliability"},{"location":"reliability/docs/#how-to-use-this-guide","text":"This guide is meant for developers and architects who want to develop and operate highly-available and fault-tolerant services in EKS. The guide is organized into different topic areas for easier consumption. Each topic starts with a brief overview, followed by a list of recommendations and best practices for the reliability of your EKS clusters.","title":"How to use this guide"},{"location":"reliability/docs/#introduction","text":"The reliability best practices for EKS have been grouped under the following topics: Applications Control Plane Data Plane What makes a system reliable? If a system can function consistently and meet demands in spite of changes in its environment over a period of time, it can be called reliable. To achieve this, the system has to detect failures, automatically heal itself, and have the ability to scale based on demand. Customers can use Kubernetes as a foundation to operate mission-critical applications and services reliably. But aside from incorporating container-based application design principles, running workloads reliably also requires a reliable infrastructure. In Kubernetes, infrastructure comprises the control plane and data plane. EKS provides a production-grade Kubernetes control plane that is designed to be highly-available and fault-tolerant. In EKS, AWS is responsible for the reliability of the Kubernetes control plane. EKS runs Kubernetes control plane across three availability zones in an AWS Region. It automatically manages the availability and scalability of the Kubernetes API servers and the etcd cluster. The responsibility for the data plane\u2019s reliability is shared between you, the customer, and AWS. EKS offers three options for Kubernetes data plane. Fargate, which is the most managed option, handles provisioning and scaling of the data plane. The second option, managed nodes groups, handles provisioning, and updates of the data plane. And finally, self-managed nodes is the least managed option for the data plane. The more AWS-managed data plane you use, the less responsibility you have Managed node groups automate the provisioning and lifecycle management of EC2 nodes. You can use the EKS API (using EKS console, AWS API, AWS CLI, CloudFormation, Terraform, or eksctl ), to create, scale, and upgrade managed nodes. Managed nodes run EKS-optimized Amazon Linux 2 EC2 instances in your account, and you can install custom software packages by enabling SSH access. When you provision managed nodes, they run as part of an EKS-managed Auto Scaling Group that can span multiple Availability Zones; you control this through the subnets you provide when creating managed nodes. EKS also automatically tags managed nodes so they can be used with Cluster Autoscaler. Amazon EKS follows the shared responsibility model for CVEs and security patches on managed node groups. Because managed nodes run the Amazon EKS-optimized AMIs, Amazon EKS is responsible for building patched versions of these AMIs when bug fixes. However, you are responsible for deploying these patched AMI versions to your managed node groups. EKS also manages updating the nodes although you have to initiate the update process. The process of updating managed node is explained in the EKS documentation. If you run self-managed nodes, you can use Amazon EKS-optimized Linux AMI to create worker nodes. You are responsible for patching and upgrading the AMI and the nodes. It is a best practice to use eksctl , CloudFormation, or infrastructure as code tools to provision self-managed nodes because this will make it easy for you to upgrade self-managed nodes . Consider migrating to new nodes when updating worker nodes because the migration process taints the old node group as NoSchedule and drains the nodes after a new stack is ready to accept the existing pod workload. However, you can also perform an in-place upgrade of self-managed nodes . This guide includes a set of recommendations that you can use to improve the reliability of your EKS data plane, Kubernetes core components, and your applications.","title":"Introduction"},{"location":"reliability/docs/#feedback","text":"This guide is being released on GitHub to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. We intend to update the guide periodically as new features are added to the service or when a new best practice evolves.","title":"Feedback"},{"location":"reliability/docs/application.kr/","text":"{'name': 'English', 'build': True} \uace0\uac00\uc6a9\uc131 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589 \u00b6 \uace0\uac1d\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcc0\uacbd\ud560 \ub54c\ub098 \ud2b8\ub798\ud53d\uc774 \uae09\uc99d\ud560 \ub54c \uc870\ucc28 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud56d\uc0c1 \uc0ac\uc6a9 \uac00\ub2a5\ud558\uae30\ub97c \uae30\ub300\ud569\ub2c8\ub2e4. \ud655\uc7a5 \uac00\ub2a5\ud558\uace0 \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \uc544\ud0a4\ud14d\ucc98\ub97c \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc11c\ube44\uc2a4\ub97c \uc911\ub2e8 \uc5c6\uc774 \uc2e4\ud589\ud558\uc5ec \uc0ac\uc6a9\uc790 \ub9cc\uc871\ub3c4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud655\uc7a5 \uac00\ub2a5\ud55c \uc778\ud504\ub77c\ub294 \ube44\uc988\ub2c8\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ud655\uc7a5 \ubc0f \ucd95\uc18c\ub429\ub2c8\ub2e4. \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc81c\uac70\ud558\ub294 \uac83\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc744 \uac1c\uc120\ud558\uace0 \ubcf5\uc6d0\ub825\uc744 \ub192\uc774\uae30 \uc704\ud55c \uc911\uc694\ud55c \ub2e8\uacc4\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ubc29\uc2dd\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc6b4\uc601\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc120\uc5b8\uc801 \uad00\ub9ac\ub97c \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uc815\ud55c \ud6c4\uc5d0\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc9c0\uc18d\uc801\uc73c\ub85c \ud604\uc7ac \uc0c1\ud0dc\ub97c \uc6d0\ud558\ub294 \uc0c1\ud0dc\uc640 \uc77c\uce58 \ud558\ub3c4\ub85d \uc2dc\ub3c4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \uc2f1\uae00\ud1a4 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc138\uc694 \u00b6 \uc804\uccb4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc77c \ud30c\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0, \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uac1c\ubcc4 \ud3ec\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc30\ud3ec\ud558\ub294 \ub300\uc2e0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\uac00 \uc2e4\ud328\ud558\uac70\ub098 \uc885\ub8cc\ub418\ub294 \uacbd\uc6b0, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec \ub294 \uc0c8 \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\uc5ec \uc9c0\uc815\ub41c \uac1c\uc218\uc758 \ub808\ud50c\ub9ac\uce74 \ud30c\ub4dc\uac00 \ud56d\uc0c1 \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uac1c\uc758 \ub808\ud50c\ub9ac\uce74 \uc2e4\ud589 \u00b6 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc571\uc758 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uba74 \uac00\uc6a9\uc131\uc774 \ub192\uc740 \ubc29\uc2dd\uc73c\ub85c \uc571\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ubcf5\uc81c\ubcf8\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc190\uc2e4\uc744 \ub9cc\ud68c\ud558\uae30 \uc704\ud574 \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \uc6a9\ub7c9\uc774 \uc904\uc5b4\ub4e4\uae30\ub294 \ud558\uc9c0\ub9cc \ub098\uba38\uc9c0 \ubcf5\uc81c\ubcf8\uc740 \uc5ec\uc804\ud788 \uc791\ub3d9\ud55c\ub2e4. \ub610\ud55c Horizontal Pod Autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \uc218\uc694\uc5d0 \ub530\ub77c \ubcf5\uc81c\ubcf8\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \ub178\ub4dc\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4. \u00b6 \ubaa8\ub4e0 \ubcf5\uc81c\ubcf8\uc774 \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uace0 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub418\uba74 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc740 \uadf8\ub2e4\uc9c0 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc anti-affinity \ub610\ub294 \ud30c\ub4dc topology spread contraints\uc744 \uc0ac\uc6a9\ud574 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc5ec\ub7ec \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \ubd84\uc0b0\uc2dc\ud0a4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc5ec\ub7ec AZ\uc5d0\uc11c \uc2e4\ud589\ud558\uc5ec \uc77c\ubc18\uc801\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc744 \ub354\uc6b1 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc anti-affinity \uaddc\uce59 \uc0ac\uc6a9 \u00b6 \uc544\ub798 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc5d0\uac8c \ud30c\ub4dc\ub97c \ubcc4\ub3c4\uc758 \ub178\ub4dc\uc640 AZ\uc5d0 \ubc30\uce58\ud558\ub3c4\ub85d prefer \ub77c\uace0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ub418\uc5b4\uc788\ub2e4\uba74 \ubcc4\ub3c4\uc758 \ub178\ub4dc\ub098 AZ\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 \uac01 AZ\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud3ec\ub4dc\uac00 \uc788\uc73c\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc5b4\ub5a4 \ud30c\ub4dc\ub3c4 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub2e8 \uc138 \uac1c\uc758 \ubcf5\uc81c\ubcf8\uc774 \ud544\uc694\ud55c \uacbd\uc6b0, topologyKey: topology.kubernetes.io/zone \uc5d0 \ub300\ud574 requiredDuringSchedulingIgnoredDuringExecution \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \ub3d9\uc77c\ud55c AZ\uc5d0 \ub450 \uac1c\uc758 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: topology.kubernetes.io/zone weight: 100 - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: kubernetes.io/hostname weight: 99 containers: - name: web-app image: nginx:1.16-alpine \ud3ec\ub4dc topology spread constraints \uc0ac\uc6a9 \u00b6 \ud3ec\ub4dc anti-affinity \uaddc\uce59\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \ud3ec\ub4dc topology spread constraints\uc744 \uc0ac\uc6a9\ud558\uba74 \ud638\uc2a4\ud2b8 \ub610\ub294 AZ\uc640 \uac19\uc740 \ub2e4\uc591\ud55c \uc7a5\uc560 (\ub610\ub294 \ud1a0\ud3f4\ub85c\uc9c0) \ub3c4\uba54\uc778\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc740 \uc11c\ub85c \ub2e4\ub978 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uac01\uac01\uc5d0 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc744 \ubcf4\uc720\ud558\uc5ec \ub0b4\uacb0\ud568\uc131\uacfc \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \ub9e4\uc6b0 \ud6a8\uacfc\uc801\uc785\ub2c8\ub2e4. \ubc18\uba74, \ud30c\ub4dc anti-affinity \uaddc\uce59\uc740 anti-affinity\uac00 \uc788\ub294 \ud30c\ub4dc \uc11c\ub85c\uc5d0 \ub300\ud574 \uac70\ubd80 \ud6a8\uacfc\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778\uc5d0 \ub2e8\uc77c \ubcf5\uc81c\ubcf8\uc774 \uc788\ub3c4\ub85d \uc27d\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 \uc804\uc6a9 \ub178\ub4dc\uc758 \ub2e8\uc77c \ubcf5\uc81c\ubcf8\uc740 \ub0b4\uacb0\ud568\uc131 \uce21\uba74\uc5d0\uc11c \uc774\uc0c1\uc801\uc774\uc9c0\ub3c4 \uc54a\uace0 \ub9ac\uc18c\uc2a4\ub97c \uc801\uc808\ud558\uac8c \uc0ac\uc6a9\ud558\uc9c0\ub3c4 \uc54a\uc2b5\ub2c8\ub2e4. topology spread constraints\uc744 \uc0ac\uc6a9\ud558\uba74 \uc2a4\ucf00\uc904\ub7ec\uac00 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc804\uccb4\uc5d0 \uc801\uc6a9\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \ubd84\ubc30 \ub610\ub294 \ubc30\ud3ec\ub97c \ubcf4\ub2e4 \ud6a8\uacfc\uc801\uc73c\ub85c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc911\uc694\ud55c \uc18d\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. 1. MaxSkew \ub294 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc804\uccb4\uc5d0\uc11c \uade0\ub4f1\ud558\uc9c0 \uc54a\uac8c \ubd84\uc0b0\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uc815\ub3c4\ub97c \uc81c\uc5b4\ud558\uac70\ub098 \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 10\uac1c\uc758 \ubcf5\uc81c\ubcf8\uc774 \uc788\uace0 3\uac1c\uc758 AZ\uc5d0 \ubc30\ud3ec\ub41c \uacbd\uc6b0 \uade0\ub4f1\ud558\uac8c \ubd84\uc0b0\ub420 \uc218\ub294 \uc5c6\uc9c0\ub9cc \ubd84\ud3ec\uc758 \ubd88\uade0\uc77c\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 MaxSkew \ub294 1\uc5d0\uc11c 10 \uc0ac\uc774\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uac12\uc774 1\uc774\uba74 3\uac1c\uc758 AZ\uc5d0 \uac78\uccd0 4,3,3 , 3,4,3 \ub610\ub294 3,3,4 \uc640 \uac19\uc740 \ubd84\ubc30\uac00 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c \uac12\uc774 10\uc774\uba74 3\uac1c\uc758 AZ\uc5d0 \uac78\uccd0 10,0,0 , 0,10,0 \ub610\ub294 0,0,10 \uacfc \uac19\uc740 \ubd84\ubc30\uac00 \ub098\uc62c \uc218 \uc788\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. 2. TopologyKey \ub294 \ub178\ub4dc \ub808\uc774\ube14 \uc911 \ud558\ub098\uc758 \ud0a4\uc774\uba70 \ud3ec\ub4dc \ubc30\ud3ec\uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc720\ud615\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc874(zone)\ubcc4 \ubd84\ubc30\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0a4-\uac12 \uc30d\uc744 \uac00\uc9d1\ub2c8\ub2e4. topologyKey: \"topology.kubernetes.io/zone\" 3. WhenUnsatisfiable \uc18d\uc131\uc740 \uc6d0\ud558\ub294 \uc81c\uc57d \uc870\uac74\uc744 \ucda9\uc871\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc2a4\ucf00\uc904\ub7ec\uac00 \uc5b4\ub5bb\uac8c \uc751\ub2f5\ud560\uc9c0 \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. 4. LabelSelector \ub294 \uc77c\uce58\ud558\ub294 \ud30c\ub4dc\ub97c \ucc3e\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70, \uc774\ub97c \ud1b5\ud574 \uc2a4\ucf00\uc904\ub7ec\ub294 \uc9c0\uc815\ud55c \uc81c\uc57d \uc870\uac74\uc5d0 \ub530\ub77c \ud30c\ub4dc\ub97c \ubc30\uce58\ud560 \uc704\uce58\ub97c \uacb0\uc815\ud560 \ub54c \uc774\ub97c \uc778\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \ud544\ub4dc \uc678\uc5d0\ub3c4, \ub2e4\ub978 \ud544\ub4dc\uc5d0 \ub300\ud574\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \uc5d0\uc11c \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 10 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: app: express-test containers: - name: web-app image: nginx:1.16-alpine \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84 \uc2e4\ud589 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84 \ub97c \uc124\uce58\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud655\uc7a5\uc5d0 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. HPA \ubc0f VPA \uc640 \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc560\ub4dc\uc628\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uba54\ud2b8\ub9ad\uc744 \ucd94\uc801\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud569\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \uaddc\ubaa8 \uc870\uc815 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4. \uba54\ud2b8\ub9ad\uc740 kubelets\uc5d0\uc11c \uc218\uc9d1\ub418\uc5b4 \uba54\ud2b8\ub9ad API \ud615\uc2dd \uc73c\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \ub370\uc774\ud130\ub97c \ubcf4\uad00\ud558\uc9c0 \uc54a\uc73c\uba70 \ubaa8\ub2c8\ud130\ub9c1 \uc194\ub8e8\uc158\ub3c4 \uc544\ub2d9\ub2c8\ub2e4. \uadf8 \ubaa9\uc801\uc740 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uba54\ud2b8\ub9ad\uc744 \ub2e4\ub978 \uc2dc\uc2a4\ud15c\uc5d0 \uacf5\uac1c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2dc\uac04 \uacbd\uacfc\uc5d0 \ub530\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \ucd94\uc801\ud558\ub824\uba74 Prometheus \ub610\ub294 Amazon CloudWatch\uc640 \uac19\uc740 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. EKS \uc124\uba85\uc11c \uc5d0 \ub530\ub77c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uba54\ud2b8\ub9ad \uc11c\ubc84\ub97c \uc124\uce58\ud558\uc2ed\uc2dc\uc624. Horizontal Pod Autoscaler (HPA) \u00b6 HPA\ub294 \uc218\uc694\uc5d0 \ub530\ub77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \ud2b8\ub798\ud53d\uc774 \ucd5c\uace0\uc870\uc5d0 \ub2ec\ud560 \ub54c \uace0\uac1d\uc5d0\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ub3c4\uc640\uc90d\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\ub294 \uc81c\uc5b4 \ub8e8\ud504\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\uc5b4 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud558\ub294 API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc815\uae30\uc801\uc73c\ub85c \ucffc\ub9ac\ud569\ub2c8\ub2e4. HPA\ub294 \ub2e4\uc74c API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1. \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad API\ub77c\uace0\ub3c4 \ud558\ub294 metrics.k8s.io \u2014 \ud30c\ub4dc\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. 2. custom.metrics.k8s.io \u2014 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc640 \uac19\uc740 \ub2e4\ub978 \uba54\ud2b8\ub9ad \ucf5c\ub809\ud130\uc758 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba54\ud2b8\ub9ad\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 internal \uc785\ub2c8\ub2e4. 3. external.metrics.k8s.io \u2014 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 __external__\uc778 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4 (\uc608: SQS \ub300\uae30\uc5f4 \uae38\uc774, ELB \uc9c0\uc5f0 \uc2dc\uac04). \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\uae30 \uc704\ud55c \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud558\ub824\uba74 \uc774 \uc138 \uac00\uc9c0 API \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uae30\ubc18\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uaddc\ubaa8 \uc870\uc815 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960 \uc774\uc678\uc758 \uc9c0\ud45c\uc5d0 \ub530\ub77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad API \uc11c\ubc84\ub294 HPA\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9 \uc2a4\ucf00\uc77c\ub9c1\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 custom-metrics.k8s.io API\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad API\uc6a9 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud558\uace0 HPA\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uba54\ud2b8\ub9ad API \ud615\uc2dd \uc73c\ub85c \ub178\ucd9c\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad \uad6c\ud604 \ubaa9\ub85d\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130\ub97c \ubc30\ud3ec\ud55c \ud6c4\uc5d0\ub294 kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uba54\ud2b8\ub9ad\uc744 \ucffc\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get \u2014raw /apis/custom.metrics.k8s.io/v1beta1/ \uc678\ubd80 \uba54\ud2b8\ub9ad \uc740 \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774 Horizontal Pod Autoscaler\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc758 \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc30\uce58 \ucc98\ub9ac \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c\ub294 SQS \ub300\uae30\uc5f4\uc5d0\uc11c \uc9c4\ud589 \uc911\uc778 \uc791\uc5c5 \uc218\uc5d0 \ub530\ub77c \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc870\uc815\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 SQS \ub300\uae30\uc5f4 \uae4a\uc774\uc5d0 \ub530\ub77c \ubc30\uce58-\ud504\ub85c\uc138\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud06c\uae30 \uc870\uc815 \uacfc \uac19\uc774 CloudWatch \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc790\ub3d9 \ud655\uc7a5\ud558\ub824\uba74 k8s-cloudwatch-adapter \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. k8s-\ud074\ub77c\uc6b0\ub4dc\uc6cc\uce58 \uc5b4\ub311\ud130 \ub294 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uc81d\ud2b8\uc774\uba70 AWS\uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Vertical Pod Autoscaler (VPA) \u00b6 VPA\ub294 \ud30c\ub4dc\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \uc608\uc57d\uc744 \uc790\ub3d9\uc73c\ub85c \uc870\uc815\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \u201c\uc801\uc808\ud55c \ud06c\uae30\u201d\ub85c \uc870\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \ud560\ub2f9\uc744 \ub298\ub824 \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 VPA \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \ubcf5\uc81c\ubcf8\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uac70\ub098 \uaddc\ubaa8 \uc870\uc815 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPA\uc758 \ud604\uc7ac \uad6c\ud604\uc740 \ud30c\ub4dc\uc5d0 \ub300\ud55c \uc778\ud50c\ub808\uc774\uc2a4 \uc870\uc815\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uae30 \ub54c\ubb38\uc5d0 VPA\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc77c\uc2dc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \uc124\uba85\uc11c \uc5d0\ub294 VPA \uc124\uc815 \ubc29\ubc95\uc774 \uc218\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Fairwinds Goldilocks \ud504\ub85c\uc81d\ud2b8\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc694\uccad \ubc0f \uc81c\ud55c\uc5d0 \ub300\ud55c VPA \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc2dc\uac01\ud654\ud560 \uc218 \uc788\ub294 \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. VPA \uc5c5\ub370\uc774\ud2b8 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 VPA \uad8c\uc7a5 \uc0ac\ud56d\uc5d0 \ub530\ub77c \ud30c\ub4dc\ub97c \uc790\ub3d9 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5c5\ub370\uc774\ud2b8 \u00b6 \ucd5c\uc2e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 \ub192\uc740 \uc218\uc900\uc758 \uc548\uc815\uc131\uacfc \uac00\uc6a9\uc131\uc744 \uac16\ucd98 \ube60\ub978 \ud601\uc2e0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uace0\uac1d\uc5d0\uac8c \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba74\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac00\uc6a9\uc131 \uc800\ud558 \uc5c6\uc774 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc2e0\uc18d\ud558\uac8c \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub864\ubc31\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998 \ub9c8\ub828 \u00b6 \uc2e4\ud589 \ucde8\uc18c \ubc84\ud2bc\uc774 \uc788\uc73c\uba74 \uc7ac\ud574\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 \ubcc4\ub3c4\uc758 \ud558\uc704 \ud658\uacbd(\ud14c\uc2a4\ud2b8 \ub610\ub294 \uac1c\ubc1c \ud658\uacbd)\uc5d0\uc11c \ubc30\ud3ec\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ubc30\ud3ec\ub97c \uc790\ub3d9\ud654\ud558\uace0 \ud14c\uc2a4\ud2b8\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc18d\uc801 \ubc30\ud3ec \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \uacb0\ud568\uc774 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \uc774\uc804 \ubc84\uc804\uc73c\ub85c \ube60\ub974\uac8c \ub418\ub3cc\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl --record deployment.apps/nginx-deployment set image nginx-deployment nginx = nginx:1.16.1 --record \uc778\uc218\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uae30\ub85d\ud558\uace0 \ub864\ubc31\uc744 \uc218\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. kubectl rollout history deployment \ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ubcc0\uacbd \uc0ac\ud56d\uc744 \ubcf4\uc5ec\uc900\ub2e4. kubectl rollout undo deployment <DEPLOYMENT_NAME> \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\uc0ac\ud56d\uc744 \ub864\ubc31\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ud30c\ub4dc\ub97c \uc7ac\uc0dd\uc131\ud574\uc57c \ud558\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8 \ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uc989, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc758 \uc77c\ubd80\ub9cc \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \ubaa8\ub4e0 \ud30c\ub4dc\ub294 \ud55c \ubc88\uc5d0 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. RollingUpdateStrategy \ud504\ub85c\ud37c\ud2f0\ub97c \ud1b5\ud574 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\ud589\ud558\ub294 \ubc29\uc2dd\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8 \ub97c \uc218\ud589\ud560 \ub54c, Max Unavailable \ud504\ub85c\ud37c\ud2f0\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8 \uc911\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\uc758 \ucd5c\ub300 \uac1c\uc218\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 Max Surge \ud504\ub85c\ud37c\ud2f0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ud30c\ub4dc \uc218\ubcf4\ub2e4 \ub354 \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub864\uc544\uc6c3\uc73c\ub85c \uc778\ud574 \uace0\uac1d\uc774 \ud63c\ub780\uc5d0 \ube60\uc9c0\uc9c0 \uc54a\ub3c4\ub85d max unavailable \uc744 \uc870\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c 25%\uc758 max unavailable \uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \uc989, 100\uac1c\uc758 \ud30c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0 \ub864\uc544\uc6c3 \uc911\uc5d0 \ud65c\uc131 \uc0c1\ud0dc\ub85c \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\ub294 75\uac1c\ub9cc \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ucd5c\uc18c 80\uac1c\uc758 \ud30c\ub4dc\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc774 \ub864\uc544\uc6c3\uc73c\ub85c \uc778\ud574 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc2e0, max unavailable \uc744 20% \ub85c \uc124\uc815\ud558\uc5ec \ub864\uc544\uc6c3 \ub0b4\ub0b4 \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\uac00 80\uac1c \uc774\uc0c1 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec \uc0ac\uc6a9 \u00b6 \ubcc0\uacbd\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \uc704\ud5d8\ud558\uc9c0\ub9cc, \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \ubcc0\uacbd\uc740 \uc7a0\uc7ac\uc801\uc73c\ub85c \uce58\uba85\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub864\ubc31 \uc744 \ud1b5\ud574 \uc2dc\uac04\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub418\ub3cc\ub9b4 \uc218 \uc788\ub294 \ubcc0\uacbd \uc808\ucc28\ub97c \uc0ac\uc6a9\ud558\uba74 \ud5a5\uc0c1\ub41c \uae30\ub2a5\uacfc \uc2e4\ud5d8\uc774 \ub354 \uc548\uc804\ud574\uc9d1\ub2c8\ub2e4. \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc2e0\uc18d\ud558\uac8c \ucca0\ud68c\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ubc30\ud3ec \uc804\ub7b5\uc5d0\uc11c\ub294 \uc0c8 \ubc84\uc804\uc744 \uc704\ud55c \ud658\uacbd\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc774 \ud658\uacbd\uc740 \uc5c5\ub370\uc774\ud2b8 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud604\uc7ac \ubc84\uc804\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uc0c8 \ud658\uacbd\uc774 \ud504\ub85c\ube44\uc804\ub418\uba74 \ud2b8\ub798\ud53d\uc774 \uc0c8 \ud658\uacbd\uc73c\ub85c \ub77c\uc6b0\ud305\ub429\ub2c8\ub2e4. \uc0c8 \ubc84\uc804\uc5d0\uc11c \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uace0 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc5bb\uc744 \uacbd\uc6b0 \uc774\uc804 \ud658\uacbd\uc740 \uc885\ub8cc\ub429\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud2b8\ub798\ud53d\uc774 \uc774\uc804 \ubc84\uc804\uc73c\ub85c \ubcf5\uc6d0\ub429\ub2c8\ub2e4. \uae30\uc874 \ubc84\uc804\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc640 \ub3d9\uc77c\ud55c \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0dd\uc131\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \ube14\ub8e8/\uadf8\ub9b0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc\uac00 \uc624\ub958 \uc5c6\uc774 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud588\uc73c\uba74, \ud2b8\ub798\ud53d\uc744 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \uc11c\ube44\uc2a4\uc758 selector \uc2a4\ud399\uc744 \ubcc0\uacbd\ud558\uc5ec \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ud2b8\ub798\ud53d\uc744 \ubcf4\ub0b4\uae30 \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Flux , Jenkins , Spinnaker \uc640 \uac19\uc740 \ub9ce\uc740 \uc9c0\uc18d\uc801 \ud1b5\ud569(CI) \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ube14\ub85c\uadf8\uc5d0\ub294 Jenkins\ub97c \uc0ac\uc6a9\ud55c \ub2e8\uacc4\ubcc4 \uc124\uba85\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4: Jenkins\ub97c \uc0ac\uc6a9\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \uc81c\ub85c \ub2e4\uc6b4\ud0c0\uc784 \ubc30\ud3ec Canary \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc0ac\uc6a9\ud558\uae30 \u00b6 Canary \ubc30\ud3ec\ub294 \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\uc758 \ubcc0\ud615\uc73c\ub85c, \ubcc0\uacbd\uc73c\ub85c \uc778\ud55c \uc704\ud5d8\uc744 \ud06c\uac8c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc30\ud3ec \uc804\ub7b5\uc5d0\uc11c\ub294 \uae30\uc874 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc640 \ud568\uaed8 \ub354 \uc801\uc740 \uc218\uc758 \ud30c\ub4dc\uac00 \ud3ec\ud568\ub41c \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0dd\uc131\ud558\uace0 \uc18c\ub7c9\uc758 \ud2b8\ub798\ud53d\uc744 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc9c0\ud45c\uc5d0\uc11c \uc0c8 \ubc84\uc804\uc774 \uae30\uc874 \ubc84\uc804\uacfc \uac19\uac70\ub098 \ub354 \ub098\uc740 \uc131\ub2a5\uc744 \ubcf4\uc778\ub2e4\uba74, \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ud5a5\ud558\ub294 \ud2b8\ub798\ud53d\uc744 \uc810\uc9c4\uc801\uc73c\ub85c \ub298\ub9ac\uba74\uc11c \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc804\ud658\ub420 \ub54c\uae4c\uc9c0 \uaddc\ubaa8\ub97c \ub298\ub9bd\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uba74 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc744 \uc774\uc804 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ub77c\uc6b0\ud305\ud558\uace0 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c\uc758 \ud2b8\ub798\ud53d \uc804\uc1a1\uc744 \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 canary \ubc30\ud3ec\ub97c \uc218\ud589\ud558\ub294 \uae30\ubcf8 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc9c0\ub9cc, Flagger \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c Istio \ub610\ub294 App Mesh \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uc0c1\ud0dc \uc810\uac80 \ubc0f \uc790\uac00 \ubcf5\uad6c \u00b6 \ubc84\uadf8\uac00 \uc5c6\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub294 \uc5c6\uc9c0\ub9cc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc624\ub958\uc758 \uc601\ud5a5\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacfc\uac70\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ucda9\ub3cc\ud558\uba74 \ub204\uad70\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc218\ub3d9\uc73c\ub85c \ub2e4\uc2dc \uc2dc\uc791\ud558\uc5ec \uc0c1\ud669\uc744 \ud574\uacb0\ud574\uc57c \ud588\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc758 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \uc0c8 \ubcf5\uc81c\ubcf8\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ube44\uc815\uc0c1 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc138 \uac00\uc9c0 \uc720\ud615\uc758 \uc0c1\ud0dc \uac80\uc0ac \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Liveness probe Startup probe (\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 1.16 \uc774\uc0c1\uc5d0\uc11c \uc9c0\uc6d0) Readiness probe \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc5d0\uc774\uc804\ud2b8\uc778 Kubelet \uc740 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ubaa8\ub4e0 \uac80\uc0ac\ub97c \uc2e4\ud589\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uc740 \uc138 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \ud30c\ub4dc\uc758 \uc0c1\ud0dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubelet\uc740 \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc178 \uba85\ub839\uc744 \uc2e4\ud589\ud558\uac70\ub098, \ucee8\ud14c\uc774\ub108\uc5d0 HTTP GET \uc694\uccad\uc744 \ubcf4\ub0b4\uac70\ub098, \uc9c0\uc815\ub41c \ud3ec\ud2b8\uc5d0 TCP \uc18c\ucf13\uc744 \uc5f4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc178 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\ub294 exec \uae30\ubc18 \ud504\ub85c\ube0c\ub97c \uc120\ud0dd\ud558\ub294 \uacbd\uc6b0, TimeoutSeconds \uac12\uc774 \ub9cc\ub8cc\ub418\uae30 \uc804\uc5d0 \uc178 \uba85\ub839\uc5b4\uac00 \uc885\ub8cc\ub418\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub178\ub4dc\uc5d0 \ub178\ub4dc \uc7a5\uc560\ub97c \uc77c\uc73c\ud0a4\ub294 <defunct> \ud504\ub85c\uc138\uc2a4\uac00 \uc0dd\uae41\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 Liveness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube44\uc815\uc0c1 \ud30c\ub4dc \uc81c\uac70 \u00b6 Liveness probe\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d \uc2e4\ud589\ub418\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc751\ub2f5\ud558\uc9c0 \uc54a\ub294 \uad50\ucc29 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ud2b8 80\uc5d0\uc11c \uc218\uc2e0 \ub300\uae30\ud558\ub294 \uc6f9 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589 \uc911\uc778 \uacbd\uc6b0 \ud30c\ub4dc\uc758 \ud3ec\ud2b8 80\uc5d0\uc11c HTTP GET \uc694\uccad\uc744 \ubcf4\ub0b4\ub3c4\ub85d Liveness \ud504\ub85c\ube0c\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uc740 \uc8fc\uae30\uc801\uc73c\ub85c GET \uc694\uccad\uc744 \ud30c\ub4dc\uc5d0 \ubcf4\ub0b4\uace0 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. \ud30c\ub4dc\uac00 200-399 \uc0ac\uc774\uc5d0\uc11c \uc751\ub2f5\ud558\uba74 kubelet\uc740 \ud30c\ub4dc\uac00 \uc815\uc0c1\uc774\ub77c\uace0 \uac04\uc8fc\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud30c\ub4dc\ub294 \ube44\uc815\uc0c1\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0c1\ud0dc \uccb4\ud06c\uc5d0 \uacc4\uc18d \uc2e4\ud328\ud558\uba74 kubelet\uc740 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud569\ub098\ub2e4. initialDelaySeconds \ub97c \uc0ac\uc6a9\ud558\uc5ec \uccab \ubc88\uc9f8 \ud504\ub85c\ube0c\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. Liveness Probe\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 Liveness Probe\uc5d0 \uc2e4\ud328\ud558\ub294 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uad50\uccb4\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc624\ud504\ub77c\uc778\uc73c\ub85c \uc804\ud658\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uac8c\ub2e4\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uacc4\uc18d\ud574\uc11c \uc0c8\ub85c\uc6b4 \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uc9c0\ub9cc Liveness Probe\ub3c4 \uc2e4\ud328\ud560 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubd88\ud544\uc694\ud55c \ubd80\ub2f4\uc744 \uc90d\ub2c8\ub2e4. \ud30c\ub4dc \uc678\ubd80 \uc694\uc18c(\uc608: \uc678\ubd80 \ub370\uc774\ud130\ubca0\uc774\uc2a4)\uc5d0 \uc758\uc874\ud558\ub3c4\ub85d Liveness Probe\ub97c \uad6c\uc131\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \ub2e4\uc2dc \ub9d0\ud574, \ud30c\ub4dc \uc678\ubd80 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc751\ub2f5\ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud574\uc11c \ud30c\ub4dc\uac00 Liveness Probe\uc5d0 \uc2e4\ud328\ud558\ub294 \uc77c\uc774 \uc788\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. Sandor Sz\u00fccs\uc758 \uac8c\uc2dc\ubb3c \ud65c\uc131 \ud504\ub85c\ube0c\ub294 \uc704\ud5d8\ud558\ub2e4 \uc5d0\uc11c\ub294 \uc798\ubabb \uad6c\uc131\ub41c \ud504\ub85c\ube0c\ub85c \uc778\ud574 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \ubb38\uc81c\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \uc2dc\uc791\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9ac\ub294 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 Startup Probe\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \u00b6 \uc571\uc744 \uc2dc\uc791\ud558\ub294 \ub370 \ucd94\uac00 \uc2dc\uac04\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 Startup Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec Liveness \ubc0f Readniness Probe\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uce90\uc2f1\ud574\uc57c \ud558\ub294 Java \uc571\uc774 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 \ucd5c\ub300 2\ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc644\uc804\ud788 \uc791\ub3d9\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \ubaa8\ub4e0 Liveness \ub610\ub294 Readniness Probe\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Startup Probe\ub97c \uad6c\uc131\ud558\uba74 Liveness \ub610\ub294 Readniness Probe\ub97c \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 Java \uc571\uc744 \uc815\uc0c1 \uc0c1\ud0dc\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Startup Probe\uac00 \uc131\uacf5\ud560 \ub54c\uae4c\uc9c0 \ub2e4\ub978 \ubaa8\ub4e0 \ud504\ub85c\ube0c\ub294 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791\uc744 \uc704\ud574 \ub300\uae30\ud574\uc57c \ud558\ub294 \ucd5c\ub300 \uc2dc\uac04\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\ub300 \uad6c\uc131 \uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4\uc5d0\ub3c4 \ud30c\ub4dc\uac00 \uc5ec\uc804\ud788 \uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c\uc5d0 \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\ub294 \uc885\ub8cc\ub418\uace0 \uc0c8 \ud30c\ub4dc\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. Startup Probe\ub294 Liveness Probe\uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uc989, \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\uac00 \ub2e4\uc2dc \uc0dd\uc131\ub429\ub2c8\ub2e4. Ricardo A.\uac00 \uc790\uc2e0\uc758 \uae00 \ud658\uc0c1\uc801\uc778 \ud504\ub85c\ube0c \ubc0f \uad6c\uc131 \ubc29\ubc95 \uc5d0\uc11c \uc124\uba85\ud588\ub4ef\uc774, \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791 \uc2dc\uac04\uc744 \uc608\uce21\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Startup Probe\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2dc\uc791\ud558\ub294 \ub370 10\ucd08\uac00 \uac78\ub9b0\ub2e4\ub294 \uac83\uc744 \uc54c\uace0 \uc788\ub2e4\uba74 \ub300\uc2e0 initialDelaySeconds \uc640 \ud568\uaed8 Liveness/Readiness Probe\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. Readiness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd80\ubd84\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud558\uc138\uc694 \u00b6 Liveness probe\ub294 \ud30c\ub4dc \uc885\ub8cc(\uc989, \uc571 \uc7ac\uc2dc\uc791)\ub97c \ud1b5\ud574 \ud574\uacb0\ub418\ub294 \uc571 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\ub294 \ubc18\uba74, Readiness Probe\ub294 \uc571\uc744 temporarily \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc5d0\uc11c\ub294 \uc571\uc774 \uc77c\uc2dc\uc801\uc73c\ub85c \uc751\ub2f5\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc9c0\ub9cc \uc774 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uba74 \ub2e4\uc2dc \uc815\uc0c1\uc774 \ub420 \uac83\uc73c\ub85c \uc608\uc0c1\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc9d1\uc911\uc801\uc778 \ub514\uc2a4\ud06c I/O \uc791\uc5c5 \uc911\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc77c\uc2dc\uc801\uc73c\ub85c \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uac83\uc740 \ud574\uacb0\ucc45\uc774 \uc544\ub2c8\uba70, \ub3d9\uc2dc\uc5d0 \ud30c\ub4dc\ub85c \uc804\uc1a1\ub41c \ucd94\uac00 \uc694\uccad\uc774 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Readiness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc571\uc758 \uc77c\uc2dc\uc801\uc778 \uac00\uc6a9\uc131 \uc911\ub2e8\uc744 \uac10\uc9c0\ud558\uace0 \ub2e4\uc2dc \uc791\ub3d9\ud560 \ub54c\uae4c\uc9c0 \ud574\ub2f9 \ud30c\ub4dc\uc5d0 \ub300\ud55c \uc694\uccad \uc804\uc1a1\uc744 \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud328\ub85c \uc778\ud574 \ud30c\ub4dc\uac00 \uc7ac\uc0dd\uc131\ub418\ub294 Liveness Probe\uc640 \ub2ec\ub9ac, Readiness Probe\uac00 \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub85c\ubd80\ud130 \uc5b4\ub5a0\ud55c \ud2b8\ub798\ud53d\ub3c4 \uc218\uc2e0\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4 . Readiness Probe\uac00 \uc131\uacf5\ud558\uba74 \ud30c\ub4dc\ub294 \uc11c\ube44\uc2a4\ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc744 \ub2e4\uc2dc \uc218\uc2e0\ud569\ub2c8\ub2e4. Liveness Probe\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud30c\ub4dc \uc678\ubd80\uc758 \ub9ac\uc18c\uc2a4(\uc608: \ub370\uc774\ud130\ubca0\uc774\uc2a4)\uc5d0 \uc758\uc874\ud558\ub294 Readiness Probe\ub97c \uad6c\uc131\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \ub2e4\uc74c\uc740 \uc798\ubabb \uad6c\uc131\ub41c Readiness\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\uc785\ub2c8\ub2e4. \uc571\uc758 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc744 \ub54c \ud30c\ub4dc\uc758 Readiness Probe\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uba74 \ub2e4\ub978 \ud30c\ub4dc \ubcf5\uc81c\ubcf8\ub3c4 \ub3d9\uc77c\ud55c \uc0c1\ud0dc \uc810\uac80 \uae30\uc900\uc744 \uacf5\uc720\ud558\ubbc0\ub85c \ub3d9\uc2dc\uc5d0 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc29\uc2dd\uc73c\ub85c \ud504\ub85c\ube0c\ub97c \uc124\uc815\ud558\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc744 \ub54c\ub9c8\ub2e4 \ud30c\ub4dc\uc758 Readiness Probe\uac00 \uc2e4\ud328\ud558\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 all \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d \uc804\uc1a1\uc744 \uc911\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Readiness Probes \uc0ac\uc6a9\uc758 \ubd80\uc791\uc6a9\uc740 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ub298\ub9b4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. Readiness Probe\uac00 \uc131\uacf5\ud558\uc9c0 \uc54a\ub294 \ud55c \uc0c8 \ubcf5\uc81c\ubcf8\uc740 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub54c\uae4c\uc9c0\ub294 \uae30\uc874 \ubcf5\uc81c\ubcf8\uc774 \uacc4\uc18d\ud574\uc11c \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uac8c \ub429\ub2c8\ub2e4. \uc7a5\uc560 \ucc98\ub9ac \u00b6 \ud30c\ub4dc\uc758 \uc218\uba85\uc740 \uc720\ud55c\ud569\ub2c8\ub2e4. - \ud30c\ub4dc\ub97c \uc624\ub798 \uc2e4\ud589\ud558\ub354\ub77c\ub3c4 \ub54c\uac00 \ub418\uba74 \ud30c\ub4dc\uac00 \uc62c\ubc14\ub974\uac8c \uc885\ub8cc\ub418\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \ud604\uba85\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0dd\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uc0c8 \ub178\ub4dc\uc5d0\uc11c \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uc885\ub8cc \ucc98\ub9ac \ubc0f \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0\uc744 \ub9c8\ub828\ud558\uba74 \ud30c\ub4dc\uac00 \uc774\uc804 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub418\uace0 \uc0c8 \ub178\ub4dc\uc5d0\uc11c \uc7ac\uc0dd\uc131\ub420 \ub54c \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ub9cc\ub4e4\uace0 \uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \uc6cc\ucee4 \ub178\ub4dc\ub97c drain \ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uac00 \ube44\uc6cc\uc9c0\uba74 \ud574\ub2f9 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc548\uc804\ud558\uac8c \uc81c\uac70\ub429\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \ub2e8\uc5b4\ub294 \uc548\uc804\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\uac00 \uc81c\uac70\ub418\uba74 \ub2e8\uc21c\ud788 SIGKILL \uc2dc\uadf8\ub110\uc774 \uc804\uc1a1\ub418\ub294 \uac83\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ub300\uc2e0, SIGTERM \uc2e0\ud638\uac00 \uc81c\uac70\ub418\ub294 \ud30c\ub4dc\uc5d0 \uc788\ub294 \uac01 \ucee8\ud14c\uc774\ub108\uc758 \uba54\uc778 \ud504\ub85c\uc138\uc2a4(PID 1)\ub85c \ubcf4\ub0b4\uc9c4\ub2e4. SIGTERM \uc2e0\ud638\uac00 \uc804\uc1a1\ub41c \ud6c4, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud504\ub85c\uc138\uc2a4\uc5d0 SIGKILL \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30\uae4c\uc9c0 \uc77c\uc815 \uc2dc\uac04(\uc720\uc608 \uae30\uac04)\uc744 \uc90d\ub2c8\ub2e4. \uc774 \uc720\uc608 \uae30\uac04\uc740 \uae30\ubcf8\uc801\uc73c\ub85c 30\ucd08\uc785\ub2c8\ub2e4. kubectl\uc5d0\uc11c grace-period \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8\uac12\uc744 \uc7ac\uc815\uc758\ud558\uac70\ub098 Podspec\uc5d0\uc11c terminationGracePeriodSeconds \ub97c \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl delete pod <pod name> \u2014grace-period=<seconds> \uba54\uc778 \ud504\ub85c\uc138\uc2a4\uc5d0 PID 1\uc774 \uc5c6\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 Python \uae30\ubc18 \uc0d8\ud50c \ucee8\ud14c\uc774\ub108\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. $ kubectl exec python-app -it ps PID USER TIME COMMAND 1 root 0:00 {script.sh} /bin/sh ./script.sh 5 root 0:00 python app.py \uc774 \uc608\uc81c\uc5d0\uc11c \uc178 \uc2a4\ud06c\ub9bd\ud2b8\ub294 SIGTERM \uc744 \uc218\uc2e0\ud558\ub294\ub370, \uc774 \uc608\uc81c\uc758 \uba54\uc778 \ud504\ub85c\uc138\uc2a4\ub294 \ud30c\uc774\uc36c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc774\uc9c0\ub9cc SIGTERM \uc2e0\ud638\ub97c \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74, \ud30c\uc774\uc36c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac11\uc790\uae30 \uc885\ub8cc\ub429\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 \ucee8\ud14c\uc774\ub108\uc758 ENTRYPOINT \ub97c \ubcc0\uacbd\ud558\uc5ec \ud30c\uc774\uc36c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud568\uc73c\ub85c\uc368 \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 dumb-init \uacfc \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2e0\ud638\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ud6c4\ud06c \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc2dc\uc791 \ub610\ub294 \uc911\uc9c0 \uc2dc \uc2a4\ud06c\ub9bd\ud2b8 \ub610\ub294 HTTP \uc694\uccad\uc744 \uc2e4\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Prestop \ud6c4\ud06c \uc561\uc158\uc740 \ucee8\ud14c\uc774\ub108\uac00 SIGTERM \uc2e0\ud638\ub97c \uc218\uc2e0\ud558\uae30 \uc804\uc5d0 \uc2e4\ud589\ub418\uba70 \uc774 \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30 \uc804\uc5d0 \uc644\ub8cc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. terminationGracePeriodSeconds \uac12\uc740 SIGTERM \uc2e0\ud638\uac00 \uc804\uc1a1\ub420 \ub54c\uac00 \uc544\ub2c8\ub77c PreStop \ud6c4\ud06c \uc561\uc158\uc774 \uc2e4\ud589\ub418\uae30 \uc2dc\uc791\ud560 \ub54c\ubd80\ud130 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 Pod Disruption Budget\uc73c\ub85c \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud558\uc138\uc694 \u00b6 Pod Disruption Budget \ub610\ub294 PDB\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc81c\ubcf8 \uc218\uac00 \uc120\uc5b8\ub41c \uc784\uacc4\uac12 \uc544\ub798\ub85c \ub5a8\uc5b4\uc9c0\uba74 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\ub97c \uc77c\uc2dc\uc801\uc73c\ub85c \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubcf5\uc81c\ubcf8 \uc218\uac00 \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud558\uba74 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d\ub429\ub2c8\ub2e4. PDB\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcf5\uc81c\ubcf8\uc758 minAvailable \ubc0f maxUnavailable \uc218\ub97c \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc571 \ubcf5\uc81c\ubcf8\uc744 3\uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud558\ub824\uba74 PDB\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: my-svc-pdb spec: minAvailable: 3 selector: matchLabels: app: my-svc \uc704\uc758 PDB \uc815\ucc45\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uac8c 3\uac1c \uc774\uc0c1\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744 \ub54c\uae4c\uc9c0 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\ub97c \uc911\ub2e8\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \ub178\ub4dc \ub4dc\ub808\uc774\ub2dd\uc740 PodDisruptionBudgets \uc744 \uace0\ub824\ud569\ub2c8\ub2e4. EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc5c5\uadf8\ub808\uc774\ub4dc \uc911\uc5d0\ub294 15\ubd84 \ud0c0\uc784\uc544\uc6c3\uc73c\ub85c \ub178\ub4dc\uac00 \uace0\uac08\ub429\ub2c8\ub2e4 . 15\ubd84 \ud6c4 \uc5c5\ub370\uc774\ud2b8\ub97c \uac15\uc81c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc73c\uba74(EKS \ucf58\uc194\uc5d0\uc11c\ub294 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\ub77c\uace0 \ud568) \uc5c5\ub370\uc774\ud2b8\uac00 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8\ub97c \uac15\uc81c\ub85c \uc801\uc6a9\ud558\uba74 \ud30c\ub4dc\uac00 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 \uacbd\uc6b0 AWS Node Termination Handler \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 EC2 \uc720\uc9c0 \uad00\ub9ac \uc774\ubca4\ud2b8 \ubc0f EC2 \uc2a4\ud31f \uc911\ub2e8 \ub4f1 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\ub294 \uc774\ubca4\ud2b8\uc5d0 \uc801\uc808\ud558\uac8c \ub300\uc751\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ube44\uc6b0\uace0 \uc0c8 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud55c \ub2e4\uc74c, \ud30c\ub4dc\ub97c \ub4dc\ub808\uc774\ub2dd\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud55c\ub2e4. \ud30c\ub4dc anti-affinity\ub97c \uc0ac\uc6a9\ud574 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc\ub97c \ub2e4\ub978 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ud558\uace0 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \uc911 PDB \uad00\ub828 \uc9c0\uc5f0\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \uc5f0\uc2b5 \u00b6 \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1\uc740 \ud504\ub85c\ub355\uc158\uc5d0\uc11c\uc758 \uaca9\ub82c\ud55c \uc870\uac74\uc744 \uacac\ub51c \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc758 \uc131\ub2a5\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ub97c \uad6c\ucd95\ud558\uae30 \uc704\ud574 \ubd84\uc0b0 \uc2dc\uc2a4\ud15c\uc744 \uc2e4\ud5d8\ud558\ub294 \ubd84\uc57c\uc785\ub2c8\ub2e4. Dominik Tornow\ub294 \uc790\uc2e0\uc758 \ube14\ub85c\uadf8 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc120\uc5b8\uc801 \uc2dc\uc2a4\ud15c \uc5d0\uc11c \u201c \uc0ac\uc6a9\uc790\uac00 \uc6d0\ud558\ub294 \uc2dc\uc2a4\ud15c \uc0c1\ud0dc\ub97c \uc2dc\uc2a4\ud15c\uc5d0 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc2dc\uc2a4\ud15c\uc740 \ud604\uc7ac \uc0c1\ud0dc\uc640 \uc6d0\ud558\ub294 \uc0c1\ud0dc\ub97c \uace0\ub824\ud558\uc5ec \ud604\uc7ac \uc0c1\ud0dc\uc5d0\uc11c \uc6d0\ud558\ub294 \uc0c1\ud0dc\ub85c \uc804\ud658\ud558\uae30 \uc704\ud55c \uba85\ub839 \uc21c\uc11c\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \u201d\ub77c\uace0 \uc124\uba85\ud569\ub2c8\ub2e4. \uc989, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud56d\uc0c1 \uc6d0\ud558\ub294 \uc0c1\ud0dc \ub97c \uc800\uc7a5\ud558\uace0 \uc2dc\uc2a4\ud15c\uc774 \uc774\ub97c \ubc97\uc5b4\ub098\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc0c1\ud0dc\ub97c \ubcf5\uc6d0\ud558\uae30 \uc704\ud55c \uc870\uce58\ub97c \ucde8\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub418\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud30c\ub4dc\ub97c \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\ub85c \ub2e4\uc2dc \uc2a4\ucf00\uc904\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c, replica \uac00 \ucda9\ub3cc\ud558\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec \uac00 \uc0c8 replica \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7f0 \ubc29\uc2dd\uc73c\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc7a5\uc560\ub97c \uc790\ub3d9\uc73c\ub85c \uc218\uc815\ud569\ub2c8\ub2e4. Gremlin \uacfc \uac19\uc740 \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf5\uc6d0\ub825\uc744 \ud14c\uc2a4\ud2b8\ud558\uace0 \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130(\ubc0f \uadf8 \uc774\uc0c1)\uc5d0 \uc778\uc704\uc801\uc778 \ud63c\ub3c8\uc744 \uc720\ubc1c\ud558\ub294 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc2dc\uc2a4\ud15c \uc57d\uc810\uc744 \ubc1c\uacac\ud558\uace0 \ubcd1\ubaa9 \ud604\uc0c1\uacfc \uc798\ubabb\ub41c \uad6c\uc131\uc744 \uc2dd\ubcc4\ud558\uba70 \ud1b5\uc81c\ub41c \ud658\uacbd\uc5d0\uc11c \ubb38\uc81c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ucca0\ud559\uc740 \uc758\ub3c4\uc801\uc73c\ub85c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uace0 \uc778\ud504\ub77c\uc5d0 \uc2a4\ud2b8\ub808\uc2a4\ub97c \uc8fc\uc5b4 \uc608\uc0c1\uce58 \ubabb\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc744 \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc \uc0ac\uc6a9 \u00b6 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc6d0\ub825\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub294 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \uac00\ub2a5\ud558\uac8c \ud558\uace0 \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac00\uc2dc\uc131\uc744 \ub192\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc11c\ube44\uc2a4 \uba54\uc2dc \uc81c\ud488\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uac00\ub85c\ucc44\uace0 \uac80\uc0ac\ud558\ub294 \uc18c\uaddc\ubaa8 \ub124\ud2b8\uc6cc\ud06c \ud504\ub85d\uc2dc\ub97c \uac01 \uc11c\ube44\uc2a4\uc640 \ud568\uaed8 \uc2e4\ud589\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uba54\uc2dc\uc5d0 \ubc30\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \ud504\ub85d\uc2dc\uc5d0 \ub0b4\uc7a5\ub41c \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud1b5\uacc4\ub97c \uc0dd\uc131\ud558\uace0, \uc561\uc138\uc2a4 \ub85c\uadf8\ub97c \uc0dd\uc131\ud558\uace0, \ubd84\uc0b0 \ucd94\uc801\uc744 \uc704\ud55c \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc694\uccad\uc5d0 HTTP \ud5e4\ub354\ub97c \ucd94\uac00\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc790\ub3d9 \uc694\uccad \uc7ac\uc2dc\ub3c4, \uc81c\ud55c \uc2dc\uac04, \ud68c\ub85c \ucc28\ub2e8, \uc18d\ub3c4 \uc81c\ud55c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ud1b5\ud574 \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4\uc758 \ubcf5\uc6d0\ub825\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc6b4\uc601\ud558\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uac04 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc \u00b6 AWS App Mesh Istio LinkerD Consul Observability \u00b6 Observability\ub294 \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45, \ucd94\uc801\uc744 \ud3ec\ud568\ud558\ub294 \ud3ec\uad04\uc801\uc778 \uc6a9\uc5b4\uc785\ub2c8\ub2e4. \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4 \uae30\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubc30\ud3ec\ub429\ub2c8\ub2e4. \ub2e8\uc77c \uc2dc\uc2a4\ud15c\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud55c \ubaa8\ub180\ub9ac\uc2dd \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub2ec\ub9ac \ubd84\uc0b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c\ub294 \uac01 \uad6c\uc131 \uc694\uc18c\uc758 \uc131\ub2a5\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc218\uc900 \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45 \ubc0f \ubd84\uc0b0 \ucd94\uc801 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d\uc774 \uc911\ub2e8\ub418\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc758 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb38\uc81c \ud574\uacb0 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub0b4\uc7a5 \ub3c4\uad6c\ub294 \uc81c\ud55c\uc801\uc785\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud558\uc5ec \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\uc9c0\ub9cc \uc720\uc9c0\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc758 \ub85c\uadf8\ub97c \ubcfc \uc218 \uc788\uc9c0\ub9cc, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub85c\uadf8\ub97c \uc790\ub3d9\uc73c\ub85c \ubcf4\uad00\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ubd84\uc0b0 \ucd94\uc801 \uad6c\ud604\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ub610\ub294 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ud655\uc7a5\uc131\uc740 \uc5ec\uae30\uc11c \ube5b\uc744 \ubc1c\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc120\ud638\ud558\ub294 \uc911\uc559 \uc9d1\uc911\uc2dd \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45 \ubc0f \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubaa8\ub2c8\ud130\ub9c1 \u00b6 \ucd5c\uc2e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud558\ub294 \uc9c0\ud45c\uc758 \uc218\ub294 \uacc4\uc18d \uc99d\uac00\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ucd94\uc801\ud558\uba74 \uace0\uac1d\uc758 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294\ub370 \uc9d1\uc911\ud560 \uc218 \uc788\uc5b4 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. Prometheus \ub610\ub294 CloudWatch Container Insights \uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\ubc18\uc758 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub294 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \ub54c \ub610\ub294 \uac00\uae09\uc801\uc774\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uae30 \uc804\uc5d0 \uc2e0\ud638\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc6b4\uc601 \ud300\uc774 \uad6c\ub3c5\ud560 \uc218 \uc788\ub294 \uc54c\ub9bc\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc545\ud654 \uc2dc \uac00\ub3d9 \uc911\ub2e8\uc73c\ub85c \uc774\uc5b4\uc9c0\uac70\ub098 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud574 \uacbd\ubcf4\ub97c \ud65c\uc131\ud654\ud558\ub294 \uaddc\uce59\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc5b4\ub5a4 \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud560\uc9c0 \uc798 \ubaa8\ub974\uaca0\ub2e4\uba74 \ub2e4\uc74c \ubc29\ubc95\uc5d0\uc11c \uc601\uac10\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RED method . \uc694\uccad, \uc624\ub958, \uae30\uac04\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. USE method . \uc0ac\uc6a9\ub960, \ud3ec\ud654\ub3c4, \uc624\ub958\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Sysdig\uc758 \uac8c\uc2dc\ubb3c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc54c\ub9bc \ubaa8\ubc94 \uc0ac\ub840 \uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c\uc758 \ud3ec\uad04\uc801\uc778 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uba54\ud2b8\ub9ad\uc744 \uacf5\uac1c\ud558\uc138\uc694 \u00b6 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ud45c\uc900 \uba54\ud2b8\ub9ad\uc744 \uc9d1\uacc4\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ubcc4 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uba54\ud2b8\ub9ad\uc744 \uacf5\uac1c\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc2dc\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559 \uc9d1\uc911\uc2dd \ub85c\uae45 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \uc720\uc9c0\ud569\ub2c8\ub2e4. \u00b6 EKS \ub85c\uae45\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uc758 \ub450 \uac00\uc9c0 \ubc94\uc8fc\uc5d0 \uc18d\ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uac10\uc0ac \ubc0f \uc9c4\ub2e8 \ub85c\uadf8\ub97c \uacc4\uc815\uc758 CloudWatch Logs\ub85c \uc9c1\uc811 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc0dd\uc131\ub418\ub294 \ub85c\uadf8\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uc5d0\ub294 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\ub294 \ud30c\ub4dc\uc640 CoreDNS, Cluster Autoscaler, Prometheus \ub4f1\uacfc \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2dc\uc2a4\ud15c \ucef4\ud3ec\ub10c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ub41c \ub85c\uadf8\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. EKS\ub294 \ub2e4\uc12f \uac00\uc9c0 \uc720\ud615\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. : \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uad6c\uc131 \uc694\uc18c \ub85c\uadf8 \uac10\uc0ac \uc778\uc99d\uc790(Authenticator) \ucee8\ud2b8\ub864\ub7ec \ub9e4\ub2c8\uc800 \uc2a4\ucf00\uc904\ub7ec \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec \ub85c\uadf8\ub294 \ubcd1\ubaa9 \ud604\uc0c1 \ubc0f \uc624\ub958\uc640 \uac19\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubb38\uc81c\ub97c \uc9c4\ub2e8\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\ub294 CloudWatch Logs\ub85c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45\uc744 \ud65c\uc131\ud654\ud558\uace0 \uacc4\uc815\uc758 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ucea1\ucc98\ud558\ub824\ub294 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\uc758 \uc720\ud615\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 Fluent Bit , Fluentd \ub610\ub294 CloudWatch Container Insights \uc640 \uac19\uc740 \ub85c\uadf8 \uc218\uc9d1 \ub3c4\uad6c\ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub85c\uadf8 \uc560\uadf8\ub9ac\uac8c\uc774\ud130 \ub3c4\uad6c\ub294 \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc\uc758 \ucee8\ud14c\uc774\ub108 \ub85c\uadf8\ub97c \uc2a4\ud06c\ub7a9\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uac00 \uc911\uc559 \uc9d1\uc911\uc2dd \ub300\uc0c1\uc73c\ub85c \uc804\uc1a1\ub418\uc5b4 \uc800\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 CloudWatch \ucee8\ud14c\uc774\ub108 \uc778\uc0ac\uc774\ud2b8\ub294 Fluent Bit \ub610\ub294 Fluentd\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \uc774\ub97c CloudWatch Logs\ub85c \uc804\uc1a1\ud558\uc5ec \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fluent Bit\uacfc Fluentd\ub294 Elasticsearch \ubc0f InfluxDB\uc640 \uac19\uc740 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \uc5ec\ub7ec \ub85c\uadf8 \ubd84\uc11d \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ubbc0\ub85c Fluent Bit \ub610\ub294 Fluentd\uc758 \ub85c\uadf8 \uad6c\uc131\uc744 \uc218\uc815\ud558\uc5ec \ub85c\uadf8\uc758 \uc2a4\ud1a0\ub9ac\uc9c0 \ubc31\uc5d4\ub4dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd84\uc0b0 \ucd94\uc801 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624. \u00b6 \uc77c\ubc18\uc801\uc778 \ucd5c\uc2e0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \uad6c\uc131 \uc694\uc18c\uac00 \ubd84\uc0b0\ub418\uc5b4 \uc788\uc73c\uba70 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uad6c\uc131\ud558\ub294 \uac01 \uad6c\uc131 \uc694\uc18c\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub294\uc9c0\uc5d0 \ub530\ub77c \uc2e0\ub8b0\uc131\uc774 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ubd84\uc0b0 \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc694\uccad\uc758 \ud750\ub984\uacfc \uc2dc\uc2a4\ud15c\uc774 \ud1b5\uc2e0\ud558\ub294 \ubc29\uc2dd\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uc801\uc744 \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uc704\uce58\ub97c \ud30c\uc545\ud558\uace0 \uc5f0\uc1c4\uc801 \uc7a5\uc560\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \ubb38\uc81c\ub97c \uc608\ubc29\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucd94\uc801\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ubd84\uc0b0 \ucd94\uc801\uc744 \uad6c\ud604\ud558\uac70\ub098 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ucd94\uc801\uc744 \uad6c\ud604\ud558\ub294 \uac83\uc740 \ubd88\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \ucf54\ub4dc\ub97c \ubcc0\uacbd\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uad6d\uc5b4 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \ub354 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \ub610\ud55c \uc11c\ube44\uc2a4 \uc804\uccb4\uc5d0 \uac78\uccd0 \ub610 \ub2e4\ub978 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc720\uc9c0 \uad00\ub9ac\ud560 \ucc45\uc784\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. LinkerD , Istio , AWS App Mesh \uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\ub97c \ucd5c\uc18c\ud55c\uc73c\ub85c \ubcc0\uacbd\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubd84\uc0b0 \ucd94\uc801\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\ud45c \uc0dd\uc131, \ub85c\uae45 \ubc0f \ucd94\uc801\uc744 \ud45c\uc900\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS X-Ray , Jaeger \uc640 \uac19\uc740 \ucd94\uc801 \ub3c4\uad6c\ub294 \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc640 \uc11c\ube44\uc2a4 \uba54\uc2dc \uad6c\ud604\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. (\uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \uc11c\ube44\uc2a4 \uba54\uc2dc) \uad6c\ud604\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub294 AWS X-Ray \ub610\ub294 Jaeger \uc640 \uac19\uc740 \ucd94\uc801 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc2ee\uc2dc\uc624. \uadf8\ub7ec\uba74 \ub098\uc911\uc5d0 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \ucc44\ud0dd\ud560 \ub54c \ub3c4\uad6c\ub97c \uc804\ud658\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4.","title":"\uace0\uac00\uc6a9\uc131 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589"},{"location":"reliability/docs/application.kr/#_1","text":"\uace0\uac1d\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcc0\uacbd\ud560 \ub54c\ub098 \ud2b8\ub798\ud53d\uc774 \uae09\uc99d\ud560 \ub54c \uc870\ucc28 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud56d\uc0c1 \uc0ac\uc6a9 \uac00\ub2a5\ud558\uae30\ub97c \uae30\ub300\ud569\ub2c8\ub2e4. \ud655\uc7a5 \uac00\ub2a5\ud558\uace0 \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \uc544\ud0a4\ud14d\ucc98\ub97c \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc11c\ube44\uc2a4\ub97c \uc911\ub2e8 \uc5c6\uc774 \uc2e4\ud589\ud558\uc5ec \uc0ac\uc6a9\uc790 \ub9cc\uc871\ub3c4\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud655\uc7a5 \uac00\ub2a5\ud55c \uc778\ud504\ub77c\ub294 \ube44\uc988\ub2c8\uc2a4 \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \ud655\uc7a5 \ubc0f \ucd95\uc18c\ub429\ub2c8\ub2e4. \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc81c\uac70\ud558\ub294 \uac83\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc744 \uac1c\uc120\ud558\uace0 \ubcf5\uc6d0\ub825\uc744 \ub192\uc774\uae30 \uc704\ud55c \uc911\uc694\ud55c \ub2e8\uacc4\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ubc29\uc2dd\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc6b4\uc601\ud558\uace0 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc120\uc5b8\uc801 \uad00\ub9ac\ub97c \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uc815\ud55c \ud6c4\uc5d0\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc9c0\uc18d\uc801\uc73c\ub85c \ud604\uc7ac \uc0c1\ud0dc\ub97c \uc6d0\ud558\ub294 \uc0c1\ud0dc\uc640 \uc77c\uce58 \ud558\ub3c4\ub85d \uc2dc\ub3c4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uace0\uac00\uc6a9\uc131 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589"},{"location":"reliability/docs/application.kr/#_2","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/application.kr/#_3","text":"\uc804\uccb4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc77c \ud30c\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0, \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. \uac1c\ubcc4 \ud3ec\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc30\ud3ec\ud558\ub294 \ub300\uc2e0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc0dd\uc131\ub41c \ud30c\ub4dc\uac00 \uc2e4\ud328\ud558\uac70\ub098 \uc885\ub8cc\ub418\ub294 \uacbd\uc6b0, \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec \ub294 \uc0c8 \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\uc5ec \uc9c0\uc815\ub41c \uac1c\uc218\uc758 \ub808\ud50c\ub9ac\uce74 \ud30c\ub4dc\uac00 \ud56d\uc0c1 \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\uc2f1\uae00\ud1a4 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc138\uc694"},{"location":"reliability/docs/application.kr/#_4","text":"\ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc571\uc758 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uba74 \uac00\uc6a9\uc131\uc774 \ub192\uc740 \ubc29\uc2dd\uc73c\ub85c \uc571\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \ubcf5\uc81c\ubcf8\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc190\uc2e4\uc744 \ub9cc\ud68c\ud558\uae30 \uc704\ud574 \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \uc6a9\ub7c9\uc774 \uc904\uc5b4\ub4e4\uae30\ub294 \ud558\uc9c0\ub9cc \ub098\uba38\uc9c0 \ubcf5\uc81c\ubcf8\uc740 \uc5ec\uc804\ud788 \uc791\ub3d9\ud55c\ub2e4. \ub610\ud55c Horizontal Pod Autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \uc218\uc694\uc5d0 \ub530\ub77c \ubcf5\uc81c\ubcf8\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \uac1c\uc758 \ub808\ud50c\ub9ac\uce74 \uc2e4\ud589"},{"location":"reliability/docs/application.kr/#_5","text":"\ubaa8\ub4e0 \ubcf5\uc81c\ubcf8\uc774 \ub3d9\uc77c\ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\uace0 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub418\uba74 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc740 \uadf8\ub2e4\uc9c0 \uc720\uc6a9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc anti-affinity \ub610\ub294 \ud30c\ub4dc topology spread contraints\uc744 \uc0ac\uc6a9\ud574 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc5ec\ub7ec \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \ubd84\uc0b0\uc2dc\ud0a4\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc5ec\ub7ec AZ\uc5d0\uc11c \uc2e4\ud589\ud558\uc5ec \uc77c\ubc18\uc801\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc744 \ub354\uc6b1 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \ub178\ub4dc\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/application.kr/#anti-affinity","text":"\uc544\ub798 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc5d0\uac8c \ud30c\ub4dc\ub97c \ubcc4\ub3c4\uc758 \ub178\ub4dc\uc640 AZ\uc5d0 \ubc30\uce58\ud558\ub3c4\ub85d prefer \ub77c\uace0 \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ub418\uc5b4\uc788\ub2e4\uba74 \ubcc4\ub3c4\uc758 \ub178\ub4dc\ub098 AZ\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud558\uba74 \uac01 AZ\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud3ec\ub4dc\uac00 \uc788\uc73c\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc5b4\ub5a4 \ud30c\ub4dc\ub3c4 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub2e8 \uc138 \uac1c\uc758 \ubcf5\uc81c\ubcf8\uc774 \ud544\uc694\ud55c \uacbd\uc6b0, topologyKey: topology.kubernetes.io/zone \uc5d0 \ub300\ud574 requiredDuringSchedulingIgnoredDuringExecution \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \ub3d9\uc77c\ud55c AZ\uc5d0 \ub450 \uac1c\uc758 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: topology.kubernetes.io/zone weight: 100 - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: kubernetes.io/hostname weight: 99 containers: - name: web-app image: nginx:1.16-alpine","title":"\ud30c\ub4dc anti-affinity \uaddc\uce59 \uc0ac\uc6a9"},{"location":"reliability/docs/application.kr/#topology-spread-constraints","text":"\ud3ec\ub4dc anti-affinity \uaddc\uce59\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c, \ud3ec\ub4dc topology spread constraints\uc744 \uc0ac\uc6a9\ud558\uba74 \ud638\uc2a4\ud2b8 \ub610\ub294 AZ\uc640 \uac19\uc740 \ub2e4\uc591\ud55c \uc7a5\uc560 (\ub610\ub294 \ud1a0\ud3f4\ub85c\uc9c0) \ub3c4\uba54\uc778\uc5d0\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc740 \uc11c\ub85c \ub2e4\ub978 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uac01\uac01\uc5d0 \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc744 \ubcf4\uc720\ud558\uc5ec \ub0b4\uacb0\ud568\uc131\uacfc \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \ub9e4\uc6b0 \ud6a8\uacfc\uc801\uc785\ub2c8\ub2e4. \ubc18\uba74, \ud30c\ub4dc anti-affinity \uaddc\uce59\uc740 anti-affinity\uac00 \uc788\ub294 \ud30c\ub4dc \uc11c\ub85c\uc5d0 \ub300\ud574 \uac70\ubd80 \ud6a8\uacfc\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778\uc5d0 \ub2e8\uc77c \ubcf5\uc81c\ubcf8\uc774 \uc788\ub3c4\ub85d \uc27d\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacbd\uc6b0 \uc804\uc6a9 \ub178\ub4dc\uc758 \ub2e8\uc77c \ubcf5\uc81c\ubcf8\uc740 \ub0b4\uacb0\ud568\uc131 \uce21\uba74\uc5d0\uc11c \uc774\uc0c1\uc801\uc774\uc9c0\ub3c4 \uc54a\uace0 \ub9ac\uc18c\uc2a4\ub97c \uc801\uc808\ud558\uac8c \uc0ac\uc6a9\ud558\uc9c0\ub3c4 \uc54a\uc2b5\ub2c8\ub2e4. topology spread constraints\uc744 \uc0ac\uc6a9\ud558\uba74 \uc2a4\ucf00\uc904\ub7ec\uac00 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc804\uccb4\uc5d0 \uc801\uc6a9\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\ub294 \ubd84\ubc30 \ub610\ub294 \ubc30\ud3ec\ub97c \ubcf4\ub2e4 \ud6a8\uacfc\uc801\uc73c\ub85c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc911\uc694\ud55c \uc18d\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. 1. MaxSkew \ub294 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc804\uccb4\uc5d0\uc11c \uade0\ub4f1\ud558\uc9c0 \uc54a\uac8c \ubd84\uc0b0\ub420 \uc218 \uc788\ub294 \ucd5c\ub300 \uc815\ub3c4\ub97c \uc81c\uc5b4\ud558\uac70\ub098 \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 10\uac1c\uc758 \ubcf5\uc81c\ubcf8\uc774 \uc788\uace0 3\uac1c\uc758 AZ\uc5d0 \ubc30\ud3ec\ub41c \uacbd\uc6b0 \uade0\ub4f1\ud558\uac8c \ubd84\uc0b0\ub420 \uc218\ub294 \uc5c6\uc9c0\ub9cc \ubd84\ud3ec\uc758 \ubd88\uade0\uc77c\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 MaxSkew \ub294 1\uc5d0\uc11c 10 \uc0ac\uc774\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uac12\uc774 1\uc774\uba74 3\uac1c\uc758 AZ\uc5d0 \uac78\uccd0 4,3,3 , 3,4,3 \ub610\ub294 3,3,4 \uc640 \uac19\uc740 \ubd84\ubc30\uac00 \uc0dd\uc131\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c \uac12\uc774 10\uc774\uba74 3\uac1c\uc758 AZ\uc5d0 \uac78\uccd0 10,0,0 , 0,10,0 \ub610\ub294 0,0,10 \uacfc \uac19\uc740 \ubd84\ubc30\uac00 \ub098\uc62c \uc218 \uc788\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. 2. TopologyKey \ub294 \ub178\ub4dc \ub808\uc774\ube14 \uc911 \ud558\ub098\uc758 \ud0a4\uc774\uba70 \ud3ec\ub4dc \ubc30\ud3ec\uc5d0 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778 \uc720\ud615\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc874(zone)\ubcc4 \ubd84\ubc30\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ud0a4-\uac12 \uc30d\uc744 \uac00\uc9d1\ub2c8\ub2e4. topologyKey: \"topology.kubernetes.io/zone\" 3. WhenUnsatisfiable \uc18d\uc131\uc740 \uc6d0\ud558\ub294 \uc81c\uc57d \uc870\uac74\uc744 \ucda9\uc871\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc2a4\ucf00\uc904\ub7ec\uac00 \uc5b4\ub5bb\uac8c \uc751\ub2f5\ud560\uc9c0 \uacb0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. 4. LabelSelector \ub294 \uc77c\uce58\ud558\ub294 \ud30c\ub4dc\ub97c \ucc3e\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70, \uc774\ub97c \ud1b5\ud574 \uc2a4\ucf00\uc904\ub7ec\ub294 \uc9c0\uc815\ud55c \uc81c\uc57d \uc870\uac74\uc5d0 \ub530\ub77c \ud30c\ub4dc\ub97c \ubc30\uce58\ud560 \uc704\uce58\ub97c \uacb0\uc815\ud560 \ub54c \uc774\ub97c \uc778\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc704\uc758 \ud544\ub4dc \uc678\uc5d0\ub3c4, \ub2e4\ub978 \ud544\ub4dc\uc5d0 \ub300\ud574\uc11c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \uc5d0\uc11c \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 10 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: app: express-test containers: - name: web-app image: nginx:1.16-alpine","title":"\ud3ec\ub4dc topology spread constraints \uc0ac\uc6a9"},{"location":"reliability/docs/application.kr/#_6","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84 \ub97c \uc124\uce58\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud655\uc7a5\uc5d0 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. HPA \ubc0f VPA \uc640 \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc560\ub4dc\uc628\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uba54\ud2b8\ub9ad\uc744 \ucd94\uc801\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud569\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \uaddc\ubaa8 \uc870\uc815 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4. \uba54\ud2b8\ub9ad\uc740 kubelets\uc5d0\uc11c \uc218\uc9d1\ub418\uc5b4 \uba54\ud2b8\ub9ad API \ud615\uc2dd \uc73c\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \ub370\uc774\ud130\ub97c \ubcf4\uad00\ud558\uc9c0 \uc54a\uc73c\uba70 \ubaa8\ub2c8\ud130\ub9c1 \uc194\ub8e8\uc158\ub3c4 \uc544\ub2d9\ub2c8\ub2e4. \uadf8 \ubaa9\uc801\uc740 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9 \uba54\ud2b8\ub9ad\uc744 \ub2e4\ub978 \uc2dc\uc2a4\ud15c\uc5d0 \uacf5\uac1c\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc2dc\uac04 \uacbd\uacfc\uc5d0 \ub530\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \ucd94\uc801\ud558\ub824\uba74 Prometheus \ub610\ub294 Amazon CloudWatch\uc640 \uac19\uc740 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. EKS \uc124\uba85\uc11c \uc5d0 \ub530\ub77c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uba54\ud2b8\ub9ad \uc11c\ubc84\ub97c \uc124\uce58\ud558\uc2ed\uc2dc\uc624.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84 \uc2e4\ud589"},{"location":"reliability/docs/application.kr/#horizontal-pod-autoscaler-hpa","text":"HPA\ub294 \uc218\uc694\uc5d0 \ub530\ub77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \ud2b8\ub798\ud53d\uc774 \ucd5c\uace0\uc870\uc5d0 \ub2ec\ud560 \ub54c \uace0\uac1d\uc5d0\uac8c \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ub3c4\uc640\uc90d\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\ub294 \uc81c\uc5b4 \ub8e8\ud504\ub85c \uad6c\ud604\ub418\uc5b4 \uc788\uc5b4 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud558\ub294 API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc815\uae30\uc801\uc73c\ub85c \ucffc\ub9ac\ud569\ub2c8\ub2e4. HPA\ub294 \ub2e4\uc74c API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1. \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad API\ub77c\uace0\ub3c4 \ud558\ub294 metrics.k8s.io \u2014 \ud30c\ub4dc\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. 2. custom.metrics.k8s.io \u2014 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc640 \uac19\uc740 \ub2e4\ub978 \uba54\ud2b8\ub9ad \ucf5c\ub809\ud130\uc758 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba54\ud2b8\ub9ad\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 internal \uc785\ub2c8\ub2e4. 3. external.metrics.k8s.io \u2014 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc5d0 __external__\uc778 \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4 (\uc608: SQS \ub300\uae30\uc5f4 \uae38\uc774, ELB \uc9c0\uc5f0 \uc2dc\uac04). \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\uae30 \uc704\ud55c \uba54\ud2b8\ub9ad\uc744 \uc81c\uacf5\ud558\ub824\uba74 \uc774 \uc138 \uac00\uc9c0 API \uc911 \ud558\ub098\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"Horizontal Pod Autoscaler (HPA)"},{"location":"reliability/docs/application.kr/#_7","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub960 \uc774\uc678\uc758 \uc9c0\ud45c\uc5d0 \ub530\ub77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad API \uc11c\ubc84\ub294 HPA\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9 \uc2a4\ucf00\uc77c\ub9c1\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 custom-metrics.k8s.io API\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad API\uc6a9 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud558\uace0 HPA\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uba54\ud2b8\ub9ad API \ud615\uc2dd \uc73c\ub85c \ub178\ucd9c\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee4\uc2a4\ud140 \uba54\ud2b8\ub9ad \uad6c\ud604 \ubaa9\ub85d\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5b4\ub311\ud130\ub97c \ubc30\ud3ec\ud55c \ud6c4\uc5d0\ub294 kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uba54\ud2b8\ub9ad\uc744 \ucffc\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get \u2014raw /apis/custom.metrics.k8s.io/v1beta1/ \uc678\ubd80 \uba54\ud2b8\ub9ad \uc740 \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774 Horizontal Pod Autoscaler\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc758 \uba54\ud2b8\ub9ad\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ubc30\uce58 \ucc98\ub9ac \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c\ub294 SQS \ub300\uae30\uc5f4\uc5d0\uc11c \uc9c4\ud589 \uc911\uc778 \uc791\uc5c5 \uc218\uc5d0 \ub530\ub77c \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc870\uc815\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 SQS \ub300\uae30\uc5f4 \uae4a\uc774\uc5d0 \ub530\ub77c \ubc30\uce58-\ud504\ub85c\uc138\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud06c\uae30 \uc870\uc815 \uacfc \uac19\uc774 CloudWatch \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc790\ub3d9 \ud655\uc7a5\ud558\ub824\uba74 k8s-cloudwatch-adapter \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. k8s-\ud074\ub77c\uc6b0\ub4dc\uc6cc\uce58 \uc5b4\ub311\ud130 \ub294 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uc81d\ud2b8\uc774\uba70 AWS\uc5d0\uc11c \uc720\uc9c0 \uad00\ub9ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uae30\ubc18\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uaddc\ubaa8 \uc870\uc815"},{"location":"reliability/docs/application.kr/#vertical-pod-autoscaler-vpa","text":"VPA\ub294 \ud30c\ub4dc\uc758 CPU \ubc0f \uba54\ubaa8\ub9ac \uc608\uc57d\uc744 \uc790\ub3d9\uc73c\ub85c \uc870\uc815\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \u201c\uc801\uc808\ud55c \ud06c\uae30\u201d\ub85c \uc870\uc815\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \ud560\ub2f9\uc744 \ub298\ub824 \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 VPA \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \ubcf5\uc81c\ubcf8\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uac70\ub098 \uaddc\ubaa8 \uc870\uc815 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VPA\uc758 \ud604\uc7ac \uad6c\ud604\uc740 \ud30c\ub4dc\uc5d0 \ub300\ud55c \uc778\ud50c\ub808\uc774\uc2a4 \uc870\uc815\uc744 \uc218\ud589\ud558\uc9c0 \uc54a\uace0 \ub300\uc2e0 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uae30 \ub54c\ubb38\uc5d0 VPA\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc77c\uc2dc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \uc124\uba85\uc11c \uc5d0\ub294 VPA \uc124\uc815 \ubc29\ubc95\uc774 \uc218\ub85d\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Fairwinds Goldilocks \ud504\ub85c\uc81d\ud2b8\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc694\uccad \ubc0f \uc81c\ud55c\uc5d0 \ub300\ud55c VPA \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc2dc\uac01\ud654\ud560 \uc218 \uc788\ub294 \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. VPA \uc5c5\ub370\uc774\ud2b8 \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 VPA \uad8c\uc7a5 \uc0ac\ud56d\uc5d0 \ub530\ub77c \ud30c\ub4dc\ub97c \uc790\ub3d9 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Vertical Pod Autoscaler (VPA)"},{"location":"reliability/docs/application.kr/#_8","text":"\ucd5c\uc2e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 \ub192\uc740 \uc218\uc900\uc758 \uc548\uc815\uc131\uacfc \uac00\uc6a9\uc131\uc744 \uac16\ucd98 \ube60\ub978 \ud601\uc2e0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uace0\uac1d\uc5d0\uac8c \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\uba74\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac00\uc6a9\uc131 \uc800\ud558 \uc5c6\uc774 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc2e0\uc18d\ud558\uac8c \ubc30\ud3ec\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5c5\ub370\uc774\ud2b8"},{"location":"reliability/docs/application.kr/#_9","text":"\uc2e4\ud589 \ucde8\uc18c \ubc84\ud2bc\uc774 \uc788\uc73c\uba74 \uc7ac\ud574\ub97c \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 \ubcc4\ub3c4\uc758 \ud558\uc704 \ud658\uacbd(\ud14c\uc2a4\ud2b8 \ub610\ub294 \uac1c\ubc1c \ud658\uacbd)\uc5d0\uc11c \ubc30\ud3ec\ub97c \ud14c\uc2a4\ud2b8\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ubc30\ud3ec\ub97c \uc790\ub3d9\ud654\ud558\uace0 \ud14c\uc2a4\ud2b8\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc18d\uc801 \ubc30\ud3ec \ud30c\uc774\ud504\ub77c\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \uacb0\ud568\uc774 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \uc774\uc804 \ubc84\uc804\uc73c\ub85c \ube60\ub974\uac8c \ub418\ub3cc\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\uc74c\uacfc \uac19\uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl --record deployment.apps/nginx-deployment set image nginx-deployment nginx = nginx:1.16.1 --record \uc778\uc218\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uae30\ub85d\ud558\uace0 \ub864\ubc31\uc744 \uc218\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. kubectl rollout history deployment \ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc5d0 \ub300\ud574 \uae30\ub85d\ub41c \ubcc0\uacbd \uc0ac\ud56d\uc744 \ubcf4\uc5ec\uc900\ub2e4. kubectl rollout undo deployment <DEPLOYMENT_NAME> \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\uc0ac\ud56d\uc744 \ub864\ubc31\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c, \ud30c\ub4dc\ub97c \uc7ac\uc0dd\uc131\ud574\uc57c \ud558\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8 \ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uc989, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\uc758 \uc77c\ubd80\ub9cc \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \ubaa8\ub4e0 \ud30c\ub4dc\ub294 \ud55c \ubc88\uc5d0 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. RollingUpdateStrategy \ud504\ub85c\ud37c\ud2f0\ub97c \ud1b5\ud574 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\ub97c \uc218\ud589\ud558\ub294 \ubc29\uc2dd\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8 \ub97c \uc218\ud589\ud560 \ub54c, Max Unavailable \ud504\ub85c\ud37c\ud2f0\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\ub370\uc774\ud2b8 \uc911\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\uc758 \ucd5c\ub300 \uac1c\uc218\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 Max Surge \ud504\ub85c\ud37c\ud2f0\ub97c \uc0ac\uc6a9\ud558\uba74 \uc6d0\ud558\ub294 \ud30c\ub4dc \uc218\ubcf4\ub2e4 \ub354 \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \ud30c\ub4dc \uc218\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub864\uc544\uc6c3\uc73c\ub85c \uc778\ud574 \uace0\uac1d\uc774 \ud63c\ub780\uc5d0 \ube60\uc9c0\uc9c0 \uc54a\ub3c4\ub85d max unavailable \uc744 \uc870\uc815\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c 25%\uc758 max unavailable \uc744 \uc124\uc815\ud569\ub2c8\ub2e4. \uc989, 100\uac1c\uc758 \ud30c\ub4dc\uac00 \uc788\ub294 \uacbd\uc6b0 \ub864\uc544\uc6c3 \uc911\uc5d0 \ud65c\uc131 \uc0c1\ud0dc\ub85c \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\ub294 75\uac1c\ub9cc \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ucd5c\uc18c 80\uac1c\uc758 \ud30c\ub4dc\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc774 \ub864\uc544\uc6c3\uc73c\ub85c \uc778\ud574 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc2e0, max unavailable \uc744 20% \ub85c \uc124\uc815\ud558\uc5ec \ub864\uc544\uc6c3 \ub0b4\ub0b4 \uc791\ub3d9\ud558\ub294 \ud30c\ub4dc\uac00 80\uac1c \uc774\uc0c1 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub864\ubc31\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998 \ub9c8\ub828"},{"location":"reliability/docs/application.kr/#_10","text":"\ubcc0\uacbd\uc740 \ubcf8\uc9c8\uc801\uc73c\ub85c \uc704\ud5d8\ud558\uc9c0\ub9cc, \ucde8\uc18c\ud560 \uc218 \uc5c6\ub294 \ubcc0\uacbd\uc740 \uc7a0\uc7ac\uc801\uc73c\ub85c \uce58\uba85\uc801\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub864\ubc31 \uc744 \ud1b5\ud574 \uc2dc\uac04\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub418\ub3cc\ub9b4 \uc218 \uc788\ub294 \ubcc0\uacbd \uc808\ucc28\ub97c \uc0ac\uc6a9\ud558\uba74 \ud5a5\uc0c1\ub41c \uae30\ub2a5\uacfc \uc2e4\ud5d8\uc774 \ub354 \uc548\uc804\ud574\uc9d1\ub2c8\ub2e4. \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc2e0\uc18d\ud558\uac8c \ucca0\ud68c\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \ubc30\ud3ec \uc804\ub7b5\uc5d0\uc11c\ub294 \uc0c8 \ubc84\uc804\uc744 \uc704\ud55c \ud658\uacbd\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. \uc774 \ud658\uacbd\uc740 \uc5c5\ub370\uc774\ud2b8 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud604\uc7ac \ubc84\uc804\uacfc \ub3d9\uc77c\ud569\ub2c8\ub2e4. \uc0c8 \ud658\uacbd\uc774 \ud504\ub85c\ube44\uc804\ub418\uba74 \ud2b8\ub798\ud53d\uc774 \uc0c8 \ud658\uacbd\uc73c\ub85c \ub77c\uc6b0\ud305\ub429\ub2c8\ub2e4. \uc0c8 \ubc84\uc804\uc5d0\uc11c \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uace0 \uc6d0\ud558\ub294 \uacb0\uacfc\ub97c \uc5bb\uc744 \uacbd\uc6b0 \uc774\uc804 \ud658\uacbd\uc740 \uc885\ub8cc\ub429\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud2b8\ub798\ud53d\uc774 \uc774\uc804 \ubc84\uc804\uc73c\ub85c \ubcf5\uc6d0\ub429\ub2c8\ub2e4. \uae30\uc874 \ubc84\uc804\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc640 \ub3d9\uc77c\ud55c \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0dd\uc131\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \ube14\ub8e8/\uadf8\ub9b0 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc\uac00 \uc624\ub958 \uc5c6\uc774 \uc2e4\ud589\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud588\uc73c\uba74, \ud2b8\ub798\ud53d\uc744 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \uc11c\ube44\uc2a4\uc758 selector \uc2a4\ud399\uc744 \ubcc0\uacbd\ud558\uc5ec \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ud2b8\ub798\ud53d\uc744 \ubcf4\ub0b4\uae30 \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Flux , Jenkins , Spinnaker \uc640 \uac19\uc740 \ub9ce\uc740 \uc9c0\uc18d\uc801 \ud1b5\ud569(CI) \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ube14\ub85c\uadf8\uc5d0\ub294 Jenkins\ub97c \uc0ac\uc6a9\ud55c \ub2e8\uacc4\ubcc4 \uc124\uba85\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4: Jenkins\ub97c \uc0ac\uc6a9\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \uc81c\ub85c \ub2e4\uc6b4\ud0c0\uc784 \ubc30\ud3ec","title":"\ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec \uc0ac\uc6a9"},{"location":"reliability/docs/application.kr/#canary","text":"Canary \ubc30\ud3ec\ub294 \ube14\ub8e8/\uadf8\ub9b0 \ubc30\ud3ec\uc758 \ubcc0\ud615\uc73c\ub85c, \ubcc0\uacbd\uc73c\ub85c \uc778\ud55c \uc704\ud5d8\uc744 \ud06c\uac8c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc30\ud3ec \uc804\ub7b5\uc5d0\uc11c\ub294 \uae30\uc874 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc640 \ud568\uaed8 \ub354 \uc801\uc740 \uc218\uc758 \ud30c\ub4dc\uac00 \ud3ec\ud568\ub41c \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc0dd\uc131\ud558\uace0 \uc18c\ub7c9\uc758 \ud2b8\ub798\ud53d\uc744 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc9c0\ud45c\uc5d0\uc11c \uc0c8 \ubc84\uc804\uc774 \uae30\uc874 \ubc84\uc804\uacfc \uac19\uac70\ub098 \ub354 \ub098\uc740 \uc131\ub2a5\uc744 \ubcf4\uc778\ub2e4\uba74, \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ud5a5\ud558\ub294 \ud2b8\ub798\ud53d\uc744 \uc810\uc9c4\uc801\uc73c\ub85c \ub298\ub9ac\uba74\uc11c \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc774 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \uc804\ud658\ub420 \ub54c\uae4c\uc9c0 \uaddc\ubaa8\ub97c \ub298\ub9bd\ub2c8\ub2e4. \ub9cc\uc57d \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uba74 \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc744 \uc774\uc804 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c \ub77c\uc6b0\ud305\ud558\uace0 \uc0c8 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub85c\uc758 \ud2b8\ub798\ud53d \uc804\uc1a1\uc744 \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 canary \ubc30\ud3ec\ub97c \uc218\ud589\ud558\ub294 \uae30\ubcf8 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc9c0\ub9cc, Flagger \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c Istio \ub610\ub294 App Mesh \uc640 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.","title":"Canary \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc0ac\uc6a9\ud558\uae30"},{"location":"reliability/docs/application.kr/#_11","text":"\ubc84\uadf8\uac00 \uc5c6\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub294 \uc5c6\uc9c0\ub9cc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc624\ub958\uc758 \uc601\ud5a5\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacfc\uac70\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ucda9\ub3cc\ud558\uba74 \ub204\uad70\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc218\ub3d9\uc73c\ub85c \ub2e4\uc2dc \uc2dc\uc791\ud558\uc5ec \uc0c1\ud669\uc744 \ud574\uacb0\ud574\uc57c \ud588\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc758 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \uc0c8 \ubcf5\uc81c\ubcf8\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ube44\uc815\uc0c1 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc138 \uac00\uc9c0 \uc720\ud615\uc758 \uc0c1\ud0dc \uac80\uc0ac \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Liveness probe Startup probe (\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 1.16 \uc774\uc0c1\uc5d0\uc11c \uc9c0\uc6d0) Readiness probe \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc5d0\uc774\uc804\ud2b8\uc778 Kubelet \uc740 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \ubaa8\ub4e0 \uac80\uc0ac\ub97c \uc2e4\ud589\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uc740 \uc138 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \ud30c\ub4dc\uc758 \uc0c1\ud0dc\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubelet\uc740 \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc178 \uba85\ub839\uc744 \uc2e4\ud589\ud558\uac70\ub098, \ucee8\ud14c\uc774\ub108\uc5d0 HTTP GET \uc694\uccad\uc744 \ubcf4\ub0b4\uac70\ub098, \uc9c0\uc815\ub41c \ud3ec\ud2b8\uc5d0 TCP \uc18c\ucf13\uc744 \uc5f4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc178 \uc2a4\ud06c\ub9bd\ud2b8\ub97c \uc2e4\ud589\ud558\ub294 exec \uae30\ubc18 \ud504\ub85c\ube0c\ub97c \uc120\ud0dd\ud558\ub294 \uacbd\uc6b0, TimeoutSeconds \uac12\uc774 \ub9cc\ub8cc\ub418\uae30 \uc804\uc5d0 \uc178 \uba85\ub839\uc5b4\uac00 \uc885\ub8cc\ub418\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub178\ub4dc\uc5d0 \ub178\ub4dc \uc7a5\uc560\ub97c \uc77c\uc73c\ud0a4\ub294 <defunct> \ud504\ub85c\uc138\uc2a4\uac00 \uc0dd\uae41\ub2c8\ub2e4.","title":"\uc0c1\ud0dc \uc810\uac80 \ubc0f \uc790\uac00 \ubcf5\uad6c"},{"location":"reliability/docs/application.kr/#_12","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/application.kr/#liveness-probe","text":"Liveness probe\ub294 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d \uc2e4\ud589\ub418\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc751\ub2f5\ud558\uc9c0 \uc54a\ub294 \uad50\ucc29 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ud2b8 80\uc5d0\uc11c \uc218\uc2e0 \ub300\uae30\ud558\ub294 \uc6f9 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589 \uc911\uc778 \uacbd\uc6b0 \ud30c\ub4dc\uc758 \ud3ec\ud2b8 80\uc5d0\uc11c HTTP GET \uc694\uccad\uc744 \ubcf4\ub0b4\ub3c4\ub85d Liveness \ud504\ub85c\ube0c\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubelet\uc740 \uc8fc\uae30\uc801\uc73c\ub85c GET \uc694\uccad\uc744 \ud30c\ub4dc\uc5d0 \ubcf4\ub0b4\uace0 \uc751\ub2f5\uc744 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. \ud30c\ub4dc\uac00 200-399 \uc0ac\uc774\uc5d0\uc11c \uc751\ub2f5\ud558\uba74 kubelet\uc740 \ud30c\ub4dc\uac00 \uc815\uc0c1\uc774\ub77c\uace0 \uac04\uc8fc\ud558\uace0, \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud30c\ub4dc\ub294 \ube44\uc815\uc0c1\uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0c1\ud0dc \uccb4\ud06c\uc5d0 \uacc4\uc18d \uc2e4\ud328\ud558\uba74 kubelet\uc740 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud569\ub098\ub2e4. initialDelaySeconds \ub97c \uc0ac\uc6a9\ud558\uc5ec \uccab \ubc88\uc9f8 \ud504\ub85c\ube0c\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. Liveness Probe\ub97c \uc0ac\uc6a9\ud560 \ub54c\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ub3d9\uc2dc\uc5d0 Liveness Probe\uc5d0 \uc2e4\ud328\ud558\ub294 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uad50\uccb4\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc624\ud504\ub77c\uc778\uc73c\ub85c \uc804\ud658\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uac8c\ub2e4\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uacc4\uc18d\ud574\uc11c \uc0c8\ub85c\uc6b4 \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uc9c0\ub9cc Liveness Probe\ub3c4 \uc2e4\ud328\ud560 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubd88\ud544\uc694\ud55c \ubd80\ub2f4\uc744 \uc90d\ub2c8\ub2e4. \ud30c\ub4dc \uc678\ubd80 \uc694\uc18c(\uc608: \uc678\ubd80 \ub370\uc774\ud130\ubca0\uc774\uc2a4)\uc5d0 \uc758\uc874\ud558\ub3c4\ub85d Liveness Probe\ub97c \uad6c\uc131\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \ub2e4\uc2dc \ub9d0\ud574, \ud30c\ub4dc \uc678\ubd80 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uc751\ub2f5\ud558\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud574\uc11c \ud30c\ub4dc\uac00 Liveness Probe\uc5d0 \uc2e4\ud328\ud558\ub294 \uc77c\uc774 \uc788\uc5b4\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. Sandor Sz\u00fccs\uc758 \uac8c\uc2dc\ubb3c \ud65c\uc131 \ud504\ub85c\ube0c\ub294 \uc704\ud5d8\ud558\ub2e4 \uc5d0\uc11c\ub294 \uc798\ubabb \uad6c\uc131\ub41c \ud504\ub85c\ube0c\ub85c \uc778\ud574 \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \ubb38\uc81c\ub97c \uc124\uba85\ud569\ub2c8\ub2e4.","title":"Liveness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \ube44\uc815\uc0c1 \ud30c\ub4dc \uc81c\uac70"},{"location":"reliability/docs/application.kr/#startup-probe","text":"\uc571\uc744 \uc2dc\uc791\ud558\ub294 \ub370 \ucd94\uac00 \uc2dc\uac04\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 Startup Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec Liveness \ubc0f Readniness Probe\ub97c \uc9c0\uc5f0\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \ubd80\ud130 \ub370\uc774\ud130\ub97c \uce90\uc2f1\ud574\uc57c \ud558\ub294 Java \uc571\uc774 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 \ucd5c\ub300 2\ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc644\uc804\ud788 \uc791\ub3d9\ud558\uae30 \uc804\uae4c\uc9c0\ub294 \ubaa8\ub4e0 Liveness \ub610\ub294 Readniness Probe\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Startup Probe\ub97c \uad6c\uc131\ud558\uba74 Liveness \ub610\ub294 Readniness Probe\ub97c \uc2e4\ud589\ud558\uae30 \uc804\uc5d0 Java \uc571\uc744 \uc815\uc0c1 \uc0c1\ud0dc\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Startup Probe\uac00 \uc131\uacf5\ud560 \ub54c\uae4c\uc9c0 \ub2e4\ub978 \ubaa8\ub4e0 \ud504\ub85c\ube0c\ub294 \ube44\ud65c\uc131\ud654\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791\uc744 \uc704\ud574 \ub300\uae30\ud574\uc57c \ud558\ub294 \ucd5c\ub300 \uc2dc\uac04\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\ub300 \uad6c\uc131 \uc2dc\uac04\uc774 \uc9c0\ub09c \ud6c4\uc5d0\ub3c4 \ud30c\ub4dc\uac00 \uc5ec\uc804\ud788 \uc2a4\ud0c0\ud2b8\uc5c5 \ud504\ub85c\ube0c\uc5d0 \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\ub294 \uc885\ub8cc\ub418\uace0 \uc0c8 \ud30c\ub4dc\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4. Startup Probe\ub294 Liveness Probe\uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. \uc989, \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\uac00 \ub2e4\uc2dc \uc0dd\uc131\ub429\ub2c8\ub2e4. Ricardo A.\uac00 \uc790\uc2e0\uc758 \uae00 \ud658\uc0c1\uc801\uc778 \ud504\ub85c\ube0c \ubc0f \uad6c\uc131 \ubc29\ubc95 \uc5d0\uc11c \uc124\uba85\ud588\ub4ef\uc774, \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2dc\uc791 \uc2dc\uac04\uc744 \uc608\uce21\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub294 Startup Probe\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2dc\uc791\ud558\ub294 \ub370 10\ucd08\uac00 \uac78\ub9b0\ub2e4\ub294 \uac83\uc744 \uc54c\uace0 \uc788\ub2e4\uba74 \ub300\uc2e0 initialDelaySeconds \uc640 \ud568\uaed8 Liveness/Readiness Probe\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc2dc\uc791\ud558\ub294 \ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9ac\ub294 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 Startup Probe\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624."},{"location":"reliability/docs/application.kr/#readiness-probe","text":"Liveness probe\ub294 \ud30c\ub4dc \uc885\ub8cc(\uc989, \uc571 \uc7ac\uc2dc\uc791)\ub97c \ud1b5\ud574 \ud574\uacb0\ub418\ub294 \uc571 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\ub294 \ubc18\uba74, Readiness Probe\ub294 \uc571\uc744 temporarily \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc5d0\uc11c\ub294 \uc571\uc774 \uc77c\uc2dc\uc801\uc73c\ub85c \uc751\ub2f5\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc9c0\ub9cc \uc774 \uc791\uc5c5\uc774 \uc644\ub8cc\ub418\uba74 \ub2e4\uc2dc \uc815\uc0c1\uc774 \ub420 \uac83\uc73c\ub85c \uc608\uc0c1\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc9d1\uc911\uc801\uc778 \ub514\uc2a4\ud06c I/O \uc791\uc5c5 \uc911\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc77c\uc2dc\uc801\uc73c\ub85c \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uac83\uc740 \ud574\uacb0\ucc45\uc774 \uc544\ub2c8\uba70, \ub3d9\uc2dc\uc5d0 \ud30c\ub4dc\ub85c \uc804\uc1a1\ub41c \ucd94\uac00 \uc694\uccad\uc774 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Readiness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc571\uc758 \uc77c\uc2dc\uc801\uc778 \uac00\uc6a9\uc131 \uc911\ub2e8\uc744 \uac10\uc9c0\ud558\uace0 \ub2e4\uc2dc \uc791\ub3d9\ud560 \ub54c\uae4c\uc9c0 \ud574\ub2f9 \ud30c\ub4dc\uc5d0 \ub300\ud55c \uc694\uccad \uc804\uc1a1\uc744 \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud328\ub85c \uc778\ud574 \ud30c\ub4dc\uac00 \uc7ac\uc0dd\uc131\ub418\ub294 Liveness Probe\uc640 \ub2ec\ub9ac, Readiness Probe\uac00 \uc2e4\ud328\ud558\uba74 \ud30c\ub4dc\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\ub85c\ubd80\ud130 \uc5b4\ub5a0\ud55c \ud2b8\ub798\ud53d\ub3c4 \uc218\uc2e0\ud558\uc9c0 \uc54a\uac8c \ub429\ub2c8\ub2e4 . Readiness Probe\uac00 \uc131\uacf5\ud558\uba74 \ud30c\ub4dc\ub294 \uc11c\ube44\uc2a4\ub85c\ubd80\ud130 \ud2b8\ub798\ud53d\uc744 \ub2e4\uc2dc \uc218\uc2e0\ud569\ub2c8\ub2e4. Liveness Probe\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud30c\ub4dc \uc678\ubd80\uc758 \ub9ac\uc18c\uc2a4(\uc608: \ub370\uc774\ud130\ubca0\uc774\uc2a4)\uc5d0 \uc758\uc874\ud558\ub294 Readiness Probe\ub97c \uad6c\uc131\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \ub2e4\uc74c\uc740 \uc798\ubabb \uad6c\uc131\ub41c Readiness\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\uc785\ub2c8\ub2e4. \uc571\uc758 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc5c6\uc744 \ub54c \ud30c\ub4dc\uc758 Readiness Probe\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uba74 \ub2e4\ub978 \ud30c\ub4dc \ubcf5\uc81c\ubcf8\ub3c4 \ub3d9\uc77c\ud55c \uc0c1\ud0dc \uc810\uac80 \uae30\uc900\uc744 \uacf5\uc720\ud558\ubbc0\ub85c \ub3d9\uc2dc\uc5d0 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc29\uc2dd\uc73c\ub85c \ud504\ub85c\ube0c\ub97c \uc124\uc815\ud558\uba74 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc744 \ub54c\ub9c8\ub2e4 \ud30c\ub4dc\uc758 Readiness Probe\uac00 \uc2e4\ud328\ud558\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 all \ud30c\ub4dc\ub85c \ud2b8\ub798\ud53d \uc804\uc1a1\uc744 \uc911\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Readiness Probes \uc0ac\uc6a9\uc758 \ubd80\uc791\uc6a9\uc740 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ub298\ub9b4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. Readiness Probe\uac00 \uc131\uacf5\ud558\uc9c0 \uc54a\ub294 \ud55c \uc0c8 \ubcf5\uc81c\ubcf8\uc740 \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub54c\uae4c\uc9c0\ub294 \uae30\uc874 \ubcf5\uc81c\ubcf8\uc774 \uacc4\uc18d\ud574\uc11c \ud2b8\ub798\ud53d\uc744 \uc218\uc2e0\ud558\uac8c \ub429\ub2c8\ub2e4.","title":"Readiness Probe\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd80\ubd84\uc801\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc0c1\ud0dc\ub97c \uac10\uc9c0\ud558\uc138\uc694"},{"location":"reliability/docs/application.kr/#_13","text":"\ud30c\ub4dc\uc758 \uc218\uba85\uc740 \uc720\ud55c\ud569\ub2c8\ub2e4. - \ud30c\ub4dc\ub97c \uc624\ub798 \uc2e4\ud589\ud558\ub354\ub77c\ub3c4 \ub54c\uac00 \ub418\uba74 \ud30c\ub4dc\uac00 \uc62c\ubc14\ub974\uac8c \uc885\ub8cc\ub418\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \ud604\uba85\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0dd\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc73c\uba70, \uc774 \uacbd\uc6b0 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uc0c8 \ub178\ub4dc\uc5d0\uc11c \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc801\uc808\ud55c \uc885\ub8cc \ucc98\ub9ac \ubc0f \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0\uc744 \ub9c8\ub828\ud558\uba74 \ud30c\ub4dc\uac00 \uc774\uc804 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub418\uace0 \uc0c8 \ub178\ub4dc\uc5d0\uc11c \uc7ac\uc0dd\uc131\ub420 \ub54c \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ub9cc\ub4e4\uace0 \uae30\uc874 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\uae30 \uc804\uc5d0 \uba3c\uc800 \uc6cc\ucee4 \ub178\ub4dc\ub97c drain \ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uac00 \ube44\uc6cc\uc9c0\uba74 \ud574\ub2f9 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc548\uc804\ud558\uac8c \uc81c\uac70\ub429\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uac00\uc7a5 \uc911\uc694\ud55c \ub2e8\uc5b4\ub294 \uc548\uc804\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\uac00 \uc81c\uac70\ub418\uba74 \ub2e8\uc21c\ud788 SIGKILL \uc2dc\uadf8\ub110\uc774 \uc804\uc1a1\ub418\ub294 \uac83\uc774 \uc544\ub2d9\ub2c8\ub2e4. \ub300\uc2e0, SIGTERM \uc2e0\ud638\uac00 \uc81c\uac70\ub418\ub294 \ud30c\ub4dc\uc5d0 \uc788\ub294 \uac01 \ucee8\ud14c\uc774\ub108\uc758 \uba54\uc778 \ud504\ub85c\uc138\uc2a4(PID 1)\ub85c \ubcf4\ub0b4\uc9c4\ub2e4. SIGTERM \uc2e0\ud638\uac00 \uc804\uc1a1\ub41c \ud6c4, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud504\ub85c\uc138\uc2a4\uc5d0 SIGKILL \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30\uae4c\uc9c0 \uc77c\uc815 \uc2dc\uac04(\uc720\uc608 \uae30\uac04)\uc744 \uc90d\ub2c8\ub2e4. \uc774 \uc720\uc608 \uae30\uac04\uc740 \uae30\ubcf8\uc801\uc73c\ub85c 30\ucd08\uc785\ub2c8\ub2e4. kubectl\uc5d0\uc11c grace-period \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8\uac12\uc744 \uc7ac\uc815\uc758\ud558\uac70\ub098 Podspec\uc5d0\uc11c terminationGracePeriodSeconds \ub97c \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl delete pod <pod name> \u2014grace-period=<seconds> \uba54\uc778 \ud504\ub85c\uc138\uc2a4\uc5d0 PID 1\uc774 \uc5c6\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 Python \uae30\ubc18 \uc0d8\ud50c \ucee8\ud14c\uc774\ub108\ub97c \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. $ kubectl exec python-app -it ps PID USER TIME COMMAND 1 root 0:00 {script.sh} /bin/sh ./script.sh 5 root 0:00 python app.py \uc774 \uc608\uc81c\uc5d0\uc11c \uc178 \uc2a4\ud06c\ub9bd\ud2b8\ub294 SIGTERM \uc744 \uc218\uc2e0\ud558\ub294\ub370, \uc774 \uc608\uc81c\uc758 \uba54\uc778 \ud504\ub85c\uc138\uc2a4\ub294 \ud30c\uc774\uc36c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc774\uc9c0\ub9cc SIGTERM \uc2e0\ud638\ub97c \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uba74, \ud30c\uc774\uc36c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac11\uc790\uae30 \uc885\ub8cc\ub429\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 \ucee8\ud14c\uc774\ub108\uc758 ENTRYPOINT \ub97c \ubcc0\uacbd\ud558\uc5ec \ud30c\uc774\uc36c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud568\uc73c\ub85c\uc368 \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 dumb-init \uacfc \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2e0\ud638\ub97c \ucc98\ub9ac\ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ud6c4\ud06c \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc2dc\uc791 \ub610\ub294 \uc911\uc9c0 \uc2dc \uc2a4\ud06c\ub9bd\ud2b8 \ub610\ub294 HTTP \uc694\uccad\uc744 \uc2e4\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Prestop \ud6c4\ud06c \uc561\uc158\uc740 \ucee8\ud14c\uc774\ub108\uac00 SIGTERM \uc2e0\ud638\ub97c \uc218\uc2e0\ud558\uae30 \uc804\uc5d0 \uc2e4\ud589\ub418\uba70 \uc774 \uc2e0\ud638\uac00 \uc804\uc1a1\ub418\uae30 \uc804\uc5d0 \uc644\ub8cc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. terminationGracePeriodSeconds \uac12\uc740 SIGTERM \uc2e0\ud638\uac00 \uc804\uc1a1\ub420 \ub54c\uac00 \uc544\ub2c8\ub77c PreStop \ud6c4\ud06c \uc561\uc158\uc774 \uc2e4\ud589\ub418\uae30 \uc2dc\uc791\ud560 \ub54c\ubd80\ud130 \uc801\uc6a9\ub429\ub2c8\ub2e4.","title":"\uc7a5\uc560 \ucc98\ub9ac"},{"location":"reliability/docs/application.kr/#_14","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/application.kr/#pod-disruption-budget","text":"Pod Disruption Budget \ub610\ub294 PDB\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc81c\ubcf8 \uc218\uac00 \uc120\uc5b8\ub41c \uc784\uacc4\uac12 \uc544\ub798\ub85c \ub5a8\uc5b4\uc9c0\uba74 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\ub97c \uc77c\uc2dc\uc801\uc73c\ub85c \uc911\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubcf5\uc81c\ubcf8 \uc218\uac00 \uc784\uacc4\uac12\uc744 \ucd08\uacfc\ud558\uba74 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\uac00 \uacc4\uc18d\ub429\ub2c8\ub2e4. PDB\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubcf5\uc81c\ubcf8\uc758 minAvailable \ubc0f maxUnavailable \uc218\ub97c \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc571 \ubcf5\uc81c\ubcf8\uc744 3\uac1c \uc774\uc0c1 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud558\ub824\uba74 PDB\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: my-svc-pdb spec: minAvailable: 3 selector: matchLabels: app: my-svc \uc704\uc758 PDB \uc815\ucc45\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uac8c 3\uac1c \uc774\uc0c1\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc744 \ub54c\uae4c\uc9c0 \uc81c\uac70 \ud504\ub85c\uc138\uc2a4\ub97c \uc911\ub2e8\ud558\ub3c4\ub85d \uc9c0\uc2dc\ud569\ub2c8\ub2e4. \ub178\ub4dc \ub4dc\ub808\uc774\ub2dd\uc740 PodDisruptionBudgets \uc744 \uace0\ub824\ud569\ub2c8\ub2e4. EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc5c5\uadf8\ub808\uc774\ub4dc \uc911\uc5d0\ub294 15\ubd84 \ud0c0\uc784\uc544\uc6c3\uc73c\ub85c \ub178\ub4dc\uac00 \uace0\uac08\ub429\ub2c8\ub2e4 . 15\ubd84 \ud6c4 \uc5c5\ub370\uc774\ud2b8\ub97c \uac15\uc81c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc73c\uba74(EKS \ucf58\uc194\uc5d0\uc11c\ub294 \ub864\ub9c1 \uc5c5\ub370\uc774\ud2b8\ub77c\uace0 \ud568) \uc5c5\ub370\uc774\ud2b8\uac00 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8\ub97c \uac15\uc81c\ub85c \uc801\uc6a9\ud558\uba74 \ud30c\ub4dc\uac00 \uc0ad\uc81c\ub429\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 \uacbd\uc6b0 AWS Node Termination Handler \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 EC2 \uc720\uc9c0 \uad00\ub9ac \uc774\ubca4\ud2b8 \ubc0f EC2 \uc2a4\ud31f \uc911\ub2e8 \ub4f1 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\ub294 \uc774\ubca4\ud2b8\uc5d0 \uc801\uc808\ud558\uac8c \ub300\uc751\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ube44\uc6b0\uace0 \uc0c8 \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud55c \ub2e4\uc74c, \ud30c\ub4dc\ub97c \ub4dc\ub808\uc774\ub2dd\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \ud30c\ub4dc\ub97c \uc885\ub8cc\ud55c\ub2e4. \ud30c\ub4dc anti-affinity\ub97c \uc0ac\uc6a9\ud574 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc\ub97c \ub2e4\ub978 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ud558\uace0 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \uc911 PDB \uad00\ub828 \uc9c0\uc5f0\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Pod Disruption Budget\uc73c\ub85c \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud558\uc138\uc694"},{"location":"reliability/docs/application.kr/#_15","text":"\uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1\uc740 \ud504\ub85c\ub355\uc158\uc5d0\uc11c\uc758 \uaca9\ub82c\ud55c \uc870\uac74\uc744 \uacac\ub51c \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc758 \uc131\ub2a5\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ub97c \uad6c\ucd95\ud558\uae30 \uc704\ud574 \ubd84\uc0b0 \uc2dc\uc2a4\ud15c\uc744 \uc2e4\ud5d8\ud558\ub294 \ubd84\uc57c\uc785\ub2c8\ub2e4. Dominik Tornow\ub294 \uc790\uc2e0\uc758 \ube14\ub85c\uadf8 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc120\uc5b8\uc801 \uc2dc\uc2a4\ud15c \uc5d0\uc11c \u201c \uc0ac\uc6a9\uc790\uac00 \uc6d0\ud558\ub294 \uc2dc\uc2a4\ud15c \uc0c1\ud0dc\ub97c \uc2dc\uc2a4\ud15c\uc5d0 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc2dc\uc2a4\ud15c\uc740 \ud604\uc7ac \uc0c1\ud0dc\uc640 \uc6d0\ud558\ub294 \uc0c1\ud0dc\ub97c \uace0\ub824\ud558\uc5ec \ud604\uc7ac \uc0c1\ud0dc\uc5d0\uc11c \uc6d0\ud558\ub294 \uc0c1\ud0dc\ub85c \uc804\ud658\ud558\uae30 \uc704\ud55c \uba85\ub839 \uc21c\uc11c\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \u201d\ub77c\uace0 \uc124\uba85\ud569\ub2c8\ub2e4. \uc989, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud56d\uc0c1 \uc6d0\ud558\ub294 \uc0c1\ud0dc \ub97c \uc800\uc7a5\ud558\uace0 \uc2dc\uc2a4\ud15c\uc774 \uc774\ub97c \ubc97\uc5b4\ub098\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc0c1\ud0dc\ub97c \ubcf5\uc6d0\ud558\uae30 \uc704\ud55c \uc870\uce58\ub97c \ucde8\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub418\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud30c\ub4dc\ub97c \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\ub85c \ub2e4\uc2dc \uc2a4\ucf00\uc904\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c, replica \uac00 \ucda9\ub3cc\ud558\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \ucee8\ud2b8\ub864\ub7ec \uac00 \uc0c8 replica \ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7f0 \ubc29\uc2dd\uc73c\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc7a5\uc560\ub97c \uc790\ub3d9\uc73c\ub85c \uc218\uc815\ud569\ub2c8\ub2e4. Gremlin \uacfc \uac19\uc740 \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf5\uc6d0\ub825\uc744 \ud14c\uc2a4\ud2b8\ud558\uace0 \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130(\ubc0f \uadf8 \uc774\uc0c1)\uc5d0 \uc778\uc704\uc801\uc778 \ud63c\ub3c8\uc744 \uc720\ubc1c\ud558\ub294 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc2dc\uc2a4\ud15c \uc57d\uc810\uc744 \ubc1c\uacac\ud558\uace0 \ubcd1\ubaa9 \ud604\uc0c1\uacfc \uc798\ubabb\ub41c \uad6c\uc131\uc744 \uc2dd\ubcc4\ud558\uba70 \ud1b5\uc81c\ub41c \ud658\uacbd\uc5d0\uc11c \ubb38\uc81c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ucca0\ud559\uc740 \uc758\ub3c4\uc801\uc73c\ub85c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uace0 \uc778\ud504\ub77c\uc5d0 \uc2a4\ud2b8\ub808\uc2a4\ub97c \uc8fc\uc5b4 \uc608\uc0c1\uce58 \ubabb\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc744 \ucd5c\uc18c\ud654\ud558\ub294 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4.","title":"\uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \uc5f0\uc2b5"},{"location":"reliability/docs/application.kr/#_16","text":"\uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc6d0\ub825\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub294 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \uac00\ub2a5\ud558\uac8c \ud558\uace0 \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4 \ub124\ud2b8\uc6cc\ud06c\uc758 \uac00\uc2dc\uc131\uc744 \ub192\uc785\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uc11c\ube44\uc2a4 \uba54\uc2dc \uc81c\ud488\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uac00\ub85c\ucc44\uace0 \uac80\uc0ac\ud558\ub294 \uc18c\uaddc\ubaa8 \ub124\ud2b8\uc6cc\ud06c \ud504\ub85d\uc2dc\ub97c \uac01 \uc11c\ube44\uc2a4\uc640 \ud568\uaed8 \uc2e4\ud589\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uba54\uc2dc\uc5d0 \ubc30\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \ud504\ub85d\uc2dc\uc5d0 \ub0b4\uc7a5\ub41c \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ud1b5\uacc4\ub97c \uc0dd\uc131\ud558\uace0, \uc561\uc138\uc2a4 \ub85c\uadf8\ub97c \uc0dd\uc131\ud558\uace0, \ubd84\uc0b0 \ucd94\uc801\uc744 \uc704\ud55c \uc544\uc6c3\ubc14\uc6b4\ub4dc \uc694\uccad\uc5d0 HTTP \ud5e4\ub354\ub97c \ucd94\uac00\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc790\ub3d9 \uc694\uccad \uc7ac\uc2dc\ub3c4, \uc81c\ud55c \uc2dc\uac04, \ud68c\ub85c \ucc28\ub2e8, \uc18d\ub3c4 \uc81c\ud55c\uacfc \uac19\uc740 \uae30\ub2a5\uc744 \ud1b5\ud574 \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4\uc758 \ubcf5\uc6d0\ub825\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc6b4\uc601\ud558\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uac04 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc11c\ube44\uc2a4 \uba54\uc2dc \uc0ac\uc6a9"},{"location":"reliability/docs/application.kr/#_17","text":"AWS App Mesh Istio LinkerD Consul","title":"\uc11c\ube44\uc2a4 \uba54\uc2dc"},{"location":"reliability/docs/application.kr/#observability","text":"Observability\ub294 \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45, \ucd94\uc801\uc744 \ud3ec\ud568\ud558\ub294 \ud3ec\uad04\uc801\uc778 \uc6a9\uc5b4\uc785\ub2c8\ub2e4. \ub9c8\uc774\ud06c\ub85c\uc11c\ube44\uc2a4 \uae30\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ubc30\ud3ec\ub429\ub2c8\ub2e4. \ub2e8\uc77c \uc2dc\uc2a4\ud15c\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc73c\ub85c \ucda9\ubd84\ud55c \ubaa8\ub180\ub9ac\uc2dd \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub2ec\ub9ac \ubd84\uc0b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc544\ud0a4\ud14d\ucc98\uc5d0\uc11c\ub294 \uac01 \uad6c\uc131 \uc694\uc18c\uc758 \uc131\ub2a5\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc218\uc900 \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45 \ubc0f \ubd84\uc0b0 \ucd94\uc801 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uace0\uac1d\uc774 \uc911\ub2e8\ub418\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc758 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb38\uc81c \ud574\uacb0 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc704\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub0b4\uc7a5 \ub3c4\uad6c\ub294 \uc81c\ud55c\uc801\uc785\ub2c8\ub2e4. \uba54\ud2b8\ub9ad \uc11c\ubc84\ub294 \ub9ac\uc18c\uc2a4 \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud558\uc5ec \uba54\ubaa8\ub9ac\uc5d0 \uc800\uc7a5\ud558\uc9c0\ub9cc \uc720\uc9c0\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud30c\ub4dc\uc758 \ub85c\uadf8\ub97c \ubcfc \uc218 \uc788\uc9c0\ub9cc, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub85c\uadf8\ub97c \uc790\ub3d9\uc73c\ub85c \ubcf4\uad00\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \ubd84\uc0b0 \ucd94\uc801 \uad6c\ud604\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ub610\ub294 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\ud589\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ud655\uc7a5\uc131\uc740 \uc5ec\uae30\uc11c \ube5b\uc744 \ubc1c\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc120\ud638\ud558\ub294 \uc911\uc559 \uc9d1\uc911\uc2dd \ubaa8\ub2c8\ud130\ub9c1, \ub85c\uae45 \ubc0f \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uac00\uc838\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Observability"},{"location":"reliability/docs/application.kr/#_18","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/application.kr/#_19","text":"\ucd5c\uc2e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud558\ub294 \uc9c0\ud45c\uc758 \uc218\ub294 \uacc4\uc18d \uc99d\uac00\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ucd94\uc801\ud558\uba74 \uace0\uac1d\uc758 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294\ub370 \uc9d1\uc911\ud560 \uc218 \uc788\uc5b4 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. Prometheus \ub610\ub294 CloudWatch Container Insights \uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\ubc18\uc758 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub294 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \ub54c \ub610\ub294 \uac00\uae09\uc801\uc774\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uae30 \uc804\uc5d0 \uc2e0\ud638\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc6b4\uc601 \ud300\uc774 \uad6c\ub3c5\ud560 \uc218 \uc788\ub294 \uc54c\ub9bc\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc545\ud654 \uc2dc \uac00\ub3d9 \uc911\ub2e8\uc73c\ub85c \uc774\uc5b4\uc9c0\uac70\ub098 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud574 \uacbd\ubcf4\ub97c \ud65c\uc131\ud654\ud558\ub294 \uaddc\uce59\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc5b4\ub5a4 \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud560\uc9c0 \uc798 \ubaa8\ub974\uaca0\ub2e4\uba74 \ub2e4\uc74c \ubc29\ubc95\uc5d0\uc11c \uc601\uac10\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RED method . \uc694\uccad, \uc624\ub958, \uae30\uac04\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. USE method . \uc0ac\uc6a9\ub960, \ud3ec\ud654\ub3c4, \uc624\ub958\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. Sysdig\uc758 \uac8c\uc2dc\ubb3c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc54c\ub9bc \ubaa8\ubc94 \uc0ac\ub840 \uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c\uc758 \ud3ec\uad04\uc801\uc778 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubaa8\ub2c8\ud130\ub9c1"},{"location":"reliability/docs/application.kr/#_20","text":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \ud45c\uc900 \uba54\ud2b8\ub9ad\uc744 \uc9d1\uacc4\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ubcc4 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uba54\ud2b8\ub9ad\uc744 \uacf5\uac1c\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc2dc\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud074\ub77c\uc774\uc5b8\ud2b8 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uba54\ud2b8\ub9ad\uc744 \uacf5\uac1c\ud558\uc138\uc694"},{"location":"reliability/docs/application.kr/#_21","text":"EKS \ub85c\uae45\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uc758 \ub450 \uac00\uc9c0 \ubc94\uc8fc\uc5d0 \uc18d\ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uac10\uc0ac \ubc0f \uc9c4\ub2e8 \ub85c\uadf8\ub97c \uacc4\uc815\uc758 CloudWatch Logs\ub85c \uc9c1\uc811 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc0dd\uc131\ub418\ub294 \ub85c\uadf8\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uc5d0\ub294 \ube44\uc988\ub2c8\uc2a4 \ub85c\uc9c1 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\ub294 \ud30c\ub4dc\uc640 CoreDNS, Cluster Autoscaler, Prometheus \ub4f1\uacfc \uac19\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2dc\uc2a4\ud15c \ucef4\ud3ec\ub10c\ud2b8\uc5d0\uc11c \uc0dd\uc131\ub41c \ub85c\uadf8\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. EKS\ub294 \ub2e4\uc12f \uac00\uc9c0 \uc720\ud615\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. : \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uad6c\uc131 \uc694\uc18c \ub85c\uadf8 \uac10\uc0ac \uc778\uc99d\uc790(Authenticator) \ucee8\ud2b8\ub864\ub7ec \ub9e4\ub2c8\uc800 \uc2a4\ucf00\uc904\ub7ec \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec \ub85c\uadf8\ub294 \ubcd1\ubaa9 \ud604\uc0c1 \ubc0f \uc624\ub958\uc640 \uac19\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubb38\uc81c\ub97c \uc9c4\ub2e8\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\ub294 CloudWatch Logs\ub85c \uc804\uc1a1\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45\uc744 \ud65c\uc131\ud654\ud558\uace0 \uacc4\uc815\uc758 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ucea1\ucc98\ud558\ub824\ub294 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8\uc758 \uc720\ud615\uc744 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 Fluent Bit , Fluentd \ub610\ub294 CloudWatch Container Insights \uc640 \uac19\uc740 \ub85c\uadf8 \uc218\uc9d1 \ub3c4\uad6c\ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub85c\uadf8 \uc560\uadf8\ub9ac\uac8c\uc774\ud130 \ub3c4\uad6c\ub294 \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ub418\uba70 \ub178\ub4dc\uc758 \ucee8\ud14c\uc774\ub108 \ub85c\uadf8\ub97c \uc2a4\ud06c\ub7a9\ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\uac00 \uc911\uc559 \uc9d1\uc911\uc2dd \ub300\uc0c1\uc73c\ub85c \uc804\uc1a1\ub418\uc5b4 \uc800\uc7a5\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 CloudWatch \ucee8\ud14c\uc774\ub108 \uc778\uc0ac\uc774\ud2b8\ub294 Fluent Bit \ub610\ub294 Fluentd\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \uc774\ub97c CloudWatch Logs\ub85c \uc804\uc1a1\ud558\uc5ec \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fluent Bit\uacfc Fluentd\ub294 Elasticsearch \ubc0f InfluxDB\uc640 \uac19\uc740 \ub110\ub9ac \uc0ac\uc6a9\ub418\ub294 \uc5ec\ub7ec \ub85c\uadf8 \ubd84\uc11d \uc2dc\uc2a4\ud15c\uc744 \uc9c0\uc6d0\ud558\ubbc0\ub85c Fluent Bit \ub610\ub294 Fluentd\uc758 \ub85c\uadf8 \uad6c\uc131\uc744 \uc218\uc815\ud558\uc5ec \ub85c\uadf8\uc758 \uc2a4\ud1a0\ub9ac\uc9c0 \ubc31\uc5d4\ub4dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc911\uc559 \uc9d1\uc911\uc2dd \ub85c\uae45 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \uc720\uc9c0\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/application.kr/#_22","text":"\uc77c\ubc18\uc801\uc778 \ucd5c\uc2e0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\ub294 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \uad6c\uc131 \uc694\uc18c\uac00 \ubd84\uc0b0\ub418\uc5b4 \uc788\uc73c\uba70 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uad6c\uc131\ud558\ub294 \uac01 \uad6c\uc131 \uc694\uc18c\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub294\uc9c0\uc5d0 \ub530\ub77c \uc2e0\ub8b0\uc131\uc774 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ubd84\uc0b0 \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc694\uccad\uc758 \ud750\ub984\uacfc \uc2dc\uc2a4\ud15c\uc774 \ud1b5\uc2e0\ud558\ub294 \ubc29\uc2dd\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uc801\uc744 \ud1b5\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uc704\uce58\ub97c \ud30c\uc545\ud558\uace0 \uc5f0\uc1c4\uc801 \uc7a5\uc560\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \ubb38\uc81c\ub97c \uc608\ubc29\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucd94\uc801\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ubd84\uc0b0 \ucd94\uc801\uc744 \uad6c\ud604\ud558\uac70\ub098 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc218\uc900\uc5d0\uc11c \ucd94\uc801\uc744 \uad6c\ud604\ud558\ub294 \uac83\uc740 \ubd88\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uba54\uc11c\ub4dc\uc5d0\uc11c\ub294 \ucf54\ub4dc\ub97c \ubcc0\uacbd\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uad6d\uc5b4 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \ub354 \ubcf5\uc7a1\ud569\ub2c8\ub2e4. \ub610\ud55c \uc11c\ube44\uc2a4 \uc804\uccb4\uc5d0 \uac78\uccd0 \ub610 \ub2e4\ub978 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc720\uc9c0 \uad00\ub9ac\ud560 \ucc45\uc784\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. LinkerD , Istio , AWS App Mesh \uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\ub97c \ucd5c\uc18c\ud55c\uc73c\ub85c \ubcc0\uacbd\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubd84\uc0b0 \ucd94\uc801\uc744 \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\ud45c \uc0dd\uc131, \ub85c\uae45 \ubc0f \ucd94\uc801\uc744 \ud45c\uc900\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS X-Ray , Jaeger \uc640 \uac19\uc740 \ucd94\uc801 \ub3c4\uad6c\ub294 \uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc640 \uc11c\ube44\uc2a4 \uba54\uc2dc \uad6c\ud604\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. (\uacf5\uc720 \ub77c\uc774\ube0c\ub7ec\ub9ac \ubc0f \uc11c\ube44\uc2a4 \uba54\uc2dc) \uad6c\ud604\uc744 \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub294 AWS X-Ray \ub610\ub294 Jaeger \uc640 \uac19\uc740 \ucd94\uc801 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc2ee\uc2dc\uc624. \uadf8\ub7ec\uba74 \ub098\uc911\uc5d0 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \ucc44\ud0dd\ud560 \ub54c \ub3c4\uad6c\ub97c \uc804\ud658\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub429\ub2c8\ub2e4.","title":"\ubd84\uc0b0 \ucd94\uc801 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624."},{"location":"reliability/docs/application/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Running highly-available applications \u00b6 Your customers expect your application to be always available, including when you're making changes and especially during spikes in traffic. A scalable and resilient architecture keeps your applications and services running without disruptions, which keeps your users happy. A scalable infrastructure grows and shrinks based on the needs of the business. Eliminating single points of failure is a critical step towards improving an application\u2019s availability and making it resilient. With Kubernetes, you can operate your applications and run them in a highly-available and resilient fashion. Its declarative management ensures that once you\u2019ve set up the application, Kubernetes will continuously try to match the current state with the desired state . Recommendations \u00b6 Avoid running singleton Pods \u00b6 If your entire application runs in a single Pod, then your application will be unavailable if that Pod gets terminated. Instead of deploying applications using individual pods, create Deployments . If a Pod that is created by a Deployment fails or gets terminated, the Deployment controller will start a new pod to ensure the specified number of replica Pods are always running. Run multiple replicas \u00b6 Running multiple replicas Pods of an app using a Deployment helps it run in a highly-available manner. If one replica fails, the remaining replicas will still function, albeit at reduced capacity until Kubernetes creates another Pod to make up for the loss. Furthermore, you can use the Horizontal Pod Autoscaler to scale replicas automatically based on workload demand. Schedule replicas across nodes \u00b6 Running multiple replicas won\u2019t be very useful if all the replicas are running on the same node, and the node becomes unavailable. Consider using pod anti-affinity or pod topology spread constraints to spread replicas of a Deployment across multiple worker nodes. You can further improve a typical application\u2019s reliability by running it across multiple AZs. Using Pod anti-affinity rules \u00b6 The manifest below tells Kubernetes scheduler to prefer to place pods on separate nodes and AZs. It doesn\u2019t require distinct nodes or AZ because if it did, then Kubernetes will not be able to schedule any pods once there is a pod running in each AZ. If your application requires just three replicas, you can use requiredDuringSchedulingIgnoredDuringExecution for topologyKey: topology.kubernetes.io/zone , and Kubernetes scheduler will not schedule two pods in the same AZ. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: topology.kubernetes.io/zone weight: 100 - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: kubernetes.io/hostname weight: 99 containers: - name: web-app image: nginx:1.16-alpine Using Pod topology spread constraints \u00b6 Similar to pod anti-affinity rules, pod topology spread constraints allow you to make your application available across different failure (or topology) domains like hosts or AZs. This approach works very well when you're trying to ensure fault tolerance as well as availability by having multiple replicas in each of the different topology domains. Pod anti-affinity rules, on the other hand, can easily produce a result where you have a single replica in a topology domain because the pods with an anti-affinity toward each other have a repelling effect. In such cases, a single replica on a dedicated node isn't ideal for fault tolerance nor is it a good use of resources. With topology spread constraints, you have more control over the spread or distribution that the scheduler should try to apply across the topology domains. Here are some important properties to use in this approach: 1. The maxSkew is used to control or determine the maximum point to which things can be uneven across the topology domains. For example, if an application has 10 replicas and is deployed across 3 AZs, you can't get an even spread, but you can influence how uneven the distribution will be. In this case, the maxSkew can be anything between 1 and 10. A value of 1 means you can potentially end up with a spread like 4,3,3 , 3,4,3 or 3,3,4 across the 3 AZs. In contrast, a value of 10 means you can potentially end up with a spread like 10,0,0 , 0,10,0 or 0,0,10 across 3 AZs. 2. The topologyKey is a key for one of the node labels and defines the type of topology domain that should be used for the pod distribution. For example, a zonal spread would have the following key-value pair: topologyKey: \"topology.kubernetes.io/zone\" 3. The whenUnsatisfiable property is used to determine how you want the scheduler to respond if the desired constraints can't be satisfied. 4. The labelSelector is used to find matching pods so that the scheduler can be aware of them when deciding where to place pods in accordance with the constraints that you specify. In addition to these above, there are other fields that you can read about further in the Kubernetes documentation . apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 10 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: app: express-test containers: - name: web-app image: nginx:1.16-alpine Run Kubernetes Metrics Server \u00b6 Install the Kubernetes metrics server to help scale your applications. Kubernetes autoscaler add-ons like HPA and VPA need to track metrics of applications to scale them. The metrics-server collects resource metrics that can be used to make scaling decisions. The metrics are collected from kubelets and served in Metrics API format . The metrics server doesn\u2019t retain any data, and it\u2019s not a monitoring solution. Its purpose is to expose CPU and memory usage metrics to other systems. If you want to track your application's state over time, you need a monitoring tool like Prometheus or Amazon CloudWatch. Follow the EKS documentation to install metrics-server in your EKS cluster. Horizontal Pod Autoscaler (HPA) \u00b6 HPA can automatically scale your application in response to demand and help you avoid impacting your customers during peak traffic. It is implemented as a control loop in Kubernetes that periodically queries metrics from APIs that provide resource metrics. HPA can retrieve metrics from the following APIs: 1. metrics.k8s.io also known as Resource Metrics API \u2014 Provides CPU and memory usage for pods 2. custom.metrics.k8s.io \u2014 Provides metrics from other metric collectors like Prometheus; these metrics are internal to your Kubernetes cluster. 3. external.metrics.k8s.io \u2014 Provides metrics that are external to your Kubernetes cluster (E.g., SQS Queue Depth, ELB latency). You must use one of these three APIs to provide the metric to scale your application. Scaling applications based on custom or external metrics \u00b6 You can use custom or external metrics to scale your application on metrics other than CPU or memory utilization. Custom Metrics API servers provide the custom-metrics.k8s.io API that HPA can use to autoscale applications. You can use the Prometheus Adapter for Kubernetes Metrics APIs to collect metrics from Prometheus and use with the HPA. In this case, Prometheus adapter will expose Prometheus metrics in Metrics API format . A list of all custom metrics implementation can be found in Kubernetes Documentation . Once you deploy the Prometheus Adapter, you can query custom metrics using kubectl. kubectl get \u2014raw /apis/custom.metrics.k8s.io/v1beta1/ External metrics , as the name suggests, provide the Horizontal Pod Autoscaler the ability to scale deployments using metrics that are external to the Kubernetes cluster. For example, in batch processing workloads, it is common to scale the number of replicas based on the number of jobs in flight in an SQS queue. To autoscale a Deployment using a CloudWatch metric, for example, scaling a batch-processor application based on SQS queue depth , you can use k8s-cloudwatch-adapter . k8s-cloudwatch-adapter is a community project and not maintained by AWS. Vertical Pod Autoscaler (VPA) \u00b6 VPA automatically adjusts the CPU and memory reservation for your Pods to help you \u201cright-size\u201d your applications. For applications that need to be scaled vertically - which is done by increasing resource allocation - you can use VPA to automatically scale Pod replicas or provide scaling recommendations. Your application may become temporarily unavailable if VPA needs to scale it because VPA\u2019s current implementation does not perform in-place adjustments to Pods; instead, it will recreate the Pod that needs to be scaled. EKS Documentation includes a walkthrough for setting up VPA. Fairwinds Goldilocks project provides a dashboard to visualize VPA recommendations for CPU and memory requests and limits. Its VPA update mode allows you to auto-scale Pods based on VPA recommendations. Updating applications \u00b6 Modern applications require rapid innovation with a high degree of stability and availability. Kubernetes gives you the tools to update your applications continuously without disrupting your customers. Let\u2019s look at some of the best practices that make it possible to quickly deploy changes without sacrificing availability. Have a mechanism to perform rollbacks \u00b6 Having an undo button can evade disasters. It is a best practice to test deployments in a separate lower environment (test or development environment) before updating the production cluster. Using a CI/CD pipeline can help you automate and test deployments. With a continuous deployment pipeline, you can quickly revert to the older version if the upgrade happens to be defective. You can use Deployments to update a running application. This is typically done by updating the container image. You can use kubectl to update a Deployment like this: kubectl --record deployment.apps/nginx-deployment set image nginx-deployment nginx = nginx:1.16.1 The --record argument record the changes to the Deployment and helps you if you need to perform a rollback. kubectl rollout history deployment shows you the recorded changes to Deployments in your cluster. You can rollback a change using kubectl rollout undo deployment <DEPLOYMENT_NAME> . By default, when you update a Deployment that requires a recreation of pods, Deployment will perform a rolling update . In other words, Kubernetes will only update a portion of the running pods in a Deployment and not all the Pods at once. You can control how Kubernetes performs rolling updates through RollingUpdateStrategy property. When performing a rolling update of a Deployment, you can use the Max Unavailable property to specify the maximum number of Pods that can be unavailable during the update. The Max Surge property of Deployment allows you to set the maximum number of Pods that can be created over the desired number of Pods. Consider adjusting max unavailable to ensure that a rollout doesn\u2019t disrupt your customers. For example, Kubernetes sets 25% max unavailable by default, which means if you have 100 Pods, you may have only 75 Pods actively working during a rollout. If your application needs a minimum of 80 Pods, this rollout can be disruptive. Instead, you can set max unavailable to 20% to ensure that there are at least 80 functional Pods throughout the rollout. Use blue/green deployments \u00b6 Changes are inherently risky, but changes that cannot be undone can be potentially catastrophic. Change procedures that allow you to effectively turn back time through a rollback make enhancements and experimentation safer. Blue/green deployments give you a method to quickly retract the changes if things go wrong. In this deployment strategy, you create an environment for the new version. This environment is identical to the current version of the application being updated. Once the new environment is provisioned, traffic is routed to the new environment. If the new version produces the desired results without generating errors, the old environment is terminated. Otherwise, traffic is restored to the old version. You can perform blue/green deployments in Kubernetes by creating a new Deployment that is identical to the existing version\u2019s Deployment. Once you verify that the Pods in the new Deployment are running without errors, you can start sending traffic to the new Deployment by changing the selector spec in the Service that routes traffic to your application\u2019s Pods. Many continuous integration tools such as Flux , Jenkins , and Spinnaker let you automate blue/green deployments. Kubernetes blog includes a walkthrough using Jenkins: Zero-downtime Deployment in Kubernetes with Jenkins Use Canary deployments \u00b6 Canary deployments are a variant of blue/green deployments that can significantly remove risk from changes. In this deployment strategy, you create a new Deployment with fewer Pods alongside your old Deployment, and divert a small percentage of traffic to the new Deployment. If metrics indicate that the new version is performing as well or better than the existing version, you progressively increase traffic to the new Deployment while scaling it up until all traffic is diverted to the new Deployment. If there's an issue, you can route all traffic to the old Deployment and stop sending traffic to the new Deployment. Although Kubernetes offers no native way to perform canary deployments, you can use tools such as Flagger with Istio or App Mesh . Health checks and self-healing \u00b6 No software is bug-free, but Kubernetes can help you to minimize the impact of software failures. In the past, if an application crashed, someone had to remediate the situation by restarting the application manually. Kubernetes gives you the ability to detect software failures in your Pods and automatically replace them with new replicas. With Kubernetes you can monitor the health of your applications and automatically replace unhealthy instances. Kubernetes supports three types of health-checks : Liveness probe Startup probe (supported in Kubernetes version 1.16+) Readiness probe Kubelet , the Kubernetes agent, is responsible for running all the above-mentioned checks. Kubelet can check a Pods' health in three ways: kubelet can either run a shell command inside a Pod's container, send an HTTP GET request to its container, or open a TCP socket on a specified port. If you choose an exec -based probe, which runs a shell script inside a container, ensure that the shell command exits before the timeoutSeconds value expires. Otherwise, your node will have <defunct> processes, leading to node failure. Recommendations \u00b6 Use Liveness Probe to remove unhealthy pods \u00b6 The Liveness probe can detect deadlock conditions where the process continues to run, but the application becomes unresponsive. For example, if you are running a web service that listens on port 80, you can configure a Liveness probe to send an HTTP GET request on Pod\u2019s port 80. Kubelet will periodically send a GET request to the Pod and expect a response; if the Pod responds between 200-399 then the kubelet considers that Pod is healthy; otherwise, the Pod will be marked as unhealthy. If a Pod fails health-checks continuously, the kubelet will terminate it. You can use initialDelaySeconds to delay the first probe. When using the Liveness Probe, ensure that your application doesn\u2019t run into a situation in which all Pods simultaneously fail the Liveness Probe because Kubernetes will try to replace all your Pods, which will render your application offline. Furthermore, Kubernetes will continue to create new Pods that will also fail Liveness Probes, putting unnecessary strain on the control plane. Avoid configuring the Liveness Probe to depend on an a factor that is external to your Pod, for example, a external database. In other words, a non-responsive external-to-your-Pod database shouldn\u2019t make your Pods fail their Liveness Probes. Sandor Sz\u00fccs\u2019s post LIVENESS PROBES ARE DANGEROUS describes problems that can be caused by misconfigured probes. Use Startup Probe for applications that take longer to start \u00b6 When your app needs additional time to startup, you can use the Startup Probe to delay the Liveness and Readiness Probe. For example, a Java app that needs to hydrate cache from a database may need up to two minutes before it is fully functional. Any Liveness or Readiness Probe until it becomes fully functional might fail. Configuring a Startup Probe will allow the Java app to become healthy before Liveness or Readiness Probe are executed. Until the Startup Probe succeeds, all the other Probes are disabled. You can define the maximum time Kubernetes should wait for application startup. If, after the maximum configured time, the Pod still fails Startup Probes, it will be terminated, and a new Pod will be created. The Startup Probe is similar to the Liveness Probe -- if they fail, the Pod is recreated. As Ricardo A. explains in his post Fantastic Probes And How To Configure Them , Startup Probes should be used when the startup time of an application is unpredictable. If you know your application needs ten seconds to start, you should use Liveness/Readiness Probe with initialDelaySeconds instead. Use Readiness Probe to detect partial unavailability \u00b6 While the Liveness probe detects failures in an app that are resolved by terminating the Pod (hence, restarting the app), Readiness Probe detects conditions where the app may be temporarily unavailable. In these situations, the app may become temporarily unresponsive; however, it is expected to be healthy again once this operation completes. For example, during intense disk I/O operations, applications may be temporarily unavailable to handle requests. Here, terminating the application\u2019s Pod is not a remedy; at the same time, additional requests sent to the Pod can fail. You can use the Readiness Probe to detect temporary unavailability in your app and stop sending requests to its Pod until it becomes functional again. Unlike Liveness Probe, where a failure would result in a recreation of Pod, a failed Readiness Probe would mean that Pod will not receive any traffic from Kubernetes Service . When the Readiness Probe succeeds, Pod will resume receiving traffic from Service. Just like the Liveness Probe, avoid configuring Readiness Probes that depend on a resource that\u2019s external to the Pod (such as a database). Here\u2019s a scenario where a poorly configured Readiness can render the application nonfunctional - if a Pod\u2019s Readiness Probe fails when the app\u2019s database is unreachable, other Pod replicas will also fail simultaneously since they share the same health-check criteria. Setting the probe in this way will ensure that whenever the database is unavailable, the Pod\u2019s Readiness Probes will fail, and Kubernetes will stop sending traffic all Pods. A side-effect of using Readiness Probes is that they can increase the time it takes to update Deployments. New replicas will not receive traffic unless Readiness Probes are successful; until then, old replicas will continue to receive traffic. Dealing with disruptions \u00b6 Pods have a finite lifetime - even if you have long-running Pods, it\u2019s prudent to ensure Pods terminate correctly when the time comes. Depending on your upgrade strategy, Kubernetes cluster upgrades may require you to create new worker nodes, which requires all Pods to be recreated on newer nodes. Proper termination handling and Pod Disruption Budgets can help you avoid service disruptions as Pods are removed from older nodes and recreated on newer nodes. The preferred way to upgrade worker nodes is by creating new worker nodes and terminating old ones. Before terminating worker nodes, you should drain it. When a worker node is drained, all its pods are safely evicted. Safely is a key word here; when pods on a worker are evicted, they are not simply sent a SIGKILL signal. Instead, a SIGTERM signal is sent to the main process (PID 1) of each container in the Pods being evicted. After the SIGTERM signal is sent, Kubernetes will give the process some time (grace period) before a SIGKILL signal is sent. This grace period is 30 seconds by default; you can override the default by using grace-period flag in kubectl or declare terminationGracePeriodSeconds in your Podspec. kubectl delete pod <pod name> \u2014grace-period=<seconds> It is common to have containers in which the main process doesn\u2019t have PID 1. Consider this Python-based sample container: $ kubectl exec python-app -it ps PID USER TIME COMMAND 1 root 0:00 {script.sh} /bin/sh ./script.sh 5 root 0:00 python app.py In this example, the shell script receives SIGTERM , the main process, which happens to be a Python application in this example, doesn\u2019t get a SIGTERM signal. When the Pod is terminated, the Python application will be killed abruptly. This can be remediated by changing the ENTRYPOINT of the container to launch the Python application. Alternatively, you can use a tool like dumb-init to ensure that your application can handle signals. You can also use Container hooks to execute a script or an HTTP request at container start or stop. The PreStop hook action runs before the container receives a SIGTERM signal and must complete before this signal is sent. The terminationGracePeriodSeconds value applies from when the PreStop hook action begins executing, not when the SIGTERM signal is sent. Recommendations \u00b6 Protect critical workload with Pod Disruption Budgets \u00b6 Pod Disruption Budget or PDB can temporarily halt the eviction process if the number of replicas of an application falls below the declared threshold. The eviction process will continue once the number of available replicas is over the threshold. You can use PDB to declare the minAvailable and maxUnavailable number of replicas. For example, if you want at least three copies of your app to be available, you can create a PDB. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: my-svc-pdb spec: minAvailable: 3 selector: matchLabels: app: my-svc The above PDB policy tells Kubernetes to halt the eviction process until three or more replicas are available. Node draining respects PodDisruptionBudgets . During an EKS managed node group upgrade, nodes are drained with a fifteen-minute timeout . After fifteen minutes, if the update is not forced (the option is called Rolling update in the EKS console), the update fails. If the update is forced, the pods are deleted. For self-managed nodes, you can also use tools like AWS Node Termination Handler , which ensures that the Kubernetes control plane responds appropriately to events that can cause your EC2 instance to become unavailable, such as EC2 maintenance events and EC2 Spot interruptions . It uses the Kubernetes API to cordon the node to ensure no new Pods are scheduled, then drains it, terminating any running Pods. You can use Pod anti-affinity to schedule a Deployment\u2018s Pods on different nodes and avoid PDB related delays during node upgrades. Practice chaos engineering \u00b6 Chaos Engineering is the discipline of experimenting on a distributed system in order to build confidence in the system\u2019s capability to withstand turbulent conditions in production. In his blog, Dominik Tornow explains that Kubernetes is a declarative system where \u201c the user supplies a representation of the desired state of the system to the system. The system then considers the current state and the desired state to determine the sequence of commands to transition from the current state to the desired state. \u201d This means Kubernetes always stores the desired state and if the system deviates, Kubernetes will take action to restore the state. For example, if a worker node becomes unavailable, Kubernetes will reschedule the Pods onto another worker node. Similarly, if a replica crashes, the Deployment Contoller will create a new replica . In this way, Kubernetes controllers automatically fix failures. Chaos engineering tools like Gremlin help you test the resiliency of your Kubernetes cluster and identify single points of failure. Tools that introduce artificial chaos in your cluster (and beyond) can uncover systemic weaknesses, present an opportunity to identify bottlenecks and misconfigurations, and rectify problems in a controlled environment. The Chaos Engineering philosophy advocates breaking things on purpose and stress testing infrastructure to minimize unanticipated downtime. Use a Service Mesh \u00b6 You can use a service mesh to improve your application\u2019s resiliency. Service meshes enable service-to-service communication and increase the observability of your microservices network. Most service mesh products work by having a small network proxy run alongside each service that intercepts and inspects the application\u2019s network traffic. You can place your application in a mesh without modifying your application. Using service proxy\u2019s built-in features, you can have it generate network statistics, create access logs, and add HTTP headers to outbound requests for distributed tracing. A service mesh can help you make your microservices more resilient with features like automatic request retries, timeouts, circuit-breaking, and rate-limiting. If you operate multiple clusters, you can use a service mesh to enable cross-cluster service-to-service communication. Service Meshes \u00b6 AWS App Mesh Istio LinkerD Consul Observability \u00b6 Observability is an umbrella term that includes monitoring, logging, and tracing. Microservices based applications are distributed by nature. Unlike monolithic applications where monitoring a single system is sufficient, in a distributed application architecture, you need to monitor each component\u2019s performance. You can use cluster-level monitoring, logging, and distributed tracing systems to identify issues in your cluster before they disrupt your customers. Kubernetes built-in tools for troubleshooting and monitoring are limited. The metrics-server collects resource metrics and stores them in memory but doesn\u2019t persist them. You can view the logs of a Pod using kubectl, but Kubernetes doesn't automatically retain logs. And the implementation of distributed tracing is done either at the application code level or using services meshes. Kubernetes' extensibility shines here. Kubernetes allows you to bring your preferred centralized monitoring, logging, and tracing solution. Recommendations \u00b6 Monitor your applications \u00b6 The number of metrics you need to monitor in modern applications is growing continuously. It helps if you have an automated way to track your applications so you can focus on solving your customer\u2019s challenges. Cluster-wide monitoring tools like Prometheus or CloudWatch Container Insights can monitor your cluster and workload and provide you signals when, or preferably, before things go wrong. Monitoring tools allow you to create alerts that your operations team can subscribe to. Consider rules to activate alarms for events that can, when exacerbated, lead to an outage or impact application performance. If you\u2019re unclear on which metrics you should monitor, you can take inspiration from these methods: RED method . Stands for requests, errors, and duration. USE method . Stands for utilization, saturation, and errors. Sysdig\u2019s post Best practices for alerting on Kubernetes includes a comprehensive list of components that can impact the availability of your applications. Use Prometheus client library to expose application metrics \u00b6 In addition to monitoring the state of the application and aggregating standard metrics, you can also use the Prometheus client library to expose application-specific custom metrics to improve the application's observability. Use centralized logging tools to collect and persist logs \u00b6 Logging in EKS falls under two categories: control plane logs and application logs. EKS control plane logging provides audit and diagnostic logs directly from the control plane to CloudWatch Logs in your account. Application logs are logs produced by Pods running inside your cluster. Application logs include logs produced by Pods that run the business logic applications and Kubernetes system components such as CoreDNS, Cluster Autoscaler, Prometheus, etc. EKS provide five types of control plane logs : Kubernetes API server component logs Audit Authenticator Controller manager Scheduler The controller manager and scheduler logs can help diagnose control plane problems such as bottlenecks and errors. By default, EKS control plane logs aren\u2019t sent to CloudWatch Logs. You can enable control plane logging and select the types of EKS control plane logs you\u2019d like to capture for each cluster in your account Collecting application logs requires installing a log aggregator tool like Fluent Bit , Fluentd , or CloudWatch Container Insights in your cluster. Kubernetes log aggregator tools run as DaemonSets and scrape container logs from nodes. Application logs are then sent to a centralized destination for storage. For example, CloudWatch Container Insights can use either Fluent Bit or Fluentd to collect logs and ship them to CloudWatch Logs for storage. Fluent Bit and Fluentd support many popular log analytics systems such as Elasticsearch and InfluxDB giving you the ability to change the storage backend for your logs by modifying Fluent bit or Fluentd\u2019s log configuration. Use a distributed tracing system to identify bottlenecks \u00b6 A typical modern application has components distributed over the network, and its reliability depends on the proper functioning of each of the components that make up the application. You can use a distributed tracing solution to understand how requests flow and how systems communicate. Traces can show you where bottlenecks exist in your application network and prevent problems that can cause cascading failures. You have two options to implement tracing in your applications: you can either implement distributed tracing at the code level using shared libraries or use a service mesh. Implementing tracing at the code level can be disadvantageous. In this method, you have to make changes to your code. This is further complicated if you have polyglot applications. You\u2019re also responsible for maintaining yet another library, across your services. Service Meshes like LinkerD , Istio , and AWS App Mesh can be used to implement distributed tracing in your application with minimal changes to the application code. You can use service mesh to standardize metrics generation, logging, and tracing. Tracing tools like AWS X-Ray , Jaeger support both shared library and service mesh implementations. Consider using a tracing tool like AWS X-Ray or Jaeger that supports both (shared library and service mesh) implementations so you will not have to switch tools if you later adopt service mesh.","title":"Applications ({'name': 'English', 'build': True})"},{"location":"reliability/docs/application/#running-highly-available-applications","text":"Your customers expect your application to be always available, including when you're making changes and especially during spikes in traffic. A scalable and resilient architecture keeps your applications and services running without disruptions, which keeps your users happy. A scalable infrastructure grows and shrinks based on the needs of the business. Eliminating single points of failure is a critical step towards improving an application\u2019s availability and making it resilient. With Kubernetes, you can operate your applications and run them in a highly-available and resilient fashion. Its declarative management ensures that once you\u2019ve set up the application, Kubernetes will continuously try to match the current state with the desired state .","title":"Running highly-available applications"},{"location":"reliability/docs/application/#recommendations","text":"","title":"Recommendations"},{"location":"reliability/docs/application/#avoid-running-singleton-pods","text":"If your entire application runs in a single Pod, then your application will be unavailable if that Pod gets terminated. Instead of deploying applications using individual pods, create Deployments . If a Pod that is created by a Deployment fails or gets terminated, the Deployment controller will start a new pod to ensure the specified number of replica Pods are always running.","title":"Avoid running singleton Pods"},{"location":"reliability/docs/application/#run-multiple-replicas","text":"Running multiple replicas Pods of an app using a Deployment helps it run in a highly-available manner. If one replica fails, the remaining replicas will still function, albeit at reduced capacity until Kubernetes creates another Pod to make up for the loss. Furthermore, you can use the Horizontal Pod Autoscaler to scale replicas automatically based on workload demand.","title":"Run multiple replicas"},{"location":"reliability/docs/application/#schedule-replicas-across-nodes","text":"Running multiple replicas won\u2019t be very useful if all the replicas are running on the same node, and the node becomes unavailable. Consider using pod anti-affinity or pod topology spread constraints to spread replicas of a Deployment across multiple worker nodes. You can further improve a typical application\u2019s reliability by running it across multiple AZs.","title":"Schedule replicas across nodes"},{"location":"reliability/docs/application/#using-pod-anti-affinity-rules","text":"The manifest below tells Kubernetes scheduler to prefer to place pods on separate nodes and AZs. It doesn\u2019t require distinct nodes or AZ because if it did, then Kubernetes will not be able to schedule any pods once there is a pod running in each AZ. If your application requires just three replicas, you can use requiredDuringSchedulingIgnoredDuringExecution for topologyKey: topology.kubernetes.io/zone , and Kubernetes scheduler will not schedule two pods in the same AZ. apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: topology.kubernetes.io/zone weight: 100 - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: kubernetes.io/hostname weight: 99 containers: - name: web-app image: nginx:1.16-alpine","title":"Using Pod anti-affinity rules"},{"location":"reliability/docs/application/#using-pod-topology-spread-constraints","text":"Similar to pod anti-affinity rules, pod topology spread constraints allow you to make your application available across different failure (or topology) domains like hosts or AZs. This approach works very well when you're trying to ensure fault tolerance as well as availability by having multiple replicas in each of the different topology domains. Pod anti-affinity rules, on the other hand, can easily produce a result where you have a single replica in a topology domain because the pods with an anti-affinity toward each other have a repelling effect. In such cases, a single replica on a dedicated node isn't ideal for fault tolerance nor is it a good use of resources. With topology spread constraints, you have more control over the spread or distribution that the scheduler should try to apply across the topology domains. Here are some important properties to use in this approach: 1. The maxSkew is used to control or determine the maximum point to which things can be uneven across the topology domains. For example, if an application has 10 replicas and is deployed across 3 AZs, you can't get an even spread, but you can influence how uneven the distribution will be. In this case, the maxSkew can be anything between 1 and 10. A value of 1 means you can potentially end up with a spread like 4,3,3 , 3,4,3 or 3,3,4 across the 3 AZs. In contrast, a value of 10 means you can potentially end up with a spread like 10,0,0 , 0,10,0 or 0,0,10 across 3 AZs. 2. The topologyKey is a key for one of the node labels and defines the type of topology domain that should be used for the pod distribution. For example, a zonal spread would have the following key-value pair: topologyKey: \"topology.kubernetes.io/zone\" 3. The whenUnsatisfiable property is used to determine how you want the scheduler to respond if the desired constraints can't be satisfied. 4. The labelSelector is used to find matching pods so that the scheduler can be aware of them when deciding where to place pods in accordance with the constraints that you specify. In addition to these above, there are other fields that you can read about further in the Kubernetes documentation . apiVersion: apps/v1 kind: Deployment metadata: name: spread-host-az labels: app: web-server spec: replicas: 10 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: app: express-test containers: - name: web-app image: nginx:1.16-alpine","title":"Using Pod topology spread constraints"},{"location":"reliability/docs/application/#run-kubernetes-metrics-server","text":"Install the Kubernetes metrics server to help scale your applications. Kubernetes autoscaler add-ons like HPA and VPA need to track metrics of applications to scale them. The metrics-server collects resource metrics that can be used to make scaling decisions. The metrics are collected from kubelets and served in Metrics API format . The metrics server doesn\u2019t retain any data, and it\u2019s not a monitoring solution. Its purpose is to expose CPU and memory usage metrics to other systems. If you want to track your application's state over time, you need a monitoring tool like Prometheus or Amazon CloudWatch. Follow the EKS documentation to install metrics-server in your EKS cluster.","title":"Run Kubernetes Metrics Server"},{"location":"reliability/docs/application/#horizontal-pod-autoscaler-hpa","text":"HPA can automatically scale your application in response to demand and help you avoid impacting your customers during peak traffic. It is implemented as a control loop in Kubernetes that periodically queries metrics from APIs that provide resource metrics. HPA can retrieve metrics from the following APIs: 1. metrics.k8s.io also known as Resource Metrics API \u2014 Provides CPU and memory usage for pods 2. custom.metrics.k8s.io \u2014 Provides metrics from other metric collectors like Prometheus; these metrics are internal to your Kubernetes cluster. 3. external.metrics.k8s.io \u2014 Provides metrics that are external to your Kubernetes cluster (E.g., SQS Queue Depth, ELB latency). You must use one of these three APIs to provide the metric to scale your application.","title":"Horizontal Pod Autoscaler (HPA)"},{"location":"reliability/docs/application/#scaling-applications-based-on-custom-or-external-metrics","text":"You can use custom or external metrics to scale your application on metrics other than CPU or memory utilization. Custom Metrics API servers provide the custom-metrics.k8s.io API that HPA can use to autoscale applications. You can use the Prometheus Adapter for Kubernetes Metrics APIs to collect metrics from Prometheus and use with the HPA. In this case, Prometheus adapter will expose Prometheus metrics in Metrics API format . A list of all custom metrics implementation can be found in Kubernetes Documentation . Once you deploy the Prometheus Adapter, you can query custom metrics using kubectl. kubectl get \u2014raw /apis/custom.metrics.k8s.io/v1beta1/ External metrics , as the name suggests, provide the Horizontal Pod Autoscaler the ability to scale deployments using metrics that are external to the Kubernetes cluster. For example, in batch processing workloads, it is common to scale the number of replicas based on the number of jobs in flight in an SQS queue. To autoscale a Deployment using a CloudWatch metric, for example, scaling a batch-processor application based on SQS queue depth , you can use k8s-cloudwatch-adapter . k8s-cloudwatch-adapter is a community project and not maintained by AWS.","title":"Scaling applications based on custom or external metrics"},{"location":"reliability/docs/application/#vertical-pod-autoscaler-vpa","text":"VPA automatically adjusts the CPU and memory reservation for your Pods to help you \u201cright-size\u201d your applications. For applications that need to be scaled vertically - which is done by increasing resource allocation - you can use VPA to automatically scale Pod replicas or provide scaling recommendations. Your application may become temporarily unavailable if VPA needs to scale it because VPA\u2019s current implementation does not perform in-place adjustments to Pods; instead, it will recreate the Pod that needs to be scaled. EKS Documentation includes a walkthrough for setting up VPA. Fairwinds Goldilocks project provides a dashboard to visualize VPA recommendations for CPU and memory requests and limits. Its VPA update mode allows you to auto-scale Pods based on VPA recommendations.","title":"Vertical Pod Autoscaler (VPA)"},{"location":"reliability/docs/application/#updating-applications","text":"Modern applications require rapid innovation with a high degree of stability and availability. Kubernetes gives you the tools to update your applications continuously without disrupting your customers. Let\u2019s look at some of the best practices that make it possible to quickly deploy changes without sacrificing availability.","title":"Updating applications"},{"location":"reliability/docs/application/#have-a-mechanism-to-perform-rollbacks","text":"Having an undo button can evade disasters. It is a best practice to test deployments in a separate lower environment (test or development environment) before updating the production cluster. Using a CI/CD pipeline can help you automate and test deployments. With a continuous deployment pipeline, you can quickly revert to the older version if the upgrade happens to be defective. You can use Deployments to update a running application. This is typically done by updating the container image. You can use kubectl to update a Deployment like this: kubectl --record deployment.apps/nginx-deployment set image nginx-deployment nginx = nginx:1.16.1 The --record argument record the changes to the Deployment and helps you if you need to perform a rollback. kubectl rollout history deployment shows you the recorded changes to Deployments in your cluster. You can rollback a change using kubectl rollout undo deployment <DEPLOYMENT_NAME> . By default, when you update a Deployment that requires a recreation of pods, Deployment will perform a rolling update . In other words, Kubernetes will only update a portion of the running pods in a Deployment and not all the Pods at once. You can control how Kubernetes performs rolling updates through RollingUpdateStrategy property. When performing a rolling update of a Deployment, you can use the Max Unavailable property to specify the maximum number of Pods that can be unavailable during the update. The Max Surge property of Deployment allows you to set the maximum number of Pods that can be created over the desired number of Pods. Consider adjusting max unavailable to ensure that a rollout doesn\u2019t disrupt your customers. For example, Kubernetes sets 25% max unavailable by default, which means if you have 100 Pods, you may have only 75 Pods actively working during a rollout. If your application needs a minimum of 80 Pods, this rollout can be disruptive. Instead, you can set max unavailable to 20% to ensure that there are at least 80 functional Pods throughout the rollout.","title":"Have a mechanism to perform rollbacks"},{"location":"reliability/docs/application/#use-bluegreen-deployments","text":"Changes are inherently risky, but changes that cannot be undone can be potentially catastrophic. Change procedures that allow you to effectively turn back time through a rollback make enhancements and experimentation safer. Blue/green deployments give you a method to quickly retract the changes if things go wrong. In this deployment strategy, you create an environment for the new version. This environment is identical to the current version of the application being updated. Once the new environment is provisioned, traffic is routed to the new environment. If the new version produces the desired results without generating errors, the old environment is terminated. Otherwise, traffic is restored to the old version. You can perform blue/green deployments in Kubernetes by creating a new Deployment that is identical to the existing version\u2019s Deployment. Once you verify that the Pods in the new Deployment are running without errors, you can start sending traffic to the new Deployment by changing the selector spec in the Service that routes traffic to your application\u2019s Pods. Many continuous integration tools such as Flux , Jenkins , and Spinnaker let you automate blue/green deployments. Kubernetes blog includes a walkthrough using Jenkins: Zero-downtime Deployment in Kubernetes with Jenkins","title":"Use blue/green deployments"},{"location":"reliability/docs/application/#use-canary-deployments","text":"Canary deployments are a variant of blue/green deployments that can significantly remove risk from changes. In this deployment strategy, you create a new Deployment with fewer Pods alongside your old Deployment, and divert a small percentage of traffic to the new Deployment. If metrics indicate that the new version is performing as well or better than the existing version, you progressively increase traffic to the new Deployment while scaling it up until all traffic is diverted to the new Deployment. If there's an issue, you can route all traffic to the old Deployment and stop sending traffic to the new Deployment. Although Kubernetes offers no native way to perform canary deployments, you can use tools such as Flagger with Istio or App Mesh .","title":"Use Canary deployments"},{"location":"reliability/docs/application/#health-checks-and-self-healing","text":"No software is bug-free, but Kubernetes can help you to minimize the impact of software failures. In the past, if an application crashed, someone had to remediate the situation by restarting the application manually. Kubernetes gives you the ability to detect software failures in your Pods and automatically replace them with new replicas. With Kubernetes you can monitor the health of your applications and automatically replace unhealthy instances. Kubernetes supports three types of health-checks : Liveness probe Startup probe (supported in Kubernetes version 1.16+) Readiness probe Kubelet , the Kubernetes agent, is responsible for running all the above-mentioned checks. Kubelet can check a Pods' health in three ways: kubelet can either run a shell command inside a Pod's container, send an HTTP GET request to its container, or open a TCP socket on a specified port. If you choose an exec -based probe, which runs a shell script inside a container, ensure that the shell command exits before the timeoutSeconds value expires. Otherwise, your node will have <defunct> processes, leading to node failure.","title":"Health checks and self-healing"},{"location":"reliability/docs/application/#recommendations_1","text":"","title":"Recommendations"},{"location":"reliability/docs/application/#use-liveness-probe-to-remove-unhealthy-pods","text":"The Liveness probe can detect deadlock conditions where the process continues to run, but the application becomes unresponsive. For example, if you are running a web service that listens on port 80, you can configure a Liveness probe to send an HTTP GET request on Pod\u2019s port 80. Kubelet will periodically send a GET request to the Pod and expect a response; if the Pod responds between 200-399 then the kubelet considers that Pod is healthy; otherwise, the Pod will be marked as unhealthy. If a Pod fails health-checks continuously, the kubelet will terminate it. You can use initialDelaySeconds to delay the first probe. When using the Liveness Probe, ensure that your application doesn\u2019t run into a situation in which all Pods simultaneously fail the Liveness Probe because Kubernetes will try to replace all your Pods, which will render your application offline. Furthermore, Kubernetes will continue to create new Pods that will also fail Liveness Probes, putting unnecessary strain on the control plane. Avoid configuring the Liveness Probe to depend on an a factor that is external to your Pod, for example, a external database. In other words, a non-responsive external-to-your-Pod database shouldn\u2019t make your Pods fail their Liveness Probes. Sandor Sz\u00fccs\u2019s post LIVENESS PROBES ARE DANGEROUS describes problems that can be caused by misconfigured probes.","title":"Use Liveness Probe to remove unhealthy pods"},{"location":"reliability/docs/application/#use-startup-probe-for-applications-that-take-longer-to-start","text":"When your app needs additional time to startup, you can use the Startup Probe to delay the Liveness and Readiness Probe. For example, a Java app that needs to hydrate cache from a database may need up to two minutes before it is fully functional. Any Liveness or Readiness Probe until it becomes fully functional might fail. Configuring a Startup Probe will allow the Java app to become healthy before Liveness or Readiness Probe are executed. Until the Startup Probe succeeds, all the other Probes are disabled. You can define the maximum time Kubernetes should wait for application startup. If, after the maximum configured time, the Pod still fails Startup Probes, it will be terminated, and a new Pod will be created. The Startup Probe is similar to the Liveness Probe -- if they fail, the Pod is recreated. As Ricardo A. explains in his post Fantastic Probes And How To Configure Them , Startup Probes should be used when the startup time of an application is unpredictable. If you know your application needs ten seconds to start, you should use Liveness/Readiness Probe with initialDelaySeconds instead.","title":"Use Startup Probe for applications that take longer to start"},{"location":"reliability/docs/application/#use-readiness-probe-to-detect-partial-unavailability","text":"While the Liveness probe detects failures in an app that are resolved by terminating the Pod (hence, restarting the app), Readiness Probe detects conditions where the app may be temporarily unavailable. In these situations, the app may become temporarily unresponsive; however, it is expected to be healthy again once this operation completes. For example, during intense disk I/O operations, applications may be temporarily unavailable to handle requests. Here, terminating the application\u2019s Pod is not a remedy; at the same time, additional requests sent to the Pod can fail. You can use the Readiness Probe to detect temporary unavailability in your app and stop sending requests to its Pod until it becomes functional again. Unlike Liveness Probe, where a failure would result in a recreation of Pod, a failed Readiness Probe would mean that Pod will not receive any traffic from Kubernetes Service . When the Readiness Probe succeeds, Pod will resume receiving traffic from Service. Just like the Liveness Probe, avoid configuring Readiness Probes that depend on a resource that\u2019s external to the Pod (such as a database). Here\u2019s a scenario where a poorly configured Readiness can render the application nonfunctional - if a Pod\u2019s Readiness Probe fails when the app\u2019s database is unreachable, other Pod replicas will also fail simultaneously since they share the same health-check criteria. Setting the probe in this way will ensure that whenever the database is unavailable, the Pod\u2019s Readiness Probes will fail, and Kubernetes will stop sending traffic all Pods. A side-effect of using Readiness Probes is that they can increase the time it takes to update Deployments. New replicas will not receive traffic unless Readiness Probes are successful; until then, old replicas will continue to receive traffic.","title":"Use Readiness Probe to detect partial unavailability"},{"location":"reliability/docs/application/#dealing-with-disruptions","text":"Pods have a finite lifetime - even if you have long-running Pods, it\u2019s prudent to ensure Pods terminate correctly when the time comes. Depending on your upgrade strategy, Kubernetes cluster upgrades may require you to create new worker nodes, which requires all Pods to be recreated on newer nodes. Proper termination handling and Pod Disruption Budgets can help you avoid service disruptions as Pods are removed from older nodes and recreated on newer nodes. The preferred way to upgrade worker nodes is by creating new worker nodes and terminating old ones. Before terminating worker nodes, you should drain it. When a worker node is drained, all its pods are safely evicted. Safely is a key word here; when pods on a worker are evicted, they are not simply sent a SIGKILL signal. Instead, a SIGTERM signal is sent to the main process (PID 1) of each container in the Pods being evicted. After the SIGTERM signal is sent, Kubernetes will give the process some time (grace period) before a SIGKILL signal is sent. This grace period is 30 seconds by default; you can override the default by using grace-period flag in kubectl or declare terminationGracePeriodSeconds in your Podspec. kubectl delete pod <pod name> \u2014grace-period=<seconds> It is common to have containers in which the main process doesn\u2019t have PID 1. Consider this Python-based sample container: $ kubectl exec python-app -it ps PID USER TIME COMMAND 1 root 0:00 {script.sh} /bin/sh ./script.sh 5 root 0:00 python app.py In this example, the shell script receives SIGTERM , the main process, which happens to be a Python application in this example, doesn\u2019t get a SIGTERM signal. When the Pod is terminated, the Python application will be killed abruptly. This can be remediated by changing the ENTRYPOINT of the container to launch the Python application. Alternatively, you can use a tool like dumb-init to ensure that your application can handle signals. You can also use Container hooks to execute a script or an HTTP request at container start or stop. The PreStop hook action runs before the container receives a SIGTERM signal and must complete before this signal is sent. The terminationGracePeriodSeconds value applies from when the PreStop hook action begins executing, not when the SIGTERM signal is sent.","title":"Dealing with disruptions"},{"location":"reliability/docs/application/#recommendations_2","text":"","title":"Recommendations"},{"location":"reliability/docs/application/#protect-critical-workload-with-pod-disruption-budgets","text":"Pod Disruption Budget or PDB can temporarily halt the eviction process if the number of replicas of an application falls below the declared threshold. The eviction process will continue once the number of available replicas is over the threshold. You can use PDB to declare the minAvailable and maxUnavailable number of replicas. For example, if you want at least three copies of your app to be available, you can create a PDB. apiVersion: policy/v1beta1 kind: PodDisruptionBudget metadata: name: my-svc-pdb spec: minAvailable: 3 selector: matchLabels: app: my-svc The above PDB policy tells Kubernetes to halt the eviction process until three or more replicas are available. Node draining respects PodDisruptionBudgets . During an EKS managed node group upgrade, nodes are drained with a fifteen-minute timeout . After fifteen minutes, if the update is not forced (the option is called Rolling update in the EKS console), the update fails. If the update is forced, the pods are deleted. For self-managed nodes, you can also use tools like AWS Node Termination Handler , which ensures that the Kubernetes control plane responds appropriately to events that can cause your EC2 instance to become unavailable, such as EC2 maintenance events and EC2 Spot interruptions . It uses the Kubernetes API to cordon the node to ensure no new Pods are scheduled, then drains it, terminating any running Pods. You can use Pod anti-affinity to schedule a Deployment\u2018s Pods on different nodes and avoid PDB related delays during node upgrades.","title":"Protect critical workload with Pod Disruption Budgets"},{"location":"reliability/docs/application/#practice-chaos-engineering","text":"Chaos Engineering is the discipline of experimenting on a distributed system in order to build confidence in the system\u2019s capability to withstand turbulent conditions in production. In his blog, Dominik Tornow explains that Kubernetes is a declarative system where \u201c the user supplies a representation of the desired state of the system to the system. The system then considers the current state and the desired state to determine the sequence of commands to transition from the current state to the desired state. \u201d This means Kubernetes always stores the desired state and if the system deviates, Kubernetes will take action to restore the state. For example, if a worker node becomes unavailable, Kubernetes will reschedule the Pods onto another worker node. Similarly, if a replica crashes, the Deployment Contoller will create a new replica . In this way, Kubernetes controllers automatically fix failures. Chaos engineering tools like Gremlin help you test the resiliency of your Kubernetes cluster and identify single points of failure. Tools that introduce artificial chaos in your cluster (and beyond) can uncover systemic weaknesses, present an opportunity to identify bottlenecks and misconfigurations, and rectify problems in a controlled environment. The Chaos Engineering philosophy advocates breaking things on purpose and stress testing infrastructure to minimize unanticipated downtime.","title":"Practice chaos engineering"},{"location":"reliability/docs/application/#use-a-service-mesh","text":"You can use a service mesh to improve your application\u2019s resiliency. Service meshes enable service-to-service communication and increase the observability of your microservices network. Most service mesh products work by having a small network proxy run alongside each service that intercepts and inspects the application\u2019s network traffic. You can place your application in a mesh without modifying your application. Using service proxy\u2019s built-in features, you can have it generate network statistics, create access logs, and add HTTP headers to outbound requests for distributed tracing. A service mesh can help you make your microservices more resilient with features like automatic request retries, timeouts, circuit-breaking, and rate-limiting. If you operate multiple clusters, you can use a service mesh to enable cross-cluster service-to-service communication.","title":"Use a Service Mesh"},{"location":"reliability/docs/application/#service-meshes","text":"AWS App Mesh Istio LinkerD Consul","title":"Service Meshes"},{"location":"reliability/docs/application/#observability","text":"Observability is an umbrella term that includes monitoring, logging, and tracing. Microservices based applications are distributed by nature. Unlike monolithic applications where monitoring a single system is sufficient, in a distributed application architecture, you need to monitor each component\u2019s performance. You can use cluster-level monitoring, logging, and distributed tracing systems to identify issues in your cluster before they disrupt your customers. Kubernetes built-in tools for troubleshooting and monitoring are limited. The metrics-server collects resource metrics and stores them in memory but doesn\u2019t persist them. You can view the logs of a Pod using kubectl, but Kubernetes doesn't automatically retain logs. And the implementation of distributed tracing is done either at the application code level or using services meshes. Kubernetes' extensibility shines here. Kubernetes allows you to bring your preferred centralized monitoring, logging, and tracing solution.","title":"Observability"},{"location":"reliability/docs/application/#recommendations_3","text":"","title":"Recommendations"},{"location":"reliability/docs/application/#monitor-your-applications","text":"The number of metrics you need to monitor in modern applications is growing continuously. It helps if you have an automated way to track your applications so you can focus on solving your customer\u2019s challenges. Cluster-wide monitoring tools like Prometheus or CloudWatch Container Insights can monitor your cluster and workload and provide you signals when, or preferably, before things go wrong. Monitoring tools allow you to create alerts that your operations team can subscribe to. Consider rules to activate alarms for events that can, when exacerbated, lead to an outage or impact application performance. If you\u2019re unclear on which metrics you should monitor, you can take inspiration from these methods: RED method . Stands for requests, errors, and duration. USE method . Stands for utilization, saturation, and errors. Sysdig\u2019s post Best practices for alerting on Kubernetes includes a comprehensive list of components that can impact the availability of your applications.","title":"Monitor your applications"},{"location":"reliability/docs/application/#use-prometheus-client-library-to-expose-application-metrics","text":"In addition to monitoring the state of the application and aggregating standard metrics, you can also use the Prometheus client library to expose application-specific custom metrics to improve the application's observability.","title":"Use Prometheus client library to expose application metrics"},{"location":"reliability/docs/application/#use-centralized-logging-tools-to-collect-and-persist-logs","text":"Logging in EKS falls under two categories: control plane logs and application logs. EKS control plane logging provides audit and diagnostic logs directly from the control plane to CloudWatch Logs in your account. Application logs are logs produced by Pods running inside your cluster. Application logs include logs produced by Pods that run the business logic applications and Kubernetes system components such as CoreDNS, Cluster Autoscaler, Prometheus, etc. EKS provide five types of control plane logs : Kubernetes API server component logs Audit Authenticator Controller manager Scheduler The controller manager and scheduler logs can help diagnose control plane problems such as bottlenecks and errors. By default, EKS control plane logs aren\u2019t sent to CloudWatch Logs. You can enable control plane logging and select the types of EKS control plane logs you\u2019d like to capture for each cluster in your account Collecting application logs requires installing a log aggregator tool like Fluent Bit , Fluentd , or CloudWatch Container Insights in your cluster. Kubernetes log aggregator tools run as DaemonSets and scrape container logs from nodes. Application logs are then sent to a centralized destination for storage. For example, CloudWatch Container Insights can use either Fluent Bit or Fluentd to collect logs and ship them to CloudWatch Logs for storage. Fluent Bit and Fluentd support many popular log analytics systems such as Elasticsearch and InfluxDB giving you the ability to change the storage backend for your logs by modifying Fluent bit or Fluentd\u2019s log configuration.","title":"Use centralized logging tools to collect and persist logs"},{"location":"reliability/docs/application/#use-a-distributed-tracing-system-to-identify-bottlenecks","text":"A typical modern application has components distributed over the network, and its reliability depends on the proper functioning of each of the components that make up the application. You can use a distributed tracing solution to understand how requests flow and how systems communicate. Traces can show you where bottlenecks exist in your application network and prevent problems that can cause cascading failures. You have two options to implement tracing in your applications: you can either implement distributed tracing at the code level using shared libraries or use a service mesh. Implementing tracing at the code level can be disadvantageous. In this method, you have to make changes to your code. This is further complicated if you have polyglot applications. You\u2019re also responsible for maintaining yet another library, across your services. Service Meshes like LinkerD , Istio , and AWS App Mesh can be used to implement distributed tracing in your application with minimal changes to the application code. You can use service mesh to standardize metrics generation, logging, and tracing. Tracing tools like AWS X-Ray , Jaeger support both shared library and service mesh implementations. Consider using a tracing tool like AWS X-Ray or Jaeger that supports both (shared library and service mesh) implementations so you will not have to switch tools if you later adopt service mesh.","title":"Use a distributed tracing system to identify bottlenecks"},{"location":"reliability/docs/controlplane.kr/","text":"{'name': 'English', 'build': True} EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \u00b6 Amazon Elastic Kubernetes Service(EKS)\ub294 \uc790\uccb4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub610\ub294 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc124\uce58, \uc6b4\uc601 \ubc0f \uc720\uc9c0 \uad00\ub9ac\ud560 \ud544\uc694 \uc5c6\uc774 AWS\uc5d0\uc11c \uc27d\uac8c \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud558\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uaddc\uc815 \uc900\uc218 \uc778\uc99d\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaddc\uc815 \uc900\uc218\ub97c \ud1b5\ud574 EKS\ub294 EC2 \ub610\ub294 \uc628\ud504\ub808\ubbf8\uc2a4\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 \ucee4\ubba4\ub2c8\ud2f0 \ubc84\uc804\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uae30\uc874 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 Amazon EKS\uc640 \ud638\ud658\ub429\ub2c8\ub2e4. EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub178\ub4dc\uc758 \uac00\uc6a9\uc131\uacfc \ud655\uc7a5\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud558\uace0 \ube44\uc815\uc0c1 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4. EKS \uc544\ud0a4\ud14d\ucc98 \u00b6 EKS \uc544\ud0a4\ud14d\ucc98\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uac00\uc6a9\uc131\uacfc \ub0b4\uad6c\uc131\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub294 \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc81c\uac70\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. EKS\ub85c \uad00\ub9ac\ub418\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 EKS \uad00\ub9ac\ud615 VPC \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ub178\ub4dc, \uae30\ud0c0 \ud074\ub7ec\uc2a4\ud130\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. API \uc11c\ubc84, \uc2a4\ucf00\uc904\ub7ec, kube-controller-manager \uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\ub97c \uc2e4\ud589\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ub178\ub4dc\ub294 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS\ub294 AWS \ub9ac\uc804 \ub0b4\uc758 \ubcc4\uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed(AZ)\uc5d0\uc11c \ucd5c\uc18c 2\uac1c\uc758 API \uc11c\ubc84 \ub178\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub0b4\uad6c\uc131\uc744 \uc704\ud574 etcd \uc11c\ubc84 \ub178\ub4dc\ub3c4 3\uac1c\uc758 AZ\uc5d0 \uac78\uce5c \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \uadf8\ub8f9\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS\ub294 \uac01 AZ\uc5d0\uc11c NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc2e4\ud589\ud558\uace0, API \uc11c\ubc84 \ubc0f etcd \uc11c\ubc84\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \uc544\ud0a4\ud14d\ucc98\ub294 \ub2e8\uc77c AZ\uc758 \uc774\ubca4\ud2b8\uac00 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\uc640 \ud1b5\uc2e0\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub97c \uc704\ud55c \uace0\uac00\uc6a9\uc131 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4( kubectl \uacfc \uac19\uc740 \ub3c4\uad6c \uc0ac\uc6a9). \uad00\ub9ac\ud615 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 NLB\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\uc758 \ubd80\ud558\ub97c \ubd84\uc0b0\ud569\ub2c8\ub2e4. \ub610\ud55c EKS\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc640\uc758 \uc6d0\ud65c\ud55c \ud1b5\uc2e0\uc744 \uc704\ud574 \uc11c\ub85c \ub2e4\ub978 AZ\uc5d0 \ub450 \uac1c\uc758 ENI \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 API \uc11c\ubc84 \ub294 \ud37c\ube14\ub9ad \uc778\ud130\ub137(\ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0ac\uc6a9) \ub610\ub294 VPC(EKS \uad00\ub9ac ENI \uc0ac\uc6a9) \ub610\ub294 \ub458 \ub2e4\ub97c \ud1b5\ud574 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uc640 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec API \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud558\ub4e0 EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 ENI\ub97c \uc0ac\uc6a9\ud558\ub4e0 \uad00\uacc4\uc5c6\uc774 \uc5f0\uacb0\uc744 \uc704\ud55c \uc911\ubcf5 \uacbd\ub85c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad \ubaa8\ub2c8\ud130\ub9c1 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc131\ub2a5\uc5d0 \ub300\ud55c \ud1b5\ucc30\ub825\uc744 \uc5bb\uace0 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\uc815\uc0c1 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc798\ubabb \uc791\uc131\ub41c \ucee8\ud2b8\ub864\ub7ec\ub294 API \uc11c\ubc84\uc5d0 \uacfc\ubd80\ud558\ub97c \uc77c\uc73c\ucf1c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 /metrics \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad\uc744 \ub178\ucd9c\ud569\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ucd9c\ub41c \uba54\ud2b8\ub9ad\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get --raw /metrics \uc774\ub7ec\ud55c \uc9c0\ud45c\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud14d\uc2a4\ud2b8 \ud615\uc2dd \uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc218\uc9d1\ud558\uace0 \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2020\ub144 5\uc6d4, CloudWatch\ub294 CloudWatch Container Insights\uc5d0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc9c0\ud45c \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c Amazon CloudWatch\ub97c \uc0ac\uc6a9\ud558\uc5ec EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 Prometheus \uc2a4\ud06c\ub7a9 \ub300\uc0c1 \ucd94\uac00 \uc790\uc2b5\uc11c: \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 KPI \uc11c\ubc84 \uc9c0\ud45c \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\ud45c\ub97c \uc218\uc9d1\ud558\uace0 CloudWatch \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc0dd\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uba54\ud2b8\ub9ad\uc740 \uc5ec\uae30 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, apiserver_request_duration_seconds \ub294 API \uc694\uccad\uc744 \uc2e4\ud589\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574 \ubcf4\uc2ed\uc2dc\uc624. API \uc11c\ubc84 \u00b6 \uba54\ud2b8\ub9ad \uc124\uba85 apiserver_request_total \uac01 \uba54\uc18c\ub4dc, \ub4dc\ub77c\uc774 \ub7f0 \uac12, \uadf8\ub8f9, \ubc84\uc804, \ub9ac\uc18c\uc2a4, \ubc94\uc704, \uad6c\uc131 \uc694\uc18c, HTTP \uc751\ub2f5 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uad6c\ubd84\ub41c API \uc11c\ubc84 \uc694\uccad \uce74\uc6b4\ud130\uc785\ub2c8\ub2e4. apiserver_request_duration_seconds* \uac01 \uba54\uc18c\ub4dc, \ub4dc\ub77c\uc774 \ub7f0 \uac12, \uadf8\ub8f9, \ubc84\uc804, \ub9ac\uc18c\uc2a4, \ud558\uc704 \ub9ac\uc18c\uc2a4, \ubc94\uc704, \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc751\ub2f5 \uc9c0\uc5f0 \uc2dc\uac04 \ubd84\ud3ec(\ucd08 \ub2e8\uc704) apiserver_admission_controller_admission_duration_seconds admission controller \uc9c0\uc5f0 \uc2dc\uac04 \ud788\uc2a4\ud1a0\uadf8\ub7a8(\ucd08), \uc774\ub984\uc73c\ub85c \uc2dd\ubcc4\ub418\uba70 \uac01 \uc791\uc5c5, API \ub9ac\uc18c\uc2a4 \ubc0f \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ub428(\uac80\uc99d \ub610\ub294 \uc2b9\uc778). apiserver_admission_webhook_rejection_count admission webhook \uac70\ubd80 \uac74\uc218.\uc774\ub984, \uc791\uc5c5, \uac70\ubd80 \ucf54\ub4dc, \uc720\ud615(\uac80\uc99d \ub610\ub294 \uc2b9\uc778), \uc624\ub958 \uc720\ud615(calling_webhook_error, apiserver_internal_error, no_error) \uc73c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. rest_client_request_duration_seconds \uc694\uccad \uc9c0\uc5f0 \uc2dc\uac04(\ucd08)\ub3d9\uc0ac\uc640 URL\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. rest_client_requests_total \uc0c1\ud0dc \ucf54\ub4dc, \uba54\uc11c\ub4dc, \ud638\uc2a4\ud2b8\ubcc4\ub85c \ud30c\ud2f0\uc158\uc744 \ub098\ub208 HTTP \uc694\uccad \uc218 etcd \u00b6 \uba54\ud2b8\ub9ad \uc124\uba85 etcd_request_duration_seconds \uac01 \uc791\uc5c5 \ubc0f \uac1d\uccb4 \uc720\ud615\uc5d0 \ub300\ud55c Etcd \uc694\uccad \uc9c0\uc5f0 \uc2dc\uac04(\ucd08) etcd_db_total_size_in_bytes \ub610\ub294 apiserver_storage_db_total_size_in_bytes (EKS v1.26\ubd80\ud130 \uc2dc\uc791) Etcd \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubaa8\ub2c8\ud130\ub9c1 \uac1c\uc694 \ub300\uc2dc\ubcf4\ub4dc \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uc694\uccad\uacfc \uc9c0\uc5f0 \uc2dc\uac04 \ubc0f etcd \uc9c0\uc5f0 \uc2dc\uac04 \uba54\ud2b8\ub9ad\uc744 \uc2dc\uac01\ud654\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ub2e4\uc74c \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec etcd\uc758 \ud604\uc7ac \ud06c\uae30\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ucffc\ub9ac\ub294 API \uba54\ud2b8\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\ub294 kube-apiserver \ub77c\ub294 \uc791\uc5c5\uc774 \uc788\uace0 EKS \ubc84\uc804\uc774 v1.26 \ubbf8\ub9cc\uc778 \uac83\uc73c\ub85c \uac00\uc815\ud569\ub2c8\ub2e4. max(etcd_db_total_size_in_bytes{job=\"kube-apiserver\"} / (8 * 1024 * 1024 * 1024)) \ud074\ub7ec\uc2a4\ud130 \uc778\uc99d \u00b6 EKS\ub294 \ud604\uc7ac bearer/\uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \uacfc \uc6f9\ud6c4\ud06c \ud1a0\ud070 \uc778\uc99d \uc744 \uc0ac\uc6a9\ud558\ub294 IAM \uc778\uc99d \ub4f1 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \ud638\ucd9c\ud558\uba74 \uc6f9\ud6c4\ud06c\ub294 \uc694\uccad\uc5d0 \ud3ec\ud568\ub41c \uc778\uc99d \ud1a0\ud070\uc744 IAM\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. base 64\ub85c \uc11c\uba85\ub41c URL\uc778 \ud1a0\ud070\uc740 AWS \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4( AWS CLI )\uc5d0 \uc758\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 IAM \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc740 \uc790\ub3d9\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc804\uccb4 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc2b5\ub2c8\ub2e4. aws-auth configmap \uc744 \ud3b8\uc9d1\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws-auth \ucee8\ud53c\uadf8\ub9f5\uc744 \uc798\ubabb \uad6c\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc783\uc740 \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131\uc790\uc758 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub4dc\ubb38 \uacbd\uc6b0\uc774\uae34 \ud558\uc9c0\ub9cc AWS \ub9ac\uc804\uc5d0\uc11c IAM \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 bearer \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \u201csuper-admin\u201d \uacc4\uc815\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. kubectl -n kube-system create serviceaccount super-admin super-admin cluster-admin \uc5ed\ud560\uc744 \ubd80\uc5ec\ud558\ub294 \uc5ed\ud560 \ubc14\uc778\ub529\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. kubectl create clusterrolebinding super-admin-rb --clusterrole=cluster-admin --serviceaccount=kube-system:super-admin \uc11c\ube44\uc2a4 \uacc4\uc815 \uc2dc\ud06c\ub9bf \uac00\uc838\uc624\uae30: secret_name=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath=' {.secrets [0] .name} '` \uc2dc\ud06c\ub9bf\uacfc \uad00\ub828\ub41c \ud1a0\ud070 \uac00\uc838\uc624\uae30: SECRET_NAME=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath='{.secrets[0].name}'` \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \ud1a0\ud070\uc744 `kubeconfig'\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4. TOKEN=`kubectl -n kube-system get secret $SECRET_NAME -o jsonpath='{.data.token}'| base64 --decode` super-admin \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d kubeconfig \uc5d0\uc11c \ud604\uc7ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. kubectl config set-credentials super-admin --token=$TOKEN \ucd5c\uc885 kubeconfig \ub294 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. apiVersion: v1 clusters: - cluster: certificate-authority-data:<REDACTED> server: https://<CLUSTER>.gr7.us-west-2.eks.amazonaws.com name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> contexts: - context: cluster: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> user: super-admin name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> current-context: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> kind: Config preferences: {} users: #- name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> # user: # exec: # apiVersion: client.authentication.k8s.io/v1alpha1 # args: # - --region # - us-west-2 # - eks # - get-token # - --cluster-name # - <<cluster name>> # command: aws # env: null - name: super-admin user: token: <<super-admin sa\u2019s secret>> Admission Webhooks \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\ub294 admission webhooks \uac80\uc99d \ubc0f \ubcc0\uacbd \uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 admission webhooks\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \ud655\uc7a5\ud558\uace0 API\uc5d0\uc11c \uac1d\uccb4\ub97c \uc2b9\uc778\ud558\uae30 \uc804\uc5d0 \uac1d\uccb4\ub97c \uac80\uc99d\ud558\uac70\ub098 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc6f9\ud6c4\ud06c\ub97c \uc798\ubabb \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc758 \uc911\uc694\ud55c \uc791\uc5c5\uc774 \ucc28\ub2e8\ub418\uc5b4 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \ubd88\uc548\uc815\ud574\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud06c\ub9ac\ud2f0\uceec \uc791\uc5c5\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \u201ccatch-all\u201d \uc6f9\ud6c5\uc744 \uc124\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. - name: \"pod-policy.example.com\" rules: - apiGroups: [\"*\"] apiVersions: [\"*\"] operations: [\"*\"] resources: [\"*\"] scope: \"*\" \ub610\ub294 \uc6f9\ud6c4\ud06c\uc5d0 30\ucd08 \ubbf8\ub9cc\uc758 \uc81c\ud55c \uc2dc\uac04\uc744 \uac00\uc9c4 Fail Open \uc815\ucc45\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc5ec \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\uc758 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624. \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls \uac00 \uc788\ub294 \ud30c\ub4dc\ub97c \ucc28\ub2e8\ud55c\ub2e4. \u00b6 Sysctl \uc740 \uc0ac\uc6a9\uc790\uac00 \ub7f0\ud0c0\uc784 \uc911\uc5d0 \ucee4\ub110 \ud30c\ub77c\ubbf8\ud130\ub97c \uc218\uc815\ud560 \uc218 \uc788\ub294 \ub9ac\ub205\uc2a4 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucee4\ub110 \ub9e4\uac1c\ubcc0\uc218\ub294 \ub124\ud2b8\uc6cc\ud06c, \ud30c\uc77c \uc2dc\uc2a4\ud15c, \uac00\uc0c1 \uba54\ubaa8\ub9ac, \ud504\ub85c\uc138\uc2a4 \uad00\ub9ac \ub4f1 \uc6b4\uc601 \uccb4\uc81c \ub3d9\uc791\uc758 \ub2e4\uc591\ud55c \uce21\uba74\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc5d0 sysctl \ud504\ub85c\ud544\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4.\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 systcls \ub97c \uc548\uc804\ud55c \uac83\uacfc \uc548\uc804\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \ubd84\ub958\ud569\ub2c8\ub2e4. \uc548\uc804\ud55c sysctls \ub294 \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud30c\ub4dc\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc9c0\uc815\ub418\uba70, \uc774\ub97c \uc124\uc815\ud574\ub3c4 \ub178\ub4dc\uc758 \ub2e4\ub978 \ud30c\ub4dc\ub098 \ub178\ub4dc \uc790\uccb4\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctl\uc740 \ub2e4\ub978 \ud30c\ub4dc\ub97c \ubc29\ud574\ud558\uac70\ub098 \ub178\ub4dc\ub97c \ubd88\uc548\uc815\ud558\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc73c\ubbc0\ub85c \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\ubbc0\ub85c, kubelet\uc740 \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctl \ud504\ub85c\ud544\uc744 \uac00\uc9c4 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uba74, \uc2a4\ucf00\uc904\ub7ec\ub294 \ud574\ub2f9 \ud30c\ub4dc\ub97c \ub178\ub4dc\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \ud560\ub2f9\ud558\uc9c0\ub9cc \ub178\ub4dc\ub294 \uc2e4\ud589\uc5d0 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc774 \ubb34\ud55c \ub8e8\ud504\ub294 \uad81\uadf9\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubd80\ub2f4\uc744 \uc8fc\uc5b4 \ud074\ub7ec\uc2a4\ud130\ub97c \ubd88\uc548\uc815\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls \uac00 \uc788\ub294 \ud30c\ub4dc\ub97c \uac70\ubd80\ud558\ub824\uba74 OPA \uac8c\uc774\ud2b8\ud0a4\ud37c \ub610\ub294 Kyverno \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac \u00b6 2021\ub144 4\uc6d4\ubd80\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uc8fc\uae30\uac00 \uc5f0\uac04 4\uac1c \ub9b4\ub9ac\uc2a4(\ubd84\uae30\uc5d0 \ud55c \ubc88)\uc5d0\uc11c \uc5f0\uac04 \uc138 \ubc88\uc758 \ub9b4\ub9ac\uc2a4\ub85c \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc0c8 \ub9c8\uc774\ub108 \ubc84\uc804(\uc608: 1. 21 \ub610\ub294 1. 22 ) \uc740 \ub300\ub7b5 15\uc8fc\ub9c8\ub2e4 \ub9b4\ub9ac\uc2a4\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.19\ubd80\ud130 \uac01 \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \ucc98\uc74c \ub9b4\ub9ac\uc2a4\ub41c \ud6c4 \uc57d 12\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucd5c\uc18c \ub450 \uac1c\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \uc6cc\ucee4 \ub178\ub4dc \uac04\uc758 \ud638\ud658\uc131\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc9c0\uc6d0\uc5d0 \ub530\ub77c EKS\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \ucd5c\uc18c 3\uac1c\uc758 \ud504\ub85c\ub355\uc158 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc81c\uacf5\ud558\uba70, \ub124 \ubc88\uc9f8 \ubc84\uc804\uc740 \uc9c0\uc6d0 \uc911\ub2e8\ub420 \uc608\uc815\uc785\ub2c8\ub2e4. EKS\ub294 \uc9c0\uc6d0 \uc885\ub8cc\uc77c \ucd5c\uc18c 60\uc77c \uc804\uc5d0 \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc758 \uc9c0\uc6d0 \uc911\ub2e8\uc744 \ubc1c\ud45c\ud569\ub2c8\ub2e4. \uc9c0\uc6d0 \uc885\ub8cc\uc77c\uc774 \ub418\uba74 \uc9c0\uc6d0 \uc911\ub2e8\ub41c \ubc84\uc804\uc744 \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub294 EKS\uac00 \uc9c0\uc6d0\ud558\ub294 \ub2e4\uc74c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8\ub418\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc640 EKS \ud50c\ub7ab\ud3fc \ubc84\uc804 \ubaa8\ub450\uc5d0 \ub300\ud574 in-place \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc6b4\uc601\uc774 \ub2e8\uc21c\ud654\ub418\uace0 \ub2e4\uc6b4\ud0c0\uc784 \uc5c6\uc774 \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud558\uace0 \ubcf4\uc548 \ud328\uce58\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc5d0\ub294 \uc911\uc694\ud55c \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc801\uc6a9\ub418\uba70 \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc6d0\ud65c\ud558\uac8c \uc804\ud658\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac\ub97c \uc704\ud55c \ud504\ub85c\uc138\uc2a4\ub97c \uc798 \ubb38\uc11c\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c in-place \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VMware\uc758 Velero \uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \ubc31\uc5c5 \ubc0f \ubcf5\uc6d0 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ubc84\uc804\uc5d0\uc11c\ub294 \uae30\uc874 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub294 API\uc640 \uae30\ub2a5\uc744 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc9c0\uc6d0 \uc911\ub2e8 \uc815\ucc45 \uc744 \uc219\uc9c0\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubcc0\uacbd \ub85c\uadf8 \ubc0f Amazon EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc744 \uac80\ud1a0\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ubbf8\uce58\ub294 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \ud30c\uc545\ud574\uc57c \ud569\ub2c8\ub2e4. \ube44\ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud558\uace0 \ud604\uc7ac \uc6cc\ud06c\ub85c\ub4dc \ubc0f \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \ud30c\uc545\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc0c8 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uc804\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud1b5\ud569\uc758 \ud638\ud658\uc131\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 \uc9c0\uc18d\uc801 \ud1b5\ud569 \uc6cc\ud06c\ud50c\ub85c\ub97c \uad6c\ucd95\ud558\uc5ec \ud14c\uc2a4\ud2b8\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub97c \uac80\ud1a0\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc560\ub4dc\uc628\uacfc \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc758 \ud638\ud658\uc131\uc744 \uac80\uc99d\ud558\uc2ed\uc2dc\uc624. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45 \uc744 \ucf1c\uace0 \ub85c\uadf8\uc5d0\uc11c \uc624\ub958\uac00 \uc788\ub294\uc9c0 \uac80\ud1a0\ud574 \ubcf4\uc2ed\uc2dc\uc624. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud560 \ub54c\ub294 eksctl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. eksctl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778, \uc560\ub4dc\uc628, \uc6cc\ucee4 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0\ub294 \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. EKS \uc6cc\ucee4 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub294 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ud504\ub85c\uc138\uc2a4\ub97c \uc790\ub3d9\ud654\ud558\ub824\uba74 EKS \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 EKS on Fargate \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud544\uc694\ud55c \uacbd\uc6b0 kubectl convert \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub2e4\ub978 API \ubc84\uc804 \uac04\uc5d0 \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589 \u00b6 EKS\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc778\uc2a4\ud134\uc2a4\uc758 \ubd80\ud558\ub97c \ub2a5\ub3d9\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uc5ec \uace0\uc131\ub2a5\uc744 \ubcf4\uc7a5\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud560 \ub54c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc0f AWS \uc11c\ube44\uc2a4\uc758 \ud560\ub2f9\ub7c9 \ub0b4\uc5d0\uc11c \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc131\ub2a5 \ubb38\uc81c\uc640 \ud55c\uacc4\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. ProjectCalico \ud300\uc5d0\uc11c \uc218\ud589\ud55c \ud14c\uc2a4\ud2b8 \uc5d0 \ub530\ub974\uba74, \uc11c\ube44\uc2a4\uac00 1000\uac1c \uc774\uc0c1\uc778 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c iptables \ubaa8\ub4dc\uc5d0\uc11c kube-proxy \ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc9c0\uc5f0\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\uacb0 \ubc29\ubc95\uc740 ipvs \ubaa8\ub4dc\uc5d0\uc11c kube-proxy \ub85c \uc2e4\ud589 \uc73c\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. CNI\uc5d0\uc11c \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub97c \uc694\uccad\ud574\uc57c \ud558\uac70\ub098 \uc0c8 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\uc8fc \uc0dd\uc131\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 EC2 API \uc694\uccad \uc81c\ud55c \uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IP \uc8fc\uc18c\ub97c \uce90\uc2f1\ud558\ub3c4\ub85d CNI\ub97c \uad6c\uc131\ud558\uba74 EC2 API \ud638\ucd9c\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc870\uc815 \uc774\ubca4\ud2b8\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud55c\ub3c4 \ubc0f \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc54c\uc544\ubcf4\uae30 \u00b6 AWS\ub294 \uc2e4\uc218\ub85c \ub9ac\uc18c\uc2a4\ub97c \uacfc\ub3c4\ud558\uac8c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc11c\ube44\uc2a4 \ud55c\ub3c4(\ud300\uc774 \uc694\uccad\ud560 \uc218 \uc788\ub294 \uac01 \ub9ac\uc18c\uc2a4 \uc218\uc758 \uc0c1\ud55c\uc120)\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. Amazon EKS \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc5d0\ub294 \uc11c\ube44\uc2a4 \ud55c\ub3c4\uac00 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. AWS \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ud55c\ub3c4, Soft limit\uac00 \uc788\uc2b5\ub2c8\ub2e4. Hard limit\ub294 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uacc4\ud560 \ub54c\ub294 \uc774\ub7ec\ud55c \uac12\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc11c\ube44\uc2a4 \uc81c\ud55c\uc744 \uc815\uae30\uc801\uc73c\ub85c \uac80\ud1a0\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uacc4 \uc911\uc5d0 \ud1b5\ud569\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158 \uc5d4\uc9c4\uc758 \uc81c\ud55c \uc678\uc5d0\ub3c4 ELB(Elastic Load Balancing) \ubc0f Amazon VPC\uc640 \uac19\uc740 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. EC2 \ud55c\ub3c4\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EC2 \uc11c\ube44\uc2a4 \uc81c\ud55c \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uac01 EC2 \uc778\uc2a4\ud134\uc2a4\ub294 Amazon \uc81c\uacf5 DNS \uc11c\ubc84 \ub85c \uc804\uc1a1\ud560 \uc218 \uc788\ub294 \ud328\ud0b7 \uc218\ub97c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 \ucd08\ub2f9 \ucd5c\ub300 1024 \ud328\ud0b7\uc73c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. EKS \ud658\uacbd\uc5d0\uc11c etcd \uc2a4\ud1a0\ub9ac\uc9c0 \ud55c\ub3c4\ub294 \uc5c5\uc2a4\ud2b8\ub9bc \uc9c0\uce68 \uc5d0 \ub530\ub77c 8GB \uc785\ub2c8\ub2e4. etcd db \ud06c\uae30\ub97c \ucd94\uc801\ud558\ub824\uba74 etcd_db_total_size_in_bytes \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc2ed\uc2dc\uc624. \uc774 \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc124\uc815\ud558\ub824\uba74 \uacbd\uace0 \uaddc\uce59 etcdBackendQuotaLowSpace \ubc0f etcdExcessiveDatabaseGrowth \ub97c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \ub9ac\uc18c\uc2a4: \u00b6 Amazon EKS \uc6cc\ucee4 \ub178\ub4dc\uc758 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud55c \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \uc124\uba85 \uc544\ub9c8\uc874 EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc81c\uc5b4 AWS re:Invent 2019: \uc544\ub9c8\uc874 EKS \uc5b8\ub354 \ub354 \ud6c4\ub4dc (CON421-R1)","title":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778"},{"location":"reliability/docs/controlplane.kr/#eks","text":"Amazon Elastic Kubernetes Service(EKS)\ub294 \uc790\uccb4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub610\ub294 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc124\uce58, \uc6b4\uc601 \ubc0f \uc720\uc9c0 \uad00\ub9ac\ud560 \ud544\uc694 \uc5c6\uc774 AWS\uc5d0\uc11c \uc27d\uac8c \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc2e4\ud589\ud558\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uaddc\uc815 \uc900\uc218 \uc778\uc99d\uc744 \ubc1b\uc558\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaddc\uc815 \uc900\uc218\ub97c \ud1b5\ud574 EKS\ub294 EC2 \ub610\ub294 \uc628\ud504\ub808\ubbf8\uc2a4\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 \ucee4\ubba4\ub2c8\ud2f0 \ubc84\uc804\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uae30\uc874 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 Amazon EKS\uc640 \ud638\ud658\ub429\ub2c8\ub2e4. EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub178\ub4dc\uc758 \uac00\uc6a9\uc131\uacfc \ud655\uc7a5\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud558\uace0 \ube44\uc815\uc0c1 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ub300\uccb4\ud569\ub2c8\ub2e4.","title":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778"},{"location":"reliability/docs/controlplane.kr/#eks_1","text":"EKS \uc544\ud0a4\ud14d\ucc98\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uac00\uc6a9\uc131\uacfc \ub0b4\uad6c\uc131\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub294 \ub2e8\uc77c \uc7a5\uc560 \uc9c0\uc810\uc744 \uc81c\uac70\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. EKS\ub85c \uad00\ub9ac\ub418\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 EKS \uad00\ub9ac\ud615 VPC \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ub178\ub4dc, \uae30\ud0c0 \ud074\ub7ec\uc2a4\ud130\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. API \uc11c\ubc84, \uc2a4\ucf00\uc904\ub7ec, kube-controller-manager \uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\ub97c \uc2e4\ud589\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ub178\ub4dc\ub294 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS\ub294 AWS \ub9ac\uc804 \ub0b4\uc758 \ubcc4\uac1c\uc758 \uac00\uc6a9 \uc601\uc5ed(AZ)\uc5d0\uc11c \ucd5c\uc18c 2\uac1c\uc758 API \uc11c\ubc84 \ub178\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub0b4\uad6c\uc131\uc744 \uc704\ud574 etcd \uc11c\ubc84 \ub178\ub4dc\ub3c4 3\uac1c\uc758 AZ\uc5d0 \uac78\uce5c \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \uadf8\ub8f9\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. EKS\ub294 \uac01 AZ\uc5d0\uc11c NAT \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc2e4\ud589\ud558\uace0, API \uc11c\ubc84 \ubc0f etcd \uc11c\ubc84\ub294 \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \uc544\ud0a4\ud14d\ucc98\ub294 \ub2e8\uc77c AZ\uc758 \uc774\ubca4\ud2b8\uac00 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 Amazon EKS\ub294 \ud074\ub7ec\uc2a4\ud130\uc640 \ud1b5\uc2e0\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\ub97c \uc704\ud55c \uace0\uac00\uc6a9\uc131 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4( kubectl \uacfc \uac19\uc740 \ub3c4\uad6c \uc0ac\uc6a9). \uad00\ub9ac\ud615 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 NLB\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\uc758 \ubd80\ud558\ub97c \ubd84\uc0b0\ud569\ub2c8\ub2e4. \ub610\ud55c EKS\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc640\uc758 \uc6d0\ud65c\ud55c \ud1b5\uc2e0\uc744 \uc704\ud574 \uc11c\ub85c \ub2e4\ub978 AZ\uc5d0 \ub450 \uac1c\uc758 ENI \ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 API \uc11c\ubc84 \ub294 \ud37c\ube14\ub9ad \uc778\ud130\ub137(\ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0ac\uc6a9) \ub610\ub294 VPC(EKS \uad00\ub9ac ENI \uc0ac\uc6a9) \ub610\ub294 \ub458 \ub2e4\ub97c \ud1b5\ud574 \uc5f0\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uc640 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec API \uc11c\ubc84\uc5d0 \uc5f0\uacb0\ud558\ub4e0 EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 ENI\ub97c \uc0ac\uc6a9\ud558\ub4e0 \uad00\uacc4\uc5c6\uc774 \uc5f0\uacb0\uc744 \uc704\ud55c \uc911\ubcf5 \uacbd\ub85c\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"EKS \uc544\ud0a4\ud14d\ucc98"},{"location":"reliability/docs/controlplane.kr/#_1","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/controlplane.kr/#_2","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc131\ub2a5\uc5d0 \ub300\ud55c \ud1b5\ucc30\ub825\uc744 \uc5bb\uace0 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\uc815\uc0c1 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc798\ubabb \uc791\uc131\ub41c \ucee8\ud2b8\ub864\ub7ec\ub294 API \uc11c\ubc84\uc5d0 \uacfc\ubd80\ud558\ub97c \uc77c\uc73c\ucf1c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 /metrics \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad\uc744 \ub178\ucd9c\ud569\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ucd9c\ub41c \uba54\ud2b8\ub9ad\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get --raw /metrics \uc774\ub7ec\ud55c \uc9c0\ud45c\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud14d\uc2a4\ud2b8 \ud615\uc2dd \uc73c\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc218\uc9d1\ud558\uace0 \uc800\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2020\ub144 5\uc6d4, CloudWatch\ub294 CloudWatch Container Insights\uc5d0 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc9c0\ud45c \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c Amazon CloudWatch\ub97c \uc0ac\uc6a9\ud558\uc5ec EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 Prometheus \uc2a4\ud06c\ub7a9 \ub300\uc0c1 \ucd94\uac00 \uc790\uc2b5\uc11c: \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 KPI \uc11c\ubc84 \uc9c0\ud45c \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc9c0\ud45c\ub97c \uc218\uc9d1\ud558\uace0 CloudWatch \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc0dd\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uba54\ud2b8\ub9ad\uc740 \uc5ec\uae30 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, apiserver_request_duration_seconds \ub294 API \uc694\uccad\uc744 \uc2e4\ud589\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uba54\ud2b8\ub9ad \ubaa8\ub2c8\ud130\ub9c1"},{"location":"reliability/docs/controlplane.kr/#api","text":"\uba54\ud2b8\ub9ad \uc124\uba85 apiserver_request_total \uac01 \uba54\uc18c\ub4dc, \ub4dc\ub77c\uc774 \ub7f0 \uac12, \uadf8\ub8f9, \ubc84\uc804, \ub9ac\uc18c\uc2a4, \ubc94\uc704, \uad6c\uc131 \uc694\uc18c, HTTP \uc751\ub2f5 \ucf54\ub4dc\uc5d0 \ub300\ud574 \uad6c\ubd84\ub41c API \uc11c\ubc84 \uc694\uccad \uce74\uc6b4\ud130\uc785\ub2c8\ub2e4. apiserver_request_duration_seconds* \uac01 \uba54\uc18c\ub4dc, \ub4dc\ub77c\uc774 \ub7f0 \uac12, \uadf8\ub8f9, \ubc84\uc804, \ub9ac\uc18c\uc2a4, \ud558\uc704 \ub9ac\uc18c\uc2a4, \ubc94\uc704, \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc751\ub2f5 \uc9c0\uc5f0 \uc2dc\uac04 \ubd84\ud3ec(\ucd08 \ub2e8\uc704) apiserver_admission_controller_admission_duration_seconds admission controller \uc9c0\uc5f0 \uc2dc\uac04 \ud788\uc2a4\ud1a0\uadf8\ub7a8(\ucd08), \uc774\ub984\uc73c\ub85c \uc2dd\ubcc4\ub418\uba70 \uac01 \uc791\uc5c5, API \ub9ac\uc18c\uc2a4 \ubc0f \uc720\ud615\ubcc4\ub85c \uad6c\ubd84\ub428(\uac80\uc99d \ub610\ub294 \uc2b9\uc778). apiserver_admission_webhook_rejection_count admission webhook \uac70\ubd80 \uac74\uc218.\uc774\ub984, \uc791\uc5c5, \uac70\ubd80 \ucf54\ub4dc, \uc720\ud615(\uac80\uc99d \ub610\ub294 \uc2b9\uc778), \uc624\ub958 \uc720\ud615(calling_webhook_error, apiserver_internal_error, no_error) \uc73c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. rest_client_request_duration_seconds \uc694\uccad \uc9c0\uc5f0 \uc2dc\uac04(\ucd08)\ub3d9\uc0ac\uc640 URL\ubcc4\ub85c \ubd84\ub958\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. rest_client_requests_total \uc0c1\ud0dc \ucf54\ub4dc, \uba54\uc11c\ub4dc, \ud638\uc2a4\ud2b8\ubcc4\ub85c \ud30c\ud2f0\uc158\uc744 \ub098\ub208 HTTP \uc694\uccad \uc218","title":"API \uc11c\ubc84"},{"location":"reliability/docs/controlplane.kr/#etcd","text":"\uba54\ud2b8\ub9ad \uc124\uba85 etcd_request_duration_seconds \uac01 \uc791\uc5c5 \ubc0f \uac1d\uccb4 \uc720\ud615\uc5d0 \ub300\ud55c Etcd \uc694\uccad \uc9c0\uc5f0 \uc2dc\uac04(\ucd08) etcd_db_total_size_in_bytes \ub610\ub294 apiserver_storage_db_total_size_in_bytes (EKS v1.26\ubd80\ud130 \uc2dc\uc791) Etcd \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud06c\uae30 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubaa8\ub2c8\ud130\ub9c1 \uac1c\uc694 \ub300\uc2dc\ubcf4\ub4dc \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \uc694\uccad\uacfc \uc9c0\uc5f0 \uc2dc\uac04 \ubc0f etcd \uc9c0\uc5f0 \uc2dc\uac04 \uba54\ud2b8\ub9ad\uc744 \uc2dc\uac01\ud654\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ub2e4\uc74c \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec etcd\uc758 \ud604\uc7ac \ud06c\uae30\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ucffc\ub9ac\ub294 API \uba54\ud2b8\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\ub294 kube-apiserver \ub77c\ub294 \uc791\uc5c5\uc774 \uc788\uace0 EKS \ubc84\uc804\uc774 v1.26 \ubbf8\ub9cc\uc778 \uac83\uc73c\ub85c \uac00\uc815\ud569\ub2c8\ub2e4. max(etcd_db_total_size_in_bytes{job=\"kube-apiserver\"} / (8 * 1024 * 1024 * 1024))","title":"etcd"},{"location":"reliability/docs/controlplane.kr/#_3","text":"EKS\ub294 \ud604\uc7ac bearer/\uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \uacfc \uc6f9\ud6c4\ud06c \ud1a0\ud070 \uc778\uc99d \uc744 \uc0ac\uc6a9\ud558\ub294 IAM \uc778\uc99d \ub4f1 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \ud638\ucd9c\ud558\uba74 \uc6f9\ud6c4\ud06c\ub294 \uc694\uccad\uc5d0 \ud3ec\ud568\ub41c \uc778\uc99d \ud1a0\ud070\uc744 IAM\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4. base 64\ub85c \uc11c\uba85\ub41c URL\uc778 \ud1a0\ud070\uc740 AWS \uba85\ub839\uc904 \uc778\ud130\ud398\uc774\uc2a4( AWS CLI )\uc5d0 \uc758\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 IAM \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc740 \uc790\ub3d9\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc804\uccb4 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc2b5\ub2c8\ub2e4. aws-auth configmap \uc744 \ud3b8\uc9d1\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws-auth \ucee8\ud53c\uadf8\ub9f5\uc744 \uc798\ubabb \uad6c\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc783\uc740 \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131\uc790\uc758 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub4dc\ubb38 \uacbd\uc6b0\uc774\uae34 \ud558\uc9c0\ub9cc AWS \ub9ac\uc804\uc5d0\uc11c IAM \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0\uc5d0\ub3c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 bearer \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \u201csuper-admin\u201d \uacc4\uc815\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. kubectl -n kube-system create serviceaccount super-admin super-admin cluster-admin \uc5ed\ud560\uc744 \ubd80\uc5ec\ud558\ub294 \uc5ed\ud560 \ubc14\uc778\ub529\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. kubectl create clusterrolebinding super-admin-rb --clusterrole=cluster-admin --serviceaccount=kube-system:super-admin \uc11c\ube44\uc2a4 \uacc4\uc815 \uc2dc\ud06c\ub9bf \uac00\uc838\uc624\uae30: secret_name=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath=' {.secrets [0] .name} '` \uc2dc\ud06c\ub9bf\uacfc \uad00\ub828\ub41c \ud1a0\ud070 \uac00\uc838\uc624\uae30: SECRET_NAME=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath='{.secrets[0].name}'` \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \ud1a0\ud070\uc744 `kubeconfig'\uc5d0 \ucd94\uac00\ud569\ub2c8\ub2e4. TOKEN=`kubectl -n kube-system get secret $SECRET_NAME -o jsonpath='{.data.token}'| base64 --decode` super-admin \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d kubeconfig \uc5d0\uc11c \ud604\uc7ac \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. kubectl config set-credentials super-admin --token=$TOKEN \ucd5c\uc885 kubeconfig \ub294 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4. apiVersion: v1 clusters: - cluster: certificate-authority-data:<REDACTED> server: https://<CLUSTER>.gr7.us-west-2.eks.amazonaws.com name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> contexts: - context: cluster: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> user: super-admin name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> current-context: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> kind: Config preferences: {} users: #- name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> # user: # exec: # apiVersion: client.authentication.k8s.io/v1alpha1 # args: # - --region # - us-west-2 # - eks # - get-token # - --cluster-name # - <<cluster name>> # command: aws # env: null - name: super-admin user: token: <<super-admin sa\u2019s secret>>","title":"\ud074\ub7ec\uc2a4\ud130 \uc778\uc99d"},{"location":"reliability/docs/controlplane.kr/#admission-webhooks","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\ub294 admission webhooks \uac80\uc99d \ubc0f \ubcc0\uacbd \uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 admission webhooks\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc0ac\uc6a9\uc790\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \ud655\uc7a5\ud558\uace0 API\uc5d0\uc11c \uac1d\uccb4\ub97c \uc2b9\uc778\ud558\uae30 \uc804\uc5d0 \uac1d\uccb4\ub97c \uac80\uc99d\ud558\uac70\ub098 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc6f9\ud6c4\ud06c\ub97c \uc798\ubabb \uad6c\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc758 \uc911\uc694\ud55c \uc791\uc5c5\uc774 \ucc28\ub2e8\ub418\uc5b4 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \ubd88\uc548\uc815\ud574\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud06c\ub9ac\ud2f0\uceec \uc791\uc5c5\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc73c\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \u201ccatch-all\u201d \uc6f9\ud6c5\uc744 \uc124\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. - name: \"pod-policy.example.com\" rules: - apiGroups: [\"*\"] apiVersions: [\"*\"] operations: [\"*\"] resources: [\"*\"] scope: \"*\" \ub610\ub294 \uc6f9\ud6c4\ud06c\uc5d0 30\ucd08 \ubbf8\ub9cc\uc758 \uc81c\ud55c \uc2dc\uac04\uc744 \uac00\uc9c4 Fail Open \uc815\ucc45\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc5ec \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\uc758 \uc911\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ud558\uc2ed\uc2dc\uc624.","title":"Admission Webhooks"},{"location":"reliability/docs/controlplane.kr/#sysctls","text":"Sysctl \uc740 \uc0ac\uc6a9\uc790\uac00 \ub7f0\ud0c0\uc784 \uc911\uc5d0 \ucee4\ub110 \ud30c\ub77c\ubbf8\ud130\ub97c \uc218\uc815\ud560 \uc218 \uc788\ub294 \ub9ac\ub205\uc2a4 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ucee4\ub110 \ub9e4\uac1c\ubcc0\uc218\ub294 \ub124\ud2b8\uc6cc\ud06c, \ud30c\uc77c \uc2dc\uc2a4\ud15c, \uac00\uc0c1 \uba54\ubaa8\ub9ac, \ud504\ub85c\uc138\uc2a4 \uad00\ub9ac \ub4f1 \uc6b4\uc601 \uccb4\uc81c \ub3d9\uc791\uc758 \ub2e4\uc591\ud55c \uce21\uba74\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\uc5d0 sysctl \ud504\ub85c\ud544\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub2e4.\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 systcls \ub97c \uc548\uc804\ud55c \uac83\uacfc \uc548\uc804\ud558\uc9c0 \uc54a\uc740 \uac83\uc73c\ub85c \ubd84\ub958\ud569\ub2c8\ub2e4. \uc548\uc804\ud55c sysctls \ub294 \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud30c\ub4dc\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc9c0\uc815\ub418\uba70, \uc774\ub97c \uc124\uc815\ud574\ub3c4 \ub178\ub4dc\uc758 \ub2e4\ub978 \ud30c\ub4dc\ub098 \ub178\ub4dc \uc790\uccb4\uc5d0\ub294 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctl\uc740 \ub2e4\ub978 \ud30c\ub4dc\ub97c \ubc29\ud574\ud558\uac70\ub098 \ub178\ub4dc\ub97c \ubd88\uc548\uc815\ud558\uac8c \ub9cc\ub4e4 \uc218 \uc788\uc73c\ubbc0\ub85c \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls \uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ube44\ud65c\uc131\ud654\ub418\ubbc0\ub85c, kubelet\uc740 \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctl \ud504\ub85c\ud544\uc744 \uac00\uc9c4 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub4dc\ub97c \uc0dd\uc131\ud558\uba74, \uc2a4\ucf00\uc904\ub7ec\ub294 \ud574\ub2f9 \ud30c\ub4dc\ub97c \ub178\ub4dc\uc5d0 \ubc18\ubcf5\uc801\uc73c\ub85c \ud560\ub2f9\ud558\uc9c0\ub9cc \ub178\ub4dc\ub294 \uc2e4\ud589\uc5d0 \uc2e4\ud328\ud569\ub2c8\ub2e4. \uc774 \ubb34\ud55c \ub8e8\ud504\ub294 \uad81\uadf9\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubd80\ub2f4\uc744 \uc8fc\uc5b4 \ud074\ub7ec\uc2a4\ud130\ub97c \ubd88\uc548\uc815\ud558\uac8c \ub9cc\ub4ed\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls \uac00 \uc788\ub294 \ud30c\ub4dc\ub97c \uac70\ubd80\ud558\ub824\uba74 OPA \uac8c\uc774\ud2b8\ud0a4\ud37c \ub610\ub294 Kyverno \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"\uc548\uc804\ud558\uc9c0 \uc54a\uc740 sysctls\uac00 \uc788\ub294 \ud30c\ub4dc\ub97c \ucc28\ub2e8\ud55c\ub2e4."},{"location":"reliability/docs/controlplane.kr/#_4","text":"2021\ub144 4\uc6d4\ubd80\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uc8fc\uae30\uac00 \uc5f0\uac04 4\uac1c \ub9b4\ub9ac\uc2a4(\ubd84\uae30\uc5d0 \ud55c \ubc88)\uc5d0\uc11c \uc5f0\uac04 \uc138 \ubc88\uc758 \ub9b4\ub9ac\uc2a4\ub85c \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc0c8 \ub9c8\uc774\ub108 \ubc84\uc804(\uc608: 1. 21 \ub610\ub294 1. 22 ) \uc740 \ub300\ub7b5 15\uc8fc\ub9c8\ub2e4 \ub9b4\ub9ac\uc2a4\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.19\ubd80\ud130 \uac01 \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \ucc98\uc74c \ub9b4\ub9ac\uc2a4\ub41c \ud6c4 \uc57d 12\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucd5c\uc18c \ub450 \uac1c\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \uc6cc\ucee4 \ub178\ub4dc \uac04\uc758 \ud638\ud658\uc131\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc9c0\uc6d0\uc5d0 \ub530\ub77c EKS\ub294 \uc5b8\uc81c\ub4e0\uc9c0 \ucd5c\uc18c 3\uac1c\uc758 \ud504\ub85c\ub355\uc158 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc81c\uacf5\ud558\uba70, \ub124 \ubc88\uc9f8 \ubc84\uc804\uc740 \uc9c0\uc6d0 \uc911\ub2e8\ub420 \uc608\uc815\uc785\ub2c8\ub2e4. EKS\ub294 \uc9c0\uc6d0 \uc885\ub8cc\uc77c \ucd5c\uc18c 60\uc77c \uc804\uc5d0 \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc758 \uc9c0\uc6d0 \uc911\ub2e8\uc744 \ubc1c\ud45c\ud569\ub2c8\ub2e4. \uc9c0\uc6d0 \uc885\ub8cc\uc77c\uc774 \ub418\uba74 \uc9c0\uc6d0 \uc911\ub2e8\ub41c \ubc84\uc804\uc744 \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub294 EKS\uac00 \uc9c0\uc6d0\ud558\ub294 \ub2e4\uc74c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8\ub418\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc640 EKS \ud50c\ub7ab\ud3fc \ubc84\uc804 \ubaa8\ub450\uc5d0 \ub300\ud574 in-place \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc6b4\uc601\uc774 \ub2e8\uc21c\ud654\ub418\uace0 \ub2e4\uc6b4\ud0c0\uc784 \uc5c6\uc774 \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud558\uace0 \ubcf4\uc548 \ud328\uce58\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc5d0\ub294 \uc911\uc694\ud55c \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc801\uc6a9\ub418\uba70 \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc6d0\ud65c\ud558\uac8c \uc804\ud658\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac\ub97c \uc704\ud55c \ud504\ub85c\uc138\uc2a4\ub97c \uc798 \ubb38\uc11c\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c in-place \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. VMware\uc758 Velero \uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \ubc31\uc5c5 \ubc0f \ubcf5\uc6d0 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub294\ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0c8 \ubc84\uc804\uc5d0\uc11c\ub294 \uae30\uc874 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc190\uc0c1\uc2dc\ud0ac \uc218 \uc788\ub294 API\uc640 \uae30\ub2a5\uc744 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc9c0\uc6d0 \uc911\ub2e8 \uc815\ucc45 \uc744 \uc219\uc9c0\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubcc0\uacbd \ub85c\uadf8 \ubc0f Amazon EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc744 \uac80\ud1a0\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ubbf8\uce58\ub294 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \ud30c\uc545\ud574\uc57c \ud569\ub2c8\ub2e4. \ube44\ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ud14c\uc2a4\ud2b8\ud558\uace0 \ud604\uc7ac \uc6cc\ud06c\ub85c\ub4dc \ubc0f \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \ud30c\uc545\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc0c8 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc73c\ub85c \uc774\ub3d9\ud558\uae30 \uc804\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ud1b5\ud569\uc758 \ud638\ud658\uc131\uc744 \ud14c\uc2a4\ud2b8\ud558\ub294 \uc9c0\uc18d\uc801 \ud1b5\ud569 \uc6cc\ud06c\ud50c\ub85c\ub97c \uad6c\ucd95\ud558\uc5ec \ud14c\uc2a4\ud2b8\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc5c5\ub370\uc774\ud2b8 \ub97c \uac80\ud1a0\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc560\ub4dc\uc628\uacfc \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc758 \ud638\ud658\uc131\uc744 \uac80\uc99d\ud558\uc2ed\uc2dc\uc624. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uae45 \uc744 \ucf1c\uace0 \ub85c\uadf8\uc5d0\uc11c \uc624\ub958\uac00 \uc788\ub294\uc9c0 \uac80\ud1a0\ud574 \ubcf4\uc2ed\uc2dc\uc624. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud560 \ub54c\ub294 eksctl \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. eksctl \uc744 \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778, \uc560\ub4dc\uc628, \uc6cc\ucee4 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0\ub294 \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. EKS \uc6cc\ucee4 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub294 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ud504\ub85c\uc138\uc2a4\ub97c \uc790\ub3d9\ud654\ud558\ub824\uba74 EKS \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 EKS on Fargate \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud544\uc694\ud55c \uacbd\uc6b0 kubectl convert \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub2e4\ub978 API \ubc84\uc804 \uac04\uc5d0 \ubcc0\ud658 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4","title":"\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac"},{"location":"reliability/docs/controlplane.kr/#_5","text":"EKS\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc778\uc2a4\ud134\uc2a4\uc758 \ubd80\ud558\ub97c \ub2a5\ub3d9\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uc5ec \uace0\uc131\ub2a5\uc744 \ubcf4\uc7a5\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2e4\ud589\ud560 \ub54c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc0f AWS \uc11c\ube44\uc2a4\uc758 \ud560\ub2f9\ub7c9 \ub0b4\uc5d0\uc11c \ubc1c\uc0dd\ud560 \uc218 \uc788\ub294 \uc131\ub2a5 \ubb38\uc81c\uc640 \ud55c\uacc4\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. ProjectCalico \ud300\uc5d0\uc11c \uc218\ud589\ud55c \ud14c\uc2a4\ud2b8 \uc5d0 \ub530\ub974\uba74, \uc11c\ube44\uc2a4\uac00 1000\uac1c \uc774\uc0c1\uc778 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c iptables \ubaa8\ub4dc\uc5d0\uc11c kube-proxy \ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ub124\ud2b8\uc6cc\ud06c \uc9c0\uc5f0\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud574\uacb0 \ubc29\ubc95\uc740 ipvs \ubaa8\ub4dc\uc5d0\uc11c kube-proxy \ub85c \uc2e4\ud589 \uc73c\ub85c \uc804\ud658\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. CNI\uc5d0\uc11c \ud30c\ub4dc\uc758 IP \uc8fc\uc18c\ub97c \uc694\uccad\ud574\uc57c \ud558\uac70\ub098 \uc0c8 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc790\uc8fc \uc0dd\uc131\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 EC2 API \uc694\uccad \uc81c\ud55c \uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IP \uc8fc\uc18c\ub97c \uce90\uc2f1\ud558\ub3c4\ub85d CNI\ub97c \uad6c\uc131\ud558\uba74 EC2 API \ud638\ucd9c\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc870\uc815 \uc774\ubca4\ud2b8\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130 \uc2e4\ud589"},{"location":"reliability/docs/controlplane.kr/#_6","text":"AWS\ub294 \uc2e4\uc218\ub85c \ub9ac\uc18c\uc2a4\ub97c \uacfc\ub3c4\ud558\uac8c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc11c\ube44\uc2a4 \ud55c\ub3c4(\ud300\uc774 \uc694\uccad\ud560 \uc218 \uc788\ub294 \uac01 \ub9ac\uc18c\uc2a4 \uc218\uc758 \uc0c1\ud55c\uc120)\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. Amazon EKS \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc5d0\ub294 \uc11c\ube44\uc2a4 \ud55c\ub3c4\uac00 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. AWS \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \uc720\ud615\uc758 \ud55c\ub3c4, Soft limit\uac00 \uc788\uc2b5\ub2c8\ub2e4. Hard limit\ub294 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc124\uacc4\ud560 \ub54c\ub294 \uc774\ub7ec\ud55c \uac12\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc11c\ube44\uc2a4 \uc81c\ud55c\uc744 \uc815\uae30\uc801\uc73c\ub85c \uac80\ud1a0\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uacc4 \uc911\uc5d0 \ud1b5\ud569\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158 \uc5d4\uc9c4\uc758 \uc81c\ud55c \uc678\uc5d0\ub3c4 ELB(Elastic Load Balancing) \ubc0f Amazon VPC\uc640 \uac19\uc740 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. EC2 \ud55c\ub3c4\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EC2 \uc11c\ube44\uc2a4 \uc81c\ud55c \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uac01 EC2 \uc778\uc2a4\ud134\uc2a4\ub294 Amazon \uc81c\uacf5 DNS \uc11c\ubc84 \ub85c \uc804\uc1a1\ud560 \uc218 \uc788\ub294 \ud328\ud0b7 \uc218\ub97c \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4\ub2f9 \ucd08\ub2f9 \ucd5c\ub300 1024 \ud328\ud0b7\uc73c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. EKS \ud658\uacbd\uc5d0\uc11c etcd \uc2a4\ud1a0\ub9ac\uc9c0 \ud55c\ub3c4\ub294 \uc5c5\uc2a4\ud2b8\ub9bc \uc9c0\uce68 \uc5d0 \ub530\ub77c 8GB \uc785\ub2c8\ub2e4. etcd db \ud06c\uae30\ub97c \ucd94\uc801\ud558\ub824\uba74 etcd_db_total_size_in_bytes \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc2ed\uc2dc\uc624. \uc774 \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc124\uc815\ud558\ub824\uba74 \uacbd\uace0 \uaddc\uce59 etcdBackendQuotaLowSpace \ubc0f etcdExcessiveDatabaseGrowth \ub97c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud55c\ub3c4 \ubc0f \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \uc54c\uc544\ubcf4\uae30"},{"location":"reliability/docs/controlplane.kr/#_7","text":"Amazon EKS \uc6cc\ucee4 \ub178\ub4dc\uc758 \ud074\ub7ec\uc2a4\ud130 \ub124\ud2b8\uc6cc\ud0b9\uc5d0 \ub300\ud55c \uc774\ud574\ud558\uae30 \uc26c\uc6b4 \uc124\uba85 \uc544\ub9c8\uc874 EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc81c\uc5b4 AWS re:Invent 2019: \uc544\ub9c8\uc874 EKS \uc5b8\ub354 \ub354 \ud6c4\ub4dc (CON421-R1)","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4:"},{"location":"reliability/docs/controlplane/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} EKS Control Plane \u00b6 Amazon Elastic Kubernetes Service (EKS) is a managed Kubernetes service that makes it easy for you to run Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or worker nodes. It runs upstream Kubernetes and is certified Kubernetes conformant. This conformance ensures that EKS supports the Kubernetes APIs, just like the open-source community version that you can install on EC2 or on-premises. Existing applications running on upstream Kubernetes are compatible with Amazon EKS. EKS automatically manages the availability and scalability of the Kubernetes control plane nodes, and it automatically replaces unhealthy control plane nodes. EKS Architecture \u00b6 EKS architecture is designed to eliminate any single points of failure that may compromise the availability and durability of the Kubernetes control plane. The Kubernetes control plane managed by EKS runs inside an EKS managed VPC. The EKS control plane comprises the Kubernetes API server nodes, etcd cluster. Kubernetes API server nodes that run components like the API server, scheduler, and kube-controller-manager run in an auto-scaling group. EKS runs a minimum of two API server nodes in distinct Availability Zones (AZs) within in AWS region. Likewise, for durability, the etcd server nodes also run in an auto-scaling group that spans three AZs. EKS runs a NAT Gateway in each AZ, and API servers and etcd servers run in a private subnet. This architecture ensures that an event in a single AZ doesn\u2019t affect the EKS cluster's availability. When you create a new cluster, Amazon EKS creates a highly-available endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using tools like kubectl ). The managed endpoint uses NLB to load balance Kubernetes API servers. EKS also provisions two ENI s in different AZs to facilitate communication to your worker nodes. You can configure whether your Kubernetes cluster\u2019s API server is reachable from the public internet (using the public endpoint) or through your VPC (using the EKS-managed ENIs) or both. Whether users and worker nodes connect to the API server using the public endpoint or the EKS-managed ENI, there are redundant paths for connection. Recommendations \u00b6 Monitor Control Plane Metrics \u00b6 Monitoring Kubernetes API metrics can give you insights into control plane performance and identify issues. An unhealthy control plane can compromise the availability of the workloads running inside the cluster. For example, poorly written controllers can overload the API servers, affecting your application's availability. Kubernetes exposes control plane metrics at the /metrics endpoint. You can view the metrics exposed using kubectl : kubectl get --raw /metrics These metrics are represented in a Prometheus text format . You can use Prometheus to collect and store these metrics. In May 2020, CloudWatch added support for monitoring Prometheus metrics in CloudWatch Container Insights. So you can also use Amazon CloudWatch to monitor the EKS control plane. You can use Tutorial for Adding a New Prometheus Scrape Target: Prometheus KPI Server Metrics to collect metrics and create CloudWatch dashboard to monitor your cluster\u2019s control plane. You can find Kubernetes API server metrics here . For example, apiserver_request_duration_seconds can indicate how long API requests are taking to run. Consider monitoring these control plane metrics: API Server \u00b6 Metric Description apiserver_request_total Counter of apiserver requests broken out for each verb, dry run value, group, version, resource, scope, component, and HTTP response code. apiserver_request_duration_seconds* Response latency distribution in seconds for each verb, dry run value, group, version, resource, subresource, scope, and component. apiserver_admission_controller_admission_duration_seconds Admission controller latency histogram in seconds, identified by name and broken out for each operation and API resource and type (validate or admit). apiserver_admission_webhook_rejection_count Count of admission webhook rejections. Identified by name, operation, rejection_code, type (validating or admit), error_type (calling_webhook_error, apiserver_internal_error, no_error) rest_client_request_duration_seconds Request latency in seconds. Broken down by verb and URL. rest_client_requests_total Number of HTTP requests, partitioned by status code, method, and host. etcd \u00b6 Metric Description etcd_request_duration_seconds Etcd request latency in seconds for each operation and object type. etcd_db_total_size_in_bytes or apiserver_storage_db_total_size_in_bytes (starting with EKS v1.26) or apiserver_storage_size_bytes (starting with EKS v1.28) Etcd database size. Consider using the Kubernetes Monitoring Overview Dashboard to visualize and monitor Kubernetes API server requests and latency and etcd latency metrics. The following Prometheus query can be used to monitor the current size of etcd. The query assumes there is job called kube-apiserver for scraping metrics from API metrics endpoint and the EKS version is below v1.26. max(etcd_db_total_size_in_bytes{job=\"kube-apiserver\"} / (8 * 1024 * 1024 * 1024)) Cluster Authentication \u00b6 EKS currently supports two types of authentication: bearer/service account tokens and IAM authentication which uses webhook token authentication . When users call the Kubernetes API, a webhook passes an authentication token included in the request to IAM. The token, a base 64 signed URL, is generated by the AWS Command Line Interface ( AWS CLI ). The IAM user or role that creates the EKS Cluster automatically gets full access to the cluster. You can manage access to the EKS cluster by editing the aws-auth configmap . If you misconfigure the aws-auth configmap and lose access to the cluster, you can still use the cluster creator\u2019s user or role to access your EKS cluster. In the unlikely event that you cannot use the IAM service in the AWS region, you can also use the Kubernetes service account\u2019s bearer token to manage the cluster. Create a \u201csuper-admin\u201d account that is permitted to perform all actions in the cluster: kubectl -n kube-system create serviceaccount super-admin Create a role binding that gives super-admin cluster-admin role: kubectl create clusterrolebinding super-admin-rb --clusterrole=cluster-admin --serviceaccount=kube-system:super-admin Get service account\u2019s secret: SECRET_NAME=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath='{.secrets[0].name}'` Get token associated with the secret: TOKEN=`kubectl -n kube-system get secret $SECRET_NAME -o jsonpath='{.data.token}'| base64 --decode` Add service account and token to kubeconfig : kubectl config set-credentials super-admin --token=$TOKEN Set the current-context in kubeconfig to use super-admin account: kubectl config set-context --current --user=super-admin Final kubeconfig should look like this: apiVersion: v1 clusters: - cluster: certificate-authority-data:<REDACTED> server: https://<CLUSTER>.gr7.us-west-2.eks.amazonaws.com name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> contexts: - context: cluster: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> user: super-admin name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> current-context: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> kind: Config preferences: {} users: #- name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> # user: # exec: # apiVersion: client.authentication.k8s.io/v1alpha1 # args: # - --region # - us-west-2 # - eks # - get-token # - --cluster-name # - <<cluster name>> # command: aws # env: null - name: super-admin user: token: <<super-admin sa\u2019s secret>> Admission Webhooks \u00b6 Kubernetes has two types of admission webhooks: validating admission webhooks and mutating admission webhooks . These allow a user to extend the kubernetes API and validate or mutate objects before they are accepted by the API. Poor configurations of these webhooks can distabilize the EKS control plane by blocking cluster critical operations. In order to avoid impacting cluster critical operations either avoid setting \"catch-all\" webhooks like the following: - name: \"pod-policy.example.com\" rules: - apiGroups: [\"*\"] apiVersions: [\"*\"] operations: [\"*\"] resources: [\"*\"] scope: \"*\" Or make sure the webhook has a fail open policy with a timeout shorter than 30 seconds to ensure that if your webhook is unavailable it will not impair cluster critical workloads. Block Pods with unsafe sysctls \u00b6 Sysctl is a Linux utility that allows users to modify kernel parameters during runtime. These kernel parameters control various aspects of the operating system's behavior, such as network, file system, virtual memory, and process management. Kubernetes allows assigning sysctl profiles for Pods. Kubernetes categorizes systcls as safe and unsafe. Safe sysctls are namespaced in the container or Pod, and setting them doesn\u2019t impact other Pods on the node or the node itself. In contrast, unsafe sysctls are disabled by default since they can potentially disrupt other Pods or make the node unstable. As unsafe sysctls are disabled by default, the kubelet will not create a Pod with unsafe sysctl profile. If you create such a Pod, the scheduler will repeatedly assign such Pods to nodes, while the node fails to launch it. This infinite loop ultimately strains the cluster control plane, making the cluster unstable. Consider using OPA Gatekeeper or Kyverno to reject Pods with unsafe sysctls . Handling Cluster Upgrades \u00b6 Since April 2021, Kubernetes release cycle has been changed from four releases a year (once a quarter) to three releases a year. A new minor version (like 1. 21 or 1. 22 ) is released approximately every fifteen weeks . Starting with Kubernetes 1.19, each minor version is supported for approximately twelve months after it's first released.. Kubernetes supports compatibility between the control plane and worker nodes for at least two minor versions. In line with the Kubernetes community support for Kubernetes versions, EKS provides at least three production-ready versions of Kubernetes at any given time, with a fourth version in deprecation. EKS will announce the deprecation of a given Kubernetes minor version at least 60 days before the end of support date. On the end of support date, clusters running the deprecated version will begin to be automatically updated to the next EKS-supported version of Kubernetes. EKS performs in-place cluster upgrades for both Kubernetes and EKS platform versions . This simplifies cluster operations and lets you take advantage of the latest Kubernetes features and apply security patches, without any downtime. New Kubernetes versions introduce significant changes, and you cannot downgrade a cluster once upgraded. Having a well-documented process for handling cluster upgrades is necessary for a smooth transition to newer Kubernetes versions. You may consider migrating to new clusters when upgrading to newer Kubernetes versions instead of performing in-place cluster upgrades. Cluster backup and restore tools like VMware\u2019s Velero can help you migrate to a new cluster. You should familiarize yourself with the Kubernetes deprecation policy as newer versions may deprecate APIs and features that may break existing applications. Before upgrading the cluster, you should review the Kubernetes change log and Amazon EKS Kubernetes versions to understand any negative impact to your workloads. Consider testing the cluster upgrade in a non-production environment and identify any impacts to current workloads and controllers. You can automate the testing by building a continuous integration workflow to test the compatibility of your applications, controllers, and custom integrations before moving to a new Kubernetes version. You may also need to upgrade Kubernetes add-ons after upgrading the cluster. Review Updating an Amazon EKS cluster Kubernetes version to validate the compatibility of cluster add-ons with the cluster version. Consider turning on control plane logging and review the logs for any errors. Consider using eksctl to manage EKS cluster. You can use eksctl to update the control plane, add-ons, and worker nodes . EKS control plane upgrade doesn\u2019t include upgrading worker nodes. You are responsible for updating EKS worker nodes. Consider using EKS managed node groups or EKS on Fargate to automate the process of upgrading worker nodes. If required, you can use kubectl convert plugin to convert Kubernetes manifests files between different API versions . Running large clusters \u00b6 EKS actively monitors the load on control plane instances and automatically scales them to ensure high performance. However, you should account for potential performance issues and limits within Kubernetes and quotas in AWS services when running large clusters. Clusters with more than 1000 services may experience network latency with using kube-proxy in iptables mode according to the tests performed by the ProjectCalico team . The solution is to switch to running kube-proxy in ipvs mode . You may also experience EC2 API request throttling if the CNI needs to request IP addresses for Pods or if you need to create new EC2 instances frequently. You can reduce calls EC2 API by configuring the CNI to cache IP addresses. You can use larger EC2 instance types to reduce EC2 scaling events. Know limits and service quotas \u00b6 AWS sets service limits (an upper limit on the number of each resource your team can request) to protect you from accidentally over-provisioning resources. Amazon EKS Service Quotas lists the service limits. There are two types of limits, soft limits, that can be changed using AWS Service Quotas . Hard limits cannot be changed. You should consider these values when architecting your applications. Consider reviewing these service limits periodically and incorporate them during in your application design. Besides the limits from orchestration engines, there are limits in other AWS services, such as Elastic Load Balancing (ELB) and Amazon VPC, that may affect your application performance. More about EC2 limits here: EC2 service limits . Each EC2 instance limits the number of packets that can be sent to the Amazon-provided DNS server to a maximum of 1024 packets per second per network interface. In EKS environment, etcd storage limit is 8GB as per upstream guidance . Please monitor metric etcd_db_total_size_in_bytes to track etcd db size. You can refer to alert rules etcdBackendQuotaLowSpace and etcdExcessiveDatabaseGrowth to setup this monitoring. Additional Resources: \u00b6 De-mystifying cluster networking for Amazon EKS worker nodes Amazon EKS cluster endpoint access control AWS re:Invent 2019: Amazon EKS under the hood (CON421-R1)","title":"Control Plane ({'name': 'English', 'build': True})"},{"location":"reliability/docs/controlplane/#eks-control-plane","text":"Amazon Elastic Kubernetes Service (EKS) is a managed Kubernetes service that makes it easy for you to run Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or worker nodes. It runs upstream Kubernetes and is certified Kubernetes conformant. This conformance ensures that EKS supports the Kubernetes APIs, just like the open-source community version that you can install on EC2 or on-premises. Existing applications running on upstream Kubernetes are compatible with Amazon EKS. EKS automatically manages the availability and scalability of the Kubernetes control plane nodes, and it automatically replaces unhealthy control plane nodes.","title":"EKS Control Plane"},{"location":"reliability/docs/controlplane/#eks-architecture","text":"EKS architecture is designed to eliminate any single points of failure that may compromise the availability and durability of the Kubernetes control plane. The Kubernetes control plane managed by EKS runs inside an EKS managed VPC. The EKS control plane comprises the Kubernetes API server nodes, etcd cluster. Kubernetes API server nodes that run components like the API server, scheduler, and kube-controller-manager run in an auto-scaling group. EKS runs a minimum of two API server nodes in distinct Availability Zones (AZs) within in AWS region. Likewise, for durability, the etcd server nodes also run in an auto-scaling group that spans three AZs. EKS runs a NAT Gateway in each AZ, and API servers and etcd servers run in a private subnet. This architecture ensures that an event in a single AZ doesn\u2019t affect the EKS cluster's availability. When you create a new cluster, Amazon EKS creates a highly-available endpoint for the managed Kubernetes API server that you use to communicate with your cluster (using tools like kubectl ). The managed endpoint uses NLB to load balance Kubernetes API servers. EKS also provisions two ENI s in different AZs to facilitate communication to your worker nodes. You can configure whether your Kubernetes cluster\u2019s API server is reachable from the public internet (using the public endpoint) or through your VPC (using the EKS-managed ENIs) or both. Whether users and worker nodes connect to the API server using the public endpoint or the EKS-managed ENI, there are redundant paths for connection.","title":"EKS Architecture"},{"location":"reliability/docs/controlplane/#recommendations","text":"","title":"Recommendations"},{"location":"reliability/docs/controlplane/#monitor-control-plane-metrics","text":"Monitoring Kubernetes API metrics can give you insights into control plane performance and identify issues. An unhealthy control plane can compromise the availability of the workloads running inside the cluster. For example, poorly written controllers can overload the API servers, affecting your application's availability. Kubernetes exposes control plane metrics at the /metrics endpoint. You can view the metrics exposed using kubectl : kubectl get --raw /metrics These metrics are represented in a Prometheus text format . You can use Prometheus to collect and store these metrics. In May 2020, CloudWatch added support for monitoring Prometheus metrics in CloudWatch Container Insights. So you can also use Amazon CloudWatch to monitor the EKS control plane. You can use Tutorial for Adding a New Prometheus Scrape Target: Prometheus KPI Server Metrics to collect metrics and create CloudWatch dashboard to monitor your cluster\u2019s control plane. You can find Kubernetes API server metrics here . For example, apiserver_request_duration_seconds can indicate how long API requests are taking to run. Consider monitoring these control plane metrics:","title":"Monitor Control Plane Metrics"},{"location":"reliability/docs/controlplane/#api-server","text":"Metric Description apiserver_request_total Counter of apiserver requests broken out for each verb, dry run value, group, version, resource, scope, component, and HTTP response code. apiserver_request_duration_seconds* Response latency distribution in seconds for each verb, dry run value, group, version, resource, subresource, scope, and component. apiserver_admission_controller_admission_duration_seconds Admission controller latency histogram in seconds, identified by name and broken out for each operation and API resource and type (validate or admit). apiserver_admission_webhook_rejection_count Count of admission webhook rejections. Identified by name, operation, rejection_code, type (validating or admit), error_type (calling_webhook_error, apiserver_internal_error, no_error) rest_client_request_duration_seconds Request latency in seconds. Broken down by verb and URL. rest_client_requests_total Number of HTTP requests, partitioned by status code, method, and host.","title":"API Server"},{"location":"reliability/docs/controlplane/#etcd","text":"Metric Description etcd_request_duration_seconds Etcd request latency in seconds for each operation and object type. etcd_db_total_size_in_bytes or apiserver_storage_db_total_size_in_bytes (starting with EKS v1.26) or apiserver_storage_size_bytes (starting with EKS v1.28) Etcd database size. Consider using the Kubernetes Monitoring Overview Dashboard to visualize and monitor Kubernetes API server requests and latency and etcd latency metrics. The following Prometheus query can be used to monitor the current size of etcd. The query assumes there is job called kube-apiserver for scraping metrics from API metrics endpoint and the EKS version is below v1.26. max(etcd_db_total_size_in_bytes{job=\"kube-apiserver\"} / (8 * 1024 * 1024 * 1024))","title":"etcd"},{"location":"reliability/docs/controlplane/#cluster-authentication","text":"EKS currently supports two types of authentication: bearer/service account tokens and IAM authentication which uses webhook token authentication . When users call the Kubernetes API, a webhook passes an authentication token included in the request to IAM. The token, a base 64 signed URL, is generated by the AWS Command Line Interface ( AWS CLI ). The IAM user or role that creates the EKS Cluster automatically gets full access to the cluster. You can manage access to the EKS cluster by editing the aws-auth configmap . If you misconfigure the aws-auth configmap and lose access to the cluster, you can still use the cluster creator\u2019s user or role to access your EKS cluster. In the unlikely event that you cannot use the IAM service in the AWS region, you can also use the Kubernetes service account\u2019s bearer token to manage the cluster. Create a \u201csuper-admin\u201d account that is permitted to perform all actions in the cluster: kubectl -n kube-system create serviceaccount super-admin Create a role binding that gives super-admin cluster-admin role: kubectl create clusterrolebinding super-admin-rb --clusterrole=cluster-admin --serviceaccount=kube-system:super-admin Get service account\u2019s secret: SECRET_NAME=`kubectl -n kube-system get serviceaccount/super-admin -o jsonpath='{.secrets[0].name}'` Get token associated with the secret: TOKEN=`kubectl -n kube-system get secret $SECRET_NAME -o jsonpath='{.data.token}'| base64 --decode` Add service account and token to kubeconfig : kubectl config set-credentials super-admin --token=$TOKEN Set the current-context in kubeconfig to use super-admin account: kubectl config set-context --current --user=super-admin Final kubeconfig should look like this: apiVersion: v1 clusters: - cluster: certificate-authority-data:<REDACTED> server: https://<CLUSTER>.gr7.us-west-2.eks.amazonaws.com name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> contexts: - context: cluster: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> user: super-admin name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> current-context: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> kind: Config preferences: {} users: #- name: arn:aws:eks:us-west-2:<account number>:cluster/<cluster name> # user: # exec: # apiVersion: client.authentication.k8s.io/v1alpha1 # args: # - --region # - us-west-2 # - eks # - get-token # - --cluster-name # - <<cluster name>> # command: aws # env: null - name: super-admin user: token: <<super-admin sa\u2019s secret>>","title":"Cluster Authentication"},{"location":"reliability/docs/controlplane/#admission-webhooks","text":"Kubernetes has two types of admission webhooks: validating admission webhooks and mutating admission webhooks . These allow a user to extend the kubernetes API and validate or mutate objects before they are accepted by the API. Poor configurations of these webhooks can distabilize the EKS control plane by blocking cluster critical operations. In order to avoid impacting cluster critical operations either avoid setting \"catch-all\" webhooks like the following: - name: \"pod-policy.example.com\" rules: - apiGroups: [\"*\"] apiVersions: [\"*\"] operations: [\"*\"] resources: [\"*\"] scope: \"*\" Or make sure the webhook has a fail open policy with a timeout shorter than 30 seconds to ensure that if your webhook is unavailable it will not impair cluster critical workloads.","title":"Admission Webhooks"},{"location":"reliability/docs/controlplane/#block-pods-with-unsafe-sysctls","text":"Sysctl is a Linux utility that allows users to modify kernel parameters during runtime. These kernel parameters control various aspects of the operating system's behavior, such as network, file system, virtual memory, and process management. Kubernetes allows assigning sysctl profiles for Pods. Kubernetes categorizes systcls as safe and unsafe. Safe sysctls are namespaced in the container or Pod, and setting them doesn\u2019t impact other Pods on the node or the node itself. In contrast, unsafe sysctls are disabled by default since they can potentially disrupt other Pods or make the node unstable. As unsafe sysctls are disabled by default, the kubelet will not create a Pod with unsafe sysctl profile. If you create such a Pod, the scheduler will repeatedly assign such Pods to nodes, while the node fails to launch it. This infinite loop ultimately strains the cluster control plane, making the cluster unstable. Consider using OPA Gatekeeper or Kyverno to reject Pods with unsafe sysctls .","title":"Block Pods with unsafe sysctls"},{"location":"reliability/docs/controlplane/#handling-cluster-upgrades","text":"Since April 2021, Kubernetes release cycle has been changed from four releases a year (once a quarter) to three releases a year. A new minor version (like 1. 21 or 1. 22 ) is released approximately every fifteen weeks . Starting with Kubernetes 1.19, each minor version is supported for approximately twelve months after it's first released.. Kubernetes supports compatibility between the control plane and worker nodes for at least two minor versions. In line with the Kubernetes community support for Kubernetes versions, EKS provides at least three production-ready versions of Kubernetes at any given time, with a fourth version in deprecation. EKS will announce the deprecation of a given Kubernetes minor version at least 60 days before the end of support date. On the end of support date, clusters running the deprecated version will begin to be automatically updated to the next EKS-supported version of Kubernetes. EKS performs in-place cluster upgrades for both Kubernetes and EKS platform versions . This simplifies cluster operations and lets you take advantage of the latest Kubernetes features and apply security patches, without any downtime. New Kubernetes versions introduce significant changes, and you cannot downgrade a cluster once upgraded. Having a well-documented process for handling cluster upgrades is necessary for a smooth transition to newer Kubernetes versions. You may consider migrating to new clusters when upgrading to newer Kubernetes versions instead of performing in-place cluster upgrades. Cluster backup and restore tools like VMware\u2019s Velero can help you migrate to a new cluster. You should familiarize yourself with the Kubernetes deprecation policy as newer versions may deprecate APIs and features that may break existing applications. Before upgrading the cluster, you should review the Kubernetes change log and Amazon EKS Kubernetes versions to understand any negative impact to your workloads. Consider testing the cluster upgrade in a non-production environment and identify any impacts to current workloads and controllers. You can automate the testing by building a continuous integration workflow to test the compatibility of your applications, controllers, and custom integrations before moving to a new Kubernetes version. You may also need to upgrade Kubernetes add-ons after upgrading the cluster. Review Updating an Amazon EKS cluster Kubernetes version to validate the compatibility of cluster add-ons with the cluster version. Consider turning on control plane logging and review the logs for any errors. Consider using eksctl to manage EKS cluster. You can use eksctl to update the control plane, add-ons, and worker nodes . EKS control plane upgrade doesn\u2019t include upgrading worker nodes. You are responsible for updating EKS worker nodes. Consider using EKS managed node groups or EKS on Fargate to automate the process of upgrading worker nodes. If required, you can use kubectl convert plugin to convert Kubernetes manifests files between different API versions .","title":"Handling Cluster Upgrades"},{"location":"reliability/docs/controlplane/#running-large-clusters","text":"EKS actively monitors the load on control plane instances and automatically scales them to ensure high performance. However, you should account for potential performance issues and limits within Kubernetes and quotas in AWS services when running large clusters. Clusters with more than 1000 services may experience network latency with using kube-proxy in iptables mode according to the tests performed by the ProjectCalico team . The solution is to switch to running kube-proxy in ipvs mode . You may also experience EC2 API request throttling if the CNI needs to request IP addresses for Pods or if you need to create new EC2 instances frequently. You can reduce calls EC2 API by configuring the CNI to cache IP addresses. You can use larger EC2 instance types to reduce EC2 scaling events.","title":"Running large clusters"},{"location":"reliability/docs/controlplane/#know-limits-and-service-quotas","text":"AWS sets service limits (an upper limit on the number of each resource your team can request) to protect you from accidentally over-provisioning resources. Amazon EKS Service Quotas lists the service limits. There are two types of limits, soft limits, that can be changed using AWS Service Quotas . Hard limits cannot be changed. You should consider these values when architecting your applications. Consider reviewing these service limits periodically and incorporate them during in your application design. Besides the limits from orchestration engines, there are limits in other AWS services, such as Elastic Load Balancing (ELB) and Amazon VPC, that may affect your application performance. More about EC2 limits here: EC2 service limits . Each EC2 instance limits the number of packets that can be sent to the Amazon-provided DNS server to a maximum of 1024 packets per second per network interface. In EKS environment, etcd storage limit is 8GB as per upstream guidance . Please monitor metric etcd_db_total_size_in_bytes to track etcd db size. You can refer to alert rules etcdBackendQuotaLowSpace and etcdExcessiveDatabaseGrowth to setup this monitoring.","title":"Know limits and service quotas"},{"location":"reliability/docs/controlplane/#additional-resources","text":"De-mystifying cluster networking for Amazon EKS worker nodes Amazon EKS cluster endpoint access control AWS re:Invent 2019: Amazon EKS under the hood (CON421-R1)","title":"Additional Resources:"},{"location":"reliability/docs/dataplane.kr/","text":"{'name': 'English', 'build': True} EKS \ub370\uc774\ud130 \ud50c\ub808\uc778 \u00b6 \uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc6b4\uc601\ud558\ub824\uba74 \uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ud0c4\ub825\uc801\uc778 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \ubcf5\uad6c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc740 2\uac1c \uc774\uc0c1\uc758 \uc6cc\ucee4 \ub178\ub4dc\ub85c \uad6c\uc131\ub418\uba70, \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub530\ub77c \ud655\uc7a5 \ubc0f \ucd95\uc18c\ub420 \uc218 \uc788\uc73c\uba70 \uc7a5\uc560 \ubc1c\uc0dd \uc2dc \uc790\ub3d9\uc73c\ub85c \ubcf5\uad6c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub97c \uc0ac\uc6a9\ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc640 [Fargate] (https://docs.aws.amazon.com/eks/latest/userguide/fargate.html)\ub77c\ub294 \ub450 \uac00\uc9c0 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\ud0dd\ud558\uba74 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc9c1\uc811 \uad00\ub9ac\ud558\uac70\ub098 EKS \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc\uc640 \uc790\uccb4 \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc\uc640 Fargate\uac00 \ud63c\ud569\ub41c \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fargate\uc758 EKS\ub294 \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc704\ud55c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Fargate\ub294 \uaca9\ub9ac\ub41c \ucef4\ud4e8\ud305 \ud658\uacbd\uc5d0\uc11c \uac01 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uac01 \ud30c\ub4dc\uc5d0\ub294 \uc790\uccb4 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \ud30c\ub4dc\ub97c \ud655\uc7a5\ud568\uc5d0 \ub530\ub77c Fargate\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud569\ub2c8\ub2e4. horizontal pod autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ud50c\ub808\uc778\uacfc \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubaa8\ub450 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub294 \ub370 \uc120\ud638\ub418\ub294 \ubc29\ubc95\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 Cluster Autoscaler , EC2 Auto Scaling \uadf8\ub8f9 \ub610\ub294 Atlassian's Esclator \uc640 \uac19\uc740 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 EC2 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc \uc0dd\uc131 \u00b6 \uac1c\ubcc4 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc870\uc778\ud558\ub294 \ub300\uc2e0 EC2 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc740 \uc885\ub8cc\ub418\uac70\ub098 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud55c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud558\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130\uac00 \ud56d\uc0c1 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\uc138\uc694 \u00b6 Cluster Autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc544 \uc2e4\ud589\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\uac00 \uc788\uc744 \ub54c \ub370\uc774\ud130 \ud50c\ub808\uc778 \ud06c\uae30\ub97c \uc870\uc815\ud558\uba70, \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec \ub3c4\uc6c0\uc744 \uc90d\ub2c8\ub2e4. Cluster Autoscaler\ub294 \ubc18\uc751\ud615 \ud504\ub85c\uc138\uc2a4\uc774\uae34 \ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc544 \ud30c\ub4dc\uac00 pending \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 EC2 \uc778\uc2a4\ud134\uc2a4\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9\uc774 \ubd80\uc871\ud574\uc9c0\uba74 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ucd94\uac00\ub420 \ub54c\uae4c\uc9c0 \uc0c8 \ubcf5\uc81c\ubcf8 \ub610\ub294 \uc0c8 \ud30c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4( Pending \uc0c1\ud0dc ). \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc6cc\ud06c\ub85c\ub4dc \uc218\uc694\ub97c \ucda9\uc871\ud560 \ub9cc\ud07c \ucda9\ubd84\ud788 \ube60\ub974\uac8c \ud655\uc7a5\ub418\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc9c0\uc5f0\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc758 \uc0ac\uc6a9\ub960\uc774 \uc9c0\uc18d\uc801\uc73c\ub85c \ub0ae\uace0 \ud574\ub2f9 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 Cluster Autoscaler\ub294 \ud574\ub2f9 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud569\ub2c8\ub2e4. Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84 \ud504\ub85c\ube44\uc800\ub2dd\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4. \u00b6 Cluster Autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\ub4dc\uac00 \uc774\ubbf8 pending \uc0c1\ud0dc\uc77c \ub54c \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc2a4\ucf00\uc77c\ub9c1\uc744 \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub354 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc774 \ud544\uc694\ud55c \uc2dc\uc810\uacfc \uc2e4\uc81c\ub85c \ub354 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc744 \uac00\uc838\uc624\ub294 \uc2dc\uc810 \uc0ac\uc774\uc5d0 \uc9c0\uc5f0\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\uc5f0\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc740 \ud544\uc694\ud55c \uac83\ubcf4\ub2e4 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Cluster Autoscaler\uc5d0\uc11c \uad8c\uc7a5\ud558\ub294 \ub610 \ub2e4\ub978 \ud328\ud134\uc740 pause \ud30c\ub4dc\uc640 \uc6b0\uc120\uc21c\uc704 \uc120\uc810 \uae30\ub2a5 \uc785\ub2c8\ub2e4. pause \ud30c\ub4dc \ub294 pause \ucee8\ud14c\uc774\ub108 \ub97c \uc2e4\ud589\ud558\ub294\ub370, \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 \ub2e4\ub978 \ud30c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucef4\ud4e8\ud305 \uc6a9\ub7c9\uc758 placeholder \uc5ed\ud560\uc744 \ud558\ub294 \uac83 \uc678\uc5d0\ub294 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub9e4\uc6b0 \ub0ae\uc740 \ud560\ub2f9 \uc6b0\uc120 \uc21c\uc704 \ub85c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud574\uc57c \ud558\uace0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc6a9 \uc6a9\ub7c9\uc774 \uc5c6\uc744 \ub54c \uc77c\uc2dc \uc911\uc9c0 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 pause \ud30c\ub4dc\uc758 \ucd95\ucd9c\uc744 \uac10\uc9c0\ud558\uace0 \uc2a4\ucf00\uc904\uc744 \ub2e4\uc2dc \uc7a1\uc73c\ub824\uace0 \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130\uac00 \ucd5c\ub300 \uc6a9\ub7c9\uc73c\ub85c \uc2e4\ud589\ub418\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc77c\uc2dc \uc911\uc9c0 \ud30c\ub4dc\ub294 pending \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub418\uba70, Cluster Autoscaler\ub294 \uc774\uc5d0 \ub300\uc751\ud558\uc5ec \ub178\ub4dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. Helm \ucc28\ud2b8\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub108 \ub97c \uc124\uce58\ud560 \uc218 \uc788\ub2e4. \uc5ec\ub7ec \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uacfc \ud568\uaed8 Cluster Autoscaler \uc0ac\uc6a9 \u00b6 --node-group-auto-discovery \ud50c\ub798\uadf8\ub97c \ud65c\uc131\ud654\ud55c \uc0c1\ud0dc\ub85c Cluster Autoscaler\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 Cluster Autoscaler\uac00 \uc815\uc758\ub41c \ud2b9\uc815 \ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0\uc11c \uac01 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc815\uc758\ud558\uace0 \uc720\uc9c0\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \ub85c\uceec \uc2a4\ud1a0\ub9ac\uc9c0\uc640 \ud568\uaed8 Cluster Autoscaler \uc0ac\uc6a9 \u00b6 \uae30\ubcf8\uc801\uc73c\ub85c Cluster Autoscaler\ub294 \ub85c\uceec \uc2a4\ud1a0\ub9ac\uc9c0\uac00 \uc5f0\uacb0\ub41c \uc0c1\ud0dc\ub85c \ubc30\ud3ec\ub41c \ud30c\ub4dc\uac00 \uc788\ub294 \ub178\ub4dc\ub97c \ucd95\uc18c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. --skip-nodes-with-local-storage \ud50c\ub798\uadf8\ub97c false\ub85c \uc124\uc815\ud558\uba74 Cluster Autoscaler\uac00 \uc774\ub7ec\ud55c \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc640 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc5ec\ub7ec AZ\uc5d0 \ubd84\uc0b0\ud569\ub2c8\ub2e4. \u00b6 \uc5ec\ub7ec AZ\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc5ec \uac1c\ubcc4 AZ\uc5d0\uc11c \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uc11c\ube0c\ub137\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc0dd\uc131\ub418\ub294 AZ\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.18+\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 AZ\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\ud558\ub294 \ub370 \uad8c\uc7a5\ub418\ub294 \ubc29\ubc95\uc740 \ud30c\ub4dc\uc5d0 \ub300\ud55c \ud1a0\ud3f4\ub85c\uc9c0 \ubd84\uc0b0 \uc81c\uc57d \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc544\ub798 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \uac00\ub2a5\ud55c \uacbd\uc6b0 AZ\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\uc2dc\ud0a4\uace0, \uadf8\ub807\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud574\ub2f9 \ud30c\ub4dc\ub294 \uadf8\ub0e5 \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: replicas: 3 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 whenUnsatisfiable: ScheduleAnyway topologyKey: topology.kubernetes.io/zone labelSelector: matchLabels: app: web-server containers: - name: web-app image: nginx resources: requests: cpu: 1 \ucc38\uace0 kube-scheduler \ub294 \ud574\ub2f9 \ub808\uc774\ube14\uc774 \uc788\ub294 \ub178\ub4dc\ub97c \ud1b5\ud55c \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778\ub9cc \uc778\uc2dd\ud569\ub2c8\ub2e4. \uc704\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \ub2e8\uc77c \uc874\uc5d0\ub9cc \ub178\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc30\ud3ec\ud558\uba74, kube-scheduler \uac00 \ub2e4\ub978 \uc874\uc744 \uc778\uc2dd\ud558\uc9c0 \ubabb\ud558\ubbc0\ub85c \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ud574\ub2f9 \ub178\ub4dc\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ub429\ub2c8\ub2e4. \uc774 Topology Spread\uac00 \uc2a4\ucf00\uc904\ub7ec\uc640 \ud568\uaed8 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 \ubaa8\ub4e0 \uc874\uc5d0 \ub178\ub4dc\uac00 \uc774\ubbf8 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.24\uc5d0\uc11c MinDomainsInPodToplogySpread \uae30\ub2a5 \uac8c\uc774\ud2b8 \uac00 \ucd94\uac00\ub418\uba74\uc11c \ud574\uacb0\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uc2a4\ucf00\uc904\ub7ec\uc5d0 \uc801\uaca9 \ub3c4\uba54\uc778 \uc218\ub97c \uc54c\ub9ac\uae30 \uc704\ud574 MinDomains \uc18d\uc131\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 whenUnsatisfiable \ub97c Donot Schedule \ub85c \uc124\uc815\ud558\uba74 Topology Spread Constraints\uc744 \ucda9\uc871\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. Topology Spread Constraints\uc744 \uc704\ubc18\ud558\ub294 \ub300\uc2e0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \ub354 \uc88b\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c\ub294 \ud30c\ub4dc anti-affinity \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec AZ\uc5d0 \uac78\uccd0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc5d0\uac8c \ubcc4\uac1c\uc758 AZ\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \uac83\uc744 \uc120\ud638 \ud55c\ub2e4\uace0 \uc54c\ub824\uc90d\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: web-server labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: failure-domain.beta.kubernetes.io/zone weight: 100 containers: - name: web-app image: nginx \uacbd\uace0 \ud30c\ub4dc\ub97c \uc11c\ub85c \ub2e4\ub978 AZ\uc5d0 \uc2a4\ucf00\uc904\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc \uc218\uac00 AZ \uc218\ub97c \uc808\ub300 \ucd08\uacfc\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud560 \ub54c \uac01 AZ\uc758 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud558\uc2ed\uc2dc\uc624. \u00b6 Amazon EBS\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc601\uad6c \ubcfc\ub968 \uc81c\uacf5 \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud30c\ub4dc \ubc0f \uad00\ub828 EBS \ubcfc\ub968\uc774 \ub3d9\uc77c\ud55c AZ\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uae00\uc744 \uc4f0\ub294 \uc2dc\uc810\uc5d0\uc11c EBS \ubcfc\ub968\uc740 \ub2e8\uc77c AZ \ub0b4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ub2e4\ub978 AZ\uc5d0 \uc704\uce58\ud55c EBS \uc9c0\uc6d0 \uc601\uad6c \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5b4\ub290 AZ\uc5d0 \uc704\uce58\ud558\ub294\uc9c0 \uc54c\uace0 \uc788\uc2b5\ub2c8\ub2e4 . \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud574\ub2f9 \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 EBS \ubcfc\ub968\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ud56d\uc0c1 \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubcfc\ub968\uc774 \uc704\uce58\ud55c AZ\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c EBS \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\ub3c4\ub85d \ucda9\ubd84\ud55c \uc6a9\ub7c9\uc744 \uac16\ucd98 \uac01 AZ\uc5d0 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ub610\ud55c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c --balance-similar-similar-node groups \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uac00\uc6a9\uc131\uc744 \ub192\uc774\uae30 \uc704\ud55c \uc694\uad6c \uc0ac\ud56d\uc774 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589 \uc911\uc778 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\ub97c \ub2e8\uc77c AZ\ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 AZ \uc774\ub984\uc774 \ud3ec\ud568\ub41c failure-domain.beta.kubernetes.io/zone \ub808\uc774\ube14\uc774 \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ub429\ub2c8\ub2e4. kubectl get nodes --show-labels \ub97c \uc2e4\ud589\ud558\uc5ec \ub178\ub4dc\uc5d0 \ucca8\ubd80\ub41c \ub808\uc774\ube14\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube4c\ud2b8\uc778 \ub178\ub4dc \ub808\uc774\ube14\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [\uc5ec\uae30] (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#built-in-node-labels)\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 AZ\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 \ud30c\ub4dc\uac00 us-west-2c AZ\uc5d0\uc11c\ub9cc \uc2a4\ucf00\uc904\ub9c1\ub429\ub2c8\ub2e4. apiVersion: v1 kind: Pod metadata: name: single-az-pod spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: failure-domain.beta.kubernetes.io/zone operator: In values: - us-west-2c containers: - name: single-az-container image: kubernetes/pause \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968(EBS \uc9c0\uc6d0) \uc5ed\uc2dc AZ \uc774\ub984\uc73c\ub85c \uc790\ub3d9 \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub429\ub2c8\ub2e4. kubectl get pv -L topology.ebs.csi.aws.com/zone \uba85\ub839\uc744 \uc2e4\ud589\ud574 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc774 \uc5b4\ub290 AZ\uc5d0 \uc18d\ud558\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0dd\uc131\ub418\uace0 \ubcfc\ub968\uc744 \uc694\uccad\ud558\uba74, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud574\ub2f9 \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 \uc788\ub294 \ub178\ub4dc\uc5d0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc774 \ud558\ub098\uc778 EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\ub97c \uc0dd\uac01\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc774 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 3\uac1c\uc758 AZ\uc5d0 \ubd84\uc0b0\ub41c \uc138 \uac1c\uc758 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. EBS \uc9c0\uc6d0 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud574\ub2f9 \ubcfc\ub968\uc744 \uc0dd\uc131\ud558\uba74 \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc138 \uac1c\uc758 AZ \uc911 \uccab \ubc88\uc9f8 AZ\uc5d0 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc774 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ube44\uc815\uc0c1 \uc0c1\ud0dc\uac00 \ub418\uace0 \uc774\ud6c4\uc5d0\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub41c\ub2e4. Cluster Autoscaler\ub294 \ube44\uc815\uc0c1 \ub178\ub4dc\ub97c \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub85c \uad50\uccb4\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc790\ub3d9 \ud655\uc7a5 \uadf8\ub8f9\uc774 \uc138 \uac1c\uc758 AZ\uc5d0 \uac78\uccd0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc0c1\ud669\uc5d0 \ub530\ub77c \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ub450 \ubc88\uc9f8 \ub610\ub294 \uc138 \ubc88\uc9f8 AZ\uc5d0\uc11c \uc2dc\uc791\ub420 \uc218 \uc788\uc9c0\ub9cc \uccab \ubc88\uc9f8 AZ\uc5d0\uc11c\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AZ \uc81c\uc57d\uc774 \uc788\ub294 EBS \ubcfc\ub968\uc740 \uccab \ubc88\uc9f8 AZ\uc5d0\ub9cc \uc874\uc7ac\ud558\uace0 \ud574\ub2f9 AZ\uc5d0\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5c6\uc73c\ubbc0\ub85c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uac01 AZ\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc744 \ud558\ub098\uc529 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub798\uc57c \ub2e4\ub978 AZ\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc6a9\ub7c9\uc774 \ud56d\uc0c1 \ud655\ubcf4\ub429\ub2c8\ub2e4. \ub610\ub294 \uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\uac00 \ud544\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud560 \ub54c [EFS] (https://github.com/kubernetes-sigs/aws-efs-csi-driver)\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \ub2e8\uc21c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ub9ac\uc804 \ub0b4 \ubaa8\ub4e0 AZ\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 EFS \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EFS \uae30\ubc18 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uc5b4 \ub2e4\ub978 AZ\uc5d0 \uc2a4\ucf00\uc904\ub418\ub354\ub77c\ub3c4 \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ubb38\uc81c \uac10\uc9c0\uae30 \uc2e4\ud589 \u00b6 \uc6cc\ucee4 \ub178\ub4dc\uc758 \uc7a5\uc560\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. node-problem-detector \ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc124\uce58\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc \ubb38\uc81c\ub97c \ud0d0\uc9c0\ud560 \uc218 \uc788\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uc785\ub2c8\ub2e4. npd\uc758 \uce58\ub8cc \uc2dc\uc2a4\ud15c \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ube44\uc6b0\uace0 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ub9ac\uc18c\uc2a4 \uc608\uc57d \u00b6 \uc6b4\uc601 \uccb4\uc81c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ucef4\ud4e8\ud305 \uc6a9\ub7c9\ub97c \uc608\uc57d \ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\uc758 \uc548\uc815\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc, \ud2b9\ud788 limits \uc774 \uc120\uc5b8\ub418\uc9c0 \uc54a\uc740 \ud30c\ub4dc\ub294 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \ud3ec\ud654\uc2dc\ucf1c \uc6b4\uc601\uccb4\uc81c \ud504\ub85c\uc138\uc2a4\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac ( kubelet , \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ub4f1)\uc774 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \ub193\uace0 \ud30c\ub4dc\uc640 \uacbd\uc7c1\ud558\ub294 \uc0c1\ud669\uc5d0 \ub193\uc774\uac8c \ub429\ub2c8\ub2e4. kubelet \ud50c\ub798\uadf8 --system-reserved \uc640 --kube-reserved \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c \ud504\ub85c\uc138\uc2a4 ( udev , sshd \ub4f1)\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ub9ac\uc18c\uc2a4\ub97c \uac01\uac01 \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Linux AMI \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CPU, \uba54\ubaa8\ub9ac \ubc0f \uc2a4\ud1a0\ub9ac\uc9c0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc6a9\uc73c\ub85c \uc608\uc57d\ub429\ub2c8\ub2e4. \uc774 AMI\ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc2dc\uc791\ub418\uba74 bootstrap.sh \uc2a4\ud06c\ub9bd\ud2b8 \ub97c \ud2b8\ub9ac\uac70\ud558\ub3c4\ub85d EC2 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uac00 \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774 \uc2a4\ud06c\ub9bd\ud2b8\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CPU \ucf54\uc5b4 \uc218\uc640 \ucd1d \uba54\ubaa8\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c CPU \ubc0f \uba54\ubaa8\ub9ac \uc608\uc57d\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. \uacc4\uc0b0\ub41c \uac12\uc740 /etc/kubernetes/kubelet/kubelet-config.json \uc5d0 \uc788\ub294 KubeletConfiguration \ud30c\uc77c\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub370\ubaac\uc744 \uc2e4\ud589\ud558\uace0 \uae30\ubcf8\uc801\uc73c\ub85c \uc608\uc57d\ub41c CPU \ubc0f \uba54\ubaa8\ub9ac \uc591\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4 \uc608\uc57d\uc744 \ub298\ub824\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. eksctl \uc740 \uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc758 \ub9ac\uc18c\uc2a4 \uc608\uc57d \uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815\ud558\ub294 \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. QoS \uad6c\ud604 \u00b6 \uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0, \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574 requests = limits \uc815\uc758\ub97c \uace0\ub824\ud574\ubcf4\uc2ed\uc2dc\uc624. \uc774\ub807\uac8c \ud558\uba74 \ub2e4\ub978 \ud30c\ub4dc\uac00 \ub9ac\uc18c\uc2a4\ub97c \uc694\uccad\ud558\ub354\ub77c\ub3c4 \ucee8\ud14c\uc774\ub108\uac00 \uc885\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 CPU \ubc0f \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \uc2e4\uc218\ub85c \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \uc18c\ube44\ud558\uc5ec \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ub41c \ub2e4\ub978 \ud504\ub85c\uc138\uc2a4\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad/\uc81c\ud55c \uad6c\uc131 \ubc0f \ud06c\uae30 \uc870\uc815 \u00b6 \ub9ac\uc18c\uc2a4 \uc694\uccad\uc758 \ud06c\uae30 \uc870\uc815 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud55c\ub3c4\uc5d0 \ub300\ud55c \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \uc9c0\uce68\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\uc5d0 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \uc81c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0 \uc694\uccad\uc740 \ucee8\ud14c\uc774\ub108\uc758 \uc0c1\ub300\uc801 CPU \uc0ac\uc6a9 \uc2dc\uac04 \uc5d0 \uac00\uc911\uce58 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc778\uc704\uc801\uc778 \uc81c\ud55c\uc774\ub098 \uacfc\ub2e4 \ud604\uc0c1 \uc5c6\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c CPU \uc804\uccb4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\uac00 \uc544\ub2cc \ub9ac\uc18c\uc2a4\uc758 \uacbd\uc6b0, requests = limits \ub97c \uad6c\uc131\ud558\uba74 \uac00\uc7a5 \uc608\uce21 \uac00\ub2a5\ud55c \ub3d9\uc791\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. \ub9cc\uc57d requests != limits \uc774\uba74, \ucee8\ud14c\uc774\ub108\uc758 QOS \ub3c4 Guaranteed\uc5d0\uc11c Burstable\ub85c \uac10\uc18c\ud558\uc5ec node pressure \uc774\ubca4\ud2b8\uc5d0 \ucd95\ucd9c\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc84c\uc2b5\ub2c8\ub2e4. CPU\uac00 \uc544\ub2cc \ub9ac\uc18c\uc2a4\uc758 \uacbd\uc6b0 \uc694\uccad\ubcf4\ub2e4 \ud6e8\uc52c \ud070 \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. limits \uc774 requests \uc5d0 \ube44\ud574 \ud06c\uac8c \uad6c\uc131\ub420\uc218\ub85d \ub178\ub4dc\uac00 \uc624\ubc84 \ucee4\ubc0b\ub418\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc911\ub2e8\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc9d1\ub2c8\ub2e4. Karpenter \ub610\ub294 Cluster AutoScaler \uc640 \uac19\uc740 \ub178\ub4dc \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc694\uccad \ud06c\uae30\ub97c \uc62c\ubc14\ub974\uac8c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub3c4\uad6c\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uccad\uc744 \uac80\ud1a0\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub178\ub4dc\uc758 \uc218\uc640 \ud06c\uae30\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc694\uccad\uc774 \ub108\ubb34 \uc791\uc544 \uc81c\ud55c\uc774 \ub354 \ud070 \uacbd\uc6b0, \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uaf49 \ucc28 \uc788\uc73c\uba74 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc81c\uac70\ub418\uac70\ub098 OOM\uc73c\ub85c \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc740 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc9c0\ub9cc Vertical Pod Autoscaler \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ub7f0\ud0c0\uc784 \uc2dc \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uad00\ucc30\ud558\uc5ec \uc694\uccad \uaddc\ubaa8\ub97c '\uc801\uc815'\ud558\uac8c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \ud06c\uae30\ub97c \uacb0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub294 \ub2e4\ub978 \ub3c4\uad6c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Goldilocks Parca Prodfiler rsg \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uad6c\uc131 \u00b6 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc0ac\uc6a9\uc790\uac00 \uc5ec\ub7ec \ud300 \ub610\ub294 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\ub294 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc774\ub984 \ubc94\uc704\ub97c \uc81c\uacf5\ud558\uace0 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\ub97c \uc5ec\ub7ec \ud300, \ud504\ub85c\uc81d\ud2b8, \uc6cc\ud06c\ub85c\ub4dc \uac04\uc5d0 \ub098\ub204\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ucd1d \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ResourceQuota \uac1d\uccb4\ub294 \uc720\ud615\ubcc4\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uac1c\uccb4 \uc218\uc640 \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4\uac00 \uc18c\ube44\ud560 \uc218 \uc788\ub294 \ucd1d \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc591\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc815\ub41c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc694\uccad\ud560 \uc218 \uc788\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 \ubc0f/\ub610\ub294 \ucef4\ud4e8\ud305(CPU \ubc0f \uba54\ubaa8\ub9ac) \ub9ac\uc18c\uc2a4\uc758 \ucd1d\ud569\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac\uc640 \uac19\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9ac\uc18c\uc2a4 \ucffc\ud130\uac00 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ub610\ub294 \uc81c\ud55c\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub7c9\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \uc0ac\uc804 \uad6c\uc131\ub41c \uc81c\ud55c\uc744 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud558\ub824\uba74 LimitRanges \ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. \u00b6 \ub9ac\uc18c\uc2a4 \ucffc\ud130\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. LimitRange \uac1c\uccb4 \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc694\uccad\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ub9ac\uc18c\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. LimitRange \ub97c \uc0ac\uc6a9\ud558\uba74 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc124\uc815\ud558\ub294 \uac83\uc774 \uc870\uc9c1\uc758 \ud45c\uc900 \uad00\ud589\uc774 \uc544\ub2cc \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774, LimitRange \ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud30c\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108\ub2f9 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \ud37c\uc2dc\uc2a4\ud134\ud2b8\ubcfc\ub968\ud074\ub808\uc784\ub2f9 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc2a4\ud1a0\ub9ac\uc9c0 \uc694\uccad\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc640 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\uba74 LimitRange \uc640 ResourceQuota \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc81c\ud55c\uc744 \uc124\uc815\ud558\uba74 \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ud074\ub7ec\uc2a4\ud130\uc758 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud558\ub294 \ub9ac\uc18c\uc2a4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \u00b6 CoreDNS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub984 \ud655\uc778 \ubc0f \uc11c\ube44\uc2a4 \uac80\uc0c9 \uae30\ub2a5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. \uc0c1\ud638 \uc6b4\uc6a9\uc131\uc744 \uc704\ud574 CoreDNS\uc6a9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc758 \uc774\ub984\uc740 \uc5ec\uc804\ud788 kube-dns \ub85c \uc9c0\uc815\ub429\ub2c8\ub2e4. CoreDNS \ud30c\ub4dc\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uc77c\ubd80\ub85c kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\uba70, EKS\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc694\uccad\uacfc \uc81c\ud55c\uc774 \uc120\uc5b8\ub41c \ub450 \uac1c\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. DNS \ucffc\ub9ac\ub294 kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 kube-dns \uc11c\ube44\uc2a4\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4. \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ud575\uc2ec DNS \uc9c0\ud45c \ubaa8\ub2c8\ud130\ub9c1 \u00b6 CoreDNS\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ub0b4\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 CoreDNS \uc9c0\uc5f0 \uc2dc\uac04( coredns_dns_request_duration_seconds_sum , 1.7.0 \ubc84\uc804 \uc774\uc804\uc5d0\ub294 \uba54\ud2b8\ub9ad\uc774 core_dns_response_rcode_count_total \uc774\ub77c\uace0 \ubd88\ub838\uc74c), \uc624\ub958 ( coredns_dns_responses_total , NXDOMAIN, SERVFAIL, FormErr) \ubc0f CoreDNS \ud30c\ub4dc\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub300\ud55c \ubaa8\ub2c8\ud130\ub9c1\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ubb38\uc81c \ud574\uacb0\uc744 \uc704\ud574 kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec CoreDNS \ub85c\uadf8\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. for p in $( kubectl get pods \u2014namespace = kube-system -l k8s-app = kube-dns -o name ) ; do kubectl logs \u2014namespace = kube-system $p ; done \ub178\ub4dc \ub85c\uceec DNS \uce90\uc2dc \uc0ac\uc6a9 \u00b6 \ub178\ub4dc \ub85c\uceec DNS \uce90\uc2dc \ub97c \uc2e4\ud589\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc5d0\uc11c DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 kube-dns \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. CoreDNS\uc758 cluster-proportional-scaler\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. \u00b6 \ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \uac1c\uc120\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \ubc0f CPU \ucf54\uc5b4 \uc218\uc5d0 \ub530\ub77c CoreDNS \ubc30\ud3ec\ub97c \uc790\ub3d9\uc73c\ub85c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc218\ud3c9 \ud074\ub7ec\uc2a4\ud130 \ube44\ub840 \uc790\ub3d9 \ud655\uc7a5 \uc740 \uc2a4\ucf00\uc904 \uac00\ub2a5\ud55c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud06c\uae30\uc5d0 \ub530\ub77c \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc870\uc815\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc785\ub2c8\ub2e4. \ub178\ub4dc\uc640 \ub178\ub4dc\uc758 CPU \ucf54\uc5b4 \uc9d1\uacc4\ub294 CoreDNS\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \uc9c0\ud45c\uc785\ub2c8\ub2e4. \ub450 \uc9c0\ud45c\ub97c \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CoreDNS \uc2a4\ucf00\uc77c\ub9c1\uc740 CPU \ucf54\uc5b4 \uc218\ub97c \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \ubc18\uba74 \ub354 \uc791\uc740 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CoreDNS \ubcf5\uc81c\ubcf8\uc758 \uc218\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 CPU \ucf54\uc5b4\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ube44\ub840 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uad6c\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. linear: '{\"coresPerReplica\":256,\"min\":1,\"nodesPerReplica\":16}' \ub178\ub4dc \uadf8\ub8f9\uc774 \uc788\ub294 AMI \uc120\ud0dd \u00b6 EKS\ub294 \uace0\uac1d\uc774 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \ubaa8\ub450 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \ucd5c\uc801\ud654\ub41c EC2 AMI\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c AMI\ub294 \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc5d0 \ub300\ud574 \ubaa8\ub4e0 \ub9ac\uc804\uc5d0 \uac8c\uc2dc\ub429\ub2c8\ub2e4. EKS\ub294 CVE \ub610\ub294 \ubc84\uadf8\uac00 \ubc1c\uacac\ub418\uba74 \uc774\ub7ec\ud55c AMI\ub97c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc0ac\uc6a9\ud560 AMI\ub97c \uc120\ud0dd\ud560 \ub54c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 AMI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Ec2 describe-images api\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\ub798 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 AMI\ub97c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws ec2 describe-images --image-id ami-0d551c4f633e7679c --no-include-deprecated \uc774\ubbf8\uc9c0 \uc124\uba85 \ucd9c\ub825\uc5d0 DeprecationTime\uc774 \ud544\ub4dc\ub85c \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc5ec \uc9c0\uc6d0 \uc911\ub2e8\ub41c AMI\ub97c \uc2dd\ubcc4\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: aws ec2 describe-images --image-id ami-xxx --no-include-deprecated { \"Images\": [ { \"Architecture\": \"x86_64\", \"CreationDate\": \"2022-07-13T15:54:06.000Z\", \"ImageId\": \"ami-xxx\", \"ImageLocation\": \"123456789012/eks_xxx\", \"ImageType\": \"machine\", \"Public\": false, \"OwnerId\": \"123456789012\", \"PlatformDetails\": \"Linux/UNIX\", \"UsageOperation\": \"RunInstances\", \"State\": \"available\", \"BlockDeviceMappings\": [ { \"DeviceName\": \"/dev/xvda\", \"Ebs\": { \"DeleteOnTermination\": true, \"SnapshotId\": \"snap-0993a2fc4bbf4f7f4\", \"VolumeSize\": 20, \"VolumeType\": \"gp2\", \"Encrypted\": false } } ], \"Description\": \"EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.15, docker: 20.10.13-2.amzn2, containerd: 1.4.13-3.amzn2)\", \"EnaSupport\": true, \"Hypervisor\": \"xen\", \"Name\": \"aws_eks_optimized_xxx\", \"RootDeviceName\": \"/dev/xvda\", \"RootDeviceType\": \"ebs\", \"SriovNetSupport\": \"simple\", \"VirtualizationType\": \"hvm\", \"DeprecationTime\": \"2023-02-09T19:41:00.000Z\" } ] }","title":"EKS \ub370\uc774\ud130 \ud50c\ub808\uc778"},{"location":"reliability/docs/dataplane.kr/#eks","text":"\uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc6b4\uc601\ud558\ub824\uba74 \uac00\uc6a9\uc131\uacfc \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ud0c4\ub825\uc801\uc778 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \ubcf5\uad6c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc740 2\uac1c \uc774\uc0c1\uc758 \uc6cc\ucee4 \ub178\ub4dc\ub85c \uad6c\uc131\ub418\uba70, \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub530\ub77c \ud655\uc7a5 \ubc0f \ucd95\uc18c\ub420 \uc218 \uc788\uc73c\uba70 \uc7a5\uc560 \ubc1c\uc0dd \uc2dc \uc790\ub3d9\uc73c\ub85c \ubcf5\uad6c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub97c \uc0ac\uc6a9\ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc640 [Fargate] (https://docs.aws.amazon.com/eks/latest/userguide/fargate.html)\ub77c\ub294 \ub450 \uac00\uc9c0 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\ud0dd\ud558\uba74 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc9c1\uc811 \uad00\ub9ac\ud558\uac70\ub098 EKS \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc\uc640 \uc790\uccb4 \uad00\ub9ac\ud615 \uc6cc\ucee4 \ub178\ub4dc\uc640 Fargate\uac00 \ud63c\ud569\ub41c \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fargate\uc758 EKS\ub294 \ubcf5\uc6d0\ub825\uc774 \ub6f0\uc5b4\ub09c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc704\ud55c \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Fargate\ub294 \uaca9\ub9ac\ub41c \ucef4\ud4e8\ud305 \ud658\uacbd\uc5d0\uc11c \uac01 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. Fargate\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uac01 \ud30c\ub4dc\uc5d0\ub294 \uc790\uccb4 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \ud30c\ub4dc\ub97c \ud655\uc7a5\ud568\uc5d0 \ub530\ub77c Fargate\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud569\ub2c8\ub2e4. horizontal pod autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ud50c\ub808\uc778\uacfc \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubaa8\ub450 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\ub294 \ub370 \uc120\ud638\ub418\ub294 \ubc29\ubc95\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 Cluster Autoscaler , EC2 Auto Scaling \uadf8\ub8f9 \ub610\ub294 Atlassian's Esclator \uc640 \uac19\uc740 \ucee4\ubba4\ub2c8\ud2f0 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"EKS \ub370\uc774\ud130 \ud50c\ub808\uc778"},{"location":"reliability/docs/dataplane.kr/#_1","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/dataplane.kr/#ec2","text":"\uac1c\ubcc4 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc870\uc778\ud558\ub294 \ub300\uc2e0 EC2 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc740 \uc885\ub8cc\ub418\uac70\ub098 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud55c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud558\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130\uac00 \ud56d\uc0c1 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"EC2 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc \uc0dd\uc131"},{"location":"reliability/docs/dataplane.kr/#cluster-autoscaler","text":"Cluster Autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc544 \uc2e4\ud589\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\uac00 \uc788\uc744 \ub54c \ub370\uc774\ud130 \ud50c\ub808\uc778 \ud06c\uae30\ub97c \uc870\uc815\ud558\uba70, \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\ub97c \ucd94\uac00\ud558\uc5ec \ub3c4\uc6c0\uc744 \uc90d\ub2c8\ub2e4. Cluster Autoscaler\ub294 \ubc18\uc751\ud615 \ud504\ub85c\uc138\uc2a4\uc774\uae34 \ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc544 \ud30c\ub4dc\uac00 pending \uc0c1\ud0dc\uac00 \ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9bd\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 EC2 \uc778\uc2a4\ud134\uc2a4\uac00 \ucd94\uac00\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uc6a9\ub7c9\uc774 \ubd80\uc871\ud574\uc9c0\uba74 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ucd94\uac00\ub420 \ub54c\uae4c\uc9c0 \uc0c8 \ubcf5\uc81c\ubcf8 \ub610\ub294 \uc0c8 \ud30c\ub4dc\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4( Pending \uc0c1\ud0dc ). \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc6cc\ud06c\ub85c\ub4dc \uc218\uc694\ub97c \ucda9\uc871\ud560 \ub9cc\ud07c \ucda9\ubd84\ud788 \ube60\ub974\uac8c \ud655\uc7a5\ub418\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc9c0\uc5f0\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ucee4 \ub178\ub4dc\uc758 \uc0ac\uc6a9\ub960\uc774 \uc9c0\uc18d\uc801\uc73c\ub85c \ub0ae\uace0 \ud574\ub2f9 \ub178\ub4dc\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub2e4\ub978 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 Cluster Autoscaler\ub294 \ud574\ub2f9 \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc885\ub8cc\ud569\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\uc138\uc694"},{"location":"reliability/docs/dataplane.kr/#cluster-autoscaler_1","text":"Cluster Autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ud30c\ub4dc\uac00 \uc774\ubbf8 pending \uc0c1\ud0dc\uc77c \ub54c \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc2a4\ucf00\uc77c\ub9c1\uc744 \ud2b8\ub9ac\uac70\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub354 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc774 \ud544\uc694\ud55c \uc2dc\uc810\uacfc \uc2e4\uc81c\ub85c \ub354 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc744 \uac00\uc838\uc624\ub294 \uc2dc\uc810 \uc0ac\uc774\uc5d0 \uc9c0\uc5f0\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\uc5f0\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc740 \ud544\uc694\ud55c \uac83\ubcf4\ub2e4 \ub9ce\uc740 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. Cluster Autoscaler\uc5d0\uc11c \uad8c\uc7a5\ud558\ub294 \ub610 \ub2e4\ub978 \ud328\ud134\uc740 pause \ud30c\ub4dc\uc640 \uc6b0\uc120\uc21c\uc704 \uc120\uc810 \uae30\ub2a5 \uc785\ub2c8\ub2e4. pause \ud30c\ub4dc \ub294 pause \ucee8\ud14c\uc774\ub108 \ub97c \uc2e4\ud589\ud558\ub294\ub370, \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 \ub2e4\ub978 \ud30c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucef4\ud4e8\ud305 \uc6a9\ub7c9\uc758 placeholder \uc5ed\ud560\uc744 \ud558\ub294 \uac83 \uc678\uc5d0\ub294 \uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub9e4\uc6b0 \ub0ae\uc740 \ud560\ub2f9 \uc6b0\uc120 \uc21c\uc704 \ub85c \uc2e4\ud589\ub418\uae30 \ub54c\ubb38\uc5d0, \ub2e4\ub978 \ud30c\ub4dc\ub97c \uc0dd\uc131\ud574\uc57c \ud558\uace0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uac00\uc6a9 \uc6a9\ub7c9\uc774 \uc5c6\uc744 \ub54c \uc77c\uc2dc \uc911\uc9c0 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 pause \ud30c\ub4dc\uc758 \ucd95\ucd9c\uc744 \uac10\uc9c0\ud558\uace0 \uc2a4\ucf00\uc904\uc744 \ub2e4\uc2dc \uc7a1\uc73c\ub824\uace0 \ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ud074\ub7ec\uc2a4\ud130\uac00 \ucd5c\ub300 \uc6a9\ub7c9\uc73c\ub85c \uc2e4\ud589\ub418\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc77c\uc2dc \uc911\uc9c0 \ud30c\ub4dc\ub294 pending \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub418\uba70, Cluster Autoscaler\ub294 \uc774\uc5d0 \ub300\uc751\ud558\uc5ec \ub178\ub4dc\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. Helm \ucc28\ud2b8\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc624\ubc84\ud504\ub85c\ube44\uc800\ub108 \ub97c \uc124\uce58\ud560 \uc218 \uc788\ub2e4.","title":"Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc624\ubc84 \ud504\ub85c\ube44\uc800\ub2dd\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/dataplane.kr/#cluster-autoscaler_2","text":"--node-group-auto-discovery \ud50c\ub798\uadf8\ub97c \ud65c\uc131\ud654\ud55c \uc0c1\ud0dc\ub85c Cluster Autoscaler\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 Cluster Autoscaler\uac00 \uc815\uc758\ub41c \ud2b9\uc815 \ud0dc\uadf8\uac00 \ud3ec\ud568\ub41c \ubaa8\ub4e0 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0\uc11c \uac01 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc815\uc758\ud558\uace0 \uc720\uc9c0\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uc5ec\ub7ec \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uacfc \ud568\uaed8 Cluster Autoscaler \uc0ac\uc6a9"},{"location":"reliability/docs/dataplane.kr/#cluster-autoscaler_3","text":"\uae30\ubcf8\uc801\uc73c\ub85c Cluster Autoscaler\ub294 \ub85c\uceec \uc2a4\ud1a0\ub9ac\uc9c0\uac00 \uc5f0\uacb0\ub41c \uc0c1\ud0dc\ub85c \ubc30\ud3ec\ub41c \ud30c\ub4dc\uac00 \uc788\ub294 \ub178\ub4dc\ub97c \ucd95\uc18c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. --skip-nodes-with-local-storage \ud50c\ub798\uadf8\ub97c false\ub85c \uc124\uc815\ud558\uba74 Cluster Autoscaler\uac00 \uc774\ub7ec\ud55c \ub178\ub4dc\ub97c \ucd95\uc18c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub85c\uceec \uc2a4\ud1a0\ub9ac\uc9c0\uc640 \ud568\uaed8 Cluster Autoscaler \uc0ac\uc6a9"},{"location":"reliability/docs/dataplane.kr/#az","text":"\uc5ec\ub7ec AZ\uc5d0\uc11c \uc6cc\ucee4 \ub178\ub4dc\uc640 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc5ec \uac1c\ubcc4 AZ\uc5d0\uc11c \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uc11c\ube0c\ub137\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc0dd\uc131\ub418\ub294 AZ\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.18+\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 AZ\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\ud558\ub294 \ub370 \uad8c\uc7a5\ub418\ub294 \ubc29\ubc95\uc740 \ud30c\ub4dc\uc5d0 \ub300\ud55c \ud1a0\ud3f4\ub85c\uc9c0 \ubd84\uc0b0 \uc81c\uc57d \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc544\ub798 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub294 \uac00\ub2a5\ud55c \uacbd\uc6b0 AZ\uc5d0 \ud30c\ub4dc\ub97c \ubd84\uc0b0\uc2dc\ud0a4\uace0, \uadf8\ub807\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \ud574\ub2f9 \ud30c\ub4dc\ub294 \uadf8\ub0e5 \uc2e4\ud589\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: replicas: 3 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 whenUnsatisfiable: ScheduleAnyway topologyKey: topology.kubernetes.io/zone labelSelector: matchLabels: app: web-server containers: - name: web-app image: nginx resources: requests: cpu: 1 \ucc38\uace0 kube-scheduler \ub294 \ud574\ub2f9 \ub808\uc774\ube14\uc774 \uc788\ub294 \ub178\ub4dc\ub97c \ud1b5\ud55c \ud1a0\ud3f4\ub85c\uc9c0 \ub3c4\uba54\uc778\ub9cc \uc778\uc2dd\ud569\ub2c8\ub2e4. \uc704\uc758 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c \ub2e8\uc77c \uc874\uc5d0\ub9cc \ub178\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc30\ud3ec\ud558\uba74, kube-scheduler \uac00 \ub2e4\ub978 \uc874\uc744 \uc778\uc2dd\ud558\uc9c0 \ubabb\ud558\ubbc0\ub85c \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ud574\ub2f9 \ub178\ub4dc\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ub429\ub2c8\ub2e4. \uc774 Topology Spread\uac00 \uc2a4\ucf00\uc904\ub7ec\uc640 \ud568\uaed8 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud558\ub824\uba74 \ubaa8\ub4e0 \uc874\uc5d0 \ub178\ub4dc\uac00 \uc774\ubbf8 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.24\uc5d0\uc11c MinDomainsInPodToplogySpread \uae30\ub2a5 \uac8c\uc774\ud2b8 \uac00 \ucd94\uac00\ub418\uba74\uc11c \ud574\uacb0\ub420 \uac83\uc785\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \uc2a4\ucf00\uc904\ub7ec\uc5d0 \uc801\uaca9 \ub3c4\uba54\uc778 \uc218\ub97c \uc54c\ub9ac\uae30 \uc704\ud574 MinDomains \uc18d\uc131\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 whenUnsatisfiable \ub97c Donot Schedule \ub85c \uc124\uc815\ud558\uba74 Topology Spread Constraints\uc744 \ucda9\uc871\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4. Topology Spread Constraints\uc744 \uc704\ubc18\ud558\ub294 \ub300\uc2e0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \ub354 \uc88b\uc740 \uacbd\uc6b0\uc5d0\ub9cc \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c\ub294 \ud30c\ub4dc anti-affinity \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec AZ\uc5d0 \uac78\uccd0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc5d0\uac8c \ubcc4\uac1c\uc758 AZ\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \uac83\uc744 \uc120\ud638 \ud55c\ub2e4\uace0 \uc54c\ub824\uc90d\ub2c8\ub2e4. apiVersion: apps/v1 kind: Deployment metadata: name: web-server labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: failure-domain.beta.kubernetes.io/zone weight: 100 containers: - name: web-app image: nginx \uacbd\uace0 \ud30c\ub4dc\ub97c \uc11c\ub85c \ub2e4\ub978 AZ\uc5d0 \uc2a4\ucf00\uc904\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc \uc218\uac00 AZ \uc218\ub97c \uc808\ub300 \ucd08\uacfc\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\uc6cc\ucee4 \ub178\ub4dc\uc640 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc5ec\ub7ec AZ\uc5d0 \ubd84\uc0b0\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/dataplane.kr/#ebs-az","text":"Amazon EBS\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc601\uad6c \ubcfc\ub968 \uc81c\uacf5 \uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud30c\ub4dc \ubc0f \uad00\ub828 EBS \ubcfc\ub968\uc774 \ub3d9\uc77c\ud55c AZ\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uae00\uc744 \uc4f0\ub294 \uc2dc\uc810\uc5d0\uc11c EBS \ubcfc\ub968\uc740 \ub2e8\uc77c AZ \ub0b4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ub2e4\ub978 AZ\uc5d0 \uc704\uce58\ud55c EBS \uc9c0\uc6d0 \uc601\uad6c \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5b4\ub290 AZ\uc5d0 \uc704\uce58\ud558\ub294\uc9c0 \uc54c\uace0 \uc788\uc2b5\ub2c8\ub2e4 . \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud574\ub2f9 \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 EBS \ubcfc\ub968\uc774 \ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ud56d\uc0c1 \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ubcfc\ub968\uc774 \uc704\uce58\ud55c AZ\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud56d\uc0c1 \ud544\uc694\ud55c EBS \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\ub294 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\ub3c4\ub85d \ucda9\ubd84\ud55c \uc6a9\ub7c9\uc744 \uac16\ucd98 \uac01 AZ\uc5d0 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ub610\ud55c \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c --balance-similar-similar-node groups \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uc9c0\ub9cc \uac00\uc6a9\uc131\uc744 \ub192\uc774\uae30 \uc704\ud55c \uc694\uad6c \uc0ac\ud56d\uc774 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589 \uc911\uc778 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc30\ud3ec\ub97c \ub2e8\uc77c AZ\ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0 AZ \uc774\ub984\uc774 \ud3ec\ud568\ub41c failure-domain.beta.kubernetes.io/zone \ub808\uc774\ube14\uc774 \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ub429\ub2c8\ub2e4. kubectl get nodes --show-labels \ub97c \uc2e4\ud589\ud558\uc5ec \ub178\ub4dc\uc5d0 \ucca8\ubd80\ub41c \ub808\uc774\ube14\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube4c\ud2b8\uc778 \ub178\ub4dc \ub808\uc774\ube14\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 [\uc5ec\uae30] (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#built-in-node-labels)\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc140\ub809\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 AZ\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\uc2dc\uc5d0\uc11c\ub294 \ud30c\ub4dc\uac00 us-west-2c AZ\uc5d0\uc11c\ub9cc \uc2a4\ucf00\uc904\ub9c1\ub429\ub2c8\ub2e4. apiVersion: v1 kind: Pod metadata: name: single-az-pod spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: failure-domain.beta.kubernetes.io/zone operator: In values: - us-west-2c containers: - name: single-az-container image: kubernetes/pause \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968(EBS \uc9c0\uc6d0) \uc5ed\uc2dc AZ \uc774\ub984\uc73c\ub85c \uc790\ub3d9 \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub429\ub2c8\ub2e4. kubectl get pv -L topology.ebs.csi.aws.com/zone \uba85\ub839\uc744 \uc2e4\ud589\ud574 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc774 \uc5b4\ub290 AZ\uc5d0 \uc18d\ud558\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc0dd\uc131\ub418\uace0 \ubcfc\ub968\uc744 \uc694\uccad\ud558\uba74, \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ud574\ub2f9 \ubcfc\ub968\uacfc \ub3d9\uc77c\ud55c AZ\uc5d0 \uc788\ub294 \ub178\ub4dc\uc5d0 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud569\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc774 \ud558\ub098\uc778 EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\ub97c \uc0dd\uac01\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc774 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 3\uac1c\uc758 AZ\uc5d0 \ubd84\uc0b0\ub41c \uc138 \uac1c\uc758 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. EBS \uc9c0\uc6d0 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud574\ub2f9 \ubcfc\ub968\uc744 \uc0dd\uc131\ud558\uba74 \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc138 \uac1c\uc758 AZ \uc911 \uccab \ubc88\uc9f8 AZ\uc5d0 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \uc774 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ube44\uc815\uc0c1 \uc0c1\ud0dc\uac00 \ub418\uace0 \uc774\ud6c4\uc5d0\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub41c\ub2e4. Cluster Autoscaler\ub294 \ube44\uc815\uc0c1 \ub178\ub4dc\ub97c \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\ub85c \uad50\uccb4\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc790\ub3d9 \ud655\uc7a5 \uadf8\ub8f9\uc774 \uc138 \uac1c\uc758 AZ\uc5d0 \uac78\uccd0 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc0c1\ud669\uc5d0 \ub530\ub77c \uc0c8 \uc6cc\ucee4 \ub178\ub4dc\uac00 \ub450 \ubc88\uc9f8 \ub610\ub294 \uc138 \ubc88\uc9f8 AZ\uc5d0\uc11c \uc2dc\uc791\ub420 \uc218 \uc788\uc9c0\ub9cc \uccab \ubc88\uc9f8 AZ\uc5d0\uc11c\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AZ \uc81c\uc57d\uc774 \uc788\ub294 EBS \ubcfc\ub968\uc740 \uccab \ubc88\uc9f8 AZ\uc5d0\ub9cc \uc874\uc7ac\ud558\uace0 \ud574\ub2f9 AZ\uc5d0\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc5c6\uc73c\ubbc0\ub85c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uac01 AZ\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc744 \ud558\ub098\uc529 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub798\uc57c \ub2e4\ub978 AZ\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ud560 \uc218 \uc5c6\ub294 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c \uc6a9\ub7c9\uc774 \ud56d\uc0c1 \ud655\ubcf4\ub429\ub2c8\ub2e4. \ub610\ub294 \uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\uac00 \ud544\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud560 \ub54c [EFS] (https://github.com/kubernetes-sigs/aws-efs-csi-driver)\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \ub2e8\uc21c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \ub9ac\uc804 \ub0b4 \ubaa8\ub4e0 AZ\uc5d0\uc11c \ub3d9\uc2dc\uc5d0 EFS \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EFS \uae30\ubc18 \ud37c\uc2dc\uc2a4\ud134\ud2b8 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uc5b4 \ub2e4\ub978 AZ\uc5d0 \uc2a4\ucf00\uc904\ub418\ub354\ub77c\ub3c4 \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud560 \ub54c \uac01 AZ\uc758 \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud558\uc2ed\uc2dc\uc624."},{"location":"reliability/docs/dataplane.kr/#_2","text":"\uc6cc\ucee4 \ub178\ub4dc\uc758 \uc7a5\uc560\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. node-problem-detector \ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc124\uce58\ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc \ubb38\uc81c\ub97c \ud0d0\uc9c0\ud560 \uc218 \uc788\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uc785\ub2c8\ub2e4. npd\uc758 \uce58\ub8cc \uc2dc\uc2a4\ud15c \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ube44\uc6b0\uace0 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \ubb38\uc81c \uac10\uc9c0\uae30 \uc2e4\ud589"},{"location":"reliability/docs/dataplane.kr/#_3","text":"\uc6b4\uc601 \uccb4\uc81c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ucef4\ud4e8\ud305 \uc6a9\ub7c9\ub97c \uc608\uc57d \ud558\uc5ec \uc6cc\ucee4 \ub178\ub4dc\uc758 \uc548\uc815\uc131\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc, \ud2b9\ud788 limits \uc774 \uc120\uc5b8\ub418\uc9c0 \uc54a\uc740 \ud30c\ub4dc\ub294 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \ud3ec\ud654\uc2dc\ucf1c \uc6b4\uc601\uccb4\uc81c \ud504\ub85c\uc138\uc2a4\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac ( kubelet , \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ub4f1)\uc774 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \ub193\uace0 \ud30c\ub4dc\uc640 \uacbd\uc7c1\ud558\ub294 \uc0c1\ud669\uc5d0 \ub193\uc774\uac8c \ub429\ub2c8\ub2e4. kubelet \ud50c\ub798\uadf8 --system-reserved \uc640 --kube-reserved \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c \ud504\ub85c\uc138\uc2a4 ( udev , sshd \ub4f1)\uc640 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ub9ac\uc18c\uc2a4\ub97c \uac01\uac01 \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Linux AMI \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CPU, \uba54\ubaa8\ub9ac \ubc0f \uc2a4\ud1a0\ub9ac\uc9c0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc6a9\uc73c\ub85c \uc608\uc57d\ub429\ub2c8\ub2e4. \uc774 AMI\ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 \uc6cc\ucee4 \ub178\ub4dc\uac00 \uc2dc\uc791\ub418\uba74 bootstrap.sh \uc2a4\ud06c\ub9bd\ud2b8 \ub97c \ud2b8\ub9ac\uac70\ud558\ub3c4\ub85d EC2 \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uac00 \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774 \uc2a4\ud06c\ub9bd\ud2b8\ub294 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CPU \ucf54\uc5b4 \uc218\uc640 \ucd1d \uba54\ubaa8\ub9ac\ub97c \uae30\ubc18\uc73c\ub85c CPU \ubc0f \uba54\ubaa8\ub9ac \uc608\uc57d\uc744 \uacc4\uc0b0\ud569\ub2c8\ub2e4. \uacc4\uc0b0\ub41c \uac12\uc740 /etc/kubernetes/kubelet/kubelet-config.json \uc5d0 \uc788\ub294 KubeletConfiguration \ud30c\uc77c\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub370\ubaac\uc744 \uc2e4\ud589\ud558\uace0 \uae30\ubcf8\uc801\uc73c\ub85c \uc608\uc57d\ub41c CPU \ubc0f \uba54\ubaa8\ub9ac \uc591\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4 \uc608\uc57d\uc744 \ub298\ub824\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. eksctl \uc740 \uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc758 \ub9ac\uc18c\uc2a4 \uc608\uc57d \uc744 \uc0ac\uc6a9\uc790 \uc9c0\uc815\ud558\ub294 \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"\uc2dc\uc2a4\ud15c \ubc0f \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\ubaac\uc744 \uc704\ud55c \ub9ac\uc18c\uc2a4 \uc608\uc57d"},{"location":"reliability/docs/dataplane.kr/#qos","text":"\uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0, \ud30c\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574 requests = limits \uc815\uc758\ub97c \uace0\ub824\ud574\ubcf4\uc2ed\uc2dc\uc624. \uc774\ub807\uac8c \ud558\uba74 \ub2e4\ub978 \ud30c\ub4dc\uac00 \ub9ac\uc18c\uc2a4\ub97c \uc694\uccad\ud558\ub354\ub77c\ub3c4 \ucee8\ud14c\uc774\ub108\uac00 \uc885\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 CPU \ubc0f \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \uc2e4\uc218\ub85c \uc2dc\uc2a4\ud15c \ub9ac\uc18c\uc2a4\ub97c \uc18c\ube44\ud558\uc5ec \uac19\uc740 \uc704\uce58\uc5d0 \ubc30\uce58\ub41c \ub2e4\ub978 \ud504\ub85c\uc138\uc2a4\uc758 \uac00\uc6a9\uc131\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"QoS \uad6c\ud604"},{"location":"reliability/docs/dataplane.kr/#_4","text":"\ub9ac\uc18c\uc2a4 \uc694\uccad\uc758 \ud06c\uae30 \uc870\uc815 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud55c\ub3c4\uc5d0 \ub300\ud55c \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \uc9c0\uce68\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\uc5d0 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \uc81c\ud55c\uc774 \uc5c6\ub294 \uacbd\uc6b0 \uc694\uccad\uc740 \ucee8\ud14c\uc774\ub108\uc758 \uc0c1\ub300\uc801 CPU \uc0ac\uc6a9 \uc2dc\uac04 \uc5d0 \uac00\uc911\uce58 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc778\uc704\uc801\uc778 \uc81c\ud55c\uc774\ub098 \uacfc\ub2e4 \ud604\uc0c1 \uc5c6\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c CPU \uc804\uccb4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\uac00 \uc544\ub2cc \ub9ac\uc18c\uc2a4\uc758 \uacbd\uc6b0, requests = limits \ub97c \uad6c\uc131\ud558\uba74 \uac00\uc7a5 \uc608\uce21 \uac00\ub2a5\ud55c \ub3d9\uc791\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4. \ub9cc\uc57d requests != limits \uc774\uba74, \ucee8\ud14c\uc774\ub108\uc758 QOS \ub3c4 Guaranteed\uc5d0\uc11c Burstable\ub85c \uac10\uc18c\ud558\uc5ec node pressure \uc774\ubca4\ud2b8\uc5d0 \ucd95\ucd9c\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc84c\uc2b5\ub2c8\ub2e4. CPU\uac00 \uc544\ub2cc \ub9ac\uc18c\uc2a4\uc758 \uacbd\uc6b0 \uc694\uccad\ubcf4\ub2e4 \ud6e8\uc52c \ud070 \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. limits \uc774 requests \uc5d0 \ube44\ud574 \ud06c\uac8c \uad6c\uc131\ub420\uc218\ub85d \ub178\ub4dc\uac00 \uc624\ubc84 \ucee4\ubc0b\ub418\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc911\ub2e8\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc544\uc9d1\ub2c8\ub2e4. Karpenter \ub610\ub294 Cluster AutoScaler \uc640 \uac19\uc740 \ub178\ub4dc \uc790\ub3d9 \ud06c\uae30 \uc870\uc815 \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud560 \ub54c\ub294 \uc694\uccad \ud06c\uae30\ub97c \uc62c\ubc14\ub974\uac8c \uc9c0\uc815\ud558\ub294 \uac83\uc774 \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub3c4\uad6c\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uccad\uc744 \uac80\ud1a0\ud558\uc5ec \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub178\ub4dc\uc758 \uc218\uc640 \ud06c\uae30\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \uc694\uccad\uc774 \ub108\ubb34 \uc791\uc544 \uc81c\ud55c\uc774 \ub354 \ud070 \uacbd\uc6b0, \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uaf49 \ucc28 \uc788\uc73c\uba74 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc81c\uac70\ub418\uac70\ub098 OOM\uc73c\ub85c \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uacb0\uc815\ud558\ub294 \uac83\uc740 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc9c0\ub9cc Vertical Pod Autoscaler \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uba74 \ub7f0\ud0c0\uc784 \uc2dc \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uad00\ucc30\ud558\uc5ec \uc694\uccad \uaddc\ubaa8\ub97c '\uc801\uc815'\ud558\uac8c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \ud06c\uae30\ub97c \uacb0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub294 \ub2e4\ub978 \ub3c4\uad6c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Goldilocks Parca Prodfiler rsg","title":"\ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ub9ac\uc18c\uc2a4 \uc694\uccad/\uc81c\ud55c \uad6c\uc131 \ubc0f \ud06c\uae30 \uc870\uc815"},{"location":"reliability/docs/dataplane.kr/#_5","text":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc0ac\uc6a9\uc790\uac00 \uc5ec\ub7ec \ud300 \ub610\ub294 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\ub294 \ud658\uacbd\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c \uac83\uc785\ub2c8\ub2e4. \uc774\ub984 \ubc94\uc704\ub97c \uc81c\uacf5\ud558\uace0 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\ub97c \uc5ec\ub7ec \ud300, \ud504\ub85c\uc81d\ud2b8, \uc6cc\ud06c\ub85c\ub4dc \uac04\uc5d0 \ub098\ub204\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ucd1d \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ResourceQuota \uac1d\uccb4\ub294 \uc720\ud615\ubcc4\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uac1c\uccb4 \uc218\uc640 \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc758 \ub9ac\uc18c\uc2a4\uac00 \uc18c\ube44\ud560 \uc218 \uc788\ub294 \ucd1d \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc591\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc815\ub41c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc694\uccad\ud560 \uc218 \uc788\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 \ubc0f/\ub610\ub294 \ucef4\ud4e8\ud305(CPU \ubc0f \uba54\ubaa8\ub9ac) \ub9ac\uc18c\uc2a4\uc758 \ucd1d\ud569\uc744 \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac\uc640 \uac19\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9ac\uc18c\uc2a4 \ucffc\ud130\uac00 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0 \uc0ac\uc6a9\uc790\ub294 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ub610\ub294 \uc81c\ud55c\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub7c9\uc744 \uad6c\uc131\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ucee8\ud14c\uc774\ub108\uc5d0 \uc0ac\uc804 \uad6c\uc131\ub41c \uc81c\ud55c\uc744 \uc790\ub3d9\uc73c\ub85c \uc801\uc6a9\ud558\ub824\uba74 LimitRanges \ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uad6c\uc131"},{"location":"reliability/docs/dataplane.kr/#_6","text":"\ub9ac\uc18c\uc2a4 \ucffc\ud130\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. LimitRange \uac1c\uccb4 \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc694\uccad\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ub9ac\uc18c\uc2a4\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. LimitRange \ub97c \uc0ac\uc6a9\ud558\uba74 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218 \uc788\ub294\ub370, \uc774\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc81c\ud55c\uc744 \uc124\uc815\ud558\ub294 \uac83\uc774 \uc870\uc9c1\uc758 \ud45c\uc900 \uad00\ud589\uc774 \uc544\ub2cc \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub984\uc5d0\uc11c \uc54c \uc218 \uc788\ub4ef\uc774, LimitRange \ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud30c\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108\ub2f9 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \ud37c\uc2dc\uc2a4\ud134\ud2b8\ubcfc\ub968\ud074\ub808\uc784\ub2f9 \ucd5c\uc18c \ubc0f \ucd5c\ub300 \uc2a4\ud1a0\ub9ac\uc9c0 \uc694\uccad\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc640 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uc81c\ud55c\uc744 \uc801\uc6a9\ud558\ub824\uba74 LimitRange \uc640 ResourceQuota \ub97c \ud568\uaed8 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc81c\ud55c\uc744 \uc124\uc815\ud558\uba74 \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ud074\ub7ec\uc2a4\ud130\uc758 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud558\ub294 \ub9ac\uc18c\uc2a4\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/dataplane.kr/#coredns","text":"CoreDNS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub984 \ud655\uc778 \ubc0f \uc11c\ube44\uc2a4 \uac80\uc0c9 \uae30\ub2a5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub429\ub2c8\ub2e4. \uc0c1\ud638 \uc6b4\uc6a9\uc131\uc744 \uc704\ud574 CoreDNS\uc6a9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4\uc758 \uc774\ub984\uc740 \uc5ec\uc804\ud788 kube-dns \ub85c \uc9c0\uc815\ub429\ub2c8\ub2e4. CoreDNS \ud30c\ub4dc\ub294 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uc77c\ubd80\ub85c kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\uba70, EKS\uc5d0\uc11c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc694\uccad\uacfc \uc81c\ud55c\uc774 \uc120\uc5b8\ub41c \ub450 \uac1c\uc758 \ubcf5\uc81c\ubcf8\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. DNS \ucffc\ub9ac\ub294 kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 kube-dns \uc11c\ube44\uc2a4\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4.","title":"CoreDNS"},{"location":"reliability/docs/dataplane.kr/#_7","text":"","title":"\uad8c\uc7a5 \uc0ac\ud56d"},{"location":"reliability/docs/dataplane.kr/#dns","text":"CoreDNS\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc744 \ub0b4\uc7a5\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 CoreDNS \uc9c0\uc5f0 \uc2dc\uac04( coredns_dns_request_duration_seconds_sum , 1.7.0 \ubc84\uc804 \uc774\uc804\uc5d0\ub294 \uba54\ud2b8\ub9ad\uc774 core_dns_response_rcode_count_total \uc774\ub77c\uace0 \ubd88\ub838\uc74c), \uc624\ub958 ( coredns_dns_responses_total , NXDOMAIN, SERVFAIL, FormErr) \ubc0f CoreDNS \ud30c\ub4dc\uc758 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub300\ud55c \ubaa8\ub2c8\ud130\ub9c1\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ubb38\uc81c \ud574\uacb0\uc744 \uc704\ud574 kubectl\uc744 \uc0ac\uc6a9\ud558\uc5ec CoreDNS \ub85c\uadf8\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. for p in $( kubectl get pods \u2014namespace = kube-system -l k8s-app = kube-dns -o name ) ; do kubectl logs \u2014namespace = kube-system $p ; done","title":"\ud575\uc2ec DNS \uc9c0\ud45c \ubaa8\ub2c8\ud130\ub9c1"},{"location":"reliability/docs/dataplane.kr/#dns_1","text":"\ub178\ub4dc \ub85c\uceec DNS \uce90\uc2dc \ub97c \uc2e4\ud589\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud074\ub7ec\uc2a4\ud130 \ub178\ub4dc\uc5d0\uc11c DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c \ub370\ubaac\uc14b\uc73c\ub85c \uc2e4\ud589\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 kube-dns \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 DNS \uce90\uc2f1 \uc5d0\uc774\uc804\ud2b8\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"\ub178\ub4dc \ub85c\uceec DNS \uce90\uc2dc \uc0ac\uc6a9"},{"location":"reliability/docs/dataplane.kr/#coredns-cluster-proportional-scaler","text":"\ud074\ub7ec\uc2a4\ud130 DNS \uc131\ub2a5\uc744 \uac1c\uc120\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc740 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \ubc0f CPU \ucf54\uc5b4 \uc218\uc5d0 \ub530\ub77c CoreDNS \ubc30\ud3ec\ub97c \uc790\ub3d9\uc73c\ub85c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc218\ud3c9 \ud074\ub7ec\uc2a4\ud130 \ube44\ub840 \uc790\ub3d9 \ud655\uc7a5 \uc740 \uc2a4\ucf00\uc904 \uac00\ub2a5\ud55c \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud06c\uae30\uc5d0 \ub530\ub77c \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc870\uc815\ud558\ub294 \ucee8\ud14c\uc774\ub108\uc785\ub2c8\ub2e4. \ub178\ub4dc\uc640 \ub178\ub4dc\uc758 CPU \ucf54\uc5b4 \uc9d1\uacc4\ub294 CoreDNS\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \ub450 \uac00\uc9c0 \uc9c0\ud45c\uc785\ub2c8\ub2e4. \ub450 \uc9c0\ud45c\ub97c \ub3d9\uc2dc\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CoreDNS \uc2a4\ucf00\uc77c\ub9c1\uc740 CPU \ucf54\uc5b4 \uc218\ub97c \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4. \ubc18\uba74 \ub354 \uc791\uc740 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 CoreDNS \ubcf5\uc81c\ubcf8\uc758 \uc218\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 CPU \ucf54\uc5b4\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \ube44\ub840 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uad6c\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. linear: '{\"coresPerReplica\":256,\"min\":1,\"nodesPerReplica\":16}'","title":"CoreDNS\uc758 cluster-proportional-scaler\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4."},{"location":"reliability/docs/dataplane.kr/#ami","text":"EKS\ub294 \uace0\uac1d\uc774 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \ubaa8\ub450 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud558\ub294 \ucd5c\uc801\ud654\ub41c EC2 AMI\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c AMI\ub294 \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804\uc5d0 \ub300\ud574 \ubaa8\ub4e0 \ub9ac\uc804\uc5d0 \uac8c\uc2dc\ub429\ub2c8\ub2e4. EKS\ub294 CVE \ub610\ub294 \ubc84\uadf8\uac00 \ubc1c\uacac\ub418\uba74 \uc774\ub7ec\ud55c AMI\ub97c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \uac83\uc73c\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc0ac\uc6a9\ud560 AMI\ub97c \uc120\ud0dd\ud560 \ub54c\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 AMI\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Ec2 describe-images api\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc544\ub798 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 AMI\ub97c \ud544\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws ec2 describe-images --image-id ami-0d551c4f633e7679c --no-include-deprecated \uc774\ubbf8\uc9c0 \uc124\uba85 \ucd9c\ub825\uc5d0 DeprecationTime\uc774 \ud544\ub4dc\ub85c \ud3ec\ud568\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc5ec \uc9c0\uc6d0 \uc911\ub2e8\ub41c AMI\ub97c \uc2dd\ubcc4\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74: aws ec2 describe-images --image-id ami-xxx --no-include-deprecated { \"Images\": [ { \"Architecture\": \"x86_64\", \"CreationDate\": \"2022-07-13T15:54:06.000Z\", \"ImageId\": \"ami-xxx\", \"ImageLocation\": \"123456789012/eks_xxx\", \"ImageType\": \"machine\", \"Public\": false, \"OwnerId\": \"123456789012\", \"PlatformDetails\": \"Linux/UNIX\", \"UsageOperation\": \"RunInstances\", \"State\": \"available\", \"BlockDeviceMappings\": [ { \"DeviceName\": \"/dev/xvda\", \"Ebs\": { \"DeleteOnTermination\": true, \"SnapshotId\": \"snap-0993a2fc4bbf4f7f4\", \"VolumeSize\": 20, \"VolumeType\": \"gp2\", \"Encrypted\": false } } ], \"Description\": \"EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.15, docker: 20.10.13-2.amzn2, containerd: 1.4.13-3.amzn2)\", \"EnaSupport\": true, \"Hypervisor\": \"xen\", \"Name\": \"aws_eks_optimized_xxx\", \"RootDeviceName\": \"/dev/xvda\", \"RootDeviceType\": \"ebs\", \"SriovNetSupport\": \"simple\", \"VirtualizationType\": \"hvm\", \"DeprecationTime\": \"2023-02-09T19:41:00.000Z\" } ] }","title":"\ub178\ub4dc \uadf8\ub8f9\uc774 \uc788\ub294 AMI \uc120\ud0dd"},{"location":"reliability/docs/dataplane/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} EKS Data Plane \u00b6 To operate high-available and resilient applications, you need a highly-available and resilient data plane. An elastic data plane ensures that Kubernetes can scale and heal your applications automatically. A resilient data plane consists of two or more worker nodes, can grow and shrink with the workload, and automatically recover from failures. You have two choices for worker nodes with EKS: EC2 instances and Fargate . If you choose EC2 instances, you can manage the worker nodes yourself or use EKS managed node groups . You can have a cluster with a mix of managed, self-managed worker nodes, and Fargate. EKS on Fargate offers the easiest path to a resilient data plane. Fargate runs each Pod in an isolated compute environment. Each Pod running on Fargate gets its own worker node. Fargate automatically scales the data plane as Kubernetes scales pods. You can scale both the data plane and your workload by using the horizontal pod autoscaler . The preferred way to scale EC2 worker nodes is by using Kubernetes Cluster Autoscaler , EC2 Auto Scaling groups or community projects like Atlassian\u2019s Esclator . Recommendations \u00b6 Use EC2 Auto Scaling Groups to create worker nodes \u00b6 It is a best practice to create worker nodes using EC2 Auto Scaling groups instead of creating individual EC2 instances and joining them to the cluster. Auto Scaling Groups will automatically replace any terminated or failed nodes ensuring that the cluster always has the capacity to run your workload. Use Kubernetes Cluster Autoscaler to scale nodes \u00b6 Cluster Autoscaler adjusts the size of the data plane when there are pods that cannot be run because the cluster has insufficient resources, and adding another worker node would help. Although Cluster Autoscaler is a reactive process, it waits until pods are in Pending state due to insufficient capacity in the cluster. When such an event occurs, it adds EC2 instances to the cluster. Whenever the cluster runs out of capacity, new replicas - or new pods - will be unavailable ( in Pending state ) until worker nodes are added. This delay may impact your applications' reliability if the data plane cannot scale fast enough to meet the demands of the workload. If a worker node is consistently underutilized and all of its pods can be scheduled on other worker nodes, Cluster Autoscaler terminates it. Configure over-provisioning with Cluster Autoscaler \u00b6 Cluster Autoscaler triggers a scale-up of the data-plane when Pods in the cluster are already Pending . Hence, there may be a delay between the time your application needs more replicas, and when it, in fact, gets more replicas. An option to account for this possible delay is through adding more than required replicas, inflating the number of replicas for the application. Another pattern that Cluster Autoscaler recommends uses pause Pods and the Priority Preemption feature . The pause Pod runs a pause container , which as the name suggests, does nothing but acts as a placeholder for compute capacity that can be used by other Pods in your cluster. Because it runs with a very low assigned priority , the pause Pod gets evicted from the node when another Pod needs to be created, and the cluster doesn\u2019t have available capacity. The Kubernetes Scheduler notices the eviction of the pause Pod and tries to reschedule it. But since the cluster is running at capacity, the pause Pod remains Pending , to which the Cluster Autoscaler reacts by adding nodes. A Helm chart is available to install cluster overprovisioner . Using Cluster Autoscaler with multiple Auto Scaling Groups \u00b6 Run the Cluster Autoscaler with the --node-group-auto-discovery flag enabled. Doing so will allow the Cluster Autoscaler to find all autoscaling groups that include a particular defined tag and prevents the need to define and maintain each autoscaling group in the manifest. Using Cluster Autoscaler with local storage \u00b6 By default, the Cluster Autoscaler does not scale-down nodes that have pods deployed with local storage attached. Set the --skip-nodes-with-local-storage flag to false to allow Cluster Autoscaler to scale-down these nodes. Spread worker nodes and workload across multiple AZs \u00b6 You can protect your workloads from failures in an individual AZ by running worker nodes and pods in multiple AZs. You can control the AZ the worker nodes are created in using the subnets you create the nodes in. If you are using Kubernetes 1.18+, the recommended method for spreading pods across AZs is to use Topology Spread Constraints for Pods . The deployment below spreads pods across AZs if possible, letting those pods run anyway if not: apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: replicas: 3 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 whenUnsatisfiable: ScheduleAnyway topologyKey: topology.kubernetes.io/zone labelSelector: matchLabels: app: web-server containers: - name: web-app image: nginx resources: requests: cpu: 1 Note kube-scheduler is only aware of topology domains via nodes that exist with those labels. If the above deployment is deployed to a cluster with nodes only in a single zone, all of the pods will schedule on those nodes as kube-scheduler isn't aware of the other zones. For this topology spread to work as expected with the scheduler, nodes must already exist in all zones. This issue will be resolved in Kubernetes 1.24 with the addition of the MinDomainsInPodToplogySpread feature gate which allows specifying a minDomains property to inform the scheduler of the number of eligible domains. Warning Setting whenUnsatisfiable to DoNotSchedule will cause pods to be unschedulable if the topology spread constraint can't be fulfilled. It should only be set if its preferable for pods to not run instead of violating the topology spread constraint. On older versions of Kubernetes, you can use pod anti-affinity rules to schedule pods across multiple AZs. The manifest below informs Kubernetes scheduler to prefer scheduling pods in distinct AZs. apiVersion: apps/v1 kind: Deployment metadata: name: web-server labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: failure-domain.beta.kubernetes.io/zone weight: 100 containers: - name: web-app image: nginx Warning Do not require that pods be scheduled across distinct AZs otherwise, the number of pods in a deployment will never exceed the number of AZs. Ensure capacity in each AZ when using EBS volumes \u00b6 If you use Amazon EBS to provide Persistent Volumes , then you need to ensure that the pods and associated EBS volume are located in the same AZ. At the time of writing, EBS volumes are only available within a single AZ. A Pod cannot access EBS-backed persistent volumes located in a different AZ. Kubernetes scheduler knows which AZ a worker node is located in. Kubernetes will always schedule a Pod that requires an EBS volume in the same AZ as the volume. However, if there are no worker nodes available in the AZ where the volume is located, then the Pod cannot be scheduled. Create Auto Scaling Group for each AZ with enough capacity to ensure that the cluster always has capacity to schedule pods in the same AZ as the EBS volumes they need. In addition, you should enable the --balance-similar-node-groups feature in Cluster Autoscaler. If you are running an application that uses EBS volume but has no requirements to be highly available, then you can restrict the deployment of the application to a single AZ. In EKS, worker nodes are automatically added failure-domain.beta.kubernetes.io/zone label, which contains the name of the AZ. You can see the labels attached to your nodes by running kubectl get nodes --show-labels . More information about built-in node labels is available here . You can use node selectors to schedule a pod in a particular AZ. In the example below, the pod will only be scheduled in us-west-2c AZ: apiVersion: v1 kind: Pod metadata: name: single-az-pod spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: failure-domain.beta.kubernetes.io/zone operator: In values: - us-west-2c containers: - name: single-az-container image: kubernetes/pause Persistent volumes (backed by EBS) are also automatically labeled with the name of AZ; you can see which AZ your persistent volume belongs to by running kubectl get pv -L topology.ebs.csi.aws.com/zone . When a pod is created and claims a volume, Kubernetes will schedule the Pod on a node in the same AZ as the volume. Consider this scenario; you have an EKS cluster with one node group. This node group has three worker nodes spread across three AZs. You have an application that uses an EBS-backed Persistent Volume. When you create this application and the corresponding volume, its Pod gets created in the first of the three AZs. Then, the worker node that runs this Pod becomes unhealthy and subsequently unavailable for use. Cluster Autoscaler will replace the unhealthy node with a new worker node; however, because the autoscaling group spans across three AZs, the new worker node may get launched in the second or the third AZ, but not in the first AZ as the situation demands. As the AZ-constrained EBS volume only exists in the first AZ, but there are no worker nodes available in that AZ, the Pod cannot be scheduled. Therefore, you should create one node group in each AZ, so there is always enough capacity available to run pods that cannot be scheduled in other AZs. Alternatively, EFS can simplify cluster autoscaling when running applications that need persistent storage. Clients can access EFS file systems concurrently from all the AZs in the region. Even if a Pod using EFS-backed Persistent Volume gets terminated and gets scheduled in different AZ, it will be able to mount the volume. Run node-problem-detector \u00b6 Failures in worker nodes can impact the availability of your applications. node-problem-detector is a Kubernetes add-on that you can install in your cluster to detect worker node issues. You can use a npd\u2019s remedy system to drain and terminate the node automatically. Reserving resources for system and Kubernetes daemons \u00b6 You can improve worker nodes' stability by reserving compute capacity for the operating system and Kubernetes daemons . Pods - especially ones without limits declared - can saturate system resources putting nodes in a situation where operating system processes and Kubernetes daemons ( kubelet , container runtime, etc.) compete with pods for system resources. You can use kubelet flags --system-reserved and --kube-reserved to reserve resources for system process ( udev , sshd , etc.) and Kubernetes daemons respectively. If you use the EKS-optimized Linux AMI , the CPU, memory, and storage are reserved for the system and Kubernetes daemons by default. When worker nodes based on this AMI launch, EC2 user-data is configured to trigger the bootstrap.sh script . This script calculates CPU and memory reservations based on the number of CPU cores and total memory available on the EC2 instance. The calculated values are written to the KubeletConfiguration file located at /etc/kubernetes/kubelet/kubelet-config.json . You may need to increase the system resource reservation if you run custom daemons on the node and the amount of CPU and memory reserved by default is insufficient. eksctl offers the easiest way to customize resource reservation for system and Kubernetes daemons . Implement QoS \u00b6 For critical applications, consider defining requests = limits for the container in the Pod. This will ensure that the container will not be killed if another Pod requests resources. It is a best practice to implement CPU and memory limits for all containers as it prevents a container inadvertently consuming system resources impacting the availability of other co-located processes. Configure and Size Resource Requests/Limits for all Workloads \u00b6 Some general guidance can be applied to sizing resource requests and limits for workloads: Do not specify resource limits on CPU. In the absence of limits, the request acts as a weight on how much relative CPU time containers get . This allows your workloads to use the full CPU without an artificial limit or starvation. For non-CPU resources, configuring requests = limits provides the most predictable behavior. If requests != limits , the container also has its QOS reduced from Guaranteed to Burstable making it more likely to be evicted in the event of node pressure . For non-CPU resources, do not specify a limit that is much larger than the request. The larger limits are configured relative to requests , the more likely nodes will be overcommitted leading to high chances of workload interruption. Correctly sized requests are particularly important when using a node auto-scaling solution like Karpenter or Cluster AutoScaler . These tools look at your workload requests to determine the number and size of nodes to be provisioned. If your requests are too small with larger limits, you may find your workloads evicted or OOM killed if they have been tightly packed on a node. Determining resource requests can be difficult, but tools like the Vertical Pod Autoscaler can help you 'right-size' the requests by observing container resource usage at runtime. Other tools that may be useful for determining request sizes include: Goldilocks Parca Prodfiler rsg Configure resource quotas for namespaces \u00b6 Namespaces are intended for use in environments with many users spread across multiple teams, or projects. They provide a scope for names and are a way to divide cluster resources between multiple teams, projects, workloads. You can limit the aggregate resource consumption in a namespace. The ResourceQuota object can limit the quantity of objects that can be created in a namespace by type, as well as the total amount of compute resources that may be consumed by resources in that project. You can limit the total sum of storage and/or compute (CPU and memory) resources that can be requested in a given namespace. If resource quota is enabled for a namespace for compute resources like CPU and memory, users must specify requests or limits for each container in that namespace. Consider configuring quotas for each namespace. Consider using LimitRanges to automatically apply preconfigured limits to containers within a namespaces. Limit container resource usage within a namespace \u00b6 Resource Quotas help limit the amount of resources a namespace can use. The LimitRange object can help you implement minimum and maximum resources a container can request. Using LimitRange you can set a default request and limits for containers, which is helpful if setting compute resource limits is not a standard practice in your organization. As the name suggests, LimitRange can enforce minimum and maximum compute resources usage per Pod or Container in a namespace. As well as, enforce minimum and maximum storage request per PersistentVolumeClaim in a namespace. Consider using LimitRange in conjunction with ResourceQuota to enforce limits at a container as well as namespace level. Setting these limits will ensure that a container or a namespace does not impinge on resources used by other tenants in the cluster. CoreDNS \u00b6 CoreDNS fulfills name resolution and service discovery functions in Kubernetes. It is installed by default on EKS clusters. For interoperability, the Kubernetes Service for CoreDNS is still named kube-dns . CoreDNS Pods run as part of a Deployment in kube-system namespace, and in EKS, by default, it runs two replicas with declared requests and limits. DNS queries are sent to the kube-dns Service that runs in the kube-system Namespace. Recommendations \u00b6 Monitor CoreDNS metrics \u00b6 CoreDNS has built in support for Prometheus . You should especially consider monitoring CoreDNS latency ( coredns_dns_request_duration_seconds_sum , before 1.7.0 version the metric was called core_dns_response_rcode_count_total ), errors ( coredns_dns_responses_total , NXDOMAIN, SERVFAIL, FormErr) and CoreDNS Pod\u2019s memory consumption. For troubleshooting purposes, you can use kubectl to view CoreDNS logs: for p in $( kubectl get pods \u2014namespace = kube-system -l k8s-app = kube-dns -o name ) ; do kubectl logs \u2014namespace = kube-system $p ; done Use NodeLocal DNSCache \u00b6 You can improve the Cluster DNS performance by running NodeLocal DNSCache . This feature runs a DNS caching agent on cluster nodes as a DaemonSet. All the pods use the DNS caching agent running on the node for name resolution instead of using kube-dns Service. Configure cluster-proportional-scaler for CoreDNS \u00b6 Another method of improving Cluster DNS performance is by automatically horizontally scaling the CoreDNS Deployment based on the number of nodes and CPU cores in the cluster. Horizontal cluster-proportional-autoscaler is a container that resizes the number of replicas of a Deployment based on the size of the schedulable data-plane. Nodes and the aggregate of CPU cores in the nodes are the two metrics with which you can scale CoreDNS. You can use both metrics simultaneously. If you use larger nodes, CoreDNS scaling is based on the number of CPU cores. Whereas, if you use smaller nodes, the number of CoreDNS replicas depends on the CPU cores in your data-plane. Proportional autoscaler configuration looks like this: linear: '{\"coresPerReplica\":256,\"min\":1,\"nodesPerReplica\":16}' Choosing an AMI with Node Group \u00b6 EKS provides optimized EC2 AMIs that are used by customers to create both self-managed and managed nodegroups. These AMIs are published in every region for every supported Kubernetes version. EKS marks these AMIs as deprecated when any CVEs or bugs are discovered. Hence, the recommendation is not to consume deprecated AMIs while choosing an AMI for the node group. Deprecated AMIs can be filtered using Ec2 describe-images api using below command: aws ec2 describe-images --image-id ami-0d551c4f633e7679c --no-include-deprecated You can also recognize a deprecated AMI by verifying if the describe-image output contains a DeprecationTime as a field. For ex: aws ec2 describe-images --image-id ami-xxx --no-include-deprecated { \"Images\": [ { \"Architecture\": \"x86_64\", \"CreationDate\": \"2022-07-13T15:54:06.000Z\", \"ImageId\": \"ami-xxx\", \"ImageLocation\": \"123456789012/eks_xxx\", \"ImageType\": \"machine\", \"Public\": false, \"OwnerId\": \"123456789012\", \"PlatformDetails\": \"Linux/UNIX\", \"UsageOperation\": \"RunInstances\", \"State\": \"available\", \"BlockDeviceMappings\": [ { \"DeviceName\": \"/dev/xvda\", \"Ebs\": { \"DeleteOnTermination\": true, \"SnapshotId\": \"snap-0993a2fc4bbf4f7f4\", \"VolumeSize\": 20, \"VolumeType\": \"gp2\", \"Encrypted\": false } } ], \"Description\": \"EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.15, docker: 20.10.13-2.amzn2, containerd: 1.4.13-3.amzn2)\", \"EnaSupport\": true, \"Hypervisor\": \"xen\", \"Name\": \"aws_eks_optimized_xxx\", \"RootDeviceName\": \"/dev/xvda\", \"RootDeviceType\": \"ebs\", \"SriovNetSupport\": \"simple\", \"VirtualizationType\": \"hvm\", \"DeprecationTime\": \"2023-02-09T19:41:00.000Z\" } ] }","title":"Data Plane ({'name': 'English', 'build': True})"},{"location":"reliability/docs/dataplane/#eks-data-plane","text":"To operate high-available and resilient applications, you need a highly-available and resilient data plane. An elastic data plane ensures that Kubernetes can scale and heal your applications automatically. A resilient data plane consists of two or more worker nodes, can grow and shrink with the workload, and automatically recover from failures. You have two choices for worker nodes with EKS: EC2 instances and Fargate . If you choose EC2 instances, you can manage the worker nodes yourself or use EKS managed node groups . You can have a cluster with a mix of managed, self-managed worker nodes, and Fargate. EKS on Fargate offers the easiest path to a resilient data plane. Fargate runs each Pod in an isolated compute environment. Each Pod running on Fargate gets its own worker node. Fargate automatically scales the data plane as Kubernetes scales pods. You can scale both the data plane and your workload by using the horizontal pod autoscaler . The preferred way to scale EC2 worker nodes is by using Kubernetes Cluster Autoscaler , EC2 Auto Scaling groups or community projects like Atlassian\u2019s Esclator .","title":"EKS Data Plane"},{"location":"reliability/docs/dataplane/#recommendations","text":"","title":"Recommendations"},{"location":"reliability/docs/dataplane/#use-ec2-auto-scaling-groups-to-create-worker-nodes","text":"It is a best practice to create worker nodes using EC2 Auto Scaling groups instead of creating individual EC2 instances and joining them to the cluster. Auto Scaling Groups will automatically replace any terminated or failed nodes ensuring that the cluster always has the capacity to run your workload.","title":"Use EC2 Auto Scaling Groups to create worker nodes"},{"location":"reliability/docs/dataplane/#use-kubernetes-cluster-autoscaler-to-scale-nodes","text":"Cluster Autoscaler adjusts the size of the data plane when there are pods that cannot be run because the cluster has insufficient resources, and adding another worker node would help. Although Cluster Autoscaler is a reactive process, it waits until pods are in Pending state due to insufficient capacity in the cluster. When such an event occurs, it adds EC2 instances to the cluster. Whenever the cluster runs out of capacity, new replicas - or new pods - will be unavailable ( in Pending state ) until worker nodes are added. This delay may impact your applications' reliability if the data plane cannot scale fast enough to meet the demands of the workload. If a worker node is consistently underutilized and all of its pods can be scheduled on other worker nodes, Cluster Autoscaler terminates it.","title":"Use Kubernetes Cluster Autoscaler to scale nodes"},{"location":"reliability/docs/dataplane/#configure-over-provisioning-with-cluster-autoscaler","text":"Cluster Autoscaler triggers a scale-up of the data-plane when Pods in the cluster are already Pending . Hence, there may be a delay between the time your application needs more replicas, and when it, in fact, gets more replicas. An option to account for this possible delay is through adding more than required replicas, inflating the number of replicas for the application. Another pattern that Cluster Autoscaler recommends uses pause Pods and the Priority Preemption feature . The pause Pod runs a pause container , which as the name suggests, does nothing but acts as a placeholder for compute capacity that can be used by other Pods in your cluster. Because it runs with a very low assigned priority , the pause Pod gets evicted from the node when another Pod needs to be created, and the cluster doesn\u2019t have available capacity. The Kubernetes Scheduler notices the eviction of the pause Pod and tries to reschedule it. But since the cluster is running at capacity, the pause Pod remains Pending , to which the Cluster Autoscaler reacts by adding nodes. A Helm chart is available to install cluster overprovisioner .","title":"Configure over-provisioning with Cluster Autoscaler"},{"location":"reliability/docs/dataplane/#using-cluster-autoscaler-with-multiple-auto-scaling-groups","text":"Run the Cluster Autoscaler with the --node-group-auto-discovery flag enabled. Doing so will allow the Cluster Autoscaler to find all autoscaling groups that include a particular defined tag and prevents the need to define and maintain each autoscaling group in the manifest.","title":"Using Cluster Autoscaler with multiple Auto Scaling Groups"},{"location":"reliability/docs/dataplane/#using-cluster-autoscaler-with-local-storage","text":"By default, the Cluster Autoscaler does not scale-down nodes that have pods deployed with local storage attached. Set the --skip-nodes-with-local-storage flag to false to allow Cluster Autoscaler to scale-down these nodes.","title":"Using Cluster Autoscaler with local storage"},{"location":"reliability/docs/dataplane/#spread-worker-nodes-and-workload-across-multiple-azs","text":"You can protect your workloads from failures in an individual AZ by running worker nodes and pods in multiple AZs. You can control the AZ the worker nodes are created in using the subnets you create the nodes in. If you are using Kubernetes 1.18+, the recommended method for spreading pods across AZs is to use Topology Spread Constraints for Pods . The deployment below spreads pods across AZs if possible, letting those pods run anyway if not: apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: replicas: 3 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: topologySpreadConstraints: - maxSkew: 1 whenUnsatisfiable: ScheduleAnyway topologyKey: topology.kubernetes.io/zone labelSelector: matchLabels: app: web-server containers: - name: web-app image: nginx resources: requests: cpu: 1 Note kube-scheduler is only aware of topology domains via nodes that exist with those labels. If the above deployment is deployed to a cluster with nodes only in a single zone, all of the pods will schedule on those nodes as kube-scheduler isn't aware of the other zones. For this topology spread to work as expected with the scheduler, nodes must already exist in all zones. This issue will be resolved in Kubernetes 1.24 with the addition of the MinDomainsInPodToplogySpread feature gate which allows specifying a minDomains property to inform the scheduler of the number of eligible domains. Warning Setting whenUnsatisfiable to DoNotSchedule will cause pods to be unschedulable if the topology spread constraint can't be fulfilled. It should only be set if its preferable for pods to not run instead of violating the topology spread constraint. On older versions of Kubernetes, you can use pod anti-affinity rules to schedule pods across multiple AZs. The manifest below informs Kubernetes scheduler to prefer scheduling pods in distinct AZs. apiVersion: apps/v1 kind: Deployment metadata: name: web-server labels: app: web-server spec: replicas: 4 selector: matchLabels: app: web-server template: metadata: labels: app: web-server spec: affinity: podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - web-server topologyKey: failure-domain.beta.kubernetes.io/zone weight: 100 containers: - name: web-app image: nginx Warning Do not require that pods be scheduled across distinct AZs otherwise, the number of pods in a deployment will never exceed the number of AZs.","title":"Spread worker nodes and workload across multiple AZs"},{"location":"reliability/docs/dataplane/#ensure-capacity-in-each-az-when-using-ebs-volumes","text":"If you use Amazon EBS to provide Persistent Volumes , then you need to ensure that the pods and associated EBS volume are located in the same AZ. At the time of writing, EBS volumes are only available within a single AZ. A Pod cannot access EBS-backed persistent volumes located in a different AZ. Kubernetes scheduler knows which AZ a worker node is located in. Kubernetes will always schedule a Pod that requires an EBS volume in the same AZ as the volume. However, if there are no worker nodes available in the AZ where the volume is located, then the Pod cannot be scheduled. Create Auto Scaling Group for each AZ with enough capacity to ensure that the cluster always has capacity to schedule pods in the same AZ as the EBS volumes they need. In addition, you should enable the --balance-similar-node-groups feature in Cluster Autoscaler. If you are running an application that uses EBS volume but has no requirements to be highly available, then you can restrict the deployment of the application to a single AZ. In EKS, worker nodes are automatically added failure-domain.beta.kubernetes.io/zone label, which contains the name of the AZ. You can see the labels attached to your nodes by running kubectl get nodes --show-labels . More information about built-in node labels is available here . You can use node selectors to schedule a pod in a particular AZ. In the example below, the pod will only be scheduled in us-west-2c AZ: apiVersion: v1 kind: Pod metadata: name: single-az-pod spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: failure-domain.beta.kubernetes.io/zone operator: In values: - us-west-2c containers: - name: single-az-container image: kubernetes/pause Persistent volumes (backed by EBS) are also automatically labeled with the name of AZ; you can see which AZ your persistent volume belongs to by running kubectl get pv -L topology.ebs.csi.aws.com/zone . When a pod is created and claims a volume, Kubernetes will schedule the Pod on a node in the same AZ as the volume. Consider this scenario; you have an EKS cluster with one node group. This node group has three worker nodes spread across three AZs. You have an application that uses an EBS-backed Persistent Volume. When you create this application and the corresponding volume, its Pod gets created in the first of the three AZs. Then, the worker node that runs this Pod becomes unhealthy and subsequently unavailable for use. Cluster Autoscaler will replace the unhealthy node with a new worker node; however, because the autoscaling group spans across three AZs, the new worker node may get launched in the second or the third AZ, but not in the first AZ as the situation demands. As the AZ-constrained EBS volume only exists in the first AZ, but there are no worker nodes available in that AZ, the Pod cannot be scheduled. Therefore, you should create one node group in each AZ, so there is always enough capacity available to run pods that cannot be scheduled in other AZs. Alternatively, EFS can simplify cluster autoscaling when running applications that need persistent storage. Clients can access EFS file systems concurrently from all the AZs in the region. Even if a Pod using EFS-backed Persistent Volume gets terminated and gets scheduled in different AZ, it will be able to mount the volume.","title":"Ensure capacity in each AZ when using EBS volumes"},{"location":"reliability/docs/dataplane/#run-node-problem-detector","text":"Failures in worker nodes can impact the availability of your applications. node-problem-detector is a Kubernetes add-on that you can install in your cluster to detect worker node issues. You can use a npd\u2019s remedy system to drain and terminate the node automatically.","title":"Run node-problem-detector"},{"location":"reliability/docs/dataplane/#reserving-resources-for-system-and-kubernetes-daemons","text":"You can improve worker nodes' stability by reserving compute capacity for the operating system and Kubernetes daemons . Pods - especially ones without limits declared - can saturate system resources putting nodes in a situation where operating system processes and Kubernetes daemons ( kubelet , container runtime, etc.) compete with pods for system resources. You can use kubelet flags --system-reserved and --kube-reserved to reserve resources for system process ( udev , sshd , etc.) and Kubernetes daemons respectively. If you use the EKS-optimized Linux AMI , the CPU, memory, and storage are reserved for the system and Kubernetes daemons by default. When worker nodes based on this AMI launch, EC2 user-data is configured to trigger the bootstrap.sh script . This script calculates CPU and memory reservations based on the number of CPU cores and total memory available on the EC2 instance. The calculated values are written to the KubeletConfiguration file located at /etc/kubernetes/kubelet/kubelet-config.json . You may need to increase the system resource reservation if you run custom daemons on the node and the amount of CPU and memory reserved by default is insufficient. eksctl offers the easiest way to customize resource reservation for system and Kubernetes daemons .","title":"Reserving resources for system and Kubernetes daemons"},{"location":"reliability/docs/dataplane/#implement-qos","text":"For critical applications, consider defining requests = limits for the container in the Pod. This will ensure that the container will not be killed if another Pod requests resources. It is a best practice to implement CPU and memory limits for all containers as it prevents a container inadvertently consuming system resources impacting the availability of other co-located processes.","title":"Implement QoS"},{"location":"reliability/docs/dataplane/#configure-and-size-resource-requestslimits-for-all-workloads","text":"Some general guidance can be applied to sizing resource requests and limits for workloads: Do not specify resource limits on CPU. In the absence of limits, the request acts as a weight on how much relative CPU time containers get . This allows your workloads to use the full CPU without an artificial limit or starvation. For non-CPU resources, configuring requests = limits provides the most predictable behavior. If requests != limits , the container also has its QOS reduced from Guaranteed to Burstable making it more likely to be evicted in the event of node pressure . For non-CPU resources, do not specify a limit that is much larger than the request. The larger limits are configured relative to requests , the more likely nodes will be overcommitted leading to high chances of workload interruption. Correctly sized requests are particularly important when using a node auto-scaling solution like Karpenter or Cluster AutoScaler . These tools look at your workload requests to determine the number and size of nodes to be provisioned. If your requests are too small with larger limits, you may find your workloads evicted or OOM killed if they have been tightly packed on a node. Determining resource requests can be difficult, but tools like the Vertical Pod Autoscaler can help you 'right-size' the requests by observing container resource usage at runtime. Other tools that may be useful for determining request sizes include: Goldilocks Parca Prodfiler rsg","title":"Configure and Size Resource Requests/Limits for all Workloads"},{"location":"reliability/docs/dataplane/#configure-resource-quotas-for-namespaces","text":"Namespaces are intended for use in environments with many users spread across multiple teams, or projects. They provide a scope for names and are a way to divide cluster resources between multiple teams, projects, workloads. You can limit the aggregate resource consumption in a namespace. The ResourceQuota object can limit the quantity of objects that can be created in a namespace by type, as well as the total amount of compute resources that may be consumed by resources in that project. You can limit the total sum of storage and/or compute (CPU and memory) resources that can be requested in a given namespace. If resource quota is enabled for a namespace for compute resources like CPU and memory, users must specify requests or limits for each container in that namespace. Consider configuring quotas for each namespace. Consider using LimitRanges to automatically apply preconfigured limits to containers within a namespaces.","title":"Configure resource quotas for namespaces"},{"location":"reliability/docs/dataplane/#limit-container-resource-usage-within-a-namespace","text":"Resource Quotas help limit the amount of resources a namespace can use. The LimitRange object can help you implement minimum and maximum resources a container can request. Using LimitRange you can set a default request and limits for containers, which is helpful if setting compute resource limits is not a standard practice in your organization. As the name suggests, LimitRange can enforce minimum and maximum compute resources usage per Pod or Container in a namespace. As well as, enforce minimum and maximum storage request per PersistentVolumeClaim in a namespace. Consider using LimitRange in conjunction with ResourceQuota to enforce limits at a container as well as namespace level. Setting these limits will ensure that a container or a namespace does not impinge on resources used by other tenants in the cluster.","title":"Limit container resource usage within a namespace"},{"location":"reliability/docs/dataplane/#coredns","text":"CoreDNS fulfills name resolution and service discovery functions in Kubernetes. It is installed by default on EKS clusters. For interoperability, the Kubernetes Service for CoreDNS is still named kube-dns . CoreDNS Pods run as part of a Deployment in kube-system namespace, and in EKS, by default, it runs two replicas with declared requests and limits. DNS queries are sent to the kube-dns Service that runs in the kube-system Namespace.","title":"CoreDNS"},{"location":"reliability/docs/dataplane/#recommendations_1","text":"","title":"Recommendations"},{"location":"reliability/docs/dataplane/#monitor-coredns-metrics","text":"CoreDNS has built in support for Prometheus . You should especially consider monitoring CoreDNS latency ( coredns_dns_request_duration_seconds_sum , before 1.7.0 version the metric was called core_dns_response_rcode_count_total ), errors ( coredns_dns_responses_total , NXDOMAIN, SERVFAIL, FormErr) and CoreDNS Pod\u2019s memory consumption. For troubleshooting purposes, you can use kubectl to view CoreDNS logs: for p in $( kubectl get pods \u2014namespace = kube-system -l k8s-app = kube-dns -o name ) ; do kubectl logs \u2014namespace = kube-system $p ; done","title":"Monitor CoreDNS metrics"},{"location":"reliability/docs/dataplane/#use-nodelocal-dnscache","text":"You can improve the Cluster DNS performance by running NodeLocal DNSCache . This feature runs a DNS caching agent on cluster nodes as a DaemonSet. All the pods use the DNS caching agent running on the node for name resolution instead of using kube-dns Service.","title":"Use NodeLocal DNSCache"},{"location":"reliability/docs/dataplane/#configure-cluster-proportional-scaler-for-coredns","text":"Another method of improving Cluster DNS performance is by automatically horizontally scaling the CoreDNS Deployment based on the number of nodes and CPU cores in the cluster. Horizontal cluster-proportional-autoscaler is a container that resizes the number of replicas of a Deployment based on the size of the schedulable data-plane. Nodes and the aggregate of CPU cores in the nodes are the two metrics with which you can scale CoreDNS. You can use both metrics simultaneously. If you use larger nodes, CoreDNS scaling is based on the number of CPU cores. Whereas, if you use smaller nodes, the number of CoreDNS replicas depends on the CPU cores in your data-plane. Proportional autoscaler configuration looks like this: linear: '{\"coresPerReplica\":256,\"min\":1,\"nodesPerReplica\":16}'","title":"Configure cluster-proportional-scaler for CoreDNS"},{"location":"reliability/docs/dataplane/#choosing-an-ami-with-node-group","text":"EKS provides optimized EC2 AMIs that are used by customers to create both self-managed and managed nodegroups. These AMIs are published in every region for every supported Kubernetes version. EKS marks these AMIs as deprecated when any CVEs or bugs are discovered. Hence, the recommendation is not to consume deprecated AMIs while choosing an AMI for the node group. Deprecated AMIs can be filtered using Ec2 describe-images api using below command: aws ec2 describe-images --image-id ami-0d551c4f633e7679c --no-include-deprecated You can also recognize a deprecated AMI by verifying if the describe-image output contains a DeprecationTime as a field. For ex: aws ec2 describe-images --image-id ami-xxx --no-include-deprecated { \"Images\": [ { \"Architecture\": \"x86_64\", \"CreationDate\": \"2022-07-13T15:54:06.000Z\", \"ImageId\": \"ami-xxx\", \"ImageLocation\": \"123456789012/eks_xxx\", \"ImageType\": \"machine\", \"Public\": false, \"OwnerId\": \"123456789012\", \"PlatformDetails\": \"Linux/UNIX\", \"UsageOperation\": \"RunInstances\", \"State\": \"available\", \"BlockDeviceMappings\": [ { \"DeviceName\": \"/dev/xvda\", \"Ebs\": { \"DeleteOnTermination\": true, \"SnapshotId\": \"snap-0993a2fc4bbf4f7f4\", \"VolumeSize\": 20, \"VolumeType\": \"gp2\", \"Encrypted\": false } } ], \"Description\": \"EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.19.15, docker: 20.10.13-2.amzn2, containerd: 1.4.13-3.amzn2)\", \"EnaSupport\": true, \"Hypervisor\": \"xen\", \"Name\": \"aws_eks_optimized_xxx\", \"RootDeviceName\": \"/dev/xvda\", \"RootDeviceType\": \"ebs\", \"SriovNetSupport\": \"simple\", \"VirtualizationType\": \"hvm\", \"DeprecationTime\": \"2023-02-09T19:41:00.000Z\" } ] }","title":"Choosing an AMI with Node Group"},{"location":"reliability/docs/index.kr/","text":"{'name': 'English', 'build': True} \uc2e0\ub8b0\uc131\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \u00b6 \uc774 \uc139\uc158\uc5d0\uc11c\ub294 EKS\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ubcf5\uc6d0\ub825\uacfc \uac00\uc6a9\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95 \u00b6 \uc774 \uc548\ub0b4\uc11c\ub294 EKS\uc5d0\uc11c \uac00\uc6a9\uc131\uc774 \ub192\uace0 \ub0b4\uacb0\ud568\uc131\uc774 \uc788\ub294 \uc11c\ube44\uc2a4\ub97c \uac1c\ubc1c\ud558\uace0 \uc6b4\uc601\ud558\ub824\ub294 \uac1c\ubc1c\uc790\uc640 \uc124\uacc4\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub294 \ubcf4\ub2e4 \uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub2e4\uc591\ud55c \uc8fc\uc81c \uc601\uc5ed\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud56d\ubaa9\uc740 \uac04\ub7b5\ud55c \uac1c\uc694\ub85c \uc2dc\uc791\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uc2e0\ub8b0\uc131\uc744 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840 \ubaa9\ub85d\uc774 \uc774\uc5b4\uc9d1\ub2c8\ub2e4. \uc18c\uac1c \u00b6 EKS\uc758 \uc2e0\ub8b0\uc131 \ubaa8\ubc94 \uc0ac\ub840\ub294 \ub2e4\uc74c \uc8fc\uc81c\uc5d0 \ub530\ub77c \uadf8\ub8f9\ud654\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubb34\uc5c7\uc774 \uc2dc\uc2a4\ud15c\uc744 \uc2e0\ub8b0\ud560 \uc218 \uc788\uac8c \ub9cc\ub4dc\ub098\uc694? \uc77c\uc815 \uae30\uac04\uc758 \ud658\uacbd \ubcc0\ud654\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc2dc\uc2a4\ud15c\uc774 \uc77c\uad00\ub418\uac8c \uc791\ub3d9\ud558\uace0 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud560 \uc218 \uc788\ub2e4\uba74 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub2e4\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc2dc\uc2a4\ud15c\uc774 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \ubcf5\uad6c\ud558\uba70 \uc218\uc694\uc5d0 \ub530\ub77c \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uace0\uac1d\uc740 Kubernetes\ub97c \uae30\ubc18\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\ubb34\uc0c1 \uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc11c\ube44\uc2a4\ub97c \uc548\uc815\uc801\uc73c\ub85c \uc6b4\uc601\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ucee8\ud14c\uc774\ub108 \uae30\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uacc4 \uc6d0\uce59\uc744 \ud1b5\ud569\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc548\uc815\uc801\uc73c\ub85c \uc2e4\ud589\ud558\ub824\uba74 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\ud504\ub77c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc778\ud504\ub77c\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. EKS\ub294 \uac00\uc6a9\uc131\uacfc \ub0b4\uacb0\ud568\uc131\uc744 \uc81c\uacf5\ud558\ub3c4\ub85d \uc124\uacc4\ub41c \ud504\ub85c\ub355\uc158 \ub4f1\uae09\uc758 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. EKS\uc5d0\uc11c AWS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uc2e0\ub8b0\uc131\uc744 \ucc45\uc784\uc9d1\ub2c8\ub2e4. EKS\ub294 AWS \ub9ac\uc804\uc758 \uc138 \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ubc0f etcd \ud074\ub7ec\uc2a4\ud130\uc758 \uac00\uc6a9\uc131\uacfc \ud655\uc7a5\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \uc2e0\ub8b0\uc131\uc5d0 \ub300\ud55c \ucc45\uc784\uc740 \uc0ac\uc6a9\uc790, \uace0\uac1d, AWS \uac04\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. EKS\ub294 Kubernetes \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uc138 \uac00\uc9c0 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac00\uc7a5 \ub9ce\uc774 \uad00\ub9ac\ub418\ub294 \uc635\uc158\uc778 Fargate\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \ud655\uc7a5\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 \uc635\uc158\uc778 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\ud654\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \uc5c5\ub370\uc774\ud2b8\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uad00\ub9ac\uac00 \uac00\uc7a5 \uc801\uc740 \uc635\uc158\uc785\ub2c8\ub2e4. AWS \uad00\ub9ac\ud615 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ub354 \ub9ce\uc774 \uc0ac\uc6a9\ud560\uc218\ub85d \ucc45\uc784\uc740 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 EC2 \ub178\ub4dc\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \uc218\uba85 \uc8fc\uae30 \uad00\ub9ac\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4. EKS API (EKS \ucf58\uc194, AWS API, AWS CLI, CloudFormation, Terraform \ub610\ub294 eksctl \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc0dd\uc131, \ud655\uc7a5 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 \uacc4\uc815\uc5d0\uc11c EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Amazon Linux 2 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2e4\ud589\ud558\uba70, SSH \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uac78\uccd0 \uc788\uc744 \uc218 \uc788\ub294 EKS \uad00\ub9ac\ud615 Auto Scaling \uadf8\ub8f9\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ubbc0\ub85c \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uc81c\uacf5\ud558\ub294 \uc11c\ube0c\ub137\uc744 \ud1b5\ud574 \uc774\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c EKS\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 CVE \ubc0f \ubcf4\uc548 \ud328\uce58\uc5d0 \ub300\ud55c \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc744 \ub530\ub985\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c AMI\ub4e4\uc744 \uc2e4\ud589\ud558\ubbc0\ub85c Amazon EKS\ub294 \ubc84\uadf8 \uc218\uc815 \uc2dc \uc774\ub7ec\ud55c AMI\ub4e4\uc758 \ud328\uce58 \ubc84\uc804\uc744 \ub9cc\ub4e4 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub7ec\ud55c \ud328\uce58\uac00 \uc801\uc6a9\ub41c AMI \ubc84\uc804\uc744 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ubc30\ud3ec\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. EKS\ub294 \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4\ub97c \uc2dc\uc791\ud574\uc57c \ud558\uc9c0\ub9cc \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub3c4 \uad00\ub9ac \ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4\ub294 EKS \uc124\uba85\uc11c\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Linux AMI \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AMI\uc640 \ub178\ub4dc\uc758 \ud328\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc0ac\uc6a9\uc790\uac00 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. eksctl , CloudFormation \ub610\ub294 \ucf54\ub4dc\ud615 \uc778\ud504\ub77c \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ub97c \uc27d\uac8c \ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c\ub294 \uc774\uc804 \ub178\ub4dc \uadf8\ub8f9\uc744 NoSchedule \ub85c taints \ud558\uace0 \uc0c8 \uc2a4\ud0dd\uc774 \uae30\uc874 \ud3ec\ub4dc \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc218\uc6a9\ud560 \uc900\ube44\uac00 \ub418\uba74 \ub178\ub4dc\ub97c drains \ud558\uae30 \ub54c\ubb38\uc5d0 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c \uc0c8 \ub178\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud558\uc9c0\ub9cc \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 in-place \uc5c5\uadf8\ub808\uc774\ub4dc \ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\ub294 EKS \ub370\uc774\ud130 \ud50c\ub808\uc778, Kubernetes \ud575\uc2ec \uad6c\uc131 \uc694\uc18c \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc744 \uac1c\uc120\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud53c\ub4dc\ubc31 \u00b6 \uc774 \uac00\uc774\ub4dc\ub294 \uad11\ubc94\uc704\ud55c EKS/Kubernetes \ucee4\ubba4\ub2c8\ud2f0\ub85c\ubd80\ud130 \uc9c1\uc811\uc801\uc778 \ud53c\ub4dc\ubc31\uacfc \uc81c\uc548\uc744 \uc218\uc9d1\ud558\uae30 \uc704\ud574 GitHub\uc5d0 \uac8c\uc2dc \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uac00\uc774\ub4dc\uc5d0 \ud3ec\ud568\uc2dc\ucf1c\uc57c \ud55c\ub2e4\uace0 \uc0dd\uac01\ub418\ub294 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc788\ub2e4\uba74 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ubb38\uc81c\ub97c \uc81c\ucd9c\ud558\uac70\ub098 PR\uc744 \uc81c\ucd9c\ud574 \uc8fc\uc138\uc694. \uc11c\ube44\uc2a4\uc5d0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uc0c8\ub85c\uc6b4 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uac1c\ubc1c\ub418\uba74 \uac00\uc774\ub4dc\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uacc4\ud68d\uc785\ub2c8\ub2e4.","title":"\uc2e0\ub8b0\uc131\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"reliability/docs/index.kr/#amazon-eks","text":"\uc774 \uc139\uc158\uc5d0\uc11c\ub294 EKS\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ubcf5\uc6d0\ub825\uacfc \uac00\uc6a9\uc131\uc744 \ub192\uc774\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"\uc2e0\ub8b0\uc131\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"reliability/docs/index.kr/#_1","text":"\uc774 \uc548\ub0b4\uc11c\ub294 EKS\uc5d0\uc11c \uac00\uc6a9\uc131\uc774 \ub192\uace0 \ub0b4\uacb0\ud568\uc131\uc774 \uc788\ub294 \uc11c\ube44\uc2a4\ub97c \uac1c\ubc1c\ud558\uace0 \uc6b4\uc601\ud558\ub824\ub294 \uac1c\ubc1c\uc790\uc640 \uc124\uacc4\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub294 \ubcf4\ub2e4 \uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub2e4\uc591\ud55c \uc8fc\uc81c \uc601\uc5ed\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud56d\ubaa9\uc740 \uac04\ub7b5\ud55c \uac1c\uc694\ub85c \uc2dc\uc791\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130\uc758 \uc2e0\ub8b0\uc131\uc744 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840 \ubaa9\ub85d\uc774 \uc774\uc5b4\uc9d1\ub2c8\ub2e4.","title":"\uc774 \uac00\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95"},{"location":"reliability/docs/index.kr/#_2","text":"EKS\uc758 \uc2e0\ub8b0\uc131 \ubaa8\ubc94 \uc0ac\ub840\ub294 \ub2e4\uc74c \uc8fc\uc81c\uc5d0 \ub530\ub77c \uadf8\ub8f9\ud654\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubb34\uc5c7\uc774 \uc2dc\uc2a4\ud15c\uc744 \uc2e0\ub8b0\ud560 \uc218 \uc788\uac8c \ub9cc\ub4dc\ub098\uc694? \uc77c\uc815 \uae30\uac04\uc758 \ud658\uacbd \ubcc0\ud654\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc2dc\uc2a4\ud15c\uc774 \uc77c\uad00\ub418\uac8c \uc791\ub3d9\ud558\uace0 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud560 \uc218 \uc788\ub2e4\uba74 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub2e4\uace0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc2dc\uc2a4\ud15c\uc774 \uc7a5\uc560\ub97c \uac10\uc9c0\ud558\uace0 \uc790\ub3d9\uc73c\ub85c \ubcf5\uad6c\ud558\uba70 \uc218\uc694\uc5d0 \ub530\ub77c \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uace0\uac1d\uc740 Kubernetes\ub97c \uae30\ubc18\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\ubb34\uc0c1 \uc911\uc694\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc11c\ube44\uc2a4\ub97c \uc548\uc815\uc801\uc73c\ub85c \uc6b4\uc601\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ucee8\ud14c\uc774\ub108 \uae30\ubc18 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc124\uacc4 \uc6d0\uce59\uc744 \ud1b5\ud569\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc548\uc815\uc801\uc73c\ub85c \uc2e4\ud589\ud558\ub824\uba74 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc778\ud504\ub77c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc778\ud504\ub77c\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc73c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. EKS\ub294 \uac00\uc6a9\uc131\uacfc \ub0b4\uacb0\ud568\uc131\uc744 \uc81c\uacf5\ud558\ub3c4\ub85d \uc124\uacc4\ub41c \ud504\ub85c\ub355\uc158 \ub4f1\uae09\uc758 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. EKS\uc5d0\uc11c AWS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uc2e0\ub8b0\uc131\uc744 \ucc45\uc784\uc9d1\ub2c8\ub2e4. EKS\ub294 AWS \ub9ac\uc804\uc758 \uc138 \uac00\uc6a9 \uc601\uc5ed\uc5d0\uc11c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84 \ubc0f etcd \ud074\ub7ec\uc2a4\ud130\uc758 \uac00\uc6a9\uc131\uacfc \ud655\uc7a5\uc131\uc744 \uc790\ub3d9\uc73c\ub85c \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \uc2e0\ub8b0\uc131\uc5d0 \ub300\ud55c \ucc45\uc784\uc740 \uc0ac\uc6a9\uc790, \uace0\uac1d, AWS \uac04\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. EKS\ub294 Kubernetes \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uc138 \uac00\uc9c0 \uc635\uc158\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uac00\uc7a5 \ub9ce\uc774 \uad00\ub9ac\ub418\ub294 \uc635\uc158\uc778 Fargate\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \ud655\uc7a5\uc744 \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub450 \ubc88\uc9f8 \uc635\uc158\uc778 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\ud654\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \uc5c5\ub370\uc774\ud2b8\ub97c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uad00\ub9ac\uac00 \uac00\uc7a5 \uc801\uc740 \uc635\uc158\uc785\ub2c8\ub2e4. AWS \uad00\ub9ac\ud615 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ub354 \ub9ce\uc774 \uc0ac\uc6a9\ud560\uc218\ub85d \ucc45\uc784\uc740 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 EC2 \ub178\ub4dc\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \uc218\uba85 \uc8fc\uae30 \uad00\ub9ac\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4. EKS API (EKS \ucf58\uc194, AWS API, AWS CLI, CloudFormation, Terraform \ub610\ub294 eksctl \uc0ac\uc6a9)\ub97c \uc0ac\uc6a9\ud558\uc5ec \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc0dd\uc131, \ud655\uc7a5 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 \uacc4\uc815\uc5d0\uc11c EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Amazon Linux 2 EC2 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2e4\ud589\ud558\uba70, SSH \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \uac78\uccd0 \uc788\uc744 \uc218 \uc788\ub294 EKS \uad00\ub9ac\ud615 Auto Scaling \uadf8\ub8f9\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ubbc0\ub85c \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \ub54c \uc81c\uacf5\ud558\ub294 \uc11c\ube0c\ub137\uc744 \ud1b5\ud574 \uc774\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c EKS\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud0dc\uadf8\ub97c \uc9c0\uc815\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 CVE \ubc0f \ubcf4\uc548 \ud328\uce58\uc5d0 \ub300\ud55c \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc744 \ub530\ub985\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc\ub294 Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c AMI\ub4e4\uc744 \uc2e4\ud589\ud558\ubbc0\ub85c Amazon EKS\ub294 \ubc84\uadf8 \uc218\uc815 \uc2dc \uc774\ub7ec\ud55c AMI\ub4e4\uc758 \ud328\uce58 \ubc84\uc804\uc744 \ub9cc\ub4e4 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774\ub7ec\ud55c \ud328\uce58\uac00 \uc801\uc6a9\ub41c AMI \ubc84\uc804\uc744 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ubc30\ud3ec\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. EKS\ub294 \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4\ub97c \uc2dc\uc791\ud574\uc57c \ud558\uc9c0\ub9cc \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub3c4 \uad00\ub9ac \ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8 \ud504\ub85c\uc138\uc2a4\ub294 EKS \uc124\uba85\uc11c\uc5d0 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c Linux AMI \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AMI\uc640 \ub178\ub4dc\uc758 \ud328\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc0ac\uc6a9\uc790\uac00 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. eksctl , CloudFormation \ub610\ub294 \ucf54\ub4dc\ud615 \uc778\ud504\ub77c \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ub97c \uc27d\uac8c \ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud504\ub85c\uc138\uc2a4\uc5d0\uc11c\ub294 \uc774\uc804 \ub178\ub4dc \uadf8\ub8f9\uc744 NoSchedule \ub85c taints \ud558\uace0 \uc0c8 \uc2a4\ud0dd\uc774 \uae30\uc874 \ud3ec\ub4dc \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc218\uc6a9\ud560 \uc900\ube44\uac00 \ub418\uba74 \ub178\ub4dc\ub97c drains \ud558\uae30 \ub54c\ubb38\uc5d0 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc5c5\ub370\uc774\ud2b8\ud560 \ub54c \uc0c8 \ub178\ub4dc\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ud558\uc9c0\ub9cc \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 in-place \uc5c5\uadf8\ub808\uc774\ub4dc \ub97c \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc5d0\ub294 EKS \ub370\uc774\ud130 \ud50c\ub808\uc778, Kubernetes \ud575\uc2ec \uad6c\uc131 \uc694\uc18c \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e0\ub8b0\uc131\uc744 \uac1c\uc120\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"reliability/docs/index.kr/#_3","text":"\uc774 \uac00\uc774\ub4dc\ub294 \uad11\ubc94\uc704\ud55c EKS/Kubernetes \ucee4\ubba4\ub2c8\ud2f0\ub85c\ubd80\ud130 \uc9c1\uc811\uc801\uc778 \ud53c\ub4dc\ubc31\uacfc \uc81c\uc548\uc744 \uc218\uc9d1\ud558\uae30 \uc704\ud574 GitHub\uc5d0 \uac8c\uc2dc \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uac00\uc774\ub4dc\uc5d0 \ud3ec\ud568\uc2dc\ucf1c\uc57c \ud55c\ub2e4\uace0 \uc0dd\uac01\ub418\ub294 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc788\ub2e4\uba74 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ubb38\uc81c\ub97c \uc81c\ucd9c\ud558\uac70\ub098 PR\uc744 \uc81c\ucd9c\ud574 \uc8fc\uc138\uc694. \uc11c\ube44\uc2a4\uc5d0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uc0c8\ub85c\uc6b4 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uac1c\ubc1c\ub418\uba74 \uac00\uc774\ub4dc\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud560 \uacc4\ud68d\uc785\ub2c8\ub2e4.","title":"\ud53c\ub4dc\ubc31"},{"location":"scalability/docs/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} EKS Scalability best practices \u00b6 This guide provides advice for scaling EKS clusters. The goal of scaling an EKS cluster is to maximize the amount of work a single cluster can perform. Using a single, large EKS cluster can reduce operational load compared to using multiple clusters, but it has trade-offs for things like multi-region deployments, tenant isolation, and cluster upgrades. In this document we will focus on how to achieve maximum scalability with a single cluster. How to use this guide \u00b6 This guide is meant for developers and administrators responsible for creating and managing EKS clusters in AWS. It focuses on some generic Kubernetes scaling practices, but it does not have specifics for self-managed Kubernetes clusters or clusters that run outside of an AWS region with EKS Anywhere . Each topic has a brief overview, followed by recommendations and best practices for operating EKS clusters at scale. Topics do not need to be read in a particular order and recommendations should not be applied without testing and verifying they work in your clusters. Understanding scaling dimensions \u00b6 Scalability is different from performance and reliability , and all three should be considered when planning your cluster and workload needs. As clusters scale, they need to be monitored, but this guide will not cover monitoring best practices. EKS can scale to large sizes, but you will need to plan how you are going to scale a cluster beyond 300 nodes or 5000 pods. These are not absolute numbers, but they come from collaborating this guide with multiple users, engineers, and support professionals. Scaling in Kubernetes is multi-dimensional and there are no specific settings or recommendations that work in every situation. The main areas areas where we can provide guidance for scaling include: Kubernetes Control Plane Kubernetes Data Plane Cluster Services Workloads Kubernetes Control Plane in an EKS cluster includes all of the services AWS runs and scales for you automatically (e.g. Kubernetes API server). Scaling the Control Plane is AWS's responsibility, but using the Control Plane responsibly is your responsibility. Kubernetes Data Plane scaling deals with AWS resources that are required for your cluster and workloads, but they are outside of the EKS Control Plane. Resources including EC2 instances, kublet, and storage all need to be scaled as your cluster scales. Cluster services are Kubernetes controllers and applications that run inside the cluster and provide functionality for your cluster and workloads. These can be EKS Add-ons and also other services or Helm charts you install for compliance and integrations. These services are often depended on by workloads and as your workloads scale your cluster services will need to scale with them. Workloads are the reason you have a cluster and should scale horizontally with the cluster. There are integrations and settings that workloads have in Kubernetes that can help the cluster scale. There are also architectural considerations with Kubernetes abstractions such as namespaces and services. Extra large scaling \u00b6 If you are scaling a single cluster beyond 1000 nodes or 50,000 pods we would love to talk to you. We recommend reaching out to your support team or technical account manager to get in touch with specialists who can help you plan and scale beyond the information provided in this guide.","title":"Home ({'name': 'English', 'build': True})"},{"location":"scalability/docs/#eks-scalability-best-practices","text":"This guide provides advice for scaling EKS clusters. The goal of scaling an EKS cluster is to maximize the amount of work a single cluster can perform. Using a single, large EKS cluster can reduce operational load compared to using multiple clusters, but it has trade-offs for things like multi-region deployments, tenant isolation, and cluster upgrades. In this document we will focus on how to achieve maximum scalability with a single cluster.","title":"EKS Scalability best practices"},{"location":"scalability/docs/#how-to-use-this-guide","text":"This guide is meant for developers and administrators responsible for creating and managing EKS clusters in AWS. It focuses on some generic Kubernetes scaling practices, but it does not have specifics for self-managed Kubernetes clusters or clusters that run outside of an AWS region with EKS Anywhere . Each topic has a brief overview, followed by recommendations and best practices for operating EKS clusters at scale. Topics do not need to be read in a particular order and recommendations should not be applied without testing and verifying they work in your clusters.","title":"How to use this guide"},{"location":"scalability/docs/#understanding-scaling-dimensions","text":"Scalability is different from performance and reliability , and all three should be considered when planning your cluster and workload needs. As clusters scale, they need to be monitored, but this guide will not cover monitoring best practices. EKS can scale to large sizes, but you will need to plan how you are going to scale a cluster beyond 300 nodes or 5000 pods. These are not absolute numbers, but they come from collaborating this guide with multiple users, engineers, and support professionals. Scaling in Kubernetes is multi-dimensional and there are no specific settings or recommendations that work in every situation. The main areas areas where we can provide guidance for scaling include: Kubernetes Control Plane Kubernetes Data Plane Cluster Services Workloads Kubernetes Control Plane in an EKS cluster includes all of the services AWS runs and scales for you automatically (e.g. Kubernetes API server). Scaling the Control Plane is AWS's responsibility, but using the Control Plane responsibly is your responsibility. Kubernetes Data Plane scaling deals with AWS resources that are required for your cluster and workloads, but they are outside of the EKS Control Plane. Resources including EC2 instances, kublet, and storage all need to be scaled as your cluster scales. Cluster services are Kubernetes controllers and applications that run inside the cluster and provide functionality for your cluster and workloads. These can be EKS Add-ons and also other services or Helm charts you install for compliance and integrations. These services are often depended on by workloads and as your workloads scale your cluster services will need to scale with them. Workloads are the reason you have a cluster and should scale horizontally with the cluster. There are integrations and settings that workloads have in Kubernetes that can help the cluster scale. There are also architectural considerations with Kubernetes abstractions such as namespaces and services.","title":"Understanding scaling dimensions"},{"location":"scalability/docs/#extra-large-scaling","text":"If you are scaling a single cluster beyond 1000 nodes or 50,000 pods we would love to talk to you. We recommend reaching out to your support team or technical account manager to get in touch with specialists who can help you plan and scale beyond the information provided in this guide.","title":"Extra large scaling"},{"location":"scalability/docs/cluster-services.kr/","text":"{'name': 'English', 'build': True} \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4 \u00b6 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub294 EKS \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc544\ub2d9\ub2c8\ub2e4. Linux \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 NTP, syslog \ubc0f \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub3c4 \ube44\uc2b7\ud558\uba70 \ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\ud654\ud558\uace0 \uc6b4\uc601\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc11c\ube44\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub4e4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc77c\ubd80\ub294 DaemonSets \ub85c \uc2e4\ud589\ub41c\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub294 \uac00\ub3d9 \uc2dc\uac04\uc774 \uae38\uc5b4\uc9c8 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\uba70 \uc815\uc804 \ubc0f \ubb38\uc81c \ud574\uacb0\uc5d0 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ucf54\uc5b4 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc7a5\uc560 \ubcf5\uad6c \ub610\ub294 \uc608\ubc29\uc5d0 \ub3c4\uc6c0\uc774 \ub418\ub294 \ub370\uc774\ud130 (\uc608: \ub192\uc740 \ub514\uc2a4\ud06c \uc0ac\uc6a9\ub960)\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 AWS Fargate\uc640 \uac19\uc740 \uc804\uc6a9 \ucef4\ud4e8\ud305 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uaddc\ubaa8\uac00 \ucee4\uc9c0\uac70\ub098 \ub9ac\uc18c\uc2a4\ub97c \ub354 \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uacf5\uc720 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\uac00 \ubc1b\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \uc2a4\ucf00\uc77c\ub9c1 \u00b6 CoreDNS \uc2a4\ucf00\uc77c\ub9c1\uc5d0\ub294 \ub450 \uac00\uc9c0 \uae30\ubcf8 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud638\ucd9c \uc218\ub97c \uc904\uc774\uace0 \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9bd\ub2c8\ub2e4. ndot\uc744 \uc904\uc5ec \uc678\ubd80 \ucffc\ub9ac\ub97c \uc904\uc785\ub2c8\ub2e4. \u00b6 ndots \uc124\uc815\uc740 DNS \ucffc\ub9ac\ub97c \ud53c\ud558\uae30\uc5d0 \ucda9\ubd84\ud558\ub2e4\uace0 \uac04\uc8fc\ub418\ub294 \ub3c4\uba54\uc778 \uc774\ub984\uc758 \ub9c8\uce68\ud45c (\uc77c\uba85 \u201c\uc810\u201d) \uc218\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 ndots \uc124\uc815\uc774 5 (\uae30\ubcf8\uac12) \uc774\uace0 api.example.com (\uc810 2\uac1c) \uacfc \uac19\uc740 \uc678\ubd80 \ub3c4\uba54\uc778\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uc694\uccad\ud558\ub294 \uacbd\uc6b0 /etc/resolv.conf\uc5d0 \uc815\uc758\ub41c \uac01 \uac80\uc0c9 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 CoreDNS\uac00 \ucffc\ub9ac\ub418\uc5b4 \ub354 \uad6c\uccb4\uc801\uc778 \ub3c4\uba54\uc778\uc774 \uac80\uc0c9\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc678\ubd80 \uc694\uccad\uc744 \ud558\uae30 \uc804\uc5d0 \ub2e4\uc74c \ub3c4\uba54\uc778\uc774 \uac80\uc0c9\ub429\ub2c8\ub2e4. api.example.<namespace>.svc.cluster.local api.example.svc.cluster.local api.example.cluster.local api.example.<region>.compute.internal namespace \ubc0f region \uac12\uc740 \uc6cc\ud06c\ub85c\ub4dc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f \ucef4\ud4e8\ud305 \uc9c0\uc5ed\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc124\uc815\uc5d0 \ub530\ub77c \ucd94\uac00 \uac80\uc0c9 \ub3c4\uba54\uc778\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc758 ndots \uc635\uc158 \ub0ae\ucd94\uae30 \ub610\ub294 \ud6c4\ud589 \ud56d\ubaa9\uc744 \ud3ec\ud568\ud558\uc5ec \ub3c4\uba54\uc778 \uc694\uccad\uc744 \uc644\uc804\ud788 \uac80\uc99d\ud558\uc5ec CoreDNS\uc5d0 \ub300\ud55c \uc694\uccad \uc218\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.(\uc608: api.example.com. ). \uc6cc\ud06c\ub85c\ub4dc\uac00 DNS\ub97c \ud1b5\ud574 \uc678\ubd80 \uc11c\ube44\uc2a4\uc5d0 \uc5f0\uacb0\ud558\ub294 \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ubd88\ud544\uc694\ud558\uac8c \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c DNS \ucffc\ub9ac\ub97c \ud074\ub7ec\uc2a4\ud130\ub9c1\ud558\uc9c0 \uc54a\ub3c4\ub85d ndots\ub97c 2\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ub2e4\ub978 DNS \uc11c\ubc84 \ubc0f \uac80\uc0c9 \ub3c4\uba54\uc778\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. spec: dnsPolicy: \"None\" dnsConfig: options: - name: ndots value: \"2\" - name: edns0 ndots\ub97c \ub108\ubb34 \ub0ae\uc740 \uac12\uc73c\ub85c \ub0ae\ucd94\uac70\ub098 \uc5f0\uacb0\ud558\ub824\ub294 \ub3c4\uba54\uc778\uc758 \uad6c\uccb4\uc131\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 (\ud6c4\ud589 \ud3ec\ud568) DNS \uc870\ud68c\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uc124\uc815\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc5b4\ub5a4 \uc601\ud5a5\uc744 \ubbf8\uce60\uc9c0 \ud14c\uc2a4\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. CoreDNS \uc218\ud3c9 \uc2a4\ucf00\uc77c\ub9c1 \u00b6 CoreDNS \uc778\uc2a4\ud134\uc2a4\ub294 \ubc30\ud3ec\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\uc5ec \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS\ub97c \ud655\uc7a5\ud558\ub824\uba74 NodeLocal DNS \ub610\ub294 cluster proportional autoscaler \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. NodeLocal DNS\ub294 \ub178\ub4dc\ub2f9 \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c DaemonSet\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud558\uba70, \uc774\ub97c \uc704\ud574\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud558\uc9c0\ub9cc DNS \uc694\uccad \uc2e4\ud328\ub97c \ubc29\uc9c0\ud558\uace0 \ud074\ub7ec\uc2a4\ud130\uc758 DNS \ucffc\ub9ac\uc5d0 \ub300\ud55c \uc751\ub2f5 \uc2dc\uac04\uc744 \uc904\uc785\ub2c8\ub2e4.Cluster propertional autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \ub610\ub294 \ucf54\uc5b4 \uc218\uc5d0 \ub530\ub77c CoreDNS\uc758 \ud06c\uae30\ub97c \uc870\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \ucffc\ub9ac \uc694\uccad\uacfc \uc9c1\uc811\uc801\uc778 \uc0c1\uad00 \uad00\uacc4\ub294 \uc544\ub2c8\uc9c0\ub9cc \uc6cc\ud06c\ub85c\ub4dc \ubc0f \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ube44\ub840 \ucc99\ub3c4\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 256\uac1c \ucf54\uc5b4 \ub610\ub294 16\uac1c \ub178\ub4dc\ub9c8\ub2e4 \ucd94\uac00 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4(\ub458 \uc911 \uba3c\uc800 \ubc1c\uc0dd\ud558\ub294 \uae30\uc900). \ucfe0\ubc84\ub124\ud2f0\uc2a4 Metric Server \uc218\uc9c1 \ud655\uc7a5 \u00b6 Kubernetes Metric Server\ub294 \uc218\ud3c9 \ubc0f \uc218\uc9c1 \ud655\uc7a5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Metrics Server\ub97c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ud558\uba74 \uac00\uc6a9\uc131\uc774 \ub192\uc544\uc9c0\uc9c0\ub9cc \ub354 \ub9ce\uc740 \ud074\ub7ec\uc2a4\ud130 \uba54\ud2b8\ub9ad\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc640 \uc218\uc9d1\ub41c \uc9c0\ud45c\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ub418\uba74 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \uae30\ubc18\uc73c\ub85c Metrics Server\ub97c \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Metrics Server\ub294 \uc218\uc9d1\ud558\uace0, \uc9d1\uacc4\ud558\uace0, \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \uc131\uc7a5\ud568\uc5d0 \ub530\ub77c Metrics Server\uac00 \uc800\uc7a5\ud558\ub294 \ub370\uc774\ud130\uc758 \uc591\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Metrics Server\uc5d0\ub294 \uae30\ubcf8 \uc124\uce58\uc5d0 \uc9c0\uc815\ub41c \uba54\ubaa8\ub9ac \ubc0f CPU \uc608\uc57d\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Vertical Pod Autoscaler (VPA) \ub610\ub294 Addon Resizer \ub97c \uc0ac\uc6a9\ud558\uc5ec Metrics Server\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. Addon Resizer\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ube44\ub840\ud558\uc5ec \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ub418\uba70 VPA\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub530\ub77c \ud655\uc7a5\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 Metric Server\ub294 \uc218\ud3c9 \ubc0f \uc218\uc9c1 \ud655\uc7a5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Metric Server\ub97c \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ud558\uba74 \uac00\uc6a9\uc131\uc740 \ub192\uc544\uc9c0\uc9c0\ub9cc \ub354 \ub9ce\uc740 \ud074\ub7ec\uc2a4\ud130 \uba54\ud2b8\ub9ad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc640 \uc218\uc9d1\ub41c \uc9c0\ud45c\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ub428\uc5d0 \ub530\ub77c \uad8c\uc7a5 \uc0ac\ud56d \uc5d0 \ub530\ub77c \uba54\ud2b8\ub9ad \uc11c\ubc84\ub97c \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Metric Server\ub294 \uc218\uc9d1, \uc9d1\uacc4 \ubc0f \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ucee4\uc9c0\uba74 Metric Server\uac00 \uc800\uc7a5\ud558\ub294 \ub370\uc774\ud130 \uc591\ub3c4 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Metric Server\ub294 \uae30\ubcf8 \uc124\uce58\uc5d0 \uc9c0\uc815\ub41c \uba54\ubaa8\ub9ac \ubc0f CPU \uc608\uc57d\ub7c9\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud544\uc694\ub85c \ud569\ub2c8\ub2e4. Vertical Pod Autoscaler (VPA) \ub610\ub294 Addon Resizer \ub97c \uc0ac\uc6a9\ud558\uc5ec Metric Server\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Addon Resizer\ub294 Worker \ub178\ub4dc\uc5d0 \ube44\ub840\ud558\uc5ec \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ub418\uace0 VPA\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub530\ub77c \uc870\uc815\ub429\ub2c8\ub2e4. CoreDNS lameduck \uc9c0\uc18d \uc2dc\uac04 \u00b6 \ud30c\ub4dc\ub294 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 kube-dns \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 Destination NAT (DNAT) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c CoreDNS \ubc31\uc5d4\ub4dc \ud3ec\ub4dc\ub85c kube-dns \ud2b8\ub798\ud53d\uc744 \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. CoreDNS Deployment\ub97c \ud655\uc7a5\ud558\uba74, kube-proxy \ub294 \ub178\ub4dc\uc758 iptables \uaddc\uce59 \ubc0f \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec DNS \ud2b8\ub798\ud53d\uc744 CoreDNS \ud3ec\ub4dc\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. \ud655\uc7a5 \uc2dc \uc0c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc804\ud30c\ud558\uace0 \ucd95\uc18c\ud560 \ub54c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\ub294\ub370 \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c CoreDNS\ub97c \uc0ad\uc81c\ud558\ub294 \ub370 1~10\ucd08 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc804\ud30c \uc9c0\uc5f0\uc73c\ub85c \uc778\ud574 CoreDNS \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uc5c8\uc9c0\ub9cc \ub178\ub4dc\uc758 iptables \uaddc\uce59\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 DNS \uc870\ud68c \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \ub178\ub4dc\ub294 \uc885\ub8cc\ub41c CoreDNS \ud30c\ub4dc\uc5d0 DNS \ucffc\ub9ac\ub97c \uacc4\uc18d \uc804\uc1a1\ud560 \uc218 \uc788\ub2e4. CoreDNS \ud30c\ub4dc\uc5d0 lameduck \uae30\uac04\uc744 \uc124\uc815\ud558\uc5ec DNS \uc870\ud68c \uc2e4\ud328\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Lameduck \ubaa8\ub4dc\uc5d0 \uc788\ub294 \ub3d9\uc548 CoreDNS\ub294 \uacc4\uc18d\ud574\uc11c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc5d0 \uc751\ub2f5\ud569\ub2c8\ub2e4.Lameduck \uae30\uac04\uc744 \uc124\uc815\ud558\uba74 CoreDNS \uc885\ub8cc \ud504\ub85c\uc138\uc2a4\uac00 \uc9c0\uc5f0\ub418\uc5b4 \ub178\ub4dc\uac00 iptables \uaddc\uce59 \ubc0f \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc2dc\uac04\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS lameduck \uc9c0\uc18d \uc2dc\uac04\uc744 30\ucd08\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1 \uc5d0\uc774\uc804\ud2b8 \u00b6 \ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1 \uc5d0\uc774\uc804\ud2b8\ub294 API \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \uba54\ud0c0\ub370\uc774\ud130\ub85c \ub85c\uadf8\uc640 \uba54\ud2b8\ub9ad\uc744 \ubcf4\uac15\ud558\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc0c1\ub2f9\ud55c \ub85c\ub4dc\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc758 \uc5d0\uc774\uc804\ud2b8\ub294 \ucee8\ud14c\uc774\ub108 \ubc0f \ud504\ub85c\uc138\uc2a4 \uc774\ub984\uacfc \uac19\uc740 \ud56d\ubaa9\uc744 \ubcf4\uae30 \uc704\ud574 \ub85c\uceec \ub178\ub4dc \ub9ac\uc18c\uc2a4\uc5d0\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\uba74 Kubernetes Deployment \uc774\ub984 \ubc0f \ub808\uc774\ube14\uacfc \uac19\uc740 \uc138\ubd80 \uc815\ubcf4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ubb38\uc81c \ud574\uacb0\uc5d0\ub294 \ub9e4\uc6b0 \uc720\uc6a9\ud558\uc9c0\ub9cc \ud655\uc7a5\uc5d0\ub294 \ud574\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \ub300\ud55c \uc635\uc158\uc774 \ub108\ubb34 \ub2e4\uc591\ud558\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 \uacf5\uae09\uc790\uc5d0 \ub300\ud55c \uc608\ub97c \ud45c\uc2dc\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. fluentbit \ub97c \uc0ac\uc6a9\ud558\uba74 Use_Kubelet\uc744 \ud65c\uc131\ud654\ud558\uc5ec Kubernetes API \uc11c\ubc84 \ub300\uc2e0 \ub85c\uceec kubelet\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uace0 Kube_Meta_Cache_TTL \uc744 \uc904\uc774\ub294 \uc22b\uc790\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \uce90\uc2dc\ud560 \uc218 \uc788\uc744 \ub54c \ud638\ucd9c\uc744 \ubc18\ubcf5\ud569\ub2c8\ub2e4(\uc608: 60). \uc870\uc815 \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \ub85c\uae45\uc5d0\ub294 \ub450 \uac00\uc9c0 \uc77c\ubc18 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud1b5\ud569 \ube44\ud65c\uc131\ud654 \uc0d8\ud50c\ub9c1 \ubc0f \ud544\ud130\ub9c1 \ub85c\uadf8 \uba54\ud0c0\ub370\uc774\ud130\uac00 \uc190\uc2e4\ub418\ubbc0\ub85c \ud1b5\ud569\uc744 \ube44\ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc635\uc158\uc774 \uc544\ub2cc \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 API \ud655\uc7a5 \ubb38\uc81c\uac00 \uc81c\uac70\ub418\uc9c0\ub9cc \ud544\uc694\ud560 \ub54c \ud544\uc694\ud55c \uba54\ud0c0\ub370\uc774\ud130\uac00 \uc5c6\uc5b4 \ub2e4\ub978 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1 \ubc0f \ud544\ud130\ub9c1\uc744 \uc218\ud589\ud558\uba74 \uc218\uc9d1\ub418\ub294 \uc9c0\ud45c \ubc0f \ub85c\uadf8 \uc218\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 Kubernetes API\uc5d0 \ub300\ud55c \uc694\uccad \uc591\uc774 \uc904\uc5b4\ub4e4\uace0 \uc218\uc9d1\ub418\ub294 \uc9c0\ud45c \ubc0f \ub85c\uadf8\uc5d0 \ud544\uc694\ud55c \uc2a4\ud1a0\ub9ac\uc9c0 \uc591\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc2a4\ud1a0\ub9ac\uc9c0 \ube44\uc6a9\uc744 \uc904\uc774\uba74 \uc804\uccb4 \uc2dc\uc2a4\ud15c \ube44\uc6a9\ub3c4 \ub0ae\uc544\uc9d1\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1\uc744 \uad6c\uc131\ud558\ub294 \uae30\ub2a5\uc740 \uc5d0\uc774\uc804\ud2b8 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc5d0 \ub530\ub77c \ub2e4\ub974\uba70 \ub2e4\uc591\ud55c \uc218\uc9d1 \uc9c0\uc810\uc5d0\uc11c \uad6c\ud604\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84 \ud638\ucd9c\uc774 \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \uc5d0\uc774\uc804\ud2b8\uc5d0 \ucd5c\ub300\ud55c \uac00\uae5d\uac8c \uc0d8\ud50c\ub9c1\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1 \uc9c0\uc6d0\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \uacf5\uae09\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc138\uc694. CloudWatch \ubc0f CloudWatch Logs\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubb38\uc11c\uc5d0 \uc124\uba85\ub41c \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5d0\uc774\uc804\ud2b8 \ud544\ud130\ub9c1\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uadf8 \ubc0f \uc9c0\ud45c \uc190\uc2e4\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc218\uc2e0 \ubc1b\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \ub370\uc774\ud130\ub97c \ubc84\ud37c\ub9c1\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc57c \ud569\ub2c8\ub2e4. Fluentbit\ub97c \uc0ac\uc6a9\ud558\uba74 Amazon Kinesis Data Firehose \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc784\uc2dc\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ucd5c\uc885 \ub370\uc774\ud130 \uc800\uc7a5 \uc704\uce58\uc5d0 \uacfc\ubd80\ud558\uac00 \uac78\ub9b4 \uac00\ub2a5\uc131\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4"},{"location":"scalability/docs/cluster-services.kr/#_1","text":"\ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub294 EKS \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc544\ub2d9\ub2c8\ub2e4. Linux \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc9c0\uc6d0\ud558\uae30 \uc704\ud574 NTP, syslog \ubc0f \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \uac19\uc740 \uc11c\ube44\uc2a4\ub97c \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub3c4 \ube44\uc2b7\ud558\uba70 \ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\ud654\ud558\uace0 \uc6b4\uc601\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc11c\ube44\uc2a4\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc774\ub4e4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc77c\ubd80\ub294 DaemonSets \ub85c \uc2e4\ud589\ub41c\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub294 \uac00\ub3d9 \uc2dc\uac04\uc774 \uae38\uc5b4\uc9c8 \uac83\uc73c\ub85c \uc608\uc0c1\ub418\uba70 \uc815\uc804 \ubc0f \ubb38\uc81c \ud574\uacb0\uc5d0 \uc911\uc694\ud55c \uc5ed\ud560\uc744 \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ucf54\uc5b4 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc7a5\uc560 \ubcf5\uad6c \ub610\ub294 \uc608\ubc29\uc5d0 \ub3c4\uc6c0\uc774 \ub418\ub294 \ub370\uc774\ud130 (\uc608: \ub192\uc740 \ub514\uc2a4\ud06c \uc0ac\uc6a9\ub960)\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 AWS Fargate\uc640 \uac19\uc740 \uc804\uc6a9 \ucef4\ud4e8\ud305 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uaddc\ubaa8\uac00 \ucee4\uc9c0\uac70\ub098 \ub9ac\uc18c\uc2a4\ub97c \ub354 \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uacf5\uc720 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\uac00 \ubc1b\uc9c0 \uc54a\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4"},{"location":"scalability/docs/cluster-services.kr/#coredns","text":"CoreDNS \uc2a4\ucf00\uc77c\ub9c1\uc5d0\ub294 \ub450 \uac00\uc9c0 \uae30\ubcf8 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud638\ucd9c \uc218\ub97c \uc904\uc774\uace0 \ubcf5\uc81c\ubcf8 \uc218\ub97c \ub298\ub9bd\ub2c8\ub2e4.","title":"CoreDNS \uc2a4\ucf00\uc77c\ub9c1"},{"location":"scalability/docs/cluster-services.kr/#ndot","text":"ndots \uc124\uc815\uc740 DNS \ucffc\ub9ac\ub97c \ud53c\ud558\uae30\uc5d0 \ucda9\ubd84\ud558\ub2e4\uace0 \uac04\uc8fc\ub418\ub294 \ub3c4\uba54\uc778 \uc774\ub984\uc758 \ub9c8\uce68\ud45c (\uc77c\uba85 \u201c\uc810\u201d) \uc218\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 ndots \uc124\uc815\uc774 5 (\uae30\ubcf8\uac12) \uc774\uace0 api.example.com (\uc810 2\uac1c) \uacfc \uac19\uc740 \uc678\ubd80 \ub3c4\uba54\uc778\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uc694\uccad\ud558\ub294 \uacbd\uc6b0 /etc/resolv.conf\uc5d0 \uc815\uc758\ub41c \uac01 \uac80\uc0c9 \ub3c4\uba54\uc778\uc5d0 \ub300\ud574 CoreDNS\uac00 \ucffc\ub9ac\ub418\uc5b4 \ub354 \uad6c\uccb4\uc801\uc778 \ub3c4\uba54\uc778\uc774 \uac80\uc0c9\ub429\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc678\ubd80 \uc694\uccad\uc744 \ud558\uae30 \uc804\uc5d0 \ub2e4\uc74c \ub3c4\uba54\uc778\uc774 \uac80\uc0c9\ub429\ub2c8\ub2e4. api.example.<namespace>.svc.cluster.local api.example.svc.cluster.local api.example.cluster.local api.example.<region>.compute.internal namespace \ubc0f region \uac12\uc740 \uc6cc\ud06c\ub85c\ub4dc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f \ucef4\ud4e8\ud305 \uc9c0\uc5ed\uc73c\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc124\uc815\uc5d0 \ub530\ub77c \ucd94\uac00 \uac80\uc0c9 \ub3c4\uba54\uc778\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc758 ndots \uc635\uc158 \ub0ae\ucd94\uae30 \ub610\ub294 \ud6c4\ud589 \ud56d\ubaa9\uc744 \ud3ec\ud568\ud558\uc5ec \ub3c4\uba54\uc778 \uc694\uccad\uc744 \uc644\uc804\ud788 \uac80\uc99d\ud558\uc5ec CoreDNS\uc5d0 \ub300\ud55c \uc694\uccad \uc218\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.(\uc608: api.example.com. ). \uc6cc\ud06c\ub85c\ub4dc\uac00 DNS\ub97c \ud1b5\ud574 \uc678\ubd80 \uc11c\ube44\uc2a4\uc5d0 \uc5f0\uacb0\ud558\ub294 \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ubd88\ud544\uc694\ud558\uac8c \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c DNS \ucffc\ub9ac\ub97c \ud074\ub7ec\uc2a4\ud130\ub9c1\ud558\uc9c0 \uc54a\ub3c4\ub85d ndots\ub97c 2\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ub2e4\ub978 DNS \uc11c\ubc84 \ubc0f \uac80\uc0c9 \ub3c4\uba54\uc778\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. spec: dnsPolicy: \"None\" dnsConfig: options: - name: ndots value: \"2\" - name: edns0 ndots\ub97c \ub108\ubb34 \ub0ae\uc740 \uac12\uc73c\ub85c \ub0ae\ucd94\uac70\ub098 \uc5f0\uacb0\ud558\ub824\ub294 \ub3c4\uba54\uc778\uc758 \uad6c\uccb4\uc131\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 (\ud6c4\ud589 \ud3ec\ud568) DNS \uc870\ud68c\uac00 \uc2e4\ud328\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uc124\uc815\uc774 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc5b4\ub5a4 \uc601\ud5a5\uc744 \ubbf8\uce60\uc9c0 \ud14c\uc2a4\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"ndot\uc744 \uc904\uc5ec \uc678\ubd80 \ucffc\ub9ac\ub97c \uc904\uc785\ub2c8\ub2e4."},{"location":"scalability/docs/cluster-services.kr/#coredns_1","text":"CoreDNS \uc778\uc2a4\ud134\uc2a4\ub294 \ubc30\ud3ec\uc5d0 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\uc5ec \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS\ub97c \ud655\uc7a5\ud558\ub824\uba74 NodeLocal DNS \ub610\ub294 cluster proportional autoscaler \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. NodeLocal DNS\ub294 \ub178\ub4dc\ub2f9 \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c DaemonSet\uc73c\ub85c \uc2e4\ud589\ud574\uc57c \ud558\uba70, \uc774\ub97c \uc704\ud574\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud558\uc9c0\ub9cc DNS \uc694\uccad \uc2e4\ud328\ub97c \ubc29\uc9c0\ud558\uace0 \ud074\ub7ec\uc2a4\ud130\uc758 DNS \ucffc\ub9ac\uc5d0 \ub300\ud55c \uc751\ub2f5 \uc2dc\uac04\uc744 \uc904\uc785\ub2c8\ub2e4.Cluster propertional autoscaler\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc \ub610\ub294 \ucf54\uc5b4 \uc218\uc5d0 \ub530\ub77c CoreDNS\uc758 \ud06c\uae30\ub97c \uc870\uc815\ud569\ub2c8\ub2e4. \uc774\ub294 \ucffc\ub9ac \uc694\uccad\uacfc \uc9c1\uc811\uc801\uc778 \uc0c1\uad00 \uad00\uacc4\ub294 \uc544\ub2c8\uc9c0\ub9cc \uc6cc\ud06c\ub85c\ub4dc \ubc0f \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ube44\ub840 \ucc99\ub3c4\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 256\uac1c \ucf54\uc5b4 \ub610\ub294 16\uac1c \ub178\ub4dc\ub9c8\ub2e4 \ucd94\uac00 \ubcf5\uc81c\ubcf8\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc785\ub2c8\ub2e4(\ub458 \uc911 \uba3c\uc800 \ubc1c\uc0dd\ud558\ub294 \uae30\uc900).","title":"CoreDNS \uc218\ud3c9 \uc2a4\ucf00\uc77c\ub9c1"},{"location":"scalability/docs/cluster-services.kr/#metric-server","text":"Kubernetes Metric Server\ub294 \uc218\ud3c9 \ubc0f \uc218\uc9c1 \ud655\uc7a5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Metrics Server\ub97c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ud558\uba74 \uac00\uc6a9\uc131\uc774 \ub192\uc544\uc9c0\uc9c0\ub9cc \ub354 \ub9ce\uc740 \ud074\ub7ec\uc2a4\ud130 \uba54\ud2b8\ub9ad\uc744 \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc640 \uc218\uc9d1\ub41c \uc9c0\ud45c\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ub418\uba74 \uad8c\uc7a5 \uc0ac\ud56d \uc744 \uae30\ubc18\uc73c\ub85c Metrics Server\ub97c \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Metrics Server\ub294 \uc218\uc9d1\ud558\uace0, \uc9d1\uacc4\ud558\uace0, \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \uc131\uc7a5\ud568\uc5d0 \ub530\ub77c Metrics Server\uac00 \uc800\uc7a5\ud558\ub294 \ub370\uc774\ud130\uc758 \uc591\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Metrics Server\uc5d0\ub294 \uae30\ubcf8 \uc124\uce58\uc5d0 \uc9c0\uc815\ub41c \uba54\ubaa8\ub9ac \ubc0f CPU \uc608\uc57d\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. Vertical Pod Autoscaler (VPA) \ub610\ub294 Addon Resizer \ub97c \uc0ac\uc6a9\ud558\uc5ec Metrics Server\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. Addon Resizer\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ube44\ub840\ud558\uc5ec \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ub418\uba70 VPA\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub530\ub77c \ud655\uc7a5\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 Metric Server\ub294 \uc218\ud3c9 \ubc0f \uc218\uc9c1 \ud655\uc7a5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Metric Server\ub97c \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ud558\uba74 \uac00\uc6a9\uc131\uc740 \ub192\uc544\uc9c0\uc9c0\ub9cc \ub354 \ub9ce\uc740 \ud074\ub7ec\uc2a4\ud130 \uba54\ud2b8\ub9ad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \uc218\ud3c9\uc801\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc640 \uc218\uc9d1\ub41c \uc9c0\ud45c\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ub428\uc5d0 \ub530\ub77c \uad8c\uc7a5 \uc0ac\ud56d \uc5d0 \ub530\ub77c \uba54\ud2b8\ub9ad \uc11c\ubc84\ub97c \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Metric Server\ub294 \uc218\uc9d1, \uc9d1\uacc4 \ubc0f \uc81c\uacf5\ud558\ub294 \ub370\uc774\ud130\ub97c \uba54\ubaa8\ub9ac\uc5d0 \ubcf4\uad00\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ucee4\uc9c0\uba74 Metric Server\uac00 \uc800\uc7a5\ud558\ub294 \ub370\uc774\ud130 \uc591\ub3c4 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c Metric Server\ub294 \uae30\ubcf8 \uc124\uce58\uc5d0 \uc9c0\uc815\ub41c \uba54\ubaa8\ub9ac \ubc0f CPU \uc608\uc57d\ub7c9\ubcf4\ub2e4 \ub354 \ub9ce\uc740 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud544\uc694\ub85c \ud569\ub2c8\ub2e4. Vertical Pod Autoscaler (VPA) \ub610\ub294 Addon Resizer \ub97c \uc0ac\uc6a9\ud558\uc5ec Metric Server\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Addon Resizer\ub294 Worker \ub178\ub4dc\uc5d0 \ube44\ub840\ud558\uc5ec \uc218\uc9c1\uc73c\ub85c \ud655\uc7a5\ub418\uace0 VPA\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc5d0 \ub530\ub77c \uc870\uc815\ub429\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 Metric Server \uc218\uc9c1 \ud655\uc7a5"},{"location":"scalability/docs/cluster-services.kr/#coredns-lameduck","text":"\ud30c\ub4dc\ub294 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 kube-dns \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 Destination NAT (DNAT) \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c CoreDNS \ubc31\uc5d4\ub4dc \ud3ec\ub4dc\ub85c kube-dns \ud2b8\ub798\ud53d\uc744 \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. CoreDNS Deployment\ub97c \ud655\uc7a5\ud558\uba74, kube-proxy \ub294 \ub178\ub4dc\uc758 iptables \uaddc\uce59 \ubc0f \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec DNS \ud2b8\ub798\ud53d\uc744 CoreDNS \ud3ec\ub4dc\ub85c \ub9ac\ub514\ub809\uc158\ud569\ub2c8\ub2e4. \ud655\uc7a5 \uc2dc \uc0c8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc804\ud30c\ud558\uace0 \ucd95\uc18c\ud560 \ub54c \uaddc\uce59\uc744 \uc0ad\uc81c\ud558\ub294\ub370 \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\uc5d0 \ub530\ub77c CoreDNS\ub97c \uc0ad\uc81c\ud558\ub294 \ub370 1~10\ucd08 \uc815\ub3c4 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc804\ud30c \uc9c0\uc5f0\uc73c\ub85c \uc778\ud574 CoreDNS \ud30c\ub4dc\uac00 \uc885\ub8cc\ub418\uc5c8\uc9c0\ub9cc \ub178\ub4dc\uc758 iptables \uaddc\uce59\uc774 \uc5c5\ub370\uc774\ud2b8\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 DNS \uc870\ud68c \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \ub178\ub4dc\ub294 \uc885\ub8cc\ub41c CoreDNS \ud30c\ub4dc\uc5d0 DNS \ucffc\ub9ac\ub97c \uacc4\uc18d \uc804\uc1a1\ud560 \uc218 \uc788\ub2e4. CoreDNS \ud30c\ub4dc\uc5d0 lameduck \uae30\uac04\uc744 \uc124\uc815\ud558\uc5ec DNS \uc870\ud68c \uc2e4\ud328\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Lameduck \ubaa8\ub4dc\uc5d0 \uc788\ub294 \ub3d9\uc548 CoreDNS\ub294 \uacc4\uc18d\ud574\uc11c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc5d0 \uc751\ub2f5\ud569\ub2c8\ub2e4.Lameduck \uae30\uac04\uc744 \uc124\uc815\ud558\uba74 CoreDNS \uc885\ub8cc \ud504\ub85c\uc138\uc2a4\uac00 \uc9c0\uc5f0\ub418\uc5b4 \ub178\ub4dc\uac00 iptables \uaddc\uce59 \ubc0f \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc2dc\uac04\uc744 \ud655\ubcf4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS lameduck \uc9c0\uc18d \uc2dc\uac04\uc744 30\ucd08\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"CoreDNS lameduck \uc9c0\uc18d \uc2dc\uac04"},{"location":"scalability/docs/cluster-services.kr/#_2","text":"\ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1 \uc5d0\uc774\uc804\ud2b8\ub294 API \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \uba54\ud0c0\ub370\uc774\ud130\ub85c \ub85c\uadf8\uc640 \uba54\ud2b8\ub9ad\uc744 \ubcf4\uac15\ud558\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc0c1\ub2f9\ud55c \ub85c\ub4dc\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc758 \uc5d0\uc774\uc804\ud2b8\ub294 \ucee8\ud14c\uc774\ub108 \ubc0f \ud504\ub85c\uc138\uc2a4 \uc774\ub984\uacfc \uac19\uc740 \ud56d\ubaa9\uc744 \ubcf4\uae30 \uc704\ud574 \ub85c\uceec \ub178\ub4dc \ub9ac\uc18c\uc2a4\uc5d0\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\uba74 Kubernetes Deployment \uc774\ub984 \ubc0f \ub808\uc774\ube14\uacfc \uac19\uc740 \uc138\ubd80 \uc815\ubcf4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ubb38\uc81c \ud574\uacb0\uc5d0\ub294 \ub9e4\uc6b0 \uc720\uc6a9\ud558\uc9c0\ub9cc \ud655\uc7a5\uc5d0\ub294 \ud574\ub85c\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc5d0 \ub300\ud55c \uc635\uc158\uc774 \ub108\ubb34 \ub2e4\uc591\ud558\uae30 \ub54c\ubb38\uc5d0 \ubaa8\ub4e0 \uacf5\uae09\uc790\uc5d0 \ub300\ud55c \uc608\ub97c \ud45c\uc2dc\ud560 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. fluentbit \ub97c \uc0ac\uc6a9\ud558\uba74 Use_Kubelet\uc744 \ud65c\uc131\ud654\ud558\uc5ec Kubernetes API \uc11c\ubc84 \ub300\uc2e0 \ub85c\uceec kubelet\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac00\uc838\uc624\uace0 Kube_Meta_Cache_TTL \uc744 \uc904\uc774\ub294 \uc22b\uc790\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \uce90\uc2dc\ud560 \uc218 \uc788\uc744 \ub54c \ud638\ucd9c\uc744 \ubc18\ubcf5\ud569\ub2c8\ub2e4(\uc608: 60). \uc870\uc815 \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \ub85c\uae45\uc5d0\ub294 \ub450 \uac00\uc9c0 \uc77c\ubc18 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud1b5\ud569 \ube44\ud65c\uc131\ud654 \uc0d8\ud50c\ub9c1 \ubc0f \ud544\ud130\ub9c1 \ub85c\uadf8 \uba54\ud0c0\ub370\uc774\ud130\uac00 \uc190\uc2e4\ub418\ubbc0\ub85c \ud1b5\ud569\uc744 \ube44\ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc635\uc158\uc774 \uc544\ub2cc \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 API \ud655\uc7a5 \ubb38\uc81c\uac00 \uc81c\uac70\ub418\uc9c0\ub9cc \ud544\uc694\ud560 \ub54c \ud544\uc694\ud55c \uba54\ud0c0\ub370\uc774\ud130\uac00 \uc5c6\uc5b4 \ub2e4\ub978 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1 \ubc0f \ud544\ud130\ub9c1\uc744 \uc218\ud589\ud558\uba74 \uc218\uc9d1\ub418\ub294 \uc9c0\ud45c \ubc0f \ub85c\uadf8 \uc218\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 Kubernetes API\uc5d0 \ub300\ud55c \uc694\uccad \uc591\uc774 \uc904\uc5b4\ub4e4\uace0 \uc218\uc9d1\ub418\ub294 \uc9c0\ud45c \ubc0f \ub85c\uadf8\uc5d0 \ud544\uc694\ud55c \uc2a4\ud1a0\ub9ac\uc9c0 \uc591\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc2a4\ud1a0\ub9ac\uc9c0 \ube44\uc6a9\uc744 \uc904\uc774\uba74 \uc804\uccb4 \uc2dc\uc2a4\ud15c \ube44\uc6a9\ub3c4 \ub0ae\uc544\uc9d1\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1\uc744 \uad6c\uc131\ud558\ub294 \uae30\ub2a5\uc740 \uc5d0\uc774\uc804\ud2b8 \uc18c\ud504\ud2b8\uc6e8\uc5b4\uc5d0 \ub530\ub77c \ub2e4\ub974\uba70 \ub2e4\uc591\ud55c \uc218\uc9d1 \uc9c0\uc810\uc5d0\uc11c \uad6c\ud604\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84 \ud638\ucd9c\uc774 \ubc1c\uc0dd\ud560 \uac00\ub2a5\uc131\uc774 \ub192\uae30 \ub54c\ubb38\uc5d0 \uc5d0\uc774\uc804\ud2b8\uc5d0 \ucd5c\ub300\ud55c \uac00\uae5d\uac8c \uc0d8\ud50c\ub9c1\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc0d8\ud50c\ub9c1 \uc9c0\uc6d0\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \uacf5\uae09\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc138\uc694. CloudWatch \ubc0f CloudWatch Logs\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubb38\uc11c\uc5d0 \uc124\uba85\ub41c \ud328\ud134\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc5d0\uc774\uc804\ud2b8 \ud544\ud130\ub9c1\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uadf8 \ubc0f \uc9c0\ud45c \uc190\uc2e4\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \uc218\uc2e0 \ubc1b\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \ub370\uc774\ud130\ub97c \ubc84\ud37c\ub9c1\ud560 \uc218 \uc788\ub294 \uc2dc\uc2a4\ud15c\uc73c\ub85c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc57c \ud569\ub2c8\ub2e4. Fluentbit\ub97c \uc0ac\uc6a9\ud558\uba74 Amazon Kinesis Data Firehose \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc784\uc2dc\ub85c \ubcf4\uad00\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ucd5c\uc885 \ub370\uc774\ud130 \uc800\uc7a5 \uc704\uce58\uc5d0 \uacfc\ubd80\ud558\uac00 \uac78\ub9b4 \uac00\ub2a5\uc131\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4.","title":"\ub85c\uae45 \ubc0f \ubaa8\ub2c8\ud130\ub9c1 \uc5d0\uc774\uc804\ud2b8"},{"location":"scalability/docs/cluster-services/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Cluster Services \u00b6 Cluster services run inside an EKS cluster, but they are not user workloads. If you have a Linux server you often need to run services like NTP, syslog, and a container runtime to support your workloads. Cluster services are similar, supporting services that help you automate and operate your cluster. In Kubernetes these are usually run in the kube-system namespace and some are run as DaemonSets . Cluster services are expected to have a high up-time and are often critical during outages and for troubleshooting. If a core cluster service is not available you may lose access to data that can help recover or prevent an outage (e.g. high disk utilization). They should run on dedicated compute instances such as a separate node group or AWS Fargate. This will ensure that the cluster services are not impacted on shared instances by workloads that may be scaling up or using more resources. Scale CoreDNS \u00b6 Scaling CoreDNS has two primary mechanisms. Reducing the number of calls to the CoreDNS service and increasing the number of replicas. Reduce external queries by lowering ndots \u00b6 The ndots setting specifies how many periods (a.k.a. \"dots\") in a domain name are considered enough to avoid querying DNS. If your application has an ndots setting of 5 (default) and you request resources from an external domain such as api.example.com (2 dots) then CoreDNS will be queried for each search domain defined in /etc/resolv.conf for a more specific domain. By default the following domains will be searched before making an external request. api.example.<namespace>.svc.cluster.local api.example.svc.cluster.local api.example.cluster.local api.example.<region>.compute.internal The namespace and region values will be replaced with your workloads namespace and your compute region. You may have additional search domains based on your cluster settings. You can reduce the number of requests to CoreDNS by lowering the ndots option of your workload or fully qualifying your domain requests by including a trailing . (e.g. api.example.com. ). If your workload connects to external services via DNS we recommend setting ndots to 2 so workloads do not make unnecessary, cluster DNS queries inside the cluster. You can set a different DNS server and search domain if the workload doesn\u2019t require access to services inside the cluster. spec: dnsPolicy: \"None\" dnsConfig: options: - name: ndots value: \"2\" - name: edns0 If you lower ndots to a value that is too low or the domains you are connecting to do not include enough specificity (including trailing .) then it is possible DNS lookups will fail. Make sure you test how this setting will impact your workloads. Scale CoreDNS Horizontally \u00b6 CoreDNS instances can scale by adding additional replicas to the deployment. It's recommended you use NodeLocal DNS or the cluster proportional autoscaler to scale CoreDNS. NodeLocal DNS will require run one instance per node\u2014as a DaemonSet\u2014which requires more compute resources in the cluster, but it will avoid failed DNS requests and decrease the response time for DNS queries in the cluster. The cluster proportional autoscaler will scale CoreDNS based on the number of nodes or cores in the cluster. This isn\u2019t a direct correlation to request queries, but can be useful depending on your workloads and cluster size. The default proportional scale is to add an additional replica for every 256 cores or 16 nodes in the cluster\u2014whichever happens first. Scale Kubernetes Metrics Server Vertically \u00b6 The Kubernetes Metrics Server supports horizontal and vertical scaling. By horizontally scaling the Metrics Server it will be highly available, but it will not scale horizontally to handle more cluster metrics. You will need to vertically scale the Metrics Server based on their recommendations as nodes and collected metrics are added to the cluster. The Metrics Server keeps the data it collects, aggregates, and serves in memory. As a cluster grows, the amount of data the Metrics Server stores increases. In large clusters the Metrics Server will require more compute resources than the memory and CPU reservation specified in the default installation. You can use the Vertical Pod Autoscaler (VPA) or Addon Resizer to scale the Metrics Server. The Addon Resizer scales vertically in proportion to worker nodes and VPA scales based on CPU and memory usage. CoreDNS lameduck duration \u00b6 Pods use the kube-dns Service for name resolution. Kubernetes uses destination NAT (DNAT) to redirect kube-dns traffic from nodes to CoreDNS backend pods. As you scale the CoreDNS Deployment, kube-proxy updates iptables rules and chains on nodes to redirect DNS traffic to CoreDNS pods. Propagating new endpoints when you scale up and deleting rules when you scale down CoreDNS can take between 1 to 10 seconds depending on the size of the cluster. This propagation delay can cause DNS lookup failures when a CoreDNS pod gets terminated yet the node\u2019s iptables rules haven\u2019t been updated. In this scenario, the node may continue to send DNS queries to a terminated CoreDNS Pod. You can reduce DNS lookup failures by setting a lameduck duration in your CoreDNS pods. While in lameduck mode, CoreDNS will continue to respond to in-flight requests. Setting a lameduck duration will delay the CoreDNS shutdown process, allowing nodes the time they need to update their iptables rules and chains. We recommend setting CoreDNS lameduck duration to 30 seconds. Logging and monitoring agents \u00b6 Logging and monitoring agents can add significant load to your cluster control plane because the agents query the API server to enrich logs and metrics with workload metadata. The agent on a node only has access to the local node resources to see things like container and process name. Querying the API server it can add more details such as Kubernetes deployment name and labels. This can be extremely helpful for troubleshooting but detrimental to scaling. Because there are so many different options for logging and monitoring we cannot show examples for every provider. With fluentbit we recommend enabling Use_Kubelet to fetch metadata from the local kubelet instead of the Kubernetes API Server and set Kube_Meta_Cache_TTL to a number that reduces repeated calls when data can be cached (e.g. 60). Scaling monitoring and logging has two general options: Disable integrations Sampling and filtering Disabling integrations is often not an option because you lose log metadata. This eliminates the API scaling problem, but it will introduce other issues by not having the required metadata when needed. Sampling and filtering reduces the number of metrics and logs that are collected. This will lower the amount of requests to the Kubernetes API, and it will reduce the amount of storage needed for the metrics and logs that are collected. Reducing the storage costs will lower the cost for the overall system. The ability to configure sampling depends on the agent software and can be implemented at different points of ingestion. It\u2019s important to add sampling as close to the agent as possible because that is likely where the API server calls happen. Contact your provider to find out more about sampling support. If you are using CloudWatch and CloudWatch Logs you can add agent filtering using patterns described in the documentation . To avoid losing logs and metrics you should send your data to a system that can buffer data in case of an outage on the receiving endpoint. With fluentbit you can use Amazon Kinesis Data Firehose to temporarily keep data which can reduce the chance of overloading your final data storage location.","title":"Cluster Services ({'name': 'English', 'build': True})"},{"location":"scalability/docs/cluster-services/#cluster-services","text":"Cluster services run inside an EKS cluster, but they are not user workloads. If you have a Linux server you often need to run services like NTP, syslog, and a container runtime to support your workloads. Cluster services are similar, supporting services that help you automate and operate your cluster. In Kubernetes these are usually run in the kube-system namespace and some are run as DaemonSets . Cluster services are expected to have a high up-time and are often critical during outages and for troubleshooting. If a core cluster service is not available you may lose access to data that can help recover or prevent an outage (e.g. high disk utilization). They should run on dedicated compute instances such as a separate node group or AWS Fargate. This will ensure that the cluster services are not impacted on shared instances by workloads that may be scaling up or using more resources.","title":"Cluster Services"},{"location":"scalability/docs/cluster-services/#scale-coredns","text":"Scaling CoreDNS has two primary mechanisms. Reducing the number of calls to the CoreDNS service and increasing the number of replicas.","title":"Scale CoreDNS"},{"location":"scalability/docs/cluster-services/#reduce-external-queries-by-lowering-ndots","text":"The ndots setting specifies how many periods (a.k.a. \"dots\") in a domain name are considered enough to avoid querying DNS. If your application has an ndots setting of 5 (default) and you request resources from an external domain such as api.example.com (2 dots) then CoreDNS will be queried for each search domain defined in /etc/resolv.conf for a more specific domain. By default the following domains will be searched before making an external request. api.example.<namespace>.svc.cluster.local api.example.svc.cluster.local api.example.cluster.local api.example.<region>.compute.internal The namespace and region values will be replaced with your workloads namespace and your compute region. You may have additional search domains based on your cluster settings. You can reduce the number of requests to CoreDNS by lowering the ndots option of your workload or fully qualifying your domain requests by including a trailing . (e.g. api.example.com. ). If your workload connects to external services via DNS we recommend setting ndots to 2 so workloads do not make unnecessary, cluster DNS queries inside the cluster. You can set a different DNS server and search domain if the workload doesn\u2019t require access to services inside the cluster. spec: dnsPolicy: \"None\" dnsConfig: options: - name: ndots value: \"2\" - name: edns0 If you lower ndots to a value that is too low or the domains you are connecting to do not include enough specificity (including trailing .) then it is possible DNS lookups will fail. Make sure you test how this setting will impact your workloads.","title":"Reduce external queries by lowering ndots"},{"location":"scalability/docs/cluster-services/#scale-coredns-horizontally","text":"CoreDNS instances can scale by adding additional replicas to the deployment. It's recommended you use NodeLocal DNS or the cluster proportional autoscaler to scale CoreDNS. NodeLocal DNS will require run one instance per node\u2014as a DaemonSet\u2014which requires more compute resources in the cluster, but it will avoid failed DNS requests and decrease the response time for DNS queries in the cluster. The cluster proportional autoscaler will scale CoreDNS based on the number of nodes or cores in the cluster. This isn\u2019t a direct correlation to request queries, but can be useful depending on your workloads and cluster size. The default proportional scale is to add an additional replica for every 256 cores or 16 nodes in the cluster\u2014whichever happens first.","title":"Scale CoreDNS Horizontally"},{"location":"scalability/docs/cluster-services/#scale-kubernetes-metrics-server-vertically","text":"The Kubernetes Metrics Server supports horizontal and vertical scaling. By horizontally scaling the Metrics Server it will be highly available, but it will not scale horizontally to handle more cluster metrics. You will need to vertically scale the Metrics Server based on their recommendations as nodes and collected metrics are added to the cluster. The Metrics Server keeps the data it collects, aggregates, and serves in memory. As a cluster grows, the amount of data the Metrics Server stores increases. In large clusters the Metrics Server will require more compute resources than the memory and CPU reservation specified in the default installation. You can use the Vertical Pod Autoscaler (VPA) or Addon Resizer to scale the Metrics Server. The Addon Resizer scales vertically in proportion to worker nodes and VPA scales based on CPU and memory usage.","title":"Scale Kubernetes Metrics Server Vertically"},{"location":"scalability/docs/cluster-services/#coredns-lameduck-duration","text":"Pods use the kube-dns Service for name resolution. Kubernetes uses destination NAT (DNAT) to redirect kube-dns traffic from nodes to CoreDNS backend pods. As you scale the CoreDNS Deployment, kube-proxy updates iptables rules and chains on nodes to redirect DNS traffic to CoreDNS pods. Propagating new endpoints when you scale up and deleting rules when you scale down CoreDNS can take between 1 to 10 seconds depending on the size of the cluster. This propagation delay can cause DNS lookup failures when a CoreDNS pod gets terminated yet the node\u2019s iptables rules haven\u2019t been updated. In this scenario, the node may continue to send DNS queries to a terminated CoreDNS Pod. You can reduce DNS lookup failures by setting a lameduck duration in your CoreDNS pods. While in lameduck mode, CoreDNS will continue to respond to in-flight requests. Setting a lameduck duration will delay the CoreDNS shutdown process, allowing nodes the time they need to update their iptables rules and chains. We recommend setting CoreDNS lameduck duration to 30 seconds.","title":"CoreDNS lameduck duration"},{"location":"scalability/docs/cluster-services/#logging-and-monitoring-agents","text":"Logging and monitoring agents can add significant load to your cluster control plane because the agents query the API server to enrich logs and metrics with workload metadata. The agent on a node only has access to the local node resources to see things like container and process name. Querying the API server it can add more details such as Kubernetes deployment name and labels. This can be extremely helpful for troubleshooting but detrimental to scaling. Because there are so many different options for logging and monitoring we cannot show examples for every provider. With fluentbit we recommend enabling Use_Kubelet to fetch metadata from the local kubelet instead of the Kubernetes API Server and set Kube_Meta_Cache_TTL to a number that reduces repeated calls when data can be cached (e.g. 60). Scaling monitoring and logging has two general options: Disable integrations Sampling and filtering Disabling integrations is often not an option because you lose log metadata. This eliminates the API scaling problem, but it will introduce other issues by not having the required metadata when needed. Sampling and filtering reduces the number of metrics and logs that are collected. This will lower the amount of requests to the Kubernetes API, and it will reduce the amount of storage needed for the metrics and logs that are collected. Reducing the storage costs will lower the cost for the overall system. The ability to configure sampling depends on the agent software and can be implemented at different points of ingestion. It\u2019s important to add sampling as close to the agent as possible because that is likely where the API server calls happen. Contact your provider to find out more about sampling support. If you are using CloudWatch and CloudWatch Logs you can add agent filtering using patterns described in the documentation . To avoid losing logs and metrics you should send your data to a system that can buffer data in case of an outage on the receiving endpoint. With fluentbit you can use Amazon Kinesis Data Firehose to temporarily keep data which can reduce the chance of overloading your final data storage location.","title":"Logging and monitoring agents"},{"location":"scalability/docs/control-plane.kr/","text":"{'name': 'English', 'build': True} \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \u00b6 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 Kubernetes API Server, Kubernetes Controller Manager, Scheduler \ubc0f Kubernetes\uac00 \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c \uae30\ud0c0 \uad6c\uc131 \uc694\uc18c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uad6c\uc131 \uc694\uc18c\uc758 \ud655\uc7a5\uc131 \uc81c\ud55c\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud56d\ubaa9\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc \ud655\uc7a5\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uc601\uc5ed\uc5d0\ub294 Kubernetes \ubc84\uc804, \uc0ac\uc6a9\ub960 \ubc0f \uac1c\ubcc4 \ub178\ub4dc \ud655\uc7a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. EKS 1.24 \uc774\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc138\uc694 \u00b6 EKS 1.24\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ub3c4\uc785\ub418\uc5c8\uc73c\uba70 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc744 docker \ub300\uc2e0 containerd \ub85c \uc804\ud658\ud588\uc2b5\ub2c8\ub2e4. Containerd\ub294 Kubernetes\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \uae34\ubc00\ud558\uac8c \ub9de\ucdb0 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\uc5ec \uac1c\ubcc4 \ub178\ub4dc \uc131\ub2a5\uc744 \ub192\uc5ec \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc744 \ub3d5\uc2b5\ub2c8\ub2e4. Containerd\ub294 \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 EKS \ubc84\uc804\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, 1.24 \uc774\uc804 \ubc84\uc804\uc5d0\uc11c Containerd\ub85c \uc804\ud658\ud558\ub824\uba74 --container-runtime bootstrap flag \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \uc6cc\ud06c\ub85c\ub4dc \ubc0f \ub178\ub4dc \ubc84\uc2a4\ud305 \uc81c\ud55c \u00b6 Attention \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c API \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\ub97c \ud55c \ubc88\uc5d0 \ub450 \uc790\ub9bf\uc218 \ube44\uc728\ub85c \ub298\ub9ac\ub294 \uae09\uaca9\ud55c \ud655\uc7a5\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4(\uc608: \ud55c \ubc88\uc5d0 1000\uac1c \ub178\ub4dc\uc5d0\uc11c 1100\uac1c \ub178\ub4dc\ub85c \ub610\ub294 4000\uac1c\uc5d0\uc11c 4500\uac1c \ud3ec\ub4dc\ub85c). EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ud074\ub7ec\uc2a4\ud130\uac00 \uc131\uc7a5\ud568\uc5d0 \ub530\ub77c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub9cc \ud655\uc7a5 \uc18d\ub3c4\uc5d0\ub294 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ucc98\uc74c \uc0dd\uc131\ud560 \ub54c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uc989\uc2dc \uc218\ubc31 \uac1c\uc758 \ub178\ub4dc \ub610\ub294 \uc218\ucc9c \uac1c\uc758 \ud3ec\ub4dc\ub85c \ud655\uc7a5\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. EKS\uc758 \uc2a4\ucf00\uc77c\ub9c1 \uac1c\uc120 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc744 \ucc38\uc870\ud558\uc138\uc694. \ub300\uaddc\ubaa8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\ub824\uba74 \uc778\ud504\ub77c\uac00 \uc644\ubcbd\ud558\uac8c \uc900\ube44\ub418\ub3c4\ub85d \uc870\uc815\ud574\uc57c \ud569\ub2c8\ub2e4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc6cc\ubc0d). \ud655\uc7a5 \uc18d\ub3c4\ub97c \uc81c\uc5b4\ud558\ub824\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \uae30\ubc18\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac \ud655\uc7a5\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc81c\uc57d \uc870\uac74\uc744 \uc815\ud655\ud558\uac8c \uc608\uce21\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc73c\uba70 Kubernetes HPA(Horizontal Pod Autoscaler)\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc9c0\ud45c(\uc608: \ucd08\ub2f9 \uc694\uccad)\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc740 \ud655\uc7a5 \uc635\uc158\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Kubernetes \ubb38\uc11c \uc758 \uc608\ub97c \ucc38\uc870\ud558\uc138\uc694. \uace0\uae09 \ud655\uc7a5\uc774 \ud544\uc694\ud558\uac70\ub098 \uc678\ubd80 \uc18c\uc2a4(\uc608: AWS SQS \ub300\uae30\uc5f4)\ub97c \uae30\ubc18\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc774\ubca4\ud2b8 \uae30\ubc18 \uc6cc\ud06c\ub85c\ub4dc \ud655\uc7a5\uc744 \uc704\ud574 KEDA \ub97c \uc0ac\uc6a9\ud558\uc138\uc694. \ub178\ub4dc\uc640 \ud3ec\ub4dc\ub97c \uc548\uc804\ud558\uac8c \ucd95\uc18c \u00b6 \uc7a5\uae30 \uc2e4\ud589 \uc778\uc2a4\ud134\uc2a4 \uad50\uccb4 \u00b6 \uc815\uae30\uc801\uc73c\ub85c \ub178\ub4dc\ub97c \uad50\uccb4\ud558\uba74 \uad6c\uc131 \ub4dc\ub9ac\ud504\ud2b8\uc640 \uac00\ub3d9 \uc2dc\uac04\uc774 \uc5f0\uc7a5\ub41c \ud6c4\uc5d0\ub9cc \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c(\uc608: \ub290\ub9b0 \uba54\ubaa8\ub9ac \ub204\uc218)\ub97c \ubc29\uc9c0\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uac74\uac15\ud55c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \uad50\uccb4\ub294 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ubcf4\uc548 \ud328\uce58\uc5d0 \ub300\ud55c \uc88b\uc740 \ud504\ub85c\uc138\uc2a4\uc640 \uc0ac\ub840\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \uc815\uae30\uc801\uc73c\ub85c \uad50\uccb4\ub418\uba74 \uc9c0\uc18d\uc801\uc778 \uc720\uc9c0 \uad00\ub9ac\ub97c \uc704\ud574 \ubcc4\ub3c4\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub178\ub825\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. Karpenter\uc758 Time To Live (TTL) \uc124\uc815\uc744 \ud1b5\ud574 \uc9c0\uc815\ub41c \uc2dc\uac04 \ub3d9\uc548 \uc778\uc2a4\ud134\uc2a4\uac00 \uc2e4\ud589\ub41c \ud6c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 max-instance-lifetime \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \ud604\uc7ac \uc774 \uae30\ub2a5\uc774 \uc5c6\uc9c0\ub9cc \uc5ec\uae30 GitHub\uc5d0\uc11c \uc694\uccad\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc \uc81c\uac70 \u00b6 --scale-down-utilization-threshold \ub97c \ud1b5\ud574 Kubernetes Cluster Autoscaler\uc758 \ucd95\uc18c \uc784\uacc4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc5c6\uc744 \ub54c \ub178\ub4dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 Karpenter\uc5d0\uc11c ttlSecondsAfterEmpty \ud504\ub85c\ube44\uc800\ub108 \uc124\uc815\uc744 \ud65c\uc6a9\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod Distruption Budgets \ubc0f \uc548\uc804\ud55c \ub178\ub4dc \uc167\ub2e4\uc6b4 \uc0ac\uc6a9 \u00b6 Kubernetes \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uc81c\uac70\ud558\ub824\uba74 \ucee8\ud2b8\ub864\ub7ec\uac00 \uc5ec\ub7ec \ub9ac\uc18c\uc2a4(\uc608: EndpointSlices)\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc790\uc8fc \ub610\ub294 \ub108\ubb34 \ube60\ub974\uac8c \uc218\ud589\ud558\uba74 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc804\ud30c\ub418\uba74\uc11c API Server \uc4f0\ub85c\ud2c0\ub9c1 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod Distruption Budgets \uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\uac00 \uc81c\uac70\ub418\uac70\ub098 \uc2a4\ucf00\uc904\uc774 \uc870\uc815\ub420 \ub54c \ubcc0\ub3d9 \uc18d\ub3c4\ub97c \ub2a6\ucd94\uc5b4 \uc6cc\ud06c\ub85c\ub4dc \uac00\uc6a9\uc131\uc744 \ubcf4\ud638\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\uc785\ub2c8\ub2e4. Kubectl \uc2e4\ud589 \uc2dc \ud074\ub77c\uc774\uc5b8\ud2b8\uce21 \uce90\uc2dc \uc0ac\uc6a9 \u00b6 kubectl \uba85\ub839\uc744 \ube44\ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 Kubernetes API Server\uc5d0 \ucd94\uac00 \ub85c\ub4dc\uac00 \ubc1c\uc0dd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl\uc744 \ubc18\ubcf5\uc801\uc73c\ub85c(\uc608: for \ub8e8\ud504\uc5d0\uc11c) \uc0ac\uc6a9\ud558\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub098 \uc790\ub3d9\ud654\ub97c \uc2e4\ud589\ud558\uac70\ub098 \ub85c\uceec \uce90\uc2dc \uc5c6\uc774 \uba85\ub839\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. kubectl \uc5d0\ub294 \ud544\uc694\ud55c API \ud638\ucd9c \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uac80\uc0c9 \uc815\ubcf4\ub97c \uce90\uc2dc\ud558\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \uce90\uc2dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uce90\uc2dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\uba70 10\ubd84\ub9c8\ub2e4 \uc0c8\ub85c \uace0\uccd0\uc9d1\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \uce90\uc2dc \uc5c6\uc774 kubectl\uc744 \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 API \uc4f0\ub85c\ud2c0\ub9c1 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c API \ud638\ucd9c\uc744 \ud53c\ud558\uae30 \uc704\ud574 --cache-dir \uc744 \ub9c8\uc6b4\ud2b8\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uce90\uc2dc\ub97c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. kubectl Compression \ube44\ud65c\uc131\ud654 \u00b6 kubeconfig \ud30c\uc77c\uc5d0\uc11c kubectl compression\uc744 \ube44\ud65c\uc131\ud654\ud558\uba74 API \ubc0f \ud074\ub77c\uc774\uc5b8\ud2b8 CPU \uc0ac\uc6a9\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \uc804\uc1a1\ub41c \ub370\uc774\ud130\ub97c \uc555\ucd95\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ub300\uc5ed\ud3ed\uc744 \ucd5c\uc801\ud654\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc694\uccad\ub9c8\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uc5d0 CPU \ubd80\ud558\uac00 \uac00\uc911\ub418\uba70, \ub300\uc5ed\ud3ed\uc774 \ucda9\ubd84\ud558\ub2e4\uba74 \uc555\ucd95\uc744 \ube44\ud65c\uc131\ud654\ud558\uba74 \uc624\ubc84\ud5e4\ub4dc\uc640 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc555\ucd95\uc744 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 kubeconfig \ud30c\uc77c\uc5d0\uc11c --disable-compression=true \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 disable-compression: true \ub85c \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. apiVersion: v1 clusters: - cluster: server: serverURL disable-compression: true name: cluster Cluster Autoscaler \uc0e4\ub529 \u00b6 Kubernetes Cluster Autoscaler\ub294 \ud14c\uc2a4\ud2b8\ub97c \uac70\ucce4\uc2b5\ub2c8\ub2e4 . \ucd5c\ub300 1,000\uac1c \ub178\ub4dc\uae4c\uc9c0 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1000\uac1c \uc774\uc0c1\uc758 \ub178\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 Cluster AutoScaler\ub97c \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc0e4\ub4dc \ubaa8\ub4dc\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uac01 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc778\uc2a4\ud134\uc2a4\ub294 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \ud655\uc7a5\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc608\ub294 \uac01 4\uac1c\uc758 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uad6c\uc131\ub41c 2\uac1c\uc758 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uad6c\uc131\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. ClusterAutoscaler-1 autoscalingGroups: - name: eks-core-node-grp-20220823190924690000000011-80c1660e-030d-476d-cb0d-d04d585a8fcb maxSize: 50 minSize: 2 - name: eks-data_m1-20220824130553925600000011-5ec167fa-ca93-8ca4-53a5-003e1ed8d306 maxSize: 450 minSize: 2 - name: eks-data_m2-20220824130733258600000015-aac167fb-8bf7-429d-d032-e195af4e25f5 maxSize: 450 minSize: 2 - name: eks-data_m3-20220824130553914900000003-18c167fa-ca7f-23c9-0fea-f9edefbda002 maxSize: 450 minSize: 2 ClusterAutoscaler-2 autoscalingGroups: - name: eks-data_m4-2022082413055392550000000f-5ec167fa-ca86-6b83-ae9d-1e07ade3e7c4 maxSize: 450 minSize: 2 - name: eks-data_m5-20220824130744542100000017-02c167fb-a1f7-3d9e-a583-43b4975c050c maxSize: 450 minSize: 2 - name: eks-data_m6-2022082413055392430000000d-9cc167fa-ca94-132a-04ad-e43166cef41f maxSize: 450 minSize: 2 - name: eks-data_m7-20220824130553921000000009-96c167fa-ca91-d767-0427-91c879ddf5af maxSize: 450 minSize: 2 API Priority and Fairness \u00b6 Overview \u00b6 \uc694\uccad\uc774 \uc99d\uac00\ud558\ub294 \uae30\uac04 \ub3d9\uc548 \uacfc\ubd80\ud558\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\ud638\ud558\uae30 \uc704\ud574 API \uc11c\ubc84\ub294 \ud2b9\uc815 \uc2dc\uac04\uc5d0 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc774 \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 API \uc11c\ubc84\ub294 \uc694\uccad\uc744 \uac70\ubd80\ud558\uae30 \uc2dc\uc791\ud558\uace0 \"Too many requests\"\uc5d0 \ub300\ud55c 429 HTTP \uc751\ub2f5 \ucf54\ub4dc\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc11c\ubc84\uac00 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc694\uccad \uc218\uc5d0 \ub300\ud55c \uc11c\ubc84 \uce21 \uc81c\ud55c\uc744 \ub450\uc9c0 \uc54a\uace0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uacfc\ubd80\ud558\ub97c \uc8fc\uc5b4 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uac70\ub098 \uac00\uc6a9\uc131\uc774 \uc800\ud558\ub420 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc774 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615\uc73c\ub85c \ub098\ub204\uc5b4\uc9c0\ub294 \ubc29\uc2dd\uc744 \uad6c\uc131\ud558\uae30 \uc704\ud574 Kubernetes\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc744 API Priority and Fairness \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. API \uc11c\ubc84\ub294 --max-requests-inflight \ubc0f --max-mutating-requests-inflight \ud50c\ub798\uadf8\ub85c \uc9c0\uc815\ub41c \uac12\uc744 \ud569\uc0b0\ud558\uc5ec \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 \ucd1d \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \uc774\ub7ec\ud55c \ud50c\ub798\uadf8\uc5d0 \ub300\ud574 \uae30\ubcf8\uac12\uc778 400\uac1c \ubc0f 200\uac1c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \uc8fc\uc5b4\uc9c4 \uc2dc\uac04\uc5d0 \ucd1d 600\uac1c\uc758 \uc694\uccad\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. APF\ub294 \uc774\ub7ec\ud55c 600\uac1c\uc758 \uc694\uccad\uc744 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615\uc73c\ub85c \ub098\ub204\ub294 \ubc29\ubc95\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd5c\uc18c 2\uac1c\uc758 API \uc11c\ubc84\uac00 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc5b4 \uac00\uc6a9\uc131\uc774 \ub192\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc758 \ucd1d \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uac00 1200\uac1c\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4. PriorityLevelConfigurations \ubc0f FlowSchemas\ub77c\ub294 \ub450 \uc885\ub958\uc758 Kubernetes \uac1d\uccb4\ub294 \ucd1d \uc694\uccad \uc218\uac00 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615 \uac04\uc5d0 \ubd84\ud560\ub418\ub294 \ubc29\uc2dd\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac1d\uccb4\ub294 API \uc11c\ubc84\uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc720\uc9c0 \uad00\ub9ac\ub418\uba70 EKS\ub294 \uc9c0\uc815\ub41c Kubernetes \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 \uc774\ub7ec\ud55c \uac1d\uccb4\uc758 \uae30\ubcf8 \uad6c\uc131\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PriorityLevelConfigurations\ub294 \ud5c8\uc6a9\ub41c \ucd1d \uc694\uccad \uc218\uc758 \uc77c\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub192\uc740 PriorityLevelConfiguration\uc5d0\ub294 \ucd1d 600\uac1c\uc758 \uc694\uccad \uc911 98\uac1c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 PriorityLevelConfigurations\uc5d0 \ud560\ub2f9\ub41c \uc694\uccad\uc758 \ud569\uacc4\ub294 600\uc785\ub2c8\ub2e4(\ub610\ub294 \ud2b9\uc815 \uc218\uc900\uc774 \uc694\uccad\uc758 \uc77c\ubd80\ub9cc \ud5c8\uc6a9\ub41c \uacbd\uc6b0 API Server\uac00 \ubc18\uc62c\ub9bc\ud558\ubbc0\ub85c 600\ubcf4\ub2e4 \uc57d\uac04 \ub192\uc74c). \ud074\ub7ec\uc2a4\ud130\uc758 PriorityLevelConfigurations\uc640 \uac01\uac01\uc5d0 \ud560\ub2f9\ub41c \uc694\uccad \uc218\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS 1.24\uc758 \uae30\ubcf8\uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. $ kubectl get --raw /metrics | grep apiserver_flowcontrol_request_concurrency_limit apiserver_flowcontrol_request_concurrency_limit{priority_level=\"catch-all\"} 13 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"global-default\"} 49 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"leader-election\"} 25 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"node-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"system\"} 74 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 \ub450 \ubc88\uc9f8 \uc720\ud615\uc758 \uac1d\uccb4\ub294 FlowSchemas\uc785\ub2c8\ub2e4. \ud2b9\uc815 \uc18d\uc131 \uc138\ud2b8\uac00 \ud3ec\ud568\ub41c API \uc11c\ubc84 \uc694\uccad\uc740 \ub3d9\uc77c\ud55c FlowSchema\ub85c \ubd84\ub958\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc5d0\ub294 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\ub098 API Group, namespace \ub610\ub294 resource\uc640 \uac19\uc740 \uc694\uccad\uc758 \uc18d\uc131\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. FlowSchema\ub294 \ub610\ud55c \uc774 \uc720\ud615\uc758 \uc694\uccad\uc774 \ub9e4\ud551\ub418\uc5b4\uc57c \ud558\ub294 PriorityLevelConfiguration\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \ub450 \uac1c\uccb4\ub294 \ud568\uaed8 \"\uc774 \uc720\ud615\uc758 \uc694\uccad\uc774 \uc774 inflight \uc694\uccad \ube44\uc728\uc5d0 \ud3ec\ud568\ub418\uae30\ub97c \uc6d0\ud569\ub2c8\ub2e4.\"\ub77c\uace0 \ub9d0\ud569\ub2c8\ub2e4. \uc694\uccad\uc774 API Server\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ubaa8\ub4e0 \ud544\uc218 \uc18d\uc131\uacfc \uc77c\uce58\ud558\ub294 FlowSchemas\ub97c \ucc3e\uc744 \ub54c\uae4c\uc9c0 \uac01 FlowSchemas\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \uc5ec\ub7ec FlowSchemas\uac00 \uc694\uccad\uacfc \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 API Server\ub294 \uac1c\uccb4\uc758 \uc18d\uc131\uc73c\ub85c \uc9c0\uc815\ub41c \uc77c\uce58 \uc6b0\uc120 \uc21c\uc704\uac00 \uac00\uc7a5 \uc791\uc740 FlowSchema\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. FlowSchemas\uc640 PriorityLevelConfigurations\uc758 \ub9e4\ud551\uc740 \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ kubectl get flowschemas NAME PRIORITYLEVEL MATCHINGPRECEDENCE DISTINGUISHERMETHOD AGE MISSINGPL exempt exempt 1 <none> 3d False probes exempt 2 <none> 3d False system-leader-election leader-election 100 ByUser 3d False endpoint-controller workload-high 150 ByUser 3d False workload-leader-election leader-election 200 ByUser 3d False system-node-high node-high 400 ByUser 3d False system-nodes system 500 ByUser 3d False kube-controller-manager workload-high 800 ByNamespace 3d False kube-scheduler workload-high 800 ByNamespace 3d False kube-system-service-accounts workload-high 900 ByNamespace 3d False service-accounts workload-low 9000 ByUser 3d False global-default global-default 9900 ByUser 3d False catch-all catch-all 10000 ByUser 3d False PriorityLevelConfigurations\uc5d0\ub294 Queue, Reject \ub610\ub294 Exempt \uc720\ud615\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Queue \ubc0f Reject \uc720\ud615\uc758 \uacbd\uc6b0 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uc5d0 \uc81c\ud55c\uc774 \uc801\uc6a9\ub418\uc9c0\ub9cc \ud574\ub2f9 \uc81c\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ub3d9\uc791\uc774 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub192\uc740 PriorityLevelConfiguration\uc740 Queue \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uba70 Controller Manager, Endpoint Controller, Scheduler \ubc0f kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc694\uccad\uc774 98\uac1c \uc788\uc2b5\ub2c8\ub2e4. Queue \uc720\ud615\uc774 \uc0ac\uc6a9\ub418\ubbc0\ub85c API Server\ub294 \uc694\uccad\uc744 \uba54\ubaa8\ub9ac\uc5d0 \uc720\uc9c0\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70 \uc774\ub7ec\ud55c \uc694\uccad\uc774 \uc2dc\uac04 \ucd08\uacfc\ub418\uae30 \uc804\uc5d0 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uac00 98\uac1c \ubbf8\ub9cc\uc73c\ub85c \ub5a8\uc5b4\uc9c0\uae30\ub97c \ud76c\ub9dd\ud569\ub2c8\ub2e4. \ud2b9\uc815 \uc694\uccad\uc774 \ub300\uae30\uc5f4\uc5d0\uc11c \uc2dc\uac04 \ucd08\uacfc\ub418\uac70\ub098 \ub108\ubb34 \ub9ce\uc740 \uc694\uccad\uc774 \uc774\ubbf8 \ub300\uae30\uc5f4\uc5d0 \uc788\ub294 \uacbd\uc6b0 API Server\ub294 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 429\ub97c \ubc18\ud658\ud560 \uc218\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \ub300\uae30\uc5f4\uc5d0 \uc788\uc73c\uba74 \uc694\uccad\uc774 429\ub97c \uc218\uc2e0\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc9c0\ub9cc \uc694\uccad\uc758 \uc885\ub2e8 \uac04 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c Reject \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\uad04\uc801\uc778 PriorityLevelConfiguration\uc5d0 \ub9e4\ud551\ub418\ub294 \ud3ec\uad04\uc801\uc778 FlowSchema\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 13\uac1c\uc758 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc81c\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 API Server\ub294 \ub300\uae30\uc5f4\uc744 \uc2e4\ud589\ud558\uc9c0 \uc54a\uace0 429 \uc751\ub2f5 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \uc989\uc2dc \uc0ad\uc81c\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c Exempt \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec PriorityLevelConfiguration\uc5d0 \ub9e4\ud551\ud558\ub294 \uc694\uccad\uc740 429\ub97c \uc218\uc2e0\ud558\uc9c0 \uc54a\uc73c\uba70 \ud56d\uc0c1 \uc989\uc2dc \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc774\ub294 healthz \uc694\uccad\uc774\ub098 system:masters \uadf8\ub8f9\uc5d0\uc11c \uc624\ub294 \uc694\uccad\uacfc \uac19\uc740 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. APF \ubc0f \uc0ad\uc81c\ub41c \uc694\uccad \ubaa8\ub2c8\ud130\ub9c1 \u00b6 APF\ub85c \uc778\ud574 \uc0ad\uc81c\ub41c \uc694\uccad\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 apiserver_flowcontrol_rejected_requests_total \uc5d0 \ub300\ud55c API Server \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec \uc601\ud5a5\uc744 \ubc1b\uc740 FlowSchemas \ubc0f PriorityLevelConfigurations\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc774 \uc9c0\ud45c\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub0ae\uc740 \ub300\uae30\uc5f4\uc758 \uc694\uccad \uc2dc\uac04 \ucd08\uacfc\ub85c \uc778\ud574 service account FlowSchema\uc758 \uc694\uccad 100\uac1c\uac00 \uc0ad\uc81c\ub418\uc5c8\uc74c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. % kubectl get --raw /metrics | grep apiserver_flowcontrol_rejected_requests_total apiserver_flowcontrol_rejected_requests_total{flow_schema=\"service-accounts\",priority_level=\"workload-low\",reason=\"time-out\"} 100 \uc9c0\uc815\ub41c PriorityLevelConfiguration\uc774 429\ub97c \uc218\uc2e0\ud558\uac70\ub098 \ud050\ub85c \uc778\ud574 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc99d\uac00\ud558\ub294 \uc815\ub3c4\ub97c \ud655\uc778\ud558\ub824\uba74 \ub3d9\uc2dc\uc131 \uc81c\ud55c\uacfc \uc0ac\uc6a9 \uc911\uc778 \ub3d9\uc2dc\uc131\uc758 \ucc28\uc774\ub97c \ube44\uad50\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc608\uc5d0\ub294 100\uac1c\uc758 \uc694\uccad \ubc84\ud37c\uac00 \uc788\uc2b5\ub2c8\ub2e4. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_limit.*workload-low' apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_in_use.*workload-low' apiserver_flowcontrol_request_concurrency_in_use{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 145 \ud2b9\uc815 PriorityLevelConfiguration\uc5d0\uc11c \ub300\uae30\uc5f4\uc774 \ubc1c\uc0dd\ud558\uc9c0\ub9cc \ubc18\ub4dc\uc2dc \uc694\uccad\uc774 \uc0ad\uc81c\ub418\ub294 \uac83\uc740 \uc544\ub2cc\uc9c0 \ud655\uc778\ud558\ub824\uba74 apiserver_flowcontrol_current_inqueue_requests \uc5d0 \ub300\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_current_inqueue_requests.*workload-low' apiserver_flowcontrol_current_inqueue_requests{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 10 \uae30\ud0c0 \uc720\uc6a9\ud55c Prometheus \uce21\uc815\ud56d\ubaa9\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: apiserver_flowcontrol_dispatched_requests_total apiserver_flowcontrol_request_execution_seconds apiserver_flowcontrol_request_wait_duration_seconds APF \uc9c0\ud45c \uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 \uc5c5\uc2a4\ud2b8\ub9bc \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694. \uc0ad\uc81c\ub41c \uc694\uccad \ubc29\uc9c0 \u00b6 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcc0\uacbd\ud558\uc5ec 429\ub97c \ubc29\uc9c0 \u00b6 APF\uac00 \ud5c8\uc6a9\ub41c \ucd5c\ub300 \ub0b4\ubd80 \uc694\uccad \uc218\ub97c \ucd08\uacfc\ud558\ub294 \uc9c0\uc815\ub41c PriorityLevelConfiguration\uc73c\ub85c \uc778\ud574 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\ub294 \uacbd\uc6b0 \uc601\ud5a5\uc744 \ubc1b\ub294 FlowSchemas\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc9c0\uc815\ub41c \uc2dc\uac04\uc5d0 \uc2e4\ud589\ub418\ub294 \uc694\uccad \uc218\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 429\uac00 \ubc1c\uc0dd\ud558\ub294 \uae30\uac04 \ub3d9\uc548 \uc774\ub8e8\uc5b4\uc9c4 \ucd1d \uc694\uccad \uc218\ub97c \uc904\uc784\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ubaa9\ub85d \ud638\ucd9c\uacfc \uac19\uc740 \uc7a5\uae30 \uc2e4\ud589 \uc694\uccad\uc740 \uc2e4\ud589\ub418\ub294 \uc804\uccb4 \uae30\uac04 \ub3d9\uc548 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc73c\ub85c \uacc4\uc0b0\ub418\uae30 \ub54c\ubb38\uc5d0 \ud2b9\ud788 \ubb38\uc81c\uac00 \ub429\ub2c8\ub2e4. \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc694\uccad \uc218\ub97c \uc904\uc774\uac70\ub098 \ubaa9\ub85d \ud638\ucd9c\uc758 \ub300\uae30 \uc2dc\uac04\uc744 \ucd5c\uc801\ud654\ud558\uba74(\uc608: \uc694\uccad \ub2f9 \uac00\uc838\uc624\ub294 \uac1d\uccb4 \uc218\ub97c \uc904\uc774\uac70\ub098 watch \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc804\ud658) \ud574\ub2f9 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ucd1d \ub3d9\uc2dc\uc131\uc744 \uc904\uc774\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. APF \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc5ec 429\ub97c \ubc29\uc9c0 \u00b6 \uacbd\uace0 \uc218\ud589 \uc911\uc778 \uc791\uc5c5\uc744 \uc54c\uace0 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uae30\ubcf8 APF \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. APF \uc124\uc815\uc774 \uc798\ubabb \uad6c\uc131\ub418\uba74 API Server \uc694\uccad\uc774 \uc911\ub2e8\ub418\uace0 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud06c\uac8c \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \uc0ad\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud55c \ub610 \ub2e4\ub978 \uc811\uadfc \ubc29\uc2dd\uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc124\uce58\ub41c \uae30\ubcf8 FlowSchemas \ub610\ub294 PriorityLevelConfigurations\ub97c \ubcc0\uacbd\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. EKS\ub294 \uc9c0\uc815\ub41c Kubernetes \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud55c FlowSchemas \ubc0f PriorityLevelConfigurations\uc758 \uc5c5\uc2a4\ud2b8\ub9bc \uae30\ubcf8 \uc124\uc815\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. API\ub294 \uac1d\uccb4\uc5d0 \ub300\ud55c \ub2e4\uc74c \uc8fc\uc11d\uc774 false\ub85c \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \ud55c \uc774\ub7ec\ud55c \uac1d\uccb4\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \ub2e4\uc2dc \uc870\uc815\ud569\ub2c8\ub2e4. metadata: annotations: apf.kubernetes.io/autoupdate-spec: \"false\" \ub192\uc740 \uc218\uc900\uc5d0\uc11c APF \uc124\uc815\uc740 \ub2e4\uc74c \uc911 \ud558\ub098\ub85c \uc218\uc815\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\uc2ec \uc788\ub294 \uc694\uccad\uc5d0 \ub354 \ub9ce\uc740 \uae30\ub0b4 \uc218\uc6a9 \ub2a5\ub825\uc744 \ud560\ub2f9\ud558\uc138\uc694. \ub2e4\ub978 \uc694\uccad \uc720\ud615\uc5d0 \ub300\ud55c \uc6a9\ub7c9\uc774 \ubd80\uc871\ud560 \uc218 \uc788\ub294 \ube44\ud544\uc218\uc801\uc774\uac70\ub098 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc694\uccad\uc744 \uaca9\ub9ac\ud569\ub2c8\ub2e4. \uc774\ub294 \uae30\ubcf8 FlowSchemas \ubc0f PriorityLevelConfigurations\ub97c \ubcc0\uacbd\ud558\uac70\ub098 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc0c8 \uac1c\uccb4\ub97c \uc0dd\uc131\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\ub294 \uad00\ub828 PriorityLevelConfigurations \uac1c\uccb4\uc5d0 \ub300\ud55c authenticateConcurrencyShares \uac12\uc744 \ub298\ub824 \ud560\ub2f9\ub418\ub294 \uc9c4\ud589 \uc911 \uc694\uccad \ube44\uc728\uc744 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc694\uccad\uc774 \ubc1c\uc1a1\ub418\uae30 \uc804\uc5d0 \ub300\uae30\uc5f4\uc5d0 \ucd94\uac00\ub418\uc5b4 \ubc1c\uc0dd\ud558\ub294 \ucd94\uac00 \ub300\uae30 \uc2dc\uac04\uc744 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \ud2b9\uc815 \uc2dc\uac04\uc5d0 \ub300\uae30\uc5f4\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\ub294 \uc694\uccad \uc218\ub3c4 \ub298\uc5b4\ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \uace0\uac1d\uc758 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub9de\ub294 \uc0c8\ub85c\uc6b4 FlowSchema \ubc0f PriorityLevelConfigurations \uac1c\uccb4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc874 PriorityLevelConfigurations \ub610\ub294 \uc0c8\ub85c\uc6b4 PriorityLevelConfigurations\uc5d0 \ub354 \ub9ce\uc740 secureConcurrencyShares\ub97c \ud560\ub2f9\ud558\uba74 \uc804\uccb4 \ud55c\ub3c4\uac00 API Server \ub2f9 600\uac1c\ub85c \uc720\uc9c0\ub418\ubbc0\ub85c \ub2e4\ub978 \ubc84\ud0b7\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uc694\uccad \uc218\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. APF \uae30\ubcf8\uac12\uc744 \ubcc0\uacbd\ud560 \ub54c \uc124\uc815 \ubcc0\uacbd\uc73c\ub85c \uc778\ud574 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 429\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ube44\ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub7ec\ud55c \uce21\uc815\ud56d\ubaa9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc84\ud0b7\uc774 \uc694\uccad \uc0ad\uc81c\ub97c \uc2dc\uc791\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubaa8\ub4e0 FlowSchemas\uc5d0 \ub300\ud574 apiserver_flowcontrol_rejected_requests_total \uc5d0 \ub300\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. apiserver_flowcontrol_request_concurrency_limit \ubc0f apiserver_flowcontrol_request_concurrency_in_use \uac12\uc744 \ube44\uad50\ud558\uc5ec \uc0ac\uc6a9 \uc911\uc778 \ub3d9\uc2dc\uc131\uc774 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc758 \uc81c\ud55c\uc744 \uc704\ubc18\ud560 \uc704\ud5d8\uc774 \uc5c6\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 FlowSchema \ubc0f PriorityLevelConfiguration\uc744 \uc815\uc758\ud558\ub294 \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \uc0ac\ub840 \uc911 \ud558\ub098\ub294 \uaca9\ub9ac\uc785\ub2c8\ub2e4. Pod\uc5d0\uc11c \uc7a5\uae30 \uc2e4\ud589 \ubaa9\ub85d \uc774\ubca4\ud2b8 \ud638\ucd9c\uc744 \uc790\uccb4 \uc694\uccad \uacf5\uc720\ub85c \ubd84\ub9ac\ud55c\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uae30\uc874 \uc11c\ube44\uc2a4 \uacc4\uc815 FlowSchema\ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uc758 \uc911\uc694\ud55c \uc694\uccad\uc774 429\ub97c \uc218\uc2e0\ud558\uc5ec \uc694\uccad \uc6a9\ub7c9\uc774 \ubd80\uc871\ud574\uc9c0\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc758 \ucd1d \uac1c\uc218\ub294 \uc720\ud55c\ud558\uc9c0\ub9cc \uc774 \uc608\uc5d0\uc11c\ub294 APF \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \uc694\uccad \uc6a9\ub7c9\uc744 \ub354 \uc798 \ub098\ub20c \uc218 \uc788\uc74c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. List \uc774\ubca4\ud2b8 \uc694\uccad\uc744 \ubd84\ub9ac\ud558\uae30 \uc704\ud55c FlowSchema \uac1d\uccb4\uc758 \uc608: apiVersion: flowcontrol.apiserver.k8s.io/v1beta1 kind: FlowSchema metadata: name: list-events-default-service-accounts spec: distinguisherMethod: type: ByUser matchingPrecedence: 8000 priorityLevelConfiguration: name: catch-all rules: - resourceRules: - apiGroups: - '*' namespaces: - default resources: - events verbs: - list subjects: - kind: ServiceAccount serviceAccount: name: default namespace: default \uc774 FlowSchema\ub294 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 Service Account\uc5d0\uc11c \uc218\ud589\ub41c \ubaa8\ub4e0 List \uc774\ubca4\ud2b8 \ud638\ucd9c\uc744 \ucea1\ucc98\ud569\ub2c8\ub2e4. \uc77c\uce58 \uc6b0\uc120 \uc21c\uc704 8000\uc740 \uae30\uc874 Service Account FlowSchema\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac12 9000\ubcf4\ub2e4 \ub0ae\uc73c\ubbc0\ub85c \uc774\ub7ec\ud55c List \uc774\ubca4\ud2b8 \ud638\ucd9c\uc740 Service Account\uac00 \uc544\ub2cc list-events-default-service-account\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc694\uccad\uc744 \uaca9\ub9ac\ud558\uae30 \uc704\ud574 \ud3ec\uad04\uc801\uc778 PriorityLevelConfiguration\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\ud0b7\uc740 \uc7a5\uae30 \uc2e4\ud589\ub418\ub294 list \uc774\ubca4\ud2b8 \ud638\ucd9c\uc5d0\uc11c 13\uac1c\uc758 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ub3d9\uc2dc\uc5d0 13\uac1c \uc774\uc0c1\uc758 \uc694\uccad\uc744 \ubc1c\ud589\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uc9c0\ub9cc \uc989\uc2dc 429\ub97c \uc751\ub2f5\ubc1b\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. API Server\uc5d0\uc11c \ub9ac\uc18c\uc2a4 \uac80\uc0c9 \u00b6 API Server\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc624\ub294 \uac83\uc740 \ubaa8\ub4e0 \uaddc\ubaa8\uc758 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc608\uc0c1\ub418\ub294 \ub3d9\uc791\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4 \uc218\ub97c \ud655\uc7a5\ud558\uba74 \uc694\uccad \ube48\ub3c4\uc640 \ub370\uc774\ud130 \ubcfc\ub968\uc774 \ube60\ub974\uac8c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ub418\uc5b4 API \uc4f0\ub85c\ud2c0\ub9c1 \ubc0f \uc18d\ub3c4 \uc800\ud558\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc2ec\uac01\ub3c4\uc5d0 \ub530\ub77c \uc8fc\uc758\ud558\uc9c0 \uc54a\uc73c\uba74 \uc608\uc0c1\uce58 \ubabb\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud55c \uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 \ubb34\uc5c7\uc744 \uc694\uccad\ud558\uace0 \uc5bc\ub9c8\ub098 \uc790\uc8fc \uc694\uccad\ud558\ub294\uc9c0 \ud30c\uc545\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uaddc\ubaa8 \uc870\uc815 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c \ucffc\ub9ac \uc591\uc744 \uc81c\ud55c\ud558\ub294 \uc9c0\uce68\uc785\ub2c8\ub2e4. \uc774 \uc139\uc158\uc758 \uc81c\uc548 \uc0ac\ud56d\uc740 \ud655\uc7a5\uc131\uc774 \uac00\uc7a5 \uc88b\uc740 \uac83\uc73c\ub85c \uc54c\ub824\uc9c4 \uc635\uc158\ubd80\ud130 \uc21c\uc11c\ub300\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. Shared Informers \uc0ac\uc6a9 \u00b6 Kubernetes API\uc640 \ud1b5\ud569\ub418\ub294 \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc790\ub3d9\ud654\ub97c \uad6c\ucd95\ud560 \ub54c Kubernetes \ub9ac\uc18c\uc2a4\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc640\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\ub97c \uc815\uae30\uc801\uc73c\ub85c \ud3f4\ub9c1\ud558\uba74 API Server\uc5d0 \uc0c1\ub2f9\ud55c \ubd80\ud558\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. client-go \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 informer \ub97c \uc0ac\uc6a9\ud558\uba74 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud3f4\ub9c1\ud558\ub294 \ub300\uc2e0 \uc774\ubca4\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ub9ac\uc18c\uc2a4\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uad00\ucc30\ud560 \uc218 \uc788\ub2e4\ub294 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. Shared Informer\ub294 \uc774\ubca4\ud2b8 \ubc0f \ubcc0\uacbd \uc0ac\ud56d\uc5d0 \uacf5\uc720 \uce90\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd80\ud558\ub97c \ub354\uc6b1 \uc904\uc774\ubbc0\ub85c \ub3d9\uc77c\ud55c \ub9ac\uc18c\uc2a4\ub97c \uac10\uc2dc\ud558\ub294 \uc5ec\ub7ec \ucee8\ud2b8\ub864\ub7ec\ub85c \uc778\ud574 \ucd94\uac00 \ubd80\ud558\uac00 \uac00\uc911\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub294 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 label \ubc0f field selectors \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \ub9ac\uc18c\uc2a4\ub97c \ud3f4\ub9c1\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \ud544\ud130\ub9c1\ub418\uc9c0 \uc54a\uc740 \uac01 \ud3f4\ub9c1\uc5d0\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud544\ud130\ub9c1\ud558\uae30 \uc704\ud574 etcd\uc5d0\uc11c API Server\ub97c \ud1b5\ud574 \ub9ce\uc740 \uc591\uc758 \ubd88\ud544\uc694\ud55c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud574\uc57c \ud569\ub2c8\ub2e4. \ub808\uc774\ube14\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \ud544\ud130\ub9c1\ud558\uba74 API \uc11c\ubc84\uac00 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ub418\ub294 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc218\ud589\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes API \uc0ac\uc6a9 \ucd5c\uc801\ud654 \u00b6 \uc0ac\uc6a9\uc790 \uc815\uc758 \ucee8\ud2b8\ub864\ub7ec \ub610\ub294 \uc790\ub3d9\ud654\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes API\ub97c \ud638\ucd9c\ud560 \ub54c \ud544\uc694\ud55c \ub9ac\uc18c\uc2a4\ub85c\ub9cc \ud638\ucd9c\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc81c\ud55c\uc774 \uc5c6\uc73c\uba74 API Server \ubc0f etcd\uc5d0 \ubd88\ud544\uc694\ud55c \ub85c\ub4dc\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 watch \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc778\uc790\uac00 \uc5c6\uc73c\uba74 \uae30\ubcf8 \ub3d9\uc791\uc740 \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. list \ub300\uc2e0 watch\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 API \uc694\uccad \ub05d\uc5d0 ?watch=true \ub97c \ucd94\uac00\ud558\uba74 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 watch\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 Pod\ub97c \uac00\uc838\uc624\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. /api/v1/namespaces/default/pods?watch=true \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uacbd\uc6b0 \ub098\uc5f4\ud558\ub294 \ud56d\ubaa9\uc758 \ubc94\uc704\uc640 \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc694\uccad\uc5d0 limit=500 \uc778\uc218\ub97c \ucd94\uac00\ud558\uc5ec \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fieldSelector \uc778\uc218\uc640 /namespace/ \uacbd\ub85c\ub294 \ubaa9\ub85d\uc758 \ubc94\uc704\ub97c \ud544\uc694\uc5d0 \ub530\ub77c \uc881\uac8c \uc9c0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 Pod\ub9cc \ub098\uc5f4\ud558\ub824\uba74 \ub2e4\uc74c API \uacbd\ub85c\uc640 \uc778\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. /api/v1/namespaces/default/pods?fieldSelector=status.phase=Running&limit=500 \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uacbd\uc6b0 \ub098\uc5f4\ud558\ub294 \ud56d\ubaa9\uc758 \ubc94\uc704\uc640 \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc694\uccad\uc5d0 limit=500 \uc778\uc790\ub97c \ucd94\uac00\ud558\uc5ec \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fieldSelector \uc778\uc790\uc640 /namespace/ \uacbd\ub85c\ub294 \ubaa9\ub85d\uc758 \ubc94\uc704\ub97c \ud544\uc694\uc5d0 \ub530\ub77c \uc791\uac8c \uc9c0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 Pod\ub9cc \ub098\uc5f4\ud558\ub824\uba74 \ub2e4\uc74c API \uacbd\ub85c\uc640 \uc778\uc790\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ub294 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. /api/v1/pods?fieldSelector=status.phase=Running&limit=500 \ub098\uc5f4\ub41c \uc624\ube0c\uc81d\ud2b8\ub97c \uc81c\ud55c\ud558\ub294 \ub610 \ub2e4\ub978 \uc635\uc158\uc740 ResourceVersions (\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \ucc38\uc870) \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. ResourceVersion \uc778\uc790\uac00 \uc5c6\uc73c\uba74 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 \ubc84\uc804\uc744 \ubc1b\uac8c \ub418\uba70, \uc774 \uacbd\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uac00\uc7a5 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uac00\uc7a5 \ub290\ub9b0 etcd \ucffc\ub7fc \uc77d\uae30\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. resourceVersion\uc740 \ucffc\ub9ac\ud558\ub824\ub294 \ub9ac\uc18c\uc2a4\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c0\uba70, Metadata.Resourceversion \ud544\ub4dc\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API Server \uce90\uc2dc\uc5d0\uc11c \uacb0\uacfc\ub97c \ubc18\ud658\ud558\ub294 \ud2b9\ubcc4\ud55c ResourceVersion=0 \uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 etcd \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc9c0\ub9cc Pagination\uc740 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. /api/v1/namespaces/default/pods?resourceVersion=0 \uc778\uc790 \uc5c6\uc774 API\ub97c \ud638\ucd9c\ud558\uba74 API Server \ubc0f etcd\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4.\uc774 \ud638\ucd9c\uc744 \uc0ac\uc6a9\ud558\uba74 Pagination\uc774\ub098 \ubc94\uc704 \uc81c\ud55c \uc5c6\uc774 \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uac00\uc838\uc624\uace0 etcd\uc5d0\uc11c \ucffc\ub7fc\uc744 \uc77d\uc5b4\uc57c \ud569\ub2c8\ub2e4. /api/v1/pods","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778"},{"location":"scalability/docs/control-plane.kr/#_1","text":"Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 Kubernetes API Server, Kubernetes Controller Manager, Scheduler \ubc0f Kubernetes\uac00 \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c \uae30\ud0c0 \uad6c\uc131 \uc694\uc18c\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uad6c\uc131 \uc694\uc18c\uc758 \ud655\uc7a5\uc131 \uc81c\ud55c\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud56d\ubaa9\uc5d0 \ub530\ub77c \ub2e4\ub974\uc9c0\ub9cc \ud655\uc7a5\uc5d0 \uac00\uc7a5 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\ub294 \uc601\uc5ed\uc5d0\ub294 Kubernetes \ubc84\uc804, \uc0ac\uc6a9\ub960 \ubc0f \uac1c\ubcc4 \ub178\ub4dc \ud655\uc7a5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778"},{"location":"scalability/docs/control-plane.kr/#eks-124","text":"EKS 1.24\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ub3c4\uc785\ub418\uc5c8\uc73c\uba70 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc744 docker \ub300\uc2e0 containerd \ub85c \uc804\ud658\ud588\uc2b5\ub2c8\ub2e4. Containerd\ub294 Kubernetes\uc758 \uc694\uad6c \uc0ac\ud56d\uc5d0 \uae34\ubc00\ud558\uac8c \ub9de\ucdb0 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\uc5ec \uac1c\ubcc4 \ub178\ub4dc \uc131\ub2a5\uc744 \ub192\uc5ec \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc744 \ub3d5\uc2b5\ub2c8\ub2e4. Containerd\ub294 \uc9c0\uc6d0\ub418\ub294 \ubaa8\ub4e0 EKS \ubc84\uc804\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\uba70, 1.24 \uc774\uc804 \ubc84\uc804\uc5d0\uc11c Containerd\ub85c \uc804\ud658\ud558\ub824\uba74 --container-runtime bootstrap flag \ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","title":"EKS 1.24 \uc774\uc0c1\uc744 \uc0ac\uc6a9\ud558\uc138\uc694"},{"location":"scalability/docs/control-plane.kr/#_2","text":"Attention \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c API \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uc9c0 \uc54a\uc73c\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30\ub97c \ud55c \ubc88\uc5d0 \ub450 \uc790\ub9bf\uc218 \ube44\uc728\ub85c \ub298\ub9ac\ub294 \uae09\uaca9\ud55c \ud655\uc7a5\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4(\uc608: \ud55c \ubc88\uc5d0 1000\uac1c \ub178\ub4dc\uc5d0\uc11c 1100\uac1c \ub178\ub4dc\ub85c \ub610\ub294 4000\uac1c\uc5d0\uc11c 4500\uac1c \ud3ec\ub4dc\ub85c). EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \ud074\ub7ec\uc2a4\ud130\uac00 \uc131\uc7a5\ud568\uc5d0 \ub530\ub77c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\uc9c0\ub9cc \ud655\uc7a5 \uc18d\ub3c4\uc5d0\ub294 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ucc98\uc74c \uc0dd\uc131\ud560 \ub54c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uc989\uc2dc \uc218\ubc31 \uac1c\uc758 \ub178\ub4dc \ub610\ub294 \uc218\ucc9c \uac1c\uc758 \ud3ec\ub4dc\ub85c \ud655\uc7a5\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. EKS\uc758 \uc2a4\ucf00\uc77c\ub9c1 \uac1c\uc120 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc744 \ucc38\uc870\ud558\uc138\uc694. \ub300\uaddc\ubaa8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\ub824\uba74 \uc778\ud504\ub77c\uac00 \uc644\ubcbd\ud558\uac8c \uc900\ube44\ub418\ub3c4\ub85d \uc870\uc815\ud574\uc57c \ud569\ub2c8\ub2e4(\uc608: \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc6cc\ubc0d). \ud655\uc7a5 \uc18d\ub3c4\ub97c \uc81c\uc5b4\ud558\ub824\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \uae30\ubc18\uc73c\ub85c \ud655\uc7a5\ud558\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac \ud655\uc7a5\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc81c\uc57d \uc870\uac74\uc744 \uc815\ud655\ud558\uac8c \uc608\uce21\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc73c\uba70 Kubernetes HPA(Horizontal Pod Autoscaler)\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uc9c0\ud45c(\uc608: \ucd08\ub2f9 \uc694\uccad)\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc740 \ud655\uc7a5 \uc635\uc158\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc815\uc758 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Kubernetes \ubb38\uc11c \uc758 \uc608\ub97c \ucc38\uc870\ud558\uc138\uc694. \uace0\uae09 \ud655\uc7a5\uc774 \ud544\uc694\ud558\uac70\ub098 \uc678\ubd80 \uc18c\uc2a4(\uc608: AWS SQS \ub300\uae30\uc5f4)\ub97c \uae30\ubc18\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc774\ubca4\ud2b8 \uae30\ubc18 \uc6cc\ud06c\ub85c\ub4dc \ud655\uc7a5\uc744 \uc704\ud574 KEDA \ub97c \uc0ac\uc6a9\ud558\uc138\uc694.","title":"\uc6cc\ud06c\ub85c\ub4dc \ubc0f \ub178\ub4dc \ubc84\uc2a4\ud305 \uc81c\ud55c"},{"location":"scalability/docs/control-plane.kr/#_3","text":"","title":"\ub178\ub4dc\uc640 \ud3ec\ub4dc\ub97c \uc548\uc804\ud558\uac8c \ucd95\uc18c"},{"location":"scalability/docs/control-plane.kr/#_4","text":"\uc815\uae30\uc801\uc73c\ub85c \ub178\ub4dc\ub97c \uad50\uccb4\ud558\uba74 \uad6c\uc131 \ub4dc\ub9ac\ud504\ud2b8\uc640 \uac00\ub3d9 \uc2dc\uac04\uc774 \uc5f0\uc7a5\ub41c \ud6c4\uc5d0\ub9cc \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c(\uc608: \ub290\ub9b0 \uba54\ubaa8\ub9ac \ub204\uc218)\ub97c \ubc29\uc9c0\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uac74\uac15\ud55c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\ub3d9 \uad50\uccb4\ub294 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \ubcf4\uc548 \ud328\uce58\uc5d0 \ub300\ud55c \uc88b\uc740 \ud504\ub85c\uc138\uc2a4\uc640 \uc0ac\ub840\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \uc815\uae30\uc801\uc73c\ub85c \uad50\uccb4\ub418\uba74 \uc9c0\uc18d\uc801\uc778 \uc720\uc9c0 \uad00\ub9ac\ub97c \uc704\ud574 \ubcc4\ub3c4\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc694\ud55c \ub178\ub825\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. Karpenter\uc758 Time To Live (TTL) \uc124\uc815\uc744 \ud1b5\ud574 \uc9c0\uc815\ub41c \uc2dc\uac04 \ub3d9\uc548 \uc778\uc2a4\ud134\uc2a4\uac00 \uc2e4\ud589\ub41c \ud6c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 max-instance-lifetime \uc124\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc5d0\ub294 \ud604\uc7ac \uc774 \uae30\ub2a5\uc774 \uc5c6\uc9c0\ub9cc \uc5ec\uae30 GitHub\uc5d0\uc11c \uc694\uccad\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc7a5\uae30 \uc2e4\ud589 \uc778\uc2a4\ud134\uc2a4 \uad50\uccb4"},{"location":"scalability/docs/control-plane.kr/#_5","text":"--scale-down-utilization-threshold \ub97c \ud1b5\ud574 Kubernetes Cluster Autoscaler\uc758 \ucd95\uc18c \uc784\uacc4\uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc5c6\uc744 \ub54c \ub178\ub4dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 Karpenter\uc5d0\uc11c ttlSecondsAfterEmpty \ud504\ub85c\ube44\uc800\ub108 \uc124\uc815\uc744 \ud65c\uc6a9\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc \uc81c\uac70"},{"location":"scalability/docs/control-plane.kr/#pod-distruption-budgets","text":"Kubernetes \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uc81c\uac70\ud558\ub824\uba74 \ucee8\ud2b8\ub864\ub7ec\uac00 \uc5ec\ub7ec \ub9ac\uc18c\uc2a4(\uc608: EndpointSlices)\ub97c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc790\uc8fc \ub610\ub294 \ub108\ubb34 \ube60\ub974\uac8c \uc218\ud589\ud558\uba74 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \uc804\ud30c\ub418\uba74\uc11c API Server \uc4f0\ub85c\ud2c0\ub9c1 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc911\ub2e8\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod Distruption Budgets \uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub178\ub4dc\uac00 \uc81c\uac70\ub418\uac70\ub098 \uc2a4\ucf00\uc904\uc774 \uc870\uc815\ub420 \ub54c \ubcc0\ub3d9 \uc18d\ub3c4\ub97c \ub2a6\ucd94\uc5b4 \uc6cc\ud06c\ub85c\ub4dc \uac00\uc6a9\uc131\uc744 \ubcf4\ud638\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\uc785\ub2c8\ub2e4.","title":"Pod Distruption Budgets \ubc0f \uc548\uc804\ud55c \ub178\ub4dc \uc167\ub2e4\uc6b4 \uc0ac\uc6a9"},{"location":"scalability/docs/control-plane.kr/#kubectl","text":"kubectl \uba85\ub839\uc744 \ube44\ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 Kubernetes API Server\uc5d0 \ucd94\uac00 \ub85c\ub4dc\uac00 \ubc1c\uc0dd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl\uc744 \ubc18\ubcf5\uc801\uc73c\ub85c(\uc608: for \ub8e8\ud504\uc5d0\uc11c) \uc0ac\uc6a9\ud558\ub294 \uc2a4\ud06c\ub9bd\ud2b8\ub098 \uc790\ub3d9\ud654\ub97c \uc2e4\ud589\ud558\uac70\ub098 \ub85c\uceec \uce90\uc2dc \uc5c6\uc774 \uba85\ub839\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. kubectl \uc5d0\ub294 \ud544\uc694\ud55c API \ud638\ucd9c \uc591\uc744 \uc904\uc774\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uac80\uc0c9 \uc815\ubcf4\ub97c \uce90\uc2dc\ud558\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \uce90\uc2dc\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uce90\uc2dc\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\uba70 10\ubd84\ub9c8\ub2e4 \uc0c8\ub85c \uace0\uccd0\uc9d1\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub610\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \uce90\uc2dc \uc5c6\uc774 kubectl\uc744 \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 API \uc4f0\ub85c\ud2c0\ub9c1 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c API \ud638\ucd9c\uc744 \ud53c\ud558\uae30 \uc704\ud574 --cache-dir \uc744 \ub9c8\uc6b4\ud2b8\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \uce90\uc2dc\ub97c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"Kubectl \uc2e4\ud589 \uc2dc \ud074\ub77c\uc774\uc5b8\ud2b8\uce21 \uce90\uc2dc \uc0ac\uc6a9"},{"location":"scalability/docs/control-plane.kr/#kubectl-compression","text":"kubeconfig \ud30c\uc77c\uc5d0\uc11c kubectl compression\uc744 \ube44\ud65c\uc131\ud654\ud558\uba74 API \ubc0f \ud074\ub77c\uc774\uc5b8\ud2b8 CPU \uc0ac\uc6a9\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \uc11c\ubc84\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \uc804\uc1a1\ub41c \ub370\uc774\ud130\ub97c \uc555\ucd95\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \ub300\uc5ed\ud3ed\uc744 \ucd5c\uc801\ud654\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc694\uccad\ub9c8\ub2e4 \ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84\uc5d0 CPU \ubd80\ud558\uac00 \uac00\uc911\ub418\uba70, \ub300\uc5ed\ud3ed\uc774 \ucda9\ubd84\ud558\ub2e4\uba74 \uc555\ucd95\uc744 \ube44\ud65c\uc131\ud654\ud558\uba74 \uc624\ubc84\ud5e4\ub4dc\uc640 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc555\ucd95\uc744 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 kubeconfig \ud30c\uc77c\uc5d0\uc11c --disable-compression=true \ud50c\ub798\uadf8\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 disable-compression: true \ub85c \uc124\uc815\ud558\uba74 \ub429\ub2c8\ub2e4. apiVersion: v1 clusters: - cluster: server: serverURL disable-compression: true name: cluster","title":"kubectl Compression \ube44\ud65c\uc131\ud654"},{"location":"scalability/docs/control-plane.kr/#cluster-autoscaler","text":"Kubernetes Cluster Autoscaler\ub294 \ud14c\uc2a4\ud2b8\ub97c \uac70\ucce4\uc2b5\ub2c8\ub2e4 . \ucd5c\ub300 1,000\uac1c \ub178\ub4dc\uae4c\uc9c0 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1000\uac1c \uc774\uc0c1\uc758 \ub178\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 Cluster AutoScaler\ub97c \uc5ec\ub7ec \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc0e4\ub4dc \ubaa8\ub4dc\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uac01 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \uc778\uc2a4\ud134\uc2a4\ub294 \ub178\ub4dc \uadf8\ub8f9 \uc138\ud2b8\ub97c \ud655\uc7a5\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc608\ub294 \uac01 4\uac1c\uc758 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uad6c\uc131\ub41c 2\uac1c\uc758 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \uad6c\uc131\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. ClusterAutoscaler-1 autoscalingGroups: - name: eks-core-node-grp-20220823190924690000000011-80c1660e-030d-476d-cb0d-d04d585a8fcb maxSize: 50 minSize: 2 - name: eks-data_m1-20220824130553925600000011-5ec167fa-ca93-8ca4-53a5-003e1ed8d306 maxSize: 450 minSize: 2 - name: eks-data_m2-20220824130733258600000015-aac167fb-8bf7-429d-d032-e195af4e25f5 maxSize: 450 minSize: 2 - name: eks-data_m3-20220824130553914900000003-18c167fa-ca7f-23c9-0fea-f9edefbda002 maxSize: 450 minSize: 2 ClusterAutoscaler-2 autoscalingGroups: - name: eks-data_m4-2022082413055392550000000f-5ec167fa-ca86-6b83-ae9d-1e07ade3e7c4 maxSize: 450 minSize: 2 - name: eks-data_m5-20220824130744542100000017-02c167fb-a1f7-3d9e-a583-43b4975c050c maxSize: 450 minSize: 2 - name: eks-data_m6-2022082413055392430000000d-9cc167fa-ca94-132a-04ad-e43166cef41f maxSize: 450 minSize: 2 - name: eks-data_m7-20220824130553921000000009-96c167fa-ca91-d767-0427-91c879ddf5af maxSize: 450 minSize: 2","title":"Cluster Autoscaler \uc0e4\ub529"},{"location":"scalability/docs/control-plane.kr/#api-priority-and-fairness","text":"","title":"API Priority and Fairness"},{"location":"scalability/docs/control-plane.kr/#overview","text":"\uc694\uccad\uc774 \uc99d\uac00\ud558\ub294 \uae30\uac04 \ub3d9\uc548 \uacfc\ubd80\ud558\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubcf4\ud638\ud558\uae30 \uc704\ud574 API \uc11c\ubc84\ub294 \ud2b9\uc815 \uc2dc\uac04\uc5d0 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\ub97c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc774 \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 API \uc11c\ubc84\ub294 \uc694\uccad\uc744 \uac70\ubd80\ud558\uae30 \uc2dc\uc791\ud558\uace0 \"Too many requests\"\uc5d0 \ub300\ud55c 429 HTTP \uc751\ub2f5 \ucf54\ub4dc\ub97c \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc11c\ubc84\uac00 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ub098\uc911\uc5d0 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \uc694\uccad \uc218\uc5d0 \ub300\ud55c \uc11c\ubc84 \uce21 \uc81c\ud55c\uc744 \ub450\uc9c0 \uc54a\uace0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uacfc\ubd80\ud558\ub97c \uc8fc\uc5b4 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uac70\ub098 \uac00\uc6a9\uc131\uc774 \uc800\ud558\ub420 \uc218 \uc788\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc774 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615\uc73c\ub85c \ub098\ub204\uc5b4\uc9c0\ub294 \ubc29\uc2dd\uc744 \uad6c\uc131\ud558\uae30 \uc704\ud574 Kubernetes\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc744 API Priority and Fairness \uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. API \uc11c\ubc84\ub294 --max-requests-inflight \ubc0f --max-mutating-requests-inflight \ud50c\ub798\uadf8\ub85c \uc9c0\uc815\ub41c \uac12\uc744 \ud569\uc0b0\ud558\uc5ec \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 \ucd1d \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\ub97c \uad6c\uc131\ud569\ub2c8\ub2e4. EKS\ub294 \uc774\ub7ec\ud55c \ud50c\ub798\uadf8\uc5d0 \ub300\ud574 \uae30\ubcf8\uac12\uc778 400\uac1c \ubc0f 200\uac1c \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \uc8fc\uc5b4\uc9c4 \uc2dc\uac04\uc5d0 \ucd1d 600\uac1c\uc758 \uc694\uccad\uc744 \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. APF\ub294 \uc774\ub7ec\ud55c 600\uac1c\uc758 \uc694\uccad\uc744 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615\uc73c\ub85c \ub098\ub204\ub294 \ubc29\ubc95\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc740 \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd5c\uc18c 2\uac1c\uc758 API \uc11c\ubc84\uac00 \ub4f1\ub85d\ub418\uc5b4 \uc788\uc5b4 \uac00\uc6a9\uc131\uc774 \ub192\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc758 \ucd1d \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uac00 1200\uac1c\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4. PriorityLevelConfigurations \ubc0f FlowSchemas\ub77c\ub294 \ub450 \uc885\ub958\uc758 Kubernetes \uac1d\uccb4\ub294 \ucd1d \uc694\uccad \uc218\uac00 \ub2e4\uc591\ud55c \uc694\uccad \uc720\ud615 \uac04\uc5d0 \ubd84\ud560\ub418\ub294 \ubc29\uc2dd\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac1d\uccb4\ub294 API \uc11c\ubc84\uc5d0 \uc758\ud574 \uc790\ub3d9\uc73c\ub85c \uc720\uc9c0 \uad00\ub9ac\ub418\uba70 EKS\ub294 \uc9c0\uc815\ub41c Kubernetes \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 \uc774\ub7ec\ud55c \uac1d\uccb4\uc758 \uae30\ubcf8 \uad6c\uc131\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. PriorityLevelConfigurations\ub294 \ud5c8\uc6a9\ub41c \ucd1d \uc694\uccad \uc218\uc758 \uc77c\ubd80\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub192\uc740 PriorityLevelConfiguration\uc5d0\ub294 \ucd1d 600\uac1c\uc758 \uc694\uccad \uc911 98\uac1c\uac00 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ubaa8\ub4e0 PriorityLevelConfigurations\uc5d0 \ud560\ub2f9\ub41c \uc694\uccad\uc758 \ud569\uacc4\ub294 600\uc785\ub2c8\ub2e4(\ub610\ub294 \ud2b9\uc815 \uc218\uc900\uc774 \uc694\uccad\uc758 \uc77c\ubd80\ub9cc \ud5c8\uc6a9\ub41c \uacbd\uc6b0 API Server\uac00 \ubc18\uc62c\ub9bc\ud558\ubbc0\ub85c 600\ubcf4\ub2e4 \uc57d\uac04 \ub192\uc74c). \ud074\ub7ec\uc2a4\ud130\uc758 PriorityLevelConfigurations\uc640 \uac01\uac01\uc5d0 \ud560\ub2f9\ub41c \uc694\uccad \uc218\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS 1.24\uc758 \uae30\ubcf8\uac12\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. $ kubectl get --raw /metrics | grep apiserver_flowcontrol_request_concurrency_limit apiserver_flowcontrol_request_concurrency_limit{priority_level=\"catch-all\"} 13 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"global-default\"} 49 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"leader-election\"} 25 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"node-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"system\"} 74 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 \ub450 \ubc88\uc9f8 \uc720\ud615\uc758 \uac1d\uccb4\ub294 FlowSchemas\uc785\ub2c8\ub2e4. \ud2b9\uc815 \uc18d\uc131 \uc138\ud2b8\uac00 \ud3ec\ud568\ub41c API \uc11c\ubc84 \uc694\uccad\uc740 \ub3d9\uc77c\ud55c FlowSchema\ub85c \ubd84\ub958\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc18d\uc131\uc5d0\ub294 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\ub098 API Group, namespace \ub610\ub294 resource\uc640 \uac19\uc740 \uc694\uccad\uc758 \uc18d\uc131\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. FlowSchema\ub294 \ub610\ud55c \uc774 \uc720\ud615\uc758 \uc694\uccad\uc774 \ub9e4\ud551\ub418\uc5b4\uc57c \ud558\ub294 PriorityLevelConfiguration\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \ub450 \uac1c\uccb4\ub294 \ud568\uaed8 \"\uc774 \uc720\ud615\uc758 \uc694\uccad\uc774 \uc774 inflight \uc694\uccad \ube44\uc728\uc5d0 \ud3ec\ud568\ub418\uae30\ub97c \uc6d0\ud569\ub2c8\ub2e4.\"\ub77c\uace0 \ub9d0\ud569\ub2c8\ub2e4. \uc694\uccad\uc774 API Server\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ubaa8\ub4e0 \ud544\uc218 \uc18d\uc131\uacfc \uc77c\uce58\ud558\ub294 FlowSchemas\ub97c \ucc3e\uc744 \ub54c\uae4c\uc9c0 \uac01 FlowSchemas\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \uc5ec\ub7ec FlowSchemas\uac00 \uc694\uccad\uacfc \uc77c\uce58\ud558\ub294 \uacbd\uc6b0 API Server\ub294 \uac1c\uccb4\uc758 \uc18d\uc131\uc73c\ub85c \uc9c0\uc815\ub41c \uc77c\uce58 \uc6b0\uc120 \uc21c\uc704\uac00 \uac00\uc7a5 \uc791\uc740 FlowSchema\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. FlowSchemas\uc640 PriorityLevelConfigurations\uc758 \ub9e4\ud551\uc740 \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. $ kubectl get flowschemas NAME PRIORITYLEVEL MATCHINGPRECEDENCE DISTINGUISHERMETHOD AGE MISSINGPL exempt exempt 1 <none> 3d False probes exempt 2 <none> 3d False system-leader-election leader-election 100 ByUser 3d False endpoint-controller workload-high 150 ByUser 3d False workload-leader-election leader-election 200 ByUser 3d False system-node-high node-high 400 ByUser 3d False system-nodes system 500 ByUser 3d False kube-controller-manager workload-high 800 ByNamespace 3d False kube-scheduler workload-high 800 ByNamespace 3d False kube-system-service-accounts workload-high 900 ByNamespace 3d False service-accounts workload-low 9000 ByUser 3d False global-default global-default 9900 ByUser 3d False catch-all catch-all 10000 ByUser 3d False PriorityLevelConfigurations\uc5d0\ub294 Queue, Reject \ub610\ub294 Exempt \uc720\ud615\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Queue \ubc0f Reject \uc720\ud615\uc758 \uacbd\uc6b0 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc5d0 \ub300\ud55c \ucd5c\ub300 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uc5d0 \uc81c\ud55c\uc774 \uc801\uc6a9\ub418\uc9c0\ub9cc \ud574\ub2f9 \uc81c\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ub3d9\uc791\uc774 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub192\uc740 PriorityLevelConfiguration\uc740 Queue \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uba70 Controller Manager, Endpoint Controller, Scheduler \ubc0f kube-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud30c\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc694\uccad\uc774 98\uac1c \uc788\uc2b5\ub2c8\ub2e4. Queue \uc720\ud615\uc774 \uc0ac\uc6a9\ub418\ubbc0\ub85c API Server\ub294 \uc694\uccad\uc744 \uba54\ubaa8\ub9ac\uc5d0 \uc720\uc9c0\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uba70 \uc774\ub7ec\ud55c \uc694\uccad\uc774 \uc2dc\uac04 \ucd08\uacfc\ub418\uae30 \uc804\uc5d0 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc218\uac00 98\uac1c \ubbf8\ub9cc\uc73c\ub85c \ub5a8\uc5b4\uc9c0\uae30\ub97c \ud76c\ub9dd\ud569\ub2c8\ub2e4. \ud2b9\uc815 \uc694\uccad\uc774 \ub300\uae30\uc5f4\uc5d0\uc11c \uc2dc\uac04 \ucd08\uacfc\ub418\uac70\ub098 \ub108\ubb34 \ub9ce\uc740 \uc694\uccad\uc774 \uc774\ubbf8 \ub300\uae30\uc5f4\uc5d0 \uc788\ub294 \uacbd\uc6b0 API Server\ub294 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 429\ub97c \ubc18\ud658\ud560 \uc218\ubc16\uc5d0 \uc5c6\uc2b5\ub2c8\ub2e4. \ub300\uae30\uc5f4\uc5d0 \uc788\uc73c\uba74 \uc694\uccad\uc774 429\ub97c \uc218\uc2e0\ud558\uc9c0 \ubabb\ud560 \uc218 \uc788\uc9c0\ub9cc \uc694\uccad\uc758 \uc885\ub2e8 \uac04 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ub298\uc5b4\ub098\ub294 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c Reject \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\uad04\uc801\uc778 PriorityLevelConfiguration\uc5d0 \ub9e4\ud551\ub418\ub294 \ud3ec\uad04\uc801\uc778 FlowSchema\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 13\uac1c\uc758 \uc9c4\ud589 \uc911\uc778 \uc694\uccad \uc81c\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 API Server\ub294 \ub300\uae30\uc5f4\uc744 \uc2e4\ud589\ud558\uc9c0 \uc54a\uace0 429 \uc751\ub2f5 \ucf54\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad\uc744 \uc989\uc2dc \uc0ad\uc81c\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c Exempt \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uc5ec PriorityLevelConfiguration\uc5d0 \ub9e4\ud551\ud558\ub294 \uc694\uccad\uc740 429\ub97c \uc218\uc2e0\ud558\uc9c0 \uc54a\uc73c\uba70 \ud56d\uc0c1 \uc989\uc2dc \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc774\ub294 healthz \uc694\uccad\uc774\ub098 system:masters \uadf8\ub8f9\uc5d0\uc11c \uc624\ub294 \uc694\uccad\uacfc \uac19\uc740 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \uc694\uccad\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"Overview"},{"location":"scalability/docs/control-plane.kr/#apf","text":"APF\ub85c \uc778\ud574 \uc0ad\uc81c\ub41c \uc694\uccad\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 apiserver_flowcontrol_rejected_requests_total \uc5d0 \ub300\ud55c API Server \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec \uc601\ud5a5\uc744 \ubc1b\uc740 FlowSchemas \ubc0f PriorityLevelConfigurations\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc774 \uc9c0\ud45c\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub0ae\uc740 \ub300\uae30\uc5f4\uc758 \uc694\uccad \uc2dc\uac04 \ucd08\uacfc\ub85c \uc778\ud574 service account FlowSchema\uc758 \uc694\uccad 100\uac1c\uac00 \uc0ad\uc81c\ub418\uc5c8\uc74c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. % kubectl get --raw /metrics | grep apiserver_flowcontrol_rejected_requests_total apiserver_flowcontrol_rejected_requests_total{flow_schema=\"service-accounts\",priority_level=\"workload-low\",reason=\"time-out\"} 100 \uc9c0\uc815\ub41c PriorityLevelConfiguration\uc774 429\ub97c \uc218\uc2e0\ud558\uac70\ub098 \ud050\ub85c \uc778\ud574 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \uc99d\uac00\ud558\ub294 \uc815\ub3c4\ub97c \ud655\uc778\ud558\ub824\uba74 \ub3d9\uc2dc\uc131 \uc81c\ud55c\uacfc \uc0ac\uc6a9 \uc911\uc778 \ub3d9\uc2dc\uc131\uc758 \ucc28\uc774\ub97c \ube44\uad50\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc608\uc5d0\ub294 100\uac1c\uc758 \uc694\uccad \ubc84\ud37c\uac00 \uc788\uc2b5\ub2c8\ub2e4. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_limit.*workload-low' apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_in_use.*workload-low' apiserver_flowcontrol_request_concurrency_in_use{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 145 \ud2b9\uc815 PriorityLevelConfiguration\uc5d0\uc11c \ub300\uae30\uc5f4\uc774 \ubc1c\uc0dd\ud558\uc9c0\ub9cc \ubc18\ub4dc\uc2dc \uc694\uccad\uc774 \uc0ad\uc81c\ub418\ub294 \uac83\uc740 \uc544\ub2cc\uc9c0 \ud655\uc778\ud558\ub824\uba74 apiserver_flowcontrol_current_inqueue_requests \uc5d0 \ub300\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_current_inqueue_requests.*workload-low' apiserver_flowcontrol_current_inqueue_requests{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 10 \uae30\ud0c0 \uc720\uc6a9\ud55c Prometheus \uce21\uc815\ud56d\ubaa9\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4: apiserver_flowcontrol_dispatched_requests_total apiserver_flowcontrol_request_execution_seconds apiserver_flowcontrol_request_wait_duration_seconds APF \uc9c0\ud45c \uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 \uc5c5\uc2a4\ud2b8\ub9bc \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"APF \ubc0f \uc0ad\uc81c\ub41c \uc694\uccad \ubaa8\ub2c8\ud130\ub9c1"},{"location":"scalability/docs/control-plane.kr/#_6","text":"","title":"\uc0ad\uc81c\ub41c \uc694\uccad \ubc29\uc9c0"},{"location":"scalability/docs/control-plane.kr/#429","text":"APF\uac00 \ud5c8\uc6a9\ub41c \ucd5c\ub300 \ub0b4\ubd80 \uc694\uccad \uc218\ub97c \ucd08\uacfc\ud558\ub294 \uc9c0\uc815\ub41c PriorityLevelConfiguration\uc73c\ub85c \uc778\ud574 \uc694\uccad\uc744 \uc0ad\uc81c\ud558\ub294 \uacbd\uc6b0 \uc601\ud5a5\uc744 \ubc1b\ub294 FlowSchemas\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uc9c0\uc815\ub41c \uc2dc\uac04\uc5d0 \uc2e4\ud589\ub418\ub294 \uc694\uccad \uc218\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 429\uac00 \ubc1c\uc0dd\ud558\ub294 \uae30\uac04 \ub3d9\uc548 \uc774\ub8e8\uc5b4\uc9c4 \ucd1d \uc694\uccad \uc218\ub97c \uc904\uc784\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ubaa9\ub85d \ud638\ucd9c\uacfc \uac19\uc740 \uc7a5\uae30 \uc2e4\ud589 \uc694\uccad\uc740 \uc2e4\ud589\ub418\ub294 \uc804\uccb4 \uae30\uac04 \ub3d9\uc548 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc73c\ub85c \uacc4\uc0b0\ub418\uae30 \ub54c\ubb38\uc5d0 \ud2b9\ud788 \ubb38\uc81c\uac00 \ub429\ub2c8\ub2e4. \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc694\uccad \uc218\ub97c \uc904\uc774\uac70\ub098 \ubaa9\ub85d \ud638\ucd9c\uc758 \ub300\uae30 \uc2dc\uac04\uc744 \ucd5c\uc801\ud654\ud558\uba74(\uc608: \uc694\uccad \ub2f9 \uac00\uc838\uc624\ub294 \uac1d\uccb4 \uc218\ub97c \uc904\uc774\uac70\ub098 watch \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc804\ud658) \ud574\ub2f9 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ucd1d \ub3d9\uc2dc\uc131\uc744 \uc904\uc774\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcc0\uacbd\ud558\uc5ec 429\ub97c \ubc29\uc9c0"},{"location":"scalability/docs/control-plane.kr/#apf-429","text":"\uacbd\uace0 \uc218\ud589 \uc911\uc778 \uc791\uc5c5\uc744 \uc54c\uace0 \uc788\ub294 \uacbd\uc6b0\uc5d0\ub9cc \uae30\ubcf8 APF \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. APF \uc124\uc815\uc774 \uc798\ubabb \uad6c\uc131\ub418\uba74 API Server \uc694\uccad\uc774 \uc911\ub2e8\ub418\uace0 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud06c\uac8c \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \uc0ad\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud55c \ub610 \ub2e4\ub978 \uc811\uadfc \ubc29\uc2dd\uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc124\uce58\ub41c \uae30\ubcf8 FlowSchemas \ub610\ub294 PriorityLevelConfigurations\ub97c \ubcc0\uacbd\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. EKS\ub294 \uc9c0\uc815\ub41c Kubernetes \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud55c FlowSchemas \ubc0f PriorityLevelConfigurations\uc758 \uc5c5\uc2a4\ud2b8\ub9bc \uae30\ubcf8 \uc124\uc815\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. API\ub294 \uac1d\uccb4\uc5d0 \ub300\ud55c \ub2e4\uc74c \uc8fc\uc11d\uc774 false\ub85c \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \ud55c \uc774\ub7ec\ud55c \uac1d\uccb4\ub97c \uae30\ubcf8\uac12\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \ub2e4\uc2dc \uc870\uc815\ud569\ub2c8\ub2e4. metadata: annotations: apf.kubernetes.io/autoupdate-spec: \"false\" \ub192\uc740 \uc218\uc900\uc5d0\uc11c APF \uc124\uc815\uc740 \ub2e4\uc74c \uc911 \ud558\ub098\ub85c \uc218\uc815\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\uc2ec \uc788\ub294 \uc694\uccad\uc5d0 \ub354 \ub9ce\uc740 \uae30\ub0b4 \uc218\uc6a9 \ub2a5\ub825\uc744 \ud560\ub2f9\ud558\uc138\uc694. \ub2e4\ub978 \uc694\uccad \uc720\ud615\uc5d0 \ub300\ud55c \uc6a9\ub7c9\uc774 \ubd80\uc871\ud560 \uc218 \uc788\ub294 \ube44\ud544\uc218\uc801\uc774\uac70\ub098 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc694\uccad\uc744 \uaca9\ub9ac\ud569\ub2c8\ub2e4. \uc774\ub294 \uae30\ubcf8 FlowSchemas \ubc0f PriorityLevelConfigurations\ub97c \ubcc0\uacbd\ud558\uac70\ub098 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc0c8 \uac1c\uccb4\ub97c \uc0dd\uc131\ud558\uc5ec \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\ub294 \uad00\ub828 PriorityLevelConfigurations \uac1c\uccb4\uc5d0 \ub300\ud55c authenticateConcurrencyShares \uac12\uc744 \ub298\ub824 \ud560\ub2f9\ub418\ub294 \uc9c4\ud589 \uc911 \uc694\uccad \ube44\uc728\uc744 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc694\uccad\uc774 \ubc1c\uc1a1\ub418\uae30 \uc804\uc5d0 \ub300\uae30\uc5f4\uc5d0 \ucd94\uac00\ub418\uc5b4 \ubc1c\uc0dd\ud558\ub294 \ucd94\uac00 \ub300\uae30 \uc2dc\uac04\uc744 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \ud2b9\uc815 \uc2dc\uac04\uc5d0 \ub300\uae30\uc5f4\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\ub294 \uc694\uccad \uc218\ub3c4 \ub298\uc5b4\ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \uace0\uac1d\uc758 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub9de\ub294 \uc0c8\ub85c\uc6b4 FlowSchema \ubc0f PriorityLevelConfigurations \uac1c\uccb4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\uc874 PriorityLevelConfigurations \ub610\ub294 \uc0c8\ub85c\uc6b4 PriorityLevelConfigurations\uc5d0 \ub354 \ub9ce\uc740 secureConcurrencyShares\ub97c \ud560\ub2f9\ud558\uba74 \uc804\uccb4 \ud55c\ub3c4\uac00 API Server \ub2f9 600\uac1c\ub85c \uc720\uc9c0\ub418\ubbc0\ub85c \ub2e4\ub978 \ubc84\ud0b7\uc5d0\uc11c \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uc694\uccad \uc218\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. APF \uae30\ubcf8\uac12\uc744 \ubcc0\uacbd\ud560 \ub54c \uc124\uc815 \ubcc0\uacbd\uc73c\ub85c \uc778\ud574 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 429\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ube44\ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub7ec\ud55c \uce21\uc815\ud56d\ubaa9\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc84\ud0b7\uc774 \uc694\uccad \uc0ad\uc81c\ub97c \uc2dc\uc791\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubaa8\ub4e0 FlowSchemas\uc5d0 \ub300\ud574 apiserver_flowcontrol_rejected_requests_total \uc5d0 \ub300\ud55c \uce21\uc815 \uc9c0\ud45c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. apiserver_flowcontrol_request_concurrency_limit \ubc0f apiserver_flowcontrol_request_concurrency_in_use \uac12\uc744 \ube44\uad50\ud558\uc5ec \uc0ac\uc6a9 \uc911\uc778 \ub3d9\uc2dc\uc131\uc774 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc758 \uc81c\ud55c\uc744 \uc704\ubc18\ud560 \uc704\ud5d8\uc774 \uc5c6\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 FlowSchema \ubc0f PriorityLevelConfiguration\uc744 \uc815\uc758\ud558\ub294 \uc77c\ubc18\uc801\uc778 \uc0ac\uc6a9 \uc0ac\ub840 \uc911 \ud558\ub098\ub294 \uaca9\ub9ac\uc785\ub2c8\ub2e4. Pod\uc5d0\uc11c \uc7a5\uae30 \uc2e4\ud589 \ubaa9\ub85d \uc774\ubca4\ud2b8 \ud638\ucd9c\uc744 \uc790\uccb4 \uc694\uccad \uacf5\uc720\ub85c \ubd84\ub9ac\ud55c\ub2e4\uace0 \uac00\uc815\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uae30\uc874 \uc11c\ube44\uc2a4 \uacc4\uc815 FlowSchema\ub97c \uc0ac\uc6a9\ud558\ub294 \ud30c\ub4dc\uc758 \uc911\uc694\ud55c \uc694\uccad\uc774 429\ub97c \uc218\uc2e0\ud558\uc5ec \uc694\uccad \uc6a9\ub7c9\uc774 \ubd80\uc871\ud574\uc9c0\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c4\ud589 \uc911\uc778 \uc694\uccad\uc758 \ucd1d \uac1c\uc218\ub294 \uc720\ud55c\ud558\uc9c0\ub9cc \uc774 \uc608\uc5d0\uc11c\ub294 APF \uc124\uc815\uc744 \uc218\uc815\ud558\uc5ec \uc9c0\uc815\ub41c \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \uc694\uccad \uc6a9\ub7c9\uc744 \ub354 \uc798 \ub098\ub20c \uc218 \uc788\uc74c\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. List \uc774\ubca4\ud2b8 \uc694\uccad\uc744 \ubd84\ub9ac\ud558\uae30 \uc704\ud55c FlowSchema \uac1d\uccb4\uc758 \uc608: apiVersion: flowcontrol.apiserver.k8s.io/v1beta1 kind: FlowSchema metadata: name: list-events-default-service-accounts spec: distinguisherMethod: type: ByUser matchingPrecedence: 8000 priorityLevelConfiguration: name: catch-all rules: - resourceRules: - apiGroups: - '*' namespaces: - default resources: - events verbs: - list subjects: - kind: ServiceAccount serviceAccount: name: default namespace: default \uc774 FlowSchema\ub294 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 Service Account\uc5d0\uc11c \uc218\ud589\ub41c \ubaa8\ub4e0 List \uc774\ubca4\ud2b8 \ud638\ucd9c\uc744 \ucea1\ucc98\ud569\ub2c8\ub2e4. \uc77c\uce58 \uc6b0\uc120 \uc21c\uc704 8000\uc740 \uae30\uc874 Service Account FlowSchema\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uac12 9000\ubcf4\ub2e4 \ub0ae\uc73c\ubbc0\ub85c \uc774\ub7ec\ud55c List \uc774\ubca4\ud2b8 \ud638\ucd9c\uc740 Service Account\uac00 \uc544\ub2cc list-events-default-service-account\uc640 \uc77c\uce58\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc694\uccad\uc744 \uaca9\ub9ac\ud558\uae30 \uc704\ud574 \ud3ec\uad04\uc801\uc778 PriorityLevelConfiguration\uc744 \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc84\ud0b7\uc740 \uc7a5\uae30 \uc2e4\ud589\ub418\ub294 list \uc774\ubca4\ud2b8 \ud638\ucd9c\uc5d0\uc11c 13\uac1c\uc758 \uc9c4\ud589 \uc911\uc778 \uc694\uccad\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud30c\ub4dc\ub294 \ub3d9\uc2dc\uc5d0 13\uac1c \uc774\uc0c1\uc758 \uc694\uccad\uc744 \ubc1c\ud589\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uc9c0\ub9cc \uc989\uc2dc 429\ub97c \uc751\ub2f5\ubc1b\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4.","title":"APF \uc124\uc815\uc744 \ubcc0\uacbd\ud558\uc5ec 429\ub97c \ubc29\uc9c0"},{"location":"scalability/docs/control-plane.kr/#api-server","text":"API Server\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc624\ub294 \uac83\uc740 \ubaa8\ub4e0 \uaddc\ubaa8\uc758 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc608\uc0c1\ub418\ub294 \ub3d9\uc791\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4 \uc218\ub97c \ud655\uc7a5\ud558\uba74 \uc694\uccad \ube48\ub3c4\uc640 \ub370\uc774\ud130 \ubcfc\ub968\uc774 \ube60\ub974\uac8c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ub418\uc5b4 API \uc4f0\ub85c\ud2c0\ub9c1 \ubc0f \uc18d\ub3c4 \uc800\ud558\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc2ec\uac01\ub3c4\uc5d0 \ub530\ub77c \uc8fc\uc758\ud558\uc9c0 \uc54a\uc73c\uba74 \uc608\uc0c1\uce58 \ubabb\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud55c \uccab \ubc88\uc9f8 \ub2e8\uacc4\ub294 \ubb34\uc5c7\uc744 \uc694\uccad\ud558\uace0 \uc5bc\ub9c8\ub098 \uc790\uc8fc \uc694\uccad\ud558\ub294\uc9c0 \ud30c\uc545\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \uaddc\ubaa8 \uc870\uc815 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c \ucffc\ub9ac \uc591\uc744 \uc81c\ud55c\ud558\ub294 \uc9c0\uce68\uc785\ub2c8\ub2e4. \uc774 \uc139\uc158\uc758 \uc81c\uc548 \uc0ac\ud56d\uc740 \ud655\uc7a5\uc131\uc774 \uac00\uc7a5 \uc88b\uc740 \uac83\uc73c\ub85c \uc54c\ub824\uc9c4 \uc635\uc158\ubd80\ud130 \uc21c\uc11c\ub300\ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"API Server\uc5d0\uc11c \ub9ac\uc18c\uc2a4 \uac80\uc0c9"},{"location":"scalability/docs/control-plane.kr/#shared-informers","text":"Kubernetes API\uc640 \ud1b5\ud569\ub418\ub294 \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc790\ub3d9\ud654\ub97c \uad6c\ucd95\ud560 \ub54c Kubernetes \ub9ac\uc18c\uc2a4\uc5d0\uc11c \uc815\ubcf4\ub97c \uac00\uc838\uc640\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\ub97c \uc815\uae30\uc801\uc73c\ub85c \ud3f4\ub9c1\ud558\uba74 API Server\uc5d0 \uc0c1\ub2f9\ud55c \ubd80\ud558\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. client-go \ub77c\uc774\ube0c\ub7ec\ub9ac\uc758 informer \ub97c \uc0ac\uc6a9\ud558\uba74 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud3f4\ub9c1\ud558\ub294 \ub300\uc2e0 \uc774\ubca4\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ub9ac\uc18c\uc2a4\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uad00\ucc30\ud560 \uc218 \uc788\ub2e4\ub294 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. Shared Informer\ub294 \uc774\ubca4\ud2b8 \ubc0f \ubcc0\uacbd \uc0ac\ud56d\uc5d0 \uacf5\uc720 \uce90\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubd80\ud558\ub97c \ub354\uc6b1 \uc904\uc774\ubbc0\ub85c \ub3d9\uc77c\ud55c \ub9ac\uc18c\uc2a4\ub97c \uac10\uc2dc\ud558\ub294 \uc5ec\ub7ec \ucee8\ud2b8\ub864\ub7ec\ub85c \uc778\ud574 \ucd94\uac00 \ubd80\ud558\uac00 \uac00\uc911\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub294 \ud2b9\ud788 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0 label \ubc0f field selectors \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \ub9ac\uc18c\uc2a4\ub97c \ud3f4\ub9c1\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \ud544\ud130\ub9c1\ub418\uc9c0 \uc54a\uc740 \uac01 \ud3f4\ub9c1\uc5d0\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \ud544\ud130\ub9c1\ud558\uae30 \uc704\ud574 etcd\uc5d0\uc11c API Server\ub97c \ud1b5\ud574 \ub9ce\uc740 \uc591\uc758 \ubd88\ud544\uc694\ud55c \ub370\uc774\ud130\ub97c \uc804\uc1a1\ud574\uc57c \ud569\ub2c8\ub2e4. \ub808\uc774\ube14\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \ud544\ud130\ub9c1\ud558\uba74 API \uc11c\ubc84\uac00 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc804\uc1a1\ub418\ub294 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \uc218\ud589\ud574\uc57c \ud558\ub294 \uc791\uc5c5\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Shared Informers \uc0ac\uc6a9"},{"location":"scalability/docs/control-plane.kr/#kubernetes-api","text":"\uc0ac\uc6a9\uc790 \uc815\uc758 \ucee8\ud2b8\ub864\ub7ec \ub610\ub294 \uc790\ub3d9\ud654\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes API\ub97c \ud638\ucd9c\ud560 \ub54c \ud544\uc694\ud55c \ub9ac\uc18c\uc2a4\ub85c\ub9cc \ud638\ucd9c\uc744 \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc81c\ud55c\uc774 \uc5c6\uc73c\uba74 API Server \ubc0f etcd\uc5d0 \ubd88\ud544\uc694\ud55c \ub85c\ub4dc\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 watch \uc778\uc790\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc778\uc790\uac00 \uc5c6\uc73c\uba74 \uae30\ubcf8 \ub3d9\uc791\uc740 \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. list \ub300\uc2e0 watch\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 API \uc694\uccad \ub05d\uc5d0 ?watch=true \ub97c \ucd94\uac00\ud558\uba74 \ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 watch\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 Pod\ub97c \uac00\uc838\uc624\ub824\uba74 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc138\uc694. /api/v1/namespaces/default/pods?watch=true \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uacbd\uc6b0 \ub098\uc5f4\ud558\ub294 \ud56d\ubaa9\uc758 \ubc94\uc704\uc640 \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc694\uccad\uc5d0 limit=500 \uc778\uc218\ub97c \ucd94\uac00\ud558\uc5ec \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fieldSelector \uc778\uc218\uc640 /namespace/ \uacbd\ub85c\ub294 \ubaa9\ub85d\uc758 \ubc94\uc704\ub97c \ud544\uc694\uc5d0 \ub530\ub77c \uc881\uac8c \uc9c0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 Pod\ub9cc \ub098\uc5f4\ud558\ub824\uba74 \ub2e4\uc74c API \uacbd\ub85c\uc640 \uc778\uc218\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. /api/v1/namespaces/default/pods?fieldSelector=status.phase=Running&limit=500 \uac1d\uccb4\ub97c \ub098\uc5f4\ud558\ub294 \uacbd\uc6b0 \ub098\uc5f4\ud558\ub294 \ud56d\ubaa9\uc758 \ubc94\uc704\uc640 \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\uc758 \uc591\uc744 \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4. \uc694\uccad\uc5d0 limit=500 \uc778\uc790\ub97c \ucd94\uac00\ud558\uc5ec \ubc18\ud658\ub418\ub294 \ub370\uc774\ud130\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fieldSelector \uc778\uc790\uc640 /namespace/ \uacbd\ub85c\ub294 \ubaa9\ub85d\uc758 \ubc94\uc704\ub97c \ud544\uc694\uc5d0 \ub530\ub77c \uc791\uac8c \uc9c0\uc815\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 Pod\ub9cc \ub098\uc5f4\ud558\ub824\uba74 \ub2e4\uc74c API \uacbd\ub85c\uc640 \uc778\uc790\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub610\ub294 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. /api/v1/pods?fieldSelector=status.phase=Running&limit=500 \ub098\uc5f4\ub41c \uc624\ube0c\uc81d\ud2b8\ub97c \uc81c\ud55c\ud558\ub294 \ub610 \ub2e4\ub978 \uc635\uc158\uc740 ResourceVersions (\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc124\uba85\uc11c \ucc38\uc870) \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 \uc785\ub2c8\ub2e4. ResourceVersion \uc778\uc790\uac00 \uc5c6\uc73c\uba74 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 \ubc84\uc804\uc744 \ubc1b\uac8c \ub418\uba70, \uc774 \uacbd\uc6b0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc5d0\uc11c \uac00\uc7a5 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uac00\uc7a5 \ub290\ub9b0 etcd \ucffc\ub7fc \uc77d\uae30\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. resourceVersion\uc740 \ucffc\ub9ac\ud558\ub824\ub294 \ub9ac\uc18c\uc2a4\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c0\uba70, Metadata.Resourceversion \ud544\ub4dc\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API Server \uce90\uc2dc\uc5d0\uc11c \uacb0\uacfc\ub97c \ubc18\ud658\ud558\ub294 \ud2b9\ubcc4\ud55c ResourceVersion=0 \uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 etcd \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc9c0\ub9cc Pagination\uc740 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. /api/v1/namespaces/default/pods?resourceVersion=0 \uc778\uc790 \uc5c6\uc774 API\ub97c \ud638\ucd9c\ud558\uba74 API Server \ubc0f etcd\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uac00\uc7a5 \ub9ce\uc774 \uc0ac\uc6a9\ud558\uac8c \ub429\ub2c8\ub2e4.\uc774 \ud638\ucd9c\uc744 \uc0ac\uc6a9\ud558\uba74 Pagination\uc774\ub098 \ubc94\uc704 \uc81c\ud55c \uc5c6\uc774 \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud30c\ub4dc\ub97c \uac00\uc838\uc624\uace0 etcd\uc5d0\uc11c \ucffc\ub7fc\uc744 \uc77d\uc5b4\uc57c \ud569\ub2c8\ub2e4. /api/v1/pods","title":"Kubernetes API \uc0ac\uc6a9 \ucd5c\uc801\ud654"},{"location":"scalability/docs/control-plane/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Kubernetes Control Plane \u00b6 The Kubernetes control plane consists of the Kubernetes API Server, Kubernetes Controller Manager, Scheduler and other components that are required for Kubernetes to function. Scalability limits of these components are different depending on what you\u2019re running in the cluster, but the areas with the biggest impact to scaling include the Kubernetes version, utilization, and individual Node scaling. Use EKS 1.24 or above \u00b6 EKS 1.24 introduced a number of changes and switches the container runtime to containerd instead of docker. Containerd helps clusters scale by increasing individual node performance by limiting container runtime features to closely align with Kubernetes\u2019 needs. Containerd is available in every supported version of EKS and if you would like to switch to containerd in versions prior to 1.24 please use the --container-runtime bootstrap flag . Limit workload and node bursting \u00b6 Attention To avoid reaching API limits on the control plane you should limit scaling spikes that increase cluster size by double digit percentages at a time (e.g. 1000 nodes to 1100 nodes or 4000 to 4500 pods at once). The EKS control plane will automatically scale as your cluster grows, but there are limits on how fast it will scale. When you first create an EKS cluster the Control Plane will not immediately be able to scale to hundreds of nodes or thousands of pods. To read more about how EKS has made scaling improvements see this blog post . Scaling large applications requires infrastructure to adapt to become fully ready (e.g. warming load balancers). To control the speed of scaling make sure you are scaling based on the right metrics for your application. CPU and memory scaling may not accurately predict your application constraints and using custom metrics (e.g. requests per second) in Kubernetes Horizontal Pod Autoscaler (HPA) may be a better scaling option. To use a custom metric see the examples in the Kubernetes documentation . If you have more advanced scaling needs or need to scale based on external sources (e.g. AWS SQS queue) then use KEDA for event based workload scaling. Scale nodes and pods down safely \u00b6 Replace long running instances \u00b6 Replacing nodes regularly keeps your cluster healthy by avoiding configuration drift and issues that only happen after extended uptime (e.g. slow memory leaks). Automated replacement will give you good process and practices for node upgrades and security patching. If every node in your cluster is replaced regularly then there is less toil required to maintain separate processes for ongoing maintenance. Use Karpenter\u2019s time to live (TTL) settings to replace instances after they\u2019ve been running for a specified amount of time. Self managed node groups can use the max-instance-lifetime setting to cycle nodes automatically. Managed node groups do not currently have this feature but you can track the request here on GitHub . Remove underutilized nodes \u00b6 You can remove nodes when they have no running workloads using the scale down threshold in the Kubernetes Cluster Autoscaler with the --scale-down-utilization-threshold or in Karpenter you can use the ttlSecondsAfterEmpty provisioner setting. Use pod disruption budgets and safe node shutdown \u00b6 Removing pods and nodes from a Kubernetes cluster requires controllers to make updates to multiple resources (e.g. EndpointSlices). Doing this frequently or too quickly can cause API server throttling and application outages as changes propogate to controllers. Pod Disruption Budgets are a best practice to slow down churn to protect workload availability as nodes are removed or rescheduled in a cluster. Use Client-Side Cache when running Kubectl \u00b6 Using the kubectl command inefficiently can add additional load to the Kubernetes API Server. You should avoid running scripts or automation that uses kubectl repeatedly (e.g. in a for loop) or running commands without a local cache. kubectl has a client-side cache that caches discovery information from the cluster to reduce the amount of API calls required. The cache is enabled by default and is refreshed every 10 minutes. If you run kubectl from a container or without a client-side cache you may run into API throttling issues. It is recommended to retain your cluster cache by mounting the --cache-dir to avoid making uncessesary API calls. Disable kubectl Compression \u00b6 Disabling kubectl compression in your kubeconfig file can reduce API and client CPU usage. By default the server will compress data sent to the client to optimize network bandwidth. This adds CPU load on the client and server for every request and disabling compression can reduce the overhead and latency if you have adequate bandwidth. To disable compression you can use the --disable-compression=true flag or set disable-compression: true in your kubeconfig file. apiVersion: v1 clusters: - cluster: server: serverURL disable-compression: true name: cluster Shard Cluster Autoscaler \u00b6 The Kubernetes Cluster Autoscaler has been tested to scale up to 1000 nodes. On a large cluster with more than 1000 nodes, it is recommended to run multiple instances of the Cluster Autoscaler in shard mode. Each Cluster Autoscaler instance is configured to scale a set of node groups. The following example shows 2 cluster autoscaling configurations that are configured to each scale 4 node groups. ClusterAutoscaler-1 autoscalingGroups: - name: eks-core-node-grp-20220823190924690000000011-80c1660e-030d-476d-cb0d-d04d585a8fcb maxSize: 50 minSize: 2 - name: eks-data_m1-20220824130553925600000011-5ec167fa-ca93-8ca4-53a5-003e1ed8d306 maxSize: 450 minSize: 2 - name: eks-data_m2-20220824130733258600000015-aac167fb-8bf7-429d-d032-e195af4e25f5 maxSize: 450 minSize: 2 - name: eks-data_m3-20220824130553914900000003-18c167fa-ca7f-23c9-0fea-f9edefbda002 maxSize: 450 minSize: 2 ClusterAutoscaler-2 autoscalingGroups: - name: eks-data_m4-2022082413055392550000000f-5ec167fa-ca86-6b83-ae9d-1e07ade3e7c4 maxSize: 450 minSize: 2 - name: eks-data_m5-20220824130744542100000017-02c167fb-a1f7-3d9e-a583-43b4975c050c maxSize: 450 minSize: 2 - name: eks-data_m6-2022082413055392430000000d-9cc167fa-ca94-132a-04ad-e43166cef41f maxSize: 450 minSize: 2 - name: eks-data_m7-20220824130553921000000009-96c167fa-ca91-d767-0427-91c879ddf5af maxSize: 450 minSize: 2 API Priority and Fairness \u00b6 Overview \u00b6 To protect itself from being overloaded during periods of increased requests, the API Server limits the number of inflight requests it can have outstanding at a given time. Once this limit is exceeded, the API Server will start rejecting requests and return a 429 HTTP response code for \"Too Many Requests\" back to clients. The server dropping requests and having clients try again later is preferable to having no server-side limits on the number of requests and overloading the control plane, which could result in degraded performance or unavailability. The mechanism used by Kubernetes to configure how these inflights requests are divided among different request types is called API Priority and Fairness . The API Server configures the total number of inflight requests it can accept by summing together the values specified by the --max-requests-inflight and --max-mutating-requests-inflight flags. EKS uses the default values of 400 and 200 requests for these flags, allowing a total of 600 requests to be dispatched at a given time. However, as it scales the control-plane to larger sizes in response to increased utilization and workload churn, it correspondingly increases the inflight request quota all the way till 2000 (subject to change). APF specifies how these inflight request quota is further sub-divided among different request types. Note that EKS control planes are highly available with at least 2 API Servers registered to each cluster. This means the total number of inflight requests your cluster can handle is twice (or higher if horizontally scaled out further) the inflight quota set per kube-apiserver. This amounts to several thousands of requests/second on the largest EKS clusters. Two kinds of Kubernetes objects, called PriorityLevelConfigurations and FlowSchemas, configure how the total number of requests is divided between different request types. These objects are maintained by the API Server automatically and EKS uses the default configuration of these objects for the given Kubernetes minor version. PriorityLevelConfigurations represent a fraction of the total number of allowed requests. For example, the workload-high PriorityLevelConfiguration is allocated 98 out of the total of 600 requests. The sum of requests allocated to all PriorityLevelConfigurations will equal 600 (or slightly above 600 because the API Server will round up if a given level is granted a fraction of a request). To check the PriorityLevelConfigurations in your cluster and the number of requests allocated to each, you can run the following command. These are the defaults on EKS 1.24: $ kubectl get --raw /metrics | grep apiserver_flowcontrol_request_concurrency_limit apiserver_flowcontrol_request_concurrency_limit{priority_level=\"catch-all\"} 13 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"global-default\"} 49 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"leader-election\"} 25 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"node-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"system\"} 74 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 The second type of object are FlowSchemas. API Server requests with a given set of properties are classified under the same FlowSchema. These properties include either the authenticated user or attributes of the request, such as the API group, namespace, or resource. A FlowSchema also specifies which PriorityLevelConfiguration this type of request should map to. The two objects together say, \"I want this type of request to count towards this share of inflight requests.\" When a request hits the API Server, it will check each of its FlowSchemas until it finds one that matches all the required properties. If multiple FlowSchemas match a request, the API Server will choose the FlowSchema with the smallest matching precedence which is specified as a property in the object. The mapping of FlowSchemas to PriorityLevelConfigurations can be viewed using this command: $ kubectl get flowschemas NAME PRIORITYLEVEL MATCHINGPRECEDENCE DISTINGUISHERMETHOD AGE MISSINGPL exempt exempt 1 <none> 3d False probes exempt 2 <none> 3d False system-leader-election leader-election 100 ByUser 3d False endpoint-controller workload-high 150 ByUser 3d False workload-leader-election leader-election 200 ByUser 3d False system-node-high node-high 400 ByUser 3d False system-nodes system 500 ByUser 3d False kube-controller-manager workload-high 800 ByNamespace 3d False kube-scheduler workload-high 800 ByNamespace 3d False kube-system-service-accounts workload-high 900 ByNamespace 3d False service-accounts workload-low 9000 ByUser 3d False global-default global-default 9900 ByUser 3d False catch-all catch-all 10000 ByUser 3d False PriorityLevelConfigurations can have a type of Queue, Reject, or Exempt. For types Queue and Reject, a limit is enforced on the maximum number of inflight requests for that priority level, however, the behavior differs when that limit is reached. For example, the workload-high PriorityLevelConfiguration uses type Queue and has 98 requests available for use by the controller-manager, endpoint-controller, scheduler, and from pods running in the kube-system namespace. Since type Queue is used, the API Server will attempt to keep requests in memory and hope that the number of inflight requests drops below 98 before these requests time out. If a given request times out in the queue or if too many requests are already queued, the API Server has no choice but to drop the request and return the client a 429. Note that queuing may prevent a request from receiving a 429, but it comes with the tradeoff of increased end-to-end latency on the request. Now consider the catch-all FlowSchema that maps to the catch-all PriorityLevelConfiguration with type Reject. If clients reach the limit of 13 inflight requests, the API Server will not exercise queuing and will drop the requests instantly with a 429 response code. Finally, requests mapping to a PriorityLevelConfiguration with type Exempt will never receive a 429 and always be dispatched immediately. This is used for high-priority requests such as healthz requests or requests coming from the system:masters group. Monitoring APF and Dropped Requests \u00b6 To confirm if any requests are being dropped due to APF, the API Server metrics for apiserver_flowcontrol_rejected_requests_total can be monitored to check the impacted FlowSchemas and PriorityLevelConfigurations. For example, this metric shows that 100 requests from the service-accounts FlowSchema were dropped due to requests timing out in workload-low queues: % kubectl get --raw /metrics | grep apiserver_flowcontrol_rejected_requests_total apiserver_flowcontrol_rejected_requests_total{flow_schema=\"service-accounts\",priority_level=\"workload-low\",reason=\"time-out\"} 100 To check how close a given PriorityLevelConfiguration is to receiving 429s or experiencing increased latency due to queuing, you can compare the difference between the concurrency limit and the concurrency in use. In this example, we have a buffer of 100 requests. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_limit.*workload-low' apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_in_use.*workload-low' apiserver_flowcontrol_request_concurrency_in_use{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 145 To check if a given PriorityLevelConfiguration is experiencing queuing but not necessarily dropped requests, the metric for apiserver_flowcontrol_current_inqueue_requests can be referenced: % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_current_inqueue_requests.*workload-low' apiserver_flowcontrol_current_inqueue_requests{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 10 Other useful Prometheus metrics include: apiserver_flowcontrol_dispatched_requests_total apiserver_flowcontrol_request_execution_seconds apiserver_flowcontrol_request_wait_duration_seconds See the upstream documentation for a complete list of APF metrics . Preventing Dropped Requests \u00b6 Prevent 429s by changing your workload \u00b6 When APF is dropping requests due to a given PriorityLevelConfiguration exceeding its maximum number of allowed inflight requests, clients in the affected FlowSchemas can decrease the number of requests executing at a given time. This can be accomplished by reducing the total number of requests made over the period where 429s are occurring. Note that long-running requests such as expensive list calls are especially problematic because they count as an inflight request for the entire duration they are executing. Reducing the number of these expensive requests or optimizing the latency of these list calls (for example, by reducing the number of objects fetched per request or switching to using a watch request) can help reduce the total concurrency required by the given workload. Prevent 429s by changing your APF settings \u00b6 Warning Only change default APF settings if you know what you are doing. Misconfigured APF settings can result in dropped API Server requests and significant workload disruptions. One other approach for preventing dropped requests is changing the default FlowSchemas or PriorityLevelConfigurations installed on EKS clusters. EKS installs the upstream default settings for FlowSchemas and PriorityLevelConfigurations for the given Kubernetes minor version. The API Server will automatically reconcile these objects back to their defaults if modified unless the following annotation on the objects is set to false: metadata: annotations: apf.kubernetes.io/autoupdate-spec: \"false\" At a high-level, APF settings can be modified to either: Allocate more inflight capacity to requests you care about. Isolate non-essential or expensive requests that can starve capacity for other request types. This can be accomplished by either changing the default FlowSchemas and PriorityLevelConfigurations or by creating new objects of these types. Operators can increase the values for assuredConcurrencyShares for the relevant PriorityLevelConfigurations objects to increase the fraction of inflight requests they are allocated. Additionally, the number of requests that can be queued at a given time can also be increased if the application can handle the additional latency caused by requests being queued before they are dispatched. Alternatively, new FlowSchema and PriorityLevelConfigurations objects can be created that are specific to the customer's workload. Be aware that allocating more assuredConcurrencyShares to either existing PriorityLevelConfigurations or to new PriorityLevelConfigurations will cause the number of requests that can be handled by other buckets to be reduced as the overall limit will stay as 600 inflight per API Server. When making changes to APF defaults, these metrics should be monitored on a non-production cluster to ensure changing the settings do not cause unintended 429s: The metric for apiserver_flowcontrol_rejected_requests_total should be monitored for all FlowSchemas to ensure that no buckets start to drop requests. The values for apiserver_flowcontrol_request_concurrency_limit and apiserver_flowcontrol_request_concurrency_in_use should be compared to ensure that the concurrency in use is not at risk for breaching the limit for that priority level. One common use-case for defining a new FlowSchema and PriorityLevelConfiguration is for isolation. Suppose we want to isolate long-running list event calls from pods to their own share of requests. This will prevent important requests from pods using the existing service-accounts FlowSchema from receiving 429s and being starved of request capacity. Recall that the total number of inflight requests is finite, however, this example shows APF settings can be modified to better divide request capacity for the given workload: Example FlowSchema object to isolate list event requests: apiVersion: flowcontrol.apiserver.k8s.io/v1beta1 kind: FlowSchema metadata: name: list-events-default-service-accounts spec: distinguisherMethod: type: ByUser matchingPrecedence: 8000 priorityLevelConfiguration: name: catch-all rules: - resourceRules: - apiGroups: - '*' namespaces: - default resources: - events verbs: - list subjects: - kind: ServiceAccount serviceAccount: name: default namespace: default This FlowSchema captures all list event calls made by service accounts in the default namespace. The matching precedence 8000 is lower than the value of 9000 used by the existing service-accounts FlowSchema so these list event calls will match list-events-default-service-accounts rather than service-accounts. We're using the catch-all PriorityLevelConfiguration to isolate these requests. This bucket only allows 13 inflight requests to be used by these long-running list event calls. Pods will start to receive 429s as soon they try to issue more than 13 of these requests concurrently. Retreiving resources in the API server \u00b6 Getting information from the API server is an expected behavior for clusters of any size. As you scale the number of resources in the cluster the frequency of requests and volume of data can quickly become a bottleneck for the control plane and will lead to API latency and slowness. Depending on the severity of the latency it cause unexpected downtime if you are not careful. Being aware of what you are requesting and how often are the first steps to avoiding these types of problems. Here is guidance to limit the volume of queries based on the scaling best practices. Suggestions in this section are provided in order starting with the options that are known to scale the best. Use Shared Informers \u00b6 When building controllers and automation that integrate with the Kubernetes API you will often need to get information from Kubernetes resources. If you poll for these resources regularly it can cause a significant load on the API server. Using an informer from the client-go library will give you benefits of watching for changes to the resources based on events instead of polling for changes. Informers further reduce the load by using shared cache for the events and changes so multiple controllers watching the same resources do not add additional load. Controllers should avoid polling cluster wide resources without labels and field selectors especially in large clusters. Each un-filtered poll requires a lot of unnecessary data to be sent from etcd through the API server to be filtered by the client. By filtering based on labels and namespaces you can reduce the amount of work the API server needs to perform to fullfil the request and data sent to the client. Optimize Kubernetes API usage \u00b6 When calling the Kubernetes API with custom controllers or automation it's important that you limit the calls to only the resources you need. Without limits you can cause unneeded load on the API server and etcd. It is recommended that you use the watch argument whenever possible. With no arguments the default behavior is to list objects. To use watch instead of list you can append ?watch=true to the end of your API request. For example, to get all pods in the default namespace with a watch use: /api/v1/namespaces/default/pods?watch=true If you are listing objects you should limit the scope of what you are listing and the amount of data returned. You can limit the returned data by adding limit=500 argument to requests. The fieldSelector argument and /namespace/ path can be useful to make sure your lists are as narrowly scoped as needed. For example, to list only running pods in the default namespace use the following API path and arguments. /api/v1/namespaces/default/pods?fieldSelector=status.phase=Running&limit=500 Or list all pods that are running with: /api/v1/pods?fieldSelector=status.phase=Running&limit=500 Another option to limit listed objects is to use resourceVersions which you can read about in the Kubernetes documentation . Without a resourceVersion argument you will receive the most recent version available which requires an etcd quorum read which is the most expensive and slowest read for the database. The resourceVersion depends on what resources you are trying to query and can be found in the metadata.resourseVersion field. There is a special resourceVersion=0 available that will return results from the API server cache. This can reduce etcd load but it does not support pagination. /api/v1/namespaces/default/pods?resourceVersion=0 If you call the API without any arguments it will be the most resource intensive for the API server and etcd. This call will get all pods in all namespaces without pagination or limiting the scope and require a quorum read from etcd. /api/v1/pods","title":"Control Plane ({'name': 'English', 'build': True})"},{"location":"scalability/docs/control-plane/#kubernetes-control-plane","text":"The Kubernetes control plane consists of the Kubernetes API Server, Kubernetes Controller Manager, Scheduler and other components that are required for Kubernetes to function. Scalability limits of these components are different depending on what you\u2019re running in the cluster, but the areas with the biggest impact to scaling include the Kubernetes version, utilization, and individual Node scaling.","title":"Kubernetes Control Plane"},{"location":"scalability/docs/control-plane/#use-eks-124-or-above","text":"EKS 1.24 introduced a number of changes and switches the container runtime to containerd instead of docker. Containerd helps clusters scale by increasing individual node performance by limiting container runtime features to closely align with Kubernetes\u2019 needs. Containerd is available in every supported version of EKS and if you would like to switch to containerd in versions prior to 1.24 please use the --container-runtime bootstrap flag .","title":"Use EKS 1.24 or above"},{"location":"scalability/docs/control-plane/#limit-workload-and-node-bursting","text":"Attention To avoid reaching API limits on the control plane you should limit scaling spikes that increase cluster size by double digit percentages at a time (e.g. 1000 nodes to 1100 nodes or 4000 to 4500 pods at once). The EKS control plane will automatically scale as your cluster grows, but there are limits on how fast it will scale. When you first create an EKS cluster the Control Plane will not immediately be able to scale to hundreds of nodes or thousands of pods. To read more about how EKS has made scaling improvements see this blog post . Scaling large applications requires infrastructure to adapt to become fully ready (e.g. warming load balancers). To control the speed of scaling make sure you are scaling based on the right metrics for your application. CPU and memory scaling may not accurately predict your application constraints and using custom metrics (e.g. requests per second) in Kubernetes Horizontal Pod Autoscaler (HPA) may be a better scaling option. To use a custom metric see the examples in the Kubernetes documentation . If you have more advanced scaling needs or need to scale based on external sources (e.g. AWS SQS queue) then use KEDA for event based workload scaling.","title":"Limit workload and node bursting"},{"location":"scalability/docs/control-plane/#scale-nodes-and-pods-down-safely","text":"","title":"Scale nodes and pods down safely"},{"location":"scalability/docs/control-plane/#replace-long-running-instances","text":"Replacing nodes regularly keeps your cluster healthy by avoiding configuration drift and issues that only happen after extended uptime (e.g. slow memory leaks). Automated replacement will give you good process and practices for node upgrades and security patching. If every node in your cluster is replaced regularly then there is less toil required to maintain separate processes for ongoing maintenance. Use Karpenter\u2019s time to live (TTL) settings to replace instances after they\u2019ve been running for a specified amount of time. Self managed node groups can use the max-instance-lifetime setting to cycle nodes automatically. Managed node groups do not currently have this feature but you can track the request here on GitHub .","title":"Replace long running instances"},{"location":"scalability/docs/control-plane/#remove-underutilized-nodes","text":"You can remove nodes when they have no running workloads using the scale down threshold in the Kubernetes Cluster Autoscaler with the --scale-down-utilization-threshold or in Karpenter you can use the ttlSecondsAfterEmpty provisioner setting.","title":"Remove underutilized nodes"},{"location":"scalability/docs/control-plane/#use-pod-disruption-budgets-and-safe-node-shutdown","text":"Removing pods and nodes from a Kubernetes cluster requires controllers to make updates to multiple resources (e.g. EndpointSlices). Doing this frequently or too quickly can cause API server throttling and application outages as changes propogate to controllers. Pod Disruption Budgets are a best practice to slow down churn to protect workload availability as nodes are removed or rescheduled in a cluster.","title":"Use pod disruption budgets and safe node shutdown"},{"location":"scalability/docs/control-plane/#use-client-side-cache-when-running-kubectl","text":"Using the kubectl command inefficiently can add additional load to the Kubernetes API Server. You should avoid running scripts or automation that uses kubectl repeatedly (e.g. in a for loop) or running commands without a local cache. kubectl has a client-side cache that caches discovery information from the cluster to reduce the amount of API calls required. The cache is enabled by default and is refreshed every 10 minutes. If you run kubectl from a container or without a client-side cache you may run into API throttling issues. It is recommended to retain your cluster cache by mounting the --cache-dir to avoid making uncessesary API calls.","title":"Use Client-Side Cache when running Kubectl"},{"location":"scalability/docs/control-plane/#disable-kubectl-compression","text":"Disabling kubectl compression in your kubeconfig file can reduce API and client CPU usage. By default the server will compress data sent to the client to optimize network bandwidth. This adds CPU load on the client and server for every request and disabling compression can reduce the overhead and latency if you have adequate bandwidth. To disable compression you can use the --disable-compression=true flag or set disable-compression: true in your kubeconfig file. apiVersion: v1 clusters: - cluster: server: serverURL disable-compression: true name: cluster","title":"Disable kubectl Compression"},{"location":"scalability/docs/control-plane/#shard-cluster-autoscaler","text":"The Kubernetes Cluster Autoscaler has been tested to scale up to 1000 nodes. On a large cluster with more than 1000 nodes, it is recommended to run multiple instances of the Cluster Autoscaler in shard mode. Each Cluster Autoscaler instance is configured to scale a set of node groups. The following example shows 2 cluster autoscaling configurations that are configured to each scale 4 node groups. ClusterAutoscaler-1 autoscalingGroups: - name: eks-core-node-grp-20220823190924690000000011-80c1660e-030d-476d-cb0d-d04d585a8fcb maxSize: 50 minSize: 2 - name: eks-data_m1-20220824130553925600000011-5ec167fa-ca93-8ca4-53a5-003e1ed8d306 maxSize: 450 minSize: 2 - name: eks-data_m2-20220824130733258600000015-aac167fb-8bf7-429d-d032-e195af4e25f5 maxSize: 450 minSize: 2 - name: eks-data_m3-20220824130553914900000003-18c167fa-ca7f-23c9-0fea-f9edefbda002 maxSize: 450 minSize: 2 ClusterAutoscaler-2 autoscalingGroups: - name: eks-data_m4-2022082413055392550000000f-5ec167fa-ca86-6b83-ae9d-1e07ade3e7c4 maxSize: 450 minSize: 2 - name: eks-data_m5-20220824130744542100000017-02c167fb-a1f7-3d9e-a583-43b4975c050c maxSize: 450 minSize: 2 - name: eks-data_m6-2022082413055392430000000d-9cc167fa-ca94-132a-04ad-e43166cef41f maxSize: 450 minSize: 2 - name: eks-data_m7-20220824130553921000000009-96c167fa-ca91-d767-0427-91c879ddf5af maxSize: 450 minSize: 2","title":"Shard Cluster Autoscaler"},{"location":"scalability/docs/control-plane/#api-priority-and-fairness","text":"","title":"API Priority and Fairness"},{"location":"scalability/docs/control-plane/#overview","text":"To protect itself from being overloaded during periods of increased requests, the API Server limits the number of inflight requests it can have outstanding at a given time. Once this limit is exceeded, the API Server will start rejecting requests and return a 429 HTTP response code for \"Too Many Requests\" back to clients. The server dropping requests and having clients try again later is preferable to having no server-side limits on the number of requests and overloading the control plane, which could result in degraded performance or unavailability. The mechanism used by Kubernetes to configure how these inflights requests are divided among different request types is called API Priority and Fairness . The API Server configures the total number of inflight requests it can accept by summing together the values specified by the --max-requests-inflight and --max-mutating-requests-inflight flags. EKS uses the default values of 400 and 200 requests for these flags, allowing a total of 600 requests to be dispatched at a given time. However, as it scales the control-plane to larger sizes in response to increased utilization and workload churn, it correspondingly increases the inflight request quota all the way till 2000 (subject to change). APF specifies how these inflight request quota is further sub-divided among different request types. Note that EKS control planes are highly available with at least 2 API Servers registered to each cluster. This means the total number of inflight requests your cluster can handle is twice (or higher if horizontally scaled out further) the inflight quota set per kube-apiserver. This amounts to several thousands of requests/second on the largest EKS clusters. Two kinds of Kubernetes objects, called PriorityLevelConfigurations and FlowSchemas, configure how the total number of requests is divided between different request types. These objects are maintained by the API Server automatically and EKS uses the default configuration of these objects for the given Kubernetes minor version. PriorityLevelConfigurations represent a fraction of the total number of allowed requests. For example, the workload-high PriorityLevelConfiguration is allocated 98 out of the total of 600 requests. The sum of requests allocated to all PriorityLevelConfigurations will equal 600 (or slightly above 600 because the API Server will round up if a given level is granted a fraction of a request). To check the PriorityLevelConfigurations in your cluster and the number of requests allocated to each, you can run the following command. These are the defaults on EKS 1.24: $ kubectl get --raw /metrics | grep apiserver_flowcontrol_request_concurrency_limit apiserver_flowcontrol_request_concurrency_limit{priority_level=\"catch-all\"} 13 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"global-default\"} 49 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"leader-election\"} 25 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"node-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"system\"} 74 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-high\"} 98 apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 The second type of object are FlowSchemas. API Server requests with a given set of properties are classified under the same FlowSchema. These properties include either the authenticated user or attributes of the request, such as the API group, namespace, or resource. A FlowSchema also specifies which PriorityLevelConfiguration this type of request should map to. The two objects together say, \"I want this type of request to count towards this share of inflight requests.\" When a request hits the API Server, it will check each of its FlowSchemas until it finds one that matches all the required properties. If multiple FlowSchemas match a request, the API Server will choose the FlowSchema with the smallest matching precedence which is specified as a property in the object. The mapping of FlowSchemas to PriorityLevelConfigurations can be viewed using this command: $ kubectl get flowschemas NAME PRIORITYLEVEL MATCHINGPRECEDENCE DISTINGUISHERMETHOD AGE MISSINGPL exempt exempt 1 <none> 3d False probes exempt 2 <none> 3d False system-leader-election leader-election 100 ByUser 3d False endpoint-controller workload-high 150 ByUser 3d False workload-leader-election leader-election 200 ByUser 3d False system-node-high node-high 400 ByUser 3d False system-nodes system 500 ByUser 3d False kube-controller-manager workload-high 800 ByNamespace 3d False kube-scheduler workload-high 800 ByNamespace 3d False kube-system-service-accounts workload-high 900 ByNamespace 3d False service-accounts workload-low 9000 ByUser 3d False global-default global-default 9900 ByUser 3d False catch-all catch-all 10000 ByUser 3d False PriorityLevelConfigurations can have a type of Queue, Reject, or Exempt. For types Queue and Reject, a limit is enforced on the maximum number of inflight requests for that priority level, however, the behavior differs when that limit is reached. For example, the workload-high PriorityLevelConfiguration uses type Queue and has 98 requests available for use by the controller-manager, endpoint-controller, scheduler, and from pods running in the kube-system namespace. Since type Queue is used, the API Server will attempt to keep requests in memory and hope that the number of inflight requests drops below 98 before these requests time out. If a given request times out in the queue or if too many requests are already queued, the API Server has no choice but to drop the request and return the client a 429. Note that queuing may prevent a request from receiving a 429, but it comes with the tradeoff of increased end-to-end latency on the request. Now consider the catch-all FlowSchema that maps to the catch-all PriorityLevelConfiguration with type Reject. If clients reach the limit of 13 inflight requests, the API Server will not exercise queuing and will drop the requests instantly with a 429 response code. Finally, requests mapping to a PriorityLevelConfiguration with type Exempt will never receive a 429 and always be dispatched immediately. This is used for high-priority requests such as healthz requests or requests coming from the system:masters group.","title":"Overview"},{"location":"scalability/docs/control-plane/#monitoring-apf-and-dropped-requests","text":"To confirm if any requests are being dropped due to APF, the API Server metrics for apiserver_flowcontrol_rejected_requests_total can be monitored to check the impacted FlowSchemas and PriorityLevelConfigurations. For example, this metric shows that 100 requests from the service-accounts FlowSchema were dropped due to requests timing out in workload-low queues: % kubectl get --raw /metrics | grep apiserver_flowcontrol_rejected_requests_total apiserver_flowcontrol_rejected_requests_total{flow_schema=\"service-accounts\",priority_level=\"workload-low\",reason=\"time-out\"} 100 To check how close a given PriorityLevelConfiguration is to receiving 429s or experiencing increased latency due to queuing, you can compare the difference between the concurrency limit and the concurrency in use. In this example, we have a buffer of 100 requests. % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_limit.*workload-low' apiserver_flowcontrol_request_concurrency_limit{priority_level=\"workload-low\"} 245 % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_request_concurrency_in_use.*workload-low' apiserver_flowcontrol_request_concurrency_in_use{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 145 To check if a given PriorityLevelConfiguration is experiencing queuing but not necessarily dropped requests, the metric for apiserver_flowcontrol_current_inqueue_requests can be referenced: % kubectl get --raw /metrics | grep 'apiserver_flowcontrol_current_inqueue_requests.*workload-low' apiserver_flowcontrol_current_inqueue_requests{flow_schema=\"service-accounts\",priority_level=\"workload-low\"} 10 Other useful Prometheus metrics include: apiserver_flowcontrol_dispatched_requests_total apiserver_flowcontrol_request_execution_seconds apiserver_flowcontrol_request_wait_duration_seconds See the upstream documentation for a complete list of APF metrics .","title":"Monitoring APF and Dropped Requests"},{"location":"scalability/docs/control-plane/#preventing-dropped-requests","text":"","title":"Preventing Dropped Requests"},{"location":"scalability/docs/control-plane/#prevent-429s-by-changing-your-workload","text":"When APF is dropping requests due to a given PriorityLevelConfiguration exceeding its maximum number of allowed inflight requests, clients in the affected FlowSchemas can decrease the number of requests executing at a given time. This can be accomplished by reducing the total number of requests made over the period where 429s are occurring. Note that long-running requests such as expensive list calls are especially problematic because they count as an inflight request for the entire duration they are executing. Reducing the number of these expensive requests or optimizing the latency of these list calls (for example, by reducing the number of objects fetched per request or switching to using a watch request) can help reduce the total concurrency required by the given workload.","title":"Prevent 429s by changing your workload"},{"location":"scalability/docs/control-plane/#prevent-429s-by-changing-your-apf-settings","text":"Warning Only change default APF settings if you know what you are doing. Misconfigured APF settings can result in dropped API Server requests and significant workload disruptions. One other approach for preventing dropped requests is changing the default FlowSchemas or PriorityLevelConfigurations installed on EKS clusters. EKS installs the upstream default settings for FlowSchemas and PriorityLevelConfigurations for the given Kubernetes minor version. The API Server will automatically reconcile these objects back to their defaults if modified unless the following annotation on the objects is set to false: metadata: annotations: apf.kubernetes.io/autoupdate-spec: \"false\" At a high-level, APF settings can be modified to either: Allocate more inflight capacity to requests you care about. Isolate non-essential or expensive requests that can starve capacity for other request types. This can be accomplished by either changing the default FlowSchemas and PriorityLevelConfigurations or by creating new objects of these types. Operators can increase the values for assuredConcurrencyShares for the relevant PriorityLevelConfigurations objects to increase the fraction of inflight requests they are allocated. Additionally, the number of requests that can be queued at a given time can also be increased if the application can handle the additional latency caused by requests being queued before they are dispatched. Alternatively, new FlowSchema and PriorityLevelConfigurations objects can be created that are specific to the customer's workload. Be aware that allocating more assuredConcurrencyShares to either existing PriorityLevelConfigurations or to new PriorityLevelConfigurations will cause the number of requests that can be handled by other buckets to be reduced as the overall limit will stay as 600 inflight per API Server. When making changes to APF defaults, these metrics should be monitored on a non-production cluster to ensure changing the settings do not cause unintended 429s: The metric for apiserver_flowcontrol_rejected_requests_total should be monitored for all FlowSchemas to ensure that no buckets start to drop requests. The values for apiserver_flowcontrol_request_concurrency_limit and apiserver_flowcontrol_request_concurrency_in_use should be compared to ensure that the concurrency in use is not at risk for breaching the limit for that priority level. One common use-case for defining a new FlowSchema and PriorityLevelConfiguration is for isolation. Suppose we want to isolate long-running list event calls from pods to their own share of requests. This will prevent important requests from pods using the existing service-accounts FlowSchema from receiving 429s and being starved of request capacity. Recall that the total number of inflight requests is finite, however, this example shows APF settings can be modified to better divide request capacity for the given workload: Example FlowSchema object to isolate list event requests: apiVersion: flowcontrol.apiserver.k8s.io/v1beta1 kind: FlowSchema metadata: name: list-events-default-service-accounts spec: distinguisherMethod: type: ByUser matchingPrecedence: 8000 priorityLevelConfiguration: name: catch-all rules: - resourceRules: - apiGroups: - '*' namespaces: - default resources: - events verbs: - list subjects: - kind: ServiceAccount serviceAccount: name: default namespace: default This FlowSchema captures all list event calls made by service accounts in the default namespace. The matching precedence 8000 is lower than the value of 9000 used by the existing service-accounts FlowSchema so these list event calls will match list-events-default-service-accounts rather than service-accounts. We're using the catch-all PriorityLevelConfiguration to isolate these requests. This bucket only allows 13 inflight requests to be used by these long-running list event calls. Pods will start to receive 429s as soon they try to issue more than 13 of these requests concurrently.","title":"Prevent 429s by changing your APF settings"},{"location":"scalability/docs/control-plane/#retreiving-resources-in-the-api-server","text":"Getting information from the API server is an expected behavior for clusters of any size. As you scale the number of resources in the cluster the frequency of requests and volume of data can quickly become a bottleneck for the control plane and will lead to API latency and slowness. Depending on the severity of the latency it cause unexpected downtime if you are not careful. Being aware of what you are requesting and how often are the first steps to avoiding these types of problems. Here is guidance to limit the volume of queries based on the scaling best practices. Suggestions in this section are provided in order starting with the options that are known to scale the best.","title":"Retreiving resources in the API server"},{"location":"scalability/docs/control-plane/#use-shared-informers","text":"When building controllers and automation that integrate with the Kubernetes API you will often need to get information from Kubernetes resources. If you poll for these resources regularly it can cause a significant load on the API server. Using an informer from the client-go library will give you benefits of watching for changes to the resources based on events instead of polling for changes. Informers further reduce the load by using shared cache for the events and changes so multiple controllers watching the same resources do not add additional load. Controllers should avoid polling cluster wide resources without labels and field selectors especially in large clusters. Each un-filtered poll requires a lot of unnecessary data to be sent from etcd through the API server to be filtered by the client. By filtering based on labels and namespaces you can reduce the amount of work the API server needs to perform to fullfil the request and data sent to the client.","title":"Use Shared Informers"},{"location":"scalability/docs/control-plane/#optimize-kubernetes-api-usage","text":"When calling the Kubernetes API with custom controllers or automation it's important that you limit the calls to only the resources you need. Without limits you can cause unneeded load on the API server and etcd. It is recommended that you use the watch argument whenever possible. With no arguments the default behavior is to list objects. To use watch instead of list you can append ?watch=true to the end of your API request. For example, to get all pods in the default namespace with a watch use: /api/v1/namespaces/default/pods?watch=true If you are listing objects you should limit the scope of what you are listing and the amount of data returned. You can limit the returned data by adding limit=500 argument to requests. The fieldSelector argument and /namespace/ path can be useful to make sure your lists are as narrowly scoped as needed. For example, to list only running pods in the default namespace use the following API path and arguments. /api/v1/namespaces/default/pods?fieldSelector=status.phase=Running&limit=500 Or list all pods that are running with: /api/v1/pods?fieldSelector=status.phase=Running&limit=500 Another option to limit listed objects is to use resourceVersions which you can read about in the Kubernetes documentation . Without a resourceVersion argument you will receive the most recent version available which requires an etcd quorum read which is the most expensive and slowest read for the database. The resourceVersion depends on what resources you are trying to query and can be found in the metadata.resourseVersion field. There is a special resourceVersion=0 available that will return results from the API server cache. This can reduce etcd load but it does not support pagination. /api/v1/namespaces/default/pods?resourceVersion=0 If you call the API without any arguments it will be the most resource intensive for the API server and etcd. This call will get all pods in all namespaces without pagination or limiting the scope and require a quorum read from etcd. /api/v1/pods","title":"Optimize Kubernetes API usage"},{"location":"scalability/docs/data-plane.kr/","text":"{'name': 'English', 'build': True} \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\uc774\ud130 \ud50c\ub808\uc778 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc0ac\uc6a9\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4, \ub85c\ub4dc \ubc38\ub7f0\uc11c, \uc2a4\ud1a0\ub9ac\uc9c0 \ubc0f \uae30\ud0c0 API\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc870\uc9c1\ud654\ub97c \uc704\ud574 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4 \ub97c \ubcc4\ub3c4\uc758 \ud398\uc774\uc9c0\ub85c \uadf8\ub8f9\ud654\ud588\uc73c\uba70 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ud655\uc7a5\uc740 \uc6cc\ud06c\ub85c\ub4dc \uc139\uc158 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \ud655\uc7a5\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4. \uc5ec\ub7ec \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\ud0dd\ud558\ub294 \uac83\uc774 \uace0\uac1d\uc774 \uc9c1\uba74\ud558\ub294 \uac00\uc7a5 \uc5b4\ub824\uc6b4 \uacb0\uc815 \uc911 \ud558\ub098\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c1\ud669\uc5d0 \ub9de\ub294 \ub2e8\uc77c \uc194\ub8e8\uc158\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ucef4\ud4e8\ud305 \ud655\uc7a5\uacfc \uad00\ub828\ub41c \uc77c\ubc18\uc801\uc778 \uc704\ud5d8\uc744 \ubc29\uc9c0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uba87 \uac00\uc9c0 \ud301\uc785\ub2c8\ub2e4. \uc790\ub3d9 \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \u00b6 \uc218\uace0\ub97c \uc904\uc774\uace0 Kubernetes\uc640 \uae34\ubc00\ud558\uac8c \ud1b5\ud569\ub418\ub294 \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f Karpenter \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uad00\ub9ac\ud615 \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \uad6c\uc131\uc5d0 \ub300\ud55c \ucd94\uac00 \uc774\uc810\uacfc \ud568\uaed8 Amazon EC2 Auto Scaling \uadf8\ub8f9\uc758 \uc720\uc5f0\uc131\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kubernetes Cluster Autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud655\uc7a5\ud560 \uc218 \uc788\uc73c\uba70 \ub2e4\uc591\ud55c \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc635\uc158\uc785\ub2c8\ub2e4. Karpenter\ub294 AWS\uc5d0\uc11c \ub9cc\ub4e0 \uc624\ud508 \uc18c\uc2a4 \uc6cc\ud06c\ub85c\ub4dc \ub124\uc774\ud2f0\ube0c \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub7ec\uc785\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc744 \uad00\ub9ac\ud558\uc9c0 \uc54a\uace0\ub3c4 \ub9ac\uc18c\uc2a4 (\uc608: GPU) \uc640 taint \ubc0f tolerations (\uc608: zone spread)\uc5d0 \ub300\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \uae30\ubc18\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. \ub178\ub4dc\ub294 EC2\ub85c\ubd80\ud130 \uc9c1\uc811 \uc0dd\uc131\ub418\ubbc0\ub85c \uae30\ubcf8 \ub178\ub4dc \uadf8\ub8f9 \ud560\ub2f9\ub7c9 (\uadf8\ub8f9\ub2f9 450\uac1c \ub178\ub4dc)\uc774 \ud544\uc694 \uc5c6\uc73c\uba70 \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\ub97c \uc904\uc774\uba74\uc11c \uc778\uc2a4\ud134\uc2a4 \uc120\ud0dd \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \uace0\uac1d\uc740 \uac00\ub2a5\ud558\uba74 Karpenter\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc0ac\uc6a9 \u00b6 \uac01 AWS \ub9ac\uc804\uc5d0\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc0ac\uc6a9 \u200b\u200b\uac00\ub2a5\ud55c \uc778\uc2a4\ud134\uc2a4 \uc218\uac00 \uc81c\ud55c\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ub9cc \uc0ac\uc6a9\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub9ac\uc804\uc758 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ub178\ub4dc \uc218\ub97c \ud655\uc7a5\ud558\uba74 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc778\uc2a4\ud134\uc2a4\uac00 \uc5c6\ub2e4\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc784\uc758\ub85c \uc81c\ud55c\ud574\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. Karpenter\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud638\ud658\ub418\ub294 \ub2e4\uc591\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uba70 \ubcf4\ub958 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d, \uac00\uc6a9\uc131 \ubc0f \ube44\uc6a9\uc744 \uae30\ubc18\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd \uc2dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. Provisioner \uc758 karpenter.k8s.aws/instance-category \ud0a4\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \ubaa9\ub85d\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc77c\uad00\ub418\uac8c \ud655\uc7a5\ub420 \uc218 \uc788\ub3c4\ub85d \uc720\uc0ac\ud55c \ud06c\uae30\uc758 \uc720\ud615\uc744 \ud544\uc694\ub85c \ud569\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac \ud06c\uae30\ub97c \uae30\uc900\uc73c\ub85c \uc5ec\ub7ec \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uace0 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. ec2-instance-selector \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uacfc \ube44\uc2b7\ud55c \ud06c\uae30\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dd\ubcc4\ud558\uc138\uc694. ec2-instance-selector --service eks --vcpus-min 8 --memory-min 16 a1.2xlarge a1.4xlarge a1.metal c4.4xlarge c4.8xlarge c5.12xlarge c5.18xlarge c5.24xlarge c5.2xlarge c5.4xlarge c5.9xlarge c5.metal API \uc11c\ubc84 \ubd80\ud558\ub97c \uc904\uc774\uae30 \uc704\ud574 \ub354 \ud070 \ub178\ub4dc\ub97c \uc120\ud638 \u00b6 \uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uacb0\uc815\ud560 \ub54c \ub178\ub4dc \uc218\uac00 \uc801\uace0 \ud06c\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uac78\ub9ac\ub294 \ubd80\ud558\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc2e4\ud589 \uc911\uc778 kubelet\uacfc DaemonSet\uc758 \uc218\uac00 \uc904\uc5b4\ub4e4\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud070 \ub178\ub4dc\ub294 \uc791\uc740 \ub178\ub4dc\ucc98\ub7fc \ucda9\ubd84\ud788 \ud65c\uc6a9\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ud06c\uae30\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131 \ubc0f \ud655\uc7a5\uc131\uc744 \uae30\ubc18\uc73c\ub85c \ud3c9\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. u-24tb1.metal \uc778\uc2a4\ud134\uc2a4 3\uac1c (24TB Memory \ubc0f 448 cores)\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 3\uac1c\uc758 kubelets\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud30c\ub4dc\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uac01\uac01 4\uac1c\uc758 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \uc608\uc0c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (4\ucf54\uc5b4 x 110 = \ub178\ub4dc\ub2f9 440\ucf54\uc5b4). \ud074\ub7ec\uc2a4\ud130\uc5d0 3\uac1c\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc778\uc2a4\ud134\uc2a4 1\uac1c\uac00 \uc911\ub2e8\ub420 \ub54c \ud074\ub7ec\uc2a4\ud130\uc758 1/3\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc73c\ubbc0\ub85c \uc778\uc2a4\ud134\uc2a4 \uc778\uc2dc\ub358\ud2b8\ub97c \ucc98\ub9ac\ud558\ub294 \ub2a5\ub825\uc774 \ub5a8\uc5b4\uc9d1\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc801\uc808\ud558\uac8c \ubc30\uce58\ud560 \uc218 \uc788\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub178\ub4dc \uc694\uad6c \uc0ac\ud56d\uacfc pod spread\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub294 taint, tolerations \ubc0f PodTopologySpread \ub97c \ud1b5\ud574 \ud544\uc694\ud55c \ub9ac\uc18c\uc2a4\uc640 \ud544\uc694\ud55c \uac00\uc6a9\uc131\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub4e4\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ubd80\ud558 \uac10\uc18c, \uc6b4\uc601 \uac10\uc18c, \ube44\uc6a9 \uc808\uac10\uc774\ub77c\ub294 \uac00\uc6a9\uc131 \ubaa9\ud45c\ub97c \ucda9\ubd84\ud788 \ud65c\uc6a9\ud560 \uc218 \uc788\uace0 \uac00\uc6a9\uc131 \ubaa9\ud45c\ub97c \ucda9\uc871\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \ud070 \ub178\ub4dc\ub97c \uc120\ud638\ud574\uc57c \ud569\ub2c8\ub2e4. Kubernetes Scheduler\ub294 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \uac00\uc6a9 \uc601\uc5ed\uacfc \ud638\uc2a4\ud2b8\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc0b0\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \uc5c6\ub294 \uacbd\uc6b0 Kubernetes Cluster Autoscaler\ub294 \uac01 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub178\ub4dc\ub97c \uade0\ub4f1\ud558\uac8c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub2e4\ub978 \uc694\uad6c \uc0ac\ud56d\uc774 \uc9c0\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub294 \ud55c Karpenter\ub294 \uac00\ub2a5\ud55c \ud55c \ube60\ub974\uace0 \uc800\ub834\ud558\uac8c \ub178\ub4dc\ub97c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub7ec\ub97c \ud1b5\ud574 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubd84\uc0b0\uc2dc\ud0a4\uace0 \uac00\uc6a9 \uc601\uc5ed \uc804\uccb4\uc5d0 \uc0c8 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud558\ub824\uba74 TopologySpreadConstraints (topologySpreadConstraints) \ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. spec: topologySpreadConstraints: - maxSkew: 3 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment - maxSkew: 2 topologyKey: \"kubernetes.io/hostname\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment \uc77c\uad00\ub41c \uc6cc\ud06c\ub85c\ub4dc \uc131\ub2a5\uc744 \uc704\ud574 \uc720\uc0ac\ud55c \ub178\ub4dc \ud06c\uae30 \uc0ac\uc6a9 \u00b6 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc77c\uad00\ub41c \uc131\ub2a5\uacfc \uc608\uce21 \uac00\ub2a5\ud55c \ud655\uc7a5\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ub178\ub4dc \ud06c\uae30\ub97c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. 500m CPU\ub97c \uc694\uccad\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 4 cores \uc778\uc2a4\ud134\uc2a4\uc640 16 cores \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub2e4\ub974\uac8c \uc218\ud589\ub429\ub2c8\ub2e4. T \uc2dc\ub9ac\uc988 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc774 \ubc84\uc2a4\ud2b8 \uac00\ub2a5\ud55c CPU\ub97c \uc0ac\uc6a9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \ud53c\ud558\uc138\uc694. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc77c\uad00\ub41c \uc131\ub2a5\uc744 \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc9c0\uc6d0\ub418\ub294 Karpenter \ub808\uc774\ube14 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \ud06c\uae30\ub97c \ub300\uc0c1\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kind: deployment ... spec: template: spec: containers: nodeSelector: karpenter.k8s.aws/instance-size: 8xlarge Kubernetes Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ub808\uc774\ube14 \ub9e4\uce6d\uc744 \uae30\ubc18\uc73c\ub85c node selector\ub97c \ub178\ub4dc \uadf8\ub8f9\uacfc \uc77c\uce58\uc2dc\ucf1c\uc57c \ud569\ub2c8\ub2e4. spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: eks.amazonaws.com/nodegroup operator: In values: - 8-core-node-group # match your node group name \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9 \u00b6 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \ubc0f \uac00\uc6a9 \uc601\uc5ed\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 \ud655\uc7a5\uc131, \uac00\uc6a9\uc131, \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub418\uace0 \ucd1d \ube44\uc6a9\uc774 \uc808\uac10\ub429\ub2c8\ub2e4. \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \ud658\uacbd\uc5d0\uc11c \uc5ec\ub7ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ud6a8\uc728\uc801\uc778 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc608\uce21\ud558\uae30\uac00 \uadf9\ud788 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. Karpenter \ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \uc628\ub514\ub9e8\ub4dc\ub85c \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \ud65c\uc6a9\ub3c4\uc640 \uc720\uc5f0\uc131\uc744 \uadf9\ub300\ud654\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 \uba3c\uc800 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uac70\ub098 \ud2b9\uc815 \ub178\ub4dc\uc5d0 \ub300\ud55c label taint\ub97c \uad6c\uc131\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc720\ud615\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Karpenter best practices \ub97c \ucc38\uc870\ud558\uc138\uc694. Karpenter provisioner\uc5d0\uc11c consolidation \uc744 \ud65c\uc131\ud654\ud558\uc5ec \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc\ub97c \uad50\uccb4\ud574 \ubcf4\uc138\uc694. Amazon Machine Image (AMI) \uc5c5\ub370\uc774\ud2b8 \uc790\ub3d9\ud654 \u00b6 Worker \ub178\ub4dc \uad6c\uc131 \uc694\uc18c\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uba74 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58\uc640 Kubernetes API\uc640 \ud638\ud658\ub418\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kublet \uc5c5\ub370\uc774\ud2b8\ub294 Kubernetes \uae30\ub2a5\uc758 \uac00\uc7a5 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\uc774\uc9c0\ub9cc OS, \ucee4\ub110 \ubc0f \ub85c\uceec\uc5d0 \uc124\uce58\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud328\uce58\ub97c \uc790\ub3d9\ud654\ud558\uba74 \ud655\uc7a5\uc5d0 \ub530\ub978 \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc774\ubbf8\uc9c0\uc5d0\ub294 \ucd5c\uc2e0 Amazon EKS optimized Amazon Linux 2 \ub610\ub294 Amazon EKS optimized Bottlerocket AMI \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Karpenter\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 AMI \ub97c \uc790\ub3d9\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc5c5\ub370\uc774\ud2b8 \uc911\uc5d0 AMI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0\ub9cc \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd \uc2dc\uc5d0\ub294 AMI ID\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \uacbd\uc6b0 \ud328\uce58 \ub9b4\ub9ac\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\uba74 Auto Scaling Group (ASG) \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0c8 AMI ID\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. AMI \ub9c8\uc774\ub108 \ubc84\uc804 (\uc608: 1.23.5~1.24.3)\uc740 EKS \ucf58\uc194 \ubc0f API\uc5d0\uc11c \ub178\ub4dc \uadf8\ub8f9 \uc5c5\uadf8\ub808\uc774\ub4dc \ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \ud328\uce58 \ub9b4\ub9ac\uc2a4 \ubc84\uc804 (\uc608: 1.23.5 ~ 1.23.6)\uc740 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc\ub85c \uc81c\uacf5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. AMI \ud328\uce58 \ub9b4\ub9ac\uc2a4\ub97c \ud1b5\ud574 \ub178\ub4dc \uadf8\ub8f9\uc744 \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub824\uba74 \uc0c8 \uc2dc\uc791 \ud15c\ud50c\ub9bf \ubc84\uc804\uc744 \uc0dd\uc131\ud558\uace0 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0c8 AMI \ub9b4\ub9ac\uc2a4\ub85c \uad50\uccb4\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0 \uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 AMI\ub97c \ucc3e\uac70\ub098 AWS CLI\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws ssm get-parameter \\ --name /aws/service/eks/optimized-ami/1.24/amazon-linux-2/recommended/image_id \\ --query \"Parameter.Value\" \\ --output text \ucee8\ud14c\uc774\ub108\uc5d0 \uc5ec\ub7ec EBS \ubcfc\ub968 \uc0ac\uc6a9 \u00b6 EBS \ubcfc\ub968\uc5d0\ub294 \ubcfc\ub968 \uc720\ud615 (\uc608: gp3) \ubc0f \ub514\uc2a4\ud06c \ud06c\uae30\uc5d0 \ub530\ub978 \uc785/\ucd9c\ub825 (I/O) \ud560\ub2f9\ub7c9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud638\uc2a4\ud2b8\uc640 \ub2e8\uc77c EBS \ub8e8\ud2b8 \ubcfc\ub968\uc744 \uacf5\uc720\ud558\ub294 \uacbd\uc6b0 \uc804\uccb4 \ud638\uc2a4\ud2b8\uc758 \ub514\uc2a4\ud06c \ud560\ub2f9\ub7c9\uc774 \uace0\uac08\ub418\uace0 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac00\uc6a9 \uc6a9\ub7c9\uc744 \uae30\ub2e4\ub9ac\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc751 \uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \uc624\ubc84\ub808\uc774 \ud30c\ud2f0\uc158\uc5d0 \ud30c\uc77c\uc744 \uc4f0\uace0, \ud638\uc2a4\ud2b8\uc5d0\uc11c \ub85c\uceec \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud558\uace0, \uc0ac\uc6a9\ub41c \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8\uc5d0 \ub530\ub77c \ud45c\uc900 \ucd9c\ub825 (STDOUT)\uc5d0 \ub85c\uadf8\uc628\ud560 \ub54c\ub3c4 \ub514\uc2a4\ud06c\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4. Disk I/O \uc18c\ubaa8\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ub450 \ubc88\uc9f8 \ubcfc\ub968\uc744 \ucee8\ud14c\uc774\ub108 state \ud3f4\ub354 (\uc608: /run/containerd)\uc5d0 \ub9c8\uc6b4\ud2b8\ud558\uace0, \uc6cc\ud06c\ub85c\ub4dc \uc2a4\ud1a0\ub9ac\uc9c0\uc6a9\uc73c\ub85c \ubcc4\ub3c4\uc758 EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uace0, \ubd88\ud544\uc694\ud55c \ub85c\uceec \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. eksctl \uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub450 \ubc88\uc9f8 \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc131\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. managedNodeGroups: - name: al2-workers amiFamily: AmazonLinux2 desiredCapacity: 2 volumeSize: 80 additionalVolumes: - volumeName: '/dev/sdz' volumeSize: 100 preBootstrapCommands: - \"systemctl stop containerd\" - \"mkfs -t ext4 /dev/nvme1n1\" - \"rm -rf /var/lib/containerd/*\" - \"mount /dev/nvme1n1 /var/lib/containerd/\" - \"systemctl start containerd\" Terraform\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc744 \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uacbd\uc6b0 EKS Blueprints for terraform \uc758 \uc608\ub97c \ucc38\uc870\ud558\uc138\uc694. Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uacbd\uc6b0 \ub178\ub4dc \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uc640 \ud568\uaed8 blockDeviceMappings \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00 \ubcfc\ub968\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EBS \ubcfc\ub968\uc744 \ud30c\ub4dc\uc5d0 \uc9c1\uc811 \ud0d1\uc7ac\ud558\ub824\uba74 AWS EBS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \uc0ac\uc6a9\ud558\uace0 \uc2a4\ud1a0\ub9ac\uc9c0 \ud074\ub798\uc2a4\uac00 \uc788\ub294 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. --- apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: ebs-sc provisioner: ebs.csi.aws.com volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: ebs-claim spec: accessModes: - ReadWriteOnce storageClassName: ebs-sc resources: requests: storage: 4Gi --- apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: public.ecr.aws/docker/library/nginx volumeMounts: - name: persistent-storage mountPath: /data volumes: - name: persistent-storage persistentVolumeClaim: claimName: ebs-claim \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 EBS \uc5f0\uacb0 \uc81c\ud55c\uc774 \ub0ae\uc740 \uc778\uc2a4\ud134\uc2a4\ub97c \ud53c\ud558\uc138\uc694. \u00b6 EBS\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\ub97c \ud655\ubcf4\ud558\ub294 \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95 \uc911 \ud558\ub098\uc774\uc9c0\ub9cc \ud655\uc7a5\uc131 \uc81c\ud55c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 EBS \ubcfc\ub968 \uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\uc5b8\ud558\uace0 Kubernetes taints\uac00 \uc788\ub294 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4. \ub514\uc2a4\ud06c\uc5d0 \ubd88\ud544\uc694\ud55c \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654 \u00b6 \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ub514\ubc84\uadf8 \ub85c\uae45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc9c0 \uc54a\uace0 \ub514\uc2a4\ud06c\ub97c \uc790\uc8fc \uc77d\uace0 \uc4f0\ub294 \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654\ud558\uc5ec \ubd88\ud544\uc694\ud55c \ub85c\uceec \ub85c\uae45\uc744 \ud53c\ud558\uc138\uc694. Journald\ub294 \ub85c\uadf8 \ubc84\ud37c\ub97c \uba54\ubaa8\ub9ac\uc5d0 \uc720\uc9c0\ud558\uace0 \uc8fc\uae30\uc801\uc73c\ub85c \ub514\uc2a4\ud06c\uc5d0 \ud50c\ub7ec\uc2dc\ud558\ub294 \ub85c\uceec \ub85c\uae45 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. Journald\ub294 \ubaa8\ub4e0 \ud589\uc744 \uc989\uc2dc \ub514\uc2a4\ud06c\uc5d0 \uae30\ub85d\ud558\ub294 syslog\ubcf4\ub2e4 \uc120\ud638\ub429\ub2c8\ub2e4. syslog\ub97c \ube44\ud65c\uc131\ud654\ud558\uba74 \ud544\uc694\ud55c \ucd1d \uc2a4\ud1a0\ub9ac\uc9c0 \uc6a9\ub7c9\ub3c4 \uc904\uc5b4\ub4e4\uace0 \ubcf5\uc7a1\ud55c \ub85c\uadf8 \uc21c\ud658 \uaddc\uce59\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. syslog\ub97c \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 cloud-init \uad6c\uc131\uc5d0 \ub2e4\uc74c \ucf54\ub4dc \uc870\uac01\uc744 \ucd94\uac00\ud558\uba74 \ub429\ub2c8\ub2e4. runcmd: - [ systemctl, disable, --now, syslog.service ] OS \uc5c5\ub370\uc774\ud2b8 \uc18d\ub3c4\uac00 \ud544\uc694\ud560 \ub54c in place \ubc29\uc2dd\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4 \ud328\uce58 \u00b6 Attention \uc778\uc2a4\ud134\uc2a4 \ud328\uce58\ub294 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub9cc \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon\uc5d0\uc11c\ub294 \uc778\ud504\ub77c\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uac83\uc73c\ub85c \ucde8\uae09\ud558\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \ud558\uc704 \ud658\uacbd\uc744 \ud1b5\ud574 \uc2b9\uaca9\ub418\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \ucca0\uc800\ud788 \ud14c\uc2a4\ud2b8\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc740 \uc774\uac83\uc774 \ubd88\uac00\ub2a5\ud560 \ub54c \uc801\uc6a9\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc911\ub2e8\ud558\uc9c0 \uc54a\uace0 \uae30\uc874 Linux \ud638\uc2a4\ud2b8\uc5d0 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud558\ub294 \ub370 \uba87 \ucd08 \ubc16\uc5d0 \uac78\ub9ac\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c \ucc28\ub2e8(cordoning), \ub4dc\ub808\uc774\ub2dd(draining) \ub610\ub294 \uad50\uccb4(replacing)\ud558\uc9c0 \uc54a\uace0\ub3c4 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud558\uace0 \uac80\uc99d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud558\ub824\uba74 \uba3c\uc800 \uc0c8 AMI\ub97c \uc0dd\uc131, \uac80\uc99d \ubc0f \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 \ub300\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 \uc0dd\uc131\ub418\uc5b4\uc57c \ud558\uba70, \uc774\uc804 \uc778\uc2a4\ud134\uc2a4\ub294 \ucc28\ub2e8 \ubc0f \uc81c\uac70\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc0c8 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc0dd\uc131\ud558\uace0 \ud655\uc778\ud558\uace0 \ud328\uce58\uac00 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud574 \ubc18\ubcf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc911\ub2e8\ud558\uc9c0 \uc54a\uace0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc548\uc804\ud558\uac8c \uad50\uccb4\ud558\ub824\uba74 \uba87 \uc2dc\uac04, \uba70\uce60 \ub610\ub294 \uba87 \uc8fc\uac00 \uac78\ub9bd\ub2c8\ub2e4. Amazon\uc5d0\uc11c\ub294 \uc790\ub3d9\ud654\ub41c \uc120\uc5b8\uc801 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uad6c\ucd95, \ud14c\uc2a4\ud2b8 \ubc0f \uc2b9\uaca9\ub418\ub294 \ubd88\ubcc0 \uc778\ud504\ub77c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc2dc\uc2a4\ud15c\uc5d0 \uc2e0\uc18d\ud558\uac8c \ud328\uce58\ub97c \uc801\uc6a9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc2dc\uc2a4\ud15c\uc744 \ud328\uce58\ud558\uace0 \uc0c8 AMI\uac00 \ucd9c\uc2dc\ub418\uba74 \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c \ud328\uce58\uc640 \uad50\uccb4 \uc0ac\uc774\uc758 \uc2dc\uac04 \ucc28\uc774\uac00 \ud06c\uae30 \ub54c\ubb38\uc5d0 AWS Systems Manager Patch Manager \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud544\uc694\ud55c \uacbd\uc6b0 \ub178\ub4dc \ud328\uce58\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4. \ub178\ub4dc \ud328\uce58\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\ub97c \uc2e0\uc18d\ud558\uac8c \ucd9c\uc2dc\ud558\uace0 AMI\uac00 \uc5c5\ub370\uc774\ud2b8\ub41c \ud6c4 \uc815\uae30\uc801\uc778 \uc77c\uc815\uc5d0 \ub530\ub77c \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Flatcar Container Linux \ub610\ub294 Bottlerocket OS \uc640 \uac19\uc740 \uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc774 \uc788\ub294 \uc6b4\uc601 \uccb4\uc81c\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc6b4\uc601 \uccb4\uc81c\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \uc5c5\ub370\uc774\ud2b8 \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Flatcar Linux update operator \ubc0f Bottlerocket update operator \ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc7ac\ubd80\ud305\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\uc774\ud130 \ud50c\ub808\uc778"},{"location":"scalability/docs/data-plane.kr/#_1","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc0ac\uc6a9\ud558\ub294 EC2 \uc778\uc2a4\ud134\uc2a4, \ub85c\ub4dc \ubc38\ub7f0\uc11c, \uc2a4\ud1a0\ub9ac\uc9c0 \ubc0f \uae30\ud0c0 API\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc870\uc9c1\ud654\ub97c \uc704\ud574 \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4 \ub97c \ubcc4\ub3c4\uc758 \ud398\uc774\uc9c0\ub85c \uadf8\ub8f9\ud654\ud588\uc73c\uba70 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ud655\uc7a5\uc740 \uc6cc\ud06c\ub85c\ub4dc \uc139\uc158 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \ud655\uc7a5\uc5d0 \uc911\uc810\uc744 \ub461\ub2c8\ub2e4. \uc5ec\ub7ec \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\ud0dd\ud558\ub294 \uac83\uc774 \uace0\uac1d\uc774 \uc9c1\uba74\ud558\ub294 \uac00\uc7a5 \uc5b4\ub824\uc6b4 \uacb0\uc815 \uc911 \ud558\ub098\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc0c1\ud669\uc5d0 \ub9de\ub294 \ub2e8\uc77c \uc194\ub8e8\uc158\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ucef4\ud4e8\ud305 \ud655\uc7a5\uacfc \uad00\ub828\ub41c \uc77c\ubc18\uc801\uc778 \uc704\ud5d8\uc744 \ubc29\uc9c0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uba87 \uac00\uc9c0 \ud301\uc785\ub2c8\ub2e4.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub370\uc774\ud130 \ud50c\ub808\uc778"},{"location":"scalability/docs/data-plane.kr/#_2","text":"\uc218\uace0\ub97c \uc904\uc774\uace0 Kubernetes\uc640 \uae34\ubc00\ud558\uac8c \ud1b5\ud569\ub418\ub294 \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f Karpenter \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uad00\ub9ac\ud615 \uc5c5\uadf8\ub808\uc774\ub4dc \ubc0f \uad6c\uc131\uc5d0 \ub300\ud55c \ucd94\uac00 \uc774\uc810\uacfc \ud568\uaed8 Amazon EC2 Auto Scaling \uadf8\ub8f9\uc758 \uc720\uc5f0\uc131\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kubernetes Cluster Autoscaler \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud655\uc7a5\ud560 \uc218 \uc788\uc73c\uba70 \ub2e4\uc591\ud55c \ucef4\ud4e8\ud305 \uc694\uad6c \uc0ac\ud56d\uc774 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 \uc635\uc158\uc785\ub2c8\ub2e4. Karpenter\ub294 AWS\uc5d0\uc11c \ub9cc\ub4e0 \uc624\ud508 \uc18c\uc2a4 \uc6cc\ud06c\ub85c\ub4dc \ub124\uc774\ud2f0\ube0c \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub7ec\uc785\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc744 \uad00\ub9ac\ud558\uc9c0 \uc54a\uace0\ub3c4 \ub9ac\uc18c\uc2a4 (\uc608: GPU) \uc640 taint \ubc0f tolerations (\uc608: zone spread)\uc5d0 \ub300\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \uae30\ubc18\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130\uc758 \ub178\ub4dc\ub97c \ud655\uc7a5\ud569\ub2c8\ub2e4. \ub178\ub4dc\ub294 EC2\ub85c\ubd80\ud130 \uc9c1\uc811 \uc0dd\uc131\ub418\ubbc0\ub85c \uae30\ubcf8 \ub178\ub4dc \uadf8\ub8f9 \ud560\ub2f9\ub7c9 (\uadf8\ub8f9\ub2f9 450\uac1c \ub178\ub4dc)\uc774 \ud544\uc694 \uc5c6\uc73c\uba70 \uc6b4\uc601 \uc624\ubc84\ud5e4\ub4dc\ub97c \uc904\uc774\uba74\uc11c \uc778\uc2a4\ud134\uc2a4 \uc120\ud0dd \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \uace0\uac1d\uc740 \uac00\ub2a5\ud558\uba74 Karpenter\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\uc790\ub3d9 \ub178\ub4dc \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1"},{"location":"scalability/docs/data-plane.kr/#ec2","text":"\uac01 AWS \ub9ac\uc804\uc5d0\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ubcc4\ub85c \uc0ac\uc6a9 \u200b\u200b\uac00\ub2a5\ud55c \uc778\uc2a4\ud134\uc2a4 \uc218\uac00 \uc81c\ud55c\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud558\ub098\uc758 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\ub9cc \uc0ac\uc6a9\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub9ac\uc804\uc758 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uc5ec \ub178\ub4dc \uc218\ub97c \ud655\uc7a5\ud558\uba74 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc778\uc2a4\ud134\uc2a4\uac00 \uc5c6\ub2e4\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc784\uc758\ub85c \uc81c\ud55c\ud574\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. Karpenter\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud638\ud658\ub418\ub294 \ub2e4\uc591\ud55c \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud558\uba70 \ubcf4\ub958 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d, \uac00\uc6a9\uc131 \ubc0f \ube44\uc6a9\uc744 \uae30\ubc18\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd \uc2dc \uc778\uc2a4\ud134\uc2a4\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4. Provisioner \uc758 karpenter.k8s.aws/instance-category \ud0a4\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \ubaa9\ub85d\uc744 \uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc77c\uad00\ub418\uac8c \ud655\uc7a5\ub420 \uc218 \uc788\ub3c4\ub85d \uc720\uc0ac\ud55c \ud06c\uae30\uc758 \uc720\ud615\uc744 \ud544\uc694\ub85c \ud569\ub2c8\ub2e4. CPU \ubc0f \uba54\ubaa8\ub9ac \ud06c\uae30\ub97c \uae30\uc900\uc73c\ub85c \uc5ec\ub7ec \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uace0 \ub3c5\ub9bd\uc801\uc73c\ub85c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. ec2-instance-selector \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uacfc \ube44\uc2b7\ud55c \ud06c\uae30\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \uc2dd\ubcc4\ud558\uc138\uc694. ec2-instance-selector --service eks --vcpus-min 8 --memory-min 16 a1.2xlarge a1.4xlarge a1.metal c4.4xlarge c4.8xlarge c5.12xlarge c5.18xlarge c5.24xlarge c5.2xlarge c5.4xlarge c5.9xlarge c5.metal","title":"\ub2e4\uc591\ud55c EC2 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 \uc0ac\uc6a9"},{"location":"scalability/docs/data-plane.kr/#api","text":"\uc5b4\ub5a4 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc0ac\uc6a9\ud560\uc9c0 \uacb0\uc815\ud560 \ub54c \ub178\ub4dc \uc218\uac00 \uc801\uace0 \ud06c\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uac78\ub9ac\ub294 \ubd80\ud558\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. \uc2e4\ud589 \uc911\uc778 kubelet\uacfc DaemonSet\uc758 \uc218\uac00 \uc904\uc5b4\ub4e4\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud070 \ub178\ub4dc\ub294 \uc791\uc740 \ub178\ub4dc\ucc98\ub7fc \ucda9\ubd84\ud788 \ud65c\uc6a9\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ud06c\uae30\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131 \ubc0f \ud655\uc7a5\uc131\uc744 \uae30\ubc18\uc73c\ub85c \ud3c9\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. u-24tb1.metal \uc778\uc2a4\ud134\uc2a4 3\uac1c (24TB Memory \ubc0f 448 cores)\uac00 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 3\uac1c\uc758 kubelets\uac00 \uc788\uc73c\uba70 \uae30\ubcf8\uc801\uc73c\ub85c \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud30c\ub4dc\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uac01\uac01 4\uac1c\uc758 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \uc608\uc0c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (4\ucf54\uc5b4 x 110 = \ub178\ub4dc\ub2f9 440\ucf54\uc5b4). \ud074\ub7ec\uc2a4\ud130\uc5d0 3\uac1c\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uc778\uc2a4\ud134\uc2a4 1\uac1c\uac00 \uc911\ub2e8\ub420 \ub54c \ud074\ub7ec\uc2a4\ud130\uc758 1/3\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc73c\ubbc0\ub85c \uc778\uc2a4\ud134\uc2a4 \uc778\uc2dc\ub358\ud2b8\ub97c \ucc98\ub9ac\ud558\ub294 \ub2a5\ub825\uc774 \ub5a8\uc5b4\uc9d1\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc801\uc808\ud558\uac8c \ubc30\uce58\ud560 \uc218 \uc788\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub178\ub4dc \uc694\uad6c \uc0ac\ud56d\uacfc pod spread\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub294 taint, tolerations \ubc0f PodTopologySpread \ub97c \ud1b5\ud574 \ud544\uc694\ud55c \ub9ac\uc18c\uc2a4\uc640 \ud544\uc694\ud55c \uac00\uc6a9\uc131\uc744 \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub4e4\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ubd80\ud558 \uac10\uc18c, \uc6b4\uc601 \uac10\uc18c, \ube44\uc6a9 \uc808\uac10\uc774\ub77c\ub294 \uac00\uc6a9\uc131 \ubaa9\ud45c\ub97c \ucda9\ubd84\ud788 \ud65c\uc6a9\ud560 \uc218 \uc788\uace0 \uac00\uc6a9\uc131 \ubaa9\ud45c\ub97c \ucda9\uc871\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \ud070 \ub178\ub4dc\ub97c \uc120\ud638\ud574\uc57c \ud569\ub2c8\ub2e4. Kubernetes Scheduler\ub294 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0 \uac00\uc6a9 \uc601\uc5ed\uacfc \ud638\uc2a4\ud2b8\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc0b0\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \uc5c6\ub294 \uacbd\uc6b0 Kubernetes Cluster Autoscaler\ub294 \uac01 \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ub178\ub4dc\ub97c \uade0\ub4f1\ud558\uac8c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub2e4\ub978 \uc694\uad6c \uc0ac\ud56d\uc774 \uc9c0\uc815\ub418\uc5b4 \uc788\uc9c0 \uc54a\ub294 \ud55c Karpenter\ub294 \uac00\ub2a5\ud55c \ud55c \ube60\ub974\uace0 \uc800\ub834\ud558\uac8c \ub178\ub4dc\ub97c \ucd94\uac00\ud558\ub824\uace0 \uc2dc\ub3c4\ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub7ec\ub97c \ud1b5\ud574 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubd84\uc0b0\uc2dc\ud0a4\uace0 \uac00\uc6a9 \uc601\uc5ed \uc804\uccb4\uc5d0 \uc0c8 \ub178\ub4dc\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud558\ub824\uba74 TopologySpreadConstraints (topologySpreadConstraints) \ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. spec: topologySpreadConstraints: - maxSkew: 3 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment - maxSkew: 2 topologyKey: \"kubernetes.io/hostname\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment","title":"API \uc11c\ubc84 \ubd80\ud558\ub97c \uc904\uc774\uae30 \uc704\ud574 \ub354 \ud070 \ub178\ub4dc\ub97c \uc120\ud638"},{"location":"scalability/docs/data-plane.kr/#_3","text":"\uc6cc\ud06c\ub85c\ub4dc\ub294 \uc77c\uad00\ub41c \uc131\ub2a5\uacfc \uc608\uce21 \uac00\ub2a5\ud55c \ud655\uc7a5\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \ub178\ub4dc \ud06c\uae30\ub97c \uc815\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. 500m CPU\ub97c \uc694\uccad\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 4 cores \uc778\uc2a4\ud134\uc2a4\uc640 16 cores \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub2e4\ub974\uac8c \uc218\ud589\ub429\ub2c8\ub2e4. T \uc2dc\ub9ac\uc988 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc774 \ubc84\uc2a4\ud2b8 \uac00\ub2a5\ud55c CPU\ub97c \uc0ac\uc6a9\ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc740 \ud53c\ud558\uc138\uc694. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc77c\uad00\ub41c \uc131\ub2a5\uc744 \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc9c0\uc6d0\ub418\ub294 Karpenter \ub808\uc774\ube14 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uc778\uc2a4\ud134\uc2a4 \ud06c\uae30\ub97c \ub300\uc0c1\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kind: deployment ... spec: template: spec: containers: nodeSelector: karpenter.k8s.aws/instance-size: 8xlarge Kubernetes Cluster Autoscaler\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ub808\uc774\ube14 \ub9e4\uce6d\uc744 \uae30\ubc18\uc73c\ub85c node selector\ub97c \ub178\ub4dc \uadf8\ub8f9\uacfc \uc77c\uce58\uc2dc\ucf1c\uc57c \ud569\ub2c8\ub2e4. spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: eks.amazonaws.com/nodegroup operator: In values: - 8-core-node-group # match your node group name","title":"\uc77c\uad00\ub41c \uc6cc\ud06c\ub85c\ub4dc \uc131\ub2a5\uc744 \uc704\ud574 \uc720\uc0ac\ud55c \ub178\ub4dc \ud06c\uae30 \uc0ac\uc6a9"},{"location":"scalability/docs/data-plane.kr/#_4","text":"\ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\uc5d0\ub294 EC2 \uc778\uc2a4\ud134\uc2a4 \ubc0f \uac00\uc6a9 \uc601\uc5ed\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 \ud655\uc7a5\uc131, \uac00\uc6a9\uc131, \uc131\ub2a5\uc774 \ud5a5\uc0c1\ub418\uace0 \ucd1d \ube44\uc6a9\uc774 \uc808\uac10\ub429\ub2c8\ub2e4. \uc624\ud1a0 \uc2a4\ucf00\uc77c\ub9c1 \ud658\uacbd\uc5d0\uc11c \uc5ec\ub7ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ud6a8\uc728\uc801\uc778 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9\uc744 \uc608\uce21\ud558\uae30\uac00 \uadf9\ud788 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. Karpenter \ub294 \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc5d0 \ub530\ub77c \uc628\ub514\ub9e8\ub4dc\ub85c \uc778\uc2a4\ud134\uc2a4\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \ud65c\uc6a9\ub3c4\uc640 \uc720\uc5f0\uc131\uc744 \uadf9\ub300\ud654\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc84c\uc2b5\ub2c8\ub2e4. Karpenter\ub97c \uc0ac\uc6a9\ud558\uba74 \uba3c\uc800 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uac70\ub098 \ud2b9\uc815 \ub178\ub4dc\uc5d0 \ub300\ud55c label taint\ub97c \uad6c\uc131\ud558\uc9c0 \uc54a\uace0\ub3c4 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4 \uc720\ud615\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Karpenter best practices \ub97c \ucc38\uc870\ud558\uc138\uc694. Karpenter provisioner\uc5d0\uc11c consolidation \uc744 \ud65c\uc131\ud654\ud558\uc5ec \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ub178\ub4dc\ub97c \uad50\uccb4\ud574 \ubcf4\uc138\uc694.","title":"\ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9"},{"location":"scalability/docs/data-plane.kr/#amazon-machine-image-ami","text":"Worker \ub178\ub4dc \uad6c\uc131 \uc694\uc18c\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uba74 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58\uc640 Kubernetes API\uc640 \ud638\ud658\ub418\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kublet \uc5c5\ub370\uc774\ud2b8\ub294 Kubernetes \uae30\ub2a5\uc758 \uac00\uc7a5 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\uc774\uc9c0\ub9cc OS, \ucee4\ub110 \ubc0f \ub85c\uceec\uc5d0 \uc124\uce58\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud328\uce58\ub97c \uc790\ub3d9\ud654\ud558\uba74 \ud655\uc7a5\uc5d0 \ub530\ub978 \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc774\ubbf8\uc9c0\uc5d0\ub294 \ucd5c\uc2e0 Amazon EKS optimized Amazon Linux 2 \ub610\ub294 Amazon EKS optimized Bottlerocket AMI \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Karpenter\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 AMI \ub97c \uc790\ub3d9\uc73c\ub85c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc0c8 \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud569\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \ub178\ub4dc \uadf8\ub8f9 \uc5c5\ub370\uc774\ud2b8 \uc911\uc5d0 AMI\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0\ub9cc \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd \uc2dc\uc5d0\ub294 AMI ID\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \uacbd\uc6b0 \ud328\uce58 \ub9b4\ub9ac\uc2a4\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub418\uba74 Auto Scaling Group (ASG) \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc0c8 AMI ID\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. AMI \ub9c8\uc774\ub108 \ubc84\uc804 (\uc608: 1.23.5~1.24.3)\uc740 EKS \ucf58\uc194 \ubc0f API\uc5d0\uc11c \ub178\ub4dc \uadf8\ub8f9 \uc5c5\uadf8\ub808\uc774\ub4dc \ub85c \uc81c\uacf5\ub429\ub2c8\ub2e4. \ud328\uce58 \ub9b4\ub9ac\uc2a4 \ubc84\uc804 (\uc608: 1.23.5 ~ 1.23.6)\uc740 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc\ub85c \uc81c\uacf5\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. AMI \ud328\uce58 \ub9b4\ub9ac\uc2a4\ub97c \ud1b5\ud574 \ub178\ub4dc \uadf8\ub8f9\uc744 \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub824\uba74 \uc0c8 \uc2dc\uc791 \ud15c\ud50c\ub9bf \ubc84\uc804\uc744 \uc0dd\uc131\ud558\uace0 \ub178\ub4dc \uadf8\ub8f9\uc774 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0c8 AMI \ub9b4\ub9ac\uc2a4\ub85c \uad50\uccb4\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \ud398\uc774\uc9c0 \uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucd5c\uc2e0 AMI\ub97c \ucc3e\uac70\ub098 AWS CLI\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws ssm get-parameter \\ --name /aws/service/eks/optimized-ami/1.24/amazon-linux-2/recommended/image_id \\ --query \"Parameter.Value\" \\ --output text","title":"Amazon Machine Image (AMI) \uc5c5\ub370\uc774\ud2b8 \uc790\ub3d9\ud654"},{"location":"scalability/docs/data-plane.kr/#ebs","text":"EBS \ubcfc\ub968\uc5d0\ub294 \ubcfc\ub968 \uc720\ud615 (\uc608: gp3) \ubc0f \ub514\uc2a4\ud06c \ud06c\uae30\uc5d0 \ub530\ub978 \uc785/\ucd9c\ub825 (I/O) \ud560\ub2f9\ub7c9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud638\uc2a4\ud2b8\uc640 \ub2e8\uc77c EBS \ub8e8\ud2b8 \ubcfc\ub968\uc744 \uacf5\uc720\ud558\ub294 \uacbd\uc6b0 \uc804\uccb4 \ud638\uc2a4\ud2b8\uc758 \ub514\uc2a4\ud06c \ud560\ub2f9\ub7c9\uc774 \uace0\uac08\ub418\uace0 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uac00\uc6a9 \uc6a9\ub7c9\uc744 \uae30\ub2e4\ub9ac\uac8c \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc751 \uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \uc624\ubc84\ub808\uc774 \ud30c\ud2f0\uc158\uc5d0 \ud30c\uc77c\uc744 \uc4f0\uace0, \ud638\uc2a4\ud2b8\uc5d0\uc11c \ub85c\uceec \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud558\uace0, \uc0ac\uc6a9\ub41c \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8\uc5d0 \ub530\ub77c \ud45c\uc900 \ucd9c\ub825 (STDOUT)\uc5d0 \ub85c\uadf8\uc628\ud560 \ub54c\ub3c4 \ub514\uc2a4\ud06c\uc5d0 \uae30\ub85d\ud569\ub2c8\ub2e4. Disk I/O \uc18c\ubaa8\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ub450 \ubc88\uc9f8 \ubcfc\ub968\uc744 \ucee8\ud14c\uc774\ub108 state \ud3f4\ub354 (\uc608: /run/containerd)\uc5d0 \ub9c8\uc6b4\ud2b8\ud558\uace0, \uc6cc\ud06c\ub85c\ub4dc \uc2a4\ud1a0\ub9ac\uc9c0\uc6a9\uc73c\ub85c \ubcc4\ub3c4\uc758 EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\uace0, \ubd88\ud544\uc694\ud55c \ub85c\uceec \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. eksctl \uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub450 \ubc88\uc9f8 \ubcfc\ub968\uc744 \ub9c8\uc6b4\ud2b8\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc131\uc758 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. managedNodeGroups: - name: al2-workers amiFamily: AmazonLinux2 desiredCapacity: 2 volumeSize: 80 additionalVolumes: - volumeName: '/dev/sdz' volumeSize: 100 preBootstrapCommands: - \"systemctl stop containerd\" - \"mkfs -t ext4 /dev/nvme1n1\" - \"rm -rf /var/lib/containerd/*\" - \"mount /dev/nvme1n1 /var/lib/containerd/\" - \"systemctl start containerd\" Terraform\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uadf8\ub8f9\uc744 \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uacbd\uc6b0 EKS Blueprints for terraform \uc758 \uc608\ub97c \ucc38\uc870\ud558\uc138\uc694. Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub294 \uacbd\uc6b0 \ub178\ub4dc \uc0ac\uc6a9\uc790 \ub370\uc774\ud130\uc640 \ud568\uaed8 blockDeviceMappings \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uac00 \ubcfc\ub968\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EBS \ubcfc\ub968\uc744 \ud30c\ub4dc\uc5d0 \uc9c1\uc811 \ud0d1\uc7ac\ud558\ub824\uba74 AWS EBS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \uc0ac\uc6a9\ud558\uace0 \uc2a4\ud1a0\ub9ac\uc9c0 \ud074\ub798\uc2a4\uac00 \uc788\ub294 \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. --- apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: ebs-sc provisioner: ebs.csi.aws.com volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: ebs-claim spec: accessModes: - ReadWriteOnce storageClassName: ebs-sc resources: requests: storage: 4Gi --- apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: public.ecr.aws/docker/library/nginx volumeMounts: - name: persistent-storage mountPath: /data volumes: - name: persistent-storage persistentVolumeClaim: claimName: ebs-claim","title":"\ucee8\ud14c\uc774\ub108\uc5d0 \uc5ec\ub7ec EBS \ubcfc\ub968 \uc0ac\uc6a9"},{"location":"scalability/docs/data-plane.kr/#ebs-ebs","text":"EBS\ub294 \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc601\uad6c \uc2a4\ud1a0\ub9ac\uc9c0\ub97c \ud655\ubcf4\ud558\ub294 \uac00\uc7a5 \uc26c\uc6b4 \ubc29\ubc95 \uc911 \ud558\ub098\uc774\uc9c0\ub9cc \ud655\uc7a5\uc131 \uc81c\ud55c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc5d0\ub294 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 EBS \ubcfc\ub968 \uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc2e4\ud589\ud574\uc57c \ud558\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615\uc744 \uc120\uc5b8\ud558\uace0 Kubernetes taints\uac00 \uc788\ub294 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uc758 \ubcf5\uc81c\ubcf8 \uc218\ub97c \uc81c\ud55c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c EBS \ubcfc\ub968\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 EBS \uc5f0\uacb0 \uc81c\ud55c\uc774 \ub0ae\uc740 \uc778\uc2a4\ud134\uc2a4\ub97c \ud53c\ud558\uc138\uc694."},{"location":"scalability/docs/data-plane.kr/#_5","text":"\ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ub514\ubc84\uadf8 \ub85c\uae45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud558\uc9c0 \uc54a\uace0 \ub514\uc2a4\ud06c\ub97c \uc790\uc8fc \uc77d\uace0 \uc4f0\ub294 \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654\ud558\uc5ec \ubd88\ud544\uc694\ud55c \ub85c\uceec \ub85c\uae45\uc744 \ud53c\ud558\uc138\uc694. Journald\ub294 \ub85c\uadf8 \ubc84\ud37c\ub97c \uba54\ubaa8\ub9ac\uc5d0 \uc720\uc9c0\ud558\uace0 \uc8fc\uae30\uc801\uc73c\ub85c \ub514\uc2a4\ud06c\uc5d0 \ud50c\ub7ec\uc2dc\ud558\ub294 \ub85c\uceec \ub85c\uae45 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. Journald\ub294 \ubaa8\ub4e0 \ud589\uc744 \uc989\uc2dc \ub514\uc2a4\ud06c\uc5d0 \uae30\ub85d\ud558\ub294 syslog\ubcf4\ub2e4 \uc120\ud638\ub429\ub2c8\ub2e4. syslog\ub97c \ube44\ud65c\uc131\ud654\ud558\uba74 \ud544\uc694\ud55c \ucd1d \uc2a4\ud1a0\ub9ac\uc9c0 \uc6a9\ub7c9\ub3c4 \uc904\uc5b4\ub4e4\uace0 \ubcf5\uc7a1\ud55c \ub85c\uadf8 \uc21c\ud658 \uaddc\uce59\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. syslog\ub97c \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 cloud-init \uad6c\uc131\uc5d0 \ub2e4\uc74c \ucf54\ub4dc \uc870\uac01\uc744 \ucd94\uac00\ud558\uba74 \ub429\ub2c8\ub2e4. runcmd: - [ systemctl, disable, --now, syslog.service ]","title":"\ub514\uc2a4\ud06c\uc5d0 \ubd88\ud544\uc694\ud55c \ub85c\uae45\uc744 \ube44\ud65c\uc131\ud654"},{"location":"scalability/docs/data-plane.kr/#os-in-place","text":"Attention \uc778\uc2a4\ud134\uc2a4 \ud328\uce58\ub294 \ud544\uc694\ud55c \uacbd\uc6b0\uc5d0\ub9cc \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon\uc5d0\uc11c\ub294 \uc778\ud504\ub77c\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uac83\uc73c\ub85c \ucde8\uae09\ud558\uace0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub3d9\uc77c\ud55c \ubc29\uc2dd\uc73c\ub85c \ud558\uc704 \ud658\uacbd\uc744 \ud1b5\ud574 \uc2b9\uaca9\ub418\ub294 \uc5c5\ub370\uc774\ud2b8\ub97c \ucca0\uc800\ud788 \ud14c\uc2a4\ud2b8\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc740 \uc774\uac83\uc774 \ubd88\uac00\ub2a5\ud560 \ub54c \uc801\uc6a9\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc911\ub2e8\ud558\uc9c0 \uc54a\uace0 \uae30\uc874 Linux \ud638\uc2a4\ud2b8\uc5d0 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud558\ub294 \ub370 \uba87 \ucd08 \ubc16\uc5d0 \uac78\ub9ac\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c \ucc28\ub2e8(cordoning), \ub4dc\ub808\uc774\ub2dd(draining) \ub610\ub294 \uad50\uccb4(replacing)\ud558\uc9c0 \uc54a\uace0\ub3c4 \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud558\uace0 \uac80\uc99d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud558\ub824\uba74 \uba3c\uc800 \uc0c8 AMI\ub97c \uc0dd\uc131, \uac80\uc99d \ubc0f \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 \ub300\uccb4 \uc778\uc2a4\ud134\uc2a4\uac00 \uc0dd\uc131\ub418\uc5b4\uc57c \ud558\uba70, \uc774\uc804 \uc778\uc2a4\ud134\uc2a4\ub294 \ucc28\ub2e8 \ubc0f \uc81c\uac70\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc0c8 \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc0dd\uc131\ud558\uace0 \ud655\uc778\ud558\uace0 \ud328\uce58\uac00 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud574 \ubc18\ubcf5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc911\ub2e8\ud558\uc9c0 \uc54a\uace0 \uc778\uc2a4\ud134\uc2a4\ub97c \uc548\uc804\ud558\uac8c \uad50\uccb4\ud558\ub824\uba74 \uba87 \uc2dc\uac04, \uba70\uce60 \ub610\ub294 \uba87 \uc8fc\uac00 \uac78\ub9bd\ub2c8\ub2e4. Amazon\uc5d0\uc11c\ub294 \uc790\ub3d9\ud654\ub41c \uc120\uc5b8\uc801 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uad6c\ucd95, \ud14c\uc2a4\ud2b8 \ubc0f \uc2b9\uaca9\ub418\ub294 \ubd88\ubcc0 \uc778\ud504\ub77c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc744 \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc2dc\uc2a4\ud15c\uc5d0 \uc2e0\uc18d\ud558\uac8c \ud328\uce58\ub97c \uc801\uc6a9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc2dc\uc2a4\ud15c\uc744 \ud328\uce58\ud558\uace0 \uc0c8 AMI\uac00 \ucd9c\uc2dc\ub418\uba74 \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c \ud328\uce58\uc640 \uad50\uccb4 \uc0ac\uc774\uc758 \uc2dc\uac04 \ucc28\uc774\uac00 \ud06c\uae30 \ub54c\ubb38\uc5d0 AWS Systems Manager Patch Manager \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud544\uc694\ud55c \uacbd\uc6b0 \ub178\ub4dc \ud328\uce58\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4. \ub178\ub4dc \ud328\uce58\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\ub97c \uc2e0\uc18d\ud558\uac8c \ucd9c\uc2dc\ud558\uace0 AMI\uac00 \uc5c5\ub370\uc774\ud2b8\ub41c \ud6c4 \uc815\uae30\uc801\uc778 \uc77c\uc815\uc5d0 \ub530\ub77c \uc778\uc2a4\ud134\uc2a4\ub97c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Flatcar Container Linux \ub610\ub294 Bottlerocket OS \uc640 \uac19\uc740 \uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc774 \uc788\ub294 \uc6b4\uc601 \uccb4\uc81c\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc6b4\uc601 \uccb4\uc81c\uc5d0\uc11c \uc791\ub3d9\ud558\ub294 \uc5c5\ub370\uc774\ud2b8 \uc5f0\uc0b0\uc790\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Flatcar Linux update operator \ubc0f Bottlerocket update operator \ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \uc7ac\ubd80\ud305\ud558\uc5ec \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud569\ub2c8\ub2e4.","title":"OS \uc5c5\ub370\uc774\ud2b8 \uc18d\ub3c4\uac00 \ud544\uc694\ud560 \ub54c in place \ubc29\uc2dd\uc73c\ub85c \uc778\uc2a4\ud134\uc2a4 \ud328\uce58"},{"location":"scalability/docs/data-plane/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Kubernetes Data Plane \u00b6 The Kubernetes Data Plane includes EC2 instances, load balancers, storage, and other APIs used by the Kubernetes Control Plane. For organization purposes we grouped cluster services in a separate page and load balancer scaling can be found in the workloads section . This section will focus on scaling compute resources. Selecting EC2 instance types is possibly one of the hardest decisions customers face because in clusters with multiple workloads. There is no one-size-fits all solution. Here are some tips to help you avoid common pitfalls with scaling compute. Automatic node autoscaling \u00b6 We recommend you use node autoscaling that reduces toil and integrates deeply with Kubernetes. Managed node groups and Karpenter are recomended for large scale clusters. Managed node groups will give you the flexibility of Amazon EC2 Auto Scaling groups with added benefits for managed upgrades and configuration. It can be scaled with the Kubernetes Cluster Autoscaler and is a common option for clusters that have a variety of compute needs. Karpenter is an open source, workload-native node autoscaler created by AWS. It scales nodes in a cluster based on the workload requirements for resources (e.g. GPU) and taints and tolerations (e.g. zone spread) without managing node groups. Nodes are created directly from EC2 which avoids default node group quotas\u2014450 nodes per group\u2014and provides greater instance selection flexibility with less operational overhead. We recommend customers use Karpenter when possible. Use many different EC2 instance types \u00b6 Each AWS region has a limited number of available instances per instance type. If you create a cluster that uses only one instance type and scale the number of nodes beyond the capacity of the region you will receive an error that no instances are available. To avoid this issue you should not arbitrarily limit the type of instances that can be use in your cluster. Karpenter will use a broad set of compatible instance types by default and will pick an instance at provisioning time based on pending workload requirements, availability, and cost. You can broaden the list of instance types used in the karpenter.k8s.aws/instance-category key of the provisioner . The Kubernetes Cluster Autoscaler requires node groups to be similarly sized so they can be consistently scaled. You should create multiple groups based on CPU and memory size and scale them independently. Use the ec2-instance-selector to identify instances that are similarly sized for your node groups. ec2-instance-selector --service eks --vcpus-min 8 --memory-min 16 a1.2xlarge a1.4xlarge a1.metal c4.4xlarge c4.8xlarge c5.12xlarge c5.18xlarge c5.24xlarge c5.2xlarge c5.4xlarge c5.9xlarge c5.metal Prefer larger nodes to reduce API server load \u00b6 When deciding what instance types to use, fewer, large nodes will put less load on the Kubernetes Control Plane because there will be fewer kubelets and DaemonSets running. However, large nodes may not be utilized fully like smaller nodes. Node sizes should be evaluated based on your workload availability and scale requirements. A cluster with three u-24tb1.metal instances (24 TB memory and 448 cores) has 3 kublets, and would be limited to 110 pods per node by default. If your pods use 4 cores each then this might be expected (4 cores x 110 = 440 cores/node). With a 3 node cluster your ability to handle an instance incident would be low because 1 instance outage could impact 1/3 of the cluster. You should specify node requirements and pod spread in your workloads so the Kubernetes scheduler can place workloads properly. Workloads should define the resources they need and the availability required via taints, tolerations, and PodTopologySpread . They should prefer the largest nodes that can be fully utilized and meet availability goals to reduce control plane load, lower operations, and reduce cost. The Kubernetes Scheduler will automatically try to spread workloads across availablility zones and hosts if resources are available. If no capacity is available the Kubernetes Cluster Autoscaler will attempt to add nodes in each Availability Zone evenly. Karpenter will attempt to add nodes as quickly and cheaply as possible unless the workload specifies other requirements. To force workloads to spread with the scheduler and new nodes to be created across availability zones you should use topologySpreadConstraints: spec: topologySpreadConstraints: - maxSkew: 3 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment - maxSkew: 2 topologyKey: \"kubernetes.io/hostname\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment Use similar node sizes for consistent workload performance \u00b6 Workloads should define what size nodes they need to be run on to allow consistent performance and predictable scaling. A workload requesting 500m CPU will perform differently on an instance with 4 cores vs one with 16 cores. Avoid instance types that use burstable CPUs like T series instances. To make sure your workloads get consistent performance a workload can use the supported Karpenter labels to target specific instances sizes. kind: deployment ... spec: template: spec: containers: nodeSelector: karpenter.k8s.aws/instance-size: 8xlarge Workloads being scheduled in a cluster with the Kubernetes Cluster Autoscaler should match a node selector to node groups based on label matching. spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: eks.amazonaws.com/nodegroup operator: In values: - 8-core-node-group # match your node group name Use compute resources efficiently \u00b6 Compute resources include EC2 instances and availability zones. Using compute resources effectively will increase your scalability, availability, performance, and reduce your total cost. Efficient resource usage is extremely difficult to predict in an autoscaling environment with multiple applications. Karpenter was created to provision instances on-demand based on the workload needs to maximize utilization and flexibility. Karpenter allows workloads to declare the type of compute resources it needs without first creating node groups or configuring label taints for specific nodes. See the Karpenter best practices for more information. Consider enabling consolidation in your Karpenter provisioner to replace nodes that are under utilized. Automate Amazon Machine Image (AMI) updates \u00b6 Keeping worker node components up to date will make sure you have the latest security patches and compatible features with the Kubernetes API. Updating the kublet is the most important component for Kubernetes functionality, but automating OS, kernel, and locally installed application patches will reduce maintenance as you scale. It is recommended that you use the latest Amazon EKS optimized Amazon Linux 2 or Amazon EKS optimized Bottlerocket AMI for your node image. Karpenter will automatically use the latest available AMI to provision new nodes in the cluster. Managed node groups will update the AMI during a node group update but will not update the AMI ID at node provisioning time. For Managed Node Groups you need to update the Auto Scaling Group (ASG) launch template with new AMI IDs when they are available for patch releases. AMI minor versions (e.g. 1.23.5 to 1.24.3) will be available in the EKS console and API as upgrades for the node group . Patch release versions (e.g. 1.23.5 to 1.23.6) will not be presented as upgrades for the node groups. If you want to keep your node group up to date with AMI patch releases you need to create new launch template version and let the node group replace instances with the new AMI release. You can find the latest available AMI from this page or use the AWS CLI. aws ssm get-parameter \\ --name /aws/service/eks/optimized-ami/1.24/amazon-linux-2/recommended/image_id \\ --query \"Parameter.Value\" \\ --output text Use multiple EBS volumes for containers \u00b6 EBS volumes have input/output (I/O) quota based on the type of volume (e.g. gp3) and the size of the disk. If your applications share a single EBS root volume with the host this can exhaust the disk quota for the entire host and cause other applications to wait for available capacity. Applications write to disk if they write files to their overlay partition, mount a local volume from the host, and also when they log to standard out (STDOUT) depending on the logging agent used. To avoid disk I/O exhaustion you should mount a second volume to the container state folder (e.g. /run/containerd), use separate EBS volumes for workload storage, and disable unnecessary local logging. To mount a second volume to your EC2 instances using eksctl you can use a node group with this configuration: managedNodeGroups: - name: al2-workers amiFamily: AmazonLinux2 desiredCapacity: 2 volumeSize: 80 additionalVolumes: - volumeName: '/dev/sdz' volumeSize: 100 preBootstrapCommands: - \"systemctl stop containerd\" - \"mkfs -t ext4 /dev/nvme1n1\" - \"rm -rf /var/lib/containerd/*\" - \"mount /dev/nvme1n1 /var/lib/containerd/\" - \"systemctl start containerd\" If you are using terraform to provision your node groups please see examples in EKS Blueprints for terraform . If you are using Karpenter to provision nodes you can use blockDeviceMappings with node user-data to add additional volumes. To mount an EBS volume directly to your pod you should use the AWS EBS CSI driver and consume a volume with a storage class. --- apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: ebs-sc provisioner: ebs.csi.aws.com volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: ebs-claim spec: accessModes: - ReadWriteOnce storageClassName: ebs-sc resources: requests: storage: 4Gi --- apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: public.ecr.aws/docker/library/nginx volumeMounts: - name: persistent-storage mountPath: /data volumes: - name: persistent-storage persistentVolumeClaim: claimName: ebs-claim Avoid instances with low EBS attach limits if workloads use EBS volumes \u00b6 EBS is one of the easiest ways for workloads to have persistent storage, but it also comes with scalability limitations. Each instance type has a maximum number of EBS volumes that can be attached . Workloads need to declare what instance types they should run on and limit the number of replicas on a single instance with Kubernetes taints. Disable unnecessary logging to disk \u00b6 Avoid unnecessary local logging by not running your applications with debug logging in production and disabling logging that reads and writes to disk frequently. Journald is the local logging service that keeps a log buffer in memory and flushes to disk periodically. Journald is preferred over syslog which logs every line immediately to disk. Disabling syslog also lowers the total amount of storage you need and avoids needing complicated log rotation rules. To disable syslog you can add the following snippet to your cloud-init configuration: runcmd: - [ systemctl, disable, --now, syslog.service ] Patch instances in place when OS update speed is a necessity \u00b6 Attention Patching instances in place should only be done when required. Amazon recommends treating infrastructure as immutable and thoroughly testing updates that are promoted through lower environments the same way applications are. This section applies when that is not possible. It takes seconds to install a package on an existing Linux host without disrupting containerized workloads. The package can be installed and validated without cordoning, draining, or replacing the instance. To replace an instance you first need to create, validate, and distribute new AMIs. The instance needs to have a replacement created, and the old instance needs to be cordoned and drained. Then workloads need to be created on the new instance, verified, and repeated for all instances that need to be patched. It takes hours, days, or weeks to replace instances safely without disrupting workloads. Amazon recommends using immutable infrastructure that is built, tested, and promoted from an automated, declarative system, but if you have a requirement to patch systems quickly then you will need to patch systems in place and replace them as new AMIs are made available. Because of the large time differential between patching and replacing systems we recommend using AWS Systems Manager Patch Manager to automate patching nodes when required to do so. Patching nodes will allow you to quickly roll out security updates and replace the instances on a regular schedule after your AMI has been updated. If you are using an operating system with a read-only root file system like Flatcar Container Linux or Bottlerocket OS we recommend using the update operators that work with those operating systems. The Flatcar Linux update operator and Bottlerocket update operator will reboot instances to keep nodes up to date automatically.","title":"Data Plane ({'name': 'English', 'build': True})"},{"location":"scalability/docs/data-plane/#kubernetes-data-plane","text":"The Kubernetes Data Plane includes EC2 instances, load balancers, storage, and other APIs used by the Kubernetes Control Plane. For organization purposes we grouped cluster services in a separate page and load balancer scaling can be found in the workloads section . This section will focus on scaling compute resources. Selecting EC2 instance types is possibly one of the hardest decisions customers face because in clusters with multiple workloads. There is no one-size-fits all solution. Here are some tips to help you avoid common pitfalls with scaling compute.","title":"Kubernetes Data Plane"},{"location":"scalability/docs/data-plane/#automatic-node-autoscaling","text":"We recommend you use node autoscaling that reduces toil and integrates deeply with Kubernetes. Managed node groups and Karpenter are recomended for large scale clusters. Managed node groups will give you the flexibility of Amazon EC2 Auto Scaling groups with added benefits for managed upgrades and configuration. It can be scaled with the Kubernetes Cluster Autoscaler and is a common option for clusters that have a variety of compute needs. Karpenter is an open source, workload-native node autoscaler created by AWS. It scales nodes in a cluster based on the workload requirements for resources (e.g. GPU) and taints and tolerations (e.g. zone spread) without managing node groups. Nodes are created directly from EC2 which avoids default node group quotas\u2014450 nodes per group\u2014and provides greater instance selection flexibility with less operational overhead. We recommend customers use Karpenter when possible.","title":"Automatic node autoscaling"},{"location":"scalability/docs/data-plane/#use-many-different-ec2-instance-types","text":"Each AWS region has a limited number of available instances per instance type. If you create a cluster that uses only one instance type and scale the number of nodes beyond the capacity of the region you will receive an error that no instances are available. To avoid this issue you should not arbitrarily limit the type of instances that can be use in your cluster. Karpenter will use a broad set of compatible instance types by default and will pick an instance at provisioning time based on pending workload requirements, availability, and cost. You can broaden the list of instance types used in the karpenter.k8s.aws/instance-category key of the provisioner . The Kubernetes Cluster Autoscaler requires node groups to be similarly sized so they can be consistently scaled. You should create multiple groups based on CPU and memory size and scale them independently. Use the ec2-instance-selector to identify instances that are similarly sized for your node groups. ec2-instance-selector --service eks --vcpus-min 8 --memory-min 16 a1.2xlarge a1.4xlarge a1.metal c4.4xlarge c4.8xlarge c5.12xlarge c5.18xlarge c5.24xlarge c5.2xlarge c5.4xlarge c5.9xlarge c5.metal","title":"Use many different EC2 instance types"},{"location":"scalability/docs/data-plane/#prefer-larger-nodes-to-reduce-api-server-load","text":"When deciding what instance types to use, fewer, large nodes will put less load on the Kubernetes Control Plane because there will be fewer kubelets and DaemonSets running. However, large nodes may not be utilized fully like smaller nodes. Node sizes should be evaluated based on your workload availability and scale requirements. A cluster with three u-24tb1.metal instances (24 TB memory and 448 cores) has 3 kublets, and would be limited to 110 pods per node by default. If your pods use 4 cores each then this might be expected (4 cores x 110 = 440 cores/node). With a 3 node cluster your ability to handle an instance incident would be low because 1 instance outage could impact 1/3 of the cluster. You should specify node requirements and pod spread in your workloads so the Kubernetes scheduler can place workloads properly. Workloads should define the resources they need and the availability required via taints, tolerations, and PodTopologySpread . They should prefer the largest nodes that can be fully utilized and meet availability goals to reduce control plane load, lower operations, and reduce cost. The Kubernetes Scheduler will automatically try to spread workloads across availablility zones and hosts if resources are available. If no capacity is available the Kubernetes Cluster Autoscaler will attempt to add nodes in each Availability Zone evenly. Karpenter will attempt to add nodes as quickly and cheaply as possible unless the workload specifies other requirements. To force workloads to spread with the scheduler and new nodes to be created across availability zones you should use topologySpreadConstraints: spec: topologySpreadConstraints: - maxSkew: 3 topologyKey: \"topology.kubernetes.io/zone\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment - maxSkew: 2 topologyKey: \"kubernetes.io/hostname\" whenUnsatisfiable: ScheduleAnyway labelSelector: matchLabels: dev: my-deployment","title":"Prefer larger nodes to reduce API server load"},{"location":"scalability/docs/data-plane/#use-similar-node-sizes-for-consistent-workload-performance","text":"Workloads should define what size nodes they need to be run on to allow consistent performance and predictable scaling. A workload requesting 500m CPU will perform differently on an instance with 4 cores vs one with 16 cores. Avoid instance types that use burstable CPUs like T series instances. To make sure your workloads get consistent performance a workload can use the supported Karpenter labels to target specific instances sizes. kind: deployment ... spec: template: spec: containers: nodeSelector: karpenter.k8s.aws/instance-size: 8xlarge Workloads being scheduled in a cluster with the Kubernetes Cluster Autoscaler should match a node selector to node groups based on label matching. spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: eks.amazonaws.com/nodegroup operator: In values: - 8-core-node-group # match your node group name","title":"Use similar node sizes for consistent workload performance"},{"location":"scalability/docs/data-plane/#use-compute-resources-efficiently","text":"Compute resources include EC2 instances and availability zones. Using compute resources effectively will increase your scalability, availability, performance, and reduce your total cost. Efficient resource usage is extremely difficult to predict in an autoscaling environment with multiple applications. Karpenter was created to provision instances on-demand based on the workload needs to maximize utilization and flexibility. Karpenter allows workloads to declare the type of compute resources it needs without first creating node groups or configuring label taints for specific nodes. See the Karpenter best practices for more information. Consider enabling consolidation in your Karpenter provisioner to replace nodes that are under utilized.","title":"Use compute resources efficiently"},{"location":"scalability/docs/data-plane/#automate-amazon-machine-image-ami-updates","text":"Keeping worker node components up to date will make sure you have the latest security patches and compatible features with the Kubernetes API. Updating the kublet is the most important component for Kubernetes functionality, but automating OS, kernel, and locally installed application patches will reduce maintenance as you scale. It is recommended that you use the latest Amazon EKS optimized Amazon Linux 2 or Amazon EKS optimized Bottlerocket AMI for your node image. Karpenter will automatically use the latest available AMI to provision new nodes in the cluster. Managed node groups will update the AMI during a node group update but will not update the AMI ID at node provisioning time. For Managed Node Groups you need to update the Auto Scaling Group (ASG) launch template with new AMI IDs when they are available for patch releases. AMI minor versions (e.g. 1.23.5 to 1.24.3) will be available in the EKS console and API as upgrades for the node group . Patch release versions (e.g. 1.23.5 to 1.23.6) will not be presented as upgrades for the node groups. If you want to keep your node group up to date with AMI patch releases you need to create new launch template version and let the node group replace instances with the new AMI release. You can find the latest available AMI from this page or use the AWS CLI. aws ssm get-parameter \\ --name /aws/service/eks/optimized-ami/1.24/amazon-linux-2/recommended/image_id \\ --query \"Parameter.Value\" \\ --output text","title":"Automate Amazon Machine Image (AMI) updates"},{"location":"scalability/docs/data-plane/#use-multiple-ebs-volumes-for-containers","text":"EBS volumes have input/output (I/O) quota based on the type of volume (e.g. gp3) and the size of the disk. If your applications share a single EBS root volume with the host this can exhaust the disk quota for the entire host and cause other applications to wait for available capacity. Applications write to disk if they write files to their overlay partition, mount a local volume from the host, and also when they log to standard out (STDOUT) depending on the logging agent used. To avoid disk I/O exhaustion you should mount a second volume to the container state folder (e.g. /run/containerd), use separate EBS volumes for workload storage, and disable unnecessary local logging. To mount a second volume to your EC2 instances using eksctl you can use a node group with this configuration: managedNodeGroups: - name: al2-workers amiFamily: AmazonLinux2 desiredCapacity: 2 volumeSize: 80 additionalVolumes: - volumeName: '/dev/sdz' volumeSize: 100 preBootstrapCommands: - \"systemctl stop containerd\" - \"mkfs -t ext4 /dev/nvme1n1\" - \"rm -rf /var/lib/containerd/*\" - \"mount /dev/nvme1n1 /var/lib/containerd/\" - \"systemctl start containerd\" If you are using terraform to provision your node groups please see examples in EKS Blueprints for terraform . If you are using Karpenter to provision nodes you can use blockDeviceMappings with node user-data to add additional volumes. To mount an EBS volume directly to your pod you should use the AWS EBS CSI driver and consume a volume with a storage class. --- apiVersion: storage.k8s.io/v1 kind: StorageClass metadata: name: ebs-sc provisioner: ebs.csi.aws.com volumeBindingMode: WaitForFirstConsumer --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: ebs-claim spec: accessModes: - ReadWriteOnce storageClassName: ebs-sc resources: requests: storage: 4Gi --- apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: public.ecr.aws/docker/library/nginx volumeMounts: - name: persistent-storage mountPath: /data volumes: - name: persistent-storage persistentVolumeClaim: claimName: ebs-claim","title":"Use multiple EBS volumes for containers"},{"location":"scalability/docs/data-plane/#avoid-instances-with-low-ebs-attach-limits-if-workloads-use-ebs-volumes","text":"EBS is one of the easiest ways for workloads to have persistent storage, but it also comes with scalability limitations. Each instance type has a maximum number of EBS volumes that can be attached . Workloads need to declare what instance types they should run on and limit the number of replicas on a single instance with Kubernetes taints.","title":"Avoid instances with low EBS attach limits if workloads use EBS volumes"},{"location":"scalability/docs/data-plane/#disable-unnecessary-logging-to-disk","text":"Avoid unnecessary local logging by not running your applications with debug logging in production and disabling logging that reads and writes to disk frequently. Journald is the local logging service that keeps a log buffer in memory and flushes to disk periodically. Journald is preferred over syslog which logs every line immediately to disk. Disabling syslog also lowers the total amount of storage you need and avoids needing complicated log rotation rules. To disable syslog you can add the following snippet to your cloud-init configuration: runcmd: - [ systemctl, disable, --now, syslog.service ]","title":"Disable unnecessary logging to disk"},{"location":"scalability/docs/data-plane/#patch-instances-in-place-when-os-update-speed-is-a-necessity","text":"Attention Patching instances in place should only be done when required. Amazon recommends treating infrastructure as immutable and thoroughly testing updates that are promoted through lower environments the same way applications are. This section applies when that is not possible. It takes seconds to install a package on an existing Linux host without disrupting containerized workloads. The package can be installed and validated without cordoning, draining, or replacing the instance. To replace an instance you first need to create, validate, and distribute new AMIs. The instance needs to have a replacement created, and the old instance needs to be cordoned and drained. Then workloads need to be created on the new instance, verified, and repeated for all instances that need to be patched. It takes hours, days, or weeks to replace instances safely without disrupting workloads. Amazon recommends using immutable infrastructure that is built, tested, and promoted from an automated, declarative system, but if you have a requirement to patch systems quickly then you will need to patch systems in place and replace them as new AMIs are made available. Because of the large time differential between patching and replacing systems we recommend using AWS Systems Manager Patch Manager to automate patching nodes when required to do so. Patching nodes will allow you to quickly roll out security updates and replace the instances on a regular schedule after your AMI has been updated. If you are using an operating system with a read-only root file system like Flatcar Container Linux or Bottlerocket OS we recommend using the update operators that work with those operating systems. The Flatcar Linux update operator and Bottlerocket update operator will reboot instances to keep nodes up to date automatically.","title":"Patch instances in place when OS update speed is a necessity"},{"location":"scalability/docs/index.kr/","text":"{'name': 'English', 'build': True} EKS Scalability best practices \u00b6 \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 EKS \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub300\ud55c \uc870\uc5b8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud558\ub294 \ubaa9\uc801\uc740 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\ub7c9\uc744 \ucd5c\ub300\ud654\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ub300\uaddc\ubaa8 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc5d0 \ube44\ud574 \uc6b4\uc601 \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc9c0\ub9cc \ub2e4\uc911 \ub9ac\uc804 \ubc30\ud3ec, \ud14c\ub10c\ud2b8 \uaca9\ub9ac, \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ub4f1\uc758 \uce21\uba74\uc5d0\uc11c \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub85c \ud655\uc7a5\uc131\uc744 \uadf9\ub300\ud654\ud558\ub294 \ubc29\ubc95\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd9c \uac83\uc785\ub2c8\ub2e4. \uac00\uc774\ub4dc \uc0ac\uc6a9\ubc95 \u00b6 \ud574\ub2f9 \uac00\uc774\ub4dc\ub294 AWS\uc5d0\uc11c EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \uad00\ub9ac\ud558\ub294 \uac1c\ubc1c\uc790 \ubc0f \uad00\ub9ac\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774 \ubc31\uc11c\ub294 \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud655\uc7a5 \uc0ac\ub840\ub97c \uc911\uc810\uc801\uc73c\ub85c \ub2e4\ub8e8\uc9c0\ub9cc, \uc790\uccb4 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 EKS Anywhere \ub97c \uc0ac\uc6a9\ud558\uc5ec AWS \ub9ac\uc804 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uad6c\uccb4\uc801\uc778 \ub0b4\uc6a9\uc740 \ub514\ub8e8\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac01 \uc8fc\uc81c\uc5d0\ub294 \uac04\ub7b5\ud55c \uac1c\uc694\uac00 \ud3ec\ud568\ub418\uba70, EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uaddc\ubaa8\ub85c \uc6b4\uc601\ud558\uae30 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc774\uc5b4\uc9d1\ub2c8\ub2e4. \uc8fc\uc81c\ub97c \ud2b9\uc815 \uc21c\uc11c\ub85c \uc77d\uc744 \ud544\uc694\ub294 \uc5c6\uc73c\uba70 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc791\ub3d9\ud558\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ud558\uace0 \uac80\uc99d\ud558\uc9c0 \uc54a\uace0\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc801\uc6a9\ud574\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4. \ud06c\uae30 \uc870\uc815 \uc774\ud574 \u00b6 \ud655\uc7a5\uc131\uc740 \uc131\ub2a5 \ubc0f \uc548\uc815\uc131 \uacfc \ub2e4\ub974\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \uacc4\ud68d\ud560 \ub54c\ub294 \uc774 \uc138 \uac00\uc9c0\ub97c \ubaa8\ub450 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\uc7a5\ub418\uba74 \ubaa8\ub2c8\ud130\ub9c1\uc774 \ud544\uc694\ud558\uc9c0\ub9cc \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ubaa8\ub2c8\ud130\ub9c1 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub2e4\ub8e8\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. EKS\ub294 \ub300\uaddc\ubaa8\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc9c0\ub9cc, \ud074\ub7ec\uc2a4\ud130\ub97c 300\uac1c \ub178\ub4dc \ub610\ub294 5000\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub85c \ud655\uc7a5\ud560 \ubc29\ubc95\uc744 \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4.\uc808\ub300\uc801\uc778 \uc218\uce58\ub294 \uc544\ub2c8\uc9c0\ub9cc \uc774 \uac00\uc774\ub4dc\ub97c \uc5ec\ub7ec \uc0ac\uc6a9\uc790, \uc5d4\uc9c0\ub2c8\uc5b4 \ubc0f \uc11c\ud3ec\ud2b8 \uc804\ubb38\uac00\uc640 \uacf5\ub3d9\uc73c\ub85c \uc791\uc5c5\ud55c \uacb0\uacfc\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ud655\uc7a5\uc740 \ub2e4\ucc28\uc6d0\uc801\uc774\uba70 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0 \ub9de\ub294 \ud2b9\uc815 \uc124\uc815\uc774\ub098 \uad8c\uc7a5 \uc0ac\ud56d\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ud655\uc7a5\uc5d0 \ub300\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\ub294 \uc8fc\uc694 \uc601\uc5ed\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Kubernetes Control Plane Kubernetes Data Plane Cluster Services Workloads Kubernetes Control Plane \uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 AWS\uac00 \uc2e4\ud589\ud558\uace0 \uc0ac\uc6a9\uc790\ub97c \uc704\ud574 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\ub294 \ubaa8\ub4e0 \uc11c\ube44\uc2a4 (\uc608: Kubernetes API Server) \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ud655\uc7a5\ud558\ub294 \uac83\uc740 AWS\uc758 \ucc45\uc784\uc774\uc9c0\ub9cc \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ucc45\uc784\uac10 \uc788\uac8c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. Kubernetes Data Plane \uaddc\ubaa8 \uc870\uc815\uc740 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c AWS \ub9ac\uc18c\uc2a4\ub97c \ub2e4\ub8e8\uc9c0\ub9cc EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4, kublet, \uc2a4\ud1a0\ub9ac\uc9c0\ub97c \ube44\ub86f\ud55c \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub530\ub77c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Cluster services \ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 Kubernetes \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc785\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 EKS Add-ons \uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc73c\uba70 \uaddc\uc815 \uc900\uc218 \ubc0f \ud1b5\ud569\uc744 \uc704\ud574 \uc124\uce58\ud558\ub294 \uae30\ud0c0 \uc11c\ube44\uc2a4 \ub610\ub294 Helm Chart\ub3c4 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc11c\ube44\uc2a4\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c0\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc73c\uba70 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud655\uc7a5\ub428\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub3c4 \ud568\uaed8 \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Workloads \ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \uc774\uc720\uc774\uba70 \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 Kubernetes\uc758 \uc6cc\ud06c\ub85c\ub4dc \ud1b5\ud569 \ubc0f \uc124\uc815\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f \uc11c\ube44\uc2a4\uc640 \uac19\uc740 Kubernetes \ucd94\uc0c1\ud654\uc5d0 \ub300\ud55c \uc544\ud0a4\ud14d\ucc98 \uace0\ub824 \uc0ac\ud56d\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ucd08\ub300\ud615 \uc2a4\ucf00\uc77c\ub9c1 \u00b6 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub97c 1,000\uac1c \ub178\ub4dc \ub610\ub294 50,000\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub85c \ud655\uc7a5\ud558\ub824\ub294 \uacbd\uc6b0 \ubb38\uc758\ud558\uace0 \uc2f6\uc2b5\ub2c8\ub2e4. \uc9c0\uc6d0 \ud300\uc774\ub098 \uae30\uc220 \uacc4\uc815 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc5ec \uc774 \uac00\uc774\ub4dc\uc5d0 \uc81c\uacf5\ub41c \uc815\ubcf4 \uc774\uc0c1\uc73c\ub85c \uacc4\ud68d\ud558\uace0 \ud655\uc7a5\ud558\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\ub294 \uc804\ubb38\uac00\uc5d0\uac8c \ubb38\uc758\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"EKS Scalability best practices"},{"location":"scalability/docs/index.kr/#eks-scalability-best-practices","text":"\uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 EKS \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub300\ud55c \uc870\uc5b8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud558\ub294 \ubaa9\uc801\uc740 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\ub7c9\uc744 \ucd5c\ub300\ud654\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ub300\uaddc\ubaa8 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc5d0 \ube44\ud574 \uc6b4\uc601 \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc9c0\ub9cc \ub2e4\uc911 \ub9ac\uc804 \ubc30\ud3ec, \ud14c\ub10c\ud2b8 \uaca9\ub9ac, \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ub4f1\uc758 \uce21\uba74\uc5d0\uc11c \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub85c \ud655\uc7a5\uc131\uc744 \uadf9\ub300\ud654\ud558\ub294 \ubc29\ubc95\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd9c \uac83\uc785\ub2c8\ub2e4.","title":"EKS Scalability best practices"},{"location":"scalability/docs/index.kr/#_1","text":"\ud574\ub2f9 \uac00\uc774\ub4dc\ub294 AWS\uc5d0\uc11c EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \uad00\ub9ac\ud558\ub294 \uac1c\ubc1c\uc790 \ubc0f \uad00\ub9ac\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uc774 \ubc31\uc11c\ub294 \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud655\uc7a5 \uc0ac\ub840\ub97c \uc911\uc810\uc801\uc73c\ub85c \ub2e4\ub8e8\uc9c0\ub9cc, \uc790\uccb4 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 EKS Anywhere \ub97c \uc0ac\uc6a9\ud558\uc5ec AWS \ub9ac\uc804 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uad6c\uccb4\uc801\uc778 \ub0b4\uc6a9\uc740 \ub514\ub8e8\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac01 \uc8fc\uc81c\uc5d0\ub294 \uac04\ub7b5\ud55c \uac1c\uc694\uac00 \ud3ec\ud568\ub418\uba70, EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uaddc\ubaa8\ub85c \uc6b4\uc601\ud558\uae30 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc774\uc5b4\uc9d1\ub2c8\ub2e4. \uc8fc\uc81c\ub97c \ud2b9\uc815 \uc21c\uc11c\ub85c \uc77d\uc744 \ud544\uc694\ub294 \uc5c6\uc73c\uba70 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc791\ub3d9\ud558\ub294\uc9c0 \ud14c\uc2a4\ud2b8\ud558\uace0 \uac80\uc99d\ud558\uc9c0 \uc54a\uace0\ub294 \uad8c\uc7a5 \uc0ac\ud56d\uc744 \uc801\uc6a9\ud574\uc11c\ub294 \uc548 \ub429\ub2c8\ub2e4.","title":"\uac00\uc774\ub4dc \uc0ac\uc6a9\ubc95"},{"location":"scalability/docs/index.kr/#_2","text":"\ud655\uc7a5\uc131\uc740 \uc131\ub2a5 \ubc0f \uc548\uc815\uc131 \uacfc \ub2e4\ub974\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \uacc4\ud68d\ud560 \ub54c\ub294 \uc774 \uc138 \uac00\uc9c0\ub97c \ubaa8\ub450 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\uc7a5\ub418\uba74 \ubaa8\ub2c8\ud130\ub9c1\uc774 \ud544\uc694\ud558\uc9c0\ub9cc \uc774 \uac00\uc774\ub4dc\uc5d0\uc11c\ub294 \ubaa8\ub2c8\ud130\ub9c1 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub2e4\ub8e8\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. EKS\ub294 \ub300\uaddc\ubaa8\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc9c0\ub9cc, \ud074\ub7ec\uc2a4\ud130\ub97c 300\uac1c \ub178\ub4dc \ub610\ub294 5000\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub85c \ud655\uc7a5\ud560 \ubc29\ubc95\uc744 \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4.\uc808\ub300\uc801\uc778 \uc218\uce58\ub294 \uc544\ub2c8\uc9c0\ub9cc \uc774 \uac00\uc774\ub4dc\ub97c \uc5ec\ub7ec \uc0ac\uc6a9\uc790, \uc5d4\uc9c0\ub2c8\uc5b4 \ubc0f \uc11c\ud3ec\ud2b8 \uc804\ubb38\uac00\uc640 \uacf5\ub3d9\uc73c\ub85c \uc791\uc5c5\ud55c \uacb0\uacfc\uc785\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ud655\uc7a5\uc740 \ub2e4\ucc28\uc6d0\uc801\uc774\uba70 \ubaa8\ub4e0 \uc0c1\ud669\uc5d0 \ub9de\ub294 \ud2b9\uc815 \uc124\uc815\uc774\ub098 \uad8c\uc7a5 \uc0ac\ud56d\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ud655\uc7a5\uc5d0 \ub300\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud560 \uc218 \uc788\ub294 \uc8fc\uc694 \uc601\uc5ed\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Kubernetes Control Plane Kubernetes Data Plane Cluster Services Workloads Kubernetes Control Plane \uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 AWS\uac00 \uc2e4\ud589\ud558\uace0 \uc0ac\uc6a9\uc790\ub97c \uc704\ud574 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\ub294 \ubaa8\ub4e0 \uc11c\ube44\uc2a4 (\uc608: Kubernetes API Server) \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ud655\uc7a5\ud558\ub294 \uac83\uc740 AWS\uc758 \ucc45\uc784\uc774\uc9c0\ub9cc \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ucc45\uc784\uac10 \uc788\uac8c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. Kubernetes Data Plane \uaddc\ubaa8 \uc870\uc815\uc740 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ud544\uc694\ud55c AWS \ub9ac\uc18c\uc2a4\ub97c \ub2e4\ub8e8\uc9c0\ub9cc EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \ubc97\uc5b4\ub0a9\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4, kublet, \uc2a4\ud1a0\ub9ac\uc9c0\ub97c \ube44\ub86f\ud55c \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub294 \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub530\ub77c \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Cluster services \ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uba70 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 Kubernetes \ucee8\ud2b8\ub864\ub7ec \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc785\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 EKS Add-ons \uac00 \ud3ec\ud568\ub420 \uc218 \uc788\uc73c\uba70 \uaddc\uc815 \uc900\uc218 \ubc0f \ud1b5\ud569\uc744 \uc704\ud574 \uc124\uce58\ud558\ub294 \uae30\ud0c0 \uc11c\ube44\uc2a4 \ub610\ub294 Helm Chart\ub3c4 \ud3ec\ud568\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc11c\ube44\uc2a4\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub530\ub77c \ub2ec\ub77c\uc9c0\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc73c\uba70 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud655\uc7a5\ub428\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130 \uc11c\ube44\uc2a4\ub3c4 \ud568\uaed8 \ud655\uc7a5\ud574\uc57c \ud569\ub2c8\ub2e4. Workloads \ub294 \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\ub294 \uc774\uc720\uc774\uba70 \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ud655\uc7a5\uc5d0 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 Kubernetes\uc758 \uc6cc\ud06c\ub85c\ub4dc \ud1b5\ud569 \ubc0f \uc124\uc815\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f \uc11c\ube44\uc2a4\uc640 \uac19\uc740 Kubernetes \ucd94\uc0c1\ud654\uc5d0 \ub300\ud55c \uc544\ud0a4\ud14d\ucc98 \uace0\ub824 \uc0ac\ud56d\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud06c\uae30 \uc870\uc815 \uc774\ud574"},{"location":"scalability/docs/index.kr/#_3","text":"\ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub97c 1,000\uac1c \ub178\ub4dc \ub610\ub294 50,000\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub85c \ud655\uc7a5\ud558\ub824\ub294 \uacbd\uc6b0 \ubb38\uc758\ud558\uace0 \uc2f6\uc2b5\ub2c8\ub2e4. \uc9c0\uc6d0 \ud300\uc774\ub098 \uae30\uc220 \uacc4\uc815 \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc5ec \uc774 \uac00\uc774\ub4dc\uc5d0 \uc81c\uacf5\ub41c \uc815\ubcf4 \uc774\uc0c1\uc73c\ub85c \uacc4\ud68d\ud558\uace0 \ud655\uc7a5\ud558\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc904 \uc218 \uc788\ub294 \uc804\ubb38\uac00\uc5d0\uac8c \ubb38\uc758\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\ucd08\ub300\ud615 \uc2a4\ucf00\uc77c\ub9c1"},{"location":"scalability/docs/kcp_monitoring.kr/","text":"{'name': 'English', 'build': True} \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubaa8\ub2c8\ud130\ub9c1 \u00b6 API Server \u00b6 API Server\ub97c \uc0b4\ud3b4\ubcfc \ub54c \uadf8 \uae30\ub2a5 \uc911 \ud558\ub098\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uacfc\ubd80\ud558\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc778\ubc14\uc6b4\ub4dc \uc694\uccad\uc744 \uc870\uc808\ud558\ub294 \uac83\uc784\uc744 \uae30\uc5b5\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. API Server \uc218\uc900\uc5d0\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\ucc98\ub7fc \ubcf4\uc77c \uc218 \uc788\ub294 \uac83\uc740 \uc2e4\uc81c\ub85c \ub354 \uc2ec\uac01\ud55c \ubb38\uc81c\ub85c\ubd80\ud130 \uc774\ub97c \ubcf4\ud638\ud558\ub294 \uac83\uc77c \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c\uc744 \ud1b5\ud574 \uc774\ub3d9\ud558\ub294 \uc694\uccad\ub7c9 \uc99d\uac00\uc758 \uc7a5\ub2e8\uc810\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. API Server \uac12\uc744 \ub298\ub824\uc57c \ud558\ub294\uc9c0 \uacb0\uc815\ud558\uae30 \uc704\ud574 \uc5fc\ub450\uc5d0 \ub450\uc5b4\uc57c \ud560 \uc0ac\ud56d\uc5d0 \ub300\ud55c \uc791\uc740 \uc0d8\ud50c\ub9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c\uc744 \ud1b5\ud574 \uc774\ub3d9\ud558\ub294 \uc694\uccad\uc758 \ub300\uae30 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c? \uc9c0\uc5f0 \uc2dc\uac04\uc740 API Server \uc790\uccb4\uc785\ub2c8\uae4c, \uc544\ub2c8\uba74 etcd\uc640 \uac19\uc740 \"\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\"\uc785\ub2c8\uae4c? API \uc11c\ubc84 \ub300\uae30\uc5f4 \uae4a\uc774\uac00 \uc774 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc694\uc778\uc785\ub2c8\uae4c? API Prioirity and Fairness(APF) \ub300\uae30\uc5f4\uc774 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 API \ud638\ucd9c \ud328\ud134\uc5d0 \ub9de\uac8c \uc62c\ubc14\ub974\uac8c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c? \ubb38\uc81c\uac00 \uc788\ub294 \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c? \u00b6 \uba3c\uc800 API \uc9c0\uc5f0 \uc2dc\uac04 \uce21\uc815 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec API Server\uac00 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 PromQL \ubc0f Grafana \ud788\ud2b8\ub9f5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. max(increase(apiserver_request_duration_seconds_bucket{subresource!=\"status\",subresource!=\"token\",subresource!=\"scale\",subresource!=\"/healthz\",subresource!=\"binding\",subresource!=\"proxy\",verb!=\"WATCH\"}[$__rate_interval])) by (le) \ud301 \uc774 \ubb38\uc11c\uc5d0 \uc0ac\uc6a9\ub41c API \ub300\uc2dc\ubcf4\ub4dc\ub85c API \uc11c\ubc84\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c blog \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc774\ub7ec\ud55c \uc694\uccad\uc740 \ubaa8\ub450 1\ucd08 \uc544\ub798\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc801\uc2dc\uc5d0 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \uc788\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc88b\uc740 \ud45c\uc2dc\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc704\uc758 API \uc694\uccad \uae30\uac04\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud615\uc2dd\uc740 \ud788\ud2b8\ub9f5\uc785\ub2c8\ub2e4. \ud788\ud2b8\ub9f5 \ud615\uc2dd\uc758 \uc88b\uc740 \uc810\uc740 \uae30\ubcf8\uc801\uc73c\ub85c API\uc758 \uc81c\ud55c \uc2dc\uac04 \uac12(60\ucd08)\uc744 \uc54c\ub824\uc900\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2e4\uc81c\ub85c \uc54c\uc544\uc57c \ud560 \uac83\uc740 \uc2dc\uac04 \ucd08\uacfc \uc784\uacc4\uac12\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \uc774 \uac12\uc774 \uc5b4\ub5a4 \uc784\uacc4\uac12\uc5d0 \uad00\uc2ec\uc744 \uac00\uc838\uc57c \ud558\ub294\uac00\uc785\ub2c8\ub2e4. \ud5c8\uc6a9 \uac00\ub2a5\ud55c \uc784\uacc4\uac12\uc5d0 \ub300\ud55c \ub300\ub7b5\uc801\uc778 \uc9c0\uce68\uc744 \ubcf4\ub824\uba74 \uc5ec\uae30 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\ub294 \uc5c5\uc2a4\ud2b8\ub9bc Kubernetes SLO\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \uc774 \uba85\ub839\ubb38\uc758 max \ud568\uc218\ub97c \ud655\uc778\ud558\uc138\uc694. \uc5ec\ub7ec \uc11c\ubc84(\uae30\ubcf8\uc801\uc73c\ub85c EKS\uc758 \ub450 API Server)\ub97c \uc9d1\uacc4\ud558\ub294 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \ub54c \ud574\ub2f9 \uc11c\ubc84\uc758 \ud3c9\uade0\uc744 \uad6c\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ube44\ub300\uce6d \ud2b8\ub798\ud53d \ud328\ud134 \u00b6 \ud55c API Server [pod]\ub294 \ub85c\ub4dc\uac00 \uc57d\ud558\uace0 \ub2e4\ub978 \ud558\ub098\ub294 \uacfc\ubd80\ud558\uac00 \uac78\ub9ac\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\uc774 \ub450 \uc22b\uc790\uc758 \ud3c9\uade0\uc744 \uad6c\ud558\uba74 \ubb34\uc2a8 \uc77c\uc774 \ubc8c\uc5b4\uc84c\ub294\uc9c0 \uc798\ubabb \ud574\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc5ec\uae30\uc5d0\ub294 \uc138 \uac1c\uc758 API Server\uac00 \uc788\uc9c0\ub9cc \ubaa8\ub4e0 \ub85c\ub4dc\ub294 \uc774 API Server \uc911 \ud558\ub098\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c etcd \ubc0f API \uc11c\ubc84\uc640 \uac19\uc774 \uc5ec\ub7ec \uc11c\ubc84\uac00 \uc788\ub294 \ubaa8\ub4e0 \uac83\uc740 \uaddc\ubaa8 \ubc0f \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ud22c\uc790\ud560 \ub54c \ubd84\ub9ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. API Priority and Fairness(APF)\ub85c \uc804\ud658\ud558\uba74\uc11c \uc2dc\uc2a4\ud15c\uc758 \ucd1d \uc694\uccad \uc218\ub294 API Server\uac00 \ucd08\uacfc \uad6c\ub3c5\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud558\ub098\uc758 \uc694\uc18c\uc77c \ubfd0\uc785\ub2c8\ub2e4. \uc774\uc81c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc77c\ub828\uc758 \ub300\uae30\uc5f4\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \ub300\uae30\uc5f4\uc774 \uaf49 \ucc3c\ub294\uc9c0, \ud574\ub2f9 \ub300\uae30\uc5f4\uc758 \ud2b8\ub798\ud53d\uc774 \uc0ad\uc81c\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ub300\uae30\uc5f4\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. max without(instance)(apiserver_flowcontrol_request_concurrency_limit{}) Note API A&F \uc791\ub3d9 \ubc29\uc2dd\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc5ec\uae30\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub418\ub294 7\uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uc6b0\uc120\uc21c\uc704 \uadf8\ub8f9\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc73c\ub85c \ud2b9\uc815 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc778\uc9c0 \ud30c\uc545\ud558\uae30 \uc704\ud574 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uadf8\ub8f9\uc774 \uba87 \ud37c\uc13c\ud2b8\uc758 \ube44\uc728\ub85c \uc0ac\uc6a9\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0\uc790 \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub0ae\uc740 \uc218\uc900\uc5d0\uc11c\ub294 \uc694\uccad\uc744 \uc2a4\ub85c\ud2c0\ub9c1\ud558\ub294 \uac83\uc774 \ubc14\ub78c\uc9c1\ud560 \uc218 \uc788\uc9c0\ub9cc \ub9ac\ub354 \uc120\ucd9c \uc218\uc900\uc5d0\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API Priority and Fairness(APF) \uc2dc\uc2a4\ud15c\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubcf5\uc7a1\ud55c \uc635\uc158\uc774 \uc788\uc73c\uba70, \uc774\ub7ec\ud55c \uc635\uc158 \uc911 \uc77c\ubd80\ub294 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uacb0\uacfc\ub97c \ucd08\ub798\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \ubcfc \uc218 \uc788\ub294 \ubb38\uc81c\ub294 \ubd88\ud544\uc694\ud55c \ub300\uae30 \uc2dc\uac04\uc774 \ucd94\uac00\ub418\uae30 \uc2dc\uc791\ud558\ub294 \uc9c0\uc810\uae4c\uc9c0 \ub300\uae30\uc5f4 \uae4a\uc774\ub97c \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. apiserver_flowcontrol_current_inqueue_request \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ubb38\uc81c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiserver_flowcontrol_rejected_requests_total \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ad\uc81c\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\ud0b7\uc774 \ub3d9\uc2dc\uc131\uc744 \ucd08\uacfc\ud558\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc9c0\ud45c\ub294 0\uc774 \uc544\ub2cc \uac12\uc774 \ub429\ub2c8\ub2e4. \ub300\uae30\uc5f4 \uae4a\uc774\ub97c \ub298\ub9ac\uba74 API Server\uac00 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc911\uc694\ud55c \uc6d0\uc778\uc774 \ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uc8fc\uc758\ud574\uc11c \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0dd\uc131\ub41c \ub300\uae30\uc5f4 \uc218\ub97c \uc2e0\uc911\ud558\uac8c \uacb0\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 EKS \uc2dc\uc2a4\ud15c\uc758 \uacf5\uc720 \uc218\ub294 600\uac1c\uc785\ub2c8\ub2e4. \ub108\ubb34 \ub9ce\uc740 \ub300\uae30\uc5f4\uc744 \uc0dd\uc131\ud558\uba74 \ub9ac\ub354 \uc120\ud0dd \ub300\uae30\uc5f4\uc774\ub098 \uc2dc\uc2a4\ud15c \ub300\uae30\uc5f4\uacfc \uac19\uc774 \ucc98\ub9ac\ub7c9\uc774 \ud544\uc694\ud55c \uc911\uc694\ud55c \ub300\uae30\uc5f4\uc758 \uacf5\uc720\uac00 \uc904\uc5b4\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \ub300\uae30\uc5f4\uc744 \ub108\ubb34 \ub9ce\uc774 \uc0dd\uc131\ud558\uba74 \uc774\ub7ec\ud55c \ub300\uae30\uc5f4\uc758 \ud06c\uae30\ub97c \uc62c\ubc14\ub974\uac8c \uc9c0\uc815\ud558\uae30\uac00 \ub354 \uc5b4\ub824\uc6cc\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. APF\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud558\uace0 \uc601\ud5a5\ub825 \uc788\ub294 \ubcc0\uacbd\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd94\uae30 \uc704\ud574 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ubc84\ud0b7\uc5d0\uc11c \uacf5\uc720\ub97c \uac00\uc838\uc640 \ucd5c\ub300 \uc0ac\uc6a9\ub7c9\uc5d0 \uc788\ub294 \ubc84\ud0b7\uc758 \ud06c\uae30\ub97c \ub298\ub9bd\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc84\ud0b7 \uac04\uc5d0 \uacf5\uc720\ub97c \uc9c0\ub2a5\uc801\uc73c\ub85c \uc7ac\ubd84\ubc30\ud568\uc73c\ub85c\uc368 \uc0ad\uc81c \uac00\ub2a5\uc131\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc API \uc6b0\uc120\uc21c\uc704 \ubc0f \uacf5\uc815\uc131 \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc138\uc694. API vs. etcd \uc9c0\uc5f0 \uc2dc\uac04 \u00b6 API Server\uc758 \uba54\ud2b8\ub9ad/\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec API Server\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0, API Server\uc758 \uc5c5\uc2a4\ud2b8\ub9bc/\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \ub610\ub294 \uc774 \ub458\uc758 \uc870\ud569\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \ud310\ub2e8\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud569\ub2c8\uae4c? \uc774\ub97c \ub354 \uc798 \uc774\ud574\ud558\uae30 \uc704\ud574 API Server\uc640 etcd\uac00 \uc5b4\ub5a4 \uad00\ub828\uc774 \uc788\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc798\ubabb\ub41c \uc2dc\uc2a4\ud15c\uc744 \ud574\uacb0\ud558\ub294 \uac83\uc774 \uc5bc\ub9c8\ub098 \uc26c\uc6b4\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ucc28\ud2b8\uc5d0\uc11c\ub294 API Server\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ubcfc \uc218 \uc788\uc9c0\ub9cc, etcd \uc218\uc900\uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub798\ud504\uc758 \ub9c9\ub300\ub85c \uc778\ud574 \uc774 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc0c1\ub2f9 \ubd80\ubd84\uc774 etcd \uc11c\ubc84\uc640 \uc5f0\uad00\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. etcd \ub300\uae30 \uc2dc\uac04\uc774 15\ucd08\uc774\uace0 \ub3d9\uc2dc\uc5d0 API \uc11c\ubc84 \ub300\uae30 \uc2dc\uac04\uc774 20\ucd08\uc778 \uacbd\uc6b0 \ub300\uae30 \uc2dc\uac04\uc758 \ub300\ubd80\ubd84\uc740 \uc2e4\uc81c\ub85c etcd \uc218\uc900\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 \uc804\uccb4 \ud750\ub984\uc744 \uc0b4\ud3b4\ubcf4\uba74 API Server\uc5d0\ub9cc \uc9d1\uc911\ud558\uc9c0 \uc54a\uace0 etcd\uac00 \uc555\ubc15\uc744 \ubc1b\uace0 \uc788\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2e0\ud638(\uc608: slow apply counters \uc99d\uac00)\ub97c \ucc3e\ub294 \uac83\uc774 \ud604\uba85\ud558\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip The dashboard in section can be found at https://github.com/RiskyAdventure/Troubleshooting-Dashboards/blob/main/api-troubleshooter.json \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \ubb38\uc81c \u00b6 \uc774 \ucc28\ud2b8\uc5d0\uc11c\ub294 \ud574\ub2f9 \uae30\uac04 \ub3d9\uc548 \uc644\ub8cc\ud558\ub294 \ub370 \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uac04\uc774 \uac78\ub9b0 API \ud638\ucd9c\uc744 \ucc3e\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 custom resource definitions(CRD)\uac00 05:40 \uc2dc\uac04 \ud504\ub808\uc784 \ub3d9\uc548 \uac00\uc7a5 \uc624\ub798\uac78\ub9b0 \ud638\ucd9c\uc774 APPLY \ud568\uc218\ub77c\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c Ad-Hoc PromQL \ub610\ub294 CloudWatch Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub2f9 \uae30\uac04 \ub3d9\uc548 \uac10\uc0ac \ub85c\uadf8\uc5d0\uc11c LIST \uc694\uccad\uc744 \uac00\uc838\uc640\uc11c \uc5b4\ub5a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch\ub85c \uc18c\uc2a4 \ucc3e\uae30 \u00b6 \uba54\ud2b8\ub9ad\uc740 \uc0b4\ud3b4\ubcf4\uace0\uc790 \ud558\ub294 \ubb38\uc81c \uc601\uc5ed\uc744 \ucc3e\uace0 \ubb38\uc81c\uc758 \uae30\uac04\uacfc \uac80\uc0c9 \ub9e4\uac1c\ubcc0\uc218\ub97c \ubaa8\ub450 \uc881\ud788\ub294 \ub370 \uac00\uc7a5 \uc798 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130\uac00 \ud655\ubcf4\ub418\uba74 \ub354 \uc790\uc138\ud55c \uc2dc\uac04\uacfc \uc624\ub958\uc5d0 \ub300\ud55c \ub85c\uadf8\ub85c \uc804\ud658\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 CloudWatch Logs Insights \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uba54\ud2b8\ub9ad\uc73c\ub85c \uc804\ud658\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \ubb38\uc81c\ub97c \uc870\uc0ac\ud558\uae30 \uc704\ud574 \ub2e4\uc74c CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc5d0\uc774\uc804\ud2b8 \ubc0f requestURI\ub97c \uac00\uc838\uc640\uc11c \uc5b4\ub5a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc774 \uc9c0\uc5f0\uc744 \uc77c\uc73c\ud0a4\ub294\uc9c0 \uc815\ud655\ud788 \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 Watch\uc5d0\uc11c \uc815\uc0c1\uc801\uc778 List/Resync \ub3d9\uc791\uc744 \uac00\uc838\uc624\uc9c0 \uc54a\uc73c\ub824\uba74 \uc801\uc808\ud55c \uac1c\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. fields *@timestamp*, *@message* | filter *@logStream* like \"kube-apiserver-audit\" | filter ispresent(requestURI) | filter verb = \"list\" | parse requestReceivedTimestamp /\\d+-\\d+-(?<StartDay>\\d+)T(?<StartHour>\\d+):(?<StartMinute>\\d+):(?<StartSec>\\d+).(?<StartMsec>\\d+)Z/ | parse stageTimestamp /\\d+-\\d+-(?<EndDay>\\d+)T(?<EndHour>\\d+):(?<EndMinute>\\d+):(?<EndSec>\\d+).(?<EndMsec>\\d+)Z/ | fields (StartHour * 3600 + StartMinute * 60 + StartSec + StartMsec / 1000000) as StartTime, (EndHour * 3600 + EndMinute * 60 + EndSec + EndMsec / 1000000) as EndTime, (EndTime - StartTime) as DeltaTime | stats avg(DeltaTime) as AverageDeltaTime, count(*) as CountTime by requestURI, userAgent | filter CountTime >=50 | sort AverageDeltaTime desc \uc774 \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub300\uae30 \uc2dc\uac04\uc774 \uae34 list \uc791\uc5c5\uc744 \ub300\ub7c9\uc73c\ub85c \uc2e4\ud589\ud558\ub294 \ub450 \uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uc5d0\uc774\uc804\ud2b8(Splunk \ubc0f CloudWatch Agent)\ub97c \ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c \uc774 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc81c\uac70, \uc5c5\ub370\uc774\ud2b8\ud558\uac70\ub098 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\ub85c \uad50\uccb4\ud558\uae30\ub85c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc138\uc694. Scheduler \u00b6 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc778\uc2a4\ud134\uc2a4\ub294 \ubcc4\ub3c4\uc758 AWS \uacc4\uc815\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c \uce21\uc815 \uc9c0\ud45c\uc5d0 \ub300\ud55c \ud574\ub2f9 \uad6c\uc131 \uc694\uc18c\ub97c \uc218\uc9d1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4(API Server\ub294 \uc608\uc678\uc784). \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uac10\uc0ac \ub85c\uadf8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ud574\ub2f9 \ub85c\uadf8\ub97c \uc9c0\ud45c\ub85c \ubcc0\ud658\ud558\uc5ec \ud655\uc7a5 \uc2dc \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc77c\uc73c\ud0a4\ub294 \ud558\uc704 \uc2dc\uc2a4\ud15c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch Logs Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec \ub300\uae30\uc5f4\uc5d0 \uc608\uc57d\ub418\uc9c0 \uc54a\uc740 Pod\uac00 \uba87 \uac1c \uc788\ub294\uc9c0 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub7ec \ub85c\uadf8\uc5d0\uc11c \uc608\uc57d\ub418\uc9c0 \uc54a\uc740 \ud30c\ub4dc \u00b6 \uc790\uccb4 \uad00\ub9ac\ud615 Kubernetes(\uc608: Kops)\uc5d0\uc11c \uc9c1\uc811 \uc2a4\ucf00\uc904\ub7ec \uc9c0\ud45c\ub97c \uc2a4\ud06c\ub7a9\ud560 \uc218 \uc788\ub294 \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c PromQL\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec \ubc31\ub85c\uadf8\ub97c \uc774\ud574\ud569\ub2c8\ub2e4. max without(instance)(scheduler_pending_pods) EKS\uc5d0\uc11c\ub294 \uc704 \uc9c0\ud45c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc544\ub798 CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uae30\uac04 \ub3d9\uc548 \uc608\uc57d\uc744 \ucde8\uc18c\ud560 \uc218 \uc5c6\uc5c8\ub358 \ud30c\ub4dc \uc218\ub97c \ud655\uc778\ud558\uc5ec \ubc31\ub85c\uadf8\ub97c \ud655\uc778\ud560 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud53c\ud06c \ud0c0\uc784\uc758 \uba54\uc2dc\uc9c0\ub97c \ub354 \uc790\uc138\ud788 \ubd84\uc11d\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc758 \ud2b9\uc131\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ucda9\ubd84\ud788 \ube60\ub974\uac8c \uad50\uccb4\ub418\uc9c0 \uc54a\uac70\ub098 \uc2a4\ucf00\uc904\ub7ec \uc790\uccb4\uc758 rate limiter\ub97c \uc608\ub85c \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields timestamp, pod, err, *@message* | filter *@logStream* like \"scheduler\" | filter *@message* like \"Unable to schedule pod\" | parse *@message* /^.(?<date>\\d{4})\\s+(?<timestamp>\\d+:\\d+:\\d+\\.\\d+)\\s+\\S*\\s+\\S+\\]\\s\\\"(.*?)\\\"\\s+pod=(?<pod>\\\"(.*?)\\\")\\s+err=(?<err>\\\"(.*?)\\\")/ | count(*) as count by pod, err | sort count desc \uc5ec\uae30\uc11c\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 PVC\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc5b4 \ud30c\ub4dc\uac00 \ubc30\ud3ec\ub418\uc9c0 \uc54a\uc558\ub2e4\ub294 \uc2a4\ucf00\uc904\ub7ec\uc758 \uc624\ub958\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0 \uc774 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \uac10\uc0ac \ub85c\uae45\uc744 \ucf1c\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubd88\ud544\uc694\ud558\uac8c \ube44\uc6a9\uc774 \uc99d\uac00\ud558\uc9c0 \uc54a\ub3c4\ub85d \ub85c\uadf8 \ubcf4\uc874\uc744 \uc81c\ud55c\ud558\ub294 \uac83\ub3c4 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 EKSCTL \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub85c\uae45 \uae30\ub2a5\uc744 \ucf1c\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. cloudWatch : clusterLogging : enableTypes : [ \"*\" ] logRetentionInDays : 10 Kube Controller Manager \u00b6 \ub2e4\ub978 \ubaa8\ub4e0 \ucee8\ud2b8\ub864\ub7ec\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c Kube Controller Manager\ub294 \ud55c \ubc88\uc5d0 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5 \uc218\uc5d0 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub77c\ubbf8\ud130\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub294 KOPS \uad6c\uc131\uc744 \uc0b4\ud3b4\ubcf4\uba74\uc11c \uc774\ub7ec\ud55c \ud50c\ub798\uadf8 \uc911 \uc77c\ubd80\uac00 \ubb34\uc5c7\uc778\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. kubeControllerManager : concurrentEndpointSyncs : 5 concurrentReplicasetSyncs : 5 concurrentNamespaceSyncs : 10 concurrentServiceaccountTokenSyncs : 5 concurrentServiceSyncs : 5 concurrentResourceQuotaSyncs : 5 concurrentGcSyncs : 20 kubeAPIBurst : 20 kubeAPIQPS : \"30\" \uc774\ub7ec\ud55c \ucee8\ud2b8\ub864\ub7ec\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubcc0\ub3d9\uc774 \uc2ec\ud560 \ub54c \ub300\uae30\uc5f4\uc774 \uaf49 \ucc28\uac8c \ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 replicaset controller\uc758 \ub300\uae30\uc5f4\uc5d0 \ub300\uaddc\ubaa8 \ubc31\ub85c\uadf8\uac00 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc744 \ud574\uacb0\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ub3d9\uc2dc \uace0\ub8e8\ud2f4\uc744 \ub298\ub9b4 \uc218 \uc788\uc9c0\ub9cc \uc774\ub294 KCM\uc5d0\uc11c \ub354 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\uc5ec etcd\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uc635\uc158\uc740 \ubc30\ud3ec\uc5d0\uc11c .spec.revisionHistoryLimit \uc744 \uc0ac\uc6a9\ud558\uc5ec replicaset \uac1c\uccb4 \uc218\ub97c \uc904\uc774\uace0 \ub864\ubc31\ud560 \uc218 \uc788\ub294 replicaset \uac1c\uccb4 \uc218\ub97c \uc904\uc5ec \ud574\ub2f9 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub300\ud55c \ubd80\ub2f4\uc744 \uc904\uc774\ub294 \uac83\uc785\ub2c8\ub2e4. spec : revisionHistoryLimit : 2 \ub2e4\ub978 Kubernetes \uae30\ub2a5\uc744 \uc870\uc815\ud558\uac70\ub098 \ud574\uc81c\ud558\uc5ec \uc774\ud0c8\ub960\uc774 \ub192\uc740 \uc2dc\uc2a4\ud15c\uc758 \uc555\ub825\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud30c\ub4dc\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 k8s API\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud574\ub2f9 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ub41c \uc2dc\ud06c\ub9bf\uc744 \ub044\uba74 ServiceAccountTokenSync\uc758 \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \uc774\ub7f0 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \ub354 \ubc14\ub78c\uc9c1\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. kind : Pod spec : automountServiceAccountToken : false \uc9c0\ud45c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\ub294 \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub294 \ub85c\uadf8\ub97c \ub2e4\uc2dc \uac80\ud1a0\ud558\uc5ec \uacbd\ud569\uc744 \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub2f9 \ub610\ub294 \uc9d1\uacc4 \uc218\uc900\uc5d0\uc11c \ucc98\ub9ac\ub418\ub294 \uc694\uccad\uc758 \uc218\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4. Total Volume Processed by the KCM \u00b6 # Query to count API qps coming from kube-controller-manager, split by controller type. # If you're seeing values close to 20/sec for any particular controller, it's most likely seeing client-side API throttling. fields @timestamp, @logStream, @message | filter @logStream like /kube-apiserver-audit/ | filter userAgent like /kube-controller-manager/ # Exclude lease-related calls (not counted under kcm qps) | filter requestURI not like \"apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager\" # Exclude API discovery calls (not counted under kcm qps) | filter requestURI not like \"?timeout=32s\" # Exclude watch calls (not counted under kcm qps) | filter verb != \"watch\" # If you want to get counts of API calls coming from a specific controller, uncomment the appropriate line below: # | filter user.username like \"system:serviceaccount:kube-system:job-controller\" # | filter user.username like \"system:serviceaccount:kube-system:cronjob-controller\" # | filter user.username like \"system:serviceaccount:kube-system:deployment-controller\" # | filter user.username like \"system:serviceaccount:kube-system:replicaset-controller\" # | filter user.username like \"system:serviceaccount:kube-system:horizontal-pod-autoscaler\" # | filter user.username like \"system:serviceaccount:kube-system:persistent-volume-binder\" # | filter user.username like \"system:serviceaccount:kube-system:endpointslice-controller\" # | filter user.username like \"system:serviceaccount:kube-system:endpoint-controller\" # | filter user.username like \"system:serviceaccount:kube-system:generic-garbage-controller\" | stats count(*) as count by user.username | sort count desc \uc5ec\uae30\uc11c \uc911\uc694\ud55c \uc810\uc740 \ud655\uc7a5\uc131 \ubb38\uc81c\ub97c \uc870\uc0ac\ud560 \ub54c \uc790\uc138\ud55c \ubb38\uc81c \ud574\uacb0 \ub2e8\uacc4\ub85c \uc774\ub3d9\ud558\uae30 \uc804\uc5d0 \uacbd\ub85c\uc758 \ubaa8\ub4e0 \ub2e8\uacc4(API, \uc2a4\ucf00\uc904\ub7ec, KCM \ub4f1)\ub97c \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc785\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 \uc2dc\uc2a4\ud15c\uc774 \ucd5c\uace0\uc758 \uc131\ub2a5\uc73c\ub85c \uc791\ub3d9\ud560 \uc218 \uc788\ub3c4\ub85d Kubernetes\uc758 \ub450 \ubd80\ubd84 \uc774\uc0c1\uc744 \uc870\uc815\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \uc885\uc885 \uc788\uc2b5\ub2c8\ub2e4. \ud6e8\uc52c \ub354 \ud070 \ubcd1\ubaa9 \ud604\uc0c1\uc758 \ub2e8\uc21c\ud55c \uc99d\uc0c1(\uc608: \ub178\ub4dc \uc2dc\uac04 \ucd08\uacfc)\uc744 \uc2e4\uc218\ub85c \ud574\uacb0\ud558\ub294 \uac83\uc740 \uc27d\uc2b5\ub2c8\ub2e4. ETCD \u00b6 etcd\ub294 \uba54\ubaa8\ub9ac \ub9e4\ud551 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud0a4 \uac12 \uc30d\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 2, 4, 8GB \uc81c\ud55c\uc73c\ub85c \uc124\uc815\ub41c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba54\ubaa8\ub9ac \uacf5\uac04\uc758 \ud06c\uae30\ub97c \uc124\uc815\ud558\ub294 \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uac1c\uccb4 \uc218\uac00 \uc801\ub2e4\ub294 \uac83\uc740 \uac1c\uccb4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uace0 \uc774\uc804 \ubc84\uc804\uc744 \uc815\ub9ac\ud574\uc57c \ud560 \ub54c etcd\uc5d0\uc11c \uc218\ud589\ud574\uc57c \ud558\ub294 \uc815\ub9ac \uc791\uc5c5\uc774 \uc904\uc5b4\ub4e0\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uac1d\uccb4\uc758 \uc774\uc804 \ubc84\uc804\uc744 \uc815\ub9ac\ud558\ub294 \uc774\ub7ec\ud55c \ud504\ub85c\uc138\uc2a4\ub97c \uc555\ucd95\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \ubc88\uc758 \uc555\ucd95 \uc791\uc5c5 \ud6c4\uc5d0\ub294 \ud2b9\uc815 \uc784\uacc4\uac12 \uc774\uc0c1 \ub610\ub294 \uace0\uc815\ub41c \uc2dc\uac04 \uc77c\uc815\uc5d0 \ub530\ub77c \ubc1c\uc0dd\ud558\ub294 \uc870\uac01 \ubaa8\uc74c(defragging)\uc774\ub77c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04\uc744 \ubcf5\uad6c\ud558\ub294 \ud6c4\uc18d \ud504\ub85c\uc138\uc2a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes\uc758 \uac1c\uccb4 \uc218\ub97c \uc81c\ud55c\ud558\uc5ec \uc555\ucd95 \ubc0f \uc870\uac01 \ubaa8\uc74c \ud504\ub85c\uc138\uc2a4\uc758 \uc601\ud5a5\uc744 \uc904\uc774\uae30 \uc704\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc0ac\uc6a9\uc790 \uad00\ub828 \ud56d\ubaa9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Helm\uc740 \ub192\uc740 revisionHistoryLimit \uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 ReplicaSet\uc640 \uac19\uc740 \uc774\uc804 \uac1c\uccb4\uac00 \uc2dc\uc2a4\ud15c\uc5d0 \uc720\uc9c0\ub418\uc5b4 \ub864\ubc31\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ub85d \uc81c\ud55c\uc744 2\ub85c \uc124\uc815\ud558\uba74 \uac1c\uccb4(\uc608: ReplicaSets) \uc218\ub97c 10\uc5d0\uc11c 2\ub85c \uc904\uc77c \uc218 \uc788\uc73c\uba70 \uacb0\uacfc\uc801\uc73c\ub85c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ub85c\ub4dc\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. apiVersion : apps/v1 kind : Deployment spec : revisionHistoryLimit : 2 \ubaa8\ub2c8\ud130\ub9c1 \uad00\uc810\uc5d0\uc11c \uc2dc\uc2a4\ud15c \uc9c0\uc5f0 \uc2dc\uac04 \uae09\uc99d\uc774 \uc2dc\uac04 \ub2e8\uc704\ub85c \uad6c\ubd84\ub41c \uc124\uc815\ub41c \ud328\ud134\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 \uc774 \uc870\uac01 \ubaa8\uc74c \ud504\ub85c\uc138\uc2a4\uac00 \uc6d0\uc778\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc774 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch Logs\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc870\uac01 \ubaa8\uc74c\uc758 \uc2dc\uc791/\uc885\ub8cc \uc2dc\uac04\uc744 \ubcf4\ub824\uba74 \ub2e4\uc74c \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. fields *@timestamp*, *@message* | filter *@logStream* like /etcd-manager/ | filter *@message* like /defraging|defraged/ | sort *@timestamp* asc","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubaa8\ub2c8\ud130\ub9c1"},{"location":"scalability/docs/kcp_monitoring.kr/#_1","text":"","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubaa8\ub2c8\ud130\ub9c1"},{"location":"scalability/docs/kcp_monitoring.kr/#api-server","text":"API Server\ub97c \uc0b4\ud3b4\ubcfc \ub54c \uadf8 \uae30\ub2a5 \uc911 \ud558\ub098\uac00 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \uacfc\ubd80\ud558\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc778\ubc14\uc6b4\ub4dc \uc694\uccad\uc744 \uc870\uc808\ud558\ub294 \uac83\uc784\uc744 \uae30\uc5b5\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. API Server \uc218\uc900\uc5d0\uc11c \ubcd1\ubaa9 \ud604\uc0c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\ucc98\ub7fc \ubcf4\uc77c \uc218 \uc788\ub294 \uac83\uc740 \uc2e4\uc81c\ub85c \ub354 \uc2ec\uac01\ud55c \ubb38\uc81c\ub85c\ubd80\ud130 \uc774\ub97c \ubcf4\ud638\ud558\ub294 \uac83\uc77c \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c\uc744 \ud1b5\ud574 \uc774\ub3d9\ud558\ub294 \uc694\uccad\ub7c9 \uc99d\uac00\uc758 \uc7a5\ub2e8\uc810\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. API Server \uac12\uc744 \ub298\ub824\uc57c \ud558\ub294\uc9c0 \uacb0\uc815\ud558\uae30 \uc704\ud574 \uc5fc\ub450\uc5d0 \ub450\uc5b4\uc57c \ud560 \uc0ac\ud56d\uc5d0 \ub300\ud55c \uc791\uc740 \uc0d8\ud50c\ub9c1\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c\uc744 \ud1b5\ud574 \uc774\ub3d9\ud558\ub294 \uc694\uccad\uc758 \ub300\uae30 \uc2dc\uac04\uc740 \uc5bc\ub9c8\ub098 \ub429\ub2c8\uae4c? \uc9c0\uc5f0 \uc2dc\uac04\uc740 API Server \uc790\uccb4\uc785\ub2c8\uae4c, \uc544\ub2c8\uba74 etcd\uc640 \uac19\uc740 \"\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\"\uc785\ub2c8\uae4c? API \uc11c\ubc84 \ub300\uae30\uc5f4 \uae4a\uc774\uac00 \uc774 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc694\uc778\uc785\ub2c8\uae4c? API Prioirity and Fairness(APF) \ub300\uae30\uc5f4\uc774 \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 API \ud638\ucd9c \ud328\ud134\uc5d0 \ub9de\uac8c \uc62c\ubc14\ub974\uac8c \uc124\uc815\ub418\uc5b4 \uc788\uc2b5\ub2c8\uae4c?","title":"API Server"},{"location":"scalability/docs/kcp_monitoring.kr/#_2","text":"\uba3c\uc800 API \uc9c0\uc5f0 \uc2dc\uac04 \uce21\uc815 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec API Server\uac00 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub294 \ub370 \uac78\ub9ac\ub294 \uc2dc\uac04\uc744 \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 PromQL \ubc0f Grafana \ud788\ud2b8\ub9f5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. max(increase(apiserver_request_duration_seconds_bucket{subresource!=\"status\",subresource!=\"token\",subresource!=\"scale\",subresource!=\"/healthz\",subresource!=\"binding\",subresource!=\"proxy\",verb!=\"WATCH\"}[$__rate_interval])) by (le) \ud301 \uc774 \ubb38\uc11c\uc5d0 \uc0ac\uc6a9\ub41c API \ub300\uc2dc\ubcf4\ub4dc\ub85c API \uc11c\ubc84\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c blog \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc774\ub7ec\ud55c \uc694\uccad\uc740 \ubaa8\ub450 1\ucd08 \uc544\ub798\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc801\uc2dc\uc5d0 \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \uc788\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc88b\uc740 \ud45c\uc2dc\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \uc5b4\ub5a8\uae4c\uc694? \uc704\uc758 API \uc694\uccad \uae30\uac04\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud615\uc2dd\uc740 \ud788\ud2b8\ub9f5\uc785\ub2c8\ub2e4. \ud788\ud2b8\ub9f5 \ud615\uc2dd\uc758 \uc88b\uc740 \uc810\uc740 \uae30\ubcf8\uc801\uc73c\ub85c API\uc758 \uc81c\ud55c \uc2dc\uac04 \uac12(60\ucd08)\uc744 \uc54c\ub824\uc900\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc2e4\uc81c\ub85c \uc54c\uc544\uc57c \ud560 \uac83\uc740 \uc2dc\uac04 \ucd08\uacfc \uc784\uacc4\uac12\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \uc774 \uac12\uc774 \uc5b4\ub5a4 \uc784\uacc4\uac12\uc5d0 \uad00\uc2ec\uc744 \uac00\uc838\uc57c \ud558\ub294\uac00\uc785\ub2c8\ub2e4. \ud5c8\uc6a9 \uac00\ub2a5\ud55c \uc784\uacc4\uac12\uc5d0 \ub300\ud55c \ub300\ub7b5\uc801\uc778 \uc9c0\uce68\uc744 \ubcf4\ub824\uba74 \uc5ec\uae30 \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\ub294 \uc5c5\uc2a4\ud2b8\ub9bc Kubernetes SLO\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \uc774 \uba85\ub839\ubb38\uc758 max \ud568\uc218\ub97c \ud655\uc778\ud558\uc138\uc694. \uc5ec\ub7ec \uc11c\ubc84(\uae30\ubcf8\uc801\uc73c\ub85c EKS\uc758 \ub450 API Server)\ub97c \uc9d1\uacc4\ud558\ub294 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \ub54c \ud574\ub2f9 \uc11c\ubc84\uc758 \ud3c9\uade0\uc744 \uad6c\ud558\uc9c0 \uc54a\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4.","title":"\ubb38\uc81c\uac00 \uc788\ub294 \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?"},{"location":"scalability/docs/kcp_monitoring.kr/#_3","text":"\ud55c API Server [pod]\ub294 \ub85c\ub4dc\uac00 \uc57d\ud558\uace0 \ub2e4\ub978 \ud558\ub098\ub294 \uacfc\ubd80\ud558\uac00 \uac78\ub9ac\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\uc774 \ub450 \uc22b\uc790\uc758 \ud3c9\uade0\uc744 \uad6c\ud558\uba74 \ubb34\uc2a8 \uc77c\uc774 \ubc8c\uc5b4\uc84c\ub294\uc9c0 \uc798\ubabb \ud574\uc11d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc5ec\uae30\uc5d0\ub294 \uc138 \uac1c\uc758 API Server\uac00 \uc788\uc9c0\ub9cc \ubaa8\ub4e0 \ub85c\ub4dc\ub294 \uc774 API Server \uc911 \ud558\ub098\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c etcd \ubc0f API \uc11c\ubc84\uc640 \uac19\uc774 \uc5ec\ub7ec \uc11c\ubc84\uac00 \uc788\ub294 \ubaa8\ub4e0 \uac83\uc740 \uaddc\ubaa8 \ubc0f \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ud22c\uc790\ud560 \ub54c \ubd84\ub9ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. API Priority and Fairness(APF)\ub85c \uc804\ud658\ud558\uba74\uc11c \uc2dc\uc2a4\ud15c\uc758 \ucd1d \uc694\uccad \uc218\ub294 API Server\uac00 \ucd08\uacfc \uad6c\ub3c5\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud558\ub294 \ud558\ub098\uc758 \uc694\uc18c\uc77c \ubfd0\uc785\ub2c8\ub2e4. \uc774\uc81c \uc2dc\uc2a4\ud15c\uc5d0\uc11c \uc77c\ub828\uc758 \ub300\uae30\uc5f4\uc744 \uc0ac\uc6a9\ud558\ubbc0\ub85c \ub300\uae30\uc5f4\uc774 \uaf49 \ucc3c\ub294\uc9c0, \ud574\ub2f9 \ub300\uae30\uc5f4\uc758 \ud2b8\ub798\ud53d\uc774 \uc0ad\uc81c\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ub300\uae30\uc5f4\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. max without(instance)(apiserver_flowcontrol_request_concurrency_limit{}) Note API A&F \uc791\ub3d9 \ubc29\uc2dd\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc5ec\uae30\uc5d0\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc81c\uacf5\ub418\ub294 7\uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uc6b0\uc120\uc21c\uc704 \uadf8\ub8f9\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc73c\ub85c \ud2b9\uc815 \uc6b0\uc120\uc21c\uc704 \uc218\uc900\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc778\uc9c0 \ud30c\uc545\ud558\uae30 \uc704\ud574 \ud574\ub2f9 \uc6b0\uc120\uc21c\uc704 \uadf8\ub8f9\uc774 \uba87 \ud37c\uc13c\ud2b8\uc758 \ube44\uc728\ub85c \uc0ac\uc6a9\ub418\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0\uc790 \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \ub0ae\uc740 \uc218\uc900\uc5d0\uc11c\ub294 \uc694\uccad\uc744 \uc2a4\ub85c\ud2c0\ub9c1\ud558\ub294 \uac83\uc774 \ubc14\ub78c\uc9c1\ud560 \uc218 \uc788\uc9c0\ub9cc \ub9ac\ub354 \uc120\ucd9c \uc218\uc900\uc5d0\uc11c\ub294 \uadf8\ub807\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. API Priority and Fairness(APF) \uc2dc\uc2a4\ud15c\uc5d0\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubcf5\uc7a1\ud55c \uc635\uc158\uc774 \uc788\uc73c\uba70, \uc774\ub7ec\ud55c \uc635\uc158 \uc911 \uc77c\ubd80\ub294 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uacb0\uacfc\ub97c \ucd08\ub798\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \uc77c\ubc18\uc801\uc73c\ub85c \ubcfc \uc218 \uc788\ub294 \ubb38\uc81c\ub294 \ubd88\ud544\uc694\ud55c \ub300\uae30 \uc2dc\uac04\uc774 \ucd94\uac00\ub418\uae30 \uc2dc\uc791\ud558\ub294 \uc9c0\uc810\uae4c\uc9c0 \ub300\uae30\uc5f4 \uae4a\uc774\ub97c \ub298\ub9ac\ub294 \uac83\uc785\ub2c8\ub2e4. apiserver_flowcontrol_current_inqueue_request \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \ubb38\uc81c\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiserver_flowcontrol_rejected_requests_total \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc0ad\uc81c\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc84\ud0b7\uc774 \ub3d9\uc2dc\uc131\uc744 \ucd08\uacfc\ud558\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc9c0\ud45c\ub294 0\uc774 \uc544\ub2cc \uac12\uc774 \ub429\ub2c8\ub2e4. \ub300\uae30\uc5f4 \uae4a\uc774\ub97c \ub298\ub9ac\uba74 API Server\uac00 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc911\uc694\ud55c \uc6d0\uc778\uc774 \ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uc8fc\uc758\ud574\uc11c \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0dd\uc131\ub41c \ub300\uae30\uc5f4 \uc218\ub97c \uc2e0\uc911\ud558\uac8c \uacb0\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 EKS \uc2dc\uc2a4\ud15c\uc758 \uacf5\uc720 \uc218\ub294 600\uac1c\uc785\ub2c8\ub2e4. \ub108\ubb34 \ub9ce\uc740 \ub300\uae30\uc5f4\uc744 \uc0dd\uc131\ud558\uba74 \ub9ac\ub354 \uc120\ud0dd \ub300\uae30\uc5f4\uc774\ub098 \uc2dc\uc2a4\ud15c \ub300\uae30\uc5f4\uacfc \uac19\uc774 \ucc98\ub9ac\ub7c9\uc774 \ud544\uc694\ud55c \uc911\uc694\ud55c \ub300\uae30\uc5f4\uc758 \uacf5\uc720\uac00 \uc904\uc5b4\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \ub300\uae30\uc5f4\uc744 \ub108\ubb34 \ub9ce\uc774 \uc0dd\uc131\ud558\uba74 \uc774\ub7ec\ud55c \ub300\uae30\uc5f4\uc758 \ud06c\uae30\ub97c \uc62c\ubc14\ub974\uac8c \uc9c0\uc815\ud558\uae30\uac00 \ub354 \uc5b4\ub824\uc6cc\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. APF\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud558\uace0 \uc601\ud5a5\ub825 \uc788\ub294 \ubcc0\uacbd\uc5d0 \ucd08\uc810\uc744 \ub9de\ucd94\uae30 \uc704\ud574 \ud65c\uc6a9\ub3c4\uac00 \ub0ae\uc740 \ubc84\ud0b7\uc5d0\uc11c \uacf5\uc720\ub97c \uac00\uc838\uc640 \ucd5c\ub300 \uc0ac\uc6a9\ub7c9\uc5d0 \uc788\ub294 \ubc84\ud0b7\uc758 \ud06c\uae30\ub97c \ub298\ub9bd\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubc84\ud0b7 \uac04\uc5d0 \uacf5\uc720\ub97c \uc9c0\ub2a5\uc801\uc73c\ub85c \uc7ac\ubd84\ubc30\ud568\uc73c\ub85c\uc368 \uc0ad\uc81c \uac00\ub2a5\uc131\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc API \uc6b0\uc120\uc21c\uc704 \ubc0f \uacf5\uc815\uc131 \uc124\uc815 \uc744 \ucc38\uc870\ud558\uc138\uc694.","title":"\ube44\ub300\uce6d \ud2b8\ub798\ud53d \ud328\ud134"},{"location":"scalability/docs/kcp_monitoring.kr/#api-vs-etcd","text":"API Server\uc758 \uba54\ud2b8\ub9ad/\ub85c\uadf8\ub97c \uc0ac\uc6a9\ud558\uc5ec API Server\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0, API Server\uc758 \uc5c5\uc2a4\ud2b8\ub9bc/\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \ub610\ub294 \uc774 \ub458\uc758 \uc870\ud569\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \ud310\ub2e8\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud569\ub2c8\uae4c? \uc774\ub97c \ub354 \uc798 \uc774\ud574\ud558\uae30 \uc704\ud574 API Server\uc640 etcd\uac00 \uc5b4\ub5a4 \uad00\ub828\uc774 \uc788\ub294\uc9c0, \uadf8\ub9ac\uace0 \uc798\ubabb\ub41c \uc2dc\uc2a4\ud15c\uc744 \ud574\uacb0\ud558\ub294 \uac83\uc774 \uc5bc\ub9c8\ub098 \uc26c\uc6b4\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \ucc28\ud2b8\uc5d0\uc11c\ub294 API Server\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ubcfc \uc218 \uc788\uc9c0\ub9cc, etcd \uc218\uc900\uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uadf8\ub798\ud504\uc758 \ub9c9\ub300\ub85c \uc778\ud574 \uc774 \uc9c0\uc5f0 \uc2dc\uac04\uc758 \uc0c1\ub2f9 \ubd80\ubd84\uc774 etcd \uc11c\ubc84\uc640 \uc5f0\uad00\ub418\uc5b4 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. etcd \ub300\uae30 \uc2dc\uac04\uc774 15\ucd08\uc774\uace0 \ub3d9\uc2dc\uc5d0 API \uc11c\ubc84 \ub300\uae30 \uc2dc\uac04\uc774 20\ucd08\uc778 \uacbd\uc6b0 \ub300\uae30 \uc2dc\uac04\uc758 \ub300\ubd80\ubd84\uc740 \uc2e4\uc81c\ub85c etcd \uc218\uc900\uc5d0 \uc788\uc2b5\ub2c8\ub2e4 \uc804\uccb4 \ud750\ub984\uc744 \uc0b4\ud3b4\ubcf4\uba74 API Server\uc5d0\ub9cc \uc9d1\uc911\ud558\uc9c0 \uc54a\uace0 etcd\uac00 \uc555\ubc15\uc744 \ubc1b\uace0 \uc788\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \uc2e0\ud638(\uc608: slow apply counters \uc99d\uac00)\ub97c \ucc3e\ub294 \uac83\uc774 \ud604\uba85\ud558\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip The dashboard in section can be found at https://github.com/RiskyAdventure/Troubleshooting-Dashboards/blob/main/api-troubleshooter.json","title":"API vs. etcd \uc9c0\uc5f0 \uc2dc\uac04"},{"location":"scalability/docs/kcp_monitoring.kr/#_4","text":"\uc774 \ucc28\ud2b8\uc5d0\uc11c\ub294 \ud574\ub2f9 \uae30\uac04 \ub3d9\uc548 \uc644\ub8cc\ud558\ub294 \ub370 \uac00\uc7a5 \ub9ce\uc740 \uc2dc\uac04\uc774 \uac78\ub9b0 API \ud638\ucd9c\uc744 \ucc3e\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 custom resource definitions(CRD)\uac00 05:40 \uc2dc\uac04 \ud504\ub808\uc784 \ub3d9\uc548 \uac00\uc7a5 \uc624\ub798\uac78\ub9b0 \ud638\ucd9c\uc774 APPLY \ud568\uc218\ub77c\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c Ad-Hoc PromQL \ub610\ub294 CloudWatch Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud574\ub2f9 \uae30\uac04 \ub3d9\uc548 \uac10\uc0ac \ub85c\uadf8\uc5d0\uc11c LIST \uc694\uccad\uc744 \uac00\uc838\uc640\uc11c \uc5b4\ub5a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc778\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ud074\ub77c\uc774\uc5b8\ud2b8 \uce21 \ubb38\uc81c"},{"location":"scalability/docs/kcp_monitoring.kr/#cloudwatch","text":"\uba54\ud2b8\ub9ad\uc740 \uc0b4\ud3b4\ubcf4\uace0\uc790 \ud558\ub294 \ubb38\uc81c \uc601\uc5ed\uc744 \ucc3e\uace0 \ubb38\uc81c\uc758 \uae30\uac04\uacfc \uac80\uc0c9 \ub9e4\uac1c\ubcc0\uc218\ub97c \ubaa8\ub450 \uc881\ud788\ub294 \ub370 \uac00\uc7a5 \uc798 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130\uac00 \ud655\ubcf4\ub418\uba74 \ub354 \uc790\uc138\ud55c \uc2dc\uac04\uacfc \uc624\ub958\uc5d0 \ub300\ud55c \ub85c\uadf8\ub85c \uc804\ud658\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 CloudWatch Logs Insights \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uba54\ud2b8\ub9ad\uc73c\ub85c \uc804\ud658\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \uc704\uc758 \ubb38\uc81c\ub97c \uc870\uc0ac\ud558\uae30 \uc704\ud574 \ub2e4\uc74c CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc5d0\uc774\uc804\ud2b8 \ubc0f requestURI\ub97c \uac00\uc838\uc640\uc11c \uc5b4\ub5a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc774 \uc9c0\uc5f0\uc744 \uc77c\uc73c\ud0a4\ub294\uc9c0 \uc815\ud655\ud788 \ud30c\uc545\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 Watch\uc5d0\uc11c \uc815\uc0c1\uc801\uc778 List/Resync \ub3d9\uc791\uc744 \uac00\uc838\uc624\uc9c0 \uc54a\uc73c\ub824\uba74 \uc801\uc808\ud55c \uac1c\uc218\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. fields *@timestamp*, *@message* | filter *@logStream* like \"kube-apiserver-audit\" | filter ispresent(requestURI) | filter verb = \"list\" | parse requestReceivedTimestamp /\\d+-\\d+-(?<StartDay>\\d+)T(?<StartHour>\\d+):(?<StartMinute>\\d+):(?<StartSec>\\d+).(?<StartMsec>\\d+)Z/ | parse stageTimestamp /\\d+-\\d+-(?<EndDay>\\d+)T(?<EndHour>\\d+):(?<EndMinute>\\d+):(?<EndSec>\\d+).(?<EndMsec>\\d+)Z/ | fields (StartHour * 3600 + StartMinute * 60 + StartSec + StartMsec / 1000000) as StartTime, (EndHour * 3600 + EndMinute * 60 + EndSec + EndMsec / 1000000) as EndTime, (EndTime - StartTime) as DeltaTime | stats avg(DeltaTime) as AverageDeltaTime, count(*) as CountTime by requestURI, userAgent | filter CountTime >=50 | sort AverageDeltaTime desc \uc774 \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub300\uae30 \uc2dc\uac04\uc774 \uae34 list \uc791\uc5c5\uc744 \ub300\ub7c9\uc73c\ub85c \uc2e4\ud589\ud558\ub294 \ub450 \uac1c\uc758 \uc11c\ub85c \ub2e4\ub978 \uc5d0\uc774\uc804\ud2b8(Splunk \ubc0f CloudWatch Agent)\ub97c \ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c \uc774 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc81c\uac70, \uc5c5\ub370\uc774\ud2b8\ud558\uac70\ub098 \ub2e4\ub978 \ud504\ub85c\uc81d\ud2b8\ub85c \uad50\uccb4\ud558\uae30\ub85c \uacb0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Tip \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"CloudWatch\ub85c \uc18c\uc2a4 \ucc3e\uae30"},{"location":"scalability/docs/kcp_monitoring.kr/#scheduler","text":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc778\uc2a4\ud134\uc2a4\ub294 \ubcc4\ub3c4\uc758 AWS \uacc4\uc815\uc5d0\uc11c \uc2e4\ud589\ub418\ubbc0\ub85c \uce21\uc815 \uc9c0\ud45c\uc5d0 \ub300\ud55c \ud574\ub2f9 \uad6c\uc131 \uc694\uc18c\ub97c \uc218\uc9d1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4(API Server\ub294 \uc608\uc678\uc784). \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uac10\uc0ac \ub85c\uadf8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \ud574\ub2f9 \ub85c\uadf8\ub97c \uc9c0\ud45c\ub85c \ubcc0\ud658\ud558\uc5ec \ud655\uc7a5 \uc2dc \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc77c\uc73c\ud0a4\ub294 \ud558\uc704 \uc2dc\uc2a4\ud15c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch Logs Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec \ub300\uae30\uc5f4\uc5d0 \uc608\uc57d\ub418\uc9c0 \uc54a\uc740 Pod\uac00 \uba87 \uac1c \uc788\ub294\uc9c0 \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"Scheduler"},{"location":"scalability/docs/kcp_monitoring.kr/#_5","text":"\uc790\uccb4 \uad00\ub9ac\ud615 Kubernetes(\uc608: Kops)\uc5d0\uc11c \uc9c1\uc811 \uc2a4\ucf00\uc904\ub7ec \uc9c0\ud45c\ub97c \uc2a4\ud06c\ub7a9\ud560 \uc218 \uc788\ub294 \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c PromQL\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc904\ub7ec \ubc31\ub85c\uadf8\ub97c \uc774\ud574\ud569\ub2c8\ub2e4. max without(instance)(scheduler_pending_pods) EKS\uc5d0\uc11c\ub294 \uc704 \uc9c0\ud45c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \uc544\ub798 CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 \uae30\uac04 \ub3d9\uc548 \uc608\uc57d\uc744 \ucde8\uc18c\ud560 \uc218 \uc5c6\uc5c8\ub358 \ud30c\ub4dc \uc218\ub97c \ud655\uc778\ud558\uc5ec \ubc31\ub85c\uadf8\ub97c \ud655\uc778\ud560 \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud53c\ud06c \ud0c0\uc784\uc758 \uba54\uc2dc\uc9c0\ub97c \ub354 \uc790\uc138\ud788 \ubd84\uc11d\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc758 \ud2b9\uc131\uc744 \uc774\ud574\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uac00 \ucda9\ubd84\ud788 \ube60\ub974\uac8c \uad50\uccb4\ub418\uc9c0 \uc54a\uac70\ub098 \uc2a4\ucf00\uc904\ub7ec \uc790\uccb4\uc758 rate limiter\ub97c \uc608\ub85c \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fields timestamp, pod, err, *@message* | filter *@logStream* like \"scheduler\" | filter *@message* like \"Unable to schedule pod\" | parse *@message* /^.(?<date>\\d{4})\\s+(?<timestamp>\\d+:\\d+:\\d+\\.\\d+)\\s+\\S*\\s+\\S+\\]\\s\\\"(.*?)\\\"\\s+pod=(?<pod>\\\"(.*?)\\\")\\s+err=(?<err>\\\"(.*?)\\\")/ | count(*) as count by pod, err | sort count desc \uc5ec\uae30\uc11c\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 PVC\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc5b4 \ud30c\ub4dc\uac00 \ubc30\ud3ec\ub418\uc9c0 \uc54a\uc558\ub2e4\ub294 \uc2a4\ucf00\uc904\ub7ec\uc758 \uc624\ub958\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0 \uc774 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud558\ub824\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \uac10\uc0ac \ub85c\uae45\uc744 \ucf1c\uc57c \ud569\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubd88\ud544\uc694\ud558\uac8c \ube44\uc6a9\uc774 \uc99d\uac00\ud558\uc9c0 \uc54a\ub3c4\ub85d \ub85c\uadf8 \ubcf4\uc874\uc744 \uc81c\ud55c\ud558\ub294 \uac83\ub3c4 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uc740 EKSCTL \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub85c\uae45 \uae30\ub2a5\uc744 \ucf1c\ub294 \uc608\uc81c\uc785\ub2c8\ub2e4. cloudWatch : clusterLogging : enableTypes : [ \"*\" ] logRetentionInDays : 10","title":"\uc2a4\ucf00\uc904\ub7ec \ub85c\uadf8\uc5d0\uc11c \uc608\uc57d\ub418\uc9c0 \uc54a\uc740 \ud30c\ub4dc"},{"location":"scalability/docs/kcp_monitoring.kr/#kube-controller-manager","text":"\ub2e4\ub978 \ubaa8\ub4e0 \ucee8\ud2b8\ub864\ub7ec\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c Kube Controller Manager\ub294 \ud55c \ubc88\uc5d0 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5 \uc218\uc5d0 \uc81c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\ub77c\ubbf8\ud130\ub97c \uc124\uc815\ud560 \uc218 \uc788\ub294 KOPS \uad6c\uc131\uc744 \uc0b4\ud3b4\ubcf4\uba74\uc11c \uc774\ub7ec\ud55c \ud50c\ub798\uadf8 \uc911 \uc77c\ubd80\uac00 \ubb34\uc5c7\uc778\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. kubeControllerManager : concurrentEndpointSyncs : 5 concurrentReplicasetSyncs : 5 concurrentNamespaceSyncs : 10 concurrentServiceaccountTokenSyncs : 5 concurrentServiceSyncs : 5 concurrentResourceQuotaSyncs : 5 concurrentGcSyncs : 20 kubeAPIBurst : 20 kubeAPIQPS : \"30\" \uc774\ub7ec\ud55c \ucee8\ud2b8\ub864\ub7ec\uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubcc0\ub3d9\uc774 \uc2ec\ud560 \ub54c \ub300\uae30\uc5f4\uc774 \uaf49 \ucc28\uac8c \ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 replicaset controller\uc758 \ub300\uae30\uc5f4\uc5d0 \ub300\uaddc\ubaa8 \ubc31\ub85c\uadf8\uac00 \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc744 \ud574\uacb0\ud558\ub294 \ubc29\ubc95\uc5d0\ub294 \ub450 \uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \uad00\ub9ac\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ub3d9\uc2dc \uace0\ub8e8\ud2f4\uc744 \ub298\ub9b4 \uc218 \uc788\uc9c0\ub9cc \uc774\ub294 KCM\uc5d0\uc11c \ub354 \ub9ce\uc740 \ub370\uc774\ud130\ub97c \ucc98\ub9ac\ud558\uc5ec etcd\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uc635\uc158\uc740 \ubc30\ud3ec\uc5d0\uc11c .spec.revisionHistoryLimit \uc744 \uc0ac\uc6a9\ud558\uc5ec replicaset \uac1c\uccb4 \uc218\ub97c \uc904\uc774\uace0 \ub864\ubc31\ud560 \uc218 \uc788\ub294 replicaset \uac1c\uccb4 \uc218\ub97c \uc904\uc5ec \ud574\ub2f9 \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub300\ud55c \ubd80\ub2f4\uc744 \uc904\uc774\ub294 \uac83\uc785\ub2c8\ub2e4. spec : revisionHistoryLimit : 2 \ub2e4\ub978 Kubernetes \uae30\ub2a5\uc744 \uc870\uc815\ud558\uac70\ub098 \ud574\uc81c\ud558\uc5ec \uc774\ud0c8\ub960\uc774 \ub192\uc740 \uc2dc\uc2a4\ud15c\uc758 \uc555\ub825\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ud30c\ub4dc\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 k8s API\uc640 \uc9c1\uc811 \ud1b5\uc2e0\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud574\ub2f9 \ud30c\ub4dc\uc5d0 \uc801\uc6a9\ub41c \uc2dc\ud06c\ub9bf\uc744 \ub044\uba74 ServiceAccountTokenSync\uc758 \ubd80\ud558\ub97c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \uc774\ub7f0 \ubb38\uc81c\ub97c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \ub354 \ubc14\ub78c\uc9c1\ud55c \ubc29\ubc95\uc785\ub2c8\ub2e4. kind : Pod spec : automountServiceAccountToken : false \uc9c0\ud45c\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\ub294 \uc2dc\uc2a4\ud15c\uc5d0\uc11c\ub294 \ub85c\uadf8\ub97c \ub2e4\uc2dc \uac80\ud1a0\ud558\uc5ec \uacbd\ud569\uc744 \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub2f9 \ub610\ub294 \uc9d1\uacc4 \uc218\uc900\uc5d0\uc11c \ucc98\ub9ac\ub418\ub294 \uc694\uccad\uc758 \uc218\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 CloudWatch Logs Insights \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.","title":"Kube Controller Manager"},{"location":"scalability/docs/kcp_monitoring.kr/#total-volume-processed-by-the-kcm","text":"# Query to count API qps coming from kube-controller-manager, split by controller type. # If you're seeing values close to 20/sec for any particular controller, it's most likely seeing client-side API throttling. fields @timestamp, @logStream, @message | filter @logStream like /kube-apiserver-audit/ | filter userAgent like /kube-controller-manager/ # Exclude lease-related calls (not counted under kcm qps) | filter requestURI not like \"apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager\" # Exclude API discovery calls (not counted under kcm qps) | filter requestURI not like \"?timeout=32s\" # Exclude watch calls (not counted under kcm qps) | filter verb != \"watch\" # If you want to get counts of API calls coming from a specific controller, uncomment the appropriate line below: # | filter user.username like \"system:serviceaccount:kube-system:job-controller\" # | filter user.username like \"system:serviceaccount:kube-system:cronjob-controller\" # | filter user.username like \"system:serviceaccount:kube-system:deployment-controller\" # | filter user.username like \"system:serviceaccount:kube-system:replicaset-controller\" # | filter user.username like \"system:serviceaccount:kube-system:horizontal-pod-autoscaler\" # | filter user.username like \"system:serviceaccount:kube-system:persistent-volume-binder\" # | filter user.username like \"system:serviceaccount:kube-system:endpointslice-controller\" # | filter user.username like \"system:serviceaccount:kube-system:endpoint-controller\" # | filter user.username like \"system:serviceaccount:kube-system:generic-garbage-controller\" | stats count(*) as count by user.username | sort count desc \uc5ec\uae30\uc11c \uc911\uc694\ud55c \uc810\uc740 \ud655\uc7a5\uc131 \ubb38\uc81c\ub97c \uc870\uc0ac\ud560 \ub54c \uc790\uc138\ud55c \ubb38\uc81c \ud574\uacb0 \ub2e8\uacc4\ub85c \uc774\ub3d9\ud558\uae30 \uc804\uc5d0 \uacbd\ub85c\uc758 \ubaa8\ub4e0 \ub2e8\uacc4(API, \uc2a4\ucf00\uc904\ub7ec, KCM \ub4f1)\ub97c \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc785\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158\uc5d0\uc11c\ub294 \uc2dc\uc2a4\ud15c\uc774 \ucd5c\uace0\uc758 \uc131\ub2a5\uc73c\ub85c \uc791\ub3d9\ud560 \uc218 \uc788\ub3c4\ub85d Kubernetes\uc758 \ub450 \ubd80\ubd84 \uc774\uc0c1\uc744 \uc870\uc815\ud574\uc57c \ud558\ub294 \uacbd\uc6b0\uac00 \uc885\uc885 \uc788\uc2b5\ub2c8\ub2e4. \ud6e8\uc52c \ub354 \ud070 \ubcd1\ubaa9 \ud604\uc0c1\uc758 \ub2e8\uc21c\ud55c \uc99d\uc0c1(\uc608: \ub178\ub4dc \uc2dc\uac04 \ucd08\uacfc)\uc744 \uc2e4\uc218\ub85c \ud574\uacb0\ud558\ub294 \uac83\uc740 \uc27d\uc2b5\ub2c8\ub2e4.","title":"Total Volume Processed by the KCM"},{"location":"scalability/docs/kcp_monitoring.kr/#etcd","text":"etcd\ub294 \uba54\ubaa8\ub9ac \ub9e4\ud551 \ud30c\uc77c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud0a4 \uac12 \uc30d\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 2, 4, 8GB \uc81c\ud55c\uc73c\ub85c \uc124\uc815\ub41c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba54\ubaa8\ub9ac \uacf5\uac04\uc758 \ud06c\uae30\ub97c \uc124\uc815\ud558\ub294 \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc758 \uac1c\uccb4 \uc218\uac00 \uc801\ub2e4\ub294 \uac83\uc740 \uac1c\uccb4\uac00 \uc5c5\ub370\uc774\ud2b8\ub418\uace0 \uc774\uc804 \ubc84\uc804\uc744 \uc815\ub9ac\ud574\uc57c \ud560 \ub54c etcd\uc5d0\uc11c \uc218\ud589\ud574\uc57c \ud558\ub294 \uc815\ub9ac \uc791\uc5c5\uc774 \uc904\uc5b4\ub4e0\ub2e4\ub294 \uac83\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \uac1d\uccb4\uc758 \uc774\uc804 \ubc84\uc804\uc744 \uc815\ub9ac\ud558\ub294 \uc774\ub7ec\ud55c \ud504\ub85c\uc138\uc2a4\ub97c \uc555\ucd95\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \uc5ec\ub7ec \ubc88\uc758 \uc555\ucd95 \uc791\uc5c5 \ud6c4\uc5d0\ub294 \ud2b9\uc815 \uc784\uacc4\uac12 \uc774\uc0c1 \ub610\ub294 \uace0\uc815\ub41c \uc2dc\uac04 \uc77c\uc815\uc5d0 \ub530\ub77c \ubc1c\uc0dd\ud558\ub294 \uc870\uac01 \ubaa8\uc74c(defragging)\uc774\ub77c\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04\uc744 \ubcf5\uad6c\ud558\ub294 \ud6c4\uc18d \ud504\ub85c\uc138\uc2a4\uac00 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes\uc758 \uac1c\uccb4 \uc218\ub97c \uc81c\ud55c\ud558\uc5ec \uc555\ucd95 \ubc0f \uc870\uac01 \ubaa8\uc74c \ud504\ub85c\uc138\uc2a4\uc758 \uc601\ud5a5\uc744 \uc904\uc774\uae30 \uc704\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc0ac\uc6a9\uc790 \uad00\ub828 \ud56d\ubaa9\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Helm\uc740 \ub192\uc740 revisionHistoryLimit \uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 ReplicaSet\uc640 \uac19\uc740 \uc774\uc804 \uac1c\uccb4\uac00 \uc2dc\uc2a4\ud15c\uc5d0 \uc720\uc9c0\ub418\uc5b4 \ub864\ubc31\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ub85d \uc81c\ud55c\uc744 2\ub85c \uc124\uc815\ud558\uba74 \uac1c\uccb4(\uc608: ReplicaSets) \uc218\ub97c 10\uc5d0\uc11c 2\ub85c \uc904\uc77c \uc218 \uc788\uc73c\uba70 \uacb0\uacfc\uc801\uc73c\ub85c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ub85c\ub4dc\uac00 \uc904\uc5b4\ub4ed\ub2c8\ub2e4. apiVersion : apps/v1 kind : Deployment spec : revisionHistoryLimit : 2 \ubaa8\ub2c8\ud130\ub9c1 \uad00\uc810\uc5d0\uc11c \uc2dc\uc2a4\ud15c \uc9c0\uc5f0 \uc2dc\uac04 \uae09\uc99d\uc774 \uc2dc\uac04 \ub2e8\uc704\ub85c \uad6c\ubd84\ub41c \uc124\uc815\ub41c \ud328\ud134\uc73c\ub85c \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0 \uc774 \uc870\uac01 \ubaa8\uc74c \ud504\ub85c\uc138\uc2a4\uac00 \uc6d0\uc778\uc778\uc9c0 \ud655\uc778\ud558\ub294 \uac83\uc774 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudWatch Logs\ub97c \uc0ac\uc6a9\ud558\uba74 \uc774\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc870\uac01 \ubaa8\uc74c\uc758 \uc2dc\uc791/\uc885\ub8cc \uc2dc\uac04\uc744 \ubcf4\ub824\uba74 \ub2e4\uc74c \ucffc\ub9ac\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. fields *@timestamp*, *@message* | filter *@logStream* like /etcd-manager/ | filter *@message* like /defraging|defraged/ | sort *@timestamp* asc","title":"ETCD"},{"location":"scalability/docs/kcp_monitoring/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Control Plane Monitoring \u00b6 API Server \u00b6 When looking at our API server it\u2019s important to remember that one of its functions is to throttle inbound requests to prevent overloading the control plane. What can seem like a bottleneck at the API server level might actually be protecting it from more serious issues. We need to factor in the pros and cons of increasing the volume of requests moving through the system. To make a determination if the API server values should be increased, here is small sampling of the things we need to be mindful of: What is the latency of requests moving through the system? Is that latency the API server itself, or something \u201cdownstream\u201d like etcd? Is the API server queue depth a factor in this latency? Are the API Priority and Fairness (APF) queues setup correctly for the API call patterns we want? Where is the issue? \u00b6 To start, we can use the metric for API latency to give us insight into how long it\u2019s taking the API server to service requests. Let\u2019s use the below PromQL and Grafana heatmap to display this data. max(increase(apiserver_request_duration_seconds_bucket{subresource!=\"status\",subresource!=\"token\",subresource!=\"scale\",subresource!=\"/healthz\",subresource!=\"binding\",subresource!=\"proxy\",verb!=\"WATCH\"}[$__rate_interval])) by (le) Tip For an in depth write up on how to monitor the API server with the API dashboard used in this article, please see the following blog These requests are all under the one second mark, which is a good indication that the control plane is handling requests in a timely fashion. But what if that was not the case? The format we are using in the above API Request Duration is a heatmap. What\u2019s nice about the heatmap format, is that it tells us the timeout value for the API by default (60 sec). However, what we really need to know is at what threshold should this value be of concern before we reach the timeout threshold. For a rough guideline of what acceptable thresholds are we can use the upstream Kubernetes SLO, which can be found here Tip Notice the max function on this statement? When using metrics that are aggregating multiple servers (by default two API servers on EKS) it\u2019s important not to average those servers together. Asymmetrical traffic patterns \u00b6 What if one API server [pod] was lightly loaded, and the other heavily loaded? If we averaged those two numbers together we might misinterpret what was happening. For example, here we have three API servers but all of the load is on one of these API servers. As a rule anything that has multiple servers such as etcd and API servers should be broken out when investing scale and performance issues. With the move to API Priority and Fairness the total number of requests on the system is only one factor to check to see if the API server is oversubscribed. Since the system now works off a series of queues, we must look to see if any of these queues are full and if the traffic for that queue is getting dropped. Let\u2019s look at these queues with the following query: max without(instance)(apiserver_flowcontrol_request_concurrency_limit{}) Note For more information on how API A&F works please see the following best practices guide Here we see the seven different priority groups that come by default on the cluster Next we want to see what percentage of that priority group is being used, so that we can understand if a certain priority level is being saturated. Throttling requests in the workload-low level might be desirable, however drops in a leader election level would not be. The API Priority and Fairness (APF) system has a number of complex options, some of those options can have unintended consequences. A common issue we see in the field is increasing the queue depth to the point it starts adding unnecessary latency. We can monitor this problem by using the apiserver_flowcontrol_current_inqueue_request metric. We can check for drops using the apiserver_flowcontrol_rejected_requests_total . These metrics will be a non-zero value if any bucket exceeds its concurrency. Increasing the queue depth can make the API Server a significant source of latency and should be done with care. We recommend being judicious with the number of queues created. For example, the number of shares on a EKS system is 600, if we create too many queues, this can reduce the shares in important queues that need the throughput such as the leader-election queue or system queue. Creating too many extra queues can make it more difficult to size theses queues correctly. To focus on a simple impactful change you can make in APF we simply take shares from underutilized buckets and increase the size of buckets that are at their max usage. By intelligently redistributing the shares among these buckets, you can make drops less likely. For more information, visit API Priority and Fairness settings in the EKS Best Practices Guide. API vs. etcd latency \u00b6 How can we use the metrics/logs of the API server to determine whether there\u2019s a problem with API server, or a problem that\u2019s upstream/downstream of the API server, or a combination of both. To understand this better, lets look at how API Server and etcd can be related, and how easy it can be to troubleshoot the wrong system. In the below chart we see API server latency, but we also see much of this latency is correlated to the etcd server due to the bars in the graph showing most of the latency at the etcd level. If there is 15 secs of etcd latency at the same time there is 20 seconds of API server latency, then the majority of the latency is actually at the etcd level. By looking at the whole flow, we see that it\u2019s wise to not focus solely on the API Server, but also look for signals that indicate that etcd is under duress (i.e. slow apply counters increasing). Being able to quickly move to the right problem area with just a glance is what makes a dashboard powerful. Tip The dashboard in section can be found at https://github.com/RiskyAdventure/Troubleshooting-Dashboards/blob/main/api-troubleshooter.json Control plane vs. Client side issues \u00b6 In this chart we are looking for the API calls that took the most time to complete for that period. In this case we see a custom resource (CRD) is calling a APPLY function that is the most latent call during the 05:40 time frame. Armed with this data we can use an Ad-Hoc PromQL or a CloudWatch Insights query to pull LIST requests from the audit log during that time frame to see which application this might be. Finding the Source with CloudWatch \u00b6 Metrics are best used to find the problem area we want to look at and narrow both the timeframe and the search parameters of the problem. Once we have this data we want to transition to logs for more detailed times and errors. To do this we will turn our logs into metrics using CloudWatch Logs Insights . For example, to investigate the issue above, we will use the following CloudWatch Logs Insights query to pull the userAgent and requestURI so that we can pin down which application is causing this latency. Tip An appropriate Count needs to be used as to not pull normal List/Resync behavior on a Watch. fields *@timestamp*, *@message* | filter *@logStream* like \"kube-apiserver-audit\" | filter ispresent(requestURI) | filter verb = \"list\" | parse requestReceivedTimestamp /\\d+-\\d+-(?<StartDay>\\d+)T(?<StartHour>\\d+):(?<StartMinute>\\d+):(?<StartSec>\\d+).(?<StartMsec>\\d+)Z/ | parse stageTimestamp /\\d+-\\d+-(?<EndDay>\\d+)T(?<EndHour>\\d+):(?<EndMinute>\\d+):(?<EndSec>\\d+).(?<EndMsec>\\d+)Z/ | fields (StartHour * 3600 + StartMinute * 60 + StartSec + StartMsec / 1000000) as StartTime, (EndHour * 3600 + EndMinute * 60 + EndSec + EndMsec / 1000000) as EndTime, (EndTime - StartTime) as DeltaTime | stats avg(DeltaTime) as AverageDeltaTime, count(*) as CountTime by requestURI, userAgent | filter CountTime >=50 | sort AverageDeltaTime desc Using this query we found two different agents running a large number of high latency list operations. Splunk and CloudWatch agent. Armed with the data, we can make a decision to remove, update, or replace this controller with another project. Tip For more details on this subject please see the following blog Scheduler \u00b6 Since the EKS control plane instances are run in separate AWS account we will not be able to scrape those components for metrics (The API server being the exception). However, since we have access to the audit logs for these components, we can turn those logs into metrics to see if any of the sub-systems are causing a scaling bottleneck. Let\u2019s use CloudWatch Logs Insights to see how many unscheduled pods are in the scheduler queue. Unscheduled pods in the scheduler log \u00b6 If we had access to scrape the scheduler metrics directly on a self managed Kubernetes (such as Kops) we would use the following PromQL to understand the scheduler backlog. max without(instance)(scheduler_pending_pods) Since we do not have access to the above metric in EKS, we will use the below CloudWatch Logs Insights query to see the backlog by checking for how many pods were unable to unscheduled during a particular time frame. Then we could dive further into into the messages at the peak time frame to understand the nature of the bottleneck. For example, nodes not spinning up fast enough, or the rate limiter in the scheduler itself. fields timestamp, pod, err, *@message* | filter *@logStream* like \"scheduler\" | filter *@message* like \"Unable to schedule pod\" | parse *@message* /^.(?<date>\\d{4})\\s+(?<timestamp>\\d+:\\d+:\\d+\\.\\d+)\\s+\\S*\\s+\\S+\\]\\s\\\"(.*?)\\\"\\s+pod=(?<pod>\\\"(.*?)\\\")\\s+err=(?<err>\\\"(.*?)\\\")/ | count(*) as count by pod, err | sort count desc Here we see the errors from the scheduler saying the pod did not deploy because the storage PVC was unavailable. Note Audit logging must be turned on the control plane to enable this function. It is also a best practice to limit the log retention as to not drive up cost over time unnecessarily. An example for turning on all logging functions using the EKSCTL tool below. cloudWatch : clusterLogging : enableTypes : [ \"*\" ] logRetentionInDays : 10 Kube Controller Manager \u00b6 Kube Controller Manager, like all other controllers, has limits on how many operations it can do at once. Let\u2019s review what some of those flags are by looking at a KOPS configuration where we can set these parameters. kubeControllerManager : concurrentEndpointSyncs : 5 concurrentReplicasetSyncs : 5 concurrentNamespaceSyncs : 10 concurrentServiceaccountTokenSyncs : 5 concurrentServiceSyncs : 5 concurrentResourceQuotaSyncs : 5 concurrentGcSyncs : 20 kubeAPIBurst : 20 kubeAPIQPS : \"30\" These controllers have queues that fill up during times of high churn on a cluster. In this case we see the replicaset set controller has a large backlog in its queue. We have two different ways of addressing such a situation. If running self managed we could simply increase the concurrent goroutines, however this would have an impact on etcd by processing more data in the KCM. The other option would be to reduce the number of replicaset objects using .spec.revisionHistoryLimit on the deployment to reduce the number of replicaset objects we can rollback, thus reducing the pressure on this controller. spec : revisionHistoryLimit : 2 Other Kubernetes features can be tuned or turned off to reduce pressure in high churn rate systems. For example, if the application in our pods doesn\u2019t need to speak to the k8s API directly then turning off the projected secret into those pods would decrease the load on ServiceaccountTokenSyncs. This is the more desirable way to address such issues if possible. kind : Pod spec : automountServiceAccountToken : false In systems where we can\u2019t get access to the metrics, we can again look at the logs to detect contention. If we wanted to see the number of requests being being processed on a per controller or an aggregate level we would use the following CloudWatch Logs Insights Query. Total Volume Processed by the KCM \u00b6 # Query to count API qps coming from kube-controller-manager, split by controller type. # If you're seeing values close to 20/sec for any particular controller, it's most likely seeing client-side API throttling. fields @timestamp, @logStream, @message | filter @logStream like /kube-apiserver-audit/ | filter userAgent like /kube-controller-manager/ # Exclude lease-related calls (not counted under kcm qps) | filter requestURI not like \"apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager\" # Exclude API discovery calls (not counted under kcm qps) | filter requestURI not like \"?timeout=32s\" # Exclude watch calls (not counted under kcm qps) | filter verb != \"watch\" # If you want to get counts of API calls coming from a specific controller, uncomment the appropriate line below: # | filter user.username like \"system:serviceaccount:kube-system:job-controller\" # | filter user.username like \"system:serviceaccount:kube-system:cronjob-controller\" # | filter user.username like \"system:serviceaccount:kube-system:deployment-controller\" # | filter user.username like \"system:serviceaccount:kube-system:replicaset-controller\" # | filter user.username like \"system:serviceaccount:kube-system:horizontal-pod-autoscaler\" # | filter user.username like \"system:serviceaccount:kube-system:persistent-volume-binder\" # | filter user.username like \"system:serviceaccount:kube-system:endpointslice-controller\" # | filter user.username like \"system:serviceaccount:kube-system:endpoint-controller\" # | filter user.username like \"system:serviceaccount:kube-system:generic-garbage-controller\" | stats count(*) as count by user.username | sort count desc The key takeaway here is when looking into scalability issues, to look at every step in the path (API, scheduler, KCM, etcd) before moving to the detailed troubleshooting phase. Often in production you will find that it takes adjustments to more than one part of Kubernetes to allow the system to work at its most performant. It\u2019s easy to inadvertently troubleshoot what is just a symptom (such as a node timeout) of a much larger bottle neck. ETCD \u00b6 etcd uses a memory mapped file to store key value pairs efficiently. There is a protection mechanism to set the size of this memory space available set commonly at the 2, 4, and 8GB limits. Fewer objects in the database means less clean up etcd needs to do when objects are updated and older versions needs to be cleaned out. This process of cleaning old versions of an object out is referred to as compaction. After a number of compaction operations, there is a subsequent process that recovers usable space space called defragging that happens above a certain threshold or on a fixed schedule of time. There are a couple user related items we can do to limit the number of objects in Kubernetes and thus reduce the impact of both the compaction and de-fragmentation process. For example, Helm keeps a high revisionHistoryLimit . This keeps older objects such as ReplicaSets on the system to be able to do rollbacks. By setting the history limits down to 2 we can reduce the the number of objects (like ReplicaSets) from ten to two which in turn would put less load on the system. apiVersion : apps/v1 kind : Deployment spec : revisionHistoryLimit : 2 From a monitoring standpoint, if system latency spikes occur in a set pattern separated by hours, checking to see if this defragmentation process is the source can be helpful. We can see this by using CloudWatch Logs. If you want to see start/end times of defrag use the following query: fields *@timestamp*, *@message* | filter *@logStream* like /etcd-manager/ | filter *@message* like /defraging|defraged/ | sort *@timestamp* asc","title":"Control plane monitoring ({'name': 'English', 'build': True})"},{"location":"scalability/docs/kcp_monitoring/#control-plane-monitoring","text":"","title":"Control Plane Monitoring"},{"location":"scalability/docs/kcp_monitoring/#api-server","text":"When looking at our API server it\u2019s important to remember that one of its functions is to throttle inbound requests to prevent overloading the control plane. What can seem like a bottleneck at the API server level might actually be protecting it from more serious issues. We need to factor in the pros and cons of increasing the volume of requests moving through the system. To make a determination if the API server values should be increased, here is small sampling of the things we need to be mindful of: What is the latency of requests moving through the system? Is that latency the API server itself, or something \u201cdownstream\u201d like etcd? Is the API server queue depth a factor in this latency? Are the API Priority and Fairness (APF) queues setup correctly for the API call patterns we want?","title":"API Server"},{"location":"scalability/docs/kcp_monitoring/#where-is-the-issue","text":"To start, we can use the metric for API latency to give us insight into how long it\u2019s taking the API server to service requests. Let\u2019s use the below PromQL and Grafana heatmap to display this data. max(increase(apiserver_request_duration_seconds_bucket{subresource!=\"status\",subresource!=\"token\",subresource!=\"scale\",subresource!=\"/healthz\",subresource!=\"binding\",subresource!=\"proxy\",verb!=\"WATCH\"}[$__rate_interval])) by (le) Tip For an in depth write up on how to monitor the API server with the API dashboard used in this article, please see the following blog These requests are all under the one second mark, which is a good indication that the control plane is handling requests in a timely fashion. But what if that was not the case? The format we are using in the above API Request Duration is a heatmap. What\u2019s nice about the heatmap format, is that it tells us the timeout value for the API by default (60 sec). However, what we really need to know is at what threshold should this value be of concern before we reach the timeout threshold. For a rough guideline of what acceptable thresholds are we can use the upstream Kubernetes SLO, which can be found here Tip Notice the max function on this statement? When using metrics that are aggregating multiple servers (by default two API servers on EKS) it\u2019s important not to average those servers together.","title":"Where is the issue?"},{"location":"scalability/docs/kcp_monitoring/#asymmetrical-traffic-patterns","text":"What if one API server [pod] was lightly loaded, and the other heavily loaded? If we averaged those two numbers together we might misinterpret what was happening. For example, here we have three API servers but all of the load is on one of these API servers. As a rule anything that has multiple servers such as etcd and API servers should be broken out when investing scale and performance issues. With the move to API Priority and Fairness the total number of requests on the system is only one factor to check to see if the API server is oversubscribed. Since the system now works off a series of queues, we must look to see if any of these queues are full and if the traffic for that queue is getting dropped. Let\u2019s look at these queues with the following query: max without(instance)(apiserver_flowcontrol_request_concurrency_limit{}) Note For more information on how API A&F works please see the following best practices guide Here we see the seven different priority groups that come by default on the cluster Next we want to see what percentage of that priority group is being used, so that we can understand if a certain priority level is being saturated. Throttling requests in the workload-low level might be desirable, however drops in a leader election level would not be. The API Priority and Fairness (APF) system has a number of complex options, some of those options can have unintended consequences. A common issue we see in the field is increasing the queue depth to the point it starts adding unnecessary latency. We can monitor this problem by using the apiserver_flowcontrol_current_inqueue_request metric. We can check for drops using the apiserver_flowcontrol_rejected_requests_total . These metrics will be a non-zero value if any bucket exceeds its concurrency. Increasing the queue depth can make the API Server a significant source of latency and should be done with care. We recommend being judicious with the number of queues created. For example, the number of shares on a EKS system is 600, if we create too many queues, this can reduce the shares in important queues that need the throughput such as the leader-election queue or system queue. Creating too many extra queues can make it more difficult to size theses queues correctly. To focus on a simple impactful change you can make in APF we simply take shares from underutilized buckets and increase the size of buckets that are at their max usage. By intelligently redistributing the shares among these buckets, you can make drops less likely. For more information, visit API Priority and Fairness settings in the EKS Best Practices Guide.","title":"Asymmetrical traffic patterns"},{"location":"scalability/docs/kcp_monitoring/#api-vs-etcd-latency","text":"How can we use the metrics/logs of the API server to determine whether there\u2019s a problem with API server, or a problem that\u2019s upstream/downstream of the API server, or a combination of both. To understand this better, lets look at how API Server and etcd can be related, and how easy it can be to troubleshoot the wrong system. In the below chart we see API server latency, but we also see much of this latency is correlated to the etcd server due to the bars in the graph showing most of the latency at the etcd level. If there is 15 secs of etcd latency at the same time there is 20 seconds of API server latency, then the majority of the latency is actually at the etcd level. By looking at the whole flow, we see that it\u2019s wise to not focus solely on the API Server, but also look for signals that indicate that etcd is under duress (i.e. slow apply counters increasing). Being able to quickly move to the right problem area with just a glance is what makes a dashboard powerful. Tip The dashboard in section can be found at https://github.com/RiskyAdventure/Troubleshooting-Dashboards/blob/main/api-troubleshooter.json","title":"API vs. etcd latency"},{"location":"scalability/docs/kcp_monitoring/#control-plane-vs-client-side-issues","text":"In this chart we are looking for the API calls that took the most time to complete for that period. In this case we see a custom resource (CRD) is calling a APPLY function that is the most latent call during the 05:40 time frame. Armed with this data we can use an Ad-Hoc PromQL or a CloudWatch Insights query to pull LIST requests from the audit log during that time frame to see which application this might be.","title":"Control plane vs. Client side issues"},{"location":"scalability/docs/kcp_monitoring/#finding-the-source-with-cloudwatch","text":"Metrics are best used to find the problem area we want to look at and narrow both the timeframe and the search parameters of the problem. Once we have this data we want to transition to logs for more detailed times and errors. To do this we will turn our logs into metrics using CloudWatch Logs Insights . For example, to investigate the issue above, we will use the following CloudWatch Logs Insights query to pull the userAgent and requestURI so that we can pin down which application is causing this latency. Tip An appropriate Count needs to be used as to not pull normal List/Resync behavior on a Watch. fields *@timestamp*, *@message* | filter *@logStream* like \"kube-apiserver-audit\" | filter ispresent(requestURI) | filter verb = \"list\" | parse requestReceivedTimestamp /\\d+-\\d+-(?<StartDay>\\d+)T(?<StartHour>\\d+):(?<StartMinute>\\d+):(?<StartSec>\\d+).(?<StartMsec>\\d+)Z/ | parse stageTimestamp /\\d+-\\d+-(?<EndDay>\\d+)T(?<EndHour>\\d+):(?<EndMinute>\\d+):(?<EndSec>\\d+).(?<EndMsec>\\d+)Z/ | fields (StartHour * 3600 + StartMinute * 60 + StartSec + StartMsec / 1000000) as StartTime, (EndHour * 3600 + EndMinute * 60 + EndSec + EndMsec / 1000000) as EndTime, (EndTime - StartTime) as DeltaTime | stats avg(DeltaTime) as AverageDeltaTime, count(*) as CountTime by requestURI, userAgent | filter CountTime >=50 | sort AverageDeltaTime desc Using this query we found two different agents running a large number of high latency list operations. Splunk and CloudWatch agent. Armed with the data, we can make a decision to remove, update, or replace this controller with another project. Tip For more details on this subject please see the following blog","title":"Finding the Source with CloudWatch"},{"location":"scalability/docs/kcp_monitoring/#scheduler","text":"Since the EKS control plane instances are run in separate AWS account we will not be able to scrape those components for metrics (The API server being the exception). However, since we have access to the audit logs for these components, we can turn those logs into metrics to see if any of the sub-systems are causing a scaling bottleneck. Let\u2019s use CloudWatch Logs Insights to see how many unscheduled pods are in the scheduler queue.","title":"Scheduler"},{"location":"scalability/docs/kcp_monitoring/#unscheduled-pods-in-the-scheduler-log","text":"If we had access to scrape the scheduler metrics directly on a self managed Kubernetes (such as Kops) we would use the following PromQL to understand the scheduler backlog. max without(instance)(scheduler_pending_pods) Since we do not have access to the above metric in EKS, we will use the below CloudWatch Logs Insights query to see the backlog by checking for how many pods were unable to unscheduled during a particular time frame. Then we could dive further into into the messages at the peak time frame to understand the nature of the bottleneck. For example, nodes not spinning up fast enough, or the rate limiter in the scheduler itself. fields timestamp, pod, err, *@message* | filter *@logStream* like \"scheduler\" | filter *@message* like \"Unable to schedule pod\" | parse *@message* /^.(?<date>\\d{4})\\s+(?<timestamp>\\d+:\\d+:\\d+\\.\\d+)\\s+\\S*\\s+\\S+\\]\\s\\\"(.*?)\\\"\\s+pod=(?<pod>\\\"(.*?)\\\")\\s+err=(?<err>\\\"(.*?)\\\")/ | count(*) as count by pod, err | sort count desc Here we see the errors from the scheduler saying the pod did not deploy because the storage PVC was unavailable. Note Audit logging must be turned on the control plane to enable this function. It is also a best practice to limit the log retention as to not drive up cost over time unnecessarily. An example for turning on all logging functions using the EKSCTL tool below. cloudWatch : clusterLogging : enableTypes : [ \"*\" ] logRetentionInDays : 10","title":"Unscheduled pods in the scheduler log"},{"location":"scalability/docs/kcp_monitoring/#kube-controller-manager","text":"Kube Controller Manager, like all other controllers, has limits on how many operations it can do at once. Let\u2019s review what some of those flags are by looking at a KOPS configuration where we can set these parameters. kubeControllerManager : concurrentEndpointSyncs : 5 concurrentReplicasetSyncs : 5 concurrentNamespaceSyncs : 10 concurrentServiceaccountTokenSyncs : 5 concurrentServiceSyncs : 5 concurrentResourceQuotaSyncs : 5 concurrentGcSyncs : 20 kubeAPIBurst : 20 kubeAPIQPS : \"30\" These controllers have queues that fill up during times of high churn on a cluster. In this case we see the replicaset set controller has a large backlog in its queue. We have two different ways of addressing such a situation. If running self managed we could simply increase the concurrent goroutines, however this would have an impact on etcd by processing more data in the KCM. The other option would be to reduce the number of replicaset objects using .spec.revisionHistoryLimit on the deployment to reduce the number of replicaset objects we can rollback, thus reducing the pressure on this controller. spec : revisionHistoryLimit : 2 Other Kubernetes features can be tuned or turned off to reduce pressure in high churn rate systems. For example, if the application in our pods doesn\u2019t need to speak to the k8s API directly then turning off the projected secret into those pods would decrease the load on ServiceaccountTokenSyncs. This is the more desirable way to address such issues if possible. kind : Pod spec : automountServiceAccountToken : false In systems where we can\u2019t get access to the metrics, we can again look at the logs to detect contention. If we wanted to see the number of requests being being processed on a per controller or an aggregate level we would use the following CloudWatch Logs Insights Query.","title":"Kube Controller Manager"},{"location":"scalability/docs/kcp_monitoring/#total-volume-processed-by-the-kcm","text":"# Query to count API qps coming from kube-controller-manager, split by controller type. # If you're seeing values close to 20/sec for any particular controller, it's most likely seeing client-side API throttling. fields @timestamp, @logStream, @message | filter @logStream like /kube-apiserver-audit/ | filter userAgent like /kube-controller-manager/ # Exclude lease-related calls (not counted under kcm qps) | filter requestURI not like \"apis/coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager\" # Exclude API discovery calls (not counted under kcm qps) | filter requestURI not like \"?timeout=32s\" # Exclude watch calls (not counted under kcm qps) | filter verb != \"watch\" # If you want to get counts of API calls coming from a specific controller, uncomment the appropriate line below: # | filter user.username like \"system:serviceaccount:kube-system:job-controller\" # | filter user.username like \"system:serviceaccount:kube-system:cronjob-controller\" # | filter user.username like \"system:serviceaccount:kube-system:deployment-controller\" # | filter user.username like \"system:serviceaccount:kube-system:replicaset-controller\" # | filter user.username like \"system:serviceaccount:kube-system:horizontal-pod-autoscaler\" # | filter user.username like \"system:serviceaccount:kube-system:persistent-volume-binder\" # | filter user.username like \"system:serviceaccount:kube-system:endpointslice-controller\" # | filter user.username like \"system:serviceaccount:kube-system:endpoint-controller\" # | filter user.username like \"system:serviceaccount:kube-system:generic-garbage-controller\" | stats count(*) as count by user.username | sort count desc The key takeaway here is when looking into scalability issues, to look at every step in the path (API, scheduler, KCM, etcd) before moving to the detailed troubleshooting phase. Often in production you will find that it takes adjustments to more than one part of Kubernetes to allow the system to work at its most performant. It\u2019s easy to inadvertently troubleshoot what is just a symptom (such as a node timeout) of a much larger bottle neck.","title":"Total Volume Processed by the KCM"},{"location":"scalability/docs/kcp_monitoring/#etcd","text":"etcd uses a memory mapped file to store key value pairs efficiently. There is a protection mechanism to set the size of this memory space available set commonly at the 2, 4, and 8GB limits. Fewer objects in the database means less clean up etcd needs to do when objects are updated and older versions needs to be cleaned out. This process of cleaning old versions of an object out is referred to as compaction. After a number of compaction operations, there is a subsequent process that recovers usable space space called defragging that happens above a certain threshold or on a fixed schedule of time. There are a couple user related items we can do to limit the number of objects in Kubernetes and thus reduce the impact of both the compaction and de-fragmentation process. For example, Helm keeps a high revisionHistoryLimit . This keeps older objects such as ReplicaSets on the system to be able to do rollbacks. By setting the history limits down to 2 we can reduce the the number of objects (like ReplicaSets) from ten to two which in turn would put less load on the system. apiVersion : apps/v1 kind : Deployment spec : revisionHistoryLimit : 2 From a monitoring standpoint, if system latency spikes occur in a set pattern separated by hours, checking to see if this defragmentation process is the source can be helpful. We can see this by using CloudWatch Logs. If you want to see start/end times of defrag use the following query: fields *@timestamp*, *@message* | filter *@logStream* like /etcd-manager/ | filter *@message* like /defraging|defraged/ | sort *@timestamp* asc","title":"ETCD"},{"location":"scalability/docs/node_efficiency.kr/","text":"{'name': 'English', 'build': True} \ub178\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud6a8\uc728\uc131 \u00b6 \uc6cc\ud06c\ub85c\ub4dc\uc640 \ub178\ub4dc\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\uc131\uacfc \ube44\uc6a9\uc744 \uc904\uc774\ub294 \ub3d9\uc2dc\uc5d0 \uc131\ub2a5\uacfc \uaddc\ubaa8\ub97c \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud6a8\uc728\uc131\uc744 \uacc4\ud68d\ud560 \ub54c\ub294 \uc5ec\ub7ec \uac00\uc9c0 \uc694\uc18c\ub97c \uace0\ub824\ud574\uc57c \ud558\uba70, \uac01 \uae30\ub2a5\uc5d0 \ub300\ud55c \ud558\ub098\uc758 \ubaa8\ubc94 \uc0ac\ub840 \uc124\uc815\uacfc \uc808\ucda9\uc810\uc744 \uae30\uc900\uc73c\ub85c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc27d\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c \uc774\ub7ec\ud55c \uc7a5\ub2e8\uc810\uc744 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud0dd \u00b6 \uc57d\uac04 \ud070 \ub178\ub4dc \ud06c\uae30(4-12xlarge) \ub97c \uc0ac\uc6a9\ud558\uba74 \uc2dc\uc2a4\ud15c \uad6c\uc131 \uc694\uc18c\uc758 DaemonSets \ubc0f Reserves \uc640 \uac19\uc740 \u201c\uc624\ubc84\ud5e4\ub4dc\u201d\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub178\ub4dc\uc758 \ube44\uc728\uc774 \uc904\uc5b4\ub4e4\uae30 \ub54c\ubb38\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacf5\uac04\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c 2xlarge \uc2dc\uc2a4\ud15c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04\uacfc \uc801\ub2f9\ud55c \uc218\uc758 \ub370\ubaac\uc14b\uc744 \ud3ec\ud568\ud558\ub294 8xlarge \uc2dc\uc2a4\ud15c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04 \ucc28\uc774\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note K8s\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\ubbc0\ub85c \ub300\ubd80\ubd84\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c NUMA \ud06c\uae30 \ub178\ub4dc\uc758 \uc131\ub2a5 \uc601\ud5a5\uc744 \uace0\ub824\ud558\ub294 \uac83\uc774 \ud569\ub9ac\uc801\uc774\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ud574\ub2f9 \ub178\ub4dc \ud06c\uae30\ubcf4\ub2e4 \ub0ae\uc740 \ubc94\uc704\ub97c \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ub178\ub4dc \ud06c\uae30\uac00 \ud06c\uba74 \ub178\ub4dc\ub2f9 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04 \ube44\uc728\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774 \ubaa8\ub378\uc740 \ub178\ub4dc\ub97c \ub108\ubb34 \ub9ce\uc774 \ud30c\ub4dc\ub85c \uac00\ub4dd \ucc44\uc6cc \uc624\ub958\ub97c \uc77c\uc73c\ud0a4\uac70\ub098 \ub178\ub4dc\ub97c \ud3ec\ud654 \uc0c1\ud0dc\ub85c \ub9cc\ub4e4\uba74 \uadf9\ub2e8\uc801\uc778 \uc0c1\ud669\uae4c\uc9c0 \uac08 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \ub178\ub4dc \ud06c\uae30\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub178\ub4dc \ud3ec\ud654 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud0dd\uc740 \ubaa8\ub4e0 \uacbd\uc6b0\uc5d0 \uc801\uc6a9\ub418\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ud0c8\ub960\uc774 \uadf9\uc801\uc73c\ub85c \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc11c\ub85c \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9\uc73c\ub85c \ubd84\ud560\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc740 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ud0c8\ub960\uc774 \ub192\uc740 \uc18c\uaddc\ubaa8 \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\ub294 4xlarge \uc778\uc2a4\ud134\uc2a4 \ud328\ubc00\ub9ac\uac00 \uac00\uc7a5 \uc801\ud569\ud558\uace0, 8vCPU\ub97c \uc0ac\uc6a9\ud558\uace0 \uc774\ud0c8\ub960\uc774 \ub0ae\uc740 Kafka\uc640 \uac19\uc740 \ub300\uaddc\ubaa8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 12xlarge \uc81c\ud488\uad70\uc774 \ub354 \uc801\ud569\ud569\ub2c8\ub2e4. Tip \ub178\ub4dc \ud06c\uae30\uac00 \ub9e4\uc6b0 \ud074 \uacbd\uc6b0 \uace0\ub824\ud574\uc57c \ud560 \ub610 \ub2e4\ub978 \uc694\uc18c\ub294 CGROUPS\uac00 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c vCPU\uc758 \ucd1d \uc218\ub97c \uc228\uae30\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ub7f0\ud0c0\uc784\uc73c\ub85c \uc778\ud574 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uc218\uc758 OS \uc2a4\ub808\ub4dc\uac00 \uc0dd\uc131\ub418\uc5b4 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ubc1c\uc0dd\ud558\uc5ec \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc5b4\ub824\uc6b4 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 CPU pinning \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc8fc\uc81c\uc5d0 \ub300\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c \ube44\ub514\uc624\ub97c \ucc38\uace0\ud558\uc138\uc694. https://www.youtube.com/watch?v=NqtfDy_KAqg \ub178\ub4dc \ube48\ud328\ud0b9(Bin-packing) \u00b6 Kubernetes vs. Linux \uaddc\uce59 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ub2e4\ub8f0 \ub54c \uc5fc\ub450\uc5d0 \ub450\uc5b4\uc57c \ud560 \ub450 \uac00\uc9c0 \uaddc\uce59 \uc138\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc758 \uaddc\uce59\uacfc \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud6c4 \uc77c\uc5b4\ub098\ub294 \uc77c\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc544\ub2cc \ub9ac\ub205\uc2a4\uc758 \uc601\uc5ed\uc785\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \uc644\ub8cc\ub41c \ud6c4\uc5d0\ub294 \uc0c8\ub85c\uc6b4 \uaddc\uce59 \uc9d1\ud569\uc774 \uc778\uacc4\ub418\ub294\ub370, \uc774\ub294 Linux Completely Fair Scheduler (CFS)\uc785\ub2c8\ub2e4. \uc8fc\uc694 \ud3ec\uc778\ud2b8\ub294 Linux CFS\uac00 \ucf54\uc5b4\ub77c\ub294 \uac1c\ub150\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ucf54\uc5b4\ub85c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uc2a4\ucf00\uc77c\uc5d0 \ucd5c\uc801\ud654\ub41c \uc791\uc5c5 \ubd80\ud558\ub97c \uc8fc\uc694 \ubb38\uc81c\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\ub294 \uc774\uc720\uc5d0 \ub300\ud574 \ub17c\uc758\ud560 \uac83\uc785\ub2c8\ub2e4. \ucf54\uc5b4\ub85c \uc0dd\uac01\ud558\uae30 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uac00 \ucf54\uc5b4\ub77c\ub294 \uac1c\ub150\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud63c\ub780\uc774 \uc2dc\uc791\ub429\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec \uad00\uc810\uc5d0\uc11c \ucf54\uc5b4 \uc694\uccad\uc774 1\ub85c \uc124\uc815\ub41c 4\uac1c\uc758 NGINX \ud30c\ub4dc\uac00 \uc788\ub294 \ub178\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uba74, \ub178\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ubcf4\uc77c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098, Linux CFS \uad00\uc810\uc5d0\uc11c \uc774\uac83\uc774 \uc5bc\ub9c8\ub098 \ub2e4\ub974\uac8c \ubcf4\uc774\ub294\uc9c0\uc5d0 \ub300\ud55c \uc0dd\uac01 \uc2e4\ud5d8\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Linux CFS \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud560 \ub54c \uae30\uc5b5\ud574\uc57c \ud560 \uac00\uc7a5 \uc911\uc694\ud55c \uac83\uc740 \ubc14\uc05c \ucee8\ud14c\uc774\ub108\ub4e4(CGROUPS)\ub9cc\uc774 \uacf5\uc720 \uc2dc\uc2a4\ud15c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc720\uc77c\ud55c \ucee8\ud14c\uc774\ub108\ub4e4\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uacbd\uc6b0, \uccab \ubc88\uc9f8 \ucee8\ud14c\uc774\ub108\ub9cc\uc774 \ubc14\uc058\ubbc0\ub85c \ub178\ub4dc\uc758 \ubaa8\ub4e0 4\uac1c\uc758 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \uc65c \uc911\uc694\ud55c\uac00\uc694? \uac1c\ubc1c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc131\ub2a5 \ud14c\uc2a4\ud305\uc744 \uc2e4\ud589\ud558\uc600\uace0, NGINX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud574\ub2f9 \ub178\ub4dc\uc5d0\uc11c \uc720\uc77c\ud558\uac8c \ubc14\uc05c \ucee8\ud14c\uc774\ub108\uc600\ub2e4\uace0 \uac00\uc815\ud574\ubd05\uc2dc\ub2e4. \uc6b0\ub9ac\uac00 \uc571\uc744 \ud504\ub85c\ub355\uc158\uc73c\ub85c \uc62e\uae30\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc77c\uc774 \ubc1c\uc0dd\ud560 \uac83\uc785\ub2c8\ub2e4. NGINX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 4 vCPU\uc758 \uc790\uc6d0\uc744 \uc6d0\ud558\uc9c0\ub9cc, \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ubc14\uc05c \uc0c1\ud0dc\uc774\uae30 \ub54c\ubb38\uc5d0 \uc571\uc758 \uc131\ub2a5\uc774 \uc81c\ud55c\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc740 \uc6b0\ub9ac \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \"\uc2a4\uc704\ud2b8 \uc2a4\ud31f(sweet spot)\"\uae4c\uc9c0 \uc2a4\ucf00\uc77c\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ubd88\ud544\uc694\ud558\uac8c \ub354 \ub9ce\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ucd94\uac00\ud558\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. \uc774 \"\uc2a4\uc704\ud2b8 \uc2a4\ud31f\"\uc774\ub77c\ub294 \uc911\uc694\ud55c \uac1c\ub150\uc744 \uc880 \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc801\uc815 \ud06c\uae30 \u00b6 \uac01 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\ub294 \ub354 \uc774\uc0c1 \ud2b8\ub798\ud53d\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\ub294 \ud2b9\uc815 \uc9c0\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc9c0\uc810\uc744 \ucd08\uacfc\ud558\uba74 \ucc98\ub9ac \uc2dc\uac04\uc774 \ub298\uc5b4\ub098\uace0 \uc774 \uc2dc\uc810\uc744 \ud6e8\uc52c \ub118\uc73c\uba74 \ud2b8\ub798\ud53d\uc774 \uac10\uc18c\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3ec\ud654 \uc9c0\uc810\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud06c\uae30 \uc870\uc815 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc774 \ud3ec\ud654 \uc9c0\uc810\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc774\uc804 \uc5d0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud06c\uae30\ub97c \uc870\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc9c0\uc810\uc744 \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc774\ub77c\uace0 \ubd80\ub974\uaca0\uc2b5\ub2c8\ub2e4. \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc744 \uc774\ud574\ud558\ub824\uba74 \uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud14c\uc2a4\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4.\uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub9c8\ub2e4 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 \ubcf4\ud3b8\uc801\uc778 \uc9c0\uce68\uc744 \uc81c\uacf5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ud14c\uc2a4\ud2b8\uc5d0\uc11c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud3ec\ud654\uc810\uc744 \ubcf4\uc5ec\uc8fc\ub294 \ucd5c\uc0c1\uc758 \uc9c0\ud45c\ub97c \ud30c\uc545\ud558\uae30 \uc704\ud574 \ub178\ub825\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub960 \uc9c0\ud45c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0\ub9cc, \uc774\ub85c \uc778\ud574 \uaddc\ubaa8 \uc870\uc815 \ubb38\uc81c\uac00 \ube60\ub974\uac8c \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc774 \uc8fc\uc81c\uc5d0 \ub300\ud574\uc11c\ub294 \uc774\ud6c4 \uc139\uc158\uc5d0\uc11c \uc790\uc138\ud788 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \uc774 \u201c\uc2a4\uc704\ud2b8 \uc2a4\ud31f\u201d\uc744 \ud655\ubcf4\ud558\uba74 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c, \uc2a4\uc704\ud2b8 \uc2a4\ud31f\ubcf4\ub2e4 \ud6e8\uc52c \uba3c\uc800 \uaddc\ubaa8\ub97c \ud655\uc7a5\ud558\uc5ec \ubd88\ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\ub2e4\uc74c \uc139\uc158\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. Pod \ud655\uc0b0 \u00b6 \ubd88\ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uba74 \uc5b4\ub5bb\uac8c \ube60\ub974\uac8c \uc81c\uc5b4\uac00 \ud798\ub4e4\uc5b4\uc9c8 \uc218 \uc788\ub294\uc9c0 \ubcf4\uae30 \uc704\ud574, \uc67c\ucabd\uc758 \uccab \ubc88\uc9f8 \uc608\uc81c\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc774 \ucee8\ud14c\uc774\ub108\uc758 \uc62c\ubc14\ub978 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc740 \ucd08\ub2f9 100\uac1c\uc758 \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \ub54c \uc57d 2\uac1c\uc758 vCPU \uc0ac\uc6a9\ub7c9\uc744 \ucc28\uc9c0\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc694\uccad\uc744 \ud558\ud504 \ucf54\uc5b4\ub85c \uc124\uc815\ud558\uc5ec \uc694\uccad \uac12\uc744 \uacfc\uc18c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \uc774\uc81c \uc2e4\uc81c\ub85c \ud544\uc694\ud55c \ud30c\ub4dc \ud558\ub098\ub2f9 \ud30c\ub4dc 4\uac1c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ub354\uc6b1 \uc545\ud654\uc2dc\ud0a4\ub294 \uac83\uc740 HPA \ub97c \uae30\ubcf8\uac12\uc778 50% CPU\ub85c \uc124\uc815\ud558\uba74 \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc808\ubc18\ub9cc \ube44\uc5b4 \uc788\ub294 \uc0c1\ud0dc\ub85c \ud655\uc7a5\ub418\uc5b4 8:1 \ube44\uc728\uc774 \ub41c\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ud655\ub300\ud574\ubcf4\uba74 \uc774 \ubb38\uc81c\uac00 \uc5b4\ub5bb\uac8c \ud574\uacb0\ub420 \uc218 \uc788\ub294\uc9c0 \uae08\ubc29 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc774 \uc798\ubabb \uc124\uc815\ub41c 10\uac1c\uc758 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\uba74 \ube60\ub974\uac8c 80\uac1c\uc758 \ud30c\ub4dc\ub85c \ub298\uc5b4\ub098\uace0 \uc774\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \ucd94\uac00 \uc778\ud504\ub77c\uac00 \uc0dd\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ucd5c\uc801\uc758 \uc704\uce58\uc5d0\uc11c \uc791\ub3d9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc774\ud574\ud588\uc73c\ub2c8 \uc774\uc81c \ub178\ub4dc \uc218\uc900\uc73c\ub85c \ub3cc\uc544\uac00\uc11c Kubernetes \uc2a4\ucf00\uc904\ub7ec\uc640 Linux CFS \uac04\uc758 \uc774\ub7ec\ud55c \ucc28\uc774\uac00 \uc65c \uadf8\ub807\uac8c \uc911\uc694\ud55c\uc9c0 \ubb3c\uc5b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. HPA\ub85c \uc2a4\ucf00\uc77c\ub9c1\uc744 \ud655\uc7a5\ud558\uace0 \ucd95\uc18c\ud560 \ub54c, \ub354 \ub9ce\uc740 \ud30c\ub4dc\ub97c \ud560\ub2f9\ud560 \ub9ce\uc740 \uacf5\uac04\uc774 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uc88b\uc9c0 \uc54a\uc740 \uacb0\uc815\uc77c \uac83\uc785\ub2c8\ub2e4. \uc67c\ucabd\uc5d0 \uadf8\ub824\uc9c4 \ub178\ub4dc\ub294 \uc774\ubbf8 100% CPU \uc0ac\uc6a9\ub960\uc5d0 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud604\uc2e4\uc801\uc774\uc9c0\ub294 \uc54a\uc9c0\ub9cc \uc774\ub860\uc801\uc73c\ub85c \uac00\ub2a5\ud55c \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub294 \uc6b0\ub9ac \ub178\ub4dc\uac00 \uc644\uc804\ud788 \uac00\ub4dd \ucc28 \uc788\uc9c0\ub9cc, CPU \uc0ac\uc6a9\ub960\uc740 0%\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Requests \uc124\uc815 \u00b6 request \uac12\uc744 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \u201c\uc2a4\uc704\ud2b8 \uc2a4\ud31f\u201d \uac12\uc73c\ub85c \uc124\uc815\ud558\uace0 \uc2f6\uc744 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uc774\ub807\uac8c \ud558\uba74 \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uacfc \uac19\uc774 \ube44\ud6a8\uc728\uc131\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 \uc694\uccad \uac12\uc744 2vCPU\ub85c \uc124\uc815\ud588\uc9c0\ub9cc \uc774 \ud30c\ub4dc\ub4e4\uc758 \ud3c9\uade0 \uc0ac\uc6a9\ub960\uc740 \ub300\ubd80\ubd84\uc758 \uc2dc\uac04 \ub3d9\uc548 1 CPU\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 CPU \uc8fc\uae30\uc758 50%\ub97c \ub0ad\ube44\ud558\uac8c \ub418\uc5b4, \uc774\ub294 \ud5c8\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ubb38\uc81c\uc5d0 \ub300\ud55c \ubcf5\uc7a1\ud55c \ub2f5\ubcc0\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ud65c\uc6a9\uc740 \uc9c4\uacf5 \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uc0dd\uac01\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc74c \uc608\uc5d0\uc11c\ub294 \uc131\uc9c8\uc0c1 \ubc84\uc2a4\ud2f0\ud55c \ucee8\ud14c\uc774\ub108\ub4e4\uc774 \uba54\ubaa8\ub9ac\uc5d0 \uc81c\uc57d\uc774 \uc788\uc744 \uc218 \uc788\ub294 \ub450 \uac1c\uc758 \ub0ae\uc740 CPU \uc0ac\uc6a9 \ucee8\ud14c\uc774\ub108\uc640 \uc11e\uc5ec \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc\uc5d0 \ubd80\ub2f4\uc744 \uc8fc\uc9c0 \uc54a\uace0\ub3c4 \ucee8\ud14c\uc774\ub108\uac00 \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc5d0 \ub3c4\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubaa8\ub4e0 \uac83\uc5d0\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc911\uc694\ud55c \uac1c\ub150\uc740, \ub9ac\ub205\uc2a4 \ucee8\ud14c\uc774\ub108 \uc131\ub2a5\uc744 \uc774\ud574\ud558\uae30 \uc704\ud574 Kubernetes \uc2a4\ucf00\uc904\ub7ec\uc758 \ucf54\uc5b4 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uadf8\ub4e4 \uc0ac\uc774\uc5d0 \uad00\ub828\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc798\ubabb\ub41c \uacb0\uc815\uc744 \ub0b4\ub9b4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. Tip Linux CFS\ub294 \uadf8 \uc790\uccb4\ub85c \uac15\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 I/O \uae30\ubc18 \uc791\uc5c5 \ubd80\ud558\uc5d0 \ub300\ud574 \ud2b9\ud788 \uadf8\ub807\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc0ac\uc774\ub4dc\uce74 \uc5c6\uc774 \uc804\uccb4 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0 I/O \uc694\uad6c\uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74, CPU \ud540\ub2dd\uc740 \uc774 \uacfc\uc815\uc5d0\uc11c \ub9ce\uc740 \ubcf5\uc7a1\uc131\uc744 \uc81c\uac70\ud560 \uc218 \uc788\uc73c\uba70, \uadf8\ub7f0 \uc0ac\ud56d\ub4e4\ub85c \uc778\ud574 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc774\uc6a9\ub960(Utilization) vs. \ud3ec\ud654\ub3c4(Saturation) \u00b6 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ucf00\uc77c\ub9c1\uc5d0\uc11c \ud754\ud788 \ubc1c\uc0dd\ud558\ub294 \uc2e4\uc218\ub294 \uc2a4\ucf00\uc77c\ub9c1 \uc9c0\ud45c\uc5d0 CPU \uc0ac\uc6a9\ub960\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf5\uc7a1\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc774\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2e4\uc81c\ub85c \uc694\uccad\uc73c\ub85c \uac00\ub4dd \ucc28 \uc788\ub2e4\ub294 \uc798\ubabb\ub41c \uc9c0\ud45c\uc778 \uacbd\uc6b0\uac00 \uac70\uc758 \ub300\ubd80\ubd84\uc785\ub2c8\ub2e4. \uc67c\ucabd \uc608\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc694\uccad\uc774 \uc2e4\uc81c\ub85c \uc6f9 \uc11c\ubc84\uc5d0 \ub3c4\ub2ec\ud558\uace0 \uc788\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc73c\ubbc0\ub85c CPU \uc0ac\uc6a9\ub960\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc5d0\uc11c\ub3c4 \uc798 \ucd94\uc801\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \uc694\uccad \uc911 \uc77c\ubd80\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uacc4\uce35\uc774\ub098 \uc778\uc99d \uacc4\uce35 \ub4f1\uc5d0\uc11c \ucc98\ub9ac\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc9c0\ub9cc, \uc774 \ubcf4\ub2e4 \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0\uc5d0\ub294 \ub2e4\ub978 \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 CPU\uac00 \ud3ec\ud654 \uc0c1\ud0dc\ub85c \ucd94\uc801\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 CPU\ub294 \ud3ec\ud654\ub3c4\ub97c \uc81c\ub300\ub85c \ub098\ud0c0\ub0b4\uc9c0 \ubabb\ud569\ub2c8\ub2e4. Kubernetes\uc5d0\uc11c \ubd88\ud544\uc694\ud558\uace0 \uc608\uce21\ud560 \uc218 \uc5c6\ub294 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uac00\uc7a5 \ud070 \uc774\uc720\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0\uc11c \uc798\ubabb\ub41c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\uc0ac\uc6a9 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc720\ud615\uc5d0 \ub9de\ub294 \uc62c\ubc14\ub978 \ucc44\ub3c4 \uc9c0\ud45c\ub97c \uc120\ud0dd\ud560 \ub54c\ub294 \uac01\ubcc4\ud55c \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4.\ud55c \uac00\uc9c0 \uc8fc\uc758\ud560 \uc810\uc740 \ubaa8\ub4e0 \uc0ac\ub78c\uc5d0\uac8c \ub9de\ub294 \ud55c \uac00\uc9c0 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \uc5c6\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.\uc0ac\uc6a9\ub418\ub294 \uc5b8\uc5b4\uc640 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc720\ud615\uc5d0 \ub530\ub77c \ucc44\ub3c4\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \uc9c0\ud45c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 CPU \uc0ac\uc6a9\ub960\uc5d0\ub9cc \uad6d\ud55c\ub41c \uac83\uc73c\ub85c \uc0dd\uac01\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \ucd08\ub2f9 \uc694\uccad \uc218\uc640 \uac19\uc740 \ub2e4\ub978 \uc77c\ubc18\uc801\uc778 \uc9c0\ud45c\ub3c4 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uac83\uacfc \ub611\uac19\uc740 \ubb38\uc81c\uc5d0 \ube60\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc694\uccad\uc740 \uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc9c1\uc811 \ucc98\ub9ac\ub418\uc9c0 \uc54a\ub294 DB \uacc4\uce35, \uc778\uc99d \uacc4\uce35\uc5d0\ub3c4 \uc804\ub2ec\ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uc6f9 \uc11c\ubc84 \uc790\uccb4\uc758 \uc2e4\uc81c \ucc44\ub3c4\ub97c \ud3c9\uac00\ud558\ub294 \uc9c0\ud45c\ub85c\ub294 \ubd80\uc871\ud569\ub2c8\ub2e4. \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc62c\ubc14\ub978 \ucc44\ub3c4 \uce21\uc815\ubc95\uc744 \uc120\ud0dd\ud558\ub294 \ub370 \uc788\uc5b4 \uc26c\uc6b4 \ud574\ub2f5\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uace0\ub824\ud574\uc57c \ud560 \uba87 \uac00\uc9c0 \uc9c0\uce68\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ub7f0\ud0c0\uc784\uc744 \uc774\ud574\ud558\uc138\uc694. \uc5ec\ub7ec OS \uc2a4\ub808\ub4dc\uac00 \uc788\ub294 \uc5b8\uc5b4\ub294 \ub2e8\uc77c \uc2a4\ub808\ub4dc \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \ub2e4\ub974\uac8c \ubc18\uc751\ud558\ubbc0\ub85c \ub178\ub4dc\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc774 \ub2e4\ub985\ub2c8\ub2e4. \uc62c\ubc14\ub978 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc744 \uc774\ud574\ud558\uc138\uc694. \uc0c8 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc77c\ub9c1\ud558\uae30 \uc804\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc84\ud37c\ub97c \uc801\uc6a9\ud558\uae38 \uc6d0\ud558\uc2dc\ub098\uc694? \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ucc44\ub3c4\ub97c \uc2e4\uc81c\ub85c \ubc18\uc601\ud558\ub294 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc778\uac00\uc694? - Kafka Producer\uc758 \ud3ec\ud654 \uc9c0\ud45c\ub294 \ubcf5\uc7a1\ud55c \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc\ub294 \uc0c1\ub2f9\ud788 \ub2e4\ub985\ub2c8\ub2e4. \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc11c\ub85c \uc5b4\ub5a4 \uc601\ud5a5\uc744 \ubbf8\uce58\ub098\uc694? - \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc740 \uc9c4\uacf5 \uc0c1\ud0dc\uc5d0\uc11c \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub178\ub4dc\uc758 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774 \uc139\uc158\uc744 \ub9c8\ubb34\ub9ac\ud558\uba70, \uc704\uc758 \ub0b4\uc6a9\uc744 \uacfc\ub3c4\ud558\uac8c \ubcf5\uc7a1\ud558\uace0 \ubd88\ud544\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4. \uc885\uc885 \uc6b0\ub9ac\ub294 \ubb38\uc81c\ub97c \uacaa\uace0 \uc788\uc9c0\ub9cc, \uc798\ubabb\ub41c \uc9c0\ud45c\ub97c \ubcf4\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubb38\uc81c\uc758 \uc9c4\uc815\ud55c \uc131\uaca9\uc744 \ubaa8\ub974\uace0 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \uc774\ub7f0 \uc77c\uc774 \uc77c\uc5b4\ub0a0 \uc218 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \ud3ec\ud654\ub3c4 \u00b6 \uc774\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud3ec\ud654\uc5d0 \ub300\ud574 \uc0b4\ud3b4\ubcf4\uc558\uc73c\ub2c8 \ub178\ub4dc \uad00\uc810\uc5d0\uc11c \uc774\uc640 \ub3d9\uc77c\ud55c \uac1c\ub150\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub960\uc774 100% \uc778 \ub450 \uac1c\uc758 CPU\ub97c \uc608\ub85c \ub4e4\uc5b4 \uc0ac\uc6a9\ub960\uacfc \ud3ec\ud654\ub3c4 \uac04\uc758 \ucc28\uc774\ub97c \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc67c\ucabd\uc758 vCPU\ub294 100% \uc0ac\uc6a9\ub418\uc9c0\ub9cc \uc774 vCPU\uc5d0\uc11c \uc2e4\ud589\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\ub294 \ub2e4\ub978 \uc791\uc5c5\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc21c\uc804\ud788 \uc774\ub860\uc801\uc778 \uc758\ubbf8\uc5d0\uc11c\ub294 \uc0c1\ub2f9\ud788 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. \ud55c\ud3b8, \ub450 \ubc88\uc9f8 \uc608\uc5d0\uc11c\ub294 20\uac1c\uc758 \ub2e8\uc77c \uc2a4\ub808\ub4dc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 vCPU\uc5d0\uc11c \ucc98\ub9ac\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c 20\uac1c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubaa8\ub450 vCPU\uc5d0\uc11c \uc21c\uc11c\uac00 \ucc98\ub9ac\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc5b4\ub290 \uc815\ub3c4\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc989, \uc624\ub978\ucabd\uc5d0 \uc788\ub294 vCPU\uac00 \ud3ec\ud654 \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\ub960\ub9cc \ubcf4\uba74 \uc774 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc744 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub124\ud2b8\uc6cc\ud0b9\uacfc \uac19\uc774 \uad00\ub828\uc774 \uc5c6\ub294 \ubb38\uc81c\uac00 \uc9c0\uc5f0\ub418\uc5b4 \uc798\ubabb\ub41c \uae38\ub85c \uac00\uac8c \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc2dc\uc810\uc5d0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucd1d \ud3ec\ub4dc \uc218\ub97c \ub298\ub9b4 \ub54c\ub294 \uc0ac\uc6a9\ub960 \uc9c0\ud45c\ubfd0\ub9cc \uc544\ub2c8\ub77c \ud3ec\ud654 \uc9c0\ud45c\ub97c \ubcf4\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \uacfc\ud3ec\ud654 \uc0c1\ud0dc\ub77c\ub294 \uc0ac\uc2e4\uc744 \uc27d\uac8c \ub193\uce60 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc5d0\ub294 \uc544\ub798 \ucc28\ud2b8\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 \uac83\ucc98\ub7fc \uc555\ub825 \ud3ec\ud654 \uc815\ubcf4 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PromQL - Stalled I/O topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Note For more on Pressure stall metrics, see https://facebookmicrosites.github.io/psi/docs/overview \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://facebookmicrosites.github.io/psi/docs/overview \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774 \uce21\uc815\uce58\ub97c \ud1b5\ud574 \uc2a4\ub808\ub4dc\uac00 CPU\uc5d0\uc11c \ub300\uae30 \uc911\uc778\uc9c0, \uc544\ub2c8\uba74 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 \uba54\ubaa8\ub9ac \ub610\ub294 I/O\uc640 \uac19\uc740 \ub9ac\uc18c\uc2a4\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc911\ub2e8\ub418\uc5c8\ub294\uc9c0\ub97c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc778\uc2a4\ud134\uc2a4\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 1\ubd84 \ub3d9\uc548 I/O\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc911\ub2e8\ub41c \ube44\uc728\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) \uc774 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc704\uc758 \ucc28\ud2b8\uc5d0\uc11c \ubc15\uc2a4\uc0c1\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 \ud558\uc774 \uc6cc\ud130\ub9c8\ud06c\uc5d0\uc11c I/O\ub97c \uae30\ub2e4\ub9b4 \ub54c 45% \uc758 \uc2dc\uac04 \ub3d9\uc548 \uc911\ub2e8\ub41c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc989, 1\ubd84 \ub3d9\uc548 CPU \uc0ac\uc774\ud074\uc744 \ubaa8\ub450 \ub0ad\ube44\ud558\uace0 \uc788\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4. \uc774\ub7f0 \uc77c\uc774 \uc77c\uc5b4\ub098\uace0 \uc788\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\uba74 \uc0c1\ub2f9\ud55c \uc591\uc758 vCPU \uc2dc\uac04\uc744 \ud68c\uc218\ud558\uc5ec \uc2a4\ucf00\uc77c\ub9c1\uc758 \ud6a8\uc728\uc131\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. HPA V2 \u00b6 HPA API\uc758 autoscaling/v2 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uc758 HPA API\ub294 \ud2b9\uc815 \uc5e3\uc9c0 \ucf00\uc774\uc2a4\uc5d0\uc11c \ud06c\uae30 \uc870\uc815\uc774 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uac01 \ud655\uc7a5 \ub2e8\uacc4\uc5d0\uc11c \ud3ec\ub4dc\uac00 \ub450 \ubc30\ub9cc \uc99d\uac00\ud558\ub294 \uac83\uc73c\ub85c \uc81c\ud55c\ub418\uc5c8\uc73c\ubbc0\ub85c \uc18c\uaddc\ubaa8 \ubc30\ud3ec\uc5d0\uc11c\ub294 \ube60\ub974\uac8c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. autoscaling/v2\ub97c \uc0ac\uc6a9\ud558\uba74 \uaddc\ubaa8\ub97c \ud655\ub300\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec \uae30\uc900\uc744 \ub354 \uc720\uc5f0\ud558\uac8c \ud3ec\ud568\ud560 \uc218 \uc788\uc73c\uba70, \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubc0f \uc678\ubd80 \uc9c0\ud45c (K8s \uc9c0\ud45c\uac00 \uc544\ub2d8) \uc744 \uc0ac\uc6a9\ud560 \ub54c \uc720\uc5f0\uc131\uc774 \ud06c\uac8c \ud5a5\uc0c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc138 \uac00\uc9c0 \uac12 \uc911 \uac00\uc7a5 \ub192\uc740 \uac12\uc744 \uae30\uc900\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc544\ub798 \ucc38\uc870). \ubaa8\ub4e0 \ud30c\ub4dc\uc758 \ud3c9\uade0 \uc0ac\uc6a9\ub960\uc774 50% \ub97c \ub118\uac70\ub098, \ucee4\uc2a4\ud140 \uc9c0\ud45c\uc778 \uacbd\uc6b0 \uc778\uadf8\ub808\uc2a4 \ucd08\ub2f9 \ud328\ud0b7\uc774 \ud3c9\uade0 1,000\uac1c\ub97c \ucd08\uacfc\ud558\uac70\ub098, \uc778\uadf8\ub808\uc2a4 \uc624\ube0c\uc81d\ud2b8\uac00 \ucd08\ub2f9 \uc694\uccad 10,000\uac74\uc744 \ucd08\uacfc\ud560 \uacbd\uc6b0 \uaddc\ubaa8\ub97c \uc870\uc815\ud569\ub2c8\ub2e4. Note \uc774\ub294 Auto Scaling API\uc758 \uc720\uc5f0\uc131\uc744 \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \uac83\uc774\ubbc0\ub85c \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\ub294 \uc9c0\ub098\uce58\uac8c \ubcf5\uc7a1\ud55c \uaddc\uce59\uc740 \ud53c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. apiVersion : autoscaling/v2 kind : HorizontalPodAutoscaler metadata : name : php-apache spec : scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : php-apache minReplicas : 1 maxReplicas : 10 metrics : - type : Resource resource : name : cpu target : type : Utilization averageUtilization : 50 - type : Pods pods : metric : name : packets-per-second target : type : AverageValue averageValue : 1k - type : Object object : metric : name : requests-per-second describedObject : apiVersion : networking.k8s.io/v1 kind : Ingress name : main-route target : type : Value value : 10k \ud558\uc9c0\ub9cc \ubcf5\uc7a1\ud55c \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc704\ud5d8\ud558\ub2e4\ub294 \uac83\uc744 \uc54c\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3ec\ud654\ub3c4\uc640 \uc0ac\uc6a9\ub960\uc744 \uc815\ud655\ud558\uac8c \ubc18\uc601\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc740 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HPaV2\ub294 \ubaa8\ub4e0 \uc9c0\ud45c\uc5d0 \ub530\ub77c \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4 \uc774\ub97c \uac00\ub2a5\ud558\uac8c \ud558\uc9c0\ub9cc, \uc0ac\uc6a9\ud558\ub824\uba74 \ud574\ub2f9 \uc9c0\ud45c\ub97c \ucc3e\uc544\uc11c Kubernetes\ub85c \uc775\uc2a4\ud3ec\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Apache\uc5d0\uc11c \ud65c\uc131 \uc2a4\ub808\ub4dc \ub300\uae30\uc5f4 \uc218\ub97c \uc0b4\ud3b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc2a4\ucf00\uc77c\ub9c1 \ud504\ub85c\ud544\uc774 \u201c\ub354 \ub9e4\ub044\ub7fd\uac8c\u201d \ub9cc\ub4e4\uc5b4\uc9c0\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4(\uc774 \uc6a9\uc5b4\uc5d0 \ub300\ud574\uc11c\ub294 \uace7 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \uc2a4\ub808\ub4dc\uac00 \ud65c\uc131 \uc0c1\ud0dc\uc774\uba74 \ud574\ub2f9 \uc2a4\ub808\ub4dc\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uacc4\uce35\uc5d0\uc11c \ub300\uae30 \uc911\uc774\ub4e0 \ub85c\uceec\uc5d0\uc11c \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub4e0 \uc0c1\uad00 \uc5c6\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ub808\ub4dc\uac00 \uc0ac\uc6a9\ub418\uace0 \uc788\ub2e4\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \uc88b\uc740 \uc9c0\ud45c\uc785\ub2c8\ub2e4. \uc774 \uc2a4\ub808\ub4dc \uace0\uac08\uc744 \uc2e0\ud638\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc644\uc804\ud788 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc2a4\ub808\ub4dc \ud480\uc744 \uac16\ucd98 \uc0c8 \ud30c\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ud2b8\ub798\ud53d\uc774 \ub9ce\uc740 \uc2dc\uae30\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ud761\uc218\ud558\ub824\ub294 \ubc84\ud37c \ud06c\uae30\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucd1d \uc2a4\ub808\ub4dc \ud480\uc774 10\uac1c\uc778 \uacbd\uc6b0 \uc0ac\uc6a9\ub41c \uc2a4\ub808\ub4dc 4\uac1c\uc640 \uc0ac\uc6a9\ub41c \uc2a4\ub808\ub4dc 8\uac1c\ub85c \ud655\uc7a5\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc84\ud37c\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd80\ud558\uac00 \uc2ec\ud55c \uc0c1\ud0dc\uc5d0\uc11c \ube60\ub974\uac8c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 4\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc694\uccad \uc218\uac00 \ub290\ub9ac\uac8c \uc99d\uac00\ud558\ub294 \ub300\uc2e0 \uae09\uaca9\ud788 \uc99d\uac00\ud558\ubbc0\ub85c \ud655\uc7a5\ud560 \uc2dc\uac04\uc774 \ucda9\ubd84\ud558\ub2e4\uba74 8\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \ub9ac\uc18c\uc2a4 \ud65c\uc6a9\uc5d0 \ub354 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. \uc2a4\ucf00\uc77c\ub9c1\uacfc \uad00\ub828\ud558\uc5ec \u201c\ub9e4\ub044\ub7fd\ub2e4\u201d\ub77c\ub294 \uc6a9\uc5b4\ub294 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c\uc694? \uc544\ub798 \ucc28\ud2b8\ub97c \ubcf4\uba74 CPU\ub97c \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4 .\uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc \uc218\uac00 50\uac1c\uc5d0\uc11c \ucd5c\ub300 250\uac1c\uae4c\uc9c0 \uc9e7\uc740 \uae30\uac04\uc5d0 \uae09\uc99d\ud558\ub2e4\uac00 \ub2e4\uc2dc \uc989\uc2dc \ucd95\uc18c\ub429\ub2c8\ub2e4.\uc774\ub294 \ub9e4\uc6b0 \ube44\ud6a8\uc728\uc801\uc778 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud074\ub7ec\uc2a4\ud130 \uc774\ud0c8\uc758 \uc8fc\uc694 \uc6d0\uc778\uc774\ub77c\ub294 \uc810\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc62c\ubc14\ub978 \uc2a4\uc704\ud2b8 \uc2a4\ud31f(\ucc28\ud2b8 \uc911\uac04 \ubd80\ubd84)\uc744 \ubc18\uc601\ud558\ub294 \uc9c0\ud45c\ub85c \ubcc0\uacbd\ud55c \ud6c4 \uc6d0\ud65c\ud558\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694. \uc774\uc81c \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud6a8\uc728\uc801\uc774\uc5c8\uc73c\uba70 \uc694\uccad \uc124\uc815\uc744 \uc870\uc815\ud558\uc5ec \uc81c\uacf5\ub41c \uc5ec\uc720 \uacf5\uac04\uc5d0 \ub9de\uac8c \ud30c\ub4dc\ub97c \uc644\uc804\ud788 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc804\uc5d0\ub294 \uc218\ubc31 \uac1c\uc758 \ud30c\ub4dc\uac00 \ud558\ub358 \uc791\uc5c5\uc744 \uc774\uc81c\ub294 \uc18c\uaddc\ubaa8 \ud30c\ub4dc \uadf8\ub8f9\uc774 \uc218\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c \ub370\uc774\ud130\uc5d0 \ub530\ub974\uba74 \uc774\uac83\uc774 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 \ud655\uc7a5\uc131\uc744 \uacb0\uc815\ud558\ub294 \uac00\uc7a5 \uc911\uc694\ud55c \uc694\uc18c\uc785\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 CPU \uc0ac\uc6a9\ub960\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub178\ub4dc \uc131\ub2a5\uc758 \ud55c \ucc28\uc6d0\uc5d0 \ubd88\uacfc\ud558\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. CPU \uc0ac\uc6a9\ub960\uc744 \ub178\ub4dc\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc720\uc77c\ud55c \uc0c1\ud0dc \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud558\uba74 \ud655\uc7a5\uc131, \uc131\ub2a5 \ubc0f \ube44\uc6a9 \uce21\uba74\uc5d0\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc774\ub294 \ubaa8\ub450 \uae34\ubc00\ud558\uac8c \uc5f0\uacb0\ub41c \uac1c\ub150\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub178\ub4dc\uc758 \uc131\ub2a5\uc774 \ub192\uc744\uc218\ub85d \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc591\uc774 \uc904\uc5b4\ub4e4\uc5b4 \ube44\uc6a9\uc774 \uc808\uac10\ub429\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\uae30 \uc704\ud55c \uc62c\ubc14\ub978 \ud3ec\ud654\ub3c4 \uc9c0\ud45c\ub97c \ucc3e\uc544 \uc0ac\uc6a9\ud558\uba74 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e4\uc81c \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \uacbd\ubcf4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc911\uc694\ud55c \ub2e8\uacc4\ub97c \uac74\ub108\ub6f0\uba74 \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c \ubcf4\uace0\uc11c\ub97c \uc774\ud574\ud558\uae30\uac00 \ubd88\uac00\ub2a5\ud558\uc9c0\ub294 \uc54a\ub354\ub77c\ub3c4 \uc774\ud574\ud558\uae30 \uc5b4\ub824\uc6b8 \uac83\uc785\ub2c8\ub2e4. CPU \uc81c\ud55c \uc124\uc815 \u00b6 \uc798\ubabb \uc774\ud574\ub418\uace0 \uc788\ub294 \uc8fc\uc81c\uc5d0 \ub300\ud574 \uc774 \uc139\uc158\uc744 \ub9c8\ubb34\ub9ac\ud558\uae30 \uc704\ud574 CPU \uc81c\ud55c\uc5d0 \ub300\ud574 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574 \ud55c\ub3c4\ub294 100ms\ub9c8\ub2e4 \uc7ac\uc124\uc815\ud558\ub294 \uce74\uc6b4\ud130\uac00 \uc788\ub294 \ucee8\ud14c\uc774\ub108\uc640 \uad00\ub828\ub41c \uba54\ud0c0\ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 Linux\ub294 100ms \uae30\uac04 \ub3d9\uc548 \ud2b9\uc815 \ucee8\ud14c\uc774\ub108\uac00 \ub178\ub4dc \uc804\uccb4\uc5d0\uc11c \uc0ac\uc6a9\ud55c CPU \ub9ac\uc18c\uc2a4 \uc218\ub97c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c\uc744 \uc124\uc815\ud560 \ub54c \ud754\ud55c \uc624\ub958\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc77c \uc2a4\ub808\ub4dc\uc774\uba70 \ud560\ub2f9\ub41c vCPU\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub41c\ub2e4\uace0 \uac00\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc704 \uc139\uc158\uc5d0\uc11c CFS\ub294 \ucf54\uc5b4\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\uc73c\uba70, \uc2e4\uc81c\ub85c \ub300\uaddc\ubaa8 \uc2a4\ub808\ub4dc \ud480\uc744 \uc2e4\ud589\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 vCPU\ub97c \uc2a4\ucf00\uc904\ub9c1\ud55c\ub2e4\ub294 \uac83\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4. 64\uac1c\uc758 OS \uc2a4\ub808\ub4dc\uac00 64\uac1c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucf54\uc5b4(\ub9ac\ub205\uc2a4 \ub178\ub4dc \uad00\uc810\uc5d0\uc11c)\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\uba74, \uadf8 64\uac1c\uc758 \ucf54\uc5b4\uc5d0\uc11c \ubaa8\ub450 \uc2e4\ud589\ub41c \uc2dc\uac04\uc744 \ud569\ud55c \ud6c4 100ms \uae30\uac04 \ub3d9\uc548 \uc0ac\uc6a9\ub41c CPU \uc2dc\uac04\uc758 \ucd1d\uacc4\ub294 \uc0c1\ub2f9\ud788 \ud06c\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 \uac00\ube44\uc9c0 \uc218\uc9d1 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0\ub9cc \ubc1c\uc0dd\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc774\ub7f0 \uac83\uc744 \ub193\uce58\uae30\uac00 \uc0c1\ub2f9\ud788 \uc27d\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uae30 \uc804\uc5d0 \uc2dc\uac04 \ub3d9\uc548 \uc62c\ubc14\ub978 \uc0ac\uc6a9\ub7c9\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud574 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc774\uc720\uc785\ub2c8\ub2e4. \ub2e4\ud589\ud788\ub3c4, \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 vCPU\uac00 \uc0ac\uc6a9\ub418\uace0 \uc788\ub294\uc9c0 \uc815\ud655\ud788 \uc54c \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubaa9\uc801\uc73c\ub85c container_cpu_usage_seconds_total \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc2a4\ub85c\ud2c0\ub9c1 \ub85c\uc9c1\uc774 \ub9e4 100ms\ub9c8\ub2e4 \ubc1c\uc0dd\ud558\uace0 \uc774 \uc9c0\ud45c\uac00 \ucd08\ub2f9 \uc9c0\ud45c\uc774\ubbc0\ub85c, \uc774 100ms \uae30\uac04\uc5d0 \ub9de\uac8c PromQL\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 PromQL \uba85\ub839\ubb38 \uc791\uc5c5\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. PromQL \ucffc\ub9ac: topk(3, max by (pod, container)(rate(container_cpu_usage_seconds_total{image!=\"\", instance=\"$instance\"}[$__rate_interval]))) / 10 \uc77c\ub2e8 \uc6b0\ub9ac\uac00 \uc62c\ubc14\ub978 \uac00\uce58\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4\uace0 \uc0dd\uac01\ub418\uba74, \ud504\ub85c\ub355\uc158\uc5d0\uc11c \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc608\uc0c1\uce58 \ubabb\ud55c \ubb38\uc81c\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uacaa\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4 container_cpu_throttled_seconds_total \uc744 \uc0b4\ud3b4\ubcf4\uba74 \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk(3, max by (pod, container)(rate(container_cpu_cfs_throttled_seconds_total{image!=``\"\"``, instance=``\"$instance\"``}[$__rate_interval]))) / 10 \uba54\ubaa8\ub9ac \u00b6 \uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub9c1 \ub3d9\uc791\uacfc Linux CGroup \ub3d9\uc791\uc744 \ud63c\ub3d9\ud558\uae30 \uc26c\uc6b4 \ub610 \ub2e4\ub978 \uc608\uc785\ub2c8\ub2e4. CGroup v2\uac00 Linux\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\uc2dd\uc774 \ud06c\uac8c \ubcc0\uacbd\ub418\uc5c8\uace0 Kubernetes\uac00 \uc774\ub97c \ubc18\uc601\ud558\uc5ec \uad6c\ubb38\uc744 \ubcc0\uacbd\ud588\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc8fc\uc81c\ub294 \uc880 \ub354 \ubbf8\ubb18\ud55c \uc8fc\uc81c\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. CPU \uc694\uccad\uacfc \ub2ec\ub9ac \uba54\ubaa8\ub9ac \uc694\uccad\uc740 \uc2a4\ucf00\uc904\ub9c1 \ud504\ub85c\uc138\uc2a4\uac00 \uc644\ub8cc\ub41c \ud6c4 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 CGroup v1\uc5d0\uc11c CPU\uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c \uc555\ucd95\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8 \uacb0\uacfc \uc6b0\ub9ac\ub294 \uba54\ubaa8\ub9ac \uc81c\ud55c\ub9cc\uc744 \uac00\uc9c0\uac8c \ub418\uba70, \uc774\ub294 \uba54\ubaa8\ub9ac \ub204\uc218\uc5d0 \ub300\ud55c \uc2e4\ud328\ub85c\ubd80\ud130 \ud30c\ub4dc\ub97c \uc644\uc804\ud788 \uc885\ub8cc\uc2dc\ud0a4\ub294 \uac83\uc73c\ub85c \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc804\ubd80 \ub610\ub294 \uc544\ubb34\uac83\ub3c4 \uc5c6\ub294 \uc2a4\ud0c0\uc77c\uc758 \uc81c\uc548\uc774\uc9c0\ub9cc, \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c \uc0c8\ub85c\uc6b4 \ubc29\ubc95\uc774 \uc81c\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uccab\uc9f8, \ucee8\ud14c\uc774\ub108\uc5d0 \uc62c\ubc14\ub978 \uc591\uc758 \uba54\ubaa8\ub9ac\ub97c \uc124\uc815\ud558\ub294 \uac83\uc740 \ubcf4\uc774\ub294 \uac83\ub9cc\ud07c \uac04\ub2e8\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. Linux\uc758 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc740 \uc131\ub2a5 \ud5a5\uc0c1\uc744 \uc704\ud574 \uba54\ubaa8\ub9ac\ub97c \uce90\uc2dc\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uce90\uc2dc\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc131\uc7a5\ud558\uba70, \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uba54\ubaa8\ub9ac\uac00 \uce90\uc2dc\uc5d0 \uc88b\uc9c0\ub9cc \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc131\ub2a5\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uace0 \ub418\ucc3e\uc744 \uc218 \uc788\ub294\uc9c0 \uc54c\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc885\uc885 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc744 \uc798\ubabb \ud574\uc11d\ud558\ub294 \uacb0\uacfc\ub97c \uac00\uc838\uc635\ub2c8\ub2e4. \uba54\ubaa8\ub9ac\ub97c \"\uc555\ucd95\"\ud558\ub294 \ub2a5\ub825\uc744 \uac16\uac8c \ub418\uc5c8\ub358 \uac83\uc740 CGroup v2\uc758 \uc8fc\uc694 \ub3d9\uae30 \uc911 \ud558\ub098\uc600\uc2b5\ub2c8\ub2e4. CGroup V2\uac00 \ud544\uc694\ud588\ub358 \uc774\uc720\uc5d0 \ub300\ud55c \ub354 \ub9ce\uc740 \uc5ed\uc0ac\ub97c \uc54c\uace0 \uc2f6\ub2e4\uba74, LISA21\uc5d0\uc11c Chris Down\uc758 \ubc1c\ud45c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uadf8\ub294 \ucd5c\uc18c \uba54\ubaa8\ub9ac\ub97c \uc62c\ubc14\ub974\uac8c \uc124\uc815\ud560 \uc218 \uc5c6\ub294 \ubb38\uc81c\uac00 CGroup v2\uc640 \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\ub97c \ub9cc\ub4dc\ub294 \ub370\uc5d0 \uc774\ub974\uac8c \ud55c \uc6d0\uc778 \uc911 \ud558\ub098\uc600\ub2e4\uace0 \uc124\uba85\ud569\ub2c8\ub2e4. \ub2e4\ud589\ud788 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc774\uc81c requests.memory \uc5d0\uc11c memory.min \uacfc memory.high \ub77c\ub294 \uac1c\ub150\uc744 \uac16\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uce90\uc2dc\ub41c \uba54\ubaa8\ub9ac\ub97c \uc801\uadf9\uc801\uc73c\ub85c \ud574\uc81c\ud558\uc5ec \ub2e4\ub978 \ucee8\ud14c\uc774\ub108\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uba54\ubaa8\ub9ac \uc0c1\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ucee4\ub110\uc740 \ud574\ub2f9 \ucee8\ud14c\uc774\ub108\uc758 \uba54\ubaa8\ub9ac\ub97c memory.min \uc73c\ub85c \uc124\uc815\ub41c \uac12\uae4c\uc9c0 \uc801\uadf9\uc801\uc73c\ub85c \ud68c\uc218\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub178\ub4dc\uc5d0 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \uac00\ud574\uc9c8 \ub54c \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \ud575\uc2ec \uc9c8\ubb38\uc740 memory.min \uc744 \uc5b4\ub5a4 \uac12\uc73c\ub85c \uc124\uc815\ud574\uc57c \ud558\ub294\uac00\uc785\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uba54\ubaa8\ub9ac \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\uac00 \uc791\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc218\uc900\uc5d0\uc11c \uba54\ubaa8\ub9ac \u201c\uc2a4\ub798\uc2f1\u201d\uc744 \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 fbtax \uc640 \uac19\uc740 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \uba54\ubaa8\ub9ac \uc2a4\ub798\uc2f1\uc744 \ucc3e\uc544 memory.min \uc758 \uc62c\ubc14\ub978 \uac12\uc744 \ud0d0\uc9c0\ud558\uace0, memory.min \uac12\uc744 \ub3d9\uc801\uc73c\ub85c \uc774 \uc124\uc815\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ub9ac\ud558\uae30 \u00b6 \uc774 \uc139\uc158\uc744 \uc694\uc57d\ud558\uba74, \ub2e4\uc74c\uacfc \uac19\uc740 \uac1c\ub150\uc744 \ud63c\ub3d9\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4: \uc774\uc6a9\ub960(Utilization)\uc640 \ud3ec\ud654\ub3c4(Saturation) Linux \uc131\ub2a5 \uaddc\uce59\uacfc Kubernetes \uc2a4\ucf00\uc904\ub7ec \ub85c\uc9c1 \uc774\ub7ec\ud55c \uac1c\ub150\ub4e4\uc744 \uad6c\ubd84\ud558\ub3c4\ub85d \ub9ce\uc740 \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc131\ub2a5\uacfc \uc2a4\ucf00\uc77c\uc740 \uae4a\uc740 \uc218\uc900\uc5d0\uc11c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c \uc2a4\ucf00\uc77c\ub9c1\uc740 \uc131\ub2a5 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0a4\uba70, \uadf8 \uacb0\uacfc \uc2a4\ucf00\uc77c\ub9c1 \ubb38\uc81c\ub97c \ucd08\ub798\ud569\ub2c8\ub2e4.","title":"\ub178\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud6a8\uc728\uc131"},{"location":"scalability/docs/node_efficiency.kr/#_1","text":"\uc6cc\ud06c\ub85c\ub4dc\uc640 \ub178\ub4dc\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\uba74 \ubcf5\uc7a1\uc131\uacfc \ube44\uc6a9\uc744 \uc904\uc774\ub294 \ub3d9\uc2dc\uc5d0 \uc131\ub2a5\uacfc \uaddc\ubaa8\ub97c \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud6a8\uc728\uc131\uc744 \uacc4\ud68d\ud560 \ub54c\ub294 \uc5ec\ub7ec \uac00\uc9c0 \uc694\uc18c\ub97c \uace0\ub824\ud574\uc57c \ud558\uba70, \uac01 \uae30\ub2a5\uc5d0 \ub300\ud55c \ud558\ub098\uc758 \ubaa8\ubc94 \uc0ac\ub840 \uc124\uc815\uacfc \uc808\ucda9\uc810\uc744 \uae30\uc900\uc73c\ub85c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc27d\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c \uc774\ub7ec\ud55c \uc7a5\ub2e8\uc810\uc744 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud6a8\uc728\uc131"},{"location":"scalability/docs/node_efficiency.kr/#_2","text":"\uc57d\uac04 \ud070 \ub178\ub4dc \ud06c\uae30(4-12xlarge) \ub97c \uc0ac\uc6a9\ud558\uba74 \uc2dc\uc2a4\ud15c \uad6c\uc131 \uc694\uc18c\uc758 DaemonSets \ubc0f Reserves \uc640 \uac19\uc740 \u201c\uc624\ubc84\ud5e4\ub4dc\u201d\uc5d0 \uc0ac\uc6a9\ub418\ub294 \ub178\ub4dc\uc758 \ube44\uc728\uc774 \uc904\uc5b4\ub4e4\uae30 \ub54c\ubb38\uc5d0 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacf5\uac04\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uc5d0\uc11c 2xlarge \uc2dc\uc2a4\ud15c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04\uacfc \uc801\ub2f9\ud55c \uc218\uc758 \ub370\ubaac\uc14b\uc744 \ud3ec\ud568\ud558\ub294 8xlarge \uc2dc\uc2a4\ud15c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04 \ucc28\uc774\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note K8s\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub418\ubbc0\ub85c \ub300\ubd80\ubd84\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c NUMA \ud06c\uae30 \ub178\ub4dc\uc758 \uc131\ub2a5 \uc601\ud5a5\uc744 \uace0\ub824\ud558\ub294 \uac83\uc774 \ud569\ub9ac\uc801\uc774\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ud574\ub2f9 \ub178\ub4dc \ud06c\uae30\ubcf4\ub2e4 \ub0ae\uc740 \ubc94\uc704\ub97c \uad8c\uc7a5\ud569\ub2c8\ub2e4. \ub178\ub4dc \ud06c\uae30\uac00 \ud06c\uba74 \ub178\ub4dc\ub2f9 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uacf5\uac04 \ube44\uc728\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc774 \ubaa8\ub378\uc740 \ub178\ub4dc\ub97c \ub108\ubb34 \ub9ce\uc774 \ud30c\ub4dc\ub85c \uac00\ub4dd \ucc44\uc6cc \uc624\ub958\ub97c \uc77c\uc73c\ud0a4\uac70\ub098 \ub178\ub4dc\ub97c \ud3ec\ud654 \uc0c1\ud0dc\ub85c \ub9cc\ub4e4\uba74 \uadf9\ub2e8\uc801\uc778 \uc0c1\ud669\uae4c\uc9c0 \uac08 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \ud070 \ub178\ub4dc \ud06c\uae30\ub97c \uc131\uacf5\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 \ub178\ub4dc \ud3ec\ud654 \uc0c1\ud0dc\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud0dd\uc740 \ubaa8\ub4e0 \uacbd\uc6b0\uc5d0 \uc801\uc6a9\ub418\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ud0c8\ub960\uc774 \uadf9\uc801\uc73c\ub85c \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc11c\ub85c \ub2e4\ub978 \ub178\ub4dc \uadf8\ub8f9\uc73c\ub85c \ubd84\ud560\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc740 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ud0c8\ub960\uc774 \ub192\uc740 \uc18c\uaddc\ubaa8 \ubc30\uce58 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\ub294 4xlarge \uc778\uc2a4\ud134\uc2a4 \ud328\ubc00\ub9ac\uac00 \uac00\uc7a5 \uc801\ud569\ud558\uace0, 8vCPU\ub97c \uc0ac\uc6a9\ud558\uace0 \uc774\ud0c8\ub960\uc774 \ub0ae\uc740 Kafka\uc640 \uac19\uc740 \ub300\uaddc\ubaa8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 12xlarge \uc81c\ud488\uad70\uc774 \ub354 \uc801\ud569\ud569\ub2c8\ub2e4. Tip \ub178\ub4dc \ud06c\uae30\uac00 \ub9e4\uc6b0 \ud074 \uacbd\uc6b0 \uace0\ub824\ud574\uc57c \ud560 \ub610 \ub2e4\ub978 \uc694\uc18c\ub294 CGROUPS\uac00 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c vCPU\uc758 \ucd1d \uc218\ub97c \uc228\uae30\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ub3d9\uc801 \ub7f0\ud0c0\uc784\uc73c\ub85c \uc778\ud574 \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \uc218\uc758 OS \uc2a4\ub808\ub4dc\uac00 \uc0dd\uc131\ub418\uc5b4 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ubc1c\uc0dd\ud558\uc5ec \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc5b4\ub824\uc6b4 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 CPU pinning \uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc8fc\uc81c\uc5d0 \ub300\ud574 \ub354 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c \ube44\ub514\uc624\ub97c \ucc38\uace0\ud558\uc138\uc694. https://www.youtube.com/watch?v=NqtfDy_KAqg","title":"\ub178\ub4dc \uc120\ud0dd"},{"location":"scalability/docs/node_efficiency.kr/#bin-packing","text":"","title":"\ub178\ub4dc \ube48\ud328\ud0b9(Bin-packing)"},{"location":"scalability/docs/node_efficiency.kr/#kubernetes-vs-linux","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ub2e4\ub8f0 \ub54c \uc5fc\ub450\uc5d0 \ub450\uc5b4\uc57c \ud560 \ub450 \uac00\uc9c0 \uaddc\uce59 \uc138\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uccad \uac12\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc904\ub9c1\ud558\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc758 \uaddc\uce59\uacfc \ud30c\ub4dc\uac00 \uc2a4\ucf00\uc904\ub9c1\ub41c \ud6c4 \uc77c\uc5b4\ub098\ub294 \uc77c\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uac00 \uc544\ub2cc \ub9ac\ub205\uc2a4\uc758 \uc601\uc5ed\uc785\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec\uac00 \uc644\ub8cc\ub41c \ud6c4\uc5d0\ub294 \uc0c8\ub85c\uc6b4 \uaddc\uce59 \uc9d1\ud569\uc774 \uc778\uacc4\ub418\ub294\ub370, \uc774\ub294 Linux Completely Fair Scheduler (CFS)\uc785\ub2c8\ub2e4. \uc8fc\uc694 \ud3ec\uc778\ud2b8\ub294 Linux CFS\uac00 \ucf54\uc5b4\ub77c\ub294 \uac1c\ub150\uc744 \uac00\uc9c0\uace0 \uc788\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc6b0\ub9ac\ub294 \ucf54\uc5b4\ub85c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uc2a4\ucf00\uc77c\uc5d0 \ucd5c\uc801\ud654\ub41c \uc791\uc5c5 \ubd80\ud558\ub97c \uc8fc\uc694 \ubb38\uc81c\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\ub294 \uc774\uc720\uc5d0 \ub300\ud574 \ub17c\uc758\ud560 \uac83\uc785\ub2c8\ub2e4.","title":"Kubernetes vs. Linux \uaddc\uce59"},{"location":"scalability/docs/node_efficiency.kr/#_3","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uac00 \ucf54\uc5b4\ub77c\ub294 \uac1c\ub150\uc744 \uac00\uc9c0\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ud63c\ub780\uc774 \uc2dc\uc791\ub429\ub2c8\ub2e4. Kubernetes \uc2a4\ucf00\uc904\ub7ec \uad00\uc810\uc5d0\uc11c \ucf54\uc5b4 \uc694\uccad\uc774 1\ub85c \uc124\uc815\ub41c 4\uac1c\uc758 NGINX \ud30c\ub4dc\uac00 \uc788\ub294 \ub178\ub4dc\ub97c \uc0b4\ud3b4\ubcf4\uba74, \ub178\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\uc774 \ubcf4\uc77c \uac83\uc785\ub2c8\ub2e4. \uadf8\ub7ec\ub098, Linux CFS \uad00\uc810\uc5d0\uc11c \uc774\uac83\uc774 \uc5bc\ub9c8\ub098 \ub2e4\ub974\uac8c \ubcf4\uc774\ub294\uc9c0\uc5d0 \ub300\ud55c \uc0dd\uac01 \uc2e4\ud5d8\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Linux CFS \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud560 \ub54c \uae30\uc5b5\ud574\uc57c \ud560 \uac00\uc7a5 \uc911\uc694\ud55c \uac83\uc740 \ubc14\uc05c \ucee8\ud14c\uc774\ub108\ub4e4(CGROUPS)\ub9cc\uc774 \uacf5\uc720 \uc2dc\uc2a4\ud15c\uc5d0 \ud3ec\ud568\ub418\ub294 \uc720\uc77c\ud55c \ucee8\ud14c\uc774\ub108\ub4e4\uc774\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uacbd\uc6b0, \uccab \ubc88\uc9f8 \ucee8\ud14c\uc774\ub108\ub9cc\uc774 \ubc14\uc058\ubbc0\ub85c \ub178\ub4dc\uc758 \ubaa8\ub4e0 4\uac1c\uc758 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \uc65c \uc911\uc694\ud55c\uac00\uc694? \uac1c\ubc1c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc131\ub2a5 \ud14c\uc2a4\ud305\uc744 \uc2e4\ud589\ud558\uc600\uace0, NGINX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud574\ub2f9 \ub178\ub4dc\uc5d0\uc11c \uc720\uc77c\ud558\uac8c \ubc14\uc05c \ucee8\ud14c\uc774\ub108\uc600\ub2e4\uace0 \uac00\uc815\ud574\ubd05\uc2dc\ub2e4. \uc6b0\ub9ac\uac00 \uc571\uc744 \ud504\ub85c\ub355\uc158\uc73c\ub85c \uc62e\uae30\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc77c\uc774 \ubc1c\uc0dd\ud560 \uac83\uc785\ub2c8\ub2e4. NGINX \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 4 vCPU\uc758 \uc790\uc6d0\uc744 \uc6d0\ud558\uc9c0\ub9cc, \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \ud30c\ub4dc\uac00 \ubc14\uc05c \uc0c1\ud0dc\uc774\uae30 \ub54c\ubb38\uc5d0 \uc571\uc758 \uc131\ub2a5\uc774 \uc81c\ud55c\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc0c1\ud669\uc740 \uc6b0\ub9ac \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \"\uc2a4\uc704\ud2b8 \uc2a4\ud31f(sweet spot)\"\uae4c\uc9c0 \uc2a4\ucf00\uc77c\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ubd88\ud544\uc694\ud558\uac8c \ub354 \ub9ce\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ucd94\uac00\ud558\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. \uc774 \"\uc2a4\uc704\ud2b8 \uc2a4\ud31f\"\uc774\ub77c\ub294 \uc911\uc694\ud55c \uac1c\ub150\uc744 \uc880 \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\ucf54\uc5b4\ub85c \uc0dd\uac01\ud558\uae30"},{"location":"scalability/docs/node_efficiency.kr/#_4","text":"\uac01 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\ub294 \ub354 \uc774\uc0c1 \ud2b8\ub798\ud53d\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\ub294 \ud2b9\uc815 \uc9c0\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc9c0\uc810\uc744 \ucd08\uacfc\ud558\uba74 \ucc98\ub9ac \uc2dc\uac04\uc774 \ub298\uc5b4\ub098\uace0 \uc774 \uc2dc\uc810\uc744 \ud6e8\uc52c \ub118\uc73c\uba74 \ud2b8\ub798\ud53d\uc774 \uac10\uc18c\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3ec\ud654 \uc9c0\uc810\uc774\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud06c\uae30 \uc870\uc815 \ubb38\uc81c\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc774 \ud3ec\ud654 \uc9c0\uc810\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc774\uc804 \uc5d0 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud06c\uae30\ub97c \uc870\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc9c0\uc810\uc744 \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc774\ub77c\uace0 \ubd80\ub974\uaca0\uc2b5\ub2c8\ub2e4. \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc744 \uc774\ud574\ud558\ub824\uba74 \uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud14c\uc2a4\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4.\uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub9c8\ub2e4 \ub2e4\ub974\uae30 \ub54c\ubb38\uc5d0 \uc5ec\uae30\uc11c\ub294 \ubcf4\ud3b8\uc801\uc778 \uc9c0\uce68\uc744 \uc81c\uacf5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ud14c\uc2a4\ud2b8\uc5d0\uc11c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud3ec\ud654\uc810\uc744 \ubcf4\uc5ec\uc8fc\ub294 \ucd5c\uc0c1\uc758 \uc9c0\ud45c\ub97c \ud30c\uc545\ud558\uae30 \uc704\ud574 \ub178\ub825\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub960 \uc9c0\ud45c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0\ub9cc, \uc774\ub85c \uc778\ud574 \uaddc\ubaa8 \uc870\uc815 \ubb38\uc81c\uac00 \ube60\ub974\uac8c \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc774 \uc8fc\uc81c\uc5d0 \ub300\ud574\uc11c\ub294 \uc774\ud6c4 \uc139\uc158\uc5d0\uc11c \uc790\uc138\ud788 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \uc774 \u201c\uc2a4\uc704\ud2b8 \uc2a4\ud31f\u201d\uc744 \ud655\ubcf4\ud558\uba74 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud6a8\uc728\uc801\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\ub300\ub85c, \uc2a4\uc704\ud2b8 \uc2a4\ud31f\ubcf4\ub2e4 \ud6e8\uc52c \uba3c\uc800 \uaddc\ubaa8\ub97c \ud655\uc7a5\ud558\uc5ec \ubd88\ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694?\ub2e4\uc74c \uc139\uc158\uc5d0\uc11c \uc0b4\ud3b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc801\uc815 \ud06c\uae30"},{"location":"scalability/docs/node_efficiency.kr/#pod","text":"\ubd88\ud544\uc694\ud55c \ud30c\ub4dc\ub97c \ub9cc\ub4e4\uba74 \uc5b4\ub5bb\uac8c \ube60\ub974\uac8c \uc81c\uc5b4\uac00 \ud798\ub4e4\uc5b4\uc9c8 \uc218 \uc788\ub294\uc9c0 \ubcf4\uae30 \uc704\ud574, \uc67c\ucabd\uc758 \uccab \ubc88\uc9f8 \uc608\uc81c\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc774 \ucee8\ud14c\uc774\ub108\uc758 \uc62c\ubc14\ub978 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc740 \ucd08\ub2f9 100\uac1c\uc758 \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \ub54c \uc57d 2\uac1c\uc758 vCPU \uc0ac\uc6a9\ub7c9\uc744 \ucc28\uc9c0\ud569\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uc694\uccad\uc744 \ud558\ud504 \ucf54\uc5b4\ub85c \uc124\uc815\ud558\uc5ec \uc694\uccad \uac12\uc744 \uacfc\uc18c \ud504\ub85c\ube44\uc800\ub2dd\ud558\ub824\uba74 \uc774\uc81c \uc2e4\uc81c\ub85c \ud544\uc694\ud55c \ud30c\ub4dc \ud558\ub098\ub2f9 \ud30c\ub4dc 4\uac1c\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ub354\uc6b1 \uc545\ud654\uc2dc\ud0a4\ub294 \uac83\uc740 HPA \ub97c \uae30\ubcf8\uac12\uc778 50% CPU\ub85c \uc124\uc815\ud558\uba74 \ud574\ub2f9 \ud30c\ub4dc\uac00 \uc808\ubc18\ub9cc \ube44\uc5b4 \uc788\ub294 \uc0c1\ud0dc\ub85c \ud655\uc7a5\ub418\uc5b4 8:1 \ube44\uc728\uc774 \ub41c\ub2e4\ub294 \uc810\uc785\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub97c \ud655\ub300\ud574\ubcf4\uba74 \uc774 \ubb38\uc81c\uac00 \uc5b4\ub5bb\uac8c \ud574\uacb0\ub420 \uc218 \uc788\ub294\uc9c0 \uae08\ubc29 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc774 \uc798\ubabb \uc124\uc815\ub41c 10\uac1c\uc758 \ud30c\ub4dc\ub97c \ubc30\ud3ec\ud558\uba74 \ube60\ub974\uac8c 80\uac1c\uc758 \ud30c\ub4dc\ub85c \ub298\uc5b4\ub098\uace0 \uc774\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \ucd94\uac00 \uc778\ud504\ub77c\uac00 \uc0dd\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ucd5c\uc801\uc758 \uc704\uce58\uc5d0\uc11c \uc791\ub3d9\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub294 \uac83\uc774 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc774\ud574\ud588\uc73c\ub2c8 \uc774\uc81c \ub178\ub4dc \uc218\uc900\uc73c\ub85c \ub3cc\uc544\uac00\uc11c Kubernetes \uc2a4\ucf00\uc904\ub7ec\uc640 Linux CFS \uac04\uc758 \uc774\ub7ec\ud55c \ucc28\uc774\uac00 \uc65c \uadf8\ub807\uac8c \uc911\uc694\ud55c\uc9c0 \ubb3c\uc5b4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4. HPA\ub85c \uc2a4\ucf00\uc77c\ub9c1\uc744 \ud655\uc7a5\ud558\uace0 \ucd95\uc18c\ud560 \ub54c, \ub354 \ub9ce\uc740 \ud30c\ub4dc\ub97c \ud560\ub2f9\ud560 \ub9ce\uc740 \uacf5\uac04\uc774 \uc788\ub294 \uc2dc\ub098\ub9ac\uc624\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \uc88b\uc9c0 \uc54a\uc740 \uacb0\uc815\uc77c \uac83\uc785\ub2c8\ub2e4. \uc67c\ucabd\uc5d0 \uadf8\ub824\uc9c4 \ub178\ub4dc\ub294 \uc774\ubbf8 100% CPU \uc0ac\uc6a9\ub960\uc5d0 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \ud604\uc2e4\uc801\uc774\uc9c0\ub294 \uc54a\uc9c0\ub9cc \uc774\ub860\uc801\uc73c\ub85c \uac00\ub2a5\ud55c \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub294 \uc6b0\ub9ac \ub178\ub4dc\uac00 \uc644\uc804\ud788 \uac00\ub4dd \ucc28 \uc788\uc9c0\ub9cc, CPU \uc0ac\uc6a9\ub960\uc740 0%\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Pod \ud655\uc0b0"},{"location":"scalability/docs/node_efficiency.kr/#requests","text":"request \uac12\uc744 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \u201c\uc2a4\uc704\ud2b8 \uc2a4\ud31f\u201d \uac12\uc73c\ub85c \uc124\uc815\ud558\uace0 \uc2f6\uc744 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \uc774\ub807\uac8c \ud558\uba74 \uc544\ub798 \ub2e4\uc774\uc5b4\uadf8\ub7a8\uacfc \uac19\uc774 \ube44\ud6a8\uc728\uc131\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 \uc694\uccad \uac12\uc744 2vCPU\ub85c \uc124\uc815\ud588\uc9c0\ub9cc \uc774 \ud30c\ub4dc\ub4e4\uc758 \ud3c9\uade0 \uc0ac\uc6a9\ub960\uc740 \ub300\ubd80\ubd84\uc758 \uc2dc\uac04 \ub3d9\uc548 1 CPU\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774 \uc124\uc815\uc740 CPU \uc8fc\uae30\uc758 50%\ub97c \ub0ad\ube44\ud558\uac8c \ub418\uc5b4, \uc774\ub294 \ud5c8\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc740 \ubb38\uc81c\uc5d0 \ub300\ud55c \ubcf5\uc7a1\ud55c \ub2f5\ubcc0\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ud65c\uc6a9\uc740 \uc9c4\uacf5 \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uc0dd\uac01\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc74c \uc608\uc5d0\uc11c\ub294 \uc131\uc9c8\uc0c1 \ubc84\uc2a4\ud2f0\ud55c \ucee8\ud14c\uc774\ub108\ub4e4\uc774 \uba54\ubaa8\ub9ac\uc5d0 \uc81c\uc57d\uc774 \uc788\uc744 \uc218 \uc788\ub294 \ub450 \uac1c\uc758 \ub0ae\uc740 CPU \uc0ac\uc6a9 \ucee8\ud14c\uc774\ub108\uc640 \uc11e\uc5ec \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc\uc5d0 \ubd80\ub2f4\uc744 \uc8fc\uc9c0 \uc54a\uace0\ub3c4 \ucee8\ud14c\uc774\ub108\uac00 \uc2a4\uc704\ud2b8 \uc2a4\ud31f\uc5d0 \ub3c4\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubaa8\ub4e0 \uac83\uc5d0\uc11c \uc5bb\uc744 \uc218 \uc788\ub294 \uc911\uc694\ud55c \uac1c\ub150\uc740, \ub9ac\ub205\uc2a4 \ucee8\ud14c\uc774\ub108 \uc131\ub2a5\uc744 \uc774\ud574\ud558\uae30 \uc704\ud574 Kubernetes \uc2a4\ucf00\uc904\ub7ec\uc758 \ucf54\uc5b4 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uadf8\ub4e4 \uc0ac\uc774\uc5d0 \uad00\ub828\uc774 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc798\ubabb\ub41c \uacb0\uc815\uc744 \ub0b4\ub9b4 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. Tip Linux CFS\ub294 \uadf8 \uc790\uccb4\ub85c \uac15\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 I/O \uae30\ubc18 \uc791\uc5c5 \ubd80\ud558\uc5d0 \ub300\ud574 \ud2b9\ud788 \uadf8\ub807\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc0ac\uc774\ub4dc\uce74 \uc5c6\uc774 \uc804\uccb4 \ucf54\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0 I/O \uc694\uad6c\uc0ac\ud56d\uc774 \uc5c6\ub2e4\uba74, CPU \ud540\ub2dd\uc740 \uc774 \uacfc\uc815\uc5d0\uc11c \ub9ce\uc740 \ubcf5\uc7a1\uc131\uc744 \uc81c\uac70\ud560 \uc218 \uc788\uc73c\uba70, \uadf8\ub7f0 \uc0ac\ud56d\ub4e4\ub85c \uc778\ud574 \uad8c\uc7a5\ub429\ub2c8\ub2e4.","title":"Requests \uc124\uc815"},{"location":"scalability/docs/node_efficiency.kr/#utilization-vs-saturation","text":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ucf00\uc77c\ub9c1\uc5d0\uc11c \ud754\ud788 \ubc1c\uc0dd\ud558\ub294 \uc2e4\uc218\ub294 \uc2a4\ucf00\uc77c\ub9c1 \uc9c0\ud45c\uc5d0 CPU \uc0ac\uc6a9\ub960\ub9cc \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf5\uc7a1\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc774\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc2e4\uc81c\ub85c \uc694\uccad\uc73c\ub85c \uac00\ub4dd \ucc28 \uc788\ub2e4\ub294 \uc798\ubabb\ub41c \uc9c0\ud45c\uc778 \uacbd\uc6b0\uac00 \uac70\uc758 \ub300\ubd80\ubd84\uc785\ub2c8\ub2e4. \uc67c\ucabd \uc608\uc5d0\uc11c\ub294 \ubaa8\ub4e0 \uc694\uccad\uc774 \uc2e4\uc81c\ub85c \uc6f9 \uc11c\ubc84\uc5d0 \ub3c4\ub2ec\ud558\uace0 \uc788\ub294 \uac83\uc744 \ubcfc \uc218 \uc788\uc73c\ubbc0\ub85c CPU \uc0ac\uc6a9\ub960\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc5d0\uc11c\ub3c4 \uc798 \ucd94\uc801\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \uc774\ub7ec\ud55c \uc694\uccad \uc911 \uc77c\ubd80\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uacc4\uce35\uc774\ub098 \uc778\uc99d \uacc4\uce35 \ub4f1\uc5d0\uc11c \ucc98\ub9ac\ub420 \uac00\ub2a5\uc131\uc774 \ub192\uc9c0\ub9cc, \uc774 \ubcf4\ub2e4 \uc77c\ubc18\uc801\uc778 \uacbd\uc6b0\uc5d0\ub294 \ub2e4\ub978 \uc5d4\ud2f0\ud2f0\uc5d0\uc11c \uc694\uccad\uc744 \ucc98\ub9ac\ud558\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 CPU\uac00 \ud3ec\ud654 \uc0c1\ud0dc\ub85c \ucd94\uc801\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 CPU\ub294 \ud3ec\ud654\ub3c4\ub97c \uc81c\ub300\ub85c \ub098\ud0c0\ub0b4\uc9c0 \ubabb\ud569\ub2c8\ub2e4. Kubernetes\uc5d0\uc11c \ubd88\ud544\uc694\ud558\uace0 \uc608\uce21\ud560 \uc218 \uc5c6\ub294 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ubc1c\uc0dd\ud558\ub294 \uac00\uc7a5 \ud070 \uc774\uc720\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc5d0\uc11c \uc798\ubabb\ub41c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\uc0ac\uc6a9 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc720\ud615\uc5d0 \ub9de\ub294 \uc62c\ubc14\ub978 \ucc44\ub3c4 \uc9c0\ud45c\ub97c \uc120\ud0dd\ud560 \ub54c\ub294 \uac01\ubcc4\ud55c \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4.\ud55c \uac00\uc9c0 \uc8fc\uc758\ud560 \uc810\uc740 \ubaa8\ub4e0 \uc0ac\ub78c\uc5d0\uac8c \ub9de\ub294 \ud55c \uac00\uc9c0 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \uc5c6\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4.\uc0ac\uc6a9\ub418\ub294 \uc5b8\uc5b4\uc640 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc720\ud615\uc5d0 \ub530\ub77c \ucc44\ub3c4\uc5d0 \ub300\ud55c \ub2e4\uc591\ud55c \uc9c0\ud45c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubb38\uc81c\ub294 CPU \uc0ac\uc6a9\ub960\uc5d0\ub9cc \uad6d\ud55c\ub41c \uac83\uc73c\ub85c \uc0dd\uac01\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc, \ucd08\ub2f9 \uc694\uccad \uc218\uc640 \uac19\uc740 \ub2e4\ub978 \uc77c\ubc18\uc801\uc778 \uc9c0\ud45c\ub3c4 \uc704\uc5d0\uc11c \uc124\uba85\ud55c \uac83\uacfc \ub611\uac19\uc740 \ubb38\uc81c\uc5d0 \ube60\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c \uc694\uccad\uc740 \uc6f9 \uc11c\ubc84\uc5d0\uc11c \uc9c1\uc811 \ucc98\ub9ac\ub418\uc9c0 \uc54a\ub294 DB \uacc4\uce35, \uc778\uc99d \uacc4\uce35\uc5d0\ub3c4 \uc804\ub2ec\ub420 \uc218 \uc788\uc73c\ubbc0\ub85c \uc6f9 \uc11c\ubc84 \uc790\uccb4\uc758 \uc2e4\uc81c \ucc44\ub3c4\ub97c \ud3c9\uac00\ud558\ub294 \uc9c0\ud45c\ub85c\ub294 \ubd80\uc871\ud569\ub2c8\ub2e4. \uc548\ud0c0\uae5d\uac8c\ub3c4 \uc62c\ubc14\ub978 \ucc44\ub3c4 \uce21\uc815\ubc95\uc744 \uc120\ud0dd\ud558\ub294 \ub370 \uc788\uc5b4 \uc26c\uc6b4 \ud574\ub2f5\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \uace0\ub824\ud574\uc57c \ud560 \uba87 \uac00\uc9c0 \uc9c0\uce68\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ub7f0\ud0c0\uc784\uc744 \uc774\ud574\ud558\uc138\uc694. \uc5ec\ub7ec OS \uc2a4\ub808\ub4dc\uac00 \uc788\ub294 \uc5b8\uc5b4\ub294 \ub2e8\uc77c \uc2a4\ub808\ub4dc \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \ub2e4\ub974\uac8c \ubc18\uc751\ud558\ubbc0\ub85c \ub178\ub4dc\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc774 \ub2e4\ub985\ub2c8\ub2e4. \uc62c\ubc14\ub978 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc744 \uc774\ud574\ud558\uc138\uc694. \uc0c8 \ud30c\ub4dc\ub97c \uc2a4\ucf00\uc77c\ub9c1\ud558\uae30 \uc804\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc218\uc9c1 \uc2a4\ucf00\uc77c\uc5d0 \uc5bc\ub9c8\ub098 \ub9ce\uc740 \ubc84\ud37c\ub97c \uc801\uc6a9\ud558\uae38 \uc6d0\ud558\uc2dc\ub098\uc694? \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ucc44\ub3c4\ub97c \uc2e4\uc81c\ub85c \ubc18\uc601\ud558\ub294 \uc9c0\ud45c\ub294 \ubb34\uc5c7\uc778\uac00\uc694? - Kafka Producer\uc758 \ud3ec\ud654 \uc9c0\ud45c\ub294 \ubcf5\uc7a1\ud55c \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc\ub294 \uc0c1\ub2f9\ud788 \ub2e4\ub985\ub2c8\ub2e4. \ub178\ub4dc\uc758 \ub2e4\ub978 \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc11c\ub85c \uc5b4\ub5a4 \uc601\ud5a5\uc744 \ubbf8\uce58\ub098\uc694? - \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc131\ub2a5\uc740 \uc9c4\uacf5 \uc0c1\ud0dc\uc5d0\uc11c \uc774\ub8e8\uc5b4\uc9c0\uc9c0 \uc54a\uc73c\ubbc0\ub85c \ub178\ub4dc\uc758 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774 \uc139\uc158\uc744 \ub9c8\ubb34\ub9ac\ud558\uba70, \uc704\uc758 \ub0b4\uc6a9\uc744 \uacfc\ub3c4\ud558\uac8c \ubcf5\uc7a1\ud558\uace0 \ubd88\ud544\uc694\ud558\ub2e4\uace0 \uc0dd\uac01\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4. \uc885\uc885 \uc6b0\ub9ac\ub294 \ubb38\uc81c\ub97c \uacaa\uace0 \uc788\uc9c0\ub9cc, \uc798\ubabb\ub41c \uc9c0\ud45c\ub97c \ubcf4\uace0 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubb38\uc81c\uc758 \uc9c4\uc815\ud55c \uc131\uaca9\uc744 \ubaa8\ub974\uace0 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \uc774\ub7f0 \uc77c\uc774 \uc77c\uc5b4\ub0a0 \uc218 \uc788\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\uc774\uc6a9\ub960(Utilization) vs. \ud3ec\ud654\ub3c4(Saturation)"},{"location":"scalability/docs/node_efficiency.kr/#_5","text":"\uc774\uc81c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud3ec\ud654\uc5d0 \ub300\ud574 \uc0b4\ud3b4\ubcf4\uc558\uc73c\ub2c8 \ub178\ub4dc \uad00\uc810\uc5d0\uc11c \uc774\uc640 \ub3d9\uc77c\ud55c \uac1c\ub150\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\ub960\uc774 100% \uc778 \ub450 \uac1c\uc758 CPU\ub97c \uc608\ub85c \ub4e4\uc5b4 \uc0ac\uc6a9\ub960\uacfc \ud3ec\ud654\ub3c4 \uac04\uc758 \ucc28\uc774\ub97c \ud655\uc778\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc67c\ucabd\uc758 vCPU\ub294 100% \uc0ac\uc6a9\ub418\uc9c0\ub9cc \uc774 vCPU\uc5d0\uc11c \uc2e4\ud589\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\ub294 \ub2e4\ub978 \uc791\uc5c5\uc740 \uc5c6\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc21c\uc804\ud788 \uc774\ub860\uc801\uc778 \uc758\ubbf8\uc5d0\uc11c\ub294 \uc0c1\ub2f9\ud788 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. \ud55c\ud3b8, \ub450 \ubc88\uc9f8 \uc608\uc5d0\uc11c\ub294 20\uac1c\uc758 \ub2e8\uc77c \uc2a4\ub808\ub4dc \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 vCPU\uc5d0\uc11c \ucc98\ub9ac\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c 20\uac1c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubaa8\ub450 vCPU\uc5d0\uc11c \uc21c\uc11c\uac00 \ucc98\ub9ac\ub418\uae30\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc5b4\ub290 \uc815\ub3c4\uc758 \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc989, \uc624\ub978\ucabd\uc5d0 \uc788\ub294 vCPU\uac00 \ud3ec\ud654 \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\ub960\ub9cc \ubcf4\uba74 \uc774 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc744 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ub124\ud2b8\uc6cc\ud0b9\uacfc \uac19\uc774 \uad00\ub828\uc774 \uc5c6\ub294 \ubb38\uc81c\uac00 \uc9c0\uc5f0\ub418\uc5b4 \uc798\ubabb\ub41c \uae38\ub85c \uac00\uac8c \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc2dc\uc810\uc5d0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucd1d \ud3ec\ub4dc \uc218\ub97c \ub298\ub9b4 \ub54c\ub294 \uc0ac\uc6a9\ub960 \uc9c0\ud45c\ubfd0\ub9cc \uc544\ub2c8\ub77c \ud3ec\ud654 \uc9c0\ud45c\ub97c \ubcf4\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub178\ub4dc\uac00 \uacfc\ud3ec\ud654 \uc0c1\ud0dc\ub77c\ub294 \uc0ac\uc2e4\uc744 \uc27d\uac8c \ub193\uce60 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc5d0\ub294 \uc544\ub798 \ucc28\ud2b8\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 \uac83\ucc98\ub7fc \uc555\ub825 \ud3ec\ud654 \uc815\ubcf4 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PromQL - Stalled I/O topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Note For more on Pressure stall metrics, see https://facebookmicrosites.github.io/psi/docs/overview \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://facebookmicrosites.github.io/psi/docs/overview \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc774 \uce21\uc815\uce58\ub97c \ud1b5\ud574 \uc2a4\ub808\ub4dc\uac00 CPU\uc5d0\uc11c \ub300\uae30 \uc911\uc778\uc9c0, \uc544\ub2c8\uba74 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 \uba54\ubaa8\ub9ac \ub610\ub294 I/O\uc640 \uac19\uc740 \ub9ac\uc18c\uc2a4\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc911\ub2e8\ub418\uc5c8\ub294\uc9c0\ub97c \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc778\uc2a4\ud134\uc2a4\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 1\ubd84 \ub3d9\uc548 I/O\ub97c \uae30\ub2e4\ub9ac\ub294 \ub3d9\uc548 \uc911\ub2e8\ub41c \ube44\uc728\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) \uc774 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uba74 \uc704\uc758 \ucc28\ud2b8\uc5d0\uc11c \ubc15\uc2a4\uc0c1\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uac00 \ud558\uc774 \uc6cc\ud130\ub9c8\ud06c\uc5d0\uc11c I/O\ub97c \uae30\ub2e4\ub9b4 \ub54c 45% \uc758 \uc2dc\uac04 \ub3d9\uc548 \uc911\ub2e8\ub41c \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc989, 1\ubd84 \ub3d9\uc548 CPU \uc0ac\uc774\ud074\uc744 \ubaa8\ub450 \ub0ad\ube44\ud558\uace0 \uc788\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4. \uc774\ub7f0 \uc77c\uc774 \uc77c\uc5b4\ub098\uace0 \uc788\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\uba74 \uc0c1\ub2f9\ud55c \uc591\uc758 vCPU \uc2dc\uac04\uc744 \ud68c\uc218\ud558\uc5ec \uc2a4\ucf00\uc77c\ub9c1\uc758 \ud6a8\uc728\uc131\uc744 \ub192\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \ud3ec\ud654\ub3c4"},{"location":"scalability/docs/node_efficiency.kr/#hpa-v2","text":"HPA API\uc758 autoscaling/v2 \ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\uc804 \ubc84\uc804\uc758 HPA API\ub294 \ud2b9\uc815 \uc5e3\uc9c0 \ucf00\uc774\uc2a4\uc5d0\uc11c \ud06c\uae30 \uc870\uc815\uc774 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uac01 \ud655\uc7a5 \ub2e8\uacc4\uc5d0\uc11c \ud3ec\ub4dc\uac00 \ub450 \ubc30\ub9cc \uc99d\uac00\ud558\ub294 \uac83\uc73c\ub85c \uc81c\ud55c\ub418\uc5c8\uc73c\ubbc0\ub85c \uc18c\uaddc\ubaa8 \ubc30\ud3ec\uc5d0\uc11c\ub294 \ube60\ub974\uac8c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. autoscaling/v2\ub97c \uc0ac\uc6a9\ud558\uba74 \uaddc\ubaa8\ub97c \ud655\ub300\ud558\uae30 \uc704\ud55c \uc5ec\ub7ec \uae30\uc900\uc744 \ub354 \uc720\uc5f0\ud558\uac8c \ud3ec\ud568\ud560 \uc218 \uc788\uc73c\uba70, \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ubc0f \uc678\ubd80 \uc9c0\ud45c (K8s \uc9c0\ud45c\uac00 \uc544\ub2d8) \uc744 \uc0ac\uc6a9\ud560 \ub54c \uc720\uc5f0\uc131\uc774 \ud06c\uac8c \ud5a5\uc0c1\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc138 \uac00\uc9c0 \uac12 \uc911 \uac00\uc7a5 \ub192\uc740 \uac12\uc744 \uae30\uc900\uc73c\ub85c \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc544\ub798 \ucc38\uc870). \ubaa8\ub4e0 \ud30c\ub4dc\uc758 \ud3c9\uade0 \uc0ac\uc6a9\ub960\uc774 50% \ub97c \ub118\uac70\ub098, \ucee4\uc2a4\ud140 \uc9c0\ud45c\uc778 \uacbd\uc6b0 \uc778\uadf8\ub808\uc2a4 \ucd08\ub2f9 \ud328\ud0b7\uc774 \ud3c9\uade0 1,000\uac1c\ub97c \ucd08\uacfc\ud558\uac70\ub098, \uc778\uadf8\ub808\uc2a4 \uc624\ube0c\uc81d\ud2b8\uac00 \ucd08\ub2f9 \uc694\uccad 10,000\uac74\uc744 \ucd08\uacfc\ud560 \uacbd\uc6b0 \uaddc\ubaa8\ub97c \uc870\uc815\ud569\ub2c8\ub2e4. Note \uc774\ub294 Auto Scaling API\uc758 \uc720\uc5f0\uc131\uc744 \ubcf4\uc5ec\uc8fc\uae30 \uc704\ud55c \uac83\uc774\ubbc0\ub85c \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc5d0\uc11c \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\ub294 \uc9c0\ub098\uce58\uac8c \ubcf5\uc7a1\ud55c \uaddc\uce59\uc740 \ud53c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. apiVersion : autoscaling/v2 kind : HorizontalPodAutoscaler metadata : name : php-apache spec : scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : php-apache minReplicas : 1 maxReplicas : 10 metrics : - type : Resource resource : name : cpu target : type : Utilization averageUtilization : 50 - type : Pods pods : metric : name : packets-per-second target : type : AverageValue averageValue : 1k - type : Object object : metric : name : requests-per-second describedObject : apiVersion : networking.k8s.io/v1 kind : Ingress name : main-route target : type : Value value : 10k \ud558\uc9c0\ub9cc \ubcf5\uc7a1\ud55c \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc704\ud5d8\ud558\ub2e4\ub294 \uac83\uc744 \uc54c\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3ec\ud654\ub3c4\uc640 \uc0ac\uc6a9\ub960\uc744 \uc815\ud655\ud558\uac8c \ubc18\uc601\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub610\ub294 \uc678\ubd80 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ub098\uc740 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. HPaV2\ub294 \ubaa8\ub4e0 \uc9c0\ud45c\uc5d0 \ub530\ub77c \ud655\uc7a5\ud560 \uc218 \uc788\uc5b4 \uc774\ub97c \uac00\ub2a5\ud558\uac8c \ud558\uc9c0\ub9cc, \uc0ac\uc6a9\ud558\ub824\uba74 \ud574\ub2f9 \uc9c0\ud45c\ub97c \ucc3e\uc544\uc11c Kubernetes\ub85c \uc775\uc2a4\ud3ec\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Apache\uc5d0\uc11c \ud65c\uc131 \uc2a4\ub808\ub4dc \ub300\uae30\uc5f4 \uc218\ub97c \uc0b4\ud3b4\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc2a4\ucf00\uc77c\ub9c1 \ud504\ub85c\ud544\uc774 \u201c\ub354 \ub9e4\ub044\ub7fd\uac8c\u201d \ub9cc\ub4e4\uc5b4\uc9c0\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4(\uc774 \uc6a9\uc5b4\uc5d0 \ub300\ud574\uc11c\ub294 \uace7 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \uc2a4\ub808\ub4dc\uac00 \ud65c\uc131 \uc0c1\ud0dc\uc774\uba74 \ud574\ub2f9 \uc2a4\ub808\ub4dc\uac00 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uacc4\uce35\uc5d0\uc11c \ub300\uae30 \uc911\uc774\ub4e0 \ub85c\uceec\uc5d0\uc11c \uc694\uccad\uc744 \ucc98\ub9ac\ud558\ub4e0 \uc0c1\uad00 \uc5c6\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ub808\ub4dc\uac00 \uc0ac\uc6a9\ub418\uace0 \uc788\ub2e4\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \uc88b\uc740 \uc9c0\ud45c\uc785\ub2c8\ub2e4. \uc774 \uc2a4\ub808\ub4dc \uace0\uac08\uc744 \uc2e0\ud638\ub85c \uc0ac\uc6a9\ud558\uc5ec \uc644\uc804\ud788 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc2a4\ub808\ub4dc \ud480\uc744 \uac16\ucd98 \uc0c8 \ud30c\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ud2b8\ub798\ud53d\uc774 \ub9ce\uc740 \uc2dc\uae30\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ud761\uc218\ud558\ub824\ub294 \ubc84\ud37c \ud06c\uae30\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucd1d \uc2a4\ub808\ub4dc \ud480\uc774 10\uac1c\uc778 \uacbd\uc6b0 \uc0ac\uc6a9\ub41c \uc2a4\ub808\ub4dc 4\uac1c\uc640 \uc0ac\uc6a9\ub41c \uc2a4\ub808\ub4dc 8\uac1c\ub85c \ud655\uc7a5\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc84\ud37c\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd80\ud558\uac00 \uc2ec\ud55c \uc0c1\ud0dc\uc5d0\uc11c \ube60\ub974\uac8c \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 4\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc694\uccad \uc218\uac00 \ub290\ub9ac\uac8c \uc99d\uac00\ud558\ub294 \ub300\uc2e0 \uae09\uaca9\ud788 \uc99d\uac00\ud558\ubbc0\ub85c \ud655\uc7a5\ud560 \uc2dc\uac04\uc774 \ucda9\ubd84\ud558\ub2e4\uba74 8\ub85c \uc124\uc815\ud558\ub294 \uac83\uc774 \ub9ac\uc18c\uc2a4 \ud65c\uc6a9\uc5d0 \ub354 \ud6a8\uc728\uc801\uc785\ub2c8\ub2e4. \uc2a4\ucf00\uc77c\ub9c1\uacfc \uad00\ub828\ud558\uc5ec \u201c\ub9e4\ub044\ub7fd\ub2e4\u201d\ub77c\ub294 \uc6a9\uc5b4\ub294 \ubb34\uc5c7\uc744 \uc758\ubbf8\ud560\uae4c\uc694? \uc544\ub798 \ucc28\ud2b8\ub97c \ubcf4\uba74 CPU\ub97c \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4 .\uc774 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \ud30c\ub4dc \uc218\uac00 50\uac1c\uc5d0\uc11c \ucd5c\ub300 250\uac1c\uae4c\uc9c0 \uc9e7\uc740 \uae30\uac04\uc5d0 \uae09\uc99d\ud558\ub2e4\uac00 \ub2e4\uc2dc \uc989\uc2dc \ucd95\uc18c\ub429\ub2c8\ub2e4.\uc774\ub294 \ub9e4\uc6b0 \ube44\ud6a8\uc728\uc801\uc778 \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud074\ub7ec\uc2a4\ud130 \uc774\ud0c8\uc758 \uc8fc\uc694 \uc6d0\uc778\uc774\ub77c\ub294 \uc810\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc62c\ubc14\ub978 \uc2a4\uc704\ud2b8 \uc2a4\ud31f(\ucc28\ud2b8 \uc911\uac04 \ubd80\ubd84)\uc744 \ubc18\uc601\ud558\ub294 \uc9c0\ud45c\ub85c \ubcc0\uacbd\ud55c \ud6c4 \uc6d0\ud65c\ud558\uac8c \ud655\uc7a5\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc8fc\ubaa9\ud558\uc138\uc694. \uc774\uc81c \uc2a4\ucf00\uc77c\ub9c1\uc774 \ud6a8\uc728\uc801\uc774\uc5c8\uc73c\uba70 \uc694\uccad \uc124\uc815\uc744 \uc870\uc815\ud558\uc5ec \uc81c\uacf5\ub41c \uc5ec\uc720 \uacf5\uac04\uc5d0 \ub9de\uac8c \ud30c\ub4dc\ub97c \uc644\uc804\ud788 \ud655\uc7a5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc804\uc5d0\ub294 \uc218\ubc31 \uac1c\uc758 \ud30c\ub4dc\uac00 \ud558\ub358 \uc791\uc5c5\uc744 \uc774\uc81c\ub294 \uc18c\uaddc\ubaa8 \ud30c\ub4dc \uadf8\ub8f9\uc774 \uc218\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c \ub370\uc774\ud130\uc5d0 \ub530\ub974\uba74 \uc774\uac83\uc774 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\uc758 \ud655\uc7a5\uc131\uc744 \uacb0\uc815\ud558\ub294 \uac00\uc7a5 \uc911\uc694\ud55c \uc694\uc18c\uc785\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 CPU \uc0ac\uc6a9\ub960\uc774 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub178\ub4dc \uc131\ub2a5\uc758 \ud55c \ucc28\uc6d0\uc5d0 \ubd88\uacfc\ud558\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. CPU \uc0ac\uc6a9\ub960\uc744 \ub178\ub4dc\uc640 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc720\uc77c\ud55c \uc0c1\ud0dc \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud558\uba74 \ud655\uc7a5\uc131, \uc131\ub2a5 \ubc0f \ube44\uc6a9 \uce21\uba74\uc5d0\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\ub294\ub370, \uc774\ub294 \ubaa8\ub450 \uae34\ubc00\ud558\uac8c \uc5f0\uacb0\ub41c \uac1c\ub150\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub178\ub4dc\uc758 \uc131\ub2a5\uc774 \ub192\uc744\uc218\ub85d \ud655\uc7a5\ud574\uc57c \ud558\ub294 \uc591\uc774 \uc904\uc5b4\ub4e4\uc5b4 \ube44\uc6a9\uc774 \uc808\uac10\ub429\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud655\uc7a5\ud558\uae30 \uc704\ud55c \uc62c\ubc14\ub978 \ud3ec\ud654\ub3c4 \uc9c0\ud45c\ub97c \ucc3e\uc544 \uc0ac\uc6a9\ud558\uba74 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc2e4\uc81c \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \uacbd\ubcf4\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc911\uc694\ud55c \ub2e8\uacc4\ub97c \uac74\ub108\ub6f0\uba74 \uc131\ub2a5 \ubb38\uc81c\uc5d0 \ub300\ud55c \ubcf4\uace0\uc11c\ub97c \uc774\ud574\ud558\uae30\uac00 \ubd88\uac00\ub2a5\ud558\uc9c0\ub294 \uc54a\ub354\ub77c\ub3c4 \uc774\ud574\ud558\uae30 \uc5b4\ub824\uc6b8 \uac83\uc785\ub2c8\ub2e4.","title":"HPA V2"},{"location":"scalability/docs/node_efficiency.kr/#cpu","text":"\uc798\ubabb \uc774\ud574\ub418\uace0 \uc788\ub294 \uc8fc\uc81c\uc5d0 \ub300\ud574 \uc774 \uc139\uc158\uc744 \ub9c8\ubb34\ub9ac\ud558\uae30 \uc704\ud574 CPU \uc81c\ud55c\uc5d0 \ub300\ud574 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uac04\ub2e8\ud788 \ub9d0\ud574 \ud55c\ub3c4\ub294 100ms\ub9c8\ub2e4 \uc7ac\uc124\uc815\ud558\ub294 \uce74\uc6b4\ud130\uac00 \uc788\ub294 \ucee8\ud14c\uc774\ub108\uc640 \uad00\ub828\ub41c \uba54\ud0c0\ub370\uc774\ud130\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 Linux\ub294 100ms \uae30\uac04 \ub3d9\uc548 \ud2b9\uc815 \ucee8\ud14c\uc774\ub108\uac00 \ub178\ub4dc \uc804\uccb4\uc5d0\uc11c \uc0ac\uc6a9\ud55c CPU \ub9ac\uc18c\uc2a4 \uc218\ub97c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c\uc744 \uc124\uc815\ud560 \ub54c \ud754\ud55c \uc624\ub958\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2e8\uc77c \uc2a4\ub808\ub4dc\uc774\uba70 \ud560\ub2f9\ub41c vCPU\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub41c\ub2e4\uace0 \uac00\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc704 \uc139\uc158\uc5d0\uc11c CFS\ub294 \ucf54\uc5b4\ub97c \ud560\ub2f9\ud558\uc9c0 \uc54a\uc73c\uba70, \uc2e4\uc81c\ub85c \ub300\uaddc\ubaa8 \uc2a4\ub808\ub4dc \ud480\uc744 \uc2e4\ud589\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 vCPU\ub97c \uc2a4\ucf00\uc904\ub9c1\ud55c\ub2e4\ub294 \uac83\uc744 \ubc30\uc6e0\uc2b5\ub2c8\ub2e4. 64\uac1c\uc758 OS \uc2a4\ub808\ub4dc\uac00 64\uac1c\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucf54\uc5b4(\ub9ac\ub205\uc2a4 \ub178\ub4dc \uad00\uc810\uc5d0\uc11c)\uc5d0\uc11c \uc2e4\ud589\ub418\uace0 \uc788\ub2e4\uba74, \uadf8 64\uac1c\uc758 \ucf54\uc5b4\uc5d0\uc11c \ubaa8\ub450 \uc2e4\ud589\ub41c \uc2dc\uac04\uc744 \ud569\ud55c \ud6c4 100ms \uae30\uac04 \ub3d9\uc548 \uc0ac\uc6a9\ub41c CPU \uc2dc\uac04\uc758 \ucd1d\uacc4\ub294 \uc0c1\ub2f9\ud788 \ud06c\uac8c \ub420 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 \uac00\ube44\uc9c0 \uc218\uc9d1 \ud504\ub85c\uc138\uc2a4 \uc911\uc5d0\ub9cc \ubc1c\uc0dd\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc774\ub7f0 \uac83\uc744 \ub193\uce58\uae30\uac00 \uc0c1\ub2f9\ud788 \uc27d\uc2b5\ub2c8\ub2e4. \uc774\uac83\uc774 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uae30 \uc804\uc5d0 \uc2dc\uac04 \ub3d9\uc548 \uc62c\ubc14\ub978 \uc0ac\uc6a9\ub7c9\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud574 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc774\uc720\uc785\ub2c8\ub2e4. \ub2e4\ud589\ud788\ub3c4, \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubaa8\ub4e0 \uc2a4\ub808\ub4dc\uc5d0\uc11c \uc5bc\ub9c8\ub098 \ub9ce\uc740 vCPU\uac00 \uc0ac\uc6a9\ub418\uace0 \uc788\ub294\uc9c0 \uc815\ud655\ud788 \uc54c \uc218 \uc788\ub294 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubaa9\uc801\uc73c\ub85c container_cpu_usage_seconds_total \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc2a4\ub85c\ud2c0\ub9c1 \ub85c\uc9c1\uc774 \ub9e4 100ms\ub9c8\ub2e4 \ubc1c\uc0dd\ud558\uace0 \uc774 \uc9c0\ud45c\uac00 \ucd08\ub2f9 \uc9c0\ud45c\uc774\ubbc0\ub85c, \uc774 100ms \uae30\uac04\uc5d0 \ub9de\uac8c PromQL\uc744 \uc0ac\uc6a9\ud560 \uac83\uc785\ub2c8\ub2e4. \uc774 PromQL \uba85\ub839\ubb38 \uc791\uc5c5\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. PromQL \ucffc\ub9ac: topk(3, max by (pod, container)(rate(container_cpu_usage_seconds_total{image!=\"\", instance=\"$instance\"}[$__rate_interval]))) / 10 \uc77c\ub2e8 \uc6b0\ub9ac\uac00 \uc62c\ubc14\ub978 \uac00\uce58\ub97c \uac00\uc9c0\uace0 \uc788\ub2e4\uace0 \uc0dd\uac01\ub418\uba74, \ud504\ub85c\ub355\uc158\uc5d0\uc11c \uc81c\ud55c\uc744 \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \uc608\uc0c1\uce58 \ubabb\ud55c \ubb38\uc81c\ub85c \uc778\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uacaa\uace0 \uc788\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4 container_cpu_throttled_seconds_total \uc744 \uc0b4\ud3b4\ubcf4\uba74 \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk(3, max by (pod, container)(rate(container_cpu_cfs_throttled_seconds_total{image!=``\"\"``, instance=``\"$instance\"``}[$__rate_interval]))) / 10","title":"CPU \uc81c\ud55c \uc124\uc815"},{"location":"scalability/docs/node_efficiency.kr/#_6","text":"\uba54\ubaa8\ub9ac \ud560\ub2f9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub9c1 \ub3d9\uc791\uacfc Linux CGroup \ub3d9\uc791\uc744 \ud63c\ub3d9\ud558\uae30 \uc26c\uc6b4 \ub610 \ub2e4\ub978 \uc608\uc785\ub2c8\ub2e4. CGroup v2\uac00 Linux\uc5d0\uc11c \uba54\ubaa8\ub9ac\ub97c \ucc98\ub9ac\ud558\ub294 \ubc29\uc2dd\uc774 \ud06c\uac8c \ubcc0\uacbd\ub418\uc5c8\uace0 Kubernetes\uac00 \uc774\ub97c \ubc18\uc601\ud558\uc5ec \uad6c\ubb38\uc744 \ubcc0\uacbd\ud588\uae30 \ub54c\ubb38\uc5d0 \uc774 \uc8fc\uc81c\ub294 \uc880 \ub354 \ubbf8\ubb18\ud55c \uc8fc\uc81c\uc785\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc774 \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. CPU \uc694\uccad\uacfc \ub2ec\ub9ac \uba54\ubaa8\ub9ac \uc694\uccad\uc740 \uc2a4\ucf00\uc904\ub9c1 \ud504\ub85c\uc138\uc2a4\uac00 \uc644\ub8cc\ub41c \ud6c4 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub294 CGroup v1\uc5d0\uc11c CPU\uc640 \uac19\uc740 \ubc29\uc2dd\uc73c\ub85c \uba54\ubaa8\ub9ac\ub97c \uc555\ucd95\ud560 \uc218 \uc5c6\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8 \uacb0\uacfc \uc6b0\ub9ac\ub294 \uba54\ubaa8\ub9ac \uc81c\ud55c\ub9cc\uc744 \uac00\uc9c0\uac8c \ub418\uba70, \uc774\ub294 \uba54\ubaa8\ub9ac \ub204\uc218\uc5d0 \ub300\ud55c \uc2e4\ud328\ub85c\ubd80\ud130 \ud30c\ub4dc\ub97c \uc644\uc804\ud788 \uc885\ub8cc\uc2dc\ud0a4\ub294 \uac83\uc73c\ub85c \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc804\ubd80 \ub610\ub294 \uc544\ubb34\uac83\ub3c4 \uc5c6\ub294 \uc2a4\ud0c0\uc77c\uc758 \uc81c\uc548\uc774\uc9c0\ub9cc, \uc774 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c \uc0c8\ub85c\uc6b4 \ubc29\ubc95\uc774 \uc81c\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uccab\uc9f8, \ucee8\ud14c\uc774\ub108\uc5d0 \uc62c\ubc14\ub978 \uc591\uc758 \uba54\ubaa8\ub9ac\ub97c \uc124\uc815\ud558\ub294 \uac83\uc740 \ubcf4\uc774\ub294 \uac83\ub9cc\ud07c \uac04\ub2e8\ud558\uc9c0 \uc54a\ub2e4\ub294 \uac83\uc744 \uc774\ud574\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. Linux\uc758 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc740 \uc131\ub2a5 \ud5a5\uc0c1\uc744 \uc704\ud574 \uba54\ubaa8\ub9ac\ub97c \uce90\uc2dc\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uce90\uc2dc\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \uc131\uc7a5\ud558\uba70, \uc5bc\ub9c8\ub098 \ub9ce\uc740 \uba54\ubaa8\ub9ac\uac00 \uce90\uc2dc\uc5d0 \uc88b\uc9c0\ub9cc \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \uc131\ub2a5\uc5d0 \ud070 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uace0 \ub418\ucc3e\uc744 \uc218 \uc788\ub294\uc9c0 \uc54c\uae30 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc885\uc885 \uba54\ubaa8\ub9ac \uc0ac\uc6a9\ub7c9\uc744 \uc798\ubabb \ud574\uc11d\ud558\ub294 \uacb0\uacfc\ub97c \uac00\uc838\uc635\ub2c8\ub2e4. \uba54\ubaa8\ub9ac\ub97c \"\uc555\ucd95\"\ud558\ub294 \ub2a5\ub825\uc744 \uac16\uac8c \ub418\uc5c8\ub358 \uac83\uc740 CGroup v2\uc758 \uc8fc\uc694 \ub3d9\uae30 \uc911 \ud558\ub098\uc600\uc2b5\ub2c8\ub2e4. CGroup V2\uac00 \ud544\uc694\ud588\ub358 \uc774\uc720\uc5d0 \ub300\ud55c \ub354 \ub9ce\uc740 \uc5ed\uc0ac\ub97c \uc54c\uace0 \uc2f6\ub2e4\uba74, LISA21\uc5d0\uc11c Chris Down\uc758 \ubc1c\ud45c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uadf8\ub294 \ucd5c\uc18c \uba54\ubaa8\ub9ac\ub97c \uc62c\ubc14\ub974\uac8c \uc124\uc815\ud560 \uc218 \uc5c6\ub294 \ubb38\uc81c\uac00 CGroup v2\uc640 \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\ub97c \ub9cc\ub4dc\ub294 \ub370\uc5d0 \uc774\ub974\uac8c \ud55c \uc6d0\uc778 \uc911 \ud558\ub098\uc600\ub2e4\uace0 \uc124\uba85\ud569\ub2c8\ub2e4. \ub2e4\ud589\ud788 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \uc774\uc81c requests.memory \uc5d0\uc11c memory.min \uacfc memory.high \ub77c\ub294 \uac1c\ub150\uc744 \uac16\uac8c \ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uce90\uc2dc\ub41c \uba54\ubaa8\ub9ac\ub97c \uc801\uadf9\uc801\uc73c\ub85c \ud574\uc81c\ud558\uc5ec \ub2e4\ub978 \ucee8\ud14c\uc774\ub108\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uba54\ubaa8\ub9ac \uc0c1\ud55c\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ucee4\ub110\uc740 \ud574\ub2f9 \ucee8\ud14c\uc774\ub108\uc758 \uba54\ubaa8\ub9ac\ub97c memory.min \uc73c\ub85c \uc124\uc815\ub41c \uac12\uae4c\uc9c0 \uc801\uadf9\uc801\uc73c\ub85c \ud68c\uc218\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \ub178\ub4dc\uc5d0 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \uac00\ud574\uc9c8 \ub54c \uc720\uc5f0\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \ud575\uc2ec \uc9c8\ubb38\uc740 memory.min \uc744 \uc5b4\ub5a4 \uac12\uc73c\ub85c \uc124\uc815\ud574\uc57c \ud558\ub294\uac00\uc785\ub2c8\ub2e4. \uc5ec\uae30\uc11c \uba54\ubaa8\ub9ac \uc555\ub825 \uc815\uccb4 \uc9c0\ud45c\uac00 \uc791\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc218\uc900\uc5d0\uc11c \uba54\ubaa8\ub9ac \u201c\uc2a4\ub798\uc2f1\u201d\uc744 \uac10\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\uba74 fbtax \uc640 \uac19\uc740 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774 \uba54\ubaa8\ub9ac \uc2a4\ub798\uc2f1\uc744 \ucc3e\uc544 memory.min \uc758 \uc62c\ubc14\ub978 \uac12\uc744 \ud0d0\uc9c0\ud558\uace0, memory.min \uac12\uc744 \ub3d9\uc801\uc73c\ub85c \uc774 \uc124\uc815\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uba54\ubaa8\ub9ac"},{"location":"scalability/docs/node_efficiency.kr/#_7","text":"\uc774 \uc139\uc158\uc744 \uc694\uc57d\ud558\uba74, \ub2e4\uc74c\uacfc \uac19\uc740 \uac1c\ub150\uc744 \ud63c\ub3d9\ud558\uae30 \uc27d\uc2b5\ub2c8\ub2e4: \uc774\uc6a9\ub960(Utilization)\uc640 \ud3ec\ud654\ub3c4(Saturation) Linux \uc131\ub2a5 \uaddc\uce59\uacfc Kubernetes \uc2a4\ucf00\uc904\ub7ec \ub85c\uc9c1 \uc774\ub7ec\ud55c \uac1c\ub150\ub4e4\uc744 \uad6c\ubd84\ud558\ub3c4\ub85d \ub9ce\uc740 \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc131\ub2a5\uacfc \uc2a4\ucf00\uc77c\uc740 \uae4a\uc740 \uc218\uc900\uc5d0\uc11c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c \uc2a4\ucf00\uc77c\ub9c1\uc740 \uc131\ub2a5 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0a4\uba70, \uadf8 \uacb0\uacfc \uc2a4\ucf00\uc77c\ub9c1 \ubb38\uc81c\ub97c \ucd08\ub798\ud569\ub2c8\ub2e4.","title":"\uc815\ub9ac\ud558\uae30"},{"location":"scalability/docs/node_efficiency/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Node and Workload Efficiency \u00b6 Being efficient with our workloads and nodes reduces complexity/cost while increasing performance and scale. There are many factors to consider when planning this efficiency, and it\u2019s easiest to think in terms of trade offs vs. one best practice setting for each feature. Let\u2019s explore these tradeoffs in depth in the following section. Node Selection \u00b6 Using node sizes that are slightly larger (4-12xlarge) increases the available space that we have for running pods due to the fact it reduces the percentage of the node used for \u201coverhead\u201d such as DaemonSets and Reserves for system components. In the diagram below we see the difference between the usable space on a 2xlarge vs. a 8xlarge system with just a moderate number of DaemonSets. Note Since k8s scales horizontally as a general rule, for most applications it does not make sense to take the performance impact of NUMA sizes nodes, thus the recommendation of a range below that node size. Large nodes sizes allow us to have a higher percentage of usable space per node. However, this model can be taken to to the extreme by packing the node with so many pods that it causes errors or saturates the node. Monitoring node saturation is key to successfully using larger node sizes. Node selection is rarely a one-size-fits-all proposition. Often it is best to split workloads with dramatically different churn rates into different node groups. Small batch workloads with a high churn rate would be best served by the the 4xlarge family of instances, while a large scale application such as Kafka which takes 8 vCPU and has a low churn rate would be better served by the 12xlarge family. Tip Another factor to consider with very large node sizes is since CGROUPS do not hide the total number of vCPU from the containerized application. Dynamic runtimes can often spawn an unintentional number of OS threads, creating latency that is difficult to troubleshoot. For these application CPU pinning is recommend. For a deeper exploration of topic please see the following video https://www.youtube.com/watch?v=NqtfDy_KAqg Node Bin-packing \u00b6 Kubernetes vs. Linux Rules \u00b6 There are two sets of rules we need to be mindful of when dealing with workloads on Kubernetes. The rules of the Kubernetes Scheduler, which uses the request value to schedule pods on a node, and then what happens after the pod is scheduled, which is the realm of Linux, not Kubernetes. After Kubernetes scheduler is finished, a new set of rules takes over, the Linux Completely Fair Scheduler (CFS). The key take away is that Linux CFS doesn\u2019t have a the concept of a core. We will discuss why thinking in cores can lead to major problems with optimizing workloads for scale. Thinking in Cores \u00b6 The confusion starts because the Kubernetes scheduler does have the concept of cores. From a Kubernetes scheduler perspective if we looked at a node with 4 NGINX pods, each with a request of one core set, the node would look like this. However, let\u2019s do a thought experiment on how different this looks from a Linux CFS perspective. The most important thing to remember when using the Linux CFS system is: busy containers (CGROUPS) are the only containers that count toward the share system. In this case, only the first container is busy so it is allowed to use all 4 cores on the node. Why does this matter? Let\u2019s say we ran our performance testing in a development cluster where an NGINX application was the only busy container on that node. When we move the app to production, the following would happen: the NGINX application wants 4 vCPU of resources however, because all the other pods on the node are busy, our app\u2019s performance is constrained. This situation would lead us to add more containers unnecessarily because we were not allowing our applications scale to their \u201csweet spot\u201c. Let's explore this important concept of a \u201dsweet spot\u201c in a bit more detail. Application right sizing \u00b6 Each application has a certain point where it can not take anymore traffic. Going above this point can increase processing times and even drop traffic when pushed well beyond this point. This is known as the application\u2019s saturation point. To avoid scaling issues, we should attempt to scale the application before it reaches its saturation point. Let\u2019s call this point the sweet spot. We need to test each of our applications to understand its sweet spot. There will be no universal guidance here as each application is different. During this testing we are trying to understand the best metric that shows our applications saturation point. Oftentimes, utilization metrics are used to indicate an application is saturated but this can quickly lead to scaling issues (We will explore this topic in detail in a later section). Once we have this \u201csweet spot\u201c we can use it to efficiently scale our workloads. Conversely, what would happen if we scale up well before the sweet spot and created unnecessary pods? Let\u2019s explore that in the next section. Pod sprawl \u00b6 To see how creating unnecessary pods could quickly get out of hand, let's look at the first example on the left. The correct vertical scale of this container takes up about two vCPUs worth of utilization when handling 100 requests a second. However, If we were to under-provision the requests value by setting requests to half a core, we would now need 4 pods for each one pods we actually needed. Exacerbating this problem further, if our HPA was set at the default of 50% CPU, those pods would scale half empty, creating an 8:1 ratio. Scaling this problem up we can quickly see how this can get out of hand. A deployment of ten pods whose sweet spot was set incorrectly could quickly spiral to 80 pods and the additional infrastructure needed to run them. Now that we understand the impact of not allowing applications to operate in their sweet spot, let\u2019s return to the node level and ask why this difference between the Kubernetes scheduler and Linux CFS so important? When scaling up and down with HPA, we can have a scenario where we have a lot of space to allocate more pods. This would be a bad decision because the node depicted on the left is already at 100% CPU utilization. In a unrealistic but theoretically possible scenario, we could have the other extreme where our node is completely full, yet our CPU utilization is zero. Setting Requests \u00b6 It would tempting to set the request at the \u201csweet spot\u201d value for that application, however this would cause inefficiencies as pictured in the diagram below. Here we have set the request value to 2 vCPU, however the average utilization of these pods runs only 1 CPU most of the time. This setting would cause us to waste 50% of our CPU cycles, which would be unacceptable. This bring us to the complex answer to problem. Container utilization cannot be thought of in a vacuum; one must take into account the other applications running on the node. In the following example containers that are bursty in nature are mixed in with two low CPU utilization containers that might be memory constrained. In this way we allow the containers to hit their sweet spot without taxing the node. The important concept to take away from all this is that using Kubernetes scheduler concept of cores to understand Linux container performance can lead to poor decision making as they are not related. Tip Linux CFS has its strong points. This is especially true for I/O based workloads. However, if your application uses full cores without sidecars, and has no I/O requirements, CPU pinning can remove a great deal of complexity from this process and is encouraged with those caveats. Utilization vs. Saturation \u00b6 A common mistake in application scaling is only using CPU utilization for your scaling metric. In complex applications this is almost always a poor indicator that an application is actually saturated with requests. In the example on the left, we see all of our requests are actually hitting the web server, so CPU utilization is tracking well with saturation. In real world applications, it\u2019s likely that some of those requests will be getting serviced by a database layer or an authentication layer, etc. In this more common case, notice CPU is not tracking with saturation as the request is being serviced by other entities. In this case CPU is a very poor indicator for saturation. Using the wrong metric in application performance is the number one reason for unnecessary and unpredictable scaling in Kubernetes. Great care must be taken in picking the correct saturation metric for the type of application that you're using. It is important to note that there is not a one size fits all recommendation that can be given. Depending on the language used and the type of application in question, there is a diverse set of metrics for saturation. We might think this problem is only with CPU Utilization, however other common metrics such as request per second can also fall into the exact same problem as discussed above. Notice the request can also go to DB layers, auth layers, not being directly serviced by our web server, thus it\u2019s a poor metric for true saturation of the web server itself. Unfortunately there are no easy answers when it comes to picking the right saturation metric. Here are some guidelines to take into consideration: Understand your language runtime - languages with multiple OS threads will react differently than single threaded applications, thus impacting the node differently. Understand the correct vertical scale - how much buffer do you want in your applications vertical scale before scaling a new pod? What metrics truly reflect the saturation of your application - The saturation metric for a Kafka Producer would be quite different than a complex web application. How do all the other applications on the node effect each other - Application performance is not done in a vacuum the other workloads on the node have a major impact. To close out this section, it would be easy to dismiss the above as overly complex and unnecessary. It can often be the case that we are experiencing an issue but we are unaware of the true nature of the problem because we are looking at the wrong metrics. In the next section we will look at how that could happen. Node Saturation \u00b6 Now that we have explored application saturation, let\u2019s look at this same concept from a node point of view. Let\u2019s take two CPUs that are 100% utilized to see the difference between utilization vs. saturation. The vCPU on the left is 100% utilized, however no other tasks are waiting to run on this vCPU, so in a purely theoretical sense, this is quite efficient. Meanwhile, we have 20 single threaded applications waiting to get processed by a vCPU in the second example. All 20 applications now will experience some type of latency while they're waiting their turn to be processed by the vCPU. In other words, the vCPU on the right is saturated. Not only would we not see this problem if we where just looking at utilization, but we might attribute this latency to something unrelated such as networking which would lead us down the wrong path. It is important to view saturation metrics, not just utilization metrics when increasing the total number of pods running on a node at any given time as we can easily miss the fact we have over-saturated a node. For this task we can use pressure stall information metrics as seen in the below chart. PromQL - Stalled I/O topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Note For more on Pressure stall metrics, see https://facebookmicrosites.github.io/psi/docs/overview* With these metrics we can tell if threads are waiting on CPU, or even if every thread on the box is stalled waiting on resource like memory or I/O. For example, we could see what percentage every thread on the instance was stalled waiting on I/O over the period of 1 min. topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Using this metric, we can see in the above chart every thread on the box was stalled 45% of the time waiting on I/O at the high water mark, meaning we were throwing away all of those CPU cycles in that minute. Understanding that this is happening can help us reclaim a significant amount of vCPU time, thus making scaling more efficient. HPA V2 \u00b6 It is recommended to use the autoscaling/v2 version of the HPA API. The older versions of the HPA API could get stuck scaling in certain edge cases. It was also limited to pods only doubling during each scaling step, which created issues for small deployments that needed to scale rapidly. Autoscaling/v2 allows us more flexibility to include mutliple criteria to scale on and allows us a great deal of flexiblity when using custom and external metrics (non K8s metrics). As an example, we can scaling on the highest of three values (see below). We scale if the average utilization of all the pods are over 50%, if custom metrics the packets per second of the ingress exceed an average of 1,000, or ingress object exceeds 10K request per second. Note This is just to show the flexibility of the auto-scaling API, we recommend against overly complex rules that can be difficult to troubleshoot in production. apiVersion : autoscaling/v2 kind : HorizontalPodAutoscaler metadata : name : php-apache spec : scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : php-apache minReplicas : 1 maxReplicas : 10 metrics : - type : Resource resource : name : cpu target : type : Utilization averageUtilization : 50 - type : Pods pods : metric : name : packets-per-second target : type : AverageValue averageValue : 1k - type : Object object : metric : name : requests-per-second describedObject : apiVersion : networking.k8s.io/v1 kind : Ingress name : main-route target : type : Value value : 10k However, we learned the danger of using such metrics for complex web applications. In this case we would be better served by using custom or external metric that accurately reflects the saturation of our application vs. the utilization. HPAv2 allows for this by having the ability to scale according to any metric, however we still need to find and export that metric to Kubernetes for use. For example, we can look at the active thread queue count in Apache. This often creates a \u201csmoother\u201d scaling profile (more on that term soon). If a thread is active, it doesn\u2019t matter if that thread is waiting on a database layer or servicing a request locally, if all of the applications threads are being used, it\u2019s a great indication that application is saturated. We can use this thread exhaustion as a signal to create a new pod with a fully available thread pool. This also gives us control over how big a buffer we want in the application to absorb during times of heavy traffic. For example, if we had a total thread pool of 10, scaling at 4 threads used vs. 8 threads used would have a major impact on the buffer we have available when scaling the application. A setting of 4 would make sense for an application that needs to rapidly scale under heavy load, where a setting of 8 would be more efficient with our resources if we had plenty of time to scale due to the number of requests increasing slowly vs. sharply over time. What do we mean by the term \u201csmooth\u201d when it comes to scaling? Notice the below chart where we are using CPU as a metric. The pods in this deployment are spiking in a short period for from 50 pods, all the way up to 250 pods only to immediately scale down again. This is highly inefficient scaling is the leading cause on churn on clusters. Notice how after we change to a metric that reflects the correct sweet spot of our application (mid-part of chart), we are able to scale smoothly. Our scaling is now efficient, and our pods are allowed to fully scale with the headroom we provided by adjusting requests settings. Now a smaller group of pods are doing the work the hundreds of pods were doing before. Real world data shows that this is the number one factor in scalability of Kubernetes clusters. The key takeaway is CPU utilization is only one dimension of both application and node performance. Using CPU utilization as a sole health indicator for our nodes and applications creates problems in scaling, performance and cost which are all tightly linked concepts. The more performant the application and nodes are, the less that you need to scale, which in turn lowers your costs. Finding and using the correct saturation metrics for scaling your particular application also allows you to monitor and alarm on the true bottlenecks for that application. If this critical step is skipped, reports of performance problems will be difficult, if not impossible, to understand. Setting CPU Limits \u00b6 To round out this section on misunderstood topics, we will cover CPU limits. In short, limits are metadata associated with the container that has a counter that resets every 100ms. This helps Linux keep track of how many CPU resources are used node-wide by a specific container in a 100ms period of time. A common error with setting limits is assuming that the application is single threaded and only running on it\u2019s \u201cassigned\u201c vCPU. In the above section we learned that CFS doesn\u2019t assign cores, and in reality a container running large thread pools will schedule on all available vCPU\u2019s on the box. If 64 OS threads are running across 64 available cores (from a Linux node perspective) we will make the total bill of used CPU time in a 100ms period quite large after the time running on all of those 64 cores are added up. Since this might only occur during a garbage collection process it can be quite easy to miss something like this. This is why it is necessary to use metrics to ensure we have the correct usage over time before attempting to set a limit. Fortunately, we have a way to see exactly how much vCPU is being used by all the threads in a application. We will use the metric container_cpu_usage_seconds_total for this purpose. Since throttling logic happens every 100ms and this metric is a per second metric, we will PromQL to match this 100ms period. If you would like to dive deep into this PromQL statement work please see the following blog . PromQL query: topk(3, max by (pod, container)(rate(container_cpu_usage_seconds_total{image!=\"\", instance=\"$instance\"}[$__rate_interval]))) / 10 Once we feel we have the right value, we can put the limit in production. It then becomes necessary to see if our application is being throttled due to something unexpected. We can do this by looking at container_cpu_throttled_seconds_total topk(3, max by (pod, container)(rate(container_cpu_cfs_throttled_seconds_total{image!=``\"\"``, instance=``\"$instance\"``}[$__rate_interval]))) / 10 Memory \u00b6 The memory allocation is another example where it is easy to confuse Kubernetes scheduling behavior for Linux CGroup behavior. This is a more nuanced topic as there have been major changes in the way that CGroup v2 handles memory in Linux and Kubernetes has changed its syntax to reflect this; read this blog for further details. Unlike CPU requests, memory requests go unused after the scheduling process completes. This is because we can not compress memory in CGroup v1 the same way we can with CPU. That leaves us with just memory limits, which are designed to act as a fail safe for memory leaks by terminating the pod completely. This is an all or nothing style proposition, however we have now been given new ways to address this problem. First, it is important to understand that setting the right amount of memory for containers is not a straightforward as it appears. The file system in Linux will use memory as a cache to improve performance. This cache will grow over time, and it can be hard to know how much memory is just nice to have for the cache but can be reclaimed without a significant impact to application performance. This often results in misinterpreting memory usage. Having the ability to \u201ccompress\u201d memory was one of the primary drivers behind CGroup v2. For more history on why CGroup V2 was necessary, please see Chris Down\u2019s presentation at LISA21 where he covers why being unable to set the minimum memory correctly was one of the reasons that drove him to create CGroup v2 and pressure stall metrics. Fortunately, Kubernetes now has the concept of memory.min and memory.high under requests.memory . This gives us the option of aggressive releasing this cached memory for other containers to use. Once the container hits the memory high limit, the kernel can aggressively reclaim that container\u2019s memory up to the value set at memory.min . Thus giving us more flexibility when a node comes under memory pressure. The key question becomes, what value to set memory.min to? This is where memory pressure stall metrics come into play. We can use these metrics to detect memory \u201cthrashing\u201d at a container level. Then we can use controllers such as fbtax to detect the correct values for memory.min by looking for this memory thrashing, and dynamically set the memory.min value to this setting. Summary \u00b6 To sum up the section, it is easy to conflate the following concepts: Utilization and Saturation Linux performance rules with Kubernetes Scheduler logic Great care must be taken to keep these concepts separated. Performance and scale are linked on a deep level. Unnecessary scaling creates performance problems, which in turn creates scaling problems.","title":"Node efficiency and scaling ({'name': 'English', 'build': True})"},{"location":"scalability/docs/node_efficiency/#node-and-workload-efficiency","text":"Being efficient with our workloads and nodes reduces complexity/cost while increasing performance and scale. There are many factors to consider when planning this efficiency, and it\u2019s easiest to think in terms of trade offs vs. one best practice setting for each feature. Let\u2019s explore these tradeoffs in depth in the following section.","title":"Node and Workload Efficiency"},{"location":"scalability/docs/node_efficiency/#node-selection","text":"Using node sizes that are slightly larger (4-12xlarge) increases the available space that we have for running pods due to the fact it reduces the percentage of the node used for \u201coverhead\u201d such as DaemonSets and Reserves for system components. In the diagram below we see the difference between the usable space on a 2xlarge vs. a 8xlarge system with just a moderate number of DaemonSets. Note Since k8s scales horizontally as a general rule, for most applications it does not make sense to take the performance impact of NUMA sizes nodes, thus the recommendation of a range below that node size. Large nodes sizes allow us to have a higher percentage of usable space per node. However, this model can be taken to to the extreme by packing the node with so many pods that it causes errors or saturates the node. Monitoring node saturation is key to successfully using larger node sizes. Node selection is rarely a one-size-fits-all proposition. Often it is best to split workloads with dramatically different churn rates into different node groups. Small batch workloads with a high churn rate would be best served by the the 4xlarge family of instances, while a large scale application such as Kafka which takes 8 vCPU and has a low churn rate would be better served by the 12xlarge family. Tip Another factor to consider with very large node sizes is since CGROUPS do not hide the total number of vCPU from the containerized application. Dynamic runtimes can often spawn an unintentional number of OS threads, creating latency that is difficult to troubleshoot. For these application CPU pinning is recommend. For a deeper exploration of topic please see the following video https://www.youtube.com/watch?v=NqtfDy_KAqg","title":"Node Selection"},{"location":"scalability/docs/node_efficiency/#node-bin-packing","text":"","title":"Node Bin-packing"},{"location":"scalability/docs/node_efficiency/#kubernetes-vs-linux-rules","text":"There are two sets of rules we need to be mindful of when dealing with workloads on Kubernetes. The rules of the Kubernetes Scheduler, which uses the request value to schedule pods on a node, and then what happens after the pod is scheduled, which is the realm of Linux, not Kubernetes. After Kubernetes scheduler is finished, a new set of rules takes over, the Linux Completely Fair Scheduler (CFS). The key take away is that Linux CFS doesn\u2019t have a the concept of a core. We will discuss why thinking in cores can lead to major problems with optimizing workloads for scale.","title":"Kubernetes vs. Linux Rules"},{"location":"scalability/docs/node_efficiency/#thinking-in-cores","text":"The confusion starts because the Kubernetes scheduler does have the concept of cores. From a Kubernetes scheduler perspective if we looked at a node with 4 NGINX pods, each with a request of one core set, the node would look like this. However, let\u2019s do a thought experiment on how different this looks from a Linux CFS perspective. The most important thing to remember when using the Linux CFS system is: busy containers (CGROUPS) are the only containers that count toward the share system. In this case, only the first container is busy so it is allowed to use all 4 cores on the node. Why does this matter? Let\u2019s say we ran our performance testing in a development cluster where an NGINX application was the only busy container on that node. When we move the app to production, the following would happen: the NGINX application wants 4 vCPU of resources however, because all the other pods on the node are busy, our app\u2019s performance is constrained. This situation would lead us to add more containers unnecessarily because we were not allowing our applications scale to their \u201csweet spot\u201c. Let's explore this important concept of a \u201dsweet spot\u201c in a bit more detail.","title":"Thinking in Cores"},{"location":"scalability/docs/node_efficiency/#application-right-sizing","text":"Each application has a certain point where it can not take anymore traffic. Going above this point can increase processing times and even drop traffic when pushed well beyond this point. This is known as the application\u2019s saturation point. To avoid scaling issues, we should attempt to scale the application before it reaches its saturation point. Let\u2019s call this point the sweet spot. We need to test each of our applications to understand its sweet spot. There will be no universal guidance here as each application is different. During this testing we are trying to understand the best metric that shows our applications saturation point. Oftentimes, utilization metrics are used to indicate an application is saturated but this can quickly lead to scaling issues (We will explore this topic in detail in a later section). Once we have this \u201csweet spot\u201c we can use it to efficiently scale our workloads. Conversely, what would happen if we scale up well before the sweet spot and created unnecessary pods? Let\u2019s explore that in the next section.","title":"Application right sizing"},{"location":"scalability/docs/node_efficiency/#pod-sprawl","text":"To see how creating unnecessary pods could quickly get out of hand, let's look at the first example on the left. The correct vertical scale of this container takes up about two vCPUs worth of utilization when handling 100 requests a second. However, If we were to under-provision the requests value by setting requests to half a core, we would now need 4 pods for each one pods we actually needed. Exacerbating this problem further, if our HPA was set at the default of 50% CPU, those pods would scale half empty, creating an 8:1 ratio. Scaling this problem up we can quickly see how this can get out of hand. A deployment of ten pods whose sweet spot was set incorrectly could quickly spiral to 80 pods and the additional infrastructure needed to run them. Now that we understand the impact of not allowing applications to operate in their sweet spot, let\u2019s return to the node level and ask why this difference between the Kubernetes scheduler and Linux CFS so important? When scaling up and down with HPA, we can have a scenario where we have a lot of space to allocate more pods. This would be a bad decision because the node depicted on the left is already at 100% CPU utilization. In a unrealistic but theoretically possible scenario, we could have the other extreme where our node is completely full, yet our CPU utilization is zero.","title":"Pod sprawl"},{"location":"scalability/docs/node_efficiency/#setting-requests","text":"It would tempting to set the request at the \u201csweet spot\u201d value for that application, however this would cause inefficiencies as pictured in the diagram below. Here we have set the request value to 2 vCPU, however the average utilization of these pods runs only 1 CPU most of the time. This setting would cause us to waste 50% of our CPU cycles, which would be unacceptable. This bring us to the complex answer to problem. Container utilization cannot be thought of in a vacuum; one must take into account the other applications running on the node. In the following example containers that are bursty in nature are mixed in with two low CPU utilization containers that might be memory constrained. In this way we allow the containers to hit their sweet spot without taxing the node. The important concept to take away from all this is that using Kubernetes scheduler concept of cores to understand Linux container performance can lead to poor decision making as they are not related. Tip Linux CFS has its strong points. This is especially true for I/O based workloads. However, if your application uses full cores without sidecars, and has no I/O requirements, CPU pinning can remove a great deal of complexity from this process and is encouraged with those caveats.","title":"Setting Requests"},{"location":"scalability/docs/node_efficiency/#utilization-vs-saturation","text":"A common mistake in application scaling is only using CPU utilization for your scaling metric. In complex applications this is almost always a poor indicator that an application is actually saturated with requests. In the example on the left, we see all of our requests are actually hitting the web server, so CPU utilization is tracking well with saturation. In real world applications, it\u2019s likely that some of those requests will be getting serviced by a database layer or an authentication layer, etc. In this more common case, notice CPU is not tracking with saturation as the request is being serviced by other entities. In this case CPU is a very poor indicator for saturation. Using the wrong metric in application performance is the number one reason for unnecessary and unpredictable scaling in Kubernetes. Great care must be taken in picking the correct saturation metric for the type of application that you're using. It is important to note that there is not a one size fits all recommendation that can be given. Depending on the language used and the type of application in question, there is a diverse set of metrics for saturation. We might think this problem is only with CPU Utilization, however other common metrics such as request per second can also fall into the exact same problem as discussed above. Notice the request can also go to DB layers, auth layers, not being directly serviced by our web server, thus it\u2019s a poor metric for true saturation of the web server itself. Unfortunately there are no easy answers when it comes to picking the right saturation metric. Here are some guidelines to take into consideration: Understand your language runtime - languages with multiple OS threads will react differently than single threaded applications, thus impacting the node differently. Understand the correct vertical scale - how much buffer do you want in your applications vertical scale before scaling a new pod? What metrics truly reflect the saturation of your application - The saturation metric for a Kafka Producer would be quite different than a complex web application. How do all the other applications on the node effect each other - Application performance is not done in a vacuum the other workloads on the node have a major impact. To close out this section, it would be easy to dismiss the above as overly complex and unnecessary. It can often be the case that we are experiencing an issue but we are unaware of the true nature of the problem because we are looking at the wrong metrics. In the next section we will look at how that could happen.","title":"Utilization vs. Saturation"},{"location":"scalability/docs/node_efficiency/#node-saturation","text":"Now that we have explored application saturation, let\u2019s look at this same concept from a node point of view. Let\u2019s take two CPUs that are 100% utilized to see the difference between utilization vs. saturation. The vCPU on the left is 100% utilized, however no other tasks are waiting to run on this vCPU, so in a purely theoretical sense, this is quite efficient. Meanwhile, we have 20 single threaded applications waiting to get processed by a vCPU in the second example. All 20 applications now will experience some type of latency while they're waiting their turn to be processed by the vCPU. In other words, the vCPU on the right is saturated. Not only would we not see this problem if we where just looking at utilization, but we might attribute this latency to something unrelated such as networking which would lead us down the wrong path. It is important to view saturation metrics, not just utilization metrics when increasing the total number of pods running on a node at any given time as we can easily miss the fact we have over-saturated a node. For this task we can use pressure stall information metrics as seen in the below chart. PromQL - Stalled I/O topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Note For more on Pressure stall metrics, see https://facebookmicrosites.github.io/psi/docs/overview* With these metrics we can tell if threads are waiting on CPU, or even if every thread on the box is stalled waiting on resource like memory or I/O. For example, we could see what percentage every thread on the instance was stalled waiting on I/O over the period of 1 min. topk(3, ((irate(node_pressure_io_stalled_seconds_total[1m])) * 100)) Using this metric, we can see in the above chart every thread on the box was stalled 45% of the time waiting on I/O at the high water mark, meaning we were throwing away all of those CPU cycles in that minute. Understanding that this is happening can help us reclaim a significant amount of vCPU time, thus making scaling more efficient.","title":"Node Saturation"},{"location":"scalability/docs/node_efficiency/#hpa-v2","text":"It is recommended to use the autoscaling/v2 version of the HPA API. The older versions of the HPA API could get stuck scaling in certain edge cases. It was also limited to pods only doubling during each scaling step, which created issues for small deployments that needed to scale rapidly. Autoscaling/v2 allows us more flexibility to include mutliple criteria to scale on and allows us a great deal of flexiblity when using custom and external metrics (non K8s metrics). As an example, we can scaling on the highest of three values (see below). We scale if the average utilization of all the pods are over 50%, if custom metrics the packets per second of the ingress exceed an average of 1,000, or ingress object exceeds 10K request per second. Note This is just to show the flexibility of the auto-scaling API, we recommend against overly complex rules that can be difficult to troubleshoot in production. apiVersion : autoscaling/v2 kind : HorizontalPodAutoscaler metadata : name : php-apache spec : scaleTargetRef : apiVersion : apps/v1 kind : Deployment name : php-apache minReplicas : 1 maxReplicas : 10 metrics : - type : Resource resource : name : cpu target : type : Utilization averageUtilization : 50 - type : Pods pods : metric : name : packets-per-second target : type : AverageValue averageValue : 1k - type : Object object : metric : name : requests-per-second describedObject : apiVersion : networking.k8s.io/v1 kind : Ingress name : main-route target : type : Value value : 10k However, we learned the danger of using such metrics for complex web applications. In this case we would be better served by using custom or external metric that accurately reflects the saturation of our application vs. the utilization. HPAv2 allows for this by having the ability to scale according to any metric, however we still need to find and export that metric to Kubernetes for use. For example, we can look at the active thread queue count in Apache. This often creates a \u201csmoother\u201d scaling profile (more on that term soon). If a thread is active, it doesn\u2019t matter if that thread is waiting on a database layer or servicing a request locally, if all of the applications threads are being used, it\u2019s a great indication that application is saturated. We can use this thread exhaustion as a signal to create a new pod with a fully available thread pool. This also gives us control over how big a buffer we want in the application to absorb during times of heavy traffic. For example, if we had a total thread pool of 10, scaling at 4 threads used vs. 8 threads used would have a major impact on the buffer we have available when scaling the application. A setting of 4 would make sense for an application that needs to rapidly scale under heavy load, where a setting of 8 would be more efficient with our resources if we had plenty of time to scale due to the number of requests increasing slowly vs. sharply over time. What do we mean by the term \u201csmooth\u201d when it comes to scaling? Notice the below chart where we are using CPU as a metric. The pods in this deployment are spiking in a short period for from 50 pods, all the way up to 250 pods only to immediately scale down again. This is highly inefficient scaling is the leading cause on churn on clusters. Notice how after we change to a metric that reflects the correct sweet spot of our application (mid-part of chart), we are able to scale smoothly. Our scaling is now efficient, and our pods are allowed to fully scale with the headroom we provided by adjusting requests settings. Now a smaller group of pods are doing the work the hundreds of pods were doing before. Real world data shows that this is the number one factor in scalability of Kubernetes clusters. The key takeaway is CPU utilization is only one dimension of both application and node performance. Using CPU utilization as a sole health indicator for our nodes and applications creates problems in scaling, performance and cost which are all tightly linked concepts. The more performant the application and nodes are, the less that you need to scale, which in turn lowers your costs. Finding and using the correct saturation metrics for scaling your particular application also allows you to monitor and alarm on the true bottlenecks for that application. If this critical step is skipped, reports of performance problems will be difficult, if not impossible, to understand.","title":"HPA V2"},{"location":"scalability/docs/node_efficiency/#setting-cpu-limits","text":"To round out this section on misunderstood topics, we will cover CPU limits. In short, limits are metadata associated with the container that has a counter that resets every 100ms. This helps Linux keep track of how many CPU resources are used node-wide by a specific container in a 100ms period of time. A common error with setting limits is assuming that the application is single threaded and only running on it\u2019s \u201cassigned\u201c vCPU. In the above section we learned that CFS doesn\u2019t assign cores, and in reality a container running large thread pools will schedule on all available vCPU\u2019s on the box. If 64 OS threads are running across 64 available cores (from a Linux node perspective) we will make the total bill of used CPU time in a 100ms period quite large after the time running on all of those 64 cores are added up. Since this might only occur during a garbage collection process it can be quite easy to miss something like this. This is why it is necessary to use metrics to ensure we have the correct usage over time before attempting to set a limit. Fortunately, we have a way to see exactly how much vCPU is being used by all the threads in a application. We will use the metric container_cpu_usage_seconds_total for this purpose. Since throttling logic happens every 100ms and this metric is a per second metric, we will PromQL to match this 100ms period. If you would like to dive deep into this PromQL statement work please see the following blog . PromQL query: topk(3, max by (pod, container)(rate(container_cpu_usage_seconds_total{image!=\"\", instance=\"$instance\"}[$__rate_interval]))) / 10 Once we feel we have the right value, we can put the limit in production. It then becomes necessary to see if our application is being throttled due to something unexpected. We can do this by looking at container_cpu_throttled_seconds_total topk(3, max by (pod, container)(rate(container_cpu_cfs_throttled_seconds_total{image!=``\"\"``, instance=``\"$instance\"``}[$__rate_interval]))) / 10","title":"Setting CPU Limits"},{"location":"scalability/docs/node_efficiency/#memory","text":"The memory allocation is another example where it is easy to confuse Kubernetes scheduling behavior for Linux CGroup behavior. This is a more nuanced topic as there have been major changes in the way that CGroup v2 handles memory in Linux and Kubernetes has changed its syntax to reflect this; read this blog for further details. Unlike CPU requests, memory requests go unused after the scheduling process completes. This is because we can not compress memory in CGroup v1 the same way we can with CPU. That leaves us with just memory limits, which are designed to act as a fail safe for memory leaks by terminating the pod completely. This is an all or nothing style proposition, however we have now been given new ways to address this problem. First, it is important to understand that setting the right amount of memory for containers is not a straightforward as it appears. The file system in Linux will use memory as a cache to improve performance. This cache will grow over time, and it can be hard to know how much memory is just nice to have for the cache but can be reclaimed without a significant impact to application performance. This often results in misinterpreting memory usage. Having the ability to \u201ccompress\u201d memory was one of the primary drivers behind CGroup v2. For more history on why CGroup V2 was necessary, please see Chris Down\u2019s presentation at LISA21 where he covers why being unable to set the minimum memory correctly was one of the reasons that drove him to create CGroup v2 and pressure stall metrics. Fortunately, Kubernetes now has the concept of memory.min and memory.high under requests.memory . This gives us the option of aggressive releasing this cached memory for other containers to use. Once the container hits the memory high limit, the kernel can aggressively reclaim that container\u2019s memory up to the value set at memory.min . Thus giving us more flexibility when a node comes under memory pressure. The key question becomes, what value to set memory.min to? This is where memory pressure stall metrics come into play. We can use these metrics to detect memory \u201cthrashing\u201d at a container level. Then we can use controllers such as fbtax to detect the correct values for memory.min by looking for this memory thrashing, and dynamically set the memory.min value to this setting.","title":"Memory"},{"location":"scalability/docs/node_efficiency/#summary","text":"To sum up the section, it is easy to conflate the following concepts: Utilization and Saturation Linux performance rules with Kubernetes Scheduler logic Great care must be taken to keep these concepts separated. Performance and scale are linked on a deep level. Unnecessary scaling creates performance problems, which in turn creates scaling problems.","title":"Summary"},{"location":"scalability/docs/scaling_theory.kr/","text":"{'name': 'English', 'build': True} Kubernetes \uc2a4\ucf00\uc77c\ub9c1 \uc774\ub860 \u00b6 \ub178\ub4dc vs. \uc774\ud0c8\ub960 \u00b6 \ud754\ud788 Kubernetes\uc758 \ud655\uc7a5\uc131\uc744 \ub17c\uc758\ud560 \ub54c \uc6b0\ub9ac\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc788\ub294 \ub178\ub4dc \uc218\ub85c \uc774\uc57c\uae30\ud569\ub2c8\ub2e4. \ud765\ubbf8\ub86d\uac8c\ub3c4, \uc774\uac83\uc740 \ud655\uc7a5\uc131\uc744 \uc774\ud574\ud558\uae30 \uc704\ud55c \uac00\uc7a5 \uc720\uc6a9\ud55c \uc9c0\ud45c\ub294 \uc544\ub2d9\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9ce\uc9c0\ub9cc \uace0\uc815\ub41c \uc218\uc758 \ud3ec\ub4dc\uac00 \uc788\ub294 5,000\ub178\ub4dc \ud074\ub7ec\uc2a4\ud130\ub294 \ucd08\uae30 \uc124\uc815 \uc774\ud6c4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ud070 \ubd80\ub2f4\uc744 \uc8fc\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc 1,000\uac1c\uc758 \ub178\ub4dc \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec 1\ubd84 \uc774\ub0b4\uc5d0 \uc218\uba85\uc774 \uc9e7\uc740 \uc791\uc5c5 10,000\uac1c\ub97c \ub9cc\ub4e4\ub824\uace0 \uc2dc\ub3c4\ud55c\ub2e4\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc9c0\uc18d\uc801\uc778 \uc555\ubc15\uc744 \uac00\ud560 \uac83\uc785\ub2c8\ub2e4. \ub2e8\uc21c\ud788 \ub178\ub4dc \uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc77c\ub9c1\uc744 \uc774\ud574\ud558\ub294 \uac83\uc740 \uc624\ud574\uc758 \uc18c\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uae30\uac04 \ub0b4\uc5d0 \ubc1c\uc0dd\ud558\ub294 \ubcc0\ud654\uc728\uc758 \uad00\uc810\uc5d0\uc11c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4(Prometheus \ucffc\ub9ac\uac00 \uc77c\ubc18\uc801\uc73c\ub85c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uac04\uaca9\uc774\ubbc0\ub85c \uc5ec\uae30\uc11c\ub294 5\ubd84 \uac04\uaca9\uc744 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \ubcc0\ud654\uc728\uc758 \uad00\uc810\uc5d0\uc11c \ubb38\uc81c\ub97c \uad6c\uc131\ud558\uba74 \uc6d0\ud558\ub294 \uaddc\ubaa8\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc704\ud574 \ubb34\uc5c7\uc744 \uc870\uc815\ud574\uc57c \ud560\uc9c0 \ub354 \uc798 \uc54c \uc218 \uc788\ub294 \uc774\uc720\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ucd08\ub2f9 \ucffc\ub9ac \uc218 \uc0dd\uac01\ud558\uae30 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uccb4\uc778\uc758 \ub2e4\uc74c \ub9c1\ud06c\uc5d0 \uacfc\ubd80\ud558\uac00 \uac78\ub9ac\uc9c0 \uc54a\ub3c4\ub85d Kubelet, Scheduler, Kube Controller Manager, API \uc11c\ubc84 \ub4f1 \uac01 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud574 \uc5ec\ub7ec \uac00\uc9c0 \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc744 \uac16\ucd94\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Kubelet\uc5d0\ub294 API \uc11c\ubc84\uc5d0 \ub300\ud55c \ud638\ucd9c\uc744 \uc77c\uc815 \uc18d\ub3c4\ub85c \uc81c\ud55c\ud558\ub294 \ud50c\ub798\uadf8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc740 \ud56d\uc0c1 \uadf8\ub7f0 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c \ucd08\ub2f9 \ud5c8\uc6a9 \ucffc\ub9ac \ub610\ub294 QPS\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c QPS \uc124\uc815\uc744 \ubcc0\uacbd\ud560 \ub54c\ub294 \uac01\ubcc4\ud55c \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4. Kubelet\uc758 \ucd08\ub2f9 \ucffc\ub9ac\uc640 \uac19\uc740 \ud558\ub098\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc81c\uac70\ud558\uba74 \ub2e4\ub978 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \uad6c\uc131 \uc694\uc18c\uc5d0\ub3c4 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uc2dc\uc2a4\ud15c\uc774 \uc77c\uc815 \uc18d\ub3c4 \uc774\uc0c1\uc73c\ub85c \uacfc\ubd80\ud558\ub97c \uacaa\uc744 \uc218 \uc788\uace0 \ub610 \uadf8\ub807\uac8c \ub420 \uac83\uc774\ubbc0\ub85c, \uc11c\ube44\uc2a4 \uccb4\uc778\uc758 \uac01 \ubd80\ubd84\uc744 \uc774\ud574\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc774 Kubernetes\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ud655\uc7a5\ud558\ub294 \ub370 \uc911\uc694\ud569\ub2c8\ub2e4. Note API \uc11c\ubc84\ub294 API Priority \ubc0f Fairness \ub3c4\uc785\uc73c\ub85c \ub354 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774\uc5d0 \ub300\ud574 \ubcc4\ub3c4\ub85c \ub17c\uc758\ud560 \uac83\uc785\ub2c8\ub2e4. Note \uc8fc\uc758: \uc77c\ubd80 \uc9c0\ud45c\ub294 \uc801\ud569\ud55c \uac83\ucc98\ub7fc \ubcf4\uc774\uc9c0\ub9cc \uc0ac\uc2e4 \ub2e4\ub978 \uac83\uc744 \uce21\uc815\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 kubelet_http_inflight_requests \ub294 Kubelet\uc758 \uc9c0\ud45c \uc11c\ubc84\uc5d0\ub9cc \uad00\ub828\uc774 \uc788\uc73c\uba70, Kubelet\uc5d0\uc11c API \uc11c\ubc84 \uc694\uccad\uc758 \uc218\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 Kubelet\uc758 QPS \ud50c\ub798\uadf8\ub97c \uc798\ubabb \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 Kubelet\uc5d0 \ub300\ud55c \uac10\uc0ac \ub85c\uadf8 \ucffc\ub9ac\uac00 \uc9c0\ud45c\ub97c \ud655\uc778\ud558\ub294 \ub354 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd84\uc0b0 \ucef4\ud3ec\ub10c\ud2b8 \uc2a4\ucf00\uc77c\ub9c1 \u00b6 EKS\ub294 \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\uc774\ubbc0\ub85c Kubernetes \uad6c\uc131 \uc694\uc18c\ub97c \ub450 \ubc94\uc8fc\ub85c \ub098\ub204\uaca0\uc2b5\ub2c8\ub2e4. \ud558\ub098\ub294 etcd, Kube Controller Manager \ubc0f Scheduler(\ub2e4\uc774\uc5b4\uadf8\ub7a8 \uc67c\ucabd \ubd80\ubd84)\ub97c \ud3ec\ud568\ud558\ub294 AWS \uad00\ub9ac\ud615 \uad6c\uc131 \uc694\uc18c\uc640 Kubelet, \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \uac19\uc740 \uace0\uac1d\uc774 \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c, \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84\uc640 \uac19\uc774 AWS API\ub97c \ud638\ucd9c\ud558\ub294 \ub2e4\uc591\ud55c \uc624\ud37c\ub808\uc774\ud130(\ub2e4\uc774\uc5b4\uadf8\ub7a8 \uc624\ub978\ucabd)\uc785\ub2c8\ub2e4. API \uc6b0\uc120 \uc21c\uc704 \ubc0f \uacf5\uc815\uc131 \uc124\uc815\uc740 \uace0\uac1d\uc774 \uad6c\uc131\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c AWS\uc5d0\uc11c \uad00\ub9ac\ud558\ub354\ub77c\ub3c4 API \uc11c\ubc84\ub294 \uc911\uac04\uc5d0 \ub461\ub2c8\ub2e4. \uc5c5\uc2a4\ud2b8\ub9bc \ubc0f \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \ubcd1\ubaa9 \ud604\uc0c1 \u00b6 \uac01 \uc11c\ube44\uc2a4\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \ub54c\ub294 \uc9c0\ud45c\ub97c \uc591\ubc29\ud5a5\uc73c\ub85c \uac80\ud1a0\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ucc3e\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. Kubelet\uc744 \uc608\ub85c \ub4e4\uc5b4 \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Kubelet\uc740 API \uc11c\ubc84\uc640 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ubaa8\ub450\uc5d0 \ub300\ud574 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \uad6c\uc131 \uc694\uc18c \uc911 \ud558\ub098\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uac10\uc9c0\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c , \ubb34\uc5c7 \uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud560\uae4c\uc694? \ub178\ub4dc\ub2f9 \ud30c\ub4dc \uc218\ub294 \uba87 \uac1c\uc778\uac00\uc694? \u00b6 \ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc \uc218\uc640 \uac19\uc740 \ud655\uc7a5 \uc218\uce58\ub97c \uc0b4\ud3b4\ubcf4\uba74 \uc5c5\uc2a4\ud2b8\ub9bc\uc774 \uc9c0\uc6d0\ud558\ub294 \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud30c\ub4dc\ub97c \uc561\uba74 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note https://kubernetes.io/docs/setup/best-practices/cluster-large/ \ud558\uc9c0\ub9cc \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc5c5\uc2a4\ud2b8\ub9bc\uc758 \ud655\uc7a5\uc131 \ud14c\uc2a4\ud2b8\uc5d0\uc11c \ud14c\uc2a4\ud2b8\ud55c \uac83\ubcf4\ub2e4 \ub354 \ubcf5\uc7a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\ub294 \ud30c\ub4dc\uc758 \uac1c\uc218\ub9cc\ud07c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\ub3c4\ub85d Kubelet\uc774 Containerd \ub7f0\ud0c0\uc784\uc744 \u201c\ub530\ub77c\uc7a1\uace0\u201d \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubd05\ub2c8\ub2e4. \uc9c0\ub098\uce58\uac8c \ub2e8\uc21c\ud654\ud558\uc790\uba74, Kubelet\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 (\uc6b0\ub9ac\uc758 \uacbd\uc6b0 Containerd) \uc5d0\uc11c \ud30c\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uac00\uc838\uc624\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\ud0dc\ub97c \ub108\ubb34 \ube68\ub9ac \ubcc0\uacbd\ud558\ub294 \ud30c\ub4dc\uac00 \ub108\ubb34 \ub9ce\uc73c\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694? \ubcc0\uacbd\ub960\uc774 \ub108\ubb34 \ub192\uc73c\uba74 [\ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0 \ub300\ud55c] \uc694\uccad\uc774 \ud0c0\uc784\uc544\uc6c3\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub04a\uc784\uc5c6\uc774 \uc9c4\ud654\ud558\uace0 \uc788\uc73c\uba70, \uc774 \uc11c\ube0c \uc2dc\uc2a4\ud15c\uc740 \ud604\uc7ac \ubcc0\ud654\ub97c \uacaa\uace0 \uc788\uc2b5\ub2c8\ub2e4. https://github.com/kubernetes/enhancements/issues/3386 \uc704 \uadf8\ub798\ud504\uc5d0\uc11c \ud30c\ub4dc \ub77c\uc774\ud504\uc0ac\uc774\ud074 \uc774\ubca4\ud2b8 \uc0dd\uc131 \uae30\uac04 \uc9c0\ud45c\uc758 \ud0c0\uc784\uc544\uc6c3 \uac12\uc5d0 \ub3c4\ub2ec\ud588\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \ub0a9\uc791\ud55c \uc120\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c PromQL \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. increase(kubelet_pleg_relist_duration_seconds_bucket{instance=\"$instance\"}[$__rate_interval]) \uc774\ub7ec\ud55c \ud0c0\uc784\uc544\uc6c3 \ub3d9\uc791\uc744 \ubaa9\uaca9\ud558\uba74 \ub178\ub4dc\uac00 \uac00\ub2a5\ud55c \ud55c\ub3c4\ub97c \ucd08\uacfc\ud588\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\uc18d \uc9c4\ud589\ud558\uae30 \uc804\uc5d0 \ud0c0\uc784\uc544\uc6c3\uc758 \uc6d0\uc778\uc744 \uc218\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ub178\ub4dc\ub2f9 \ud3ec\ub4dc \uc218\ub97c \uc904\uc774\uac70\ub098 \ub9ce\uc740 \uc591\uc758 \uc7ac\uc2dc\ub3c4\ub97c \uc720\ubc1c\ud558\uc5ec \uc774\ud0c8\ub960\uc5d0 \uc601\ud5a5\uc744 \uc904 \uc218 \uc788\ub294 \uc624\ub958\ub97c \ucc3e\uc544\ub0c4\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 \ub178\ub4dc\uac00 \uace0\uc815\ub41c \uc218 \ub300\uc2e0 \ud560\ub2f9\ub41c \ud30c\ub4dc\uc758 \ud68c\uc804\uc728\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc774\ud574\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc9c0\ud45c\ubcc4 \ud655\uc7a5 \u00b6 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c\uc744 \ucd5c\uc801\ud654\ud55c\ub2e4\ub294 \uac1c\ub150\uc740 \uc624\ub798\ub418\uc5c8\uc9c0\ub9cc \uc0ac\ub78c\ub4e4\uc774 Kubernetes \uc5ec\uc815\uc744 \uc2dc\uc791\ud558\uba74\uc11c \uac04\uacfc\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc22b\uc790 (\uc608: \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud3ec\ub4dc) \uc5d0 \ucd08\uc810\uc744 \ub9de\ucd94\ub294 \ub300\uc2e0 \uc2dc\uc2a4\ud15c\uc758 \ubcd1\ubaa9 \uc9c0\uc810\uc744 \ucc3e\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc9c0\ud45c\ub97c \ucc3e\ub294 \ub370 \uc9d1\uc911\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\ud45c\uc5d0 \ub300\ud55c \uc62c\ubc14\ub978 \uc784\uacc4\uac12\uc744 \uc774\ud574\ud558\uba74 \uc2dc\uc2a4\ud15c\uc774 \ucd5c\uc801\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4\ub294 \ud655\uc2e0\uc744 \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd\uc73c\ub85c \uc778\ud55c \uc601\ud5a5 \u00b6 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 \uc758\uc2ec\uc2a4\ub7ec\uc6cc \ubcf4\uc774\ub294 \uccab \ubc88\uc9f8 \uba54\ud2b8\ub9ad\uc774\ub098 \ub85c\uadf8 \uc624\ub958\uc5d0 \uc9d1\uc911\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubelet\uc758 \uc804\uc1a1 \uc2dc\uac04\uc774 \ub354 \uc77c\ucc0d \ucd08\uacfc\ub41c \uac83\uc744 \ud655\uc778\ud588\uc744 \ub54c Kubelet\uc774 \uc804\uc1a1\ud560 \uc218 \uc788\ub294 \ucd08\ub2f9 \uc18d\ub3c4\ub97c \ub192\uc774\ub294 \ub4f1 \ubb34\uc791\uc704\ub85c \uc2dc\ub3c4\ud560 \uc218 \uc788\uc9c0\ub9cc, \uba3c\uc800 \ubc1c\uacac\ub41c \uc624\ub958\uc758 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc5d0\uc11c \ubaa8\ub4e0 \uac83\uc744 \uc804\uccb4\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ubaa9\uc801\uc5d0 \ub9de\uac8c \ubcc0\uacbd\ud558\uace0 \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c \ubcc0\uacbd\ud558\uc138\uc694 . Kubelet\uc758 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 (\ud3ec\ub4dc \uc624\ub958), EC2 API\uc640 \ud1b5\uc2e0\ud558\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84(CSI), \ub124\ud2b8\uc6cc\ud06c \ub4dc\ub77c\uc774\ubc84(CNI) \uc640 \uac19\uc740 \ub370\ubaac\uc14b \ub4f1\uc785\ub2c8\ub2e4. Kubelet\uc774 \ub7f0\ud0c0\uc784\uc744 \ub530\ub77c\uac00\uc9c0 \ubabb\ud558\ub294 \uc774\uc804 \uc608\ub97c \uacc4\uc18d\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ub108\ubb34 \uc870\ubc00\ud558\uac8c \ube48\ud329\ud558\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\ud569\ud55c \ub178\ub4dc \ud06c\uae30\ub97c \uc124\uacc4\ud560 \ub54c \uc774\ub7ec\ud55c \uc2e0\ud638\ub294 \uc2dc\uc2a4\ud15c\uc5d0 \ubd88\ud544\uc694\ud55c \uc555\ub825\uc744 \uac00\ud558\uc5ec \uaddc\ubaa8\uc640 \uc131\ub2a5\uc744 \ubaa8\ub450 \uc81c\ud55c\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uac04\uacfc\ud558\uae30 \uc26c\uc6b4 \uc2e0\ud638\uc785\ub2c8\ub2e4. \ubd88\ud544\uc694\ud55c \uc624\ub958\ub85c \uc778\ud55c \ube44\uc6a9 \u00b6 Kubernetes \ucee8\ud2b8\ub864\ub7ec\ub294 \uc624\ub958 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud560 \ub54c \uc7ac\uc2dc\ub3c4\ud558\ub294 \ub370 \ud0c1\uc6d4\ud558\uc9c0\ub9cc, \uc5ec\uae30\uc5d0\ub294 \ube44\uc6a9\uc774 \ub530\ub985\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc7ac\uc2dc\ub3c4\ub294 Kube \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790\uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc555\ub825\uc744 \uac00\uc911\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\ubaa8 \ud14c\uc2a4\ud2b8\uc758 \uc911\uc694\ud55c \ubd80\ubd84\uc740 \uc774\ub7ec\ud55c \uc624\ub958\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubc1c\uc0dd\ud558\ub294 \uc624\ub958\uac00 \uc801\uc744\uc218\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ubb38\uc81c\ub97c \ub354 \uc27d\uac8c \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc694 \uc791\uc5c5 (\uc608: \uc5c5\uadf8\ub808\uc774\ub4dc) \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc624\ub958\uac00 \uc5c6\ub294\uc9c0 \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud568\uc73c\ub85c\uc368 \uc608\uc0c1\uce58 \ubabb\ud55c \uc774\ubca4\ud2b8 \ubc1c\uc0dd \uc2dc \ub85c\uadf8 \ubb38\uc81c \ud574\uacb0\uc744 \uac04\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc57c \ub113\ud788\uae30 \u00b6 1,000\uac1c\uc758 \ub178\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \ucc3e\uc544\ubcf4\uace0 \uc2f6\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. PromQL\uc5d0\uc11c\ub294 topk\ub77c\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc9d1\ud569\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uac12\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. K\ub294 \ubcc0\uc218\ub85c, \uc6d0\ud558\ub294 \ud56d\ubaa9 \uc218\ub97c \ubc30\uce58\ud569\ub2c8\ub2e4.\uc5ec\uae30\uc11c\ub294 \uc138 \uac1c\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 Kubelet\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc778\uc9c0 \uc5ec\ubd80\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.\uc9c0\uae08\uae4c\uc9c0 \ub808\uc774\ud134\uc2dc\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub294\ub370, \uc774\uc81c Kubelet\uc774 \uc774\ubca4\ud2b8\ub97c \uc0ad\uc81c\ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. topk(3, increase(kubelet_pleg_discard_events{}[$__rate_interval])) \uc774 \ubb38\uc7a5\uc744 \ubd84\ud574\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Grafana \ubcc0\uc218 $__rate_interval \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\uc694\ud55c \ub124 \uac1c\uc758 \uc0d8\ud50c\uc744 \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ubcf5\uc7a1\ud55c \ubaa8\ub2c8\ud130\ub9c1 \uc8fc\uc81c\ub97c \uac04\ub2e8\ud55c \ubcc0\uc218\ub85c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk \ub294 \uc0c1\uc704 \uacb0\uacfc\ub9cc \ud45c\uc2dc\ud558\uba70 \uc22b\uc790 3\uc740 \uacb0\uacfc\ub97c \uc138 \uac1c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \uc9c0\ud45c\uc5d0 \uc720\uc6a9\ud55c \ud568\uc218\uc785\ub2c8\ub2e4. {} \ub294 \ud544\ud130\uac00 \uc5c6\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud06c\ub798\ud551 \uaddc\uce59\uc758 \uc791\uc5c5 \uc774\ub984\uc744 \uc785\ub825\ud558\uaca0\uc9c0\ub9cc, \uc774\ub7ec\ud55c \uc774\ub984\uc774 \ub2e4\uc591\ud558\uae30 \ub54c\ubb38\uc5d0 \ube44\uc6cc\ub461\ub2c8\ub2e4. \ubb38\uc81c\ub97c \ubc18\uc73c\ub85c \ub098\ub204\uae30 \u00b6 \uc2dc\uc2a4\ud15c\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ud574\uacb0\ud558\uae30 \uc704\ud574 \uc5c5\uc2a4\ud2b8\ub9bc \ub610\ub294 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc5d0 \ubb38\uc81c\uac00 \uc788\uc74c\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc9c0\ud45c\ub97c \ucc3e\ub294 \uc811\uadfc \ubc29\uc2dd\uc744 \ucde8\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ubb38\uc81c\ub97c \ubc18\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub610\ud55c \uc774\ub294 \uc9c0\ud45c \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud558\ub294 \ubc29\uc2dd\uc758 \ud575\uc2ec \uc6d0\uce59\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ubd80\ud130 \uc2dc\uc791\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774\ub098 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"Kubernetes \uc2a4\ucf00\uc77c\ub9c1 \uc774\ub860"},{"location":"scalability/docs/scaling_theory.kr/#kubernetes","text":"","title":"Kubernetes \uc2a4\ucf00\uc77c\ub9c1 \uc774\ub860"},{"location":"scalability/docs/scaling_theory.kr/#vs","text":"\ud754\ud788 Kubernetes\uc758 \ud655\uc7a5\uc131\uc744 \ub17c\uc758\ud560 \ub54c \uc6b0\ub9ac\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc788\ub294 \ub178\ub4dc \uc218\ub85c \uc774\uc57c\uae30\ud569\ub2c8\ub2e4. \ud765\ubbf8\ub86d\uac8c\ub3c4, \uc774\uac83\uc740 \ud655\uc7a5\uc131\uc744 \uc774\ud574\ud558\uae30 \uc704\ud55c \uac00\uc7a5 \uc720\uc6a9\ud55c \uc9c0\ud45c\ub294 \uc544\ub2d9\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, \ub9ce\uc9c0\ub9cc \uace0\uc815\ub41c \uc218\uc758 \ud3ec\ub4dc\uac00 \uc788\ub294 5,000\ub178\ub4dc \ud074\ub7ec\uc2a4\ud130\ub294 \ucd08\uae30 \uc124\uc815 \uc774\ud6c4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ud070 \ubd80\ub2f4\uc744 \uc8fc\uc9c0 \uc54a\uc744 \uac83\uc785\ub2c8\ub2e4. \ud558\uc9c0\ub9cc 1,000\uac1c\uc758 \ub178\ub4dc \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec 1\ubd84 \uc774\ub0b4\uc5d0 \uc218\uba85\uc774 \uc9e7\uc740 \uc791\uc5c5 10,000\uac1c\ub97c \ub9cc\ub4e4\ub824\uace0 \uc2dc\ub3c4\ud55c\ub2e4\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc9c0\uc18d\uc801\uc778 \uc555\ubc15\uc744 \uac00\ud560 \uac83\uc785\ub2c8\ub2e4. \ub2e8\uc21c\ud788 \ub178\ub4dc \uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ucf00\uc77c\ub9c1\uc744 \uc774\ud574\ud558\ub294 \uac83\uc740 \uc624\ud574\uc758 \uc18c\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uae30\uac04 \ub0b4\uc5d0 \ubc1c\uc0dd\ud558\ub294 \ubcc0\ud654\uc728\uc758 \uad00\uc810\uc5d0\uc11c \uc0dd\uac01\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4(Prometheus \ucffc\ub9ac\uac00 \uc77c\ubc18\uc801\uc73c\ub85c \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uac04\uaca9\uc774\ubbc0\ub85c \uc5ec\uae30\uc11c\ub294 5\ubd84 \uac04\uaca9\uc744 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4). \ubcc0\ud654\uc728\uc758 \uad00\uc810\uc5d0\uc11c \ubb38\uc81c\ub97c \uad6c\uc131\ud558\uba74 \uc6d0\ud558\ub294 \uaddc\ubaa8\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc704\ud574 \ubb34\uc5c7\uc744 \uc870\uc815\ud574\uc57c \ud560\uc9c0 \ub354 \uc798 \uc54c \uc218 \uc788\ub294 \uc774\uc720\ub97c \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc vs. \uc774\ud0c8\ub960"},{"location":"scalability/docs/scaling_theory.kr/#_1","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uccb4\uc778\uc758 \ub2e4\uc74c \ub9c1\ud06c\uc5d0 \uacfc\ubd80\ud558\uac00 \uac78\ub9ac\uc9c0 \uc54a\ub3c4\ub85d Kubelet, Scheduler, Kube Controller Manager, API \uc11c\ubc84 \ub4f1 \uac01 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud574 \uc5ec\ub7ec \uac00\uc9c0 \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc744 \uac16\ucd94\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4, Kubelet\uc5d0\ub294 API \uc11c\ubc84\uc5d0 \ub300\ud55c \ud638\ucd9c\uc744 \uc77c\uc815 \uc18d\ub3c4\ub85c \uc81c\ud55c\ud558\ub294 \ud50c\ub798\uadf8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubcf4\ud638 \uba54\ucee4\ub2c8\uc998\uc740 \ud56d\uc0c1 \uadf8\ub7f0 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc \uc77c\ubc18\uc801\uc73c\ub85c \ucd08\ub2f9 \ud5c8\uc6a9 \ucffc\ub9ac \ub610\ub294 QPS\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c QPS \uc124\uc815\uc744 \ubcc0\uacbd\ud560 \ub54c\ub294 \uac01\ubcc4\ud55c \uc8fc\uc758\ub97c \uae30\uc6b8\uc5ec\uc57c \ud569\ub2c8\ub2e4. Kubelet\uc758 \ucd08\ub2f9 \ucffc\ub9ac\uc640 \uac19\uc740 \ud558\ub098\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uc81c\uac70\ud558\uba74 \ub2e4\ub978 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \uad6c\uc131 \uc694\uc18c\uc5d0\ub3c4 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uc2dc\uc2a4\ud15c\uc774 \uc77c\uc815 \uc18d\ub3c4 \uc774\uc0c1\uc73c\ub85c \uacfc\ubd80\ud558\ub97c \uacaa\uc744 \uc218 \uc788\uace0 \ub610 \uadf8\ub807\uac8c \ub420 \uac83\uc774\ubbc0\ub85c, \uc11c\ube44\uc2a4 \uccb4\uc778\uc758 \uac01 \ubd80\ubd84\uc744 \uc774\ud574\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc774 Kubernetes\uc5d0\uc11c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc131\uacf5\uc801\uc73c\ub85c \ud655\uc7a5\ud558\ub294 \ub370 \uc911\uc694\ud569\ub2c8\ub2e4. Note API \uc11c\ubc84\ub294 API Priority \ubc0f Fairness \ub3c4\uc785\uc73c\ub85c \ub354 \ubcf5\uc7a1\ud55c \uc2dc\uc2a4\ud15c\uc744 \uac00\uc9c0\uace0 \uc788\uc73c\uba70, \uc774\uc5d0 \ub300\ud574 \ubcc4\ub3c4\ub85c \ub17c\uc758\ud560 \uac83\uc785\ub2c8\ub2e4. Note \uc8fc\uc758: \uc77c\ubd80 \uc9c0\ud45c\ub294 \uc801\ud569\ud55c \uac83\ucc98\ub7fc \ubcf4\uc774\uc9c0\ub9cc \uc0ac\uc2e4 \ub2e4\ub978 \uac83\uc744 \uce21\uc815\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 kubelet_http_inflight_requests \ub294 Kubelet\uc758 \uc9c0\ud45c \uc11c\ubc84\uc5d0\ub9cc \uad00\ub828\uc774 \uc788\uc73c\uba70, Kubelet\uc5d0\uc11c API \uc11c\ubc84 \uc694\uccad\uc758 \uc218\uac00 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 Kubelet\uc758 QPS \ud50c\ub798\uadf8\ub97c \uc798\ubabb \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 Kubelet\uc5d0 \ub300\ud55c \uac10\uc0ac \ub85c\uadf8 \ucffc\ub9ac\uac00 \uc9c0\ud45c\ub97c \ud655\uc778\ud558\ub294 \ub354 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucd08\ub2f9 \ucffc\ub9ac \uc218 \uc0dd\uac01\ud558\uae30"},{"location":"scalability/docs/scaling_theory.kr/#_2","text":"EKS\ub294 \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\uc774\ubbc0\ub85c Kubernetes \uad6c\uc131 \uc694\uc18c\ub97c \ub450 \ubc94\uc8fc\ub85c \ub098\ub204\uaca0\uc2b5\ub2c8\ub2e4. \ud558\ub098\ub294 etcd, Kube Controller Manager \ubc0f Scheduler(\ub2e4\uc774\uc5b4\uadf8\ub7a8 \uc67c\ucabd \ubd80\ubd84)\ub97c \ud3ec\ud568\ud558\ub294 AWS \uad00\ub9ac\ud615 \uad6c\uc131 \uc694\uc18c\uc640 Kubelet, \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uacfc \uac19\uc740 \uace0\uac1d\uc774 \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c, \ub124\ud2b8\uc6cc\ud0b9 \ubc0f \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84\uc640 \uac19\uc774 AWS API\ub97c \ud638\ucd9c\ud558\ub294 \ub2e4\uc591\ud55c \uc624\ud37c\ub808\uc774\ud130(\ub2e4\uc774\uc5b4\uadf8\ub7a8 \uc624\ub978\ucabd)\uc785\ub2c8\ub2e4. API \uc6b0\uc120 \uc21c\uc704 \ubc0f \uacf5\uc815\uc131 \uc124\uc815\uc740 \uace0\uac1d\uc774 \uad6c\uc131\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c AWS\uc5d0\uc11c \uad00\ub9ac\ud558\ub354\ub77c\ub3c4 API \uc11c\ubc84\ub294 \uc911\uac04\uc5d0 \ub461\ub2c8\ub2e4.","title":"\ubd84\uc0b0 \ucef4\ud3ec\ub10c\ud2b8 \uc2a4\ucf00\uc77c\ub9c1"},{"location":"scalability/docs/scaling_theory.kr/#_3","text":"\uac01 \uc11c\ube44\uc2a4\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud560 \ub54c\ub294 \uc9c0\ud45c\ub97c \uc591\ubc29\ud5a5\uc73c\ub85c \uac80\ud1a0\ud558\uc5ec \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ucc3e\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. Kubelet\uc744 \uc608\ub85c \ub4e4\uc5b4 \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Kubelet\uc740 API \uc11c\ubc84\uc640 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ubaa8\ub450\uc5d0 \ub300\ud574 \ud1b5\uc2e0\ud569\ub2c8\ub2e4. \uad6c\uc131 \uc694\uc18c \uc911 \ud558\ub098\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uac10\uc9c0\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c , \ubb34\uc5c7 \uc744 \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud560\uae4c\uc694?","title":"\uc5c5\uc2a4\ud2b8\ub9bc \ubc0f \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc \ubcd1\ubaa9 \ud604\uc0c1"},{"location":"scalability/docs/scaling_theory.kr/#_4","text":"\ud55c \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ud30c\ub4dc \uc218\uc640 \uac19\uc740 \ud655\uc7a5 \uc218\uce58\ub97c \uc0b4\ud3b4\ubcf4\uba74 \uc5c5\uc2a4\ud2b8\ub9bc\uc774 \uc9c0\uc6d0\ud558\ub294 \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud30c\ub4dc\ub97c \uc561\uba74 \uadf8\ub300\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note https://kubernetes.io/docs/setup/best-practices/cluster-large/ \ud558\uc9c0\ub9cc \uc6cc\ud06c\ub85c\ub4dc\ub294 \uc5c5\uc2a4\ud2b8\ub9bc\uc758 \ud655\uc7a5\uc131 \ud14c\uc2a4\ud2b8\uc5d0\uc11c \ud14c\uc2a4\ud2b8\ud55c \uac83\ubcf4\ub2e4 \ub354 \ubcf5\uc7a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\ub355\uc158\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\ub294 \ud30c\ub4dc\uc758 \uac1c\uc218\ub9cc\ud07c \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\ub3c4\ub85d Kubelet\uc774 Containerd \ub7f0\ud0c0\uc784\uc744 \u201c\ub530\ub77c\uc7a1\uace0\u201d \uc788\ub294\uc9c0 \ud655\uc778\ud574\ubd05\ub2c8\ub2e4. \uc9c0\ub098\uce58\uac8c \ub2e8\uc21c\ud654\ud558\uc790\uba74, Kubelet\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 (\uc6b0\ub9ac\uc758 \uacbd\uc6b0 Containerd) \uc5d0\uc11c \ud30c\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uac00\uc838\uc624\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc0c1\ud0dc\ub97c \ub108\ubb34 \ube68\ub9ac \ubcc0\uacbd\ud558\ub294 \ud30c\ub4dc\uac00 \ub108\ubb34 \ub9ce\uc73c\uba74 \uc5b4\ub5bb\uac8c \ub420\uae4c\uc694? \ubcc0\uacbd\ub960\uc774 \ub108\ubb34 \ub192\uc73c\uba74 [\ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0 \ub300\ud55c] \uc694\uccad\uc774 \ud0c0\uc784\uc544\uc6c3\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Note \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 \ub04a\uc784\uc5c6\uc774 \uc9c4\ud654\ud558\uace0 \uc788\uc73c\uba70, \uc774 \uc11c\ube0c \uc2dc\uc2a4\ud15c\uc740 \ud604\uc7ac \ubcc0\ud654\ub97c \uacaa\uace0 \uc788\uc2b5\ub2c8\ub2e4. https://github.com/kubernetes/enhancements/issues/3386 \uc704 \uadf8\ub798\ud504\uc5d0\uc11c \ud30c\ub4dc \ub77c\uc774\ud504\uc0ac\uc774\ud074 \uc774\ubca4\ud2b8 \uc0dd\uc131 \uae30\uac04 \uc9c0\ud45c\uc758 \ud0c0\uc784\uc544\uc6c3 \uac12\uc5d0 \ub3c4\ub2ec\ud588\uc74c\uc744 \ub098\ud0c0\ub0b4\ub294 \ub0a9\uc791\ud55c \uc120\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uccb4 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub97c \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c PromQL \uad6c\ubb38\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. increase(kubelet_pleg_relist_duration_seconds_bucket{instance=\"$instance\"}[$__rate_interval]) \uc774\ub7ec\ud55c \ud0c0\uc784\uc544\uc6c3 \ub3d9\uc791\uc744 \ubaa9\uaca9\ud558\uba74 \ub178\ub4dc\uac00 \uac00\ub2a5\ud55c \ud55c\ub3c4\ub97c \ucd08\uacfc\ud588\ub2e4\ub294 \uac83\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\uc18d \uc9c4\ud589\ud558\uae30 \uc804\uc5d0 \ud0c0\uc784\uc544\uc6c3\uc758 \uc6d0\uc778\uc744 \uc218\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ub178\ub4dc\ub2f9 \ud3ec\ub4dc \uc218\ub97c \uc904\uc774\uac70\ub098 \ub9ce\uc740 \uc591\uc758 \uc7ac\uc2dc\ub3c4\ub97c \uc720\ubc1c\ud558\uc5ec \uc774\ud0c8\ub960\uc5d0 \uc601\ud5a5\uc744 \uc904 \uc218 \uc788\ub294 \uc624\ub958\ub97c \ucc3e\uc544\ub0c4\uc73c\ub85c\uc368 \ub2ec\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc694\ud55c \uc810\uc740 \ub178\ub4dc\uac00 \uace0\uc815\ub41c \uc218 \ub300\uc2e0 \ud560\ub2f9\ub41c \ud30c\ub4dc\uc758 \ud68c\uc804\uc728\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294\uc9c0 \uc5ec\ubd80\ub97c \uc774\ud574\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ub178\ub4dc\ub2f9 \ud30c\ub4dc \uc218\ub294 \uba87 \uac1c\uc778\uac00\uc694?"},{"location":"scalability/docs/scaling_theory.kr/#_5","text":"\uc9c0\ud45c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc2a4\ud15c\uc744 \ucd5c\uc801\ud654\ud55c\ub2e4\ub294 \uac1c\ub150\uc740 \uc624\ub798\ub418\uc5c8\uc9c0\ub9cc \uc0ac\ub78c\ub4e4\uc774 Kubernetes \uc5ec\uc815\uc744 \uc2dc\uc791\ud558\uba74\uc11c \uac04\uacfc\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc22b\uc790 (\uc608: \ub178\ub4dc\ub2f9 110\uac1c\uc758 \ud3ec\ub4dc) \uc5d0 \ucd08\uc810\uc744 \ub9de\ucd94\ub294 \ub300\uc2e0 \uc2dc\uc2a4\ud15c\uc758 \ubcd1\ubaa9 \uc9c0\uc810\uc744 \ucc3e\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc9c0\ud45c\ub97c \ucc3e\ub294 \ub370 \uc9d1\uc911\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\ud45c\uc5d0 \ub300\ud55c \uc62c\ubc14\ub978 \uc784\uacc4\uac12\uc744 \uc774\ud574\ud558\uba74 \uc2dc\uc2a4\ud15c\uc774 \ucd5c\uc801\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\ub2e4\ub294 \ud655\uc2e0\uc744 \uac00\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc9c0\ud45c\ubcc4 \ud655\uc7a5"},{"location":"scalability/docs/scaling_theory.kr/#_6","text":"\ubb38\uc81c\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\ub294 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 \uc758\uc2ec\uc2a4\ub7ec\uc6cc \ubcf4\uc774\ub294 \uccab \ubc88\uc9f8 \uba54\ud2b8\ub9ad\uc774\ub098 \ub85c\uadf8 \uc624\ub958\uc5d0 \uc9d1\uc911\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubelet\uc758 \uc804\uc1a1 \uc2dc\uac04\uc774 \ub354 \uc77c\ucc0d \ucd08\uacfc\ub41c \uac83\uc744 \ud655\uc778\ud588\uc744 \ub54c Kubelet\uc774 \uc804\uc1a1\ud560 \uc218 \uc788\ub294 \ucd08\ub2f9 \uc18d\ub3c4\ub97c \ub192\uc774\ub294 \ub4f1 \ubb34\uc791\uc704\ub85c \uc2dc\ub3c4\ud560 \uc218 \uc788\uc9c0\ub9cc, \uba3c\uc800 \ubc1c\uacac\ub41c \uc624\ub958\uc758 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc5d0\uc11c \ubaa8\ub4e0 \uac83\uc744 \uc804\uccb4\uc801\uc73c\ub85c \uc0b4\ud3b4\ubcf4\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ubaa9\uc801\uc5d0 \ub9de\uac8c \ubcc0\uacbd\ud558\uace0 \ub370\uc774\ud130\ub97c \ubc14\ud0d5\uc73c\ub85c \ubcc0\uacbd\ud558\uc138\uc694 . Kubelet\uc758 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 (\ud3ec\ub4dc \uc624\ub958), EC2 API\uc640 \ud1b5\uc2e0\ud558\ub294 \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84(CSI), \ub124\ud2b8\uc6cc\ud06c \ub4dc\ub77c\uc774\ubc84(CNI) \uc640 \uac19\uc740 \ub370\ubaac\uc14b \ub4f1\uc785\ub2c8\ub2e4. Kubelet\uc774 \ub7f0\ud0c0\uc784\uc744 \ub530\ub77c\uac00\uc9c0 \ubabb\ud558\ub294 \uc774\uc804 \uc608\ub97c \uacc4\uc18d\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\ub97c \ub108\ubb34 \uc870\ubc00\ud558\uac8c \ube48\ud329\ud558\uba74 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\ud569\ud55c \ub178\ub4dc \ud06c\uae30\ub97c \uc124\uacc4\ud560 \ub54c \uc774\ub7ec\ud55c \uc2e0\ud638\ub294 \uc2dc\uc2a4\ud15c\uc5d0 \ubd88\ud544\uc694\ud55c \uc555\ub825\uc744 \uac00\ud558\uc5ec \uaddc\ubaa8\uc640 \uc131\ub2a5\uc744 \ubaa8\ub450 \uc81c\ud55c\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uac04\uacfc\ud558\uae30 \uc26c\uc6b4 \uc2e0\ud638\uc785\ub2c8\ub2e4.","title":"\ubcc0\uacbd\uc73c\ub85c \uc778\ud55c \uc601\ud5a5"},{"location":"scalability/docs/scaling_theory.kr/#_7","text":"Kubernetes \ucee8\ud2b8\ub864\ub7ec\ub294 \uc624\ub958 \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud560 \ub54c \uc7ac\uc2dc\ub3c4\ud558\ub294 \ub370 \ud0c1\uc6d4\ud558\uc9c0\ub9cc, \uc5ec\uae30\uc5d0\ub294 \ube44\uc6a9\uc774 \ub530\ub985\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc7ac\uc2dc\ub3c4\ub294 Kube \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790\uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\uc5d0 \ub300\ud55c \uc555\ub825\uc744 \uac00\uc911\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\ubaa8 \ud14c\uc2a4\ud2b8\uc758 \uc911\uc694\ud55c \ubd80\ubd84\uc740 \uc774\ub7ec\ud55c \uc624\ub958\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubc1c\uc0dd\ud558\ub294 \uc624\ub958\uac00 \uc801\uc744\uc218\ub85d \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ubb38\uc81c\ub97c \ub354 \uc27d\uac8c \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc694 \uc791\uc5c5 (\uc608: \uc5c5\uadf8\ub808\uc774\ub4dc) \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc624\ub958\uac00 \uc5c6\ub294\uc9c0 \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud568\uc73c\ub85c\uc368 \uc608\uc0c1\uce58 \ubabb\ud55c \uc774\ubca4\ud2b8 \ubc1c\uc0dd \uc2dc \ub85c\uadf8 \ubb38\uc81c \ud574\uacb0\uc744 \uac04\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubd88\ud544\uc694\ud55c \uc624\ub958\ub85c \uc778\ud55c \ube44\uc6a9"},{"location":"scalability/docs/scaling_theory.kr/#_8","text":"1,000\uac1c\uc758 \ub178\ub4dc\uac00 \uc788\ub294 \ub300\uaddc\ubaa8 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \uac1c\ubcc4\uc801\uc73c\ub85c \ucc3e\uc544\ubcf4\uace0 \uc2f6\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. PromQL\uc5d0\uc11c\ub294 topk\ub77c\ub294 \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \uc9d1\ud569\uc5d0\uc11c \uac00\uc7a5 \ub192\uc740 \uac12\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. K\ub294 \ubcc0\uc218\ub85c, \uc6d0\ud558\ub294 \ud56d\ubaa9 \uc218\ub97c \ubc30\uce58\ud569\ub2c8\ub2e4.\uc5ec\uae30\uc11c\ub294 \uc138 \uac1c\uc758 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 Kubelet\uc774 \ud3ec\ud654 \uc0c1\ud0dc\uc778\uc9c0 \uc5ec\ubd80\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4.\uc9c0\uae08\uae4c\uc9c0 \ub808\uc774\ud134\uc2dc\ub97c \uc0b4\ud3b4\ubcf4\uc558\ub294\ub370, \uc774\uc81c Kubelet\uc774 \uc774\ubca4\ud2b8\ub97c \uc0ad\uc81c\ud558\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. topk(3, increase(kubelet_pleg_discard_events{}[$__rate_interval])) \uc774 \ubb38\uc7a5\uc744 \ubd84\ud574\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. Grafana \ubcc0\uc218 $__rate_interval \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud544\uc694\ud55c \ub124 \uac1c\uc758 \uc0d8\ud50c\uc744 \uc5bb\uc744 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ubcf5\uc7a1\ud55c \ubaa8\ub2c8\ud130\ub9c1 \uc8fc\uc81c\ub97c \uac04\ub2e8\ud55c \ubcc0\uc218\ub85c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. topk \ub294 \uc0c1\uc704 \uacb0\uacfc\ub9cc \ud45c\uc2dc\ud558\uba70 \uc22b\uc790 3\uc740 \uacb0\uacfc\ub97c \uc138 \uac1c\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 \uc9c0\ud45c\uc5d0 \uc720\uc6a9\ud55c \ud568\uc218\uc785\ub2c8\ub2e4. {} \ub294 \ud544\ud130\uac00 \uc5c6\uc74c\uc744 \ub098\ud0c0\ub0c5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc2a4\ud06c\ub798\ud551 \uaddc\uce59\uc758 \uc791\uc5c5 \uc774\ub984\uc744 \uc785\ub825\ud558\uaca0\uc9c0\ub9cc, \uc774\ub7ec\ud55c \uc774\ub984\uc774 \ub2e4\uc591\ud558\uae30 \ub54c\ubb38\uc5d0 \ube44\uc6cc\ub461\ub2c8\ub2e4.","title":"\uc2dc\uc57c \ub113\ud788\uae30"},{"location":"scalability/docs/scaling_theory.kr/#_9","text":"\uc2dc\uc2a4\ud15c\uc758 \ubcd1\ubaa9 \ud604\uc0c1\uc744 \ud574\uacb0\ud558\uae30 \uc704\ud574 \uc5c5\uc2a4\ud2b8\ub9bc \ub610\ub294 \ub2e4\uc6b4\uc2a4\ud2b8\ub9bc\uc5d0 \ubb38\uc81c\uac00 \uc788\uc74c\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc9c0\ud45c\ub97c \ucc3e\ub294 \uc811\uadfc \ubc29\uc2dd\uc744 \ucde8\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ubb38\uc81c\ub97c \ubc18\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub610\ud55c \uc774\ub294 \uc9c0\ud45c \ub370\uc774\ud130\ub97c \ud45c\uc2dc\ud558\ub294 \ubc29\uc2dd\uc758 \ud575\uc2ec \uc6d0\uce59\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc138\uc2a4\ubd80\ud130 \uc2dc\uc791\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. API \uc11c\ubc84\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774\ub098 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ubb38\uc81c\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.","title":"\ubb38\uc81c\ub97c \ubc18\uc73c\ub85c \ub098\ub204\uae30"},{"location":"scalability/docs/scaling_theory/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Kubernetes Scaling Theory \u00b6 Nodes vs. Churn Rate \u00b6 Often when we discuss the scalability of Kubernetes, we do so in terms of how many nodes there are in a single cluster. Interestingly, this is seldom the most useful metric for understanding scalability. For example, a 5,000 node cluster with a large but fixed number of pods would not put a great deal of stress on the control plane after the initial setup. However, if we took a 1,000 node cluster and tried creating 10,000 short lived jobs in less than a minute, it would put a great deal of sustained pressure on the control plane. Simply using the number of nodes to understand scaling can be misleading. It\u2019s better to think in terms of the rate of change that occurs within a specific period of time (let\u2019s use a 5 minute interval for this discussion, as this is what Prometheus queries typically use by default). Let\u2019s explore why framing the problem in terms of the rate of change can give us a better idea of what to tune to achieve our desired scale. Thinking in Queries Per Second \u00b6 Kubernetes has a number of protection mechanisms for each component - the Kubelet, Scheduler, Kube Controller Manager, and API server - to prevent overwhelming the next link in the Kubernetes chain. For example, the Kubelet has a flag to throttle calls to the API server at a certain rate. These protection mechanisms are generally, but not always, expressed in terms of queries allowed on a per second basis or QPS. Great care must be taken when changing these QPS settings. Removing one bottleneck, such as the queries per second on a Kubelet will have an impact on other down stream components. This can and will overwhelm the system above a certain rate, so understanding and monitoring each part of the service chain is key to successfully scaling workloads on Kubernetes. Note The API server has a more complex system with introduction of API Priority and Fairness which we will discuss separately. Note Caution, some metrics seem like the right fit but are in fact measuring something else. As an example, kubelet_http_inflight_requests relates to just the metrics server in Kubelet, not the number of requests from Kubelet to apiserver requests. This could cause us to misconfigure the QPS flag on the Kubelet. A query on audit logs for a particular Kubelet would be a more reliable way to check metrics. Scaling Distributed Components \u00b6 Since EKS is a managed service, let\u2019s split the Kubernetes components into two categories: AWS managed components which include etcd, Kube Controller Manager, and the Scheduler (on the left part of diagram), and customer configurable components such as the Kubelet, Container Runtime, and the various operators that call AWS APIs such as the Networking and Storage drivers (on the right part of diagram). We leave the API server in the middle even though it is AWS managed, as the settings for API Priority and Fairness can be configured by customers. Upstream and Downstream Bottlenecks \u00b6 As we monitor each service, it\u2019s important to look at metrics in both directions to look for bottlenecks. Let\u2019s learn how to do this by using Kubelet as an example. Kubelet talks both to the API server and the container runtime; how and what do we need to monitor to detect whether either component is experiencing an issue? How many Pods per Node \u00b6 When we look at scaling numbers, such as how many pods can run on a node, we could take the 110 pods per node that upstream supports at face value. Note https://kubernetes.io/docs/setup/best-practices/cluster-large/ However, your workload is likely more complex than what was tested in a scalability test in Upstream. To ensure we can service the number of pods we want to run in production, let\u2019s make sure that the Kubelet is \u201ckeeping up\u201d with the Containerd runtime. To oversimplify, the Kubelet is getting the status of the pods from the container runtime (in our case Containerd). What if we had too many pods changing status too quickly? If the rate of change is too high, requests [to the container runtime] can timeout. Note Kubernetes is constantly evolving, this subsystem is currently undergoing changes. https://github.com/kubernetes/enhancements/issues/3386 In the graph above, we see a flat line indicating we have just hit the timeout value for the pod lifecycle event generation duration metric. If you would like to see this in your own cluster you could use the following PromQL syntax. increase(kubelet_pleg_relist_duration_seconds_bucket{instance=\"$instance\"}[$__rate_interval]) If we witness this timeout behavior, we know we pushed the node over the limit it was capable of. We need to fix the cause of the timeout before proceeding further. This could be achieved by reducing the number of pods per node, or looking for errors that might be causing a high volume of retries (thus effecting the churn rate). The important take-away is that metrics are the best way to understand if a node is able to handle the churn rate of the pods assigned vs. using a fixed number. Scale by Metrics \u00b6 While the concept of using metrics to optimize systems is an old one, it\u2019s often overlooked as people begin their Kubernetes journey. Instead of focusing on specific numbers (i.e. 110 pods per node), we focus our efforts on finding the metrics that help us find bottlenecks in our system. Understanding the right thresholds for these metrics can give us a high degree of confidence our system is optimally configured. The Impact of Changes \u00b6 A common pattern that could get us into trouble is focusing on the first metric or log error that looks suspect. When we saw that the Kubelet was timing out earlier, we could try random things, such as increasing the per second rate that the Kubelet is allowed to send, etc. However, it is wise to look at the whole picture of everything downstream of the error we find first. Make each change with purpose and backed by data . Downstream of the Kubelet would be the Containerd runtime (pod errors), DaemonSets such as the storage driver (CSI) and the network driver (CNI) that talk to the EC2 API, etc. Let\u2019s continue our earlier example of the Kubelet not keeping up with the runtime. There are a number of points where we could bin pack a node so densely that it triggers errors. When designing the right node size for our workloads these are easy-to-overlook signals that might be putting unnecessary pressure on the system thus limiting both our scale and performance. The Cost of Unnecessary Errors \u00b6 Kubernetes controllers excel at retrying when error conditions arise, however this comes at a cost. These retries can increase the pressure on components such as the Kube Controller Manager. It is an important tenant of scale testing to monitor for such errors. When fewer errors are occurring, it is easier spot issues in the system. By periodically ensuring that our clusters are error free before major operations (such as upgrades) we can simplify troubleshooting logs when unforeseen events happen. Expanding Our View \u00b6 In large scale clusters with 1,000\u2019s of nodes we don\u2019t want to look for bottlenecks individually. In PromQL we can find the highest values in a data set using a function called topk; K being a variable we place the number of items we want. Here we use three nodes to get an idea whether all of the the Kubelets in the cluster are saturated. We have been looking at latency up to this point, now let\u2019s see if the Kubelet is discarding events. topk(3, increase(kubelet_pleg_discard_events{}[$__rate_interval])) Breaking this statement down. We use the Grafana variable $__rate_interval to ensure it gets the four samples it needs. This bypasses a complex topic in monitoring with a simple variable. topk give us just the top results and the number 3 limits those results to three. This is a useful function for cluster wide metrics. {} tell us there are no filters, normally you would put the job name of whatever the scraping rule, however since these names vary we will leave it blank. Splitting the Problem in Half \u00b6 To address a bottleneck in the system, we will take the approach of finding a metric that shows us there is a problem upstream or downstream as this allows us to split the problem in half. It will also be a core tenet of how we display our metrics data. A good place to start with this process is the API server, as it allow us to see if there\u2019s a problem with a client application or the Control Plane.","title":"The theory behind scaling ({'name': 'English', 'build': True})"},{"location":"scalability/docs/scaling_theory/#kubernetes-scaling-theory","text":"","title":"Kubernetes Scaling Theory"},{"location":"scalability/docs/scaling_theory/#nodes-vs-churn-rate","text":"Often when we discuss the scalability of Kubernetes, we do so in terms of how many nodes there are in a single cluster. Interestingly, this is seldom the most useful metric for understanding scalability. For example, a 5,000 node cluster with a large but fixed number of pods would not put a great deal of stress on the control plane after the initial setup. However, if we took a 1,000 node cluster and tried creating 10,000 short lived jobs in less than a minute, it would put a great deal of sustained pressure on the control plane. Simply using the number of nodes to understand scaling can be misleading. It\u2019s better to think in terms of the rate of change that occurs within a specific period of time (let\u2019s use a 5 minute interval for this discussion, as this is what Prometheus queries typically use by default). Let\u2019s explore why framing the problem in terms of the rate of change can give us a better idea of what to tune to achieve our desired scale.","title":"Nodes vs. Churn Rate"},{"location":"scalability/docs/scaling_theory/#thinking-in-queries-per-second","text":"Kubernetes has a number of protection mechanisms for each component - the Kubelet, Scheduler, Kube Controller Manager, and API server - to prevent overwhelming the next link in the Kubernetes chain. For example, the Kubelet has a flag to throttle calls to the API server at a certain rate. These protection mechanisms are generally, but not always, expressed in terms of queries allowed on a per second basis or QPS. Great care must be taken when changing these QPS settings. Removing one bottleneck, such as the queries per second on a Kubelet will have an impact on other down stream components. This can and will overwhelm the system above a certain rate, so understanding and monitoring each part of the service chain is key to successfully scaling workloads on Kubernetes. Note The API server has a more complex system with introduction of API Priority and Fairness which we will discuss separately. Note Caution, some metrics seem like the right fit but are in fact measuring something else. As an example, kubelet_http_inflight_requests relates to just the metrics server in Kubelet, not the number of requests from Kubelet to apiserver requests. This could cause us to misconfigure the QPS flag on the Kubelet. A query on audit logs for a particular Kubelet would be a more reliable way to check metrics.","title":"Thinking in Queries Per Second"},{"location":"scalability/docs/scaling_theory/#scaling-distributed-components","text":"Since EKS is a managed service, let\u2019s split the Kubernetes components into two categories: AWS managed components which include etcd, Kube Controller Manager, and the Scheduler (on the left part of diagram), and customer configurable components such as the Kubelet, Container Runtime, and the various operators that call AWS APIs such as the Networking and Storage drivers (on the right part of diagram). We leave the API server in the middle even though it is AWS managed, as the settings for API Priority and Fairness can be configured by customers.","title":"Scaling Distributed Components"},{"location":"scalability/docs/scaling_theory/#upstream-and-downstream-bottlenecks","text":"As we monitor each service, it\u2019s important to look at metrics in both directions to look for bottlenecks. Let\u2019s learn how to do this by using Kubelet as an example. Kubelet talks both to the API server and the container runtime; how and what do we need to monitor to detect whether either component is experiencing an issue?","title":"Upstream and Downstream Bottlenecks"},{"location":"scalability/docs/scaling_theory/#how-many-pods-per-node","text":"When we look at scaling numbers, such as how many pods can run on a node, we could take the 110 pods per node that upstream supports at face value. Note https://kubernetes.io/docs/setup/best-practices/cluster-large/ However, your workload is likely more complex than what was tested in a scalability test in Upstream. To ensure we can service the number of pods we want to run in production, let\u2019s make sure that the Kubelet is \u201ckeeping up\u201d with the Containerd runtime. To oversimplify, the Kubelet is getting the status of the pods from the container runtime (in our case Containerd). What if we had too many pods changing status too quickly? If the rate of change is too high, requests [to the container runtime] can timeout. Note Kubernetes is constantly evolving, this subsystem is currently undergoing changes. https://github.com/kubernetes/enhancements/issues/3386 In the graph above, we see a flat line indicating we have just hit the timeout value for the pod lifecycle event generation duration metric. If you would like to see this in your own cluster you could use the following PromQL syntax. increase(kubelet_pleg_relist_duration_seconds_bucket{instance=\"$instance\"}[$__rate_interval]) If we witness this timeout behavior, we know we pushed the node over the limit it was capable of. We need to fix the cause of the timeout before proceeding further. This could be achieved by reducing the number of pods per node, or looking for errors that might be causing a high volume of retries (thus effecting the churn rate). The important take-away is that metrics are the best way to understand if a node is able to handle the churn rate of the pods assigned vs. using a fixed number.","title":"How many Pods per Node"},{"location":"scalability/docs/scaling_theory/#scale-by-metrics","text":"While the concept of using metrics to optimize systems is an old one, it\u2019s often overlooked as people begin their Kubernetes journey. Instead of focusing on specific numbers (i.e. 110 pods per node), we focus our efforts on finding the metrics that help us find bottlenecks in our system. Understanding the right thresholds for these metrics can give us a high degree of confidence our system is optimally configured.","title":"Scale by Metrics"},{"location":"scalability/docs/scaling_theory/#the-impact-of-changes","text":"A common pattern that could get us into trouble is focusing on the first metric or log error that looks suspect. When we saw that the Kubelet was timing out earlier, we could try random things, such as increasing the per second rate that the Kubelet is allowed to send, etc. However, it is wise to look at the whole picture of everything downstream of the error we find first. Make each change with purpose and backed by data . Downstream of the Kubelet would be the Containerd runtime (pod errors), DaemonSets such as the storage driver (CSI) and the network driver (CNI) that talk to the EC2 API, etc. Let\u2019s continue our earlier example of the Kubelet not keeping up with the runtime. There are a number of points where we could bin pack a node so densely that it triggers errors. When designing the right node size for our workloads these are easy-to-overlook signals that might be putting unnecessary pressure on the system thus limiting both our scale and performance.","title":"The Impact of Changes"},{"location":"scalability/docs/scaling_theory/#the-cost-of-unnecessary-errors","text":"Kubernetes controllers excel at retrying when error conditions arise, however this comes at a cost. These retries can increase the pressure on components such as the Kube Controller Manager. It is an important tenant of scale testing to monitor for such errors. When fewer errors are occurring, it is easier spot issues in the system. By periodically ensuring that our clusters are error free before major operations (such as upgrades) we can simplify troubleshooting logs when unforeseen events happen.","title":"The Cost of Unnecessary Errors"},{"location":"scalability/docs/scaling_theory/#expanding-our-view","text":"In large scale clusters with 1,000\u2019s of nodes we don\u2019t want to look for bottlenecks individually. In PromQL we can find the highest values in a data set using a function called topk; K being a variable we place the number of items we want. Here we use three nodes to get an idea whether all of the the Kubelets in the cluster are saturated. We have been looking at latency up to this point, now let\u2019s see if the Kubelet is discarding events. topk(3, increase(kubelet_pleg_discard_events{}[$__rate_interval])) Breaking this statement down. We use the Grafana variable $__rate_interval to ensure it gets the four samples it needs. This bypasses a complex topic in monitoring with a simple variable. topk give us just the top results and the number 3 limits those results to three. This is a useful function for cluster wide metrics. {} tell us there are no filters, normally you would put the job name of whatever the scraping rule, however since these names vary we will leave it blank.","title":"Expanding Our View"},{"location":"scalability/docs/scaling_theory/#splitting-the-problem-in-half","text":"To address a bottleneck in the system, we will take the approach of finding a metric that shows us there is a problem upstream or downstream as this allows us to split the problem in half. It will also be a core tenet of how we display our metrics data. A good place to start with this process is the API server, as it allow us to see if there\u2019s a problem with a client application or the Control Plane.","title":"Splitting the Problem in Half"},{"location":"scalability/docs/workloads.kr/","text":"{'name': 'English', 'build': True} \uc6cc\ud06c\ub85c\ub4dc \u00b6 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \uaddc\ubaa8\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. Kubernetes API\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubcf4\uc720\ud560 \uc218 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ucd1d\ub7c9\uc744 \uc81c\ud55c\ud558\uc9c0\ub9cc, \ubd80\ud558\ub97c \uc904\uc774\uae30 \uc704\ud574 \ubcc0\uacbd\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uae30\ubcf8\uac12\uc774 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ud06c\ub85c\ub4dc\ub294 Kubernetes API\uc640 \ud1b5\ud569\ub418\ub294 \uae30\ub2a5(\uc608: Secrets \ubc0f ServiceAccount)\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774\ub7ec\ud55c \uae30\ub2a5\uc774 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\ubbc0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.\uc6cc\ud06c\ub85c\ub4dc \uc561\uc138\uc2a4\uc640 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc744 \uc81c\ud55c\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc218\uac00 \uc99d\uac00\ud558\uace0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ubd88\ud544\uc694\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uac70\ud558\uace0 \ucd5c\uc18c \uad8c\ud55c \uad00\ud589\uc744 \uad6c\ud604\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf4\uc548\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uace0\ud558\uc138\uc694. \ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc5d0 IPv6 \uc0ac\uc6a9\ud558\uae30 \u00b6 VPC\ub97c IPv4\uc5d0\uc11c IPv6\uc73c\ub85c \uc804\ud658\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc804\uc5d0 IPv6\ub97c \ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub2e4\ub9cc VPC\uc5d0\uc11c IPv6\ub97c \ud65c\uc131\ud654\ud55c\ub2e4\uace0 \ud574\uc11c \ubc18\ub4dc\uc2dc \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2c8\uba70, \ud30c\ub4dc \ubc0f \uc11c\ube44\uc2a4\uac00 IPv6\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 IPv4 \uc8fc\uc18c\ub97c \uc624\uac00\ub294 \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uace0\ud558\uc138\uc694. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c IPv6 \uc0ac\uc6a9\ud558\uae30 \ud29c\ud1a0\ub9ac\uc5bc \ub97c \uc0ac\uc6a9\ud558\uba74 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud655\uc7a5 \uc81c\ud55c\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \uc5c6\uc5b4 \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub294 IP \uc8fc\uc18c \uace0\uac08\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \ub610\ud55c \ub178\ub4dc\ub2f9 ENI \uc5b4\ud0dc\uce58\uba3c\ud2b8 \uc218\ub97c \uc904\uc5ec \ud30c\ub4dc\uac00 IP \uc8fc\uc18c\ub97c \ub354 \ube60\ub974\uac8c \uc218\uc2e0\ud558\ubbc0\ub85c \ub178\ub4dc\ub2f9 \uc131\ub2a5\ub3c4 \uac1c\uc120\ub418\uc5c8\uc2b5\ub2c8\ub2e4. VPC CNI\uc758 IPv4 \uc811\ub450\uc0ac \ubaa8\ub4dc \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc720\uc0ac\ud55c \ub178\ub4dc \uc131\ub2a5\uc744 \uc5bb\uc744 \uc218 \uc788\uc9c0\ub9cc, \uc5ec\uc804\ud788 VPC\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\uac00 \ucda9\ubd84\ud55c\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218 \uc81c\ud55c \u00b6 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ucd5c\ub300 \uc11c\ube44\uc2a4 \uc218\ub294 5,000\uac1c\uc774\uace0 \ud074\ub7ec\uc2a4\ud130\uc758 \ucd5c\ub300 \uc11c\ube44\uc2a4 \uc218\ub294 10,000\uac1c \uc785\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc640 \uc11c\ube44\uc2a4\ub97c \uad6c\uc131\ud558\uace0, \uc131\ub2a5\uc744 \ub192\uc774\uace0, \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc94\uc704 \ub9ac\uc18c\uc2a4\uac00 \uc5f0\uc1c4\uc801\uc73c\ub85c \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\ub97c 500\uac1c\ub85c \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. kube-proxy\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub2f9 \uc0dd\uc131\ub418\ub294 IP \ud14c\uc774\ube14 \uaddc\uce59\uc758 \uc218\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ucd1d \uc11c\ube44\uc2a4 \uc218\uc5d0 \ub530\ub77c \uc99d\uac00\ud569\ub2c8\ub2e4.\uc218\ucc9c \uac1c\uc758 IP \ud14c\uc774\ube14 \uaddc\uce59\uc744 \uc0dd\uc131\ud558\uace0 \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \ud1b5\ud574 \ud328\ud0b7\uc744 \ub77c\uc6b0\ud305\ud558\uba74 \ub178\ub4dc\uc758 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uace0 \ub124\ud2b8\uc6cc\ud06c \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\uac00 500\uac1c \ubbf8\ub9cc\uc778 \uacbd\uc6b0 \ub2e8\uc77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud658\uacbd\uc744 \ud3ec\ud568\ud558\ub294 Kubernetes \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \uc774\ub807\uac8c \ud558\uba74 \uc11c\ube44\uc2a4 \uac80\uc0c9 \uc81c\ud55c\uc744 \ud53c\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \uc11c\ube44\uc2a4 \uac80\uc0c9 \ud06c\uae30\uac00 \uc791\uc544\uc9c0\uace0 \uc11c\ube44\uc2a4 \uc774\ub984 \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud558\ub294 \ub370\ub3c4 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud658\uacbd(\uc608: dev, test, prod) \uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub300\uc2e0 \ubcc4\ub3c4\uc758 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. Elastic Load Balancer \ud560\ub2f9\ub7c9 \uc774\ud574 \u00b6 \uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 \ub85c\ub4dc \ubc38\ub7f0\uc2f1 \uc720\ud615(\uc608: \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c (NLB) \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\ub4dc \ubc38\ub7f0\uc11c (ALB)) \ub97c \uace0\ub824\ud558\uc138\uc694. \uac01 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc720\ud615\uc740 \uc11c\ub85c \ub2e4\ub978 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uba70 \ud560\ub2f9\ub7c9 \uc774 \ub2e4\ub985\ub2c8\ub2e4. \uae30\ubcf8 \ud560\ub2f9\ub7c9 \uc911 \uc77c\ubd80\ub294 \uc870\uc815\ud560 \uc218 \uc788\uc9c0\ub9cc \uc77c\ubd80 \ud560\ub2f9\ub7c9 \ucd5c\ub300\uac12\uc740 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uacc4\uc815 \ud560\ub2f9\ub7c9 \ubc0f \uc0ac\uc6a9\ub7c9\uc744 \ubcf4\ub824\uba74 AWS \ucf58\uc194\uc758 \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \ub300\uc2dc\ubcf4\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4, \uae30\ubcf8 ALB \ubaa9\ud45c\ub294 1000\uc785\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 1,000\uac1c\uac00 \ub118\ub294 \uc11c\ube44\uc2a4\uac00 \uc788\ub294 \uacbd\uc6b0 \ud560\ub2f9\ub7c9\uc744 \ub298\ub9ac\uac70\ub098 \uc11c\ube44\uc2a4\ub97c \uc5ec\ub7ec ALB\ub85c \ubd84\ud560\ud558\uac70\ub098 Kubernetes Ingress\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8 NLB \ub300\uc0c1\uc740 3000\uc774\uc9c0\ub9cc AZ\ub2f9 500\uac1c \ub300\uc0c1\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c NLB \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 500\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \uc5ec\ub7ec AZ\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ud560\ub2f9\ub7c9 \ud55c\ub3c4 \uc99d\uac00\ub97c \uc694\uccad\ud574\uc57c \ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS Load Balancer Controller\ub294 \uc218\uc2e0 \ub9ac\uc18c\uc2a4\uc6a9 ALB\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc, \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc804\uc6a9 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc2e4\ud589\ud558\ub294 \uac83\ub3c4 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc5ed\ubc29\ud5a5 \ud504\ub85d\uc2dc\ub97c \uc2e4\ud589\ud558\uc5ec \ub2e8\uc77c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \uc5ec\ub7ec Kubernetes \uc11c\ube44\uc2a4\ub97c \ub178\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub294 Gateway API \uc9c0\uc6d0\uacfc \uac19\uc740 \ub2e4\uc591\ud55c \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc218\uc640 \uaddc\ubaa8\uc5d0 \ub530\ub77c \uc774\uc810\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Route 53, Global Accelerator, \ub610\ub294 CloudFront \uc0ac\uc6a9\ud558\uae30 \u00b6 \uc5ec\ub7ec \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\ub294 \uc11c\ube44\uc2a4\ub97c \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 Amazon CloudFront , AWS \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130 \ub610\ub294 Amazon Route 53 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ub2e8\uc77c \uace0\uac1d \ub300\uc0c1 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \ub178\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 \uc635\uc158\uc5d0\ub294 \uc11c\ub85c \ub2e4\ub978 \uc774\uc810\uc774 \uc788\uc73c\uba70 \ud544\uc694\uc5d0 \ub530\ub77c \uac1c\ubcc4\uc801\uc73c\ub85c \ub610\ub294 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Route 53\uc740 \uacf5\ud1b5 \uc774\ub984\uc73c\ub85c \uc5ec\ub7ec \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ub178\ucd9c\ud560 \uc218 \uc788\uc73c\uba70 \ud560\ub2f9\ub41c \uac00\uc911\uce58\uc5d0 \ub530\ub77c \uac01 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \ud2b8\ub798\ud53d\uc744 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \uac00\uc911\uce58 \uc124\uba85\uc11c\uc5d0 \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc73c\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc678\ubd80 DNS \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc740 AWS Load Balancer Controller \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\ub294 \uc694\uccad IP \uc8fc\uc18c\ub97c \uae30\ubc18\uc73c\ub85c \uac00\uc7a5 \uac00\uae4c\uc6b4 \uc9c0\uc5ed\uc73c\ub85c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc5ec\ub7ec \uc9c0\uc5ed\uc5d0 \ubc30\ud3ec\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc720\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \ub2e8\uc77c \uc9c0\uc5ed\uc758 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub85c\uc758 \ub77c\uc6b0\ud305\uc744 \uac1c\uc120\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.Route 53\uc744 \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 AZ\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc0c1\ud0dc \uc810\uac80 \ubc0f \uc790\ub3d9 \uc7a5\uc560 \uc870\uce58\uc640 \uac19\uc740 \ucd94\uac00\uc801\uc778 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. Route 53\uacfc \ud568\uaed8 \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\ub294 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudFront\ub294 Route 53 \ubc0f \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uac70\ub098 \ub2e8\ub3c5\uc73c\ub85c \ud2b8\ub798\ud53d\uc744 \uc5ec\ub7ec \ubaa9\uc801\uc9c0\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudFront\ub294 \uc624\ub9ac\uc9c4 \uc18c\uc2a4\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uc790\uc0b0\uc744 \uce90\uc2dc\ud558\ubbc0\ub85c \uc81c\uacf5\ud558\ub294 \ub300\uc0c1\uc5d0 \ub530\ub77c \ub300\uc5ed\ud3ed \uc694\uad6c \uc0ac\ud56d\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8(Endpoints) \ub300\uc2e0\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4(EndpointSlices) \uc0ac\uc6a9\ud558\uae30 \u00b6 \uc11c\ube44\uc2a4 \ub77c\ubca8\uacfc \uc77c\uce58\ud558\ub294 \ud30c\ub4dc\ub97c \ubc1c\uacac\ud560 \ub54c\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub300\uc2e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4 \ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc11c\ube44\uc2a4\ub97c \uc18c\uaddc\ubaa8\ub85c \ub178\ucd9c\ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \ubc29\ubc95\uc774\uc5c8\uc9c0\ub9cc, \ub300\uaddc\ubaa8 \uc11c\ube44\uc2a4\uac00 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ub418\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \ub9ce\uc740 \ud2b8\ub798\ud53d\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\uc5d0\ub294 \ud1a0\ud3f4\ub85c\uc9c0 \uc778\uc2dd \ud78c\ud2b8\uc640 \uac19\uc740 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc790\ub3d9 \uadf8\ub8f9\ud654 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee8\ud2b8\ub864\ub7ec\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec \uc124\uc815\uc744 \ud655\uc778\ud558\uace0 \ud544\uc694\ud55c \uacbd\uc6b0 \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. AWS Load Balancer Controller \uc758 \uacbd\uc6b0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 --enable-endpoint-slices \uc120\ud0dd\uc801 \ud50c\ub798\uadf8\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. \uac00\ub2a5\ud558\ub2e4\uba74 \ubcc0\uacbd \ubd88\uac00(immutable)\ud558\uace0 \uc678\ubd80(external) secrets \uc0ac\uc6a9\ud558\uae30 \u00b6 kubelet\uc740 \ud574\ub2f9 \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0 \ub300\ud55c \ubcfc\ub968\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc2dc\ud06c\ub9bf\uc758 \ud604\uc7ac \ud0a4\uc640 \uac12\uc744 \uce90\uc2dc\uc5d0 \ubcf4\uad00\ud55c\ub2e4. kubelet\uc740 \uc2dc\ud06c\ub9bf\uc744 \uac10\uc2dc\ud558\uc5ec \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud0d0\uc9c0\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\uc7a5\ub428\uc5d0 \ub530\ub77c \uc2dc\uacc4\uc758 \uc218\uac00 \uc99d\uac00\ud558\uba74 API \uc11c\ubc84 \uc131\ub2a5\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Secrets\uc758 \uac10\uc2dc \uc218\ub97c \uc904\uc774\ub294 \ub450 \uac00\uc9c0 \uc804\ub7b5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 AutoMountServiceAccountToken: false\ub97c \uc124\uc815\ud558\uc5ec \uc11c\ube44\uc2a4 \uacc4\uc815 \uc2dc\ud06c\ub9bf \uc790\ub3d9 \ud0d1\uc7ac\ub97c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc554\ud638\uac00 \uc815\uc801\uc774\uc5b4\uc11c \ud5a5\ud6c4 \uc218\uc815\ub418\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc554\ud638\ub97c \ubcc0\uacbd \ubd88\uac00\ub2a5 \uc73c\ub85c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624. kubelet\uc740 \ubcc0\uacbd \ubd88\uac00\ub2a5\ud55c \ube44\ubc00\uc5d0 \ub300\ud55c API \uac10\uc2dc \uae30\ub2a5\uc744 \uc720\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud30c\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ud558\ub294 \uac83\uc744 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \ub2e4\uc74c \uc124\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc124\uc815\uc744 \uc7ac\uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: v1 kind: ServiceAccount metadata: name: app automountServiceAccountToken: true \ud074\ub7ec\uc2a4\ud130\uc758 \uc554\ud638 \uc218\uac00 \uc81c\ud55c\uc778 10,000\uac1c\ub97c \ucd08\uacfc\ud558\uae30 \uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud558\uc138\uc694. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucd1d \uc554\ud638 \uc218\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc774 \ud55c\ub3c4\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. kubectl get secrets -A | wc -l \uc774 \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c \uc54c\ub9ac\ub3c4\ub85d \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. Secrets Store CSI \ub4dc\ub77c\uc774\ubc84 \uc640 \ud568\uaed8 AWS Key Management Service (AWS KMS) \ub610\ub294 Hashicorp Vault \uc640 \uac19\uc740 \uc678\ubd80 \ube44\ubc00 \uad00\ub9ac \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624. \ubc30\ud3ec \uc774\ub825 \uc81c\ud55c \u00b6 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\uc804 \uac1d\uccb4\uac00 \uacc4\uc18d \ucd94\uc801\ub418\ubbc0\ub85c \ud30c\ub4dc\ub97c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc0ad\uc81c\ud560 \ub54c \uc18d\ub3c4\uac00 \ub290\ub824\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc758 therevisionHistoryLimit \uc744 \uc904\uc774\uba74 \uad6c\ud615 \ub808\ud50c\ub9ac\uce74\uc14b\uc744 \uc815\ub9ac\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub9e4\ub2c8\uc800\uac00 \ucd94\uc801\ud558\ub294 \uc624\ube0c\uc81d\ud2b8\uc758 \ucd1d\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uae30\ubcf8 \uae30\ub85d \ud55c\ub3c4\ub294 10\uac1c\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 CronJobs\ub098 \ub2e4\ub978 \uba54\ucee4\ub2c8\uc998\uc744 \ud1b5\ud574 \ub9ce\uc740 \uc218\uc758 \uc791\uc5c5 \uac1c\uccb4\ub97c \uc0dd\uc131\ud558\ub294 \uacbd\uc6b0, TTLSecondsFinished \uc124\uc815 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \uc624\ub798\ub41c \ud30c\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc815\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc9c0\uc815\ub41c \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \uc131\uacf5\uc801\uc73c\ub85c \uc2e4\ud589\ub41c \uc791\uc5c5\uc774 \uc791\uc5c5 \uae30\ub85d\uc5d0\uc11c \uc81c\uac70\ub429\ub2c8\ub2e4. enableServiceLinks\ub97c \uae30\ubcf8\uc73c\ub85c \ube44\ud65c\uc131\ud654\ud558\uae30 \u00b6 \ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub420 \ub54c, kubelet\uc740 \uac01 \ud65c\uc131 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud658\uacbd \ubcc0\uc218 \uc138\ud2b8\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. Linux \ud504\ub85c\uc138\uc2a4\uc5d0\ub294 \ud658\uacbd\uc5d0 \ub9de\ub294 \ucd5c\ub300 \ud06c\uae30\uac00 \uc788\uc73c\uba70 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc11c\ube44\uc2a4\uac00 \ub108\ubb34 \ub9ce\uc73c\uba74 \uc774 \ud06c\uae30\uc5d0 \ub3c4\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\ub294 5,000\uac1c\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \uc774\ud6c4\uc5d0\ub294 \uc11c\ube44\uc2a4 \ud658\uacbd \ubcc0\uc218 \uc218\uac00 \uc178 \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\uc5ec \uc2dc\uc791 \uc2dc \ud30c\ub4dc\uac00 \ud06c\ub798\uc2dc\ub97c \uc77c\uc73c\ud0a4\uac8c \ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc11c\ube44\uc2a4 \uac80\uc0c9\uc5d0 \uc11c\ube44\uc2a4 \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\uc57c \ud558\ub294 \ub2e4\ub978 \uc774\uc720\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud658\uacbd \ubcc0\uc218 \uc774\ub984 \ucda9\ub3cc, \uc11c\ube44\uc2a4 \uc774\ub984 \uc720\ucd9c, \uc804\uccb4 \ud658\uacbd \ud06c\uae30 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uac80\uc0c9\ud558\ub824\uba74 CoreDNS\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4\ub2f9 \ub3d9\uc801 \uc5b4\ub4dc\ubbf8\uc158 \uc6f9\ud6c5(Webhook) \uc81c\ud55c\ud558\uae30 \u00b6 Dynamic Admission Webhooks \uc5d0\ub294 \uc5b4\ub4dc\ubbf8\uc158 \uc6f9\ud6c5\uacfc \ubba4\ud14c\uc774\ud305 \uc6f9\ud6c5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc18d\ud558\uc9c0 \uc54a\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c, \ub9ac\uc18c\uc2a4\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub85c \uc804\uc1a1\ub420 \ub54c \uc21c\uc11c\ub300\ub85c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uac01 \uc6f9\ud6c5\uc758 \uae30\ubcf8 \uc81c\ud55c \uc2dc\uac04\uc740 10\ucd08\uc774\uba70, \uc6f9\ud6c5\uc774 \uc5ec\ub7ec \uac1c \uc788\uac70\ub098 \uc81c\ud55c \uc2dc\uac04\uc774 \ucd08\uacfc\ub41c \uacbd\uc6b0 API \uc694\uccad\uc5d0 \uac78\ub9ac\ub294 \uc2dc\uac04\uc774 \ub298\uc5b4\ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 AZ \uc778\uc2dc\ub358\ud2b8 \ubc1c\uc0dd \uc2dc \uc6f9\ud6c5\uc758 \uac00\uc6a9\uc131\uc774 \ub192\uc740\uc9c0 \ud655\uc778\ud558\uace0 FailurePolicy \uac00 \ub9ac\uc18c\uc2a4\ub97c \uac70\ubd80\ud558\uac70\ub098 \uc2e4\ud328\ub97c \ubb34\uc2dc\ud558\ub3c4\ub85d \uc801\uc808\ud558\uac8c \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. --dry-run kubectl \uba85\ub839\uc774 \uc6f9\ud6c5\uc744 \uc6b0\ud68c\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\uc5ec \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \ub54c\ub294 \uc6f9\ud6c5\uc744 \ud638\ucd9c\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. apiVersion: admission.k8s.io/v1 kind: AdmissionReview request: dryRun: False \uc6f9\ud6c4\ud06c\ub97c \ubcc0\uacbd\ud558\uba74 \ub9ac\uc18c\uc2a4\ub97c \uc790\uc8fc \uc5f0\uc18d\uc801\uc73c\ub85c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubba4\ud14c\uc774\ud305 \uc6f9\ud6c5\uc774 5\uac1c \uc788\uace0 \ub9ac\uc18c\uc2a4 50\uac1c\ub97c \ubc30\ud3ec\ud558\uba74 \uc218\uc815\ub41c \ub9ac\uc18c\uc2a4\uc758 \uc774\uc804 \ubc84\uc804\uc744 \uc81c\uac70\ud558\uae30 \uc704\ud574 5\ubd84\ub9c8\ub2e4 \ucef4\ud329\uc158\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 etcd\ub294 \uac01 \ub9ac\uc18c\uc2a4\uc758 \ubaa8\ub4e0 \ubc84\uc804\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c etcd\uac00 \ub300\uccb4\ub41c \ub9ac\uc18c\uc2a4\ub97c \uc81c\uac70\ud558\uba74 etcd\uc5d0\uc11c 200\uac1c\uc758 \ub9ac\uc18c\uc2a4 \ubc84\uc804\uc774 \uc81c\uac70\ub418\uba70 \ub9ac\uc18c\uc2a4 \ud06c\uae30\uc5d0 \ub530\ub77c 15\ubd84\ub9c8\ub2e4 \uc870\uac01 \ubaa8\uc74c\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 etcd \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0c1\ub2f9\ud55c \uacf5\uac04\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc870\uac01 \ubaa8\uc74c(defragmentation)\uc73c\ub85c \uc778\ud574 etcd\uac00 \uc77c\uc2dc \uc911\uc9c0\ub418\uc5b4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ubc0f \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub2e4\ub978 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ub9ac\uc18c\uc2a4\ub97c \uc790\uc8fc \uc218\uc815\ud558\uac70\ub098 \uc218\ubc31 \uac1c\uc758 \ub9ac\uc18c\uc2a4\ub97c \uc21c\uc2dd\uac04\uc5d0 \uc5f0\uc18d\ud574\uc11c \uc218\uc815\ud558\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc6cc\ud06c\ub85c\ub4dc"},{"location":"scalability/docs/workloads.kr/#_1","text":"\uc6cc\ud06c\ub85c\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \ud655\uc7a5\ud560 \uc218 \uc788\ub294 \uaddc\ubaa8\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4. Kubernetes API\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubcf4\uc720\ud560 \uc218 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \ucd1d\ub7c9\uc744 \uc81c\ud55c\ud558\uc9c0\ub9cc, \ubd80\ud558\ub97c \uc904\uc774\uae30 \uc704\ud574 \ubcc0\uacbd\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uae30\ubcf8\uac12\uc774 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \uc6cc\ud06c\ub85c\ub4dc\ub294 Kubernetes API\uc640 \ud1b5\ud569\ub418\ub294 \uae30\ub2a5(\uc608: Secrets \ubc0f ServiceAccount)\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc9c0\ub9cc, \uc774\ub7ec\ud55c \uae30\ub2a5\uc774 \ud56d\uc0c1 \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\ubbc0\ub85c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.\uc6cc\ud06c\ub85c\ub4dc \uc561\uc138\uc2a4\uc640 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc744 \uc81c\ud55c\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc6cc\ud06c\ub85c\ub4dc \uc218\uac00 \uc99d\uac00\ud558\uace0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ubd88\ud544\uc694\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uac70\ud558\uace0 \ucd5c\uc18c \uad8c\ud55c \uad00\ud589\uc744 \uad6c\ud604\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ubcf4\uc548\uc744 \uac1c\uc120\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uace0\ud558\uc138\uc694.","title":"\uc6cc\ud06c\ub85c\ub4dc"},{"location":"scalability/docs/workloads.kr/#ipv6","text":"VPC\ub97c IPv4\uc5d0\uc11c IPv6\uc73c\ub85c \uc804\ud658\ud560 \uc218 \uc5c6\uc73c\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uae30 \uc804\uc5d0 IPv6\ub97c \ud65c\uc131\ud654\ud558\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \ub2e4\ub9cc VPC\uc5d0\uc11c IPv6\ub97c \ud65c\uc131\ud654\ud55c\ub2e4\uace0 \ud574\uc11c \ubc18\ub4dc\uc2dc \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uac83\uc740 \uc544\ub2c8\uba70, \ud30c\ub4dc \ubc0f \uc11c\ube44\uc2a4\uac00 IPv6\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0\uc5d0\ub3c4 IPv4 \uc8fc\uc18c\ub97c \uc624\uac00\ub294 \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 EKS \ub124\ud2b8\uc6cc\ud0b9 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \ucc38\uace0\ud558\uc138\uc694. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c IPv6 \uc0ac\uc6a9\ud558\uae30 \ud29c\ud1a0\ub9ac\uc5bc \ub97c \uc0ac\uc6a9\ud558\uba74 \uac00\uc7a5 \uc77c\ubc18\uc801\uc778 \ud074\ub7ec\uc2a4\ud130 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ud655\uc7a5 \uc81c\ud55c\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IPv6\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \uc5c6\uc5b4 \ud30c\ub4dc\uc640 \ub178\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc5c6\ub294 IP \uc8fc\uc18c \uace0\uac08\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \ub610\ud55c \ub178\ub4dc\ub2f9 ENI \uc5b4\ud0dc\uce58\uba3c\ud2b8 \uc218\ub97c \uc904\uc5ec \ud30c\ub4dc\uac00 IP \uc8fc\uc18c\ub97c \ub354 \ube60\ub974\uac8c \uc218\uc2e0\ud558\ubbc0\ub85c \ub178\ub4dc\ub2f9 \uc131\ub2a5\ub3c4 \uac1c\uc120\ub418\uc5c8\uc2b5\ub2c8\ub2e4. VPC CNI\uc758 IPv4 \uc811\ub450\uc0ac \ubaa8\ub4dc \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc720\uc0ac\ud55c \ub178\ub4dc \uc131\ub2a5\uc744 \uc5bb\uc744 \uc218 \uc788\uc9c0\ub9cc, \uc5ec\uc804\ud788 VPC\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 IP \uc8fc\uc18c\uac00 \ucda9\ubd84\ud55c\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ud30c\ub4dc \ub124\ud2b8\uc6cc\ud0b9\uc5d0 IPv6 \uc0ac\uc6a9\ud558\uae30"},{"location":"scalability/docs/workloads.kr/#_2","text":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ucd5c\ub300 \uc11c\ube44\uc2a4 \uc218\ub294 5,000\uac1c\uc774\uace0 \ud074\ub7ec\uc2a4\ud130\uc758 \ucd5c\ub300 \uc11c\ube44\uc2a4 \uc218\ub294 10,000\uac1c \uc785\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uc640 \uc11c\ube44\uc2a4\ub97c \uad6c\uc131\ud558\uace0, \uc131\ub2a5\uc744 \ub192\uc774\uace0, \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc94\uc704 \ub9ac\uc18c\uc2a4\uac00 \uc5f0\uc1c4\uc801\uc73c\ub85c \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\ub97c 500\uac1c\ub85c \uc81c\ud55c\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. kube-proxy\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\ub2f9 \uc0dd\uc131\ub418\ub294 IP \ud14c\uc774\ube14 \uaddc\uce59\uc758 \uc218\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ucd1d \uc11c\ube44\uc2a4 \uc218\uc5d0 \ub530\ub77c \uc99d\uac00\ud569\ub2c8\ub2e4.\uc218\ucc9c \uac1c\uc758 IP \ud14c\uc774\ube14 \uaddc\uce59\uc744 \uc0dd\uc131\ud558\uace0 \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \ud1b5\ud574 \ud328\ud0b7\uc744 \ub77c\uc6b0\ud305\ud558\uba74 \ub178\ub4dc\uc758 \uc131\ub2a5\uc774 \uc800\ud558\ub418\uace0 \ub124\ud2b8\uc6cc\ud06c \uc9c0\uc5f0 \uc2dc\uac04\uc774 \ub298\uc5b4\ub0a9\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\uac00 500\uac1c \ubbf8\ub9cc\uc778 \uacbd\uc6b0 \ub2e8\uc77c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud658\uacbd\uc744 \ud3ec\ud568\ud558\ub294 Kubernetes \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \uc774\ub807\uac8c \ud558\uba74 \uc11c\ube44\uc2a4 \uac80\uc0c9 \uc81c\ud55c\uc744 \ud53c\ud560 \uc218 \uc788\uc744 \ub9cc\ud07c \uc11c\ube44\uc2a4 \uac80\uc0c9 \ud06c\uae30\uac00 \uc791\uc544\uc9c0\uace0 \uc11c\ube44\uc2a4 \uc774\ub984 \ucda9\ub3cc\uc744 \ubc29\uc9c0\ud558\ub294 \ub370\ub3c4 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud658\uacbd(\uc608: dev, test, prod) \uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub300\uc2e0 \ubcc4\ub3c4\uc758 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218 \uc81c\ud55c"},{"location":"scalability/docs/workloads.kr/#elastic-load-balancer","text":"\uc11c\ube44\uc2a4\ub97c \uc0dd\uc131\ud560 \ub54c \uc0ac\uc6a9\ud560 \ub85c\ub4dc \ubc38\ub7f0\uc2f1 \uc720\ud615(\uc608: \ub124\ud2b8\uc6cc\ud06c \ub85c\ub4dc \ubc38\ub7f0\uc11c (NLB) \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\ub4dc \ubc38\ub7f0\uc11c (ALB)) \ub97c \uace0\ub824\ud558\uc138\uc694. \uac01 \ub85c\ub4dc \ubc38\ub7f0\uc11c \uc720\ud615\uc740 \uc11c\ub85c \ub2e4\ub978 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\uba70 \ud560\ub2f9\ub7c9 \uc774 \ub2e4\ub985\ub2c8\ub2e4. \uae30\ubcf8 \ud560\ub2f9\ub7c9 \uc911 \uc77c\ubd80\ub294 \uc870\uc815\ud560 \uc218 \uc788\uc9c0\ub9cc \uc77c\ubd80 \ud560\ub2f9\ub7c9 \ucd5c\ub300\uac12\uc740 \ubcc0\uacbd\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uacc4\uc815 \ud560\ub2f9\ub7c9 \ubc0f \uc0ac\uc6a9\ub7c9\uc744 \ubcf4\ub824\uba74 AWS \ucf58\uc194\uc758 \uc11c\ube44\uc2a4 \ud560\ub2f9\ub7c9 \ub300\uc2dc\ubcf4\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4, \uae30\ubcf8 ALB \ubaa9\ud45c\ub294 1000\uc785\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 1,000\uac1c\uac00 \ub118\ub294 \uc11c\ube44\uc2a4\uac00 \uc788\ub294 \uacbd\uc6b0 \ud560\ub2f9\ub7c9\uc744 \ub298\ub9ac\uac70\ub098 \uc11c\ube44\uc2a4\ub97c \uc5ec\ub7ec ALB\ub85c \ubd84\ud560\ud558\uac70\ub098 Kubernetes Ingress\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8 NLB \ub300\uc0c1\uc740 3000\uc774\uc9c0\ub9cc AZ\ub2f9 500\uac1c \ub300\uc0c1\uc73c\ub85c \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c NLB \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 500\uac1c \uc774\uc0c1\uc758 \ud30c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \uc5ec\ub7ec AZ\ub97c \uc0ac\uc6a9\ud558\uac70\ub098 \ud560\ub2f9\ub7c9 \ud55c\ub3c4 \uc99d\uac00\ub97c \uc694\uccad\ud574\uc57c \ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4\uc5d0 \uc5f0\uacb0\ub41c \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\ub294 \ub300\uc2e0 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS Load Balancer Controller\ub294 \uc218\uc2e0 \ub9ac\uc18c\uc2a4\uc6a9 ALB\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc, \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc804\uc6a9 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc2e4\ud589\ud558\ub294 \uac83\ub3c4 \uace0\ub824\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc5ed\ubc29\ud5a5 \ud504\ub85d\uc2dc\ub97c \uc2e4\ud589\ud558\uc5ec \ub2e8\uc77c \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c \uc5ec\ub7ec Kubernetes \uc11c\ube44\uc2a4\ub97c \ub178\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec\ub294 Gateway API \uc9c0\uc6d0\uacfc \uac19\uc740 \ub2e4\uc591\ud55c \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc218\uc640 \uaddc\ubaa8\uc5d0 \ub530\ub77c \uc774\uc810\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Elastic Load Balancer \ud560\ub2f9\ub7c9 \uc774\ud574"},{"location":"scalability/docs/workloads.kr/#route-53-global-accelerator-cloudfront","text":"\uc5ec\ub7ec \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \uc0ac\uc6a9\ud558\ub294 \uc11c\ube44\uc2a4\ub97c \ub2e8\uc77c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc0ac\uc6a9\ud558\ub824\uba74 Amazon CloudFront , AWS \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130 \ub610\ub294 Amazon Route 53 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ub2e8\uc77c \uace0\uac1d \ub300\uc0c1 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \ub178\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 \uc635\uc158\uc5d0\ub294 \uc11c\ub85c \ub2e4\ub978 \uc774\uc810\uc774 \uc788\uc73c\uba70 \ud544\uc694\uc5d0 \ub530\ub77c \uac1c\ubcc4\uc801\uc73c\ub85c \ub610\ub294 \ud568\uaed8 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Route 53\uc740 \uacf5\ud1b5 \uc774\ub984\uc73c\ub85c \uc5ec\ub7ec \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub97c \ub178\ucd9c\ud560 \uc218 \uc788\uc73c\uba70 \ud560\ub2f9\ub41c \uac00\uc911\uce58\uc5d0 \ub530\ub77c \uac01 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \ud2b8\ub798\ud53d\uc744 \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. DNS \uac00\uc911\uce58 \uc124\uba85\uc11c\uc5d0 \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc73c\uba70 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc678\ubd80 DNS \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc740 AWS Load Balancer Controller \uc124\uba85\uc11c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\ub294 \uc694\uccad IP \uc8fc\uc18c\ub97c \uae30\ubc18\uc73c\ub85c \uac00\uc7a5 \uac00\uae4c\uc6b4 \uc9c0\uc5ed\uc73c\ub85c \uc6cc\ud06c\ub85c\ub4dc\ub97c \ub77c\uc6b0\ud305\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc5ec\ub7ec \uc9c0\uc5ed\uc5d0 \ubc30\ud3ec\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc720\uc6a9\ud560 \uc218 \uc788\uc9c0\ub9cc \ub2e8\uc77c \uc9c0\uc5ed\uc758 \ub2e8\uc77c \ud074\ub7ec\uc2a4\ud130\ub85c\uc758 \ub77c\uc6b0\ud305\uc744 \uac1c\uc120\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4.Route 53\uc744 \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uba74 AZ\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uacbd\uc6b0 \uc0c1\ud0dc \uc810\uac80 \ubc0f \uc790\ub3d9 \uc7a5\uc560 \uc870\uce58\uc640 \uac19\uc740 \ucd94\uac00\uc801\uc778 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. Route 53\uacfc \ud568\uaed8 \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uc608\ub294 \uc774 \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c \uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudFront\ub294 Route 53 \ubc0f \uae00\ub85c\ubc8c \uc561\uc140\ub7ec\ub808\uc774\ud130\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uac70\ub098 \ub2e8\ub3c5\uc73c\ub85c \ud2b8\ub798\ud53d\uc744 \uc5ec\ub7ec \ubaa9\uc801\uc9c0\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudFront\ub294 \uc624\ub9ac\uc9c4 \uc18c\uc2a4\uc5d0\uc11c \uc81c\uacf5\ub418\ub294 \uc790\uc0b0\uc744 \uce90\uc2dc\ud558\ubbc0\ub85c \uc81c\uacf5\ud558\ub294 \ub300\uc0c1\uc5d0 \ub530\ub77c \ub300\uc5ed\ud3ed \uc694\uad6c \uc0ac\ud56d\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Route 53, Global Accelerator, \ub610\ub294 CloudFront \uc0ac\uc6a9\ud558\uae30"},{"location":"scalability/docs/workloads.kr/#endpoints-endpointslices","text":"\uc11c\ube44\uc2a4 \ub77c\ubca8\uacfc \uc77c\uce58\ud558\ub294 \ud30c\ub4dc\ub97c \ubc1c\uacac\ud560 \ub54c\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ub300\uc2e0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4 \ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc11c\ube44\uc2a4\ub97c \uc18c\uaddc\ubaa8\ub85c \ub178\ucd9c\ud560 \uc218 \uc788\ub294 \uac04\ub2e8\ud55c \ubc29\ubc95\uc774\uc5c8\uc9c0\ub9cc, \ub300\uaddc\ubaa8 \uc11c\ube44\uc2a4\uac00 \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ub418\uac70\ub098 \uc5c5\ub370\uc774\ud2b8\ub418\uba74 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0\uc11c \ub9ce\uc740 \ud2b8\ub798\ud53d\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\uc5d0\ub294 \ud1a0\ud3f4\ub85c\uc9c0 \uc778\uc2dd \ud78c\ud2b8\uc640 \uac19\uc740 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc790\ub3d9 \uadf8\ub8f9\ud654 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ubaa8\ub4e0 \ucee8\ud2b8\ub864\ub7ec\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \ucee8\ud2b8\ub864\ub7ec \uc124\uc815\uc744 \ud655\uc778\ud558\uace0 \ud544\uc694\ud55c \uacbd\uc6b0 \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. AWS Load Balancer Controller \uc758 \uacbd\uc6b0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 --enable-endpoint-slices \uc120\ud0dd\uc801 \ud50c\ub798\uadf8\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5d4\ub4dc\ud3ec\uc778\ud2b8(Endpoints) \ub300\uc2e0\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc2ac\ub77c\uc774\uc2a4(EndpointSlices) \uc0ac\uc6a9\ud558\uae30"},{"location":"scalability/docs/workloads.kr/#immutable-external-secrets","text":"kubelet\uc740 \ud574\ub2f9 \ub178\ub4dc\uc758 \ud30c\ub4dc\uc5d0 \ub300\ud55c \ubcfc\ub968\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \uc2dc\ud06c\ub9bf\uc758 \ud604\uc7ac \ud0a4\uc640 \uac12\uc744 \uce90\uc2dc\uc5d0 \ubcf4\uad00\ud55c\ub2e4. kubelet\uc740 \uc2dc\ud06c\ub9bf\uc744 \uac10\uc2dc\ud558\uc5ec \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud0d0\uc9c0\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\uc7a5\ub428\uc5d0 \ub530\ub77c \uc2dc\uacc4\uc758 \uc218\uac00 \uc99d\uac00\ud558\uba74 API \uc11c\ubc84 \uc131\ub2a5\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Secrets\uc758 \uac10\uc2dc \uc218\ub97c \uc904\uc774\ub294 \ub450 \uac00\uc9c0 \uc804\ub7b5\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacbd\uc6b0 AutoMountServiceAccountToken: false\ub97c \uc124\uc815\ud558\uc5ec \uc11c\ube44\uc2a4 \uacc4\uc815 \uc2dc\ud06c\ub9bf \uc790\ub3d9 \ud0d1\uc7ac\ub97c \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc554\ud638\uac00 \uc815\uc801\uc774\uc5b4\uc11c \ud5a5\ud6c4 \uc218\uc815\ub418\uc9c0 \uc54a\uc744 \uacbd\uc6b0 \uc554\ud638\ub97c \ubcc0\uacbd \ubd88\uac00\ub2a5 \uc73c\ub85c \ud45c\uc2dc\ud558\uc2ed\uc2dc\uc624. kubelet\uc740 \ubcc0\uacbd \ubd88\uac00\ub2a5\ud55c \ube44\ubc00\uc5d0 \ub300\ud55c API \uac10\uc2dc \uae30\ub2a5\uc744 \uc720\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud30c\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ud558\ub294 \uac83\uc744 \ube44\ud65c\uc131\ud654\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \ub2e4\uc74c \uc124\uc815\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uc815 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc124\uc815\uc744 \uc7ac\uc815\uc758\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. apiVersion: v1 kind: ServiceAccount metadata: name: app automountServiceAccountToken: true \ud074\ub7ec\uc2a4\ud130\uc758 \uc554\ud638 \uc218\uac00 \uc81c\ud55c\uc778 10,000\uac1c\ub97c \ucd08\uacfc\ud558\uae30 \uc804\uc5d0 \ubaa8\ub2c8\ud130\ub9c1\ud558\uc138\uc694. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \ucd1d \uc554\ud638 \uc218\ub97c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\ub97c \ud1b5\ud574 \uc774 \ud55c\ub3c4\ub97c \ubaa8\ub2c8\ud130\ub9c1\ud574\uc57c \ud569\ub2c8\ub2e4. kubectl get secrets -A | wc -l \uc774 \ud55c\ub3c4\uc5d0 \ub3c4\ub2ec\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c \uc54c\ub9ac\ub3c4\ub85d \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. Secrets Store CSI \ub4dc\ub77c\uc774\ubc84 \uc640 \ud568\uaed8 AWS Key Management Service (AWS KMS) \ub610\ub294 Hashicorp Vault \uc640 \uac19\uc740 \uc678\ubd80 \ube44\ubc00 \uad00\ub9ac \uc635\uc158\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud574 \ubcf4\uc2ed\uc2dc\uc624.","title":"\uac00\ub2a5\ud558\ub2e4\uba74 \ubcc0\uacbd \ubd88\uac00(immutable)\ud558\uace0 \uc678\ubd80(external) secrets \uc0ac\uc6a9\ud558\uae30"},{"location":"scalability/docs/workloads.kr/#_3","text":"\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\uc804 \uac1d\uccb4\uac00 \uacc4\uc18d \ucd94\uc801\ub418\ubbc0\ub85c \ud30c\ub4dc\ub97c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc0ad\uc81c\ud560 \ub54c \uc18d\ub3c4\uac00 \ub290\ub824\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8 \uc758 therevisionHistoryLimit \uc744 \uc904\uc774\uba74 \uad6c\ud615 \ub808\ud50c\ub9ac\uce74\uc14b\uc744 \uc815\ub9ac\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ub9e4\ub2c8\uc800\uac00 \ucd94\uc801\ud558\ub294 \uc624\ube0c\uc81d\ud2b8\uc758 \ucd1d\ub7c9\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\uc758 \uae30\ubcf8 \uae30\ub85d \ud55c\ub3c4\ub294 10\uac1c\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uac00 CronJobs\ub098 \ub2e4\ub978 \uba54\ucee4\ub2c8\uc998\uc744 \ud1b5\ud574 \ub9ce\uc740 \uc218\uc758 \uc791\uc5c5 \uac1c\uccb4\ub97c \uc0dd\uc131\ud558\ub294 \uacbd\uc6b0, TTLSecondsFinished \uc124\uc815 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \uc624\ub798\ub41c \ud30c\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc815\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc9c0\uc815\ub41c \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \uc131\uacf5\uc801\uc73c\ub85c \uc2e4\ud589\ub41c \uc791\uc5c5\uc774 \uc791\uc5c5 \uae30\ub85d\uc5d0\uc11c \uc81c\uac70\ub429\ub2c8\ub2e4.","title":"\ubc30\ud3ec \uc774\ub825 \uc81c\ud55c"},{"location":"scalability/docs/workloads.kr/#enableservicelinks","text":"\ud30c\ub4dc\uac00 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub420 \ub54c, kubelet\uc740 \uac01 \ud65c\uc131 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ud658\uacbd \ubcc0\uc218 \uc138\ud2b8\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. Linux \ud504\ub85c\uc138\uc2a4\uc5d0\ub294 \ud658\uacbd\uc5d0 \ub9de\ub294 \ucd5c\ub300 \ud06c\uae30\uac00 \uc788\uc73c\uba70 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc11c\ube44\uc2a4\uac00 \ub108\ubb34 \ub9ce\uc73c\uba74 \uc774 \ud06c\uae30\uc5d0 \ub3c4\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub2f9 \uc11c\ube44\uc2a4 \uc218\ub294 5,000\uac1c\ub97c \ucd08\uacfc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uadf8 \uc774\ud6c4\uc5d0\ub294 \uc11c\ube44\uc2a4 \ud658\uacbd \ubcc0\uc218 \uc218\uac00 \uc178 \ud55c\ub3c4\ub97c \ucd08\uacfc\ud558\uc5ec \uc2dc\uc791 \uc2dc \ud30c\ub4dc\uac00 \ud06c\ub798\uc2dc\ub97c \uc77c\uc73c\ud0a4\uac8c \ub429\ub2c8\ub2e4. \ud30c\ub4dc\uac00 \uc11c\ube44\uc2a4 \uac80\uc0c9\uc5d0 \uc11c\ube44\uc2a4 \ud658\uacbd \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\uc57c \ud558\ub294 \ub2e4\ub978 \uc774\uc720\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud658\uacbd \ubcc0\uc218 \uc774\ub984 \ucda9\ub3cc, \uc11c\ube44\uc2a4 \uc774\ub984 \uc720\ucd9c, \uc804\uccb4 \ud658\uacbd \ud06c\uae30 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uac80\uc0c9\ud558\ub824\uba74 CoreDNS\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"enableServiceLinks\ub97c \uae30\ubcf8\uc73c\ub85c \ube44\ud65c\uc131\ud654\ud558\uae30"},{"location":"scalability/docs/workloads.kr/#webhook","text":"Dynamic Admission Webhooks \uc5d0\ub294 \uc5b4\ub4dc\ubbf8\uc158 \uc6f9\ud6c5\uacfc \ubba4\ud14c\uc774\ud305 \uc6f9\ud6c5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc5d0 \uc18d\ud558\uc9c0 \uc54a\ub294 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c, \ub9ac\uc18c\uc2a4\uac00 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub85c \uc804\uc1a1\ub420 \ub54c \uc21c\uc11c\ub300\ub85c \ud638\ucd9c\ub429\ub2c8\ub2e4. \uac01 \uc6f9\ud6c5\uc758 \uae30\ubcf8 \uc81c\ud55c \uc2dc\uac04\uc740 10\ucd08\uc774\uba70, \uc6f9\ud6c5\uc774 \uc5ec\ub7ec \uac1c \uc788\uac70\ub098 \uc81c\ud55c \uc2dc\uac04\uc774 \ucd08\uacfc\ub41c \uacbd\uc6b0 API \uc694\uccad\uc5d0 \uac78\ub9ac\ub294 \uc2dc\uac04\uc774 \ub298\uc5b4\ub0a0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\ud788 AZ \uc778\uc2dc\ub358\ud2b8 \ubc1c\uc0dd \uc2dc \uc6f9\ud6c5\uc758 \uac00\uc6a9\uc131\uc774 \ub192\uc740\uc9c0 \ud655\uc778\ud558\uace0 FailurePolicy \uac00 \ub9ac\uc18c\uc2a4\ub97c \uac70\ubd80\ud558\uac70\ub098 \uc2e4\ud328\ub97c \ubb34\uc2dc\ud558\ub3c4\ub85d \uc801\uc808\ud558\uac8c \uc124\uc815\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. --dry-run kubectl \uba85\ub839\uc774 \uc6f9\ud6c5\uc744 \uc6b0\ud68c\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\uc5ec \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \ub54c\ub294 \uc6f9\ud6c5\uc744 \ud638\ucd9c\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. apiVersion: admission.k8s.io/v1 kind: AdmissionReview request: dryRun: False \uc6f9\ud6c4\ud06c\ub97c \ubcc0\uacbd\ud558\uba74 \ub9ac\uc18c\uc2a4\ub97c \uc790\uc8fc \uc5f0\uc18d\uc801\uc73c\ub85c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubba4\ud14c\uc774\ud305 \uc6f9\ud6c5\uc774 5\uac1c \uc788\uace0 \ub9ac\uc18c\uc2a4 50\uac1c\ub97c \ubc30\ud3ec\ud558\uba74 \uc218\uc815\ub41c \ub9ac\uc18c\uc2a4\uc758 \uc774\uc804 \ubc84\uc804\uc744 \uc81c\uac70\ud558\uae30 \uc704\ud574 5\ubd84\ub9c8\ub2e4 \ucef4\ud329\uc158\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 etcd\ub294 \uac01 \ub9ac\uc18c\uc2a4\uc758 \ubaa8\ub4e0 \ubc84\uc804\uc744 \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc774 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c etcd\uac00 \ub300\uccb4\ub41c \ub9ac\uc18c\uc2a4\ub97c \uc81c\uac70\ud558\uba74 etcd\uc5d0\uc11c 200\uac1c\uc758 \ub9ac\uc18c\uc2a4 \ubc84\uc804\uc774 \uc81c\uac70\ub418\uba70 \ub9ac\uc18c\uc2a4 \ud06c\uae30\uc5d0 \ub530\ub77c 15\ubd84\ub9c8\ub2e4 \uc870\uac01 \ubaa8\uc74c\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 etcd \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0c1\ub2f9\ud55c \uacf5\uac04\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc870\uac01 \ubaa8\uc74c(defragmentation)\uc73c\ub85c \uc778\ud574 etcd\uac00 \uc77c\uc2dc \uc911\uc9c0\ub418\uc5b4 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \ubc0f \ucee8\ud2b8\ub864\ub7ec\uc5d0 \ub2e4\ub978 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uaddc\ubaa8 \ub9ac\uc18c\uc2a4\ub97c \uc790\uc8fc \uc218\uc815\ud558\uac70\ub098 \uc218\ubc31 \uac1c\uc758 \ub9ac\uc18c\uc2a4\ub97c \uc21c\uc2dd\uac04\uc5d0 \uc5f0\uc18d\ud574\uc11c \uc218\uc815\ud558\ub294 \uac83\uc740 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ub9ac\uc18c\uc2a4\ub2f9 \ub3d9\uc801 \uc5b4\ub4dc\ubbf8\uc158 \uc6f9\ud6c5(Webhook) \uc81c\ud55c\ud558\uae30"},{"location":"scalability/docs/workloads/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Workloads \u00b6 Workloads have an impact on how large your cluster can scale. Workloads that use the Kubernetes APIs heavily will limit the total amount of workloads you can have in a single cluster, but there are some defaults you can change to help reduce the load. Workloads in a Kubernetes cluster have access to features that integrate with the Kubernetes API (e.g. Secrets and ServiceAccounts), but these features are not always required and should be disabled if they\u2019re not being used. Limiting workload access and dependence on the Kubernetes control plane will increase the number of workloads you can run in the cluster and improve the security of your clusters by removing unnecessary access to workloads and implementing least privilege practices. Please read the security best practices for more information. Use IPv6 for pod networking \u00b6 You cannot transition a VPC from IPv4 to IPv6 so enabling IPv6 before provisioning a cluster is important. If you enable IPv6 in a VPC it does not mean you have to use it and if your pods and services use IPv6 you can still route traffic to and from IPv4 addresses. Please see the EKS networking best practices for more information. Using IPv6 in your cluster avoids some of the most common cluster and workload scaling limits. IPv6 avoids IP address exhaustion where pods and nodes cannot be created because no IP address is available. It also has per node performance improvements because pods receive IP addresses faster by reducing the number of ENI attachments per node. You can achieve similar node performance by using IPv4 prefix mode in the VPC CNI , but you still need to make sure you have enough IP addresses available in the VPC. Limit number of services per namespace \u00b6 The maximum number of services in a namespaces is 5,000 and the maximum number of services in a cluster is 10,000 . To help organize workloads and services, increase performance, and to avoid cascading impact for namespace scoped resources we recommend limiting the number of services per namespace to 500. The number of IP tables rules that are created per node with kube-proxy grows with the total number of services in the cluster. Generating thousands of IP tables rules and routing packets through those rules have a performance impact on the nodes and add network latency. Create Kubernetes namespaces that encompass a single application environment so long as the number of services per namespace is under 500. This will keep service discovery small enough to avoid service discovery limits and can also help you avoid service naming collisions. Applications environments (e.g. dev, test, prod) should use separate EKS clusters instead of namespaces. Understand Elastic Load Balancer Quotas \u00b6 When creating your services consider what type of load balancing you will use (e.g. Network Load Balancer (NLB) or Application Load Balancer (ALB)). Each load balancer type provides different functionality and have different quotas . Some of the default quotas can be adjusted, but there are some quota maximums which cannot be changed. To view your account quotas and usage view the Service Quotas dashboard in the AWS console. For example, the default ALB targets is 1000. If you have a service with more than 1000 endpoints you will need to increase the quota or split the service across multiple ALBs or use Kubernetes Ingress. The default NLB targets is 3000, but is limited to 500 targets per AZ. If your cluster runs more than 500 pods for an NLB service you will need to use multiple AZs or request a quota limit increase. An alternative to using a load balancer coupled to a service is to use an ingress controller . The AWS Load Balancer controller can create ALBs for ingress resources, but you may consider running a dedicated controller in your cluster. An in-cluster ingress controller allows you to expose multiple Kubernetes services from a single load balancer by running a reverse proxy inside your cluster. Controllers have different features such as support for the Gateway API which may have benefits depending on how many and how large your workloads are. Use Route 53, Global Accelerator, or CloudFront \u00b6 To make a service using multiple load balancers available as a single endpoint you need to use Amazon CloudFront , AWS Global Accelerator , or Amazon Route 53 to expose all of the load balancers as a single, customer facing endpoint. Each options has different benefits and can be used separately or together depending on your needs. Route 53 can expose multiple load balancers under a common name and can send traffic to each of them based on the weight assigned. You can read more about DNS weights in the documentation and you can read how to implement them with the Kubernetes external DNS controller in the AWS Load Balancer Controller documentation . Global Accelerator can route workloads to the nearest region based on request IP address. This may be useful for workloads that are deployed to multiple regions, but it does not improve routing to a single cluster in a single region. Using Route 53 in combination with the Global Accelerator has additional benefits such as health checking and automatic failover if an AZ is not available. You can see an example of using Global Accelerator with Route 53 in this blog post . CloudFront can be use with Route 53 and Global Accelerator or by itself to route traffic to multiple destinations. CloudFront caches assets being served from the origin sources which may reduce bandwidth requirements depending on what you are serving. Use EndpointSlices instead of Endpoints \u00b6 When discovering pods that match a service label you should use EndpointSlices instead of Endpoints. Endpoints were a simple way to expose services at small scales but large services that automatically scale or have updates causes a lot of traffic on the Kubernetes control plane. EndpointSlices have automatic grouping which enable things like topology aware hints. Not all controllers use EndpointSlices by default. You should verify your controller settings and enable it if needed. For the AWS Load Balancer Controller you should enable the --enable-endpoint-slices optional flag to use EndpointSlices. Use immutable and external secrets if possible \u00b6 The kubelet keeps a cache of the current keys and values for the Secrets that are used in volumes for pods on that node. The kubelet sets a watch on the Secrets to detect changes. As the cluster scales, the growing number of watches can negatively impact the API server performance. There are two strategies to reduce the number of watches on Secrets: For applications that don\u2019t need access to Kubernetes resources, you can disable auto-mounting service account secrets by setting automountServiceAccountToken: false If your application\u2019s secrets are static and will not be modified in the future, mark the secret as immutable . The kubelet does not maintain an API watch for immutable secrets. To disable automatically mounting a service account to pods you can use the following setting in your workload. You can override these settings if specific workloads need a service account. apiVersion: v1 kind: ServiceAccount metadata: name: app automountServiceAccountToken: true Monitor the number of secrets in the cluster before it exceeds the limit of 10,000. You can see a total count of secrets in a cluster with the following command. You should monitor this limit through your cluster monitoring tooling. kubectl get secrets -A | wc -l You should set up monitoring to alert a cluster admin before this limit is reached. Consider using external secrets management options such as AWS Key Management Service (AWS KMS) or Hashicorp Vault with the Secrets Store CSI driver . Limit Deployment history \u00b6 Pods can be slow when creating, updating, or deleting because old objects are still tracked in the cluster. You can reduce therevisionHistoryLimit of deployments to cleanup older ReplicaSets which will lower to total amount of objects tracked by the Kubernetes Controller Manager. The default history limit for Deployments in 10. If your cluster creates a lot of job objects through CronJobs or other mechanisms you should use the ttlSecondsAfterFinished setting to automatically clean up old pods in the cluster. This will remove successfully executed jobs from the job history after a specified amount of time. Disable enableServiceLinks by default \u00b6 When a Pod runs on a Node, the kubelet adds a set of environment variables for each active Service. Linux processes have a maximum size for their environment which can be reached if you have too many services in your namespace. The number of services per namespace should not exceed 5,000. After this, the number of service environment variables outgrows shell limits, causing Pods to crash on startup. There are other reasons pods should not use service environment variables for service discovery. Environment variable name clashes, leaking service names, and total environment size are a few. You should use CoreDNS for discovering service endpoints. Limit dynamic admission webhooks per resource \u00b6 Dynamic Admission Webhooks include admission webhooks and mutating webhooks. They are API endpoints not part of the Kubernetes Control Plane that are called in sequence when a resource is sent to the Kubernetes API. Each webhook has a default timeout of 10 seconds and can increase the amount of time an API request takes if you have multiple webhooks or any of them timeout. Make sure your webhooks are highly available\u2014especially during an AZ incident\u2014and the failurePolicy is set properly to reject the resource or ignore the failure. Do not call webhooks when not needed by allowing --dry-run kubectl commands to bypass the webhook. apiVersion: admission.k8s.io/v1 kind: AdmissionReview request: dryRun: False Mutating webhooks can modify resources in frequent succession. If you have 5 mutating webhooks and deploy 50 resources etcd will store all versions of each resource until compaction runs\u2014every 5 minutes\u2014to remove old versions of modified resources. In this scenario when etcd removes superseded resources there will be 200 resource version removed from etcd and depending on the size of the resources may use considerable space on the etcd host until defragmentation runs every 15 minutes. This defragmentation may cause pauses in etcd which could have other affects on the Kubernetes API and controllers. You should avoid frequent modification of large resources or modifying hundreds of resources in quick succession.","title":"Workloads ({'name': 'English', 'build': True})"},{"location":"scalability/docs/workloads/#workloads","text":"Workloads have an impact on how large your cluster can scale. Workloads that use the Kubernetes APIs heavily will limit the total amount of workloads you can have in a single cluster, but there are some defaults you can change to help reduce the load. Workloads in a Kubernetes cluster have access to features that integrate with the Kubernetes API (e.g. Secrets and ServiceAccounts), but these features are not always required and should be disabled if they\u2019re not being used. Limiting workload access and dependence on the Kubernetes control plane will increase the number of workloads you can run in the cluster and improve the security of your clusters by removing unnecessary access to workloads and implementing least privilege practices. Please read the security best practices for more information.","title":"Workloads"},{"location":"scalability/docs/workloads/#use-ipv6-for-pod-networking","text":"You cannot transition a VPC from IPv4 to IPv6 so enabling IPv6 before provisioning a cluster is important. If you enable IPv6 in a VPC it does not mean you have to use it and if your pods and services use IPv6 you can still route traffic to and from IPv4 addresses. Please see the EKS networking best practices for more information. Using IPv6 in your cluster avoids some of the most common cluster and workload scaling limits. IPv6 avoids IP address exhaustion where pods and nodes cannot be created because no IP address is available. It also has per node performance improvements because pods receive IP addresses faster by reducing the number of ENI attachments per node. You can achieve similar node performance by using IPv4 prefix mode in the VPC CNI , but you still need to make sure you have enough IP addresses available in the VPC.","title":"Use IPv6 for pod networking"},{"location":"scalability/docs/workloads/#limit-number-of-services-per-namespace","text":"The maximum number of services in a namespaces is 5,000 and the maximum number of services in a cluster is 10,000 . To help organize workloads and services, increase performance, and to avoid cascading impact for namespace scoped resources we recommend limiting the number of services per namespace to 500. The number of IP tables rules that are created per node with kube-proxy grows with the total number of services in the cluster. Generating thousands of IP tables rules and routing packets through those rules have a performance impact on the nodes and add network latency. Create Kubernetes namespaces that encompass a single application environment so long as the number of services per namespace is under 500. This will keep service discovery small enough to avoid service discovery limits and can also help you avoid service naming collisions. Applications environments (e.g. dev, test, prod) should use separate EKS clusters instead of namespaces.","title":"Limit number of services per namespace"},{"location":"scalability/docs/workloads/#understand-elastic-load-balancer-quotas","text":"When creating your services consider what type of load balancing you will use (e.g. Network Load Balancer (NLB) or Application Load Balancer (ALB)). Each load balancer type provides different functionality and have different quotas . Some of the default quotas can be adjusted, but there are some quota maximums which cannot be changed. To view your account quotas and usage view the Service Quotas dashboard in the AWS console. For example, the default ALB targets is 1000. If you have a service with more than 1000 endpoints you will need to increase the quota or split the service across multiple ALBs or use Kubernetes Ingress. The default NLB targets is 3000, but is limited to 500 targets per AZ. If your cluster runs more than 500 pods for an NLB service you will need to use multiple AZs or request a quota limit increase. An alternative to using a load balancer coupled to a service is to use an ingress controller . The AWS Load Balancer controller can create ALBs for ingress resources, but you may consider running a dedicated controller in your cluster. An in-cluster ingress controller allows you to expose multiple Kubernetes services from a single load balancer by running a reverse proxy inside your cluster. Controllers have different features such as support for the Gateway API which may have benefits depending on how many and how large your workloads are.","title":"Understand Elastic Load Balancer Quotas"},{"location":"scalability/docs/workloads/#use-route-53-global-accelerator-or-cloudfront","text":"To make a service using multiple load balancers available as a single endpoint you need to use Amazon CloudFront , AWS Global Accelerator , or Amazon Route 53 to expose all of the load balancers as a single, customer facing endpoint. Each options has different benefits and can be used separately or together depending on your needs. Route 53 can expose multiple load balancers under a common name and can send traffic to each of them based on the weight assigned. You can read more about DNS weights in the documentation and you can read how to implement them with the Kubernetes external DNS controller in the AWS Load Balancer Controller documentation . Global Accelerator can route workloads to the nearest region based on request IP address. This may be useful for workloads that are deployed to multiple regions, but it does not improve routing to a single cluster in a single region. Using Route 53 in combination with the Global Accelerator has additional benefits such as health checking and automatic failover if an AZ is not available. You can see an example of using Global Accelerator with Route 53 in this blog post . CloudFront can be use with Route 53 and Global Accelerator or by itself to route traffic to multiple destinations. CloudFront caches assets being served from the origin sources which may reduce bandwidth requirements depending on what you are serving.","title":"Use Route 53, Global Accelerator, or CloudFront"},{"location":"scalability/docs/workloads/#use-endpointslices-instead-of-endpoints","text":"When discovering pods that match a service label you should use EndpointSlices instead of Endpoints. Endpoints were a simple way to expose services at small scales but large services that automatically scale or have updates causes a lot of traffic on the Kubernetes control plane. EndpointSlices have automatic grouping which enable things like topology aware hints. Not all controllers use EndpointSlices by default. You should verify your controller settings and enable it if needed. For the AWS Load Balancer Controller you should enable the --enable-endpoint-slices optional flag to use EndpointSlices.","title":"Use EndpointSlices instead of Endpoints"},{"location":"scalability/docs/workloads/#use-immutable-and-external-secrets-if-possible","text":"The kubelet keeps a cache of the current keys and values for the Secrets that are used in volumes for pods on that node. The kubelet sets a watch on the Secrets to detect changes. As the cluster scales, the growing number of watches can negatively impact the API server performance. There are two strategies to reduce the number of watches on Secrets: For applications that don\u2019t need access to Kubernetes resources, you can disable auto-mounting service account secrets by setting automountServiceAccountToken: false If your application\u2019s secrets are static and will not be modified in the future, mark the secret as immutable . The kubelet does not maintain an API watch for immutable secrets. To disable automatically mounting a service account to pods you can use the following setting in your workload. You can override these settings if specific workloads need a service account. apiVersion: v1 kind: ServiceAccount metadata: name: app automountServiceAccountToken: true Monitor the number of secrets in the cluster before it exceeds the limit of 10,000. You can see a total count of secrets in a cluster with the following command. You should monitor this limit through your cluster monitoring tooling. kubectl get secrets -A | wc -l You should set up monitoring to alert a cluster admin before this limit is reached. Consider using external secrets management options such as AWS Key Management Service (AWS KMS) or Hashicorp Vault with the Secrets Store CSI driver .","title":"Use immutable and external secrets if possible"},{"location":"scalability/docs/workloads/#limit-deployment-history","text":"Pods can be slow when creating, updating, or deleting because old objects are still tracked in the cluster. You can reduce therevisionHistoryLimit of deployments to cleanup older ReplicaSets which will lower to total amount of objects tracked by the Kubernetes Controller Manager. The default history limit for Deployments in 10. If your cluster creates a lot of job objects through CronJobs or other mechanisms you should use the ttlSecondsAfterFinished setting to automatically clean up old pods in the cluster. This will remove successfully executed jobs from the job history after a specified amount of time.","title":"Limit Deployment history"},{"location":"scalability/docs/workloads/#disable-enableservicelinks-by-default","text":"When a Pod runs on a Node, the kubelet adds a set of environment variables for each active Service. Linux processes have a maximum size for their environment which can be reached if you have too many services in your namespace. The number of services per namespace should not exceed 5,000. After this, the number of service environment variables outgrows shell limits, causing Pods to crash on startup. There are other reasons pods should not use service environment variables for service discovery. Environment variable name clashes, leaking service names, and total environment size are a few. You should use CoreDNS for discovering service endpoints.","title":"Disable enableServiceLinks by default"},{"location":"scalability/docs/workloads/#limit-dynamic-admission-webhooks-per-resource","text":"Dynamic Admission Webhooks include admission webhooks and mutating webhooks. They are API endpoints not part of the Kubernetes Control Plane that are called in sequence when a resource is sent to the Kubernetes API. Each webhook has a default timeout of 10 seconds and can increase the amount of time an API request takes if you have multiple webhooks or any of them timeout. Make sure your webhooks are highly available\u2014especially during an AZ incident\u2014and the failurePolicy is set properly to reject the resource or ignore the failure. Do not call webhooks when not needed by allowing --dry-run kubectl commands to bypass the webhook. apiVersion: admission.k8s.io/v1 kind: AdmissionReview request: dryRun: False Mutating webhooks can modify resources in frequent succession. If you have 5 mutating webhooks and deploy 50 resources etcd will store all versions of each resource until compaction runs\u2014every 5 minutes\u2014to remove old versions of modified resources. In this scenario when etcd removes superseded resources there will be 200 resource version removed from etcd and depending on the size of the resources may use considerable space on the etcd host until defragmentation runs every 15 minutes. This defragmentation may cause pauses in etcd which could have other affects on the Kubernetes API and controllers. You should avoid frequent modification of large resources or modifying hundreds of resources in quick succession.","title":"Limit dynamic admission webhooks per resource"},{"location":"security/docs/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Amazon EKS Best Practices Guide for Security \u00b6 This guide provides advice about protecting information, systems, and assets that are reliant on EKS while delivering business value through risk assessments and mitigation strategies. The guidance herein is part of a series of best practices guides that AWS is publishing to help customers implement EKS in accordance with best practices. Guides for Performance, Operational Excellence, Cost Optimization, and Reliability will be available in the coming months. How to use this guide \u00b6 This guide is meant for security practitioners who are responsible for implementing and monitoring the effectiveness of security controls for EKS clusters and the workloads they support. The guide is organized into different topic areas for easier consumption. Each topic starts with a brief overview, followed by a list of recommendations and best practices for securing your EKS clusters. The topics do not need to be read in a particular order. Understanding the Shared Responsibility Model \u00b6 Security and compliance are considered shared responsibilities when using a managed service like EKS. Generally speaking, AWS is responsible for security \"of\" the cloud whereas you, the customer, are responsible for security \"in\" the cloud. With EKS, AWS is responsible for managing of the EKS managed Kubernetes control plane. This includes the Kubernetes control plane nodes, the ETCD database, and other infrastructure necessary for AWS to deliver a secure and reliable service. As a consumer of EKS, you are largely responsible for the topics in this guide, e.g. IAM, pod security, runtime security, network security, and so forth. When it comes to infrastructure security, AWS will assume additional responsibilities as you move from self-managed workers, to managed node groups, to Fargate. For example, with Fargate, AWS becomes responsible for securing the underlying instance/runtime used to run your Pods. AWS will also assume responsibility of keeping the EKS optimized AMI up to date with Kubernetes patch versions and security patches. Customers using Managed Node Groups (MNG) are responsible for upgrading their Nodegroups to the latest AMI via EKS API, CLI, Cloudformation or AWS Console. Also unlike Fargate, MNGs will not automatically scale your infrastructure/cluster. That can be handled by the cluster-autoscaler or other technologies such as Karpenter , native AWS autoscaling, SpotInst's Ocean , or Atlassian's Escalator . Before designing your system, it is important to know where the line of demarcation is between your responsibilities and the provider of the service (AWS). For additional information about the shared responsibility model, see https://aws.amazon.com/compliance/shared-responsibility-model/ Introduction \u00b6 There are several security best practice areas that are pertinent when using a managed Kubernetes service like EKS: Identity and Access Management Pod Security Runtime Security Network Security Multi-tenancy Detective Controls Infrastructure Security Data Encryption and Secrets Management Regulatory Compliance Incident Response and Forensics Image Security As part of designing any system, you need to think about its security implications and the practices that can affect your security posture. For example, you need to control who can perform actions against a set of resources. You also need the ability to quickly identify security incidents, protect your systems and services from unauthorized access, and maintain the confidentiality and integrity of data through data protection. Having a well-defined and rehearsed set of processes for responding to security incidents will improve your security posture too. These tools and techniques are important because they support objectives such as preventing financial loss or complying with regulatory obligations. AWS helps organizations achieve their security and compliance goals by offering a rich set of security services that have evolved based on feedback from a broad set of security conscious customers. By offering a highly secure foundation, customers can spend less time on \u201cundifferentiated heavy lifting\u201d and more time on achieving their business objectives. Feedback \u00b6 This guide is being released on GitHub so as to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. Our intention is to update the guide periodically as new features are added to the service or when a new best practice evolves. Further Reading \u00b6 Kubernetes Security Whitepaper , sponsored by the Security Audit Working Group, this Whitepaper describes key aspects of the Kubernetes attack surface and security architecture with the aim of helping security practitioners make sound design and implementation decisions. The CNCF published also a white paper on cloud native security. The paper examines how the technology landscape has evolved and advocates for the adoption of security practices that align with DevOps processes and agile methodologies.","title":"Home"},{"location":"security/docs/#amazon-eks-best-practices-guide-for-security","text":"This guide provides advice about protecting information, systems, and assets that are reliant on EKS while delivering business value through risk assessments and mitigation strategies. The guidance herein is part of a series of best practices guides that AWS is publishing to help customers implement EKS in accordance with best practices. Guides for Performance, Operational Excellence, Cost Optimization, and Reliability will be available in the coming months.","title":"Amazon EKS Best Practices Guide for Security"},{"location":"security/docs/#how-to-use-this-guide","text":"This guide is meant for security practitioners who are responsible for implementing and monitoring the effectiveness of security controls for EKS clusters and the workloads they support. The guide is organized into different topic areas for easier consumption. Each topic starts with a brief overview, followed by a list of recommendations and best practices for securing your EKS clusters. The topics do not need to be read in a particular order.","title":"How to use this guide"},{"location":"security/docs/#understanding-the-shared-responsibility-model","text":"Security and compliance are considered shared responsibilities when using a managed service like EKS. Generally speaking, AWS is responsible for security \"of\" the cloud whereas you, the customer, are responsible for security \"in\" the cloud. With EKS, AWS is responsible for managing of the EKS managed Kubernetes control plane. This includes the Kubernetes control plane nodes, the ETCD database, and other infrastructure necessary for AWS to deliver a secure and reliable service. As a consumer of EKS, you are largely responsible for the topics in this guide, e.g. IAM, pod security, runtime security, network security, and so forth. When it comes to infrastructure security, AWS will assume additional responsibilities as you move from self-managed workers, to managed node groups, to Fargate. For example, with Fargate, AWS becomes responsible for securing the underlying instance/runtime used to run your Pods. AWS will also assume responsibility of keeping the EKS optimized AMI up to date with Kubernetes patch versions and security patches. Customers using Managed Node Groups (MNG) are responsible for upgrading their Nodegroups to the latest AMI via EKS API, CLI, Cloudformation or AWS Console. Also unlike Fargate, MNGs will not automatically scale your infrastructure/cluster. That can be handled by the cluster-autoscaler or other technologies such as Karpenter , native AWS autoscaling, SpotInst's Ocean , or Atlassian's Escalator . Before designing your system, it is important to know where the line of demarcation is between your responsibilities and the provider of the service (AWS). For additional information about the shared responsibility model, see https://aws.amazon.com/compliance/shared-responsibility-model/","title":"Understanding the Shared Responsibility Model"},{"location":"security/docs/#introduction","text":"There are several security best practice areas that are pertinent when using a managed Kubernetes service like EKS: Identity and Access Management Pod Security Runtime Security Network Security Multi-tenancy Detective Controls Infrastructure Security Data Encryption and Secrets Management Regulatory Compliance Incident Response and Forensics Image Security As part of designing any system, you need to think about its security implications and the practices that can affect your security posture. For example, you need to control who can perform actions against a set of resources. You also need the ability to quickly identify security incidents, protect your systems and services from unauthorized access, and maintain the confidentiality and integrity of data through data protection. Having a well-defined and rehearsed set of processes for responding to security incidents will improve your security posture too. These tools and techniques are important because they support objectives such as preventing financial loss or complying with regulatory obligations. AWS helps organizations achieve their security and compliance goals by offering a rich set of security services that have evolved based on feedback from a broad set of security conscious customers. By offering a highly secure foundation, customers can spend less time on \u201cundifferentiated heavy lifting\u201d and more time on achieving their business objectives.","title":"Introduction"},{"location":"security/docs/#feedback","text":"This guide is being released on GitHub so as to collect direct feedback and suggestions from the broader EKS/Kubernetes community. If you have a best practice that you feel we ought to include in the guide, please file an issue or submit a PR in the GitHub repository. Our intention is to update the guide periodically as new features are added to the service or when a new best practice evolves.","title":"Feedback"},{"location":"security/docs/#further-reading","text":"Kubernetes Security Whitepaper , sponsored by the Security Audit Working Group, this Whitepaper describes key aspects of the Kubernetes attack surface and security architecture with the aim of helping security practitioners make sound design and implementation decisions. The CNCF published also a white paper on cloud native security. The paper examines how the technology landscape has evolved and advocates for the adoption of security practices that align with DevOps processes and agile methodologies.","title":"Further Reading"},{"location":"security/docs/compliance.kr/","text":"{'name': 'English', 'build': True} \uaddc\uc815 \uc900\uc218 \u00b6 \uaddc\uc815 \uc900\uc218\ub294 AWS\uc640 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uc18c\ube44\uc790 \uac04\uc758 \uacf5\ub3d9 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c AWS\ub294 \"\ud074\ub77c\uc6b0\ub4dc \ubcf4\uc548\"\uc744 \ub2f4\ub2f9\ud558\uace0 \uc0ac\uc6a9\uc790\ub294 \"\ud074\ub77c\uc6b0\ub4dc \ubcf4\uc548\"\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. AWS\uc640 \ud574\ub2f9 \uc0ac\uc6a9\uc790\uac00 \ucc45\uc784\uc9c0\ub294 \ud56d\ubaa9\uc744 \uc124\uba85\ud558\ub294 \uc120\uc740 \uc11c\ube44\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate\uc5d0\uc11c AWS\ub294 \ub370\uc774\ud130 \uc13c\ud130, \ud558\ub4dc\uc6e8\uc5b4, \uac00\uc0c1 \uc778\ud504\ub77c(Amazon EC2) \ubc0f \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784(Docker)\uc758 \ubb3c\ub9ac\uc801 \ubcf4\uc548 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. Fargate \uc0ac\uc6a9\uc790\ub294 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc640 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\uc815 \uc900\uc218 \ud45c\uc900\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud560 \ub54c \uc911\uc694\ud55c \uace0\ub824 \uc0ac\ud56d\uc5d0 \ub300\ud55c \ucc45\uc784\uc790\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ud45c\ub294 \ub2e4\uc591\ud55c \ucee8\ud14c\uc774\ub108 \uc11c\ube44\uc2a4\uac00 \uc900\uc218\ud558\ub294 \uaddc\uc815 \uc900\uc218 \ud504\ub85c\uadf8\ub7a8\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucef4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ud504\ub85c\uadf8\ub7a8 Amazon ECS \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 Amazon EKS \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 ECS \ud30c\uac8c\uc774\ud2b8 \uc544\ub9c8\uc874 ECR PCI DSS \ub808\ubca8 1 1 1 1 1 HIPAA \uc801\uaca9 1 1 1 1 SOC I 1 1 1 1 SOC II 1 1 1 1 SOC III 1 1 1 1 ISO 27001:2013 1 1 1 1 ISO 9001:2015 1 1 1 1 ISO 27017:2015 1 1 1 1 ISO 27018:2019 1 1 1 1 IRAP 1 1 1 1 FedRAMP \uc911\uac04(\ub3d9/\uc11c) 1 1 0 1 FedRAMP \ub192\uc74c(GovCloud) 1 1 0 1 \uad6d\ubc29\ubd80 CC SRG 1 DISA \uac80\ud1a0(IL5) 0 1 \ud788\ud30c\uc544 \ubc14\uc544 1 1 1 1 MTCS 1 1 0 1 C5 1 1 0 1 K-ISMS 1 1 0 1 ENS \ub192\uc74c 1 1 0 1 \uc624\uc2a4\ud30c 1 1 0 1 \ud788\ud2b8\ub7ec\uc2a4\ud2b8 CSF 1 1 1 1 \uaddc\uc815 \uc900\uc218 \uc0c1\ud0dc\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub429\ub2c8\ub2e4. \ucd5c\uc2e0 \uc0c1\ud0dc\ub294 \ud56d\uc0c1 https://aws.amazon.com/compliance/services-in-scope/ \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud074\ub77c\uc6b0\ub4dc \uc778\uc99d \ubaa8\ub378 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ubc31\uc11c \uc548\uc804\ud55c \ud074\ub77c\uc6b0\ub4dc \ucc44\ud0dd\uc744 \uc704\ud55c \uc778\uc99d \ubaa8\ub378 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. ) \uc67c\ucabd\uc73c\ub85c \uc774\ub3d9 \u00b6 \uc67c\ucabd\uc73c\ub85c \uc774\ub3d9\ud55c\ub2e4\ub294 \uac1c\ub150\uc5d0\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uac1c\ubc1c \uc218\uba85 \uc8fc\uae30 \ucd08\uae30\uc5d0 \uc815\ucc45 \uc704\ubc18 \ubc0f \uc624\ub958\ub97c \ud3ec\ucc29\ud558\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ubcf4\uc548 \uad00\uc810\uc5d0\uc11c \uc774\uac83\uc740 \ub9e4\uc6b0 \uc720\uc775\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uac1c\ubc1c\uc790\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \uad6c\uc131 \ubb38\uc81c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc640 \uac19\uc740 \uc2e4\uc218\ub97c \uc870\uae30\uc5d0 \ud3ec\ucc29\ud558\uba74 \uc815\ucc45\uc744 \uc704\ubc18\ud558\ub294 \uad6c\uc131\uc774 \ubc30\ud3ec\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45 \u00b6 \uc815\ucc45\uc740 \ud589\ub3d9(\uc989, \ud5c8\uc6a9\ub418\ub294 \ud589\ub3d9 \ub610\ub294 \uae08\uc9c0\ub418\ub294 \ud589\ub3d9)\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uc77c\ub828\uc758 \uaddc\uce59\uc73c\ub85c \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucee8\ud14c\uc774\ub108\uac00 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\ub294 USER \uc9c0\uc2dc\ubb38\uc744 \ubaa8\ub4e0 Dockerfile\uc5d0 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4\ub294 \uc815\ucc45\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb38\uc11c\ub85c\uc11c \uc774\uc640 \uac19\uc740 \uc815\ucc45\uc740 \ubc1c\uacac\ud558\uace0 \uc2dc\ud589\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uad6c \uc0ac\ud56d\uc774 \ubcc0\uacbd\ub428\uc5d0 \ub530\ub77c \uad6c\uc2dd\uc774 \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. PaC(Policy as Code) \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc54c\ub824\uc9c4 \uc9c0\uc18d\uc801\uc778 \uc704\ud611\uc744 \ud0d0\uc9c0, \uc608\ubc29, \uac10\uc18c \ubc0f \ub300\uc751\ud558\ub294 \ubcf4\uc548, \uaddc\uc815 \uc900\uc218 \ubc0f \uac1c\uc778 \uc815\ubcf4 \uc81c\uc5b4\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc815\ucc45\uc744 \ucf54\ub4dc\ud654\ud558\uace0 \ub2e4\ub978 \ucf54\ub4dc \uc544\ud2f0\ud329\ud2b8\ucc98\ub7fc \uc815\ucc45\uc744 \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc758 \uc774\uc810\uc740 DevOps \ubc0f GitOps \uc804\ub7b5\uc744 \uc7ac\uc0ac\uc6a9\ud558\uc5ec Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \uc815\ucc45\uc744 \uad00\ub9ac\ud558\uace0 \uc77c\uad00\ub418\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. PaC \uc635\uc158 \ubc0f PSP\uc758 \ubbf8\ub798\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 Pod Security \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucd94\ucc9c \u00b6 \ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c \uc815\ucc45 \ucf54\ub4dc \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec \uc804\uc5d0 \uc704\ubc18 \uac10\uc9c0 \u00b6 OPA \ub294 CNCF\uc758 \uc77c\ubd80\uc778 \uc624\ud508 \uc18c\uc2a4 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. \uc815\ucc45 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70 \ub2e4\uc591\ud55c \ubc29\uc2dd\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub610\ub294 \uc11c\ube44\uc2a4\ub85c. OPA \uc815\ucc45\uc740 Rego\ub77c\ub294 \ub3c4\uba54\uc778 \ud2b9\uc815 \uc5b8\uc5b4(DSL)\ub85c \uc791\uc131\ub429\ub2c8\ub2e4. Gatekeeper \ud504\ub85c\uc81d\ud2b8\ub85c Kubernetes \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0\ub9cc OPA\ub294 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \ud1b5\ud569\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac1c\ubc1c\uc790\ub294 \ub9b4\ub9ac\uc2a4 \uc8fc\uae30 \ucd08\uae30\uc5d0 \uad6c\uc131\uc5d0 \ub300\ud55c \ud53c\ub4dc\ubc31\uc744 \uc5bb\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c \ud504\ub85c\ub355\uc158\uc5d0 \ub4e4\uc5b4\uac00\uae30 \uc804\uc5d0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \uc815\ucc45 \ubaa8\uc74c\uc740 GitHub \uc800\uc7a5\uc18c \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Conftest \ub294 OPA\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ub418\uc5c8\uc73c\uba70 Kubernetes \uad6c\uc131 \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \uac1c\ubc1c\uc790 \uc911\uc2ec \ud658\uacbd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. sKan \uc740 OPA\ub85c \uad6c\ub3d9\ub418\uba70 Kubernetes \uad6c\uc131 \ud30c\uc77c\uc774 \ubcf4\uc548 \ubc0f \uc6b4\uc601 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc900\uc218\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 \"\ub9de\ucda4\ud615\"\uc785\ub2c8\ub2e4. Kyverno \ub294 Kubernetes\uc6a9\uc73c\ub85c \uc124\uacc4\ub41c \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. Kyverno\ub97c \uc0ac\uc6a9\ud558\uba74 \uc815\ucc45\uc774 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"\uaddc\uc815 \uc900\uc218"},{"location":"security/docs/compliance.kr/#_1","text":"\uaddc\uc815 \uc900\uc218\ub294 AWS\uc640 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uc18c\ube44\uc790 \uac04\uc758 \uacf5\ub3d9 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c AWS\ub294 \"\ud074\ub77c\uc6b0\ub4dc \ubcf4\uc548\"\uc744 \ub2f4\ub2f9\ud558\uace0 \uc0ac\uc6a9\uc790\ub294 \"\ud074\ub77c\uc6b0\ub4dc \ubcf4\uc548\"\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4. AWS\uc640 \ud574\ub2f9 \uc0ac\uc6a9\uc790\uac00 \ucc45\uc784\uc9c0\ub294 \ud56d\ubaa9\uc744 \uc124\uba85\ud558\ub294 \uc120\uc740 \uc11c\ube44\uc2a4\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate\uc5d0\uc11c AWS\ub294 \ub370\uc774\ud130 \uc13c\ud130, \ud558\ub4dc\uc6e8\uc5b4, \uac00\uc0c1 \uc778\ud504\ub77c(Amazon EC2) \ubc0f \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784(Docker)\uc758 \ubb3c\ub9ac\uc801 \ubcf4\uc548 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. Fargate \uc0ac\uc6a9\uc790\ub294 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc640 \ud574\ub2f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubcf4\ud638\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uaddc\uc815 \uc900\uc218 \ud45c\uc900\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud560 \ub54c \uc911\uc694\ud55c \uace0\ub824 \uc0ac\ud56d\uc5d0 \ub300\ud55c \ucc45\uc784\uc790\ub97c \ud30c\uc545\ud569\ub2c8\ub2e4. \ub2e4\uc74c \ud45c\ub294 \ub2e4\uc591\ud55c \ucee8\ud14c\uc774\ub108 \uc11c\ube44\uc2a4\uac00 \uc900\uc218\ud558\ub294 \uaddc\uc815 \uc900\uc218 \ud504\ub85c\uadf8\ub7a8\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4. \ucef4\ud50c\ub77c\uc774\uc5b8\uc2a4 \ud504\ub85c\uadf8\ub7a8 Amazon ECS \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 Amazon EKS \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 ECS \ud30c\uac8c\uc774\ud2b8 \uc544\ub9c8\uc874 ECR PCI DSS \ub808\ubca8 1 1 1 1 1 HIPAA \uc801\uaca9 1 1 1 1 SOC I 1 1 1 1 SOC II 1 1 1 1 SOC III 1 1 1 1 ISO 27001:2013 1 1 1 1 ISO 9001:2015 1 1 1 1 ISO 27017:2015 1 1 1 1 ISO 27018:2019 1 1 1 1 IRAP 1 1 1 1 FedRAMP \uc911\uac04(\ub3d9/\uc11c) 1 1 0 1 FedRAMP \ub192\uc74c(GovCloud) 1 1 0 1 \uad6d\ubc29\ubd80 CC SRG 1 DISA \uac80\ud1a0(IL5) 0 1 \ud788\ud30c\uc544 \ubc14\uc544 1 1 1 1 MTCS 1 1 0 1 C5 1 1 0 1 K-ISMS 1 1 0 1 ENS \ub192\uc74c 1 1 0 1 \uc624\uc2a4\ud30c 1 1 0 1 \ud788\ud2b8\ub7ec\uc2a4\ud2b8 CSF 1 1 1 1 \uaddc\uc815 \uc900\uc218 \uc0c1\ud0dc\ub294 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub429\ub2c8\ub2e4. \ucd5c\uc2e0 \uc0c1\ud0dc\ub294 \ud56d\uc0c1 https://aws.amazon.com/compliance/services-in-scope/ \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud074\ub77c\uc6b0\ub4dc \uc778\uc99d \ubaa8\ub378 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ubc31\uc11c \uc548\uc804\ud55c \ud074\ub77c\uc6b0\ub4dc \ucc44\ud0dd\uc744 \uc704\ud55c \uc778\uc99d \ubaa8\ub378 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. )","title":"\uaddc\uc815 \uc900\uc218"},{"location":"security/docs/compliance.kr/#_2","text":"\uc67c\ucabd\uc73c\ub85c \uc774\ub3d9\ud55c\ub2e4\ub294 \uac1c\ub150\uc5d0\ub294 \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uac1c\ubc1c \uc218\uba85 \uc8fc\uae30 \ucd08\uae30\uc5d0 \uc815\ucc45 \uc704\ubc18 \ubc0f \uc624\ub958\ub97c \ud3ec\ucc29\ud558\ub294 \uac83\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ubcf4\uc548 \uad00\uc810\uc5d0\uc11c \uc774\uac83\uc740 \ub9e4\uc6b0 \uc720\uc775\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uac1c\ubc1c\uc790\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \uad6c\uc131 \ubb38\uc81c\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc640 \uac19\uc740 \uc2e4\uc218\ub97c \uc870\uae30\uc5d0 \ud3ec\ucc29\ud558\uba74 \uc815\ucc45\uc744 \uc704\ubc18\ud558\ub294 \uad6c\uc131\uc774 \ubc30\ud3ec\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc67c\ucabd\uc73c\ub85c \uc774\ub3d9"},{"location":"security/docs/compliance.kr/#_3","text":"\uc815\ucc45\uc740 \ud589\ub3d9(\uc989, \ud5c8\uc6a9\ub418\ub294 \ud589\ub3d9 \ub610\ub294 \uae08\uc9c0\ub418\ub294 \ud589\ub3d9)\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uc77c\ub828\uc758 \uaddc\uce59\uc73c\ub85c \uc0dd\uac01\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ucee8\ud14c\uc774\ub108\uac00 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\ub294 USER \uc9c0\uc2dc\ubb38\uc744 \ubaa8\ub4e0 Dockerfile\uc5d0 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4\ub294 \uc815\ucc45\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubb38\uc11c\ub85c\uc11c \uc774\uc640 \uac19\uc740 \uc815\ucc45\uc740 \ubc1c\uacac\ud558\uace0 \uc2dc\ud589\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc694\uad6c \uc0ac\ud56d\uc774 \ubcc0\uacbd\ub428\uc5d0 \ub530\ub77c \uad6c\uc2dd\uc774 \ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. PaC(Policy as Code) \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 \uc54c\ub824\uc9c4 \uc9c0\uc18d\uc801\uc778 \uc704\ud611\uc744 \ud0d0\uc9c0, \uc608\ubc29, \uac10\uc18c \ubc0f \ub300\uc751\ud558\ub294 \ubcf4\uc548, \uaddc\uc815 \uc900\uc218 \ubc0f \uac1c\uc778 \uc815\ubcf4 \uc81c\uc5b4\ub97c \uc790\ub3d9\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc815\ucc45\uc744 \ucf54\ub4dc\ud654\ud558\uace0 \ub2e4\ub978 \ucf54\ub4dc \uc544\ud2f0\ud329\ud2b8\ucc98\ub7fc \uc815\ucc45\uc744 \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc758 \uc774\uc810\uc740 DevOps \ubc0f GitOps \uc804\ub7b5\uc744 \uc7ac\uc0ac\uc6a9\ud558\uc5ec Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \uc815\ucc45\uc744 \uad00\ub9ac\ud558\uace0 \uc77c\uad00\ub418\uac8c \uc801\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. PaC \uc635\uc158 \ubc0f PSP\uc758 \ubbf8\ub798\uc5d0 \ub300\ud55c \uc815\ubcf4\ub294 Pod Security \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45"},{"location":"security/docs/compliance.kr/#_4","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/compliance.kr/#_5","text":"OPA \ub294 CNCF\uc758 \uc77c\ubd80\uc778 \uc624\ud508 \uc18c\uc2a4 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. \uc815\ucc45 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \uc0ac\uc6a9\ub418\uba70 \ub2e4\uc591\ud55c \ubc29\uc2dd\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5b8\uc5b4 \ub77c\uc774\ube0c\ub7ec\ub9ac \ub610\ub294 \uc11c\ube44\uc2a4\ub85c. OPA \uc815\ucc45\uc740 Rego\ub77c\ub294 \ub3c4\uba54\uc778 \ud2b9\uc815 \uc5b8\uc5b4(DSL)\ub85c \uc791\uc131\ub429\ub2c8\ub2e4. Gatekeeper \ud504\ub85c\uc81d\ud2b8\ub85c Kubernetes \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc9c0\ub9cc OPA\ub294 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \ud1b5\ud569\ub420 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac1c\ubc1c\uc790\ub294 \ub9b4\ub9ac\uc2a4 \uc8fc\uae30 \ucd08\uae30\uc5d0 \uad6c\uc131\uc5d0 \ub300\ud55c \ud53c\ub4dc\ubc31\uc744 \uc5bb\uc744 \uc218 \uc788\uc73c\ubbc0\ub85c \ud504\ub85c\ub355\uc158\uc5d0 \ub4e4\uc5b4\uac00\uae30 \uc804\uc5d0 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \uc815\ucc45 \ubaa8\uc74c\uc740 GitHub \uc800\uc7a5\uc18c \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Conftest \ub294 OPA\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ub418\uc5c8\uc73c\uba70 Kubernetes \uad6c\uc131 \ud14c\uc2a4\ud2b8\ub97c \uc704\ud55c \uac1c\ubc1c\uc790 \uc911\uc2ec \ud658\uacbd\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. sKan \uc740 OPA\ub85c \uad6c\ub3d9\ub418\uba70 Kubernetes \uad6c\uc131 \ud30c\uc77c\uc774 \ubcf4\uc548 \ubc0f \uc6b4\uc601 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc900\uc218\ud558\ub294\uc9c0 \uc5ec\ubd80\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 \"\ub9de\ucda4\ud615\"\uc785\ub2c8\ub2e4. Kyverno \ub294 Kubernetes\uc6a9\uc73c\ub85c \uc124\uacc4\ub41c \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. Kyverno\ub97c \uc0ac\uc6a9\ud558\uba74 \uc815\ucc45\uc774 \uad00\ub9ac\ub429\ub2c8\ub2e4.","title":"\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c \uc815\ucc45 \ucf54\ub4dc \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec \uc804\uc5d0 \uc704\ubc18 \uac10\uc9c0"},{"location":"security/docs/compliance/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Compliance \u00b6 Compliance is a shared responsibility between AWS and the consumers of its services. Generally speaking, AWS is responsible for \u201csecurity of the cloud\u201d whereas its users are responsible for \u201csecurity in the cloud.\u201d The line that delineates what AWS and its users are responsible for will vary depending on the service. For example, with Fargate, AWS is responsible for managing the physical security of its data centers, the hardware, the virtual infrastructure (Amazon EC2), and the container runtime (Docker). Users of Fargate are responsible for securing the container image and their application. Knowing who is responsible for what is an important consideration when running workloads that must adhere to compliance standards. The following table shows the compliance programs with which the different container services conform. Compliance Program Amazon ECS Orchestrator Amazon EKS Orchestrator ECS Fargate Amazon ECR PCI DSS Level 1 1 1 1 1 HIPAA Eligible 1 1 1 1 SOC I 1 1 1 1 SOC II 1 1 1 1 SOC III 1 1 1 1 ISO 27001:2013 1 1 1 1 ISO 9001:2015 1 1 1 1 ISO 27017:2015 1 1 1 1 ISO 27018:2019 1 1 1 1 IRAP 1 1 1 1 FedRAMP Moderate (East/West) 1 1 0 1 FedRAMP High (GovCloud) 1 1 0 1 DOD CC SRG 1 DISA Review (IL5) 0 1 HIPAA BAA 1 1 1 1 MTCS 1 1 0 1 C5 1 1 0 1 K-ISMS 1 1 0 1 ENS High 1 1 0 1 OSPAR 1 1 0 1 HITRUST CSF 1 1 1 1 Compliance status changes over time. For the latest status, always refer to https://aws.amazon.com/compliance/services-in-scope/ . For further information about cloud accreditation models and best practices, see the AWS whitepaper, Accreditation Models for Secure Cloud Adoption Shifting Left \u00b6 The concept of shifting left involves catching policy violations and errors earlier in the software development lifecycle. From a security perspective, this can be very beneficial. A developer, for example, can fix issues with their configuration before their application is deployed to the cluster. Catching mistakes like this earlier will help prevent configurations that violate your policies from being deployed. Policy as Code \u00b6 Policy can be thought of as a set of rules for governing behaviors, i.e. behaviors that are allowed or those that are prohibited. For example, you may have a policy that says that all Dockerfiles should include a USER directive that causes the container to run as a non-root user. As a document, a policy like this can be hard to discover and enforce. It may also become outdated as your requirements change. With Policy as Code (PaC) solutions, you can automate security, compliance, and privacy controls that detect, prevent, reduce, and counteract known and persistent threats. Furthermore, they give you mechanism to codify your policies and manage them as you do other code artifacts. The benefit of this approach is that you can reuse your DevOps and GitOps strategies to manage and consistently apply policies across fleets of Kubernetes clusters. Please refer to Pod Security for information about PaC options and the future of PSPs. Recommendations \u00b6 Use policy-as-code tools in pipelines to detect violations before deployment \u00b6 OPA is an open source policy engine that's part of the CNCF. It's used for making policy decisions and can be run a variety of different ways, e.g. as a language library or a service. OPA policies are written in a Domain Specific Language (DSL) called Rego. While it is often run as part of a Kubernetes Dynamic Admission Controller as the Gatekeeper project, OPA can also be incorporated into your CI/CD pipeline. This allows developers to get feedback about their configuration earlier in the release cycle which can subsequently help them resolve issues before they get to production. A collection of common OPA policies can be found in the GitHub repository for this project. Conftest is built on top of OPA and it provides a developer focused experience for testing Kubernetes configuration. Kyverno is a policy engine designed for Kubernetes. With Kyverno, policies are managed as Kubernetes resources and no new language is required to write policies. This allows using familiar tools such as kubectl, git, and kustomize to manage policies. Kyverno policies can validate, mutate, and generate Kubernetes resources plus ensure OCI image supply chain security. The Kyverno CLI can be used to test policies and validate resources as part of a CI/CD pipeline. All the Kyverno community policies can be found on the Kyverno website , and for examples using the Kyverno CLI to write tests in pipelines, see the policies repository . Tools and resources \u00b6 kube-bench docker-bench-security AWS Inspector Kubernetes Security Review A 3rd party security assessment of Kubernetes 1.13.4 (2019)","title":"Regulatory Compliance ({'name': 'English', 'build': True})"},{"location":"security/docs/compliance/#compliance","text":"Compliance is a shared responsibility between AWS and the consumers of its services. Generally speaking, AWS is responsible for \u201csecurity of the cloud\u201d whereas its users are responsible for \u201csecurity in the cloud.\u201d The line that delineates what AWS and its users are responsible for will vary depending on the service. For example, with Fargate, AWS is responsible for managing the physical security of its data centers, the hardware, the virtual infrastructure (Amazon EC2), and the container runtime (Docker). Users of Fargate are responsible for securing the container image and their application. Knowing who is responsible for what is an important consideration when running workloads that must adhere to compliance standards. The following table shows the compliance programs with which the different container services conform. Compliance Program Amazon ECS Orchestrator Amazon EKS Orchestrator ECS Fargate Amazon ECR PCI DSS Level 1 1 1 1 1 HIPAA Eligible 1 1 1 1 SOC I 1 1 1 1 SOC II 1 1 1 1 SOC III 1 1 1 1 ISO 27001:2013 1 1 1 1 ISO 9001:2015 1 1 1 1 ISO 27017:2015 1 1 1 1 ISO 27018:2019 1 1 1 1 IRAP 1 1 1 1 FedRAMP Moderate (East/West) 1 1 0 1 FedRAMP High (GovCloud) 1 1 0 1 DOD CC SRG 1 DISA Review (IL5) 0 1 HIPAA BAA 1 1 1 1 MTCS 1 1 0 1 C5 1 1 0 1 K-ISMS 1 1 0 1 ENS High 1 1 0 1 OSPAR 1 1 0 1 HITRUST CSF 1 1 1 1 Compliance status changes over time. For the latest status, always refer to https://aws.amazon.com/compliance/services-in-scope/ . For further information about cloud accreditation models and best practices, see the AWS whitepaper, Accreditation Models for Secure Cloud Adoption","title":"Compliance"},{"location":"security/docs/compliance/#shifting-left","text":"The concept of shifting left involves catching policy violations and errors earlier in the software development lifecycle. From a security perspective, this can be very beneficial. A developer, for example, can fix issues with their configuration before their application is deployed to the cluster. Catching mistakes like this earlier will help prevent configurations that violate your policies from being deployed.","title":"Shifting Left"},{"location":"security/docs/compliance/#policy-as-code","text":"Policy can be thought of as a set of rules for governing behaviors, i.e. behaviors that are allowed or those that are prohibited. For example, you may have a policy that says that all Dockerfiles should include a USER directive that causes the container to run as a non-root user. As a document, a policy like this can be hard to discover and enforce. It may also become outdated as your requirements change. With Policy as Code (PaC) solutions, you can automate security, compliance, and privacy controls that detect, prevent, reduce, and counteract known and persistent threats. Furthermore, they give you mechanism to codify your policies and manage them as you do other code artifacts. The benefit of this approach is that you can reuse your DevOps and GitOps strategies to manage and consistently apply policies across fleets of Kubernetes clusters. Please refer to Pod Security for information about PaC options and the future of PSPs.","title":"Policy as Code"},{"location":"security/docs/compliance/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/compliance/#use-policy-as-code-tools-in-pipelines-to-detect-violations-before-deployment","text":"OPA is an open source policy engine that's part of the CNCF. It's used for making policy decisions and can be run a variety of different ways, e.g. as a language library or a service. OPA policies are written in a Domain Specific Language (DSL) called Rego. While it is often run as part of a Kubernetes Dynamic Admission Controller as the Gatekeeper project, OPA can also be incorporated into your CI/CD pipeline. This allows developers to get feedback about their configuration earlier in the release cycle which can subsequently help them resolve issues before they get to production. A collection of common OPA policies can be found in the GitHub repository for this project. Conftest is built on top of OPA and it provides a developer focused experience for testing Kubernetes configuration. Kyverno is a policy engine designed for Kubernetes. With Kyverno, policies are managed as Kubernetes resources and no new language is required to write policies. This allows using familiar tools such as kubectl, git, and kustomize to manage policies. Kyverno policies can validate, mutate, and generate Kubernetes resources plus ensure OCI image supply chain security. The Kyverno CLI can be used to test policies and validate resources as part of a CI/CD pipeline. All the Kyverno community policies can be found on the Kyverno website , and for examples using the Kyverno CLI to write tests in pipelines, see the policies repository .","title":"Use policy-as-code tools in pipelines to detect violations before deployment"},{"location":"security/docs/compliance/#tools-and-resources","text":"kube-bench docker-bench-security AWS Inspector Kubernetes Security Review A 3rd party security assessment of Kubernetes 1.13.4 (2019)","title":"Tools and resources"},{"location":"security/docs/data.kr/","text":"{'name': 'English', 'build': True} Data encryption and secrets management \u00b6 Encryption at rest \u00b6 There are three different AWS-native storage options you can use with Kubernetes: EBS , EFS , and FSx for Lustre . All three offer encryption at rest using a service managed key or a customer master key (CMK). For EBS you can use the in-tree storage driver or the EBS CSI driver . Both include parameters for encrypting volumes and supplying a CMK. For EFS, you can use the EFS CSI driver , however, unlike EBS, the EFS CSI driver does not support dynamic provisioning. If you want to use EFS with EKS, you will need to provision and configure at-rest encryption for the file system prior to creating a PV. For further information about EFS file encryption, please refer to Encrypting Data at Rest . Besides offering at-rest encryption, EFS and FSx for Lustre include an option for encrypting data in transit. FSx for Luster does this by default. For EFS, you can add transport encryption by adding the tls parameter to mountOptions in your PV as in this example: apiVersion : v1 kind : PersistentVolume metadata : name : efs-pv spec : capacity : storage : 5Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Retain storageClassName : efs-sc mountOptions : - tls csi : driver : efs.csi.aws.com volumeHandle : <file_system_id> The FSx CSI driver supports dynamic provisioning of Lustre file systems. It encrypts data with a service managed key by default, although there is an option to provide your own CMK as in this example: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : fsx-sc provisioner : fsx.csi.aws.com parameters : subnetId : subnet-056da83524edbe641 securityGroupIds : sg-086f61ea73388fb6b deploymentType : PERSISTENT_1 kmsKeyId : <kms_arn> Attention As of May 28, 2020 all data written to the ephemeral volume in EKS Fargate pods is encrypted by default using an industry-standard AES-256 cryptographic algorithm. No modifications to your application are necessary as encryption and decryption are handled seamlessly by the service. Recommendations \u00b6 Encrypt data at rest \u00b6 Encrypting data at rest is considered a best practice. If you're unsure whether encryption is necessary, encrypt your data. Rotate your CMKs periodically \u00b6 Configure KMS to automatically rotate your CMKs. This will rotate your keys once a year while saving old keys indefinitely so that your data can still be decrypted. For additional information see Rotating customer master keys Use EFS access points to simplify access to shared datasets \u00b6 If you have shared datasets with different POSIX file permissions or want to restrict access to part of the shared file system by creating different mount points, consider using EFS access points. To learn more about working with access points, see https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html . Today, if you want to use an access point (AP) you'll need to reference the AP in the PV's volumeHandle parameter. Attention As of March 23, 2021 the EFS CSI driver supports dynamic provisioning of EFS Access Points. Access points are application-specific entry points into an EFS file system that make it easier to share a file system between multiple pods. Each EFS file system can have up to 120 PVs. See Introducing Amazon EFS CSI dynamic provisioning for additional information. Secrets management \u00b6 Kubernetes secrets are used to store sensitive information, such as user certificates, passwords, or API keys. They are persisted in etcd as base64 encoded strings. On EKS, the EBS volumes for etcd nodes are encrypted with EBS encryption . A pod can retrieve a Kubernetes secrets objects by referencing the secret in the podSpec . These secrets can either be mapped to an environment variable or mounted as volume. For additional information on creating secrets, see https://kubernetes.io/docs/concepts/configuration/secret/ . Caution Secrets in a particular namespace can be referenced by all pods in the secret's namespace. Caution The node authorizer allows the Kubelet to read all of the secrets mounted to the node. Recommendations \u00b6 Use AWS KMS for envelope encryption of Kubernetes secrets \u00b6 This allows you to encrypt your secrets with a unique data encryption key (DEK). The DEK is then encrypted using a key encryption key (KEK) from AWS KMS which can be automatically rotated on a recurring schedule. With the KMS plugin for Kubernetes, all Kubernetes secrets are stored in etcd in ciphertext instead of plain text and can only be decrypted by the Kubernetes API server. For additional details, see using EKS encryption provider support for defense in depth Audit the use of Kubernetes Secrets \u00b6 On EKS, turn on audit logging and create a CloudWatch metrics filter and alarm to alert you when a secret is used (optional). The following is an example of a metrics filter for the Kubernetes audit log, {($.verb=\"get\") && ($.objectRef.resource=\"secret\")} . You can also use the following queries with CloudWatch Log Insights: fields @timestamp, @message | sort @timestamp desc | limit 100 | stats count(*) by objectRef.name as secret | filter verb=\"get\" and objectRef.resource=\"secrets\" The above query will display the number of times a secret has been accessed within a specific timeframe. fields @timestamp, @message | sort @timestamp desc | limit 100 | filter verb=\"get\" and objectRef.resource=\"secrets\" | display objectRef.namespace, objectRef.name, user.username, responseStatus.code This query will display the secret, along with the namespace and username of the user who attempted to access the secret and the response code. Rotate your secrets periodically \u00b6 Kubernetes doesn't automatically rotate secrets. If you have to rotate secrets, consider using an external secret store, e.g. Vault or AWS Secrets Manager. Use separate namespaces as a way to isolate secrets from different applications \u00b6 If you have secrets that cannot be shared between applications in a namespace, create a separate namespace for those applications. Use volume mounts instead of environment variables \u00b6 The values of environment variables can unintentionally appear in logs. Secrets mounted as volumes are instantiated as tmpfs volumes (a RAM backed file system) that are automatically removed from the node when the pod is deleted. Use an external secrets provider \u00b6 There are several viable alternatives to using Kubernetes secrets, including AWS Secrets Manager and Hashicorp's Vault . These services offer features such as fine grained access controls, strong encryption, and automatic rotation of secrets that are not available with Kubernetes Secrets. Bitnami's Sealed Secrets is another approach that uses asymmetric encryption to create \"sealed secrets\". A public key is used to encrypt the secret while the private key used to decrypt the secret is kept within the cluster, allowing you to safely store sealed secrets in source control systems like Git. See Managing secrets deployment in Kubernetes using Sealed Secrets for further information. As the use of external secrets stores has grown, so has need for integrating them with Kubernetes. The Secret Store CSI Driver is a community project that uses the CSI driver model to fetch secrets from external secret stores. Currently, the Driver has support for AWS Secrets Manager , Azure, Vault, and GCP. The AWS provider supports both AWS Secrets Manager and AWS Parameter Store. It can also be configured to rotate secrets when they expire and can synchronize AWS Secrets Manager secrets to Kubernetes Secrets. Synchronization of secrets can be useful when you need to reference a secret as an environment variable instead of reading them from a volume. Note When the the secret store CSI driver has to fetch a secret, it assumes the IRSA role assigned to the pod that references a secret. The code for this operation can be found here . For additional information about the AWS Secrets & Configuration Provider (ASCP) refer to the following resources: How to use AWS Secrets Configuration Provider with Kubernetes Secret Store CSI Driver Integrating Secrets Manager secrets with Kubernetes Secrets Store CSI Driver external-secrets is yet another way to use an external secret store with Kubernetes. Like the CSI Driver, external-secrets works against a variety of different backends, including AWS Secrets Manager. The difference is, rather than retrieving secrets from the external secret store, external-secrets copies secrets from these backends to Kubernetes as Secrets. This lets you manage secrets using your preferred secret store and interact with secrets in a Kubernetes-native way.","title":"Data encryption and secrets management"},{"location":"security/docs/data.kr/#data-encryption-and-secrets-management","text":"","title":"Data encryption and secrets management"},{"location":"security/docs/data.kr/#encryption-at-rest","text":"There are three different AWS-native storage options you can use with Kubernetes: EBS , EFS , and FSx for Lustre . All three offer encryption at rest using a service managed key or a customer master key (CMK). For EBS you can use the in-tree storage driver or the EBS CSI driver . Both include parameters for encrypting volumes and supplying a CMK. For EFS, you can use the EFS CSI driver , however, unlike EBS, the EFS CSI driver does not support dynamic provisioning. If you want to use EFS with EKS, you will need to provision and configure at-rest encryption for the file system prior to creating a PV. For further information about EFS file encryption, please refer to Encrypting Data at Rest . Besides offering at-rest encryption, EFS and FSx for Lustre include an option for encrypting data in transit. FSx for Luster does this by default. For EFS, you can add transport encryption by adding the tls parameter to mountOptions in your PV as in this example: apiVersion : v1 kind : PersistentVolume metadata : name : efs-pv spec : capacity : storage : 5Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Retain storageClassName : efs-sc mountOptions : - tls csi : driver : efs.csi.aws.com volumeHandle : <file_system_id> The FSx CSI driver supports dynamic provisioning of Lustre file systems. It encrypts data with a service managed key by default, although there is an option to provide your own CMK as in this example: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : fsx-sc provisioner : fsx.csi.aws.com parameters : subnetId : subnet-056da83524edbe641 securityGroupIds : sg-086f61ea73388fb6b deploymentType : PERSISTENT_1 kmsKeyId : <kms_arn> Attention As of May 28, 2020 all data written to the ephemeral volume in EKS Fargate pods is encrypted by default using an industry-standard AES-256 cryptographic algorithm. No modifications to your application are necessary as encryption and decryption are handled seamlessly by the service.","title":"Encryption at rest"},{"location":"security/docs/data.kr/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/data.kr/#encrypt-data-at-rest","text":"Encrypting data at rest is considered a best practice. If you're unsure whether encryption is necessary, encrypt your data.","title":"Encrypt data at rest"},{"location":"security/docs/data.kr/#rotate-your-cmks-periodically","text":"Configure KMS to automatically rotate your CMKs. This will rotate your keys once a year while saving old keys indefinitely so that your data can still be decrypted. For additional information see Rotating customer master keys","title":"Rotate your CMKs periodically"},{"location":"security/docs/data.kr/#use-efs-access-points-to-simplify-access-to-shared-datasets","text":"If you have shared datasets with different POSIX file permissions or want to restrict access to part of the shared file system by creating different mount points, consider using EFS access points. To learn more about working with access points, see https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html . Today, if you want to use an access point (AP) you'll need to reference the AP in the PV's volumeHandle parameter. Attention As of March 23, 2021 the EFS CSI driver supports dynamic provisioning of EFS Access Points. Access points are application-specific entry points into an EFS file system that make it easier to share a file system between multiple pods. Each EFS file system can have up to 120 PVs. See Introducing Amazon EFS CSI dynamic provisioning for additional information.","title":"Use EFS access points to simplify access to shared datasets"},{"location":"security/docs/data.kr/#secrets-management","text":"Kubernetes secrets are used to store sensitive information, such as user certificates, passwords, or API keys. They are persisted in etcd as base64 encoded strings. On EKS, the EBS volumes for etcd nodes are encrypted with EBS encryption . A pod can retrieve a Kubernetes secrets objects by referencing the secret in the podSpec . These secrets can either be mapped to an environment variable or mounted as volume. For additional information on creating secrets, see https://kubernetes.io/docs/concepts/configuration/secret/ . Caution Secrets in a particular namespace can be referenced by all pods in the secret's namespace. Caution The node authorizer allows the Kubelet to read all of the secrets mounted to the node.","title":"Secrets management"},{"location":"security/docs/data.kr/#recommendations_1","text":"","title":"Recommendations"},{"location":"security/docs/data.kr/#use-aws-kms-for-envelope-encryption-of-kubernetes-secrets","text":"This allows you to encrypt your secrets with a unique data encryption key (DEK). The DEK is then encrypted using a key encryption key (KEK) from AWS KMS which can be automatically rotated on a recurring schedule. With the KMS plugin for Kubernetes, all Kubernetes secrets are stored in etcd in ciphertext instead of plain text and can only be decrypted by the Kubernetes API server. For additional details, see using EKS encryption provider support for defense in depth","title":"Use AWS KMS for envelope encryption of Kubernetes secrets"},{"location":"security/docs/data.kr/#audit-the-use-of-kubernetes-secrets","text":"On EKS, turn on audit logging and create a CloudWatch metrics filter and alarm to alert you when a secret is used (optional). The following is an example of a metrics filter for the Kubernetes audit log, {($.verb=\"get\") && ($.objectRef.resource=\"secret\")} . You can also use the following queries with CloudWatch Log Insights: fields @timestamp, @message | sort @timestamp desc | limit 100 | stats count(*) by objectRef.name as secret | filter verb=\"get\" and objectRef.resource=\"secrets\" The above query will display the number of times a secret has been accessed within a specific timeframe. fields @timestamp, @message | sort @timestamp desc | limit 100 | filter verb=\"get\" and objectRef.resource=\"secrets\" | display objectRef.namespace, objectRef.name, user.username, responseStatus.code This query will display the secret, along with the namespace and username of the user who attempted to access the secret and the response code.","title":"Audit the use of Kubernetes Secrets"},{"location":"security/docs/data.kr/#rotate-your-secrets-periodically","text":"Kubernetes doesn't automatically rotate secrets. If you have to rotate secrets, consider using an external secret store, e.g. Vault or AWS Secrets Manager.","title":"Rotate your secrets periodically"},{"location":"security/docs/data.kr/#use-separate-namespaces-as-a-way-to-isolate-secrets-from-different-applications","text":"If you have secrets that cannot be shared between applications in a namespace, create a separate namespace for those applications.","title":"Use separate namespaces as a way to isolate secrets from different applications"},{"location":"security/docs/data.kr/#use-volume-mounts-instead-of-environment-variables","text":"The values of environment variables can unintentionally appear in logs. Secrets mounted as volumes are instantiated as tmpfs volumes (a RAM backed file system) that are automatically removed from the node when the pod is deleted.","title":"Use volume mounts instead of environment variables"},{"location":"security/docs/data.kr/#use-an-external-secrets-provider","text":"There are several viable alternatives to using Kubernetes secrets, including AWS Secrets Manager and Hashicorp's Vault . These services offer features such as fine grained access controls, strong encryption, and automatic rotation of secrets that are not available with Kubernetes Secrets. Bitnami's Sealed Secrets is another approach that uses asymmetric encryption to create \"sealed secrets\". A public key is used to encrypt the secret while the private key used to decrypt the secret is kept within the cluster, allowing you to safely store sealed secrets in source control systems like Git. See Managing secrets deployment in Kubernetes using Sealed Secrets for further information. As the use of external secrets stores has grown, so has need for integrating them with Kubernetes. The Secret Store CSI Driver is a community project that uses the CSI driver model to fetch secrets from external secret stores. Currently, the Driver has support for AWS Secrets Manager , Azure, Vault, and GCP. The AWS provider supports both AWS Secrets Manager and AWS Parameter Store. It can also be configured to rotate secrets when they expire and can synchronize AWS Secrets Manager secrets to Kubernetes Secrets. Synchronization of secrets can be useful when you need to reference a secret as an environment variable instead of reading them from a volume. Note When the the secret store CSI driver has to fetch a secret, it assumes the IRSA role assigned to the pod that references a secret. The code for this operation can be found here . For additional information about the AWS Secrets & Configuration Provider (ASCP) refer to the following resources: How to use AWS Secrets Configuration Provider with Kubernetes Secret Store CSI Driver Integrating Secrets Manager secrets with Kubernetes Secrets Store CSI Driver external-secrets is yet another way to use an external secret store with Kubernetes. Like the CSI Driver, external-secrets works against a variety of different backends, including AWS Secrets Manager. The difference is, rather than retrieving secrets from the external secret store, external-secrets copies secrets from these backends to Kubernetes as Secrets. This lets you manage secrets using your preferred secret store and interact with secrets in a Kubernetes-native way.","title":"Use an external secrets provider"},{"location":"security/docs/data/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Data encryption and secrets management \u00b6 Encryption at rest \u00b6 There are three different AWS-native storage options you can use with Kubernetes: EBS , EFS , and FSx for Lustre . All three offer encryption at rest using a service managed key or a customer master key (CMK). For EBS you can use the in-tree storage driver or the EBS CSI driver . Both include parameters for encrypting volumes and supplying a CMK. For EFS, you can use the EFS CSI driver , however, unlike EBS, the EFS CSI driver does not support dynamic provisioning. If you want to use EFS with EKS, you will need to provision and configure at-rest encryption for the file system prior to creating a PV. For further information about EFS file encryption, please refer to Encrypting Data at Rest . Besides offering at-rest encryption, EFS and FSx for Lustre include an option for encrypting data in transit. FSx for Luster does this by default. For EFS, you can add transport encryption by adding the tls parameter to mountOptions in your PV as in this example: apiVersion : v1 kind : PersistentVolume metadata : name : efs-pv spec : capacity : storage : 5Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Retain storageClassName : efs-sc mountOptions : - tls csi : driver : efs.csi.aws.com volumeHandle : <file_system_id> The FSx CSI driver supports dynamic provisioning of Lustre file systems. It encrypts data with a service managed key by default, although there is an option to provide your own CMK as in this example: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : fsx-sc provisioner : fsx.csi.aws.com parameters : subnetId : subnet-056da83524edbe641 securityGroupIds : sg-086f61ea73388fb6b deploymentType : PERSISTENT_1 kmsKeyId : <kms_arn> Attention As of May 28, 2020 all data written to the ephemeral volume in EKS Fargate pods is encrypted by default using an industry-standard AES-256 cryptographic algorithm. No modifications to your application are necessary as encryption and decryption are handled seamlessly by the service. Recommendations \u00b6 Encrypt data at rest \u00b6 Encrypting data at rest is considered a best practice. If you're unsure whether encryption is necessary, encrypt your data. Rotate your CMKs periodically \u00b6 Configure KMS to automatically rotate your CMKs. This will rotate your keys once a year while saving old keys indefinitely so that your data can still be decrypted. For additional information see Rotating customer master keys Use EFS access points to simplify access to shared datasets \u00b6 If you have shared datasets with different POSIX file permissions or want to restrict access to part of the shared file system by creating different mount points, consider using EFS access points. To learn more about working with access points, see https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html . Today, if you want to use an access point (AP) you'll need to reference the AP in the PV's volumeHandle parameter. Attention As of March 23, 2021 the EFS CSI driver supports dynamic provisioning of EFS Access Points. Access points are application-specific entry points into an EFS file system that make it easier to share a file system between multiple pods. Each EFS file system can have up to 120 PVs. See Introducing Amazon EFS CSI dynamic provisioning for additional information. Secrets management \u00b6 Kubernetes secrets are used to store sensitive information, such as user certificates, passwords, or API keys. They are persisted in etcd as base64 encoded strings. On EKS, the EBS volumes for etcd nodes are encrypted with EBS encryption . A pod can retrieve a Kubernetes secrets objects by referencing the secret in the podSpec . These secrets can either be mapped to an environment variable or mounted as volume. For additional information on creating secrets, see https://kubernetes.io/docs/concepts/configuration/secret/ . Caution Secrets in a particular namespace can be referenced by all pods in the secret's namespace. Caution The node authorizer allows the Kubelet to read all of the secrets mounted to the node. Recommendations \u00b6 Use AWS KMS for envelope encryption of Kubernetes secrets \u00b6 This allows you to encrypt your secrets with a unique data encryption key (DEK). The DEK is then encrypted using a key encryption key (KEK) from AWS KMS which can be automatically rotated on a recurring schedule. With the KMS plugin for Kubernetes, all Kubernetes secrets are stored in etcd in ciphertext instead of plain text and can only be decrypted by the Kubernetes API server. For additional details, see using EKS encryption provider support for defense in depth Audit the use of Kubernetes Secrets \u00b6 On EKS, turn on audit logging and create a CloudWatch metrics filter and alarm to alert you when a secret is used (optional). The following is an example of a metrics filter for the Kubernetes audit log, {($.verb=\"get\") && ($.objectRef.resource=\"secret\")} . You can also use the following queries with CloudWatch Log Insights: fields @timestamp, @message | sort @timestamp desc | limit 100 | stats count(*) by objectRef.name as secret | filter verb=\"get\" and objectRef.resource=\"secrets\" The above query will display the number of times a secret has been accessed within a specific timeframe. fields @timestamp, @message | sort @timestamp desc | limit 100 | filter verb=\"get\" and objectRef.resource=\"secrets\" | display objectRef.namespace, objectRef.name, user.username, responseStatus.code This query will display the secret, along with the namespace and username of the user who attempted to access the secret and the response code. Rotate your secrets periodically \u00b6 Kubernetes doesn't automatically rotate secrets. If you have to rotate secrets, consider using an external secret store, e.g. Vault or AWS Secrets Manager. Use separate namespaces as a way to isolate secrets from different applications \u00b6 If you have secrets that cannot be shared between applications in a namespace, create a separate namespace for those applications. Use volume mounts instead of environment variables \u00b6 The values of environment variables can unintentionally appear in logs. Secrets mounted as volumes are instantiated as tmpfs volumes (a RAM backed file system) that are automatically removed from the node when the pod is deleted. Use an external secrets provider \u00b6 There are several viable alternatives to using Kubernetes secrets, including AWS Secrets Manager and Hashicorp's Vault . These services offer features such as fine grained access controls, strong encryption, and automatic rotation of secrets that are not available with Kubernetes Secrets. Bitnami's Sealed Secrets is another approach that uses asymmetric encryption to create \"sealed secrets\". A public key is used to encrypt the secret while the private key used to decrypt the secret is kept within the cluster, allowing you to safely store sealed secrets in source control systems like Git. See Managing secrets deployment in Kubernetes using Sealed Secrets for further information. As the use of external secrets stores has grown, so has need for integrating them with Kubernetes. The Secret Store CSI Driver is a community project that uses the CSI driver model to fetch secrets from external secret stores. Currently, the Driver has support for AWS Secrets Manager , Azure, Vault, and GCP. The AWS provider supports both AWS Secrets Manager and AWS Parameter Store. It can also be configured to rotate secrets when they expire and can synchronize AWS Secrets Manager secrets to Kubernetes Secrets. Synchronization of secrets can be useful when you need to reference a secret as an environment variable instead of reading them from a volume. Note When the the secret store CSI driver has to fetch a secret, it assumes the IRSA role assigned to the pod that references a secret. The code for this operation can be found here . For additional information about the AWS Secrets & Configuration Provider (ASCP) refer to the following resources: How to use AWS Secrets Configuration Provider with Kubernetes Secret Store CSI Driver Integrating Secrets Manager secrets with Kubernetes Secrets Store CSI Driver external-secrets is yet another way to use an external secret store with Kubernetes. Like the CSI Driver, external-secrets works against a variety of different backends, including AWS Secrets Manager. The difference is, rather than retrieving secrets from the external secret store, external-secrets copies secrets from these backends to Kubernetes as Secrets. This lets you manage secrets using your preferred secret store and interact with secrets in a Kubernetes-native way.","title":"Data Encryption and Secrets Management ({'name': 'English', 'build': True})"},{"location":"security/docs/data/#data-encryption-and-secrets-management","text":"","title":"Data encryption and secrets management"},{"location":"security/docs/data/#encryption-at-rest","text":"There are three different AWS-native storage options you can use with Kubernetes: EBS , EFS , and FSx for Lustre . All three offer encryption at rest using a service managed key or a customer master key (CMK). For EBS you can use the in-tree storage driver or the EBS CSI driver . Both include parameters for encrypting volumes and supplying a CMK. For EFS, you can use the EFS CSI driver , however, unlike EBS, the EFS CSI driver does not support dynamic provisioning. If you want to use EFS with EKS, you will need to provision and configure at-rest encryption for the file system prior to creating a PV. For further information about EFS file encryption, please refer to Encrypting Data at Rest . Besides offering at-rest encryption, EFS and FSx for Lustre include an option for encrypting data in transit. FSx for Luster does this by default. For EFS, you can add transport encryption by adding the tls parameter to mountOptions in your PV as in this example: apiVersion : v1 kind : PersistentVolume metadata : name : efs-pv spec : capacity : storage : 5Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Retain storageClassName : efs-sc mountOptions : - tls csi : driver : efs.csi.aws.com volumeHandle : <file_system_id> The FSx CSI driver supports dynamic provisioning of Lustre file systems. It encrypts data with a service managed key by default, although there is an option to provide your own CMK as in this example: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : fsx-sc provisioner : fsx.csi.aws.com parameters : subnetId : subnet-056da83524edbe641 securityGroupIds : sg-086f61ea73388fb6b deploymentType : PERSISTENT_1 kmsKeyId : <kms_arn> Attention As of May 28, 2020 all data written to the ephemeral volume in EKS Fargate pods is encrypted by default using an industry-standard AES-256 cryptographic algorithm. No modifications to your application are necessary as encryption and decryption are handled seamlessly by the service.","title":"Encryption at rest"},{"location":"security/docs/data/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/data/#encrypt-data-at-rest","text":"Encrypting data at rest is considered a best practice. If you're unsure whether encryption is necessary, encrypt your data.","title":"Encrypt data at rest"},{"location":"security/docs/data/#rotate-your-cmks-periodically","text":"Configure KMS to automatically rotate your CMKs. This will rotate your keys once a year while saving old keys indefinitely so that your data can still be decrypted. For additional information see Rotating customer master keys","title":"Rotate your CMKs periodically"},{"location":"security/docs/data/#use-efs-access-points-to-simplify-access-to-shared-datasets","text":"If you have shared datasets with different POSIX file permissions or want to restrict access to part of the shared file system by creating different mount points, consider using EFS access points. To learn more about working with access points, see https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html . Today, if you want to use an access point (AP) you'll need to reference the AP in the PV's volumeHandle parameter. Attention As of March 23, 2021 the EFS CSI driver supports dynamic provisioning of EFS Access Points. Access points are application-specific entry points into an EFS file system that make it easier to share a file system between multiple pods. Each EFS file system can have up to 120 PVs. See Introducing Amazon EFS CSI dynamic provisioning for additional information.","title":"Use EFS access points to simplify access to shared datasets"},{"location":"security/docs/data/#secrets-management","text":"Kubernetes secrets are used to store sensitive information, such as user certificates, passwords, or API keys. They are persisted in etcd as base64 encoded strings. On EKS, the EBS volumes for etcd nodes are encrypted with EBS encryption . A pod can retrieve a Kubernetes secrets objects by referencing the secret in the podSpec . These secrets can either be mapped to an environment variable or mounted as volume. For additional information on creating secrets, see https://kubernetes.io/docs/concepts/configuration/secret/ . Caution Secrets in a particular namespace can be referenced by all pods in the secret's namespace. Caution The node authorizer allows the Kubelet to read all of the secrets mounted to the node.","title":"Secrets management"},{"location":"security/docs/data/#recommendations_1","text":"","title":"Recommendations"},{"location":"security/docs/data/#use-aws-kms-for-envelope-encryption-of-kubernetes-secrets","text":"This allows you to encrypt your secrets with a unique data encryption key (DEK). The DEK is then encrypted using a key encryption key (KEK) from AWS KMS which can be automatically rotated on a recurring schedule. With the KMS plugin for Kubernetes, all Kubernetes secrets are stored in etcd in ciphertext instead of plain text and can only be decrypted by the Kubernetes API server. For additional details, see using EKS encryption provider support for defense in depth","title":"Use AWS KMS for envelope encryption of Kubernetes secrets"},{"location":"security/docs/data/#audit-the-use-of-kubernetes-secrets","text":"On EKS, turn on audit logging and create a CloudWatch metrics filter and alarm to alert you when a secret is used (optional). The following is an example of a metrics filter for the Kubernetes audit log, {($.verb=\"get\") && ($.objectRef.resource=\"secret\")} . You can also use the following queries with CloudWatch Log Insights: fields @timestamp, @message | sort @timestamp desc | limit 100 | stats count(*) by objectRef.name as secret | filter verb=\"get\" and objectRef.resource=\"secrets\" The above query will display the number of times a secret has been accessed within a specific timeframe. fields @timestamp, @message | sort @timestamp desc | limit 100 | filter verb=\"get\" and objectRef.resource=\"secrets\" | display objectRef.namespace, objectRef.name, user.username, responseStatus.code This query will display the secret, along with the namespace and username of the user who attempted to access the secret and the response code.","title":"Audit the use of Kubernetes Secrets"},{"location":"security/docs/data/#rotate-your-secrets-periodically","text":"Kubernetes doesn't automatically rotate secrets. If you have to rotate secrets, consider using an external secret store, e.g. Vault or AWS Secrets Manager.","title":"Rotate your secrets periodically"},{"location":"security/docs/data/#use-separate-namespaces-as-a-way-to-isolate-secrets-from-different-applications","text":"If you have secrets that cannot be shared between applications in a namespace, create a separate namespace for those applications.","title":"Use separate namespaces as a way to isolate secrets from different applications"},{"location":"security/docs/data/#use-volume-mounts-instead-of-environment-variables","text":"The values of environment variables can unintentionally appear in logs. Secrets mounted as volumes are instantiated as tmpfs volumes (a RAM backed file system) that are automatically removed from the node when the pod is deleted.","title":"Use volume mounts instead of environment variables"},{"location":"security/docs/data/#use-an-external-secrets-provider","text":"There are several viable alternatives to using Kubernetes secrets, including AWS Secrets Manager and Hashicorp's Vault . These services offer features such as fine grained access controls, strong encryption, and automatic rotation of secrets that are not available with Kubernetes Secrets. Bitnami's Sealed Secrets is another approach that uses asymmetric encryption to create \"sealed secrets\". A public key is used to encrypt the secret while the private key used to decrypt the secret is kept within the cluster, allowing you to safely store sealed secrets in source control systems like Git. See Managing secrets deployment in Kubernetes using Sealed Secrets for further information. As the use of external secrets stores has grown, so has need for integrating them with Kubernetes. The Secret Store CSI Driver is a community project that uses the CSI driver model to fetch secrets from external secret stores. Currently, the Driver has support for AWS Secrets Manager , Azure, Vault, and GCP. The AWS provider supports both AWS Secrets Manager and AWS Parameter Store. It can also be configured to rotate secrets when they expire and can synchronize AWS Secrets Manager secrets to Kubernetes Secrets. Synchronization of secrets can be useful when you need to reference a secret as an environment variable instead of reading them from a volume. Note When the the secret store CSI driver has to fetch a secret, it assumes the IRSA role assigned to the pod that references a secret. The code for this operation can be found here . For additional information about the AWS Secrets & Configuration Provider (ASCP) refer to the following resources: How to use AWS Secrets Configuration Provider with Kubernetes Secret Store CSI Driver Integrating Secrets Manager secrets with Kubernetes Secrets Store CSI Driver external-secrets is yet another way to use an external secret store with Kubernetes. Like the CSI Driver, external-secrets works against a variety of different backends, including AWS Secrets Manager. The difference is, rather than retrieving secrets from the external secret store, external-secrets copies secrets from these backends to Kubernetes as Secrets. This lets you manage secrets using your preferred secret store and interact with secrets in a Kubernetes-native way.","title":"Use an external secrets provider"},{"location":"security/docs/detective.kr/","text":"{'name': 'English', 'build': True} \uac10\uc0ac \ubc0f \ub85c\uae45 \u00b6 [ \uac10\uc0ac ] \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \ubd84\uc11d \ud558\ub294 \uac83\uc740 \uc5ec\ub7ec \uac00\uc9c0 \uc774\uc720\ub85c \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub85c\uadf8\ub294 \uadfc\ubcf8 \uc6d0\uc778 \ubd84\uc11d \ubc0f \uc18d\uc131, \uc989 \ud2b9\uc815 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ubcc0\uacbd\uc744 \uc124\uba85\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucda9\ubd84\ud55c \ub85c\uadf8\uac00 \uc218\uc9d1\ub418\uba74 \ube44\uc815\uc0c1\uc801\uc778 \ub3d9\uc791\uc744 \uac10\uc9c0\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c \uac10\uc0ac \ub85c\uadf8\ub294 Amazon Cloudwatch Logs\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4. EKS\uc5d0 \ub300\ud55c \uac10\uc0ac \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. apiVersion : audit.k8s.io/v1beta1 \uc885\ub958 : \uc815\ucc45 \uaddc\uce59 : # aws-auth configmap \ubcc0\uacbd \uc0ac\ud56d \uae30\ub85d - \uc218\uc900 : \uc694\uccad \uc751\ub2f5 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" , \"\uc0ad\uc81c\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"configmaps\" ] \ub9ac\uc18c\uc2a4 \uc774\ub984 : [ \"aws-auth\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : [ \"\uc2dc\uc2a4\ud15c:kube-proxy\" ] \ub3d9\uc0ac : [ \"\uc2dc\uacc4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc5d4\ub4dc\ud3ec\uc778\ud2b8\" , \"\uc11c\ube44\uc2a4\" , \"\uc11c\ube44\uc2a4/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c users : [ \"kubelet\" ] # \ub808\uac70\uc2dc kubelet ID \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc\" , \"\ub178\ub4dc/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 \uadf8\ub8f9 : [ \"\uc2dc\uc2a4\ud15c:\ub178\ub4dc\" ] \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc\" , \"\ub178\ub4dc/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : - \uc2dc\uc2a4\ud15c:kube-controller-manager - \uc2dc\uc2a4\ud15c : kube-scheduler - \uc2dc\uc2a4\ud15c:\uc11c\ube44\uc2a4 \uacc4\uc815:kube-\uc2dc\uc2a4\ud15c:\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ucee8\ud2b8\ub864\ub7ec \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" , \"\uc5c5\ub370\uc774\ud2b8\ud558\ub2e4\" ] \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc5d4\ub4dc\ud3ec\uc778\ud2b8\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : [ \"\uc2dc\uc2a4\ud15c:apiserver\" ] \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\" , \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc0c1\ud0dc\" , \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc885\ub8cc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : - \uc2dc\uc2a4\ud15c:kube-controller-manager \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" , \"\ubaa9\ub85d\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"metrics.k8s.io\" - \ub808\ubca8 : \uc5c6\uc74c nonResourceURLs : - /healthz* - /\ubc84\uc804 - /swagger* - \ub808\ubca8 : \uc5c6\uc74c \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc774\ubca4\ud2b8\" ] - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 : [ \"kubelet\" , \"system:node-problem-detector\" , \"system:serviceaccount:kube-system:node-problem-detector\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc/\uc0c1\ud0dc\" , \"\ud3ec\ub4dc/\uc0c1\ud0dc\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 \uadf8\ub8f9 : [ \"\uc2dc\uc2a4\ud15c:\ub178\ub4dc\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc/\uc0c1\ud0dc\" , \"\ud3ec\ub4dc/\uc0c1\ud0dc\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 : [ \"system:serviceaccount:kube-system:namespace-controller\" ] \ub3d9\uc0ac : [ \"deletecollection\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # Secrets, ConfigMaps \ubc0f TokenReviews\ub294 \ubbfc\uac10\ud55c \ubc14\uc774\ub108\ub9ac \ub370\uc774\ud130\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ub530\ub77c\uc11c \uba54\ud0c0\ub370\uc774\ud130 \uc218\uc900\uc5d0\uc11c\ub9cc \uae30\ub85d\ud569\ub2c8\ub2e4. - \ub808\ubca8 : \uba54\ud0c0\ub370\uc774\ud130 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ube44\ubc00\" , \"configmaps\" ] - \uadf8\ub8f9 : authentication.k8s.io \uc790\uc6d0 : [ \"tokenreviews\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" \ub9ac\uc18c\uc2a4 : [ \"\uc11c\ube44\uc2a4 \uacc4\uc815/\ud1a0\ud070\" ] - \ub808\ubca8 : \uc758\ub8b0 \ub3d9\uc0ac : [ \"get\" , \"list\" , \"watch\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec - \uadf8\ub8f9 : \"admissionregistration.k8s.io\" - \uadf8\ub8f9 : \"apiextensions.k8s.io\" - \uadf8\ub8f9 : \"apiregistration.k8s.io\" - \uadf8\ub8f9 : \"\uc571\" - \uadf8\ub8f9 : \"authentication.k8s.io\" - \uadf8\ub8f9 : \"authorization.k8s.io\" - \uadf8\ub8f9 : \"\uc790\ub3d9 \ud655\uc7a5\" - \uadf8\ub8f9 : \"\ubc30\uce58\" - \uadf8\ub8f9 : \"certificates.k8s.io\" - \uadf8\ub8f9 : \"\ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\" - \uadf8\ub8f9 : \"metrics.k8s.io\" - \uadf8\ub8f9 : \"networking.k8s.io\" - \uadf8\ub8f9 : \"\uc815\ucc45\" - \uadf8\ub8f9 : \"rbac.authorization.k8s.io\" - \uadf8\ub8f9 : \"scheduling.k8s.io\" - \uadf8\ub8f9 : \"settings.k8s.io\" - \uadf8\ub8f9 : \"storage.k8s.io\" \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # \uc54c\ub824\uc9c4 API\uc758 \uae30\ubcf8 \uc218\uc900 - \uc218\uc900 : \uc694\uccad \uc751\ub2f5 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec - \uadf8\ub8f9 : \"admissionregistration.k8s.io\" - \uadf8\ub8f9 : \"apiextensions.k8s.io\" - \uadf8\ub8f9 : \"apiregistration.k8s.io\" - \uadf8\ub8f9 : \"\uc571\" - \uadf8\ub8f9 : \"authentication.k8s.io\" - \uadf8\ub8f9 : \"authorization.k8s.io\" - \uadf8\ub8f9 : \"\uc790\ub3d9 \ud655\uc7a5\" - \uadf8\ub8f9 : \"\ubc30\uce58\" - \uadf8\ub8f9 : \"certificates.k8s.io\" - \uadf8\ub8f9 : \"\ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\" - \uadf8\ub8f9 : \"metrics.k8s.io\" - \uadf8\ub8f9 : \"networking.k8s.io\" - \uadf8\ub8f9 : \"\uc815\ucc45\" - \uadf8\ub8f9 : \"rbac.authorization.k8s.io\" - \uadf8\ub8f9 : \"scheduling.k8s.io\" - \uadf8\ub8f9 : \"settings.k8s.io\" - \uadf8\ub8f9 : \"storage.k8s.io\" \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # \ub2e4\ub978 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc218\uc900. - \ub808\ubca8 : \uba54\ud0c0\ub370\uc774\ud130 \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" \ucd94\ucc9c \u00b6 \uac10\uc0ac \ub85c\uadf8 \ud65c\uc131\ud654 \u00b6 \uac10\uc0ac \ub85c\uadf8\ub294 EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 EKS \uad00\ub9ac\ud615 Kubernetes \uc81c\uc5b4 \ud50c\ub808\uc778 \ub85c\uadf8\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. \uac10\uc0ac \ub85c\uadf8\uc640 \ud568\uaed8 Kubernetes API \uc11c\ubc84, \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec\uc5d0 \ub300\ud55c \ub85c\uadf8\ub97c \ud3ec\ud568\ud558\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 https://docs.aws.amazon. com/eks/latest/userguide/control-plane-logs.html#enabling-control-plane-log-export . \uc815\ubcf4 \uc81c\uc5b4 \ud50c\ub808\uc778 \ub85c\uae45\uc744 \ud65c\uc131\ud654\ud558\uba74 CloudWatch\uc5d0 \ub85c\uadf8\ub97c \uc800\uc7a5\ud558\ub294 \ub370 \ube44\uc6a9 \uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uc9c0\uc18d\uc801\uc778 \ubcf4\uc548 \ube44\uc6a9\uc5d0 \ub300\ud55c \ub354 \uad11\ubc94\uc704\ud55c \ubb38\uc81c\ub97c \uc81c\uae30\ud569\ub2c8\ub2e4. \uad81\uadf9\uc801\uc73c\ub85c \uc774\ub7ec\ud55c \ube44\uc6a9\uc744 \ubcf4\uc548 \uc704\ubc18 \ube44\uc6a9(\uc608: \uae08\uc804\uc801 \uc190\uc2e4, \ud3c9\ud310 \uc190\uc0c1 \ub4f1)\uacfc \ube44\uad50\ud558\uc5ec \ud3c9\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc758 \uad8c\uc7a5 \uc0ac\ud56d \uc911 \uc77c\ubd80\ub9cc \uad6c\ud604\ud558\uc5ec \ud658\uacbd\uc744 \uc801\uc808\ud558\uac8c \ubcf4\ud638\ud560 \uc218 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 CloudWatch Logs \ud56d\ubaa9\uc758 \ucd5c\ub300 \ud06c\uae30\ub294 256KB \uc778 \ubc18\uba74 \ucd5c\ub300 Kubernetes API \uc694\uccad \ud06c\uae30\ub294 1.5MiB\uc785\ub2c8\ub2e4. 256KB\ubcf4\ub2e4 \ud070 \ub85c\uadf8 \ud56d\ubaa9\uc740 \uc798\ub9ac\uac70\ub098 \uc694\uccad \uba54\ud0c0\ub370\uc774\ud130\ub9cc \ud3ec\ud568\ud569\ub2c8\ub2e4. \uac10\uc0ac \uba54\ud0c0\ub370\uc774\ud130 \ud65c\uc6a9 \u00b6 ' \uc2b9\uc778 \ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc640 'authorization.k8s.io/reason' \uacb0\uc815 \uc774\uc720\ub97c \ub098\ud0c0\ub0b4\ub294 \ub450 \uac1c\uc758 \uc8fc\uc11d\uc774 \ud3ec\ud568 \ub429\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 API \ud638\ucd9c\uc774 \ud5c8\uc6a9\ub41c \uc774\uc720\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc54c\ub78c \uc0dd\uc131 \u00b6 403 Forbidden \ubc0f 401 Unauthorized \uc751\ub2f5\uc774 \uc99d\uac00\ud558\ub294 \uc704\uce58\ub97c \uc790\ub3d9\uc73c\ub85c \uc54c\ub9ac\ub294 \uacbd\ubcf4\ub97c \uc0dd\uc131\ud55c \ub2e4\uc74c host , sourceIPs \ubc0f k8s_user.username \uacfc \uac19\uc740 \uc18d\uc131\uc744 \uc0ac\uc6a9 \ud558\uc5ec \uc774\ub7ec\ud55c \uc694\uccad\uc774 \uc5b4\ub514\uc5d0\uc11c \uc624\ub294\uc9c0 \uc54c\uc544\ub0c5\ub2c8\ub2e4. Log Insights\ub85c \ub85c\uadf8 \ubd84\uc11d \u00b6 CloudWatch Log Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec RBAC \uac1c\uccb4(\uc608: Roles, RoleBindings, ClusterRoles \ubc0f ClusterRoleBindings)\uc5d0 \ub300\ud55c \ubcc0\uacbd \uc0ac\ud56d\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud569\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \uc0d8\ud50c \ucffc\ub9ac\uac00 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. aws-auth ConfigMap \uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4 . \ud544\ub4dc @timestamp, @message | \"kube-apiserver-audit\"\uc640 \uac19\uc740 @logStream \ud544\ud130 | [\"\uc5c5\ub370\uc774\ud2b8\", \"\ud328\uce58\"]\uc758 \ud544\ud130 \ub3d9\uc0ac | \ud544\ud130 objectRef.resource = \"configmaps\" \ubc0f objectRef.name = \"aws-auth\" \ubc0f objectRef.namespace = \"kube-system\" | \uc815\ub82c @timestamp \uc124\uba85 \uc720\ud6a8\uc131 \uac80\uc0ac Webhook\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \uc0dd\uc131 \ub610\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \"kube-apiserver-audit\"\uc640 \uac19\uc740 @logStream \ud544\ud130 | [\"\ub9cc\ub4e4\uae30\", \"\uc5c5\ub370\uc774\ud2b8\", \"\ud328\uce58\"] \ubc0f responseStatus.code = 201\uc758 \ud544\ud130 \ub3d9\uc0ac | \ud544\ud130 objectRef.resource = \"webhook \uad6c\uc131 \uc720\ud6a8\uc131 \uac80\uc0ac\" | \uc815\ub82c @timestamp \uc124\uba85 \uc5ed\ud560\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"roles\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac RoleBindings\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"rolebindings\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac ClusterRole\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"clusterroles\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac ClusterRoleBindings\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"clusterrolebindings\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac \ubcf4\uc548 \ube44\ubc00\uc5d0 \ub300\ud55c \ubb34\ub2e8 \uc77d\uae30 \uc791\uc5c5\uc744 \ud50c\ub85c\ud305\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"secrets\" \ubc0f [\"get\", \"watch\", \"list\"] \ubc0f responseStatus.code=\"401\"\uc758 \ub3d9\uc0ac | \ud1b5\uacc4 count() by bin(1m) \uc2e4\ud328\ud55c \uc775\uba85 \uc694\uccad \ubaa9\ub85d: \ud544\ub4dc @timestamp, @message, sourceIPs.0 | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 user.username=\"system:anonymous\" \ubc0f [\"401\", \"403\"]\uc758 responseStatus.code CloudTrail \ub85c\uadf8 \uac10\uc0ac \u00b6 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ub300\ud55c IAM \uc5ed\ud560(IRSA)\uc744 \ud65c\uc6a9\ud558\ub294 \ud3ec\ub4dc\uc5d0\uc11c \ud638\ucd9c\ud55c AWS API\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uacfc \ud568\uaed8 CloudTrail\uc5d0 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ub429\ub2c8\ub2e4. API\ub97c \ud638\ucd9c\ud558\ub3c4\ub85d \uba85\uc2dc\uc801\uc73c\ub85c \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uc774 \ub85c\uadf8\uc5d0 \ub098\ud0c0\ub098\uba74 IAM \uc5ed\ud560\uc758 \uc2e0\ub8b0 \uc815\ucc45\uc774 \uc798\ubabb \uad6c\uc131\ub418\uc5c8\uc74c\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c Cloudtrail\uc740 AWS API \ud638\ucd9c\uc744 \ud2b9\uc815 IAM \uc8fc\uccb4\uc5d0 \ud560\ub2f9\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4. CloudTrail Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud65c\ub3d9 \ubc1c\uacac \u00b6 CloudTrail \ud1b5\ucc30\ub825\uc740 CloudTrail \ucd94\uc801\uc5d0\uc11c \uc4f0\uae30 \uad00\ub9ac \uc774\ubca4\ud2b8\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc11d\ud558\uace0 \ube44\uc815\uc0c1\uc801\uc778 \ud65c\ub3d9\uc744 \uc54c\ub824\uc90d\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 IRSA\ub97c \uc0ac\uc6a9\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc218\uc784\ud558\ub294 \ud3ec\ub4dc\ub97c \ud3ec\ud568\ud558\uc5ec AWS \uacc4\uc815\uc758 \uc4f0\uae30 API\uc5d0 \ub300\ud55c \ud638\ucd9c \ubcfc\ub968\uc774 \uc99d\uac00\ud558\ub294 \uc2dc\uae30\ub97c \uc2dd\ubcc4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudTrail Insights \ubc1c\ud45c: \ube44\uc815\uc0c1\uc801\uc778 API \ud65c\ub3d9 \uc2dd\ubcc4 \ubc0f \ub300\uc751 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740. \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 \ub85c\uadf8 \ubcfc\ub968\uc774 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c Log Insights \ub610\ub294 \ub2e4\ub978 \ub85c\uadf8 \ubd84\uc11d \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uad6c\ubb38 \ubd84\uc11d\ud558\uace0 \ud544\ud130\ub9c1\ud558\ub294 \uac83\uc774 \ud6a8\uacfc\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc548\uc73c\ub85c Sysdig Falco \ubc0f ekscloudwatch \uc2e4\ud589\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Falco\ub294 \uac10\uc0ac \ub85c\uadf8\ub97c \ubd84\uc11d\ud558\uace0 \uc7a5\uae30\uac04\uc5d0 \uac78\uccd0 \uc774\uc0c1 \ub610\ub294 \uc545\uc6a9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4. ekscloudwatch \ud504\ub85c\uc81d\ud2b8\ub294 \ubd84\uc11d\uc744 \uc704\ud574 CloudWatch\uc5d0\uc11c Falco\ub85c \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4. Falco\ub294 \uace0\uc720\ud55c \ucd94\uac00 \uae30\ub2a5\uacfc \ud568\uaed8 \uae30\ubcf8 \uac10\uc0ac \uaddc\uce59 \uc138\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610 \ub2e4\ub978 \uc635\uc158\uc740 \uac10\uc0ac \ub85c\uadf8\ub97c S3\uc5d0 \uc800\uc7a5\ud558\uace0 SageMaker Random Cut Forest \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\uc5ec \ube44\uc815\uc0c1\uc801\uc778 \ub3d9\uc791\uc744 \ubcf4\uc7a5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00 \uc870\uc0ac. \ud234\ub9c1 \u00b6 \ub2e4\uc74c \uc0c1\uc6a9 \ubc0f \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\ub9bd\ub41c \ubaa8\ubc94 \uc0ac\ub840\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud3c9\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubeaudit \uba54\ud0b7 kube-scan Kubernetes Common Configuration Scoring System \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc704\ud5d8 \uc810\uc218\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. amicontained \uc5b4\ub5a4 \uae30\ub2a5\uc774 \ud5c8\uc6a9\ub418\uace0 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0 \uc758\ud574 \ucc28\ub2e8\ub418\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. kubesec.io \ud3f4\ub77c\ub9ac\uc2a4 \uc2a4\ud0c0\ubcf4\ub4dc kAudit Snyk","title":"\uac10\uc0ac \ubc0f \ub85c\uae45"},{"location":"security/docs/detective.kr/#_1","text":"[ \uac10\uc0ac ] \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\uace0 \ubd84\uc11d \ud558\ub294 \uac83\uc740 \uc5ec\ub7ec \uac00\uc9c0 \uc774\uc720\ub85c \uc720\uc6a9\ud569\ub2c8\ub2e4. \ub85c\uadf8\ub294 \uadfc\ubcf8 \uc6d0\uc778 \ubd84\uc11d \ubc0f \uc18d\uc131, \uc989 \ud2b9\uc815 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ubcc0\uacbd\uc744 \uc124\uba85\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucda9\ubd84\ud55c \ub85c\uadf8\uac00 \uc218\uc9d1\ub418\uba74 \ube44\uc815\uc0c1\uc801\uc778 \ub3d9\uc791\uc744 \uac10\uc9c0\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c \uac10\uc0ac \ub85c\uadf8\ub294 Amazon Cloudwatch Logs\ub85c \uc804\uc1a1\ub429\ub2c8\ub2e4. EKS\uc5d0 \ub300\ud55c \uac10\uc0ac \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. apiVersion : audit.k8s.io/v1beta1 \uc885\ub958 : \uc815\ucc45 \uaddc\uce59 : # aws-auth configmap \ubcc0\uacbd \uc0ac\ud56d \uae30\ub85d - \uc218\uc900 : \uc694\uccad \uc751\ub2f5 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" , \"\uc0ad\uc81c\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"configmaps\" ] \ub9ac\uc18c\uc2a4 \uc774\ub984 : [ \"aws-auth\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : [ \"\uc2dc\uc2a4\ud15c:kube-proxy\" ] \ub3d9\uc0ac : [ \"\uc2dc\uacc4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc5d4\ub4dc\ud3ec\uc778\ud2b8\" , \"\uc11c\ube44\uc2a4\" , \"\uc11c\ube44\uc2a4/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c users : [ \"kubelet\" ] # \ub808\uac70\uc2dc kubelet ID \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc\" , \"\ub178\ub4dc/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 \uadf8\ub8f9 : [ \"\uc2dc\uc2a4\ud15c:\ub178\ub4dc\" ] \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc\" , \"\ub178\ub4dc/\uc0c1\ud0dc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : - \uc2dc\uc2a4\ud15c:kube-controller-manager - \uc2dc\uc2a4\ud15c : kube-scheduler - \uc2dc\uc2a4\ud15c:\uc11c\ube44\uc2a4 \uacc4\uc815:kube-\uc2dc\uc2a4\ud15c:\uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ucee8\ud2b8\ub864\ub7ec \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" , \"\uc5c5\ub370\uc774\ud2b8\ud558\ub2e4\" ] \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc5d4\ub4dc\ud3ec\uc778\ud2b8\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : [ \"\uc2dc\uc2a4\ud15c:apiserver\" ] \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\" , \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc0c1\ud0dc\" , \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc885\ub8cc\" ] - \ub808\ubca8 : \uc5c6\uc74c \uc0ac\uc6a9\uc790 : - \uc2dc\uc2a4\ud15c:kube-controller-manager \ub3d9\uc0ac : [ \"\uc5bb\ub2e4\" , \"\ubaa9\ub85d\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"metrics.k8s.io\" - \ub808\ubca8 : \uc5c6\uc74c nonResourceURLs : - /healthz* - /\ubc84\uc804 - /swagger* - \ub808\ubca8 : \uc5c6\uc74c \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\uc774\ubca4\ud2b8\" ] - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 : [ \"kubelet\" , \"system:node-problem-detector\" , \"system:serviceaccount:kube-system:node-problem-detector\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc/\uc0c1\ud0dc\" , \"\ud3ec\ub4dc/\uc0c1\ud0dc\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 \uadf8\ub8f9 : [ \"\uc2dc\uc2a4\ud15c:\ub178\ub4dc\" ] \ub3d9\uc0ac : [ \"\uc5c5\ub370\uc774\ud2b8\" , \"\ud328\uce58\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ub178\ub4dc/\uc0c1\ud0dc\" , \"\ud3ec\ub4dc/\uc0c1\ud0dc\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \uc0ac\uc6a9\uc790 : [ \"system:serviceaccount:kube-system:namespace-controller\" ] \ub3d9\uc0ac : [ \"deletecollection\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # Secrets, ConfigMaps \ubc0f TokenReviews\ub294 \ubbfc\uac10\ud55c \ubc14\uc774\ub108\ub9ac \ub370\uc774\ud130\ub97c \ud3ec\ud568\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ub530\ub77c\uc11c \uba54\ud0c0\ub370\uc774\ud130 \uc218\uc900\uc5d0\uc11c\ub9cc \uae30\ub85d\ud569\ub2c8\ub2e4. - \ub808\ubca8 : \uba54\ud0c0\ub370\uc774\ud130 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec \ub9ac\uc18c\uc2a4 : [ \"\ube44\ubc00\" , \"configmaps\" ] - \uadf8\ub8f9 : authentication.k8s.io \uc790\uc6d0 : [ \"tokenreviews\" ] \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" - \ub808\ubca8 : \uc758\ub8b0 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" \ub9ac\uc18c\uc2a4 : [ \"\uc11c\ube44\uc2a4 \uacc4\uc815/\ud1a0\ud070\" ] - \ub808\ubca8 : \uc758\ub8b0 \ub3d9\uc0ac : [ \"get\" , \"list\" , \"watch\" ] \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec - \uadf8\ub8f9 : \"admissionregistration.k8s.io\" - \uadf8\ub8f9 : \"apiextensions.k8s.io\" - \uadf8\ub8f9 : \"apiregistration.k8s.io\" - \uadf8\ub8f9 : \"\uc571\" - \uadf8\ub8f9 : \"authentication.k8s.io\" - \uadf8\ub8f9 : \"authorization.k8s.io\" - \uadf8\ub8f9 : \"\uc790\ub3d9 \ud655\uc7a5\" - \uadf8\ub8f9 : \"\ubc30\uce58\" - \uadf8\ub8f9 : \"certificates.k8s.io\" - \uadf8\ub8f9 : \"\ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\" - \uadf8\ub8f9 : \"metrics.k8s.io\" - \uadf8\ub8f9 : \"networking.k8s.io\" - \uadf8\ub8f9 : \"\uc815\ucc45\" - \uadf8\ub8f9 : \"rbac.authorization.k8s.io\" - \uadf8\ub8f9 : \"scheduling.k8s.io\" - \uadf8\ub8f9 : \"settings.k8s.io\" - \uadf8\ub8f9 : \"storage.k8s.io\" \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # \uc54c\ub824\uc9c4 API\uc758 \uae30\ubcf8 \uc218\uc900 - \uc218\uc900 : \uc694\uccad \uc751\ub2f5 \ub9ac\uc18c\uc2a4 : - \uadf8\ub8f9 : \"\" # \ud575\uc2ec - \uadf8\ub8f9 : \"admissionregistration.k8s.io\" - \uadf8\ub8f9 : \"apiextensions.k8s.io\" - \uadf8\ub8f9 : \"apiregistration.k8s.io\" - \uadf8\ub8f9 : \"\uc571\" - \uadf8\ub8f9 : \"authentication.k8s.io\" - \uadf8\ub8f9 : \"authorization.k8s.io\" - \uadf8\ub8f9 : \"\uc790\ub3d9 \ud655\uc7a5\" - \uadf8\ub8f9 : \"\ubc30\uce58\" - \uadf8\ub8f9 : \"certificates.k8s.io\" - \uadf8\ub8f9 : \"\ud655\uc7a5 \ud504\ub85c\uadf8\ub7a8\" - \uadf8\ub8f9 : \"metrics.k8s.io\" - \uadf8\ub8f9 : \"networking.k8s.io\" - \uadf8\ub8f9 : \"\uc815\ucc45\" - \uadf8\ub8f9 : \"rbac.authorization.k8s.io\" - \uadf8\ub8f9 : \"scheduling.k8s.io\" - \uadf8\ub8f9 : \"settings.k8s.io\" - \uadf8\ub8f9 : \"storage.k8s.io\" \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\" # \ub2e4\ub978 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc218\uc900. - \ub808\ubca8 : \uba54\ud0c0\ub370\uc774\ud130 \uc0dd\ub7b5\ub2e8\uacc4 : - \"\uc694\uccad \uc811\uc218\ub428\"","title":"\uac10\uc0ac \ubc0f \ub85c\uae45"},{"location":"security/docs/detective.kr/#_2","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/detective.kr/#_3","text":"\uac10\uc0ac \ub85c\uadf8\ub294 EKS\uc5d0\uc11c \uad00\ub9ac\ud558\ub294 EKS \uad00\ub9ac\ud615 Kubernetes \uc81c\uc5b4 \ud50c\ub808\uc778 \ub85c\uadf8\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. \uac10\uc0ac \ub85c\uadf8\uc640 \ud568\uaed8 Kubernetes API \uc11c\ubc84, \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec\uc5d0 \ub300\ud55c \ub85c\uadf8\ub97c \ud3ec\ud568\ud558\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ub85c\uadf8 \ud65c\uc131\ud654/\ube44\ud65c\uc131\ud654\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 https://docs.aws.amazon. com/eks/latest/userguide/control-plane-logs.html#enabling-control-plane-log-export . \uc815\ubcf4 \uc81c\uc5b4 \ud50c\ub808\uc778 \ub85c\uae45\uc744 \ud65c\uc131\ud654\ud558\uba74 CloudWatch\uc5d0 \ub85c\uadf8\ub97c \uc800\uc7a5\ud558\ub294 \ub370 \ube44\uc6a9 \uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc774\uac83\uc740 \uc9c0\uc18d\uc801\uc778 \ubcf4\uc548 \ube44\uc6a9\uc5d0 \ub300\ud55c \ub354 \uad11\ubc94\uc704\ud55c \ubb38\uc81c\ub97c \uc81c\uae30\ud569\ub2c8\ub2e4. \uad81\uadf9\uc801\uc73c\ub85c \uc774\ub7ec\ud55c \ube44\uc6a9\uc744 \ubcf4\uc548 \uc704\ubc18 \ube44\uc6a9(\uc608: \uae08\uc804\uc801 \uc190\uc2e4, \ud3c9\ud310 \uc190\uc0c1 \ub4f1)\uacfc \ube44\uad50\ud558\uc5ec \ud3c9\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\uc758 \uad8c\uc7a5 \uc0ac\ud56d \uc911 \uc77c\ubd80\ub9cc \uad6c\ud604\ud558\uc5ec \ud658\uacbd\uc744 \uc801\uc808\ud558\uac8c \ubcf4\ud638\ud560 \uc218 \uc788\uc74c\uc744 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 CloudWatch Logs \ud56d\ubaa9\uc758 \ucd5c\ub300 \ud06c\uae30\ub294 256KB \uc778 \ubc18\uba74 \ucd5c\ub300 Kubernetes API \uc694\uccad \ud06c\uae30\ub294 1.5MiB\uc785\ub2c8\ub2e4. 256KB\ubcf4\ub2e4 \ud070 \ub85c\uadf8 \ud56d\ubaa9\uc740 \uc798\ub9ac\uac70\ub098 \uc694\uccad \uba54\ud0c0\ub370\uc774\ud130\ub9cc \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"\uac10\uc0ac \ub85c\uadf8 \ud65c\uc131\ud654"},{"location":"security/docs/detective.kr/#_4","text":"' \uc2b9\uc778 \ub418\uc5c8\ub294\uc9c0 \uc5ec\ubd80\uc640 'authorization.k8s.io/reason' \uacb0\uc815 \uc774\uc720\ub97c \ub098\ud0c0\ub0b4\ub294 \ub450 \uac1c\uc758 \uc8fc\uc11d\uc774 \ud3ec\ud568 \ub429\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud2b9\uc815 API \ud638\ucd9c\uc774 \ud5c8\uc6a9\ub41c \uc774\uc720\ub97c \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"\uac10\uc0ac \uba54\ud0c0\ub370\uc774\ud130 \ud65c\uc6a9"},{"location":"security/docs/detective.kr/#_5","text":"403 Forbidden \ubc0f 401 Unauthorized \uc751\ub2f5\uc774 \uc99d\uac00\ud558\ub294 \uc704\uce58\ub97c \uc790\ub3d9\uc73c\ub85c \uc54c\ub9ac\ub294 \uacbd\ubcf4\ub97c \uc0dd\uc131\ud55c \ub2e4\uc74c host , sourceIPs \ubc0f k8s_user.username \uacfc \uac19\uc740 \uc18d\uc131\uc744 \uc0ac\uc6a9 \ud558\uc5ec \uc774\ub7ec\ud55c \uc694\uccad\uc774 \uc5b4\ub514\uc5d0\uc11c \uc624\ub294\uc9c0 \uc54c\uc544\ub0c5\ub2c8\ub2e4.","title":"\uc758\uc2ec\uc2a4\ub7ec\uc6b4 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc54c\ub78c \uc0dd\uc131"},{"location":"security/docs/detective.kr/#log-insights","text":"CloudWatch Log Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec RBAC \uac1c\uccb4(\uc608: Roles, RoleBindings, ClusterRoles \ubc0f ClusterRoleBindings)\uc5d0 \ub300\ud55c \ubcc0\uacbd \uc0ac\ud56d\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud569\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \uc0d8\ud50c \ucffc\ub9ac\uac00 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. aws-auth ConfigMap \uc5d0 \ub300\ud55c \uc5c5\ub370\uc774\ud2b8\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4 . \ud544\ub4dc @timestamp, @message | \"kube-apiserver-audit\"\uc640 \uac19\uc740 @logStream \ud544\ud130 | [\"\uc5c5\ub370\uc774\ud2b8\", \"\ud328\uce58\"]\uc758 \ud544\ud130 \ub3d9\uc0ac | \ud544\ud130 objectRef.resource = \"configmaps\" \ubc0f objectRef.name = \"aws-auth\" \ubc0f objectRef.namespace = \"kube-system\" | \uc815\ub82c @timestamp \uc124\uba85 \uc720\ud6a8\uc131 \uac80\uc0ac Webhook\uc5d0 \ub300\ud55c \uc0c8\ub85c\uc6b4 \uc0dd\uc131 \ub610\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \"kube-apiserver-audit\"\uc640 \uac19\uc740 @logStream \ud544\ud130 | [\"\ub9cc\ub4e4\uae30\", \"\uc5c5\ub370\uc774\ud2b8\", \"\ud328\uce58\"] \ubc0f responseStatus.code = 201\uc758 \ud544\ud130 \ub3d9\uc0ac | \ud544\ud130 objectRef.resource = \"webhook \uad6c\uc131 \uc720\ud6a8\uc131 \uac80\uc0ac\" | \uc815\ub82c @timestamp \uc124\uba85 \uc5ed\ud560\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"roles\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac RoleBindings\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"rolebindings\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac ClusterRole\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"clusterroles\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac ClusterRoleBindings\uc5d0 \ub300\ud55c \uc0dd\uc131, \uc5c5\ub370\uc774\ud2b8, \uc0ad\uc81c \uc791\uc5c5\uc744 \ub098\uc5f4\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"clusterrolebindings\" \ubc0f [\"create\", \"update\", \"patch\", \"delete\"]\uc758 \ub3d9\uc0ac \ubcf4\uc548 \ube44\ubc00\uc5d0 \ub300\ud55c \ubb34\ub2e8 \uc77d\uae30 \uc791\uc5c5\uc744 \ud50c\ub85c\ud305\ud569\ub2c8\ub2e4. \ud544\ub4dc @timestamp, @message | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 objectRef.resource=\"secrets\" \ubc0f [\"get\", \"watch\", \"list\"] \ubc0f responseStatus.code=\"401\"\uc758 \ub3d9\uc0ac | \ud1b5\uacc4 count() by bin(1m) \uc2e4\ud328\ud55c \uc775\uba85 \uc694\uccad \ubaa9\ub85d: \ud544\ub4dc @timestamp, @message, sourceIPs.0 | \uc815\ub82c @timestamp \uc124\uba85 | \uc81c\ud55c 100 | \ud544\ud130 user.username=\"system:anonymous\" \ubc0f [\"401\", \"403\"]\uc758 responseStatus.code","title":"Log Insights\ub85c \ub85c\uadf8 \ubd84\uc11d"},{"location":"security/docs/detective.kr/#cloudtrail","text":"\uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ub300\ud55c IAM \uc5ed\ud560(IRSA)\uc744 \ud65c\uc6a9\ud558\ub294 \ud3ec\ub4dc\uc5d0\uc11c \ud638\ucd9c\ud55c AWS API\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uacfc \ud568\uaed8 CloudTrail\uc5d0 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ub429\ub2c8\ub2e4. API\ub97c \ud638\ucd9c\ud558\ub3c4\ub85d \uba85\uc2dc\uc801\uc73c\ub85c \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uc774 \ub85c\uadf8\uc5d0 \ub098\ud0c0\ub098\uba74 IAM \uc5ed\ud560\uc758 \uc2e0\ub8b0 \uc815\ucc45\uc774 \uc798\ubabb \uad6c\uc131\ub418\uc5c8\uc74c\uc744 \ub098\ud0c0\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c Cloudtrail\uc740 AWS API \ud638\ucd9c\uc744 \ud2b9\uc815 IAM \uc8fc\uccb4\uc5d0 \ud560\ub2f9\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc785\ub2c8\ub2e4.","title":"CloudTrail \ub85c\uadf8 \uac10\uc0ac"},{"location":"security/docs/detective.kr/#cloudtrail-insights","text":"CloudTrail \ud1b5\ucc30\ub825\uc740 CloudTrail \ucd94\uc801\uc5d0\uc11c \uc4f0\uae30 \uad00\ub9ac \uc774\ubca4\ud2b8\ub97c \uc790\ub3d9\uc73c\ub85c \ubd84\uc11d\ud558\uace0 \ube44\uc815\uc0c1\uc801\uc778 \ud65c\ub3d9\uc744 \uc54c\ub824\uc90d\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 IRSA\ub97c \uc0ac\uc6a9\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc218\uc784\ud558\ub294 \ud3ec\ub4dc\ub97c \ud3ec\ud568\ud558\uc5ec AWS \uacc4\uc815\uc758 \uc4f0\uae30 API\uc5d0 \ub300\ud55c \ud638\ucd9c \ubcfc\ub968\uc774 \uc99d\uac00\ud558\ub294 \uc2dc\uae30\ub97c \uc2dd\ubcc4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CloudTrail Insights \ubc1c\ud45c: \ube44\uc815\uc0c1\uc801\uc778 API \ud65c\ub3d9 \uc2dd\ubcc4 \ubc0f \ub300\uc751 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740.","title":"CloudTrail Insights\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud65c\ub3d9 \ubc1c\uacac"},{"location":"security/docs/detective.kr/#_6","text":"\ub85c\uadf8 \ubcfc\ub968\uc774 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c Log Insights \ub610\ub294 \ub2e4\ub978 \ub85c\uadf8 \ubd84\uc11d \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub85c\uadf8\ub97c \uad6c\ubb38 \ubd84\uc11d\ud558\uace0 \ud544\ud130\ub9c1\ud558\ub294 \uac83\uc774 \ud6a8\uacfc\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub300\uc548\uc73c\ub85c Sysdig Falco \ubc0f ekscloudwatch \uc2e4\ud589\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Falco\ub294 \uac10\uc0ac \ub85c\uadf8\ub97c \ubd84\uc11d\ud558\uace0 \uc7a5\uae30\uac04\uc5d0 \uac78\uccd0 \uc774\uc0c1 \ub610\ub294 \uc545\uc6a9\uc744 \ud45c\uc2dc\ud569\ub2c8\ub2e4. ekscloudwatch \ud504\ub85c\uc81d\ud2b8\ub294 \ubd84\uc11d\uc744 \uc704\ud574 CloudWatch\uc5d0\uc11c Falco\ub85c \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\ub97c \uc804\ub2ec\ud569\ub2c8\ub2e4. Falco\ub294 \uace0\uc720\ud55c \ucd94\uac00 \uae30\ub2a5\uacfc \ud568\uaed8 \uae30\ubcf8 \uac10\uc0ac \uaddc\uce59 \uc138\ud2b8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub610 \ub2e4\ub978 \uc635\uc158\uc740 \uac10\uc0ac \ub85c\uadf8\ub97c S3\uc5d0 \uc800\uc7a5\ud558\uace0 SageMaker Random Cut Forest \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\uc5ec \ube44\uc815\uc0c1\uc801\uc778 \ub3d9\uc791\uc744 \ubcf4\uc7a5\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ucd94\uac00 \uc870\uc0ac.","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"security/docs/detective.kr/#_7","text":"\ub2e4\uc74c \uc0c1\uc6a9 \ubc0f \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uac00 \ud655\ub9bd\ub41c \ubaa8\ubc94 \uc0ac\ub840\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud3c9\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubeaudit \uba54\ud0b7 kube-scan Kubernetes Common Configuration Scoring System \ud504\ub808\uc784\uc6cc\ud06c\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc704\ud5d8 \uc810\uc218\ub97c \ud560\ub2f9\ud569\ub2c8\ub2e4. amicontained \uc5b4\ub5a4 \uae30\ub2a5\uc774 \ud5c8\uc6a9\ub418\uace0 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0 \uc758\ud574 \ucc28\ub2e8\ub418\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \ud45c\uc2dc\ub429\ub2c8\ub2e4. kubesec.io \ud3f4\ub77c\ub9ac\uc2a4 \uc2a4\ud0c0\ubcf4\ub4dc kAudit Snyk","title":"\ud234\ub9c1"},{"location":"security/docs/detective/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Auditing and logging \u00b6 Collecting and analyzing [audit] logs is useful for a variety of different reasons. Logs can help with root cause analysis and attribution, i.e. ascribing a change to a particular user. When enough logs have been collected, they can be used to detect anomalous behaviors too. On EKS, the audit logs are sent to Amazon Cloudwatch Logs. The audit policy for EKS is as follows: apiVersion : audit.k8s.io/v1beta1 kind : Policy rules : # Log aws-auth configmap changes - level : RequestResponse namespaces : [ \"kube-system\" ] verbs : [ \"update\" , \"patch\" , \"delete\" ] resources : - group : \"\" # core resources : [ \"configmaps\" ] resourceNames : [ \"aws-auth\" ] omitStages : - \"RequestReceived\" - level : None users : [ \"system:kube-proxy\" ] verbs : [ \"watch\" ] resources : - group : \"\" # core resources : [ \"endpoints\" , \"services\" , \"services/status\" ] - level : None users : [ \"kubelet\" ] # legacy kubelet identity verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"nodes\" , \"nodes/status\" ] - level : None userGroups : [ \"system:nodes\" ] verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"nodes\" , \"nodes/status\" ] - level : None users : - system:kube-controller-manager - system:kube-scheduler - system:serviceaccount:kube-system:endpoint-controller verbs : [ \"get\" , \"update\" ] namespaces : [ \"kube-system\" ] resources : - group : \"\" # core resources : [ \"endpoints\" ] - level : None users : [ \"system:apiserver\" ] verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"namespaces\" , \"namespaces/status\" , \"namespaces/finalize\" ] - level : None users : - system:kube-controller-manager verbs : [ \"get\" , \"list\" ] resources : - group : \"metrics.k8s.io\" - level : None nonResourceURLs : - /healthz* - /version - /swagger* - level : None resources : - group : \"\" # core resources : [ \"events\" ] - level : Request users : [ \"kubelet\" , \"system:node-problem-detector\" , \"system:serviceaccount:kube-system:node-problem-detector\" ] verbs : [ \"update\" , \"patch\" ] resources : - group : \"\" # core resources : [ \"nodes/status\" , \"pods/status\" ] omitStages : - \"RequestReceived\" - level : Request userGroups : [ \"system:nodes\" ] verbs : [ \"update\" , \"patch\" ] resources : - group : \"\" # core resources : [ \"nodes/status\" , \"pods/status\" ] omitStages : - \"RequestReceived\" - level : Request users : [ \"system:serviceaccount:kube-system:namespace-controller\" ] verbs : [ \"deletecollection\" ] omitStages : - \"RequestReceived\" # Secrets, ConfigMaps, and TokenReviews can contain sensitive & binary data, # so only log at the Metadata level. - level : Metadata resources : - group : \"\" # core resources : [ \"secrets\" , \"configmaps\" ] - group : authentication.k8s.io resources : [ \"tokenreviews\" ] omitStages : - \"RequestReceived\" - level : Request resources : - group : \"\" resources : [ \"serviceaccounts/token\" ] - level : Request verbs : [ \"get\" , \"list\" , \"watch\" ] resources : - group : \"\" # core - group : \"admissionregistration.k8s.io\" - group : \"apiextensions.k8s.io\" - group : \"apiregistration.k8s.io\" - group : \"apps\" - group : \"authentication.k8s.io\" - group : \"authorization.k8s.io\" - group : \"autoscaling\" - group : \"batch\" - group : \"certificates.k8s.io\" - group : \"extensions\" - group : \"metrics.k8s.io\" - group : \"networking.k8s.io\" - group : \"policy\" - group : \"rbac.authorization.k8s.io\" - group : \"scheduling.k8s.io\" - group : \"settings.k8s.io\" - group : \"storage.k8s.io\" omitStages : - \"RequestReceived\" # Default level for known APIs - level : RequestResponse resources : - group : \"\" # core - group : \"admissionregistration.k8s.io\" - group : \"apiextensions.k8s.io\" - group : \"apiregistration.k8s.io\" - group : \"apps\" - group : \"authentication.k8s.io\" - group : \"authorization.k8s.io\" - group : \"autoscaling\" - group : \"batch\" - group : \"certificates.k8s.io\" - group : \"extensions\" - group : \"metrics.k8s.io\" - group : \"networking.k8s.io\" - group : \"policy\" - group : \"rbac.authorization.k8s.io\" - group : \"scheduling.k8s.io\" - group : \"settings.k8s.io\" - group : \"storage.k8s.io\" omitStages : - \"RequestReceived\" # Default level for all other requests. - level : Metadata omitStages : - \"RequestReceived\" Recommendations \u00b6 Enable audit logs \u00b6 The audit logs are part of the EKS managed Kubernetes control plane logs that are managed by EKS. Instructions for enabling/disabling the control plane logs, which includes the logs for the Kubernetes API server, the controller manager, and the scheduler, along with the audit log, can be found here, https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html#enabling-control-plane-log-export . Info When you enable control plane logging, you will incur costs for storing the logs in CloudWatch. This raises a broader issue about the ongoing cost of security. Ultimately you will have to weigh those costs against the cost of a security breach, e.g. financial loss, damage to your reputation, etc. You may find that you can adequately secure your environment by implementing only some of the recommendations in this guide. Warning The maximum size for a CloudWatch Logs entry is 256KB whereas the maximum Kubernetes API request size is 1.5MiB. Log entries greater than 256KB will either be truncated or only include the request metadata. Utilize audit metadata \u00b6 Kubernetes audit logs include two annotations that indicate whether or not a request was authorized authorization.k8s.io/decision and the reason for the decision authorization.k8s.io/reason . Use these attributes to ascertain why a particular API call was allowed. Create alarms for suspicious events \u00b6 Create an alarm to automatically alert you where there is an increase in 403 Forbidden and 401 Unauthorized responses, and then use attributes like host , sourceIPs , and k8s_user.username to find out where those requests are coming from. Analyze logs with Log Insights \u00b6 Use CloudWatch Log Insights to monitor changes to RBAC objects, e.g. Roles, RoleBindings, ClusterRoles, and ClusterRoleBindings. A few sample queries appear below: Lists updates to the aws-auth ConfigMap: fields @timestamp, @message | filter @logStream like \"kube-apiserver-audit\" | filter verb in [\"update\", \"patch\"] | filter objectRef.resource = \"configmaps\" and objectRef.name = \"aws-auth\" and objectRef.namespace = \"kube-system\" | sort @timestamp desc Lists creation of new or changes to validation webhooks: fields @timestamp, @message | filter @logStream like \"kube-apiserver-audit\" | filter verb in [\"create\", \"update\", \"patch\"] and responseStatus.code = 201 | filter objectRef.resource = \"validatingwebhookconfigurations\" | sort @timestamp desc Lists create, update, delete operations to Roles: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"roles\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to RoleBindings: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"rolebindings\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to ClusterRoles: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"clusterroles\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to ClusterRoleBindings: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"clusterrolebindings\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Plots unauthorized read operations against Secrets: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"secrets\" and verb in [\"get\", \"watch\", \"list\"] and responseStatus.code=\"401\" | stats count() by bin(1m) List of failed anonymous requests: fields @timestamp, @message, sourceIPs.0 | sort @timestamp desc | limit 100 | filter user.username=\"system:anonymous\" and responseStatus.code in [\"401\", \"403\"] Audit your CloudTrail logs \u00b6 AWS APIs called by pods that are utilizing IAM Roles for Service Accounts (IRSA) are automatically logged to CloudTrail along with the name of the service account. If the name of a service account that wasn't explicitly authorized to call an API appears in the log, it may be an indication that the IAM role's trust policy was misconfigured. Generally speaking, Cloudtrail is a great way to ascribe AWS API calls to specific IAM principals. Use CloudTrail Insights to unearth suspicious activity \u00b6 CloudTrail insights automatically analyzes write management events from CloudTrail trails and alerts you of unusual activity. This can help you identify when there's an increase in call volume on write APIs in your AWS account, including from pods that use IRSA to assume an IAM role. See Announcing CloudTrail Insights: Identify and Response to Unusual API Activity for further information. Additional resources \u00b6 As the volume of logs increases, parsing and filtering them with Log Insights or another log analysis tool may become ineffective. As an alternative, you might want to consider running Sysdig Falco and ekscloudwatch . Falco analyzes audit logs and flags anomalies or abuse over an extended period of time. The ekscloudwatch project forwards audit log events from CloudWatch to Falco for analysis. Falco provides a set of default audit rules along with the ability to add your own. Yet another option might be to store the audit logs in S3 and use the SageMaker Random Cut Forest algorithm to anomalous behaviors that warrant further investigation. Tooling \u00b6 The following commercial and open source projects can be used to assess your cluster's alignment with established best practices: kubeaudit kube-scan Assigns a risk score to the workloads running in your cluster in accordance with the Kubernetes Common Configuration Scoring System framework kubesec.io polaris Starboard Snyk Kubescape Kubescape is an open source kubernetes security tool that scans clusters, YAML files, and Helm charts. It detects misconfigurations according to multiple frameworks (including NSA-CISA and MITRE ATT&CK\u00ae .)","title":"Detective Controls ({'name': 'English', 'build': True})"},{"location":"security/docs/detective/#auditing-and-logging","text":"Collecting and analyzing [audit] logs is useful for a variety of different reasons. Logs can help with root cause analysis and attribution, i.e. ascribing a change to a particular user. When enough logs have been collected, they can be used to detect anomalous behaviors too. On EKS, the audit logs are sent to Amazon Cloudwatch Logs. The audit policy for EKS is as follows: apiVersion : audit.k8s.io/v1beta1 kind : Policy rules : # Log aws-auth configmap changes - level : RequestResponse namespaces : [ \"kube-system\" ] verbs : [ \"update\" , \"patch\" , \"delete\" ] resources : - group : \"\" # core resources : [ \"configmaps\" ] resourceNames : [ \"aws-auth\" ] omitStages : - \"RequestReceived\" - level : None users : [ \"system:kube-proxy\" ] verbs : [ \"watch\" ] resources : - group : \"\" # core resources : [ \"endpoints\" , \"services\" , \"services/status\" ] - level : None users : [ \"kubelet\" ] # legacy kubelet identity verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"nodes\" , \"nodes/status\" ] - level : None userGroups : [ \"system:nodes\" ] verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"nodes\" , \"nodes/status\" ] - level : None users : - system:kube-controller-manager - system:kube-scheduler - system:serviceaccount:kube-system:endpoint-controller verbs : [ \"get\" , \"update\" ] namespaces : [ \"kube-system\" ] resources : - group : \"\" # core resources : [ \"endpoints\" ] - level : None users : [ \"system:apiserver\" ] verbs : [ \"get\" ] resources : - group : \"\" # core resources : [ \"namespaces\" , \"namespaces/status\" , \"namespaces/finalize\" ] - level : None users : - system:kube-controller-manager verbs : [ \"get\" , \"list\" ] resources : - group : \"metrics.k8s.io\" - level : None nonResourceURLs : - /healthz* - /version - /swagger* - level : None resources : - group : \"\" # core resources : [ \"events\" ] - level : Request users : [ \"kubelet\" , \"system:node-problem-detector\" , \"system:serviceaccount:kube-system:node-problem-detector\" ] verbs : [ \"update\" , \"patch\" ] resources : - group : \"\" # core resources : [ \"nodes/status\" , \"pods/status\" ] omitStages : - \"RequestReceived\" - level : Request userGroups : [ \"system:nodes\" ] verbs : [ \"update\" , \"patch\" ] resources : - group : \"\" # core resources : [ \"nodes/status\" , \"pods/status\" ] omitStages : - \"RequestReceived\" - level : Request users : [ \"system:serviceaccount:kube-system:namespace-controller\" ] verbs : [ \"deletecollection\" ] omitStages : - \"RequestReceived\" # Secrets, ConfigMaps, and TokenReviews can contain sensitive & binary data, # so only log at the Metadata level. - level : Metadata resources : - group : \"\" # core resources : [ \"secrets\" , \"configmaps\" ] - group : authentication.k8s.io resources : [ \"tokenreviews\" ] omitStages : - \"RequestReceived\" - level : Request resources : - group : \"\" resources : [ \"serviceaccounts/token\" ] - level : Request verbs : [ \"get\" , \"list\" , \"watch\" ] resources : - group : \"\" # core - group : \"admissionregistration.k8s.io\" - group : \"apiextensions.k8s.io\" - group : \"apiregistration.k8s.io\" - group : \"apps\" - group : \"authentication.k8s.io\" - group : \"authorization.k8s.io\" - group : \"autoscaling\" - group : \"batch\" - group : \"certificates.k8s.io\" - group : \"extensions\" - group : \"metrics.k8s.io\" - group : \"networking.k8s.io\" - group : \"policy\" - group : \"rbac.authorization.k8s.io\" - group : \"scheduling.k8s.io\" - group : \"settings.k8s.io\" - group : \"storage.k8s.io\" omitStages : - \"RequestReceived\" # Default level for known APIs - level : RequestResponse resources : - group : \"\" # core - group : \"admissionregistration.k8s.io\" - group : \"apiextensions.k8s.io\" - group : \"apiregistration.k8s.io\" - group : \"apps\" - group : \"authentication.k8s.io\" - group : \"authorization.k8s.io\" - group : \"autoscaling\" - group : \"batch\" - group : \"certificates.k8s.io\" - group : \"extensions\" - group : \"metrics.k8s.io\" - group : \"networking.k8s.io\" - group : \"policy\" - group : \"rbac.authorization.k8s.io\" - group : \"scheduling.k8s.io\" - group : \"settings.k8s.io\" - group : \"storage.k8s.io\" omitStages : - \"RequestReceived\" # Default level for all other requests. - level : Metadata omitStages : - \"RequestReceived\"","title":"Auditing and logging"},{"location":"security/docs/detective/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/detective/#enable-audit-logs","text":"The audit logs are part of the EKS managed Kubernetes control plane logs that are managed by EKS. Instructions for enabling/disabling the control plane logs, which includes the logs for the Kubernetes API server, the controller manager, and the scheduler, along with the audit log, can be found here, https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html#enabling-control-plane-log-export . Info When you enable control plane logging, you will incur costs for storing the logs in CloudWatch. This raises a broader issue about the ongoing cost of security. Ultimately you will have to weigh those costs against the cost of a security breach, e.g. financial loss, damage to your reputation, etc. You may find that you can adequately secure your environment by implementing only some of the recommendations in this guide. Warning The maximum size for a CloudWatch Logs entry is 256KB whereas the maximum Kubernetes API request size is 1.5MiB. Log entries greater than 256KB will either be truncated or only include the request metadata.","title":"Enable audit logs"},{"location":"security/docs/detective/#utilize-audit-metadata","text":"Kubernetes audit logs include two annotations that indicate whether or not a request was authorized authorization.k8s.io/decision and the reason for the decision authorization.k8s.io/reason . Use these attributes to ascertain why a particular API call was allowed.","title":"Utilize audit metadata"},{"location":"security/docs/detective/#create-alarms-for-suspicious-events","text":"Create an alarm to automatically alert you where there is an increase in 403 Forbidden and 401 Unauthorized responses, and then use attributes like host , sourceIPs , and k8s_user.username to find out where those requests are coming from.","title":"Create alarms for suspicious events"},{"location":"security/docs/detective/#analyze-logs-with-log-insights","text":"Use CloudWatch Log Insights to monitor changes to RBAC objects, e.g. Roles, RoleBindings, ClusterRoles, and ClusterRoleBindings. A few sample queries appear below: Lists updates to the aws-auth ConfigMap: fields @timestamp, @message | filter @logStream like \"kube-apiserver-audit\" | filter verb in [\"update\", \"patch\"] | filter objectRef.resource = \"configmaps\" and objectRef.name = \"aws-auth\" and objectRef.namespace = \"kube-system\" | sort @timestamp desc Lists creation of new or changes to validation webhooks: fields @timestamp, @message | filter @logStream like \"kube-apiserver-audit\" | filter verb in [\"create\", \"update\", \"patch\"] and responseStatus.code = 201 | filter objectRef.resource = \"validatingwebhookconfigurations\" | sort @timestamp desc Lists create, update, delete operations to Roles: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"roles\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to RoleBindings: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"rolebindings\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to ClusterRoles: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"clusterroles\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Lists create, update, delete operations to ClusterRoleBindings: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"clusterrolebindings\" and verb in [\"create\", \"update\", \"patch\", \"delete\"] Plots unauthorized read operations against Secrets: fields @timestamp, @message | sort @timestamp desc | limit 100 | filter objectRef.resource=\"secrets\" and verb in [\"get\", \"watch\", \"list\"] and responseStatus.code=\"401\" | stats count() by bin(1m) List of failed anonymous requests: fields @timestamp, @message, sourceIPs.0 | sort @timestamp desc | limit 100 | filter user.username=\"system:anonymous\" and responseStatus.code in [\"401\", \"403\"]","title":"Analyze logs with Log Insights"},{"location":"security/docs/detective/#audit-your-cloudtrail-logs","text":"AWS APIs called by pods that are utilizing IAM Roles for Service Accounts (IRSA) are automatically logged to CloudTrail along with the name of the service account. If the name of a service account that wasn't explicitly authorized to call an API appears in the log, it may be an indication that the IAM role's trust policy was misconfigured. Generally speaking, Cloudtrail is a great way to ascribe AWS API calls to specific IAM principals.","title":"Audit your CloudTrail logs"},{"location":"security/docs/detective/#use-cloudtrail-insights-to-unearth-suspicious-activity","text":"CloudTrail insights automatically analyzes write management events from CloudTrail trails and alerts you of unusual activity. This can help you identify when there's an increase in call volume on write APIs in your AWS account, including from pods that use IRSA to assume an IAM role. See Announcing CloudTrail Insights: Identify and Response to Unusual API Activity for further information.","title":"Use CloudTrail Insights to unearth suspicious activity"},{"location":"security/docs/detective/#additional-resources","text":"As the volume of logs increases, parsing and filtering them with Log Insights or another log analysis tool may become ineffective. As an alternative, you might want to consider running Sysdig Falco and ekscloudwatch . Falco analyzes audit logs and flags anomalies or abuse over an extended period of time. The ekscloudwatch project forwards audit log events from CloudWatch to Falco for analysis. Falco provides a set of default audit rules along with the ability to add your own. Yet another option might be to store the audit logs in S3 and use the SageMaker Random Cut Forest algorithm to anomalous behaviors that warrant further investigation.","title":"Additional resources"},{"location":"security/docs/detective/#tooling","text":"The following commercial and open source projects can be used to assess your cluster's alignment with established best practices: kubeaudit kube-scan Assigns a risk score to the workloads running in your cluster in accordance with the Kubernetes Common Configuration Scoring System framework kubesec.io polaris Starboard Snyk Kubescape Kubescape is an open source kubernetes security tool that scans clusters, YAML files, and Helm charts. It detects misconfigurations according to multiple frameworks (including NSA-CISA and MITRE ATT&CK\u00ae .)","title":"Tooling"},{"location":"security/docs/hosts.kr/","text":"{'name': 'English', 'build': True} \uc778\ud504\ub77c(\ud638\uc2a4\ud2b8) \ubcf4\ud638 \u00b6 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ubcf4\ud638\ud558\ub294 \uac83\uc774 \uc911\uc694\ud55c \ub9cc\ud07c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc2e4\ud589\ud558\ub294 \uc778\ud504\ub77c\ub97c \ubcf4\ud638\ud558\ub294 \uac83\ub3c4 \ub611\uac19\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud574 \uc9c1\uc811 \uc2dc\uc791\ub41c \uacf5\uaca9\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\uce68\uc740 \ub7f0\ud0c0\uc784 \ubcf4\uc548 \uc139\uc158 \uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4 . \ucd94\ucc9c \u00b6 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589\uc5d0 \ucd5c\uc801\ud654\ub41c OS \uc0ac\uc6a9 \u00b6 Flatcar Linux, Project Atomic, RancherOS \ubc0f Linux \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \uc124\uacc4\ub41c AWS\uc758 \ud2b9\uc218 \ubaa9\uc801 OS\uc778 Bottlerocket \uc0ac\uc6a9\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \uc5ec\uae30\uc5d0\ub294 \uac10\uc18c\ub41c \uacf5\uaca9 \ud45c\uba74, \ubd80\ud305 \uc2dc \ud655\uc778\ub418\ub294 \ub514\uc2a4\ud06c \uc774\ubbf8\uc9c0, SELinux\ub97c \uc0ac\uc6a9\ud558\ub294 \uac15\uc81c \uad8c\ud55c \uacbd\uacc4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ub294 Kubernetes \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud574 EKS \ucd5c\uc801\ud654 AMI \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. EKS \ucd5c\uc801\ud654 AMI\ub294 \uc815\uae30\uc801\uc73c\ub85c \ub9b4\ub9ac\uc2a4\ub418\uba70 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \ucd5c\uc18c\ud55c\uc758 OS \ud328\ud0a4\uc9c0 \ubc0f \ubc14\uc774\ub108\ub9ac \uc138\ud2b8\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc OS\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0 \u00b6 Bottlerocket\uacfc \uac19\uc740 \ucee8\ud14c\uc774\ub108 \ucd5c\uc801\ud654 \ud638\uc2a4\ud2b8 OS\ub97c \uc0ac\uc6a9\ud558\ub4e0 EKS \ucd5c\uc801\ud654 AMI\uc640 \uac19\uc740 \ub354 \ud06c\uc9c0\ub9cc \uc5ec\uc804\ud788 \ubbf8\ub2c8\uba40\ud55c Amazon Machine Image\ub97c \uc0ac\uc6a9\ud558\ub4e0 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ud638\uc2a4\ud2b8 OS \uc774\ubbf8\uc9c0\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. EKS \ucd5c\uc801\ud654 AMI\uc758 \uacbd\uc6b0 [ CHANGELOG ][eks-ami-changes] \ubc0f/\ub610\ub294 release notes channel \ub97c \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ub41c \uc791\uc5c5\uc790 \ub178\ub4dc \uc774\ubbf8\uc9c0\ub97c \ud074\ub7ec\uc2a4\ud130\ub85c \uc790\ub3d9 \ub864\uc544\uc6c3\ud569\ub2c8\ub2e4. \uc778\ud504\ub77c\ub97c \ubd88\ubcc0\uc73c\ub85c \ucde8\uae09\ud558\uace0 \uc791\uc5c5\uc790 \ub178\ub4dc \uad50\uccb4\ub97c \uc790\ub3d9\ud654\ud558\uc2ed\uc2dc\uc624. \u00b6 \uc804\uccb4 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \uc0c8 \ud328\uce58 \ub610\ub294 \uc5c5\ub370\uc774\ud2b8\uac00 \uc81c\uacf5\ub418\uba74 \uc791\uc5c5\uc790\ub97c \uad50\uccb4\ud558\uc2ed\uc2dc\uc624. \uc774\uac83\uc740 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \ucd5c\uc2e0 AMI\ub85c \uad50\uccb4\ub420 \ub54c\uae4c\uc9c0 \uc21c\ucc28\uc801\uc73c\ub85c \ub178\ub4dc\ub97c \ucc28\ub2e8\ud558\uace0 \ubc30\ucd9c\ud558\uba74\uc11c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\uc874 Auto Scaling \uadf8\ub8f9\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \uad50\uccb4\ub420 \ub54c\uae4c\uc9c0 \uc774\uc804 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \ucc28\ub2e8\ud558\uace0 \ube44\uc6b0\ub294 \ub3d9\uc548 \uc0c8 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 \uccab \ubc88\uc9f8 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \uc791\uc5c5\uc790\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub77c\ub294 \uba54\uc2dc\uc9c0\ub97c \ucf58\uc194\uc5d0 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \uc0c8 AMI\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub429\ub2c8\ub2e4. \ub610\ud55c eksctl \uc5d0\ub294 \ucd5c\uc2e0 AMI\ub85c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uace0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc885\ub8cc\ub418\uae30 \uc804\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \ud3ec\ub4dc\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \ucc28\ub2e8 \ubc0f \ubc30\ucd9c \ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uad50\uccb4\ud558\uae30 \uc704\ud574 \ub2e4\ub978 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc815\ud55c \uacbd\uc6b0 \uc0c8 \uc5c5\ub370\uc774\ud2b8/\ud328\uce58\uac00 \ub9b4\ub9ac\uc2a4\ub418\uace0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub420 \ub54c \uc791\uc5c5\uc790\ub97c \uc815\uae30\uc801\uc73c\ub85c \uad50\uccb4\ud574\uc57c \ud560 \uac00\ub2a5\uc131\uc774 \uc788\uc73c\ubbc0\ub85c \uc0ac\ub78c\uc758 \uac10\ub3c5\uc744 \ucd5c\uc18c\ud654\ud558\ub3c4\ub85d \ud504\ub85c\uc138\uc2a4\ub97c \uc790\ub3d9\ud654\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. . EKS Fargate\ub97c \ud1b5\ud574 AWS\ub294 \uc5c5\ub370\uc774\ud2b8\uac00 \uc81c\uacf5\ub418\uba74 \uae30\ubcf8 \uc778\ud504\ub77c\ub97c \uc790\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc885\uc885 \uc774 \uc791\uc5c5\uc740 \uc6d0\ud65c\ud558\uac8c \uc218\ud589\ub420 \uc218 \uc788\uc9c0\ub9cc \uc5c5\ub370\uc774\ud2b8\ub85c \uc778\ud574 Pod \uc77c\uc815\uc774 \ub2e4\uc2dc \uc870\uc815\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 Fargate \ud3ec\ub4dc\ub85c \uc2e4\ud589\ud560 \ub54c \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc73c\ub85c \ubc30\ud3ec\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes\uc6a9 CIS \ubca4\uce58\ub9c8\ud06c ]( https://www.cisecurity.org/benchmark/kubernetes/ ) \uc900\uc218 \uc5ec\ubd80 \ud655\uc778 kube-bench\ub294 Kubernetes\uc758 CIS \ubca4\uce58\ub9c8\ud06c\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ud3c9\uac00\ud558\ub294 Aqua\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ubca4\uce58\ub9c8\ud06c\ub294 \uad00\ub9ac\ub418\uc9c0 \uc54a\ub294 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \ubcf4\ud638\ud558\uae30 \uc704\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. CIS Kubernetes Benchmark\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uc644\uc804\ud788 \uad00\ub9ac\ub418\ub294 \uc81c\uc5b4 \ud50c\ub808\uc778\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c CIS Kubernetes Benchmark\uc758 \ubaa8\ub4e0 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \uc801\uc6a9\ub418\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc774 \ubc94\uc704\uac00 Amazon EKS \uad6c\ud604 \ubc29\uc2dd\uc744 \ubc18\uc601\ud558\ub3c4\ub85d AWS\ub294 CIS Amazon EKS \ubca4\uce58\ub9c8\ud06c \ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4 . EKS \ubca4\uce58\ub9c8\ud06c\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ud2b9\uc815 \uad6c\uc131 \uace0\ub824 \uc0ac\ud56d\uacfc \ud568\uaed8 \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucd94\uac00 \uc785\ub825\uacfc \ud568\uaed8 CIS Kubernetes Benchmark\uc5d0\uc11c \uc0c1\uc18d\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 kube-bench \ub97c \uc2e4\ud589\ud560 \ub54c \uc774 \uc9c0\uce68 \uc744 \ub530\ub974\uc2ed\uc2dc\uc624. /docs/running.md#running-cis-benchmark-in-an-eks-cluster ) Aqua Security\uc5d0\uc11c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CIS Amazon EKS \ubca4\uce58\ub9c8\ud06c \uc18c\uac1c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \ucd5c\uc18c\ud654 \u00b6 SSH \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub294 \ub300\uc2e0 \ud638\uc2a4\ud2b8\uc5d0 \uc6d0\uaca9\uc73c\ub85c \uc811\uc18d\ud574\uc57c \ud560 \ub54c SSM \uc138\uc158 \uad00\ub9ac\uc790 \ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \ubd84\uc2e4, \ubcf5\uc0ac \ub610\ub294 \uacf5\uc720\ub420 \uc218 \uc788\ub294 SSH \ud0a4\uc640 \ub2ec\ub9ac \uc138\uc158 \uad00\ub9ac\uc790\ub97c \uc0ac\uc6a9\ud558\uba74 IAM\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub41c \uba85\ub839\uc758 \uac10\uc0ac \ucd94\uc801 \ubc0f \ub85c\uadf8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. 2020\ub144 8\uc6d4 19\uc77c\ubd80\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI \ubc0f EC2 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 SSM \uc5d0\uc774\uc804\ud2b8\ub97c AMI\uc5d0 \ud3ec\ud568\ud558\uac70\ub098 \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9\ub420 \ub54c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc801\ud654\ub41c AMI \ub610\ub294 ASG\uc758 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 https://github.com/aws-samples/ssm-agent-daemonset-installer \uc608\uc81c\uc640 \uac19\uc774 DaemonSet\uc640 \ud568\uaed8 SSM \uc5d0\uc774\uc804\ud2b8\ub97c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SSM \uae30\ubc18 SSH \uc561\uc138\uc2a4\ub97c \uc704\ud55c \ucd5c\uc18c IAM \uc815\ucc45 \u00b6 AmazonSSMManagedInstanceCore AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc5d0\ub294 SSH \uc561\uc138\uc2a4\ub97c \ud53c\ud558\ub824\ub294 \uacbd\uc6b0 SSM Session Manager / SSM RunCommand\uc5d0 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc5ec\ub7ec \uad8c\ud55c\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4 . \ud2b9\ud788 \uc6b0\ub824\ub418\ub294 \uac83\uc740 ssm:GetParameter(s) \uc5d0 \ub300\ud55c *` \uad8c\ud55c\uc73c\ub85c \uc5ed\ud560\uc774 Parameter Store\uc758 \ubaa8\ub4e0 \ud30c\ub77c\ubbf8\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(AWS \uad00\ub9ac\ud615 KMS \ud0a4\uac00 \uad6c\uc131\ub41c SecureStrings \ud3ec\ud568). \ub2e4\uc74c IAM \uc815\ucc45\uc5d0\ub294 SSM Systems Manager\ub97c \ud1b5\ud574 \ub178\ub4dc \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud55c \ucd5c\uc18c \uad8c\ud55c \uc9d1\ud569\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. { \"\ubc84\uc804\" : \"2012-10-17\" , \"\uc9c4\uc220\uc11c\" : [ { \"Sid\" : \"EnableAccessViaSSMSessionManager\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ssmmmessages:OpenDataChannel\" , \"ssmmmessages:OpenControlChannel\" , \"ssmmmessages:CreateDataChannel\" , \"ssmmmessages:CreateControlChannel\" , \"ssm:UpdateInstanceInformation\" ], \"\uc790\uc6d0\" : \"*\" }, { \"\uc2dc\ub4dc\" : \"EnableSSMRunCommand\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ssm:UpdateInstanceInformation\" , \"ec2messages:SendReply\" , \"ec2messages:GetMessages\" , \"ec2messages:GetEndpoint\" , \"ec2messages:FailMessage\" , \"ec2messages:DeleteMessage\" , \"ec2messages:AcknowledgeMessage\" ], \"\uc790\uc6d0\" : \"*\" } ] } \uc774 \uc815\ucc45\uc774 \uc801\uc6a9\ub418\uace0 Session Manager \ud50c\ub7ec\uadf8\uc778 \uc774 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba74 \uadf8\ub7f0 \ub2e4\uc74c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 aws ssm \uc2dc\uc791 \uc138\uc158 --target [INSTANCE_ID_OF_EKS_NODE] \ub178\ub4dc\uc5d0 \uc561\uc138\uc2a4\ud569\ub2c8\ub2e4. \ub178\ud2b8 Session Manager \ub85c\uae45 \ud65c\uc131\ud654 ]( https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-create-iam-instance-profile.html# \uc5d0 \ub300\ud55c \uad8c\ud55c \ucd94\uac00\ub97c \uace0\ub824\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. create-iam-instance-profile-ssn-logging ). \ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \uc791\uc5c5\uc790 \ubc30\ud3ec \u00b6 \uac1c\uc778 \uc11c\ube0c\ub137\uc5d0 \uc791\uc5c5\uc790\ub97c \ubc30\ud3ec\ud558\uba74 \uacf5\uaca9\uc774 \uc790\uc8fc \ubc1c\uc0dd\ud558\ub294 \uc778\ud130\ub137\uc5d0 \ub300\ud55c \ub178\ucd9c\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2020\ub144 4\uc6d4 22\uc77c\ubd80\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc\uc5d0 \ub300\ud55c \uacf5\uc6a9 IP \uc8fc\uc18c \ud560\ub2f9\uc740 \ubc30\ud3ec\ub41c \uc11c\ube0c\ub137\uc5d0 \uc758\ud574 \uc81c\uc5b4\ub429\ub2c8\ub2e4. \uc774\uc804\uc5d0\ub294 \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc\uc5d0 \uacf5\uc6a9 IP\uac00 \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 \uc81c\ud55c\uc801\uc778 AWS \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc744 \uad6c\ud604\ud558\uc5ec \ub178\ucd9c\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624. Amazon Inspector\ub97c \uc2e4\ud589\ud558\uc5ec \ud638\uc2a4\ud2b8\uc758 \ub178\ucd9c, \ucde8\uc57d\uc131 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc640\uc758 \ud3b8\ucc28\ub97c \ud3c9\uac00\ud569\ub2c8\ub2e4. \u00b6 Amazon Inspector \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0 \ub300\ud55c \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4\uc640 \uae30\ubcf8 Amazon\uc758 \ucde8\uc57d\uc131\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4. Amazon Inspector\ub294 Amazon EC2 Systems Manager(SSM) \uc5d0\uc774\uc804\ud2b8\uac00 \uc124\uce58\ub418\uace0 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0\uc5d0\ub9cc Amazon EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uacf5\ud1b5 \ucde8\uc57d\uc131 \ubc0f \ub178\ucd9c(CVE) \ub370\uc774\ud130\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc5d0\uc774\uc804\ud2b8\ub294 EKS \ucd5c\uc801\ud654 Amazon Linux AMI \ub97c \ud3ec\ud568\ud558\uc5ec \uc5ec\ub7ec [ Amazon \uba38\uc2e0 \uc774\ubbf8\uc9c0(AMI) ]( https://docs.aws.amazon.com/systems-manager/latest/userguide/ami-preinstalled-agent.html )\uc5d0 \uc0ac\uc804 \uc124\uce58\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. . SSM \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc\uc640 \uad00\uacc4\uc5c6\uc774 \ubaa8\ub4e0 Amazon EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0 \ubb38\uc81c\ub97c \uc2a4\uce94\ud569\ub2c8\ub2e4. Amazon EC2 \uc2a4\uce94 \uad6c\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon EC2 \uc778\uc2a4\ud134\uc2a4 \uc2a4\uce94 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc8fc\ubaa9 Fargate \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc778\ud504\ub77c\uc5d0\uc11c\ub294 Inspector\ub97c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub300\uc548 \u00b6 SELinux \uc2e4\ud589 \u00b6 \uc815\ubcf4 RHEL(Red Hat Enterprise Linux), CentOS \ubc0f CoreOS\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5 SELinux\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc11c\ub85c \uac04\uc5d0 \uadf8\ub9ac\uace0 \ud638\uc2a4\ud2b8\ub85c\ubd80\ud130 \uaca9\ub9ac\ub41c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uae30 \uc704\ud574 \ucd94\uac00 \ubcf4\uc548 \uacc4\uce35\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. SELinux\ub97c \ud1b5\ud574 \uad00\ub9ac\uc790\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790, \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \ud504\ub85c\uc138\uc2a4 \ubc0f \ud30c\uc77c\uc5d0 \ub300\ud574 \ud544\uc218 \uc561\uc138\uc2a4 \uc81c\uc5b4(MAC)\ub97c \uc2dc\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\ube14 \uc138\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uc81c\ud55c \ud558\ub294 \ubc31\uc2a4\ud1b1\uc73c\ub85c \uc0dd\uac01\ud558\uc2ed\uc2dc\uc624 . EKS\uc5d0\uc11c SELinux\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uc11c\ub85c\uc758 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 SELinux \uc815\ucc45\uc740 container-selinux \ud328\ud0a4\uc9c0\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Docker CE\ub294 Docker(\ub610\ub294 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784)\uc5d0\uc11c \uc0dd\uc131\ub41c \ud504\ub85c\uc138\uc2a4 \ubc0f \ud30c\uc77c\uc774 \uc81c\ud55c\ub41c \uc2dc\uc2a4\ud15c \uc561\uc138\uc2a4\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uc774 \ud328\ud0a4\uc9c0(\uc885\uc18d\uc131\uacfc \ud568\uaed8)\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub294 svirt_lxc_net_t \uc758 \ubcc4\uce6d\uc778 container_t \ub808\uc774\ube14\uc744 \ud65c\uc6a9\ud569\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ucee8\ud14c\uc774\ub108\uac00 \ud638\uc2a4\ud2b8\uc758 \ud2b9\uc815 \uae30\ub2a5\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uac83\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ubc29\uc9c0\ud569\ub2c8\ub2e4. Docker\uc6a9 SELinux\ub97c \uad6c\uc131\ud558\uba74 Docker\ub294 \uc790\ub3d9\uc73c\ub85c \uc6cc\ud06c\ub85c\ub4dc 'container_t' \uc5d0 \uc720\ud615\uc73c\ub85c \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uace0 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \uace0\uc720\ud55c MCS \uc218\uc900\uc744 \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \uc11c\ub85c \uaca9\ub9ac\ub429\ub2c8\ub2e4. \ubcf4\ub2e4 \ub290\uc2a8\ud55c \uc81c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SElinux\uc5d0\uc11c \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ud2b9\uc815 \uc601\uc5ed\uc5d0 \ub300\ud55c \ucee8\ud14c\uc774\ub108 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\ub294 \uace0\uc720\ud55c \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108/\ud3ec\ub4dc\uc5d0 \ub300\ud574 \ub2e4\ub978 \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c PSP\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc81c\ud55c\uc801\uc778 \uc81c\uc5b4 \uc9d1\ud569\uc774 \uc788\ub294 \uc77c\ubc18 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ud504\ub85c\ud544\uacfc \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub300\ud55c \ud504\ub85c\ud544\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SELinux for Containers\uc5d0\ub294 \uae30\ubcf8 \uc81c\ud55c\uc744 \uc218\uc815\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uc635\uc158 \uc138\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c SELinux \ubd80\uc6b8\uc740 \ud544\uc694\uc5d0 \ub530\ub77c \ud65c\uc131\ud654\ud558\uac70\ub098 \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd80\uc6b8 \uae30\ubcf8\uac12 \uc124\uba85 container_connect_any '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 \ud638\uc2a4\ud2b8\uc758 \uad8c\ud55c \uc788\ub294 \ud3ec\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ud2b8\ub97c \ud638\uc2a4\ud2b8\uc758 443 \ub610\ub294 80\uc5d0 \ub9e4\ud551\ud574\uc57c \ud558\ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc788\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. container_manage_cgroup '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 cgroup \uad6c\uc131\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 systemd\ub97c \uc2e4\ud589\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 \uc774\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. container_use_cephfs '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 ceph \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\ub294 /usr \uc5d0\uc11c \uc77d\uae30/\uc2e4\ud589\uc774 \ud5c8\uc6a9\ub418\uace0 /etc \uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \ucf58\ud150\uce20\ub97c \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. /var/lib/docker \ubc0f /var/lib/containers \uc544\ub798\uc758 \ud30c\uc77c\uc5d0\ub294 container_var_lib_t \ub808\uc774\ube14\uc774 \uc788\uc2b5\ub2c8\ub2e4 . \uae30\ubcf8\uac12\uc758 \uc804\uccb4 \ubaa9\ub85d\uc744 \ubcf4\ub824\uba74 container.fc \ud30c\uc77c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/lib/docker/image/overlay2/repositories.json:/host/repositories.json \\ centos:7 \uace0\uc591\uc774 /host/repositories.json # cat: /host/repositories.json: \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /etc/passwd:/\ud638\uc2a4\ud2b8/etc/passwd \\ centos:7 \uace0\uc591\uc774 /\ud638\uc2a4\ud2b8/etc/passwd # cat: /host/etc/passwd: \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. container_file_t \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ud30c\uc77c\uc740 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc4f8 \uc218 \uc788\ub294 \uc720\uc77c\ud55c \ud30c\uc77c\uc785\ub2c8\ub2e4. \ubcfc\ub968 \ub9c8\uc6b4\ud2b8\ub97c \uc4f0\uae30 \uac00\ub2a5\ud558\uac8c \ud558\ub824\uba74 \ub05d\uc5d0 :z \ub610\ub294 :Z \ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. :z \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc77d\uace0 \uc4f8 \uc218 \uc788\ub3c4\ub85d \ud30c\uc77c\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4. :Z \ub294 \ub9cc \ucee8\ud14c\uc774\ub108\uac00 \uc77d\uace0 \uc4f8 \uc218 \uc788\ub3c4\ub85d \ud30c\uc77c\uc5d0 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4. ls -Z /var/lib/misc # -rw-r--r--. \ub8e8\ud2b8 \ub8e8\ud2b8 system_u:object_r:var_lib_t:s0 postfix.aliasesdb-stamp \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/lib/misc:/host/var/lib/misc:z \\ \uc13c\ud1a0\uc2a4:7 \uc5d0\ucf54 \"\uc7ac\uba85\uba85!\" ls -Z /var/lib/misc #-rw-r--r--. \ub8e8\ud2b8 \ub8e8\ud2b8 system_u:object_r:container_file_t:s0 postfix.aliasesdb-stamp \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/log:/host/var/log:Z \\ fluentbit:\ucd5c\uc2e0 Kubernetes\uc5d0\uc11c \ub808\uc774\ube14 \uc7ac\uc9c0\uc815\uc740 \uc57d\uac04 \ub2e4\ub985\ub2c8\ub2e4. Docker\uac00 \uc790\ub3d9\uc73c\ub85c \ud30c\uc77c\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud558\ub3c4\ub85d \ud558\ub294 \ub300\uc2e0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 MCS \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\ube14 \uc7ac\uc9c0\uc815\uc744 \uc9c0\uc6d0\ud558\ub294 \ubcfc\ub968\uc740 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \uc790\ub3d9\uc73c\ub85c \ub808\uc774\ube14\uc774 \uc7ac\uc9c0\uc815\ub429\ub2c8\ub2e4. \uc77c\uce58\ud558\ub294 MCS \ub808\uc774\ube14\uc774 \uc788\ub294 \ud3ec\ub4dc\ub294 \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5c4\uaca9\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uac01 \ud31f(Pod)\uc5d0 \ub300\ud574 \ub2e4\ub978 MCS \ub808\uc774\ube14\uc744 \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : seLinux \uc635\uc158 : # \uc6a9\uae30\ubcc4\ub85c \uace0\uc720\ud55c MCS \ub77c\ubca8 \uc81c\uacf5 # \uc0ac\uc6a9\uc790, \uc5ed\ud560 \ubc0f \uc720\ud615\uc744 \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. # \uc720\ud615 \ubc0f \uc218\uc900\uc5d0 \ub530\ub978 \uc2dc\ud589(svert) \ub808\ubca8 : s0:c144:c154 \uc774 \uc608\uc5d0\uc11c s0:c144:c154 \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud30c\uc77c\uc5d0 \ud560\ub2f9\ub41c MCS \ub808\uc774\ube14\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\uace0 \ud638\uc2a4\ud2b8 \ub514\ub809\ud130\ub9ac\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud560 \ud544\uc694 \uc5c6\uc774 \ud638\uc2a4\ud2b8\uc758 /var/log\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d SELinux \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \ub808\uc774\ube14\uc774 \ub3d9\uc77c\ud55c \ud3ec\ub4dc\ub294 \ub3d9\uc77c\ud55c \ud638\uc2a4\ud2b8 \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\uc6a9 \uc0d8\ud50c AMI \ub97c \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c AMI\ub294 \uc0d8\ud50c \uad6c\ud604\uc744 \uc2dc\uc5f0\ud558\uae30 \uc704\ud574 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4. STIG, CJIS \ubc0f C2S\uc640 \uac19\uc774 \uaddc\uc81c\uac00 \uc5c4\uaca9\ud55c \uace0\uac1d\uc758 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud569\ub2c8\ub2e4. \uc8fc\uc758 SELinux\ub294 \uc720\ud615\uc774 \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ubb34\uc2dc\ud569\ub2c8\ub2e4. \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 \uc628\ud504\ub808\ubbf8\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud55c SELinux Kubernetes RBAC \ubc0f \ubc30\uc1a1 \ubcf4\uc548 \uc815\ucc45 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ubc18\ubcf5 \uac15\ud654 Audit2Allow SEAlert Udica\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c SELinux \uc815\ucc45 \uc0dd\uc131 \uc740 Linux \uae30\ub2a5\uc5d0 \ub300\ud55c \ucee8\ud14c\uc774\ub108 \uc0ac\uc591 \ud30c\uc77c\uc744 \ud655\uc778\ud558\ub294 \ub3c4\uad6c\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \ud3ec\ud2b8, \ub9c8\uc6b4\ud2b8 \uc9c0\uc810, \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ub300\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\ub294 \uc77c\ub828\uc758 SELinux \uaddc\uce59 \uc0dd\uc131 AMI Hardening \ub2e4\uc591\ud55c \uaddc\uc81c \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud558\uae30 \uc704\ud574 OS\ub97c \uac15\ud654\ud558\uae30 \uc704\ud55c \ud50c\ub808\uc774\ubd81 \ub3c4\uad6c \u00b6 Keiko Upgrade Manager \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \ud68c\uc804\uc744 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158\ud558\ub294 Intuit\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8. Sysdig Secure eksctl","title":"\uc778\ud504\ub77c(\ud638\uc2a4\ud2b8) \ubcf4\ud638"},{"location":"security/docs/hosts.kr/#_1","text":"\ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ubcf4\ud638\ud558\ub294 \uac83\uc774 \uc911\uc694\ud55c \ub9cc\ud07c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc2e4\ud589\ud558\ub294 \uc778\ud504\ub77c\ub97c \ubcf4\ud638\ud558\ub294 \uac83\ub3c4 \ub611\uac19\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud574 \uc9c1\uc811 \uc2dc\uc791\ub41c \uacf5\uaca9\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubd05\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc9c0\uce68\uc740 \ub7f0\ud0c0\uc784 \ubcf4\uc548 \uc139\uc158 \uc5d0 \uc124\uba85\ub41c \uc9c0\uce68\uacfc \ud568\uaed8 \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4 .","title":"\uc778\ud504\ub77c(\ud638\uc2a4\ud2b8) \ubcf4\ud638"},{"location":"security/docs/hosts.kr/#_2","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/hosts.kr/#os","text":"Flatcar Linux, Project Atomic, RancherOS \ubc0f Linux \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub3c4\ub85d \uc124\uacc4\ub41c AWS\uc758 \ud2b9\uc218 \ubaa9\uc801 OS\uc778 Bottlerocket \uc0ac\uc6a9\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \uc5ec\uae30\uc5d0\ub294 \uac10\uc18c\ub41c \uacf5\uaca9 \ud45c\uba74, \ubd80\ud305 \uc2dc \ud655\uc778\ub418\ub294 \ub514\uc2a4\ud06c \uc774\ubbf8\uc9c0, SELinux\ub97c \uc0ac\uc6a9\ud558\ub294 \uac15\uc81c \uad8c\ud55c \uacbd\uacc4\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ub610\ub294 Kubernetes \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud574 EKS \ucd5c\uc801\ud654 AMI \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. EKS \ucd5c\uc801\ud654 AMI\ub294 \uc815\uae30\uc801\uc73c\ub85c \ub9b4\ub9ac\uc2a4\ub418\uba70 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \ucd5c\uc18c\ud55c\uc758 OS \ud328\ud0a4\uc9c0 \ubc0f \ubc14\uc774\ub108\ub9ac \uc138\ud2b8\ub97c \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"\ucee8\ud14c\uc774\ub108 \uc2e4\ud589\uc5d0 \ucd5c\uc801\ud654\ub41c OS \uc0ac\uc6a9"},{"location":"security/docs/hosts.kr/#os_1","text":"Bottlerocket\uacfc \uac19\uc740 \ucee8\ud14c\uc774\ub108 \ucd5c\uc801\ud654 \ud638\uc2a4\ud2b8 OS\ub97c \uc0ac\uc6a9\ud558\ub4e0 EKS \ucd5c\uc801\ud654 AMI\uc640 \uac19\uc740 \ub354 \ud06c\uc9c0\ub9cc \uc5ec\uc804\ud788 \ubbf8\ub2c8\uba40\ud55c Amazon Machine Image\ub97c \uc0ac\uc6a9\ud558\ub4e0 \ucd5c\uc2e0 \ubcf4\uc548 \ud328\uce58\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ud638\uc2a4\ud2b8 OS \uc774\ubbf8\uc9c0\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. EKS \ucd5c\uc801\ud654 AMI\uc758 \uacbd\uc6b0 [ CHANGELOG ][eks-ami-changes] \ubc0f/\ub610\ub294 release notes channel \ub97c \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud558\uace0 \uc5c5\ub370\uc774\ud2b8\ub41c \uc791\uc5c5\uc790 \ub178\ub4dc \uc774\ubbf8\uc9c0\ub97c \ud074\ub7ec\uc2a4\ud130\ub85c \uc790\ub3d9 \ub864\uc544\uc6c3\ud569\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc790 \ub178\ub4dc OS\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0"},{"location":"security/docs/hosts.kr/#_3","text":"\uc804\uccb4 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \uc0c8 \ud328\uce58 \ub610\ub294 \uc5c5\ub370\uc774\ud2b8\uac00 \uc81c\uacf5\ub418\uba74 \uc791\uc5c5\uc790\ub97c \uad50\uccb4\ud558\uc2ed\uc2dc\uc624. \uc774\uac83\uc740 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc811\uadfc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub8f9\uc758 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \ucd5c\uc2e0 AMI\ub85c \uad50\uccb4\ub420 \ub54c\uae4c\uc9c0 \uc21c\ucc28\uc801\uc73c\ub85c \ub178\ub4dc\ub97c \ucc28\ub2e8\ud558\uace0 \ubc30\ucd9c\ud558\uba74\uc11c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\uc874 Auto Scaling \uadf8\ub8f9\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uac00 \uad50\uccb4\ub420 \ub54c\uae4c\uc9c0 \uc774\uc804 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \ub178\ub4dc\ub97c \uc21c\ucc28\uc801\uc73c\ub85c \ucc28\ub2e8\ud558\uace0 \ube44\uc6b0\ub294 \ub3d9\uc548 \uc0c8 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \uc778\uc2a4\ud134\uc2a4\ub97c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \uc740 \uccab \ubc88\uc9f8 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uba70 \ub2e4\uc74c\uacfc \uac19\uc740 \uacbd\uc6b0 \uc791\uc5c5\uc790\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub77c\ub294 \uba54\uc2dc\uc9c0\ub97c \ucf58\uc194\uc5d0 \ud45c\uc2dc\ud569\ub2c8\ub2e4. \uc0c8 AMI\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ub429\ub2c8\ub2e4. \ub610\ud55c eksctl \uc5d0\ub294 \ucd5c\uc2e0 AMI\ub85c \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0dd\uc131\ud558\uace0 \uc778\uc2a4\ud134\uc2a4\uac00 \uc885\ub8cc\ub418\uae30 \uc804\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \ud3ec\ub4dc\ub97c \uc815\uc0c1\uc801\uc73c\ub85c \ucc28\ub2e8 \ubc0f \ubc30\ucd9c \ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uad50\uccb4\ud558\uae30 \uc704\ud574 \ub2e4\ub978 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc815\ud55c \uacbd\uc6b0 \uc0c8 \uc5c5\ub370\uc774\ud2b8/\ud328\uce58\uac00 \ub9b4\ub9ac\uc2a4\ub418\uace0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub420 \ub54c \uc791\uc5c5\uc790\ub97c \uc815\uae30\uc801\uc73c\ub85c \uad50\uccb4\ud574\uc57c \ud560 \uac00\ub2a5\uc131\uc774 \uc788\uc73c\ubbc0\ub85c \uc0ac\ub78c\uc758 \uac10\ub3c5\uc744 \ucd5c\uc18c\ud654\ud558\ub3c4\ub85d \ud504\ub85c\uc138\uc2a4\ub97c \uc790\ub3d9\ud654\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. . EKS Fargate\ub97c \ud1b5\ud574 AWS\ub294 \uc5c5\ub370\uc774\ud2b8\uac00 \uc81c\uacf5\ub418\uba74 \uae30\ubcf8 \uc778\ud504\ub77c\ub97c \uc790\ub3d9\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. \uc885\uc885 \uc774 \uc791\uc5c5\uc740 \uc6d0\ud65c\ud558\uac8c \uc218\ud589\ub420 \uc218 \uc788\uc9c0\ub9cc \uc5c5\ub370\uc774\ud2b8\ub85c \uc778\ud574 Pod \uc77c\uc815\uc774 \ub2e4\uc2dc \uc870\uc815\ub418\ub294 \uacbd\uc6b0\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 Fargate \ud3ec\ub4dc\ub85c \uc2e4\ud589\ud560 \ub54c \uc5ec\ub7ec \ubcf5\uc81c\ubcf8\uc73c\ub85c \ubc30\ud3ec\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes\uc6a9 CIS \ubca4\uce58\ub9c8\ud06c ]( https://www.cisecurity.org/benchmark/kubernetes/ ) \uc900\uc218 \uc5ec\ubd80 \ud655\uc778 kube-bench\ub294 Kubernetes\uc758 CIS \ubca4\uce58\ub9c8\ud06c\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ud3c9\uac00\ud558\ub294 Aqua\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \uc774 \ubca4\uce58\ub9c8\ud06c\ub294 \uad00\ub9ac\ub418\uc9c0 \uc54a\ub294 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \ubcf4\ud638\ud558\uae30 \uc704\ud55c \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. CIS Kubernetes Benchmark\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. Amazon EKS\ub294 \uc644\uc804\ud788 \uad00\ub9ac\ub418\ub294 \uc81c\uc5b4 \ud50c\ub808\uc778\uc744 \uc81c\uacf5\ud558\ubbc0\ub85c CIS Kubernetes Benchmark\uc758 \ubaa8\ub4e0 \uad8c\uc7a5 \uc0ac\ud56d\uc774 \uc801\uc6a9\ub418\ub294 \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \uc774 \ubc94\uc704\uac00 Amazon EKS \uad6c\ud604 \ubc29\uc2dd\uc744 \ubc18\uc601\ud558\ub3c4\ub85d AWS\ub294 CIS Amazon EKS \ubca4\uce58\ub9c8\ud06c \ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4 . EKS \ubca4\uce58\ub9c8\ud06c\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ud2b9\uc815 \uad6c\uc131 \uace0\ub824 \uc0ac\ud56d\uacfc \ud568\uaed8 \ucee4\ubba4\ub2c8\ud2f0\uc758 \ucd94\uac00 \uc785\ub825\uacfc \ud568\uaed8 CIS Kubernetes Benchmark\uc5d0\uc11c \uc0c1\uc18d\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 kube-bench \ub97c \uc2e4\ud589\ud560 \ub54c \uc774 \uc9c0\uce68 \uc744 \ub530\ub974\uc2ed\uc2dc\uc624. /docs/running.md#running-cis-benchmark-in-an-eks-cluster ) Aqua Security\uc5d0\uc11c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 CIS Amazon EKS \ubca4\uce58\ub9c8\ud06c \uc18c\uac1c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uc778\ud504\ub77c\ub97c \ubd88\ubcc0\uc73c\ub85c \ucde8\uae09\ud558\uace0 \uc791\uc5c5\uc790 \ub178\ub4dc \uad50\uccb4\ub97c \uc790\ub3d9\ud654\ud558\uc2ed\uc2dc\uc624."},{"location":"security/docs/hosts.kr/#_4","text":"SSH \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub294 \ub300\uc2e0 \ud638\uc2a4\ud2b8\uc5d0 \uc6d0\uaca9\uc73c\ub85c \uc811\uc18d\ud574\uc57c \ud560 \ub54c SSM \uc138\uc158 \uad00\ub9ac\uc790 \ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \ubd84\uc2e4, \ubcf5\uc0ac \ub610\ub294 \uacf5\uc720\ub420 \uc218 \uc788\ub294 SSH \ud0a4\uc640 \ub2ec\ub9ac \uc138\uc158 \uad00\ub9ac\uc790\ub97c \uc0ac\uc6a9\ud558\uba74 IAM\uc744 \uc0ac\uc6a9\ud558\uc5ec EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub41c \uba85\ub839\uc758 \uac10\uc0ac \ucd94\uc801 \ubc0f \ub85c\uadf8\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. 2020\ub144 8\uc6d4 19\uc77c\ubd80\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI \ubc0f EC2 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 SSM \uc5d0\uc774\uc804\ud2b8\ub97c AMI\uc5d0 \ud3ec\ud568\ud558\uac70\ub098 \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9\ub420 \ub54c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc801\ud654\ub41c AMI \ub610\ub294 ASG\uc758 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc744 \uc218\uc815\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 https://github.com/aws-samples/ssm-agent-daemonset-installer \uc608\uc81c\uc640 \uac19\uc774 DaemonSet\uc640 \ud568\uaed8 SSM \uc5d0\uc774\uc804\ud2b8\ub97c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \ucd5c\uc18c\ud654"},{"location":"security/docs/hosts.kr/#ssm-ssh-iam","text":"AmazonSSMManagedInstanceCore AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc5d0\ub294 SSH \uc561\uc138\uc2a4\ub97c \ud53c\ud558\ub824\ub294 \uacbd\uc6b0 SSM Session Manager / SSM RunCommand\uc5d0 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc5ec\ub7ec \uad8c\ud55c\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4 . \ud2b9\ud788 \uc6b0\ub824\ub418\ub294 \uac83\uc740 ssm:GetParameter(s) \uc5d0 \ub300\ud55c *` \uad8c\ud55c\uc73c\ub85c \uc5ed\ud560\uc774 Parameter Store\uc758 \ubaa8\ub4e0 \ud30c\ub77c\ubbf8\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(AWS \uad00\ub9ac\ud615 KMS \ud0a4\uac00 \uad6c\uc131\ub41c SecureStrings \ud3ec\ud568). \ub2e4\uc74c IAM \uc815\ucc45\uc5d0\ub294 SSM Systems Manager\ub97c \ud1b5\ud574 \ub178\ub4dc \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud55c \ucd5c\uc18c \uad8c\ud55c \uc9d1\ud569\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. { \"\ubc84\uc804\" : \"2012-10-17\" , \"\uc9c4\uc220\uc11c\" : [ { \"Sid\" : \"EnableAccessViaSSMSessionManager\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ssmmmessages:OpenDataChannel\" , \"ssmmmessages:OpenControlChannel\" , \"ssmmmessages:CreateDataChannel\" , \"ssmmmessages:CreateControlChannel\" , \"ssm:UpdateInstanceInformation\" ], \"\uc790\uc6d0\" : \"*\" }, { \"\uc2dc\ub4dc\" : \"EnableSSMRunCommand\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ssm:UpdateInstanceInformation\" , \"ec2messages:SendReply\" , \"ec2messages:GetMessages\" , \"ec2messages:GetEndpoint\" , \"ec2messages:FailMessage\" , \"ec2messages:DeleteMessage\" , \"ec2messages:AcknowledgeMessage\" ], \"\uc790\uc6d0\" : \"*\" } ] } \uc774 \uc815\ucc45\uc774 \uc801\uc6a9\ub418\uace0 Session Manager \ud50c\ub7ec\uadf8\uc778 \uc774 \uc124\uce58\ub418\uc5b4 \uc788\uc73c\uba74 \uadf8\ub7f0 \ub2e4\uc74c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 aws ssm \uc2dc\uc791 \uc138\uc158 --target [INSTANCE_ID_OF_EKS_NODE] \ub178\ub4dc\uc5d0 \uc561\uc138\uc2a4\ud569\ub2c8\ub2e4. \ub178\ud2b8 Session Manager \ub85c\uae45 \ud65c\uc131\ud654 ]( https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-create-iam-instance-profile.html# \uc5d0 \ub300\ud55c \uad8c\ud55c \ucd94\uac00\ub97c \uace0\ub824\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. create-iam-instance-profile-ssn-logging ).","title":"SSM \uae30\ubc18 SSH \uc561\uc138\uc2a4\ub97c \uc704\ud55c \ucd5c\uc18c IAM \uc815\ucc45"},{"location":"security/docs/hosts.kr/#_5","text":"\uac1c\uc778 \uc11c\ube0c\ub137\uc5d0 \uc791\uc5c5\uc790\ub97c \ubc30\ud3ec\ud558\uba74 \uacf5\uaca9\uc774 \uc790\uc8fc \ubc1c\uc0dd\ud558\ub294 \uc778\ud130\ub137\uc5d0 \ub300\ud55c \ub178\ucd9c\uc744 \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 2020\ub144 4\uc6d4 22\uc77c\ubd80\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc\uc5d0 \ub300\ud55c \uacf5\uc6a9 IP \uc8fc\uc18c \ud560\ub2f9\uc740 \ubc30\ud3ec\ub41c \uc11c\ube0c\ub137\uc5d0 \uc758\ud574 \uc81c\uc5b4\ub429\ub2c8\ub2e4. \uc774\uc804\uc5d0\ub294 \uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc\uc5d0 \uacf5\uc6a9 IP\uac00 \uc790\ub3d9\uc73c\ub85c \ud560\ub2f9\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ud37c\ube14\ub9ad \uc11c\ube0c\ub137\uc5d0 \ubc30\ud3ec\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 \uc81c\ud55c\uc801\uc778 AWS \ubcf4\uc548 \uadf8\ub8f9 \uaddc\uce59\uc744 \uad6c\ud604\ud558\uc5ec \ub178\ucd9c\uc744 \uc81c\ud55c\ud558\uc2ed\uc2dc\uc624.","title":"\ud504\ub77c\uc774\ube57 \uc11c\ube0c\ub137\uc5d0 \uc791\uc5c5\uc790 \ubc30\ud3ec"},{"location":"security/docs/hosts.kr/#amazon-inspector","text":"Amazon Inspector \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0 \ub300\ud55c \uc758\ub3c4\ud558\uc9c0 \uc54a\uc740 \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4\uc640 \uae30\ubcf8 Amazon\uc758 \ucde8\uc57d\uc131\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4. Amazon Inspector\ub294 Amazon EC2 Systems Manager(SSM) \uc5d0\uc774\uc804\ud2b8\uac00 \uc124\uce58\ub418\uace0 \ud65c\uc131\ud654\ub41c \uacbd\uc6b0\uc5d0\ub9cc Amazon EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ub300\ud55c \uacf5\ud1b5 \ucde8\uc57d\uc131 \ubc0f \ub178\ucd9c(CVE) \ub370\uc774\ud130\ub97c \uc81c\uacf5\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc5d0\uc774\uc804\ud2b8\ub294 EKS \ucd5c\uc801\ud654 Amazon Linux AMI \ub97c \ud3ec\ud568\ud558\uc5ec \uc5ec\ub7ec [ Amazon \uba38\uc2e0 \uc774\ubbf8\uc9c0(AMI) ]( https://docs.aws.amazon.com/systems-manager/latest/userguide/ami-preinstalled-agent.html )\uc5d0 \uc0ac\uc804 \uc124\uce58\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. . SSM \uc5d0\uc774\uc804\ud2b8 \uc0c1\ud0dc\uc640 \uad00\uacc4\uc5c6\uc774 \ubaa8\ub4e0 Amazon EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ub124\ud2b8\uc6cc\ud06c \uc5f0\uacb0 \ubb38\uc81c\ub97c \uc2a4\uce94\ud569\ub2c8\ub2e4. Amazon EC2 \uc2a4\uce94 \uad6c\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon EC2 \uc778\uc2a4\ud134\uc2a4 \uc2a4\uce94 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc8fc\ubaa9 Fargate \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uc778\ud504\ub77c\uc5d0\uc11c\ub294 Inspector\ub97c \uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"Amazon Inspector\ub97c \uc2e4\ud589\ud558\uc5ec \ud638\uc2a4\ud2b8\uc758 \ub178\ucd9c, \ucde8\uc57d\uc131 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc640\uc758 \ud3b8\ucc28\ub97c \ud3c9\uac00\ud569\ub2c8\ub2e4."},{"location":"security/docs/hosts.kr/#_6","text":"","title":"\ub300\uc548"},{"location":"security/docs/hosts.kr/#selinux","text":"\uc815\ubcf4 RHEL(Red Hat Enterprise Linux), CentOS \ubc0f CoreOS\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5 SELinux\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc11c\ub85c \uac04\uc5d0 \uadf8\ub9ac\uace0 \ud638\uc2a4\ud2b8\ub85c\ubd80\ud130 \uaca9\ub9ac\ub41c \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uae30 \uc704\ud574 \ucd94\uac00 \ubcf4\uc548 \uacc4\uce35\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. SELinux\ub97c \ud1b5\ud574 \uad00\ub9ac\uc790\ub294 \ubaa8\ub4e0 \uc0ac\uc6a9\uc790, \uc560\ud50c\ub9ac\ucf00\uc774\uc158, \ud504\ub85c\uc138\uc2a4 \ubc0f \ud30c\uc77c\uc5d0 \ub300\ud574 \ud544\uc218 \uc561\uc138\uc2a4 \uc81c\uc5b4(MAC)\ub97c \uc2dc\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\ube14 \uc138\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uc81c\ud55c \ud558\ub294 \ubc31\uc2a4\ud1b1\uc73c\ub85c \uc0dd\uac01\ud558\uc2ed\uc2dc\uc624 . EKS\uc5d0\uc11c SELinux\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uc11c\ub85c\uc758 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 SELinux \uc815\ucc45\uc740 container-selinux \ud328\ud0a4\uc9c0\uc5d0 \uc815\uc758\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Docker CE\ub294 Docker(\ub610\ub294 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784)\uc5d0\uc11c \uc0dd\uc131\ub41c \ud504\ub85c\uc138\uc2a4 \ubc0f \ud30c\uc77c\uc774 \uc81c\ud55c\ub41c \uc2dc\uc2a4\ud15c \uc561\uc138\uc2a4\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uc774 \ud328\ud0a4\uc9c0(\uc885\uc18d\uc131\uacfc \ud568\uaed8)\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub294 svirt_lxc_net_t \uc758 \ubcc4\uce6d\uc778 container_t \ub808\uc774\ube14\uc744 \ud65c\uc6a9\ud569\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ucee8\ud14c\uc774\ub108\uac00 \ud638\uc2a4\ud2b8\uc758 \ud2b9\uc815 \uae30\ub2a5\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uac83\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ubc29\uc9c0\ud569\ub2c8\ub2e4. Docker\uc6a9 SELinux\ub97c \uad6c\uc131\ud558\uba74 Docker\ub294 \uc790\ub3d9\uc73c\ub85c \uc6cc\ud06c\ub85c\ub4dc 'container_t' \uc5d0 \uc720\ud615\uc73c\ub85c \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uace0 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \uace0\uc720\ud55c MCS \uc218\uc900\uc744 \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \uc11c\ub85c \uaca9\ub9ac\ub429\ub2c8\ub2e4. \ubcf4\ub2e4 \ub290\uc2a8\ud55c \uc81c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 SElinux\uc5d0\uc11c \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ud2b9\uc815 \uc601\uc5ed\uc5d0 \ub300\ud55c \ucee8\ud14c\uc774\ub108 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\ub294 \uace0\uc720\ud55c \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108/\ud3ec\ub4dc\uc5d0 \ub300\ud574 \ub2e4\ub978 \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c PSP\uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc81c\ud55c\uc801\uc778 \uc81c\uc5b4 \uc9d1\ud569\uc774 \uc788\ub294 \uc77c\ubc18 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ud504\ub85c\ud544\uacfc \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub300\ud55c \ud504\ub85c\ud544\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SELinux for Containers\uc5d0\ub294 \uae30\ubcf8 \uc81c\ud55c\uc744 \uc218\uc815\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\ub294 \uc635\uc158 \uc138\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c SELinux \ubd80\uc6b8\uc740 \ud544\uc694\uc5d0 \ub530\ub77c \ud65c\uc131\ud654\ud558\uac70\ub098 \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubd80\uc6b8 \uae30\ubcf8\uac12 \uc124\uba85 container_connect_any '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 \ud638\uc2a4\ud2b8\uc758 \uad8c\ud55c \uc788\ub294 \ud3ec\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ud2b8\ub97c \ud638\uc2a4\ud2b8\uc758 443 \ub610\ub294 80\uc5d0 \ub9e4\ud551\ud574\uc57c \ud558\ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc788\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. container_manage_cgroup '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 cgroup \uad6c\uc131\uc744 \uad00\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 systemd\ub97c \uc2e4\ud589\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 \uc774\ub97c \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. container_use_cephfs '\uaebc\uc9d0' \ucee8\ud14c\uc774\ub108\uac00 ceph \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\ub294 /usr \uc5d0\uc11c \uc77d\uae30/\uc2e4\ud589\uc774 \ud5c8\uc6a9\ub418\uace0 /etc \uc5d0\uc11c \ub300\ubd80\ubd84\uc758 \ucf58\ud150\uce20\ub97c \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. /var/lib/docker \ubc0f /var/lib/containers \uc544\ub798\uc758 \ud30c\uc77c\uc5d0\ub294 container_var_lib_t \ub808\uc774\ube14\uc774 \uc788\uc2b5\ub2c8\ub2e4 . \uae30\ubcf8\uac12\uc758 \uc804\uccb4 \ubaa9\ub85d\uc744 \ubcf4\ub824\uba74 container.fc \ud30c\uc77c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/lib/docker/image/overlay2/repositories.json:/host/repositories.json \\ centos:7 \uace0\uc591\uc774 /host/repositories.json # cat: /host/repositories.json: \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /etc/passwd:/\ud638\uc2a4\ud2b8/etc/passwd \\ centos:7 \uace0\uc591\uc774 /\ud638\uc2a4\ud2b8/etc/passwd # cat: /host/etc/passwd: \uad8c\ud55c\uc774 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. container_file_t \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ud30c\uc77c\uc740 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc4f8 \uc218 \uc788\ub294 \uc720\uc77c\ud55c \ud30c\uc77c\uc785\ub2c8\ub2e4. \ubcfc\ub968 \ub9c8\uc6b4\ud2b8\ub97c \uc4f0\uae30 \uac00\ub2a5\ud558\uac8c \ud558\ub824\uba74 \ub05d\uc5d0 :z \ub610\ub294 :Z \ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. :z \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc77d\uace0 \uc4f8 \uc218 \uc788\ub3c4\ub85d \ud30c\uc77c\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4. :Z \ub294 \ub9cc \ucee8\ud14c\uc774\ub108\uac00 \uc77d\uace0 \uc4f8 \uc218 \uc788\ub3c4\ub85d \ud30c\uc77c\uc5d0 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud569\ub2c8\ub2e4. ls -Z /var/lib/misc # -rw-r--r--. \ub8e8\ud2b8 \ub8e8\ud2b8 system_u:object_r:var_lib_t:s0 postfix.aliasesdb-stamp \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/lib/misc:/host/var/lib/misc:z \\ \uc13c\ud1a0\uc2a4:7 \uc5d0\ucf54 \"\uc7ac\uba85\uba85!\" ls -Z /var/lib/misc #-rw-r--r--. \ub8e8\ud2b8 \ub8e8\ud2b8 system_u:object_r:container_file_t:s0 postfix.aliasesdb-stamp \ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \uc2e4\ud589 -it \\ -v /var/log:/host/var/log:Z \\ fluentbit:\ucd5c\uc2e0 Kubernetes\uc5d0\uc11c \ub808\uc774\ube14 \uc7ac\uc9c0\uc815\uc740 \uc57d\uac04 \ub2e4\ub985\ub2c8\ub2e4. Docker\uac00 \uc790\ub3d9\uc73c\ub85c \ud30c\uc77c\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud558\ub3c4\ub85d \ud558\ub294 \ub300\uc2e0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 MCS \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub808\uc774\ube14 \uc7ac\uc9c0\uc815\uc744 \uc9c0\uc6d0\ud558\ub294 \ubcfc\ub968\uc740 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \uc790\ub3d9\uc73c\ub85c \ub808\uc774\ube14\uc774 \uc7ac\uc9c0\uc815\ub429\ub2c8\ub2e4. \uc77c\uce58\ud558\ub294 MCS \ub808\uc774\ube14\uc774 \uc788\ub294 \ud3ec\ub4dc\ub294 \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5c4\uaca9\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uac01 \ud31f(Pod)\uc5d0 \ub300\ud574 \ub2e4\ub978 MCS \ub808\uc774\ube14\uc744 \uc124\uc815\ud558\uc2ed\uc2dc\uc624. \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : seLinux \uc635\uc158 : # \uc6a9\uae30\ubcc4\ub85c \uace0\uc720\ud55c MCS \ub77c\ubca8 \uc81c\uacf5 # \uc0ac\uc6a9\uc790, \uc5ed\ud560 \ubc0f \uc720\ud615\uc744 \uc9c0\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. # \uc720\ud615 \ubc0f \uc218\uc900\uc5d0 \ub530\ub978 \uc2dc\ud589(svert) \ub808\ubca8 : s0:c144:c154 \uc774 \uc608\uc5d0\uc11c s0:c144:c154 \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud30c\uc77c\uc5d0 \ud560\ub2f9\ub41c MCS \ub808\uc774\ube14\uc5d0 \ud574\ub2f9\ud569\ub2c8\ub2e4. \ud558\uace0 \ud638\uc2a4\ud2b8 \ub514\ub809\ud130\ub9ac\uc758 \ub808\uc774\ube14\uc744 \ub2e4\uc2dc \uc9c0\uc815\ud560 \ud544\uc694 \uc5c6\uc774 \ud638\uc2a4\ud2b8\uc758 /var/log\uc5d0\uc11c \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d SELinux \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \ub808\uc774\ube14\uc774 \ub3d9\uc77c\ud55c \ud3ec\ub4dc\ub294 \ub3d9\uc77c\ud55c \ud638\uc2a4\ud2b8 \ubcfc\ub968\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EKS\uc6a9 \uc0d8\ud50c AMI \ub97c \uad6c\ud604\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c AMI\ub294 \uc0d8\ud50c \uad6c\ud604\uc744 \uc2dc\uc5f0\ud558\uae30 \uc704\ud574 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4. STIG, CJIS \ubc0f C2S\uc640 \uac19\uc774 \uaddc\uc81c\uac00 \uc5c4\uaca9\ud55c \uace0\uac1d\uc758 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud569\ub2c8\ub2e4. \uc8fc\uc758 SELinux\ub294 \uc720\ud615\uc774 \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ubb34\uc2dc\ud569\ub2c8\ub2e4.","title":"SELinux \uc2e4\ud589"},{"location":"security/docs/hosts.kr/#_7","text":"\uc628\ud504\ub808\ubbf8\uc2a4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud55c SELinux Kubernetes RBAC \ubc0f \ubc30\uc1a1 \ubcf4\uc548 \uc815\ucc45 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc758 \ubc18\ubcf5 \uac15\ud654 Audit2Allow SEAlert Udica\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c SELinux \uc815\ucc45 \uc0dd\uc131 \uc740 Linux \uae30\ub2a5\uc5d0 \ub300\ud55c \ucee8\ud14c\uc774\ub108 \uc0ac\uc591 \ud30c\uc77c\uc744 \ud655\uc778\ud558\ub294 \ub3c4\uad6c\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \ud3ec\ud2b8, \ub9c8\uc6b4\ud2b8 \uc9c0\uc810, \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ub300\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \ud558\ub294 \uc77c\ub828\uc758 SELinux \uaddc\uce59 \uc0dd\uc131 AMI Hardening \ub2e4\uc591\ud55c \uaddc\uc81c \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud558\uae30 \uc704\ud574 OS\ub97c \uac15\ud654\ud558\uae30 \uc704\ud55c \ud50c\ub808\uc774\ubd81","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"security/docs/hosts.kr/#_8","text":"Keiko Upgrade Manager \uc791\uc5c5\uc790 \ub178\ub4dc\uc758 \ud68c\uc804\uc744 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\uc158\ud558\ub294 Intuit\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8. Sysdig Secure eksctl","title":"\ub3c4\uad6c"},{"location":"security/docs/hosts/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Protecting the infrastructure (hosts) \u00b6 Inasmuch as it's important to secure your container images, it's equally important to safeguard the infrastructure that runs them. This section explores different ways to mitigate risks from attacks launched directly against the host. These guidelines should be used in conjunction with those outlined in the Runtime Security section. Recommendations \u00b6 Use an OS optimized for running containers \u00b6 Consider using Flatcar Linux, Project Atomic, RancherOS, and Bottlerocket , a special purpose OS from AWS designed for running Linux containers. It includes a reduced attack surface, a disk image that is verified on boot, and enforced permission boundaries using SELinux. Alternately, use the EKS optimized AMI for your Kubernetes worker nodes. The EKS optimized AMI is released regularly and contains a minimal set of OS packages and binaries necessary to run your containerized workloads. Keep your worker node OS updated \u00b6 Regardless of whether you use a container-optimized host OS like Bottlerocket or a larger, but still minimalist, Amazon Machine Image like the EKS optimized AMIs, it is best practice to keep these host OS images up to date with the latest security patches. For the EKS optimized AMIs, regularly check the CHANGELOG and/or release notes channel and automate the rollout of updated worker node images into your cluster. Treat your infrastructure as immutable and automate the replacement of your worker nodes \u00b6 Rather than performing in-place upgrades, replace your workers when a new patch or update becomes available. This can be approached a couple of ways. You can either add instances to an existing autoscaling group using the latest AMI as you sequentially cordon and drain nodes until all of the nodes in the group have been replaced with the latest AMI. Alternatively, you can add instances to a new node group while you sequentially cordon and drain nodes from the old node group until all of the nodes have been replaced. EKS managed node groups uses the first approach and will display a message in the console to upgrade your workers when a new AMI becomes available. eksctl also has a mechanism for creating node groups with the latest AMI and for gracefully cordoning and draining pods from nodes groups before the instances are terminated. If you decide to use a different method for replacing your worker nodes, it is strongly recommended that you automate the process to minimize human oversight as you will likely need to replace workers regularly as new updates/patches are released and when the control plane is upgraded. With EKS Fargate, AWS will automatically update the underlying infrastructure as updates become available. Oftentimes this can be done seamlessly, but there may be times when an update will cause your pod to be rescheduled. Hence, we recommend that you create deployments with multiple replicas when running your application as a Fargate pod. Periodically run kube-bench to verify compliance with CIS benchmarks for Kubernetes \u00b6 kube-bench is an open source project from Aqua that evaluates your cluster against the CIS benchmarks for Kubernetes. The benchmark describes the best practices for securing unmanaged Kubernetes clusters. The CIS Kubernetes Benchmark encompasses the control plane and the data plane. Since Amazon EKS provides a fully managed control plane, not all of the recommendations from the CIS Kubernetes Benchmark are applicable. To ensure this scope reflects how Amazon EKS is implemented, AWS created the CIS Amazon EKS Benchmark . The EKS benchmark inherits from CIS Kubernetes Benchmark with additional inputs from the community with specific configuration considerations for EKS clusters. When running kube-bench against an EKS cluster, follow these instructions from Aqua Security. For further information see Introducing The CIS Amazon EKS Benchmark . Minimize access to worker nodes \u00b6 Instead of enabling SSH access, use SSM Session Manager when you need to remote into a host. Unlike SSH keys which can be lost, copied, or shared, Session Manager allows you to control access to EC2 instances using IAM. Moreover, it provides an audit trail and log of the commands that were run on the instance. As of August 19th, 2020 Managed Node Groups support custom AMIs and EC2 Launch Templates. This allows you to embed the SSM agent into the AMI or install it as the worker node is being bootstrapped. If you rather not modify the Optimized AMI or the ASG's launch template, you can install the SSM agent with a DaemonSet as in this example, https://github.com/aws-samples/ssm-agent-daemonset-installer. Minimal IAM policy for SSM based SSH Access \u00b6 The AmazonSSMManagedInstanceCore AWS managed policy contains a number of permissions that are not required for SSM Session Manager / SSM RunCommand if you're just looking to avoid SSH access. Of concern specifically is the * permissions for ssm:GetParameter(s) which would allow for the role to access all parameters in Parameter Store (including SecureStrings with the AWS managed KMS key configured). The following IAM policy contains the minimal set of permissions to enable node access via SSM Systems Manager. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"EnableAccessViaSSMSessionManager\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ssmmessages:OpenDataChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:CreateControlChannel\" , \"ssm:UpdateInstanceInformation\" ], \"Resource\" : \"*\" }, { \"Sid\" : \"EnableSSMRunCommand\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ssm:UpdateInstanceInformation\" , \"ec2messages:SendReply\" , \"ec2messages:GetMessages\" , \"ec2messages:GetEndpoint\" , \"ec2messages:FailMessage\" , \"ec2messages:DeleteMessage\" , \"ec2messages:AcknowledgeMessage\" ], \"Resource\" : \"*\" } ] } With this policy in place and the Session Manager plugin installed, you can then run aws ssm start-session --target [ INSTANCE_ID_OF_EKS_NODE ] to access the node. Note You may also want to consider adding permissions to enable Session Manager logging . Deploy workers onto private subnets \u00b6 By deploying workers onto private subnets, you minimize their exposure to the Internet where attacks often originate. Beginning April 22, 2020, the assignment of public IP addresses to nodes in a managed node groups will be controlled by the subnet they are deployed onto. Prior to this, nodes in a Managed Node Group were automatically assigned a public IP. If you choose to deploy your worker nodes on to public subnets, implement restrictive AWS security group rules to limit their exposure. Run Amazon Inspector to assess hosts for exposure, vulnerabilities, and deviations from best practices \u00b6 You can use Amazon Inspector to check for unintended network access to your nodes and for vulnerabilities on the underlying Amazon EC2 instances. Amazon Inspector can provide common vulnerabilities and exposures (CVE) data for your Amazon EC2 instances only if the Amazon EC2 Systems Manager (SSM) agent is installed and enabled. This agent is preinstalled on several Amazon Machine Images (AMIs) including EKS optimized Amazon Linux AMIs . Regardless of SSM agent status, all of your Amazon EC2 instances are scanned for network reachability issues. For more information about configuring scans for Amazon EC2, see Scanning Amazon EC2 instances . Attention Inspector cannot be run on the infrastructure used to run Fargate pods. Alternatives \u00b6 Run SELinux \u00b6 Info Available on Red Hat Enterprise Linux (RHEL), CentOS, and CoreOS SELinux provides an additional layer of security to keep containers isolated from each other and from the host. SELinux allows administrators to enforce mandatory access controls (MAC) for every user, application, process, and file. Think of it as a backstop that restricts the operations that can be performed against to specific resources based on a set of labels. On EKS, SELinux can be used to prevent containers from accessing each other's resources. Container SELinux policies are defined in the container-selinux package. Docker CE requires this package (along with its dependencies) so that the processes and files created by Docker (or other container runtimes) run with limited system access. Containers leverage the container_t label which is an alias to svirt_lxc_net_t . These policies effectively prevent containers from accessing certain features of the host. When you configure SELinux for Docker, Docker automatically labels workloads container_t as a type and gives each container a unique MCS level. This will isolate containers from one another. If you need looser restrictions, you can create your own profile in SElinux which grants a container permissions to specific areas of the file system. This is similar to PSPs in that you can create different profiles for different containers/pods. For example, you can have a profile for general workloads with a set of restrictive controls and another for things that require privileged access. SELinux for Containers has a set of options that can be configured to modify the default restrictions. The following SELinux Booleans can be enabled or disabled based on your needs: Boolean Default Description container_connect_any off Allow containers to access privileged ports on the host. For example, if you have a container that needs to map ports to 443 or 80 on the host. container_manage_cgroup off Allow containers to manage cgroup configuration. For example, a container running systemd will need this to be enabled. container_use_cephfs off Allow containers to use a ceph file system. By default, containers are allowed to read/execute under /usr and read most content from /etc . The files under /var/lib/docker and /var/lib/containers have the label container_var_lib_t . To view a full list of default, labels see the container.fc file. docker container run -it \\ -v /var/lib/docker/image/overlay2/repositories.json:/host/repositories.json \\ centos:7 cat /host/repositories.json # cat: /host/repositories.json: Permission denied docker container run -it \\ -v /etc/passwd:/host/etc/passwd \\ centos:7 cat /host/etc/passwd # cat: /host/etc/passwd: Permission denied Files labeled with container_file_t are the only files that are writable by containers. If you want a volume mount to be writeable, you will needed to specify :z or :Z at the end. :z will re-label the files so that the container can read/write :Z will re-label the files so that only the container can read/write ls -Z /var/lib/misc # -rw-r--r--. root root system_u:object_r:var_lib_t:s0 postfix.aliasesdb-stamp docker container run -it \\ -v /var/lib/misc:/host/var/lib/misc:z \\ centos:7 echo \"Relabeled!\" ls -Z /var/lib/misc #-rw-r--r--. root root system_u:object_r:container_file_t:s0 postfix.aliasesdb-stamp docker container run -it \\ -v /var/log:/host/var/log:Z \\ fluentbit:latest In Kubernetes, relabeling is slightly different. Rather than having Docker automatically relabel the files, you can specify a custom MCS label to run the pod. Volumes that support relabeling will automatically be relabeled so that they are accessible. Pods with a matching MCS label will be able to access the volume. If you need strict isolation, set a different MCS label for each pod. securityContext : seLinuxOptions : # Provide a unique MCS label per container # You can specify user, role, and type also # enforcement based on type and level (svert) level : s0:c144:c154 In this example s0:c144:c154 corresponds to an MCS label assigned to a file that the container is allowed to access. On EKS you could create policies that allow for privileged containers to run, like FluentD and create an SELinux policy to allow it to read from /var/log on the host without needing to relabel the host directory. Pods with the same label will be able to access the same host volumes. We have implemented sample AMIs for Amazon EKS that have SELinux configured on CentOS 7 and RHEL 7. These AMIs were developed to demonstrate sample implementations that meet requirements of highly regulated customers, such as STIG, CJIS, and C2S. Caution SELinux will ignore containers where the type is unconfined. Additional resources \u00b6 SELinux Kubernetes RBAC and Shipping Security Policies for On-prem Applications Iterative Hardening of Kubernetes Audit2Allow SEAlert Generate SELinux policies for containers with Udica describes a tool that looks at container spec files for Linux capabilities, ports, and mount points, and generates a set of SELinux rules that allow the container to run properly AMI Hardening playbooks for hardening the OS to meet different regulatory requirements Tools \u00b6 Keiko Upgrade Manager an open source project from Intuit that orchestrates the rotation of worker nodes. Sysdig Secure eksctl","title":"Infrastructure Security ({'name': 'English', 'build': True})"},{"location":"security/docs/hosts/#protecting-the-infrastructure-hosts","text":"Inasmuch as it's important to secure your container images, it's equally important to safeguard the infrastructure that runs them. This section explores different ways to mitigate risks from attacks launched directly against the host. These guidelines should be used in conjunction with those outlined in the Runtime Security section.","title":"Protecting the infrastructure (hosts)"},{"location":"security/docs/hosts/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/hosts/#use-an-os-optimized-for-running-containers","text":"Consider using Flatcar Linux, Project Atomic, RancherOS, and Bottlerocket , a special purpose OS from AWS designed for running Linux containers. It includes a reduced attack surface, a disk image that is verified on boot, and enforced permission boundaries using SELinux. Alternately, use the EKS optimized AMI for your Kubernetes worker nodes. The EKS optimized AMI is released regularly and contains a minimal set of OS packages and binaries necessary to run your containerized workloads.","title":"Use an OS optimized for running containers"},{"location":"security/docs/hosts/#keep-your-worker-node-os-updated","text":"Regardless of whether you use a container-optimized host OS like Bottlerocket or a larger, but still minimalist, Amazon Machine Image like the EKS optimized AMIs, it is best practice to keep these host OS images up to date with the latest security patches. For the EKS optimized AMIs, regularly check the CHANGELOG and/or release notes channel and automate the rollout of updated worker node images into your cluster.","title":"Keep your worker node OS updated"},{"location":"security/docs/hosts/#treat-your-infrastructure-as-immutable-and-automate-the-replacement-of-your-worker-nodes","text":"Rather than performing in-place upgrades, replace your workers when a new patch or update becomes available. This can be approached a couple of ways. You can either add instances to an existing autoscaling group using the latest AMI as you sequentially cordon and drain nodes until all of the nodes in the group have been replaced with the latest AMI. Alternatively, you can add instances to a new node group while you sequentially cordon and drain nodes from the old node group until all of the nodes have been replaced. EKS managed node groups uses the first approach and will display a message in the console to upgrade your workers when a new AMI becomes available. eksctl also has a mechanism for creating node groups with the latest AMI and for gracefully cordoning and draining pods from nodes groups before the instances are terminated. If you decide to use a different method for replacing your worker nodes, it is strongly recommended that you automate the process to minimize human oversight as you will likely need to replace workers regularly as new updates/patches are released and when the control plane is upgraded. With EKS Fargate, AWS will automatically update the underlying infrastructure as updates become available. Oftentimes this can be done seamlessly, but there may be times when an update will cause your pod to be rescheduled. Hence, we recommend that you create deployments with multiple replicas when running your application as a Fargate pod.","title":"Treat your infrastructure as immutable and automate the replacement of your worker nodes"},{"location":"security/docs/hosts/#periodically-run-kube-bench-to-verify-compliance-with-cis-benchmarks-for-kubernetes","text":"kube-bench is an open source project from Aqua that evaluates your cluster against the CIS benchmarks for Kubernetes. The benchmark describes the best practices for securing unmanaged Kubernetes clusters. The CIS Kubernetes Benchmark encompasses the control plane and the data plane. Since Amazon EKS provides a fully managed control plane, not all of the recommendations from the CIS Kubernetes Benchmark are applicable. To ensure this scope reflects how Amazon EKS is implemented, AWS created the CIS Amazon EKS Benchmark . The EKS benchmark inherits from CIS Kubernetes Benchmark with additional inputs from the community with specific configuration considerations for EKS clusters. When running kube-bench against an EKS cluster, follow these instructions from Aqua Security. For further information see Introducing The CIS Amazon EKS Benchmark .","title":"Periodically run kube-bench to verify compliance with CIS benchmarks for Kubernetes"},{"location":"security/docs/hosts/#minimize-access-to-worker-nodes","text":"Instead of enabling SSH access, use SSM Session Manager when you need to remote into a host. Unlike SSH keys which can be lost, copied, or shared, Session Manager allows you to control access to EC2 instances using IAM. Moreover, it provides an audit trail and log of the commands that were run on the instance. As of August 19th, 2020 Managed Node Groups support custom AMIs and EC2 Launch Templates. This allows you to embed the SSM agent into the AMI or install it as the worker node is being bootstrapped. If you rather not modify the Optimized AMI or the ASG's launch template, you can install the SSM agent with a DaemonSet as in this example, https://github.com/aws-samples/ssm-agent-daemonset-installer.","title":"Minimize access to worker nodes"},{"location":"security/docs/hosts/#minimal-iam-policy-for-ssm-based-ssh-access","text":"The AmazonSSMManagedInstanceCore AWS managed policy contains a number of permissions that are not required for SSM Session Manager / SSM RunCommand if you're just looking to avoid SSH access. Of concern specifically is the * permissions for ssm:GetParameter(s) which would allow for the role to access all parameters in Parameter Store (including SecureStrings with the AWS managed KMS key configured). The following IAM policy contains the minimal set of permissions to enable node access via SSM Systems Manager. { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"EnableAccessViaSSMSessionManager\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ssmmessages:OpenDataChannel\" , \"ssmmessages:OpenControlChannel\" , \"ssmmessages:CreateDataChannel\" , \"ssmmessages:CreateControlChannel\" , \"ssm:UpdateInstanceInformation\" ], \"Resource\" : \"*\" }, { \"Sid\" : \"EnableSSMRunCommand\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ssm:UpdateInstanceInformation\" , \"ec2messages:SendReply\" , \"ec2messages:GetMessages\" , \"ec2messages:GetEndpoint\" , \"ec2messages:FailMessage\" , \"ec2messages:DeleteMessage\" , \"ec2messages:AcknowledgeMessage\" ], \"Resource\" : \"*\" } ] } With this policy in place and the Session Manager plugin installed, you can then run aws ssm start-session --target [ INSTANCE_ID_OF_EKS_NODE ] to access the node. Note You may also want to consider adding permissions to enable Session Manager logging .","title":"Minimal IAM policy for SSM based SSH Access"},{"location":"security/docs/hosts/#deploy-workers-onto-private-subnets","text":"By deploying workers onto private subnets, you minimize their exposure to the Internet where attacks often originate. Beginning April 22, 2020, the assignment of public IP addresses to nodes in a managed node groups will be controlled by the subnet they are deployed onto. Prior to this, nodes in a Managed Node Group were automatically assigned a public IP. If you choose to deploy your worker nodes on to public subnets, implement restrictive AWS security group rules to limit their exposure.","title":"Deploy workers onto private subnets"},{"location":"security/docs/hosts/#run-amazon-inspector-to-assess-hosts-for-exposure-vulnerabilities-and-deviations-from-best-practices","text":"You can use Amazon Inspector to check for unintended network access to your nodes and for vulnerabilities on the underlying Amazon EC2 instances. Amazon Inspector can provide common vulnerabilities and exposures (CVE) data for your Amazon EC2 instances only if the Amazon EC2 Systems Manager (SSM) agent is installed and enabled. This agent is preinstalled on several Amazon Machine Images (AMIs) including EKS optimized Amazon Linux AMIs . Regardless of SSM agent status, all of your Amazon EC2 instances are scanned for network reachability issues. For more information about configuring scans for Amazon EC2, see Scanning Amazon EC2 instances . Attention Inspector cannot be run on the infrastructure used to run Fargate pods.","title":"Run Amazon Inspector to assess hosts for exposure, vulnerabilities, and deviations from best practices"},{"location":"security/docs/hosts/#alternatives","text":"","title":"Alternatives"},{"location":"security/docs/hosts/#run-selinux","text":"Info Available on Red Hat Enterprise Linux (RHEL), CentOS, and CoreOS SELinux provides an additional layer of security to keep containers isolated from each other and from the host. SELinux allows administrators to enforce mandatory access controls (MAC) for every user, application, process, and file. Think of it as a backstop that restricts the operations that can be performed against to specific resources based on a set of labels. On EKS, SELinux can be used to prevent containers from accessing each other's resources. Container SELinux policies are defined in the container-selinux package. Docker CE requires this package (along with its dependencies) so that the processes and files created by Docker (or other container runtimes) run with limited system access. Containers leverage the container_t label which is an alias to svirt_lxc_net_t . These policies effectively prevent containers from accessing certain features of the host. When you configure SELinux for Docker, Docker automatically labels workloads container_t as a type and gives each container a unique MCS level. This will isolate containers from one another. If you need looser restrictions, you can create your own profile in SElinux which grants a container permissions to specific areas of the file system. This is similar to PSPs in that you can create different profiles for different containers/pods. For example, you can have a profile for general workloads with a set of restrictive controls and another for things that require privileged access. SELinux for Containers has a set of options that can be configured to modify the default restrictions. The following SELinux Booleans can be enabled or disabled based on your needs: Boolean Default Description container_connect_any off Allow containers to access privileged ports on the host. For example, if you have a container that needs to map ports to 443 or 80 on the host. container_manage_cgroup off Allow containers to manage cgroup configuration. For example, a container running systemd will need this to be enabled. container_use_cephfs off Allow containers to use a ceph file system. By default, containers are allowed to read/execute under /usr and read most content from /etc . The files under /var/lib/docker and /var/lib/containers have the label container_var_lib_t . To view a full list of default, labels see the container.fc file. docker container run -it \\ -v /var/lib/docker/image/overlay2/repositories.json:/host/repositories.json \\ centos:7 cat /host/repositories.json # cat: /host/repositories.json: Permission denied docker container run -it \\ -v /etc/passwd:/host/etc/passwd \\ centos:7 cat /host/etc/passwd # cat: /host/etc/passwd: Permission denied Files labeled with container_file_t are the only files that are writable by containers. If you want a volume mount to be writeable, you will needed to specify :z or :Z at the end. :z will re-label the files so that the container can read/write :Z will re-label the files so that only the container can read/write ls -Z /var/lib/misc # -rw-r--r--. root root system_u:object_r:var_lib_t:s0 postfix.aliasesdb-stamp docker container run -it \\ -v /var/lib/misc:/host/var/lib/misc:z \\ centos:7 echo \"Relabeled!\" ls -Z /var/lib/misc #-rw-r--r--. root root system_u:object_r:container_file_t:s0 postfix.aliasesdb-stamp docker container run -it \\ -v /var/log:/host/var/log:Z \\ fluentbit:latest In Kubernetes, relabeling is slightly different. Rather than having Docker automatically relabel the files, you can specify a custom MCS label to run the pod. Volumes that support relabeling will automatically be relabeled so that they are accessible. Pods with a matching MCS label will be able to access the volume. If you need strict isolation, set a different MCS label for each pod. securityContext : seLinuxOptions : # Provide a unique MCS label per container # You can specify user, role, and type also # enforcement based on type and level (svert) level : s0:c144:c154 In this example s0:c144:c154 corresponds to an MCS label assigned to a file that the container is allowed to access. On EKS you could create policies that allow for privileged containers to run, like FluentD and create an SELinux policy to allow it to read from /var/log on the host without needing to relabel the host directory. Pods with the same label will be able to access the same host volumes. We have implemented sample AMIs for Amazon EKS that have SELinux configured on CentOS 7 and RHEL 7. These AMIs were developed to demonstrate sample implementations that meet requirements of highly regulated customers, such as STIG, CJIS, and C2S. Caution SELinux will ignore containers where the type is unconfined.","title":"Run SELinux"},{"location":"security/docs/hosts/#additional-resources","text":"SELinux Kubernetes RBAC and Shipping Security Policies for On-prem Applications Iterative Hardening of Kubernetes Audit2Allow SEAlert Generate SELinux policies for containers with Udica describes a tool that looks at container spec files for Linux capabilities, ports, and mount points, and generates a set of SELinux rules that allow the container to run properly AMI Hardening playbooks for hardening the OS to meet different regulatory requirements","title":"Additional resources"},{"location":"security/docs/hosts/#tools","text":"Keiko Upgrade Manager an open source project from Intuit that orchestrates the rotation of worker nodes. Sysdig Secure eksctl","title":"Tools"},{"location":"security/docs/iam.kr/","text":"{'name': 'English', 'build': True} ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac \u00b6 ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac (IAM)\ub294 \uc778\uc99d \ubc0f \uad8c\ud55c \ubd80\uc5ec\ub77c\ub294 \ub450 \uac00\uc9c0 \ud544\uc218 \uae30\ub2a5\uc744 \uc218\ud589\ud558\ub294 AWS \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \uc778\uc99d\uc5d0\ub294 \uc790\uaca9 \uc99d\uba85 \ud655\uc778\uc774 \ud3ec\ud568\ub418\ub294 \ubc18\uba74 \uad8c\ud55c \ubd80\uc5ec\ub294 AWS \ub9ac\uc18c\uc2a4\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4. AWS \ub0b4\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub294 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4(\uc608: EC2) \ub610\ub294 AWS principal \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ) IAM \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560 . \ub9ac\uc18c\uc2a4\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uad00\ub9ac\ud558\ub294 \uaddc\uce59\uc740 IAM \uc815\ucc45 \uc73c\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\uc5b4 \u00b6 Kubernetes \ud504\ub85c\uc81d\ud2b8\ub294 Bearer \ud1a0\ud070, X.509 \uc778\uc99d\uc11c, OIDC \ub4f1 kube-apiserver \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc778\uc99d\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \uc804\ub7b5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. EKS\ub294 \ud604\uc7ac webhook \ud1a0\ud070 \uc778\uc99d , \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \ubc0f 2021\ub144 2\uc6d4 21\uc77c \ud604\uc7ac OIDC \uc778\uc99d. \uc6f9\ud6c4\ud06c \uc778\uc99d \uc804\ub7b5\uc740 \ubca0\uc5b4\ub7ec \ud1a0\ud070\uc744 \ud655\uc778\ud558\ub294 \uc6f9\ud6c4\ud06c\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. EKS\uc5d0\uc11c \uc774\ub7ec\ud55c \uc804\ub2ec\uc790 \ud1a0\ud070\uc740 kubectl \uba85\ub839 \uc744 \uc2e4\ud589\ud560 \ub54c AWS CLI \ub610\ub294 aws-iam-authenticator \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc758\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uba85\ub839\uc744 \uc2e4\ud589\ud558\uba74 \ud1a0\ud070\uc774 \uc778\uc99d \uc6f9\ud6c5\uc73c\ub85c \uc804\ub2ec\ub418\ub294 kube-apiserver\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc62c\ubc14\ub978 \ud615\uc2dd\uc774\uba74 \uc6f9\ud6c4\ud06c\ub294 \ud1a0\ud070 \ubcf8\ubb38\uc5d0 \ud3ec\ud568\ub41c \ubbf8\ub9ac \uc11c\uba85\ub41c URL\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc774 URL\uc740 \uc694\uccad \uc11c\uba85\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uace0 \uc0ac\uc6a9\uc790 \uacc4\uc815, Arn \ubc0f UserId\uc640 \uac19\uc740 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c kube-apiserver\uc5d0 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc778\uc99d \ud1a0\ud070\uc744 \uc218\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub824\uba74 \ud130\ubbf8\ub110 \ucc3d\uc5d0 \ub2e4\uc74c \uba85\ub839\uc744 \uc785\ub825\ud569\ub2c8\ub2e4. aws eks get-token --cluster <\ud074\ub7ec\uc2a4\ud130_\uc774\ub984> \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc73c\ub85c \ud1a0\ud070\uc744 \uc5bb\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 Go\ub85c \uc791\uc131\ub41c \uc608\uc785\ub2c8\ub2e4. \ud328\ud0a4\uc9c0 \uba54\uc778 \uac00\uc838\uc624\uae30 ( \"fmt\" \"\ud1b5\ub098\ubb34\" \"sigs.k8s.io/aws-iam-authenticator/pkg/token\" ) \uae30\ub2a5 \uba54\uc778 () { g , _ := \ud1a0\ud070. NewGenerator ( \uac70\uc9d3 , \uac70\uc9d3 ) tk , \uc624\ub958 := g. \uac00\uc838 \uc624\uae30 ( \"<cluster_name>\" ) \uc624\ub958 \uac00 \uc788\ub294 \uacbd\uc6b0 != nil { \ud1b5\ub098\ubb34. \uce58\uba85\uc801 (\uc624\ub958) } fmt. Println (tk) } \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uc720\uc0ac\ud574\uc57c \ud569\ub2c8\ub2e4. { \"\uc885\ub958\" : \"ExecCredential\" , \"apiVersion\" : \"client.authentication.k8s.io/v1alpha1\" , \"\uc0ac\uc591\" : {}, \"\uc0c1\ud0dc\" : { \"expirationTimestamp\" : \"2020-02-19T16:08:27Z\" , \"token\" : \"k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFKTkdSSUxLTlNSQzJXNVFBJTJGMjAyMDAyMTklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIwMDIxOVQxNTU0MjdaJlgtQW16LUV4cGlyZXM9NjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yMjBmOGYzNTg1ZTMyMGRkYjVlNjgzYTVjOWE0MDUzMDFhZDc2NTQ2ZjI0ZjI4MTExZmRhZDA5Y2Y2NDhhMzkz\" } } \uac01 \ud1a0\ud070\uc740 k8s-aws-v1. \uc73c\ub85c \uc2dc\uc791\ud558\uace0 base64\ub85c \uc778\ucf54\ub529\ub41c \ubb38\uc790\uc5f4\uc774 \ub4a4\ub530\ub985\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc740 \ub514\ucf54\ub529\ub420 \ub54c \ub2e4\uc74c\uacfc \uc720\uc0ac\ud574\uc57c \ud569\ub2c8\ub2e4. https://sts.amazonaws.com/?Action=GetCallerIdentity&Version=2011-06-15&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJPFRILKNSRC2W5QA%2F20200219%2Fus-east-1%2Fsts%2Faws4_request&X-Amz -\ub0a0\uc9dc=20200219T155427Z&X-Amz-Expires=60&X-Amz-SignedHeaders=host%3Bx-k8s-aws-id&X-Amz-Signature=220f8f3285e320ddb5e683a5c9a405301ad76546f24f28111fdad03936 \ud1a0\ud070\uc740 Amazon \uc790\uaca9 \uc99d\uba85 \ubc0f \uc11c\uba85\uc774 \ud3ec\ud568\ub41c \ubbf8\ub9ac \uc11c\uba85\ub41c URL\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ud1a0\ud070\uc5d0\ub294 15\ubd84\uc758 \uc218\uba85(TTL)\uc774 \uc788\uc73c\uba70 \uadf8 \ud6c4\uc5d0\ub294 \uc0c8 \ud1a0\ud070\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 kubectl \uacfc \uac19\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac \ub418\uc9c0\ub9cc Kubernetes \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud1a0\ud070\uc774 \ub9cc\ub8cc\ub420 \ub54c\ub9c8\ub2e4 \uc0c8 \ud1a0\ud070\uc744 \uc0dd\uc131\ud558\uace0 \ub2e4\uc2dc \uc778\uc99d\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 ID\uac00 AWS IAM \uc11c\ube44\uc2a4\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uba74 kube-apiserver \ub294 'kube-system' \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c 'aws-auth' ConfigMap\uc744 \uc77d\uc5b4 \uc0ac\uc6a9\uc790\uc640 \uc5f0\uacb0\ud560 RBAC \uadf8\ub8f9\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. aws-auth ConfigMap \uc740 IAM \ubcf4\uc548 \uc8fc\uccb4(\uc608: IAM \uc0ac\uc6a9\uc790 \ubc0f \uc5ed\ud560)\uc640 Kubernetes RBAC \uadf8\ub8f9 \uac04\uc758 \uc815\uc801 \ub9e4\ud551\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. RBAC \uadf8\ub8f9\uc740 Kubernetes RoleBindings \ub610\ub294 ClusterRoleBindings\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub9ac\uc18c\uc2a4(\uac1d\uccb4) \ubaa8\uc74c\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \uc791\uc5c5(\ub3d9\uc0ac)\uc744 \uc815\uc758\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c IAM \uc5ed\ud560\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 \uc778\uc99d\uc5d0 \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694. \u00b6 \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc740 \uc218\uba85\uc774 \uae34 \uc815\uc801 \uc0ac\uc6a9\uc790 \uc778\uc99d \uc815\ubcf4\uc785\ub2c8\ub2e4. \uc190\uc0c1, \ubd84\uc2e4 \ub610\ub294 \ub3c4\ub09c\ub41c \uacbd\uc6b0 \uacf5\uaca9\uc790\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc0ad\uc81c\ub420 \ub54c\uae4c\uc9c0 \ud574\ub2f9 \ud1a0\ud070\uacfc \uad00\ub828\ub41c \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c Kubernetes API\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158(\uc608: CI/CD \ud30c\uc774\ud504\ub77c\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158)\uc5d0 \ub300\ud55c \uc608\uc678\ub97c \ubd80\uc5ec\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 EC2 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 AWS \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\uace0 \uc774\ub97c 'aws-auth' ConfigMap\uc758 Kubernetes RBAC \uc5ed\ud560\uc5d0 \ub9e4\ud551\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc0ac\uc6a9 \u00b6 Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud558\uae30 \uc704\ud574 IAM \uc0ac\uc6a9\uc790\uc5d0\uac8c AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uad8c\ud55c\uc744 \ud560\ub2f9\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. IAM \uc0ac\uc6a9\uc790\uc5d0\uac8c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ud2b9\uc815 Kubernetes RBAC \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ub418\ub294 \ud574\ub2f9 \uc0ac\uc6a9\uc790 \uc758 'aws-auth' ConfigMap\uc5d0 \ud56d\ubaa9\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc5ec\ub7ec \uc0ac\uc6a9\uc790\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 IAM \uc5ed\ud560 \uc0ac\uc6a9 \u00b6 'aws-auth' ConfigMap \uc5d0\uc11c \uac01 \uac1c\ubcc4 IAM \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud56d\ubaa9\uc744 \uc0dd\uc131\ud558\ub294 \ub300\uc2e0 \ud574\ub2f9 \uc0ac\uc6a9\uc790\uac00 IAM \uc5ed\ud560\uc744 \uc218\uc784\ud558\uace0 \ud574\ub2f9 \uc5ed\ud560\uc744 Kubernetes RBAC \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud2b9\ud788 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uc0ac\uc6a9\uc790 \uc218\uac00 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \uc720\uc9c0 \uad00\ub9ac\uac00 \ub354 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4. \uc8fc\ubaa9 aws-auth ConfigMap\uc5d0 \uc758\ud574 \ub9e4\ud551\ub41c IAM \uc5d4\ud130\ud2f0\ub85c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \ub54c aws-auth ConfigMap\uc5d0 \uc124\uba85\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc758 \uc0ac\uc6a9\uc790 \ud544\ub4dc\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc5ed\ud560\uc744 \ub9e1\ub294 \uc2e4\uc81c \uc0ac\uc6a9\uc790\ub294 \uae30\ub85d\ub418\uc9c0 \uc54a\uc73c\uba70 \uac10\uc0ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. aws-auth ConfigMap\uc5d0\uc11c mapRoles\ub97c \uc0ac\uc6a9\ud558\uc5ec K8s RBAC \uad8c\ud55c\uc744 IAM \uc5ed\ud560\uc5d0 \ud560\ub2f9\ud560 \ub54c \uc0ac\uc6a9\uc790 \uc774\ub984\uc5d0 {{SessionName}}\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uac10\uc0ac \ub85c\uadf8\uc5d0 \uc138\uc158 \uc774\ub984\uc774 \uae30\ub85d\ub418\ubbc0\ub85c CloudTrail \ub85c\uadf8\uc640 \ud568\uaed8 \uc774 \uc5ed\ud560\uc744 \ub9e1\uc740 \uc2e4\uc81c \uc0ac\uc6a9\uc790\ub97c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. - rolearn : arn:aws:iam::XXXXXXXXXXXX:\uc5ed\ud560/\ud14c\uc2a4\ud2b8\uc5ed\ud560 \uc0ac\uc6a9\uc790 \uc774\ub984 : testRole:{{\uc138\uc158 \uc774\ub984}} \uadf8\ub8f9 : - \uc2dc\uc2a4\ud15c:\ub9c8\uc2a4\ud130 user.extra.sessionName.0 \uc774 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0 \ucd94\uac00 \ub418\uc5c8\uc73c\ubbc0\ub85c \uc774 \ubcc0\uacbd\uc774 \ub354 \uc774\uc0c1 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . RoleBinding \ubc0f ClusterRoleBinding \uc0dd\uc131 \uc2dc \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc0ac\uc6a9 \u00b6 AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c \ubd80\uc5ec\uc5d0 \ub300\ud55c \uc774\uc804 \ud56d\ubaa9\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c RoleBindings \ubc0f ClusterRoleBindings\uc5d0\ub294 \ud2b9\uc815 \uae30\ub2a5\uc744 \uc218\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \uad8c\ud55c \uc9d1\ud569\ub9cc \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc808\ub300\uc801\uc73c\ub85c \ud544\uc694\ud55c \uacbd\uc6b0\uac00 \uc544\ub2c8\uba74 \uc5ed\ud560 \ubc0f ClusterRole\uc5d0\uc11c [\"*\"] \ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624 . \ud560\ub2f9\ud560 \uad8c\ud55c\uc774 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 audit2rbac \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0\uc11c \uad00\ucc30\ub41c API \ud638\ucd9c\uc744 \uae30\ubc18\uc73c\ub85c \uc5ed\ud560 \ubc0f \ubc14\uc778\ub529\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ube44\uacf5\uac1c\ub85c \uc124\uc815 \u00b6 \uae30\ubcf8\uc801\uc73c\ub85c EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c API \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uacf5\uac1c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc989, \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ubaa8\ub4e0 API \uc694\uccad\uc774 IAM\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uace0 Kubernetes RBAC\uc5d0 \uc758\ud574 \uc2b9\uc778\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc5ec\uc804\ud788 \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uc989, \ud68c\uc0ac \ubcf4\uc548 \uc815\ucc45\uc5d0 \ub530\ub77c \uc778\ud130\ub137\uc5d0\uc11c API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 VPC \uc678\ubd80\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ube44\uacf5\uac1c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9 \uc740 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc218\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810\uc744 \uacf5\uc6a9\uc73c\ub85c \ub450\uace0 \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc788\ub294 CIDR \ube14\ub85d\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \ube14\ub85d\uc740 \uc0ac\uc2e4\uc0c1 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud5c8\uc6a9 \ubaa9\ub85d\uc5d0 \uc788\ub294 \ud37c\ube14\ub9ad IP \uc8fc\uc18c \uc9d1\ud569\uc785\ub2c8\ub2e4. \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8 CIDR \ube14\ub85d \uc138\ud2b8\ub85c \uacf5\uac1c \uc561\uc138\uc2a4\ub97c \uad6c\uc131\ud558\uace0 \uac1c\uc778 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \ud504\ub85c\ube44\uc800\ub2dd\ub420 \ub54c \ud074\ub7ec\uc2a4\ud130 VPC\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub418\ub294 \uad50\ucc28 \uacc4\uc815 ENI\ub97c \ud1b5\ud574 kubelet(\uc791\uc5c5\uc790)\uacfc Kubernetes API \uc0ac\uc774\uc758 \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uac15\uc81c\ud558\ub294 \ub3d9\uc2dc\uc5d0 \ud2b9\uc815 \ud37c\ube14\ub9ad IP \ubc94\uc704\uc758 \ud37c\ube14\ub9ad \uc561\uc138\uc2a4\uac00 \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uc804\uc6a9 IAM \uc5ed\ud560\ub85c \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 \u00b6 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uc5f0\ub3d9 \uc0ac\uc6a9\uc790\uc640 \uac19\uc740 IAM \uc5d4\ud130\ud2f0 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc758 RBAC \uad6c\uc131\uc5d0\uc11c 'system:masters' \uad8c\ud55c\uc774 \uc790\ub3d9\uc73c\ub85c \ubd80\uc5ec\ub429\ub2c8\ub2e4. \uc774 \uc561\uc138\uc2a4\ub294 \uc81c\uac70\ud560 \uc218 \uc5c6\uc73c\uba70 aws-auth ConfigMap\uc744 \ud1b5\ud574 \uad00\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc804\uc6a9 IAM \uc5ed\ud560\ub85c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \uc774 \uc5ed\ud560\uc744 \ub9e1\uc744 \uc218 \uc788\ub294 \uc0ac\ub78c\uc744 \uc815\uae30\uc801\uc73c\ub85c \uac10\uc0ac\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc5ed\ud560\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc77c\uc0c1\uc801\uc778 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uc5b4\uc11c\ub294 \uc548 \ub418\uba70, \ub300\uc2e0 \uc774\ub7ec\ud55c \ubaa9\uc801\uc744 \uc704\ud574 'aws-auth' ConfigMap\uc744 \ud1b5\ud574 \ucd94\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud574\uc57c \ud569\ub2c8\ub2e4. 'aws-auth' ConfigMap\uc774 \uad6c\uc131\ub41c \ud6c4\uc5d0 \ub294 \uc5ed\ud560\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc73c\uba70 'aws-auth' ConfigMap\uc774 \uc190\uc0c1\ub418\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\ub294 \uae34\uae09/\uc720\ub9ac \ud30c\uc190 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub9cc \ub2e4\uc2dc \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc9c1\uc811 \uc0ac\uc6a9\uc790 \uc561\uc138\uc2a4\uac00 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec aws-auth ConfigMap \ubcc0\uacbd \u00b6 \uc798\ubabb\ub41c \ud615\uc2dd\uc758 aws-auth ConfigMap\uc73c\ub85c \uc778\ud574 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc783\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ConfigMap\uc744 \ubcc0\uacbd\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. eksctl eksctl CLI\uc5d0\ub294 aws-auth\uc5d0 ID \ub9e4\ud551\uc744 \ucd94\uac00\ud558\uae30 \uc704\ud55c \uba85\ub839\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4 . \ucee8\ud53c\uadf8\ub9f5. CLI \ub3c4\uc6c0\ub9d0 \ubcf4\uae30: eksctl create iamidentitymapping --help IAM \uc5ed\ud560\uc744 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\ub85c \uc9c0\uc815: eksctl create iamidentitymapping --cluster <\ud074\ub7ec\uc2a4\ud130 \uc774\ub984> --region=<\uc9c0\uc5ed> --arn arn:aws:iam::123456:role/testing --group system:masters --username admin \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 eksctl \ubb38\uc11c \ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. aws-auth by keikoproj keikoproj\uc758 'aws-auth' \uc5d0\ub294 cli \ubc0f go \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \ubaa8\ub450 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub3c4\uc6c0\ub9d0 CLI \ub3c4\uc6c0\ub9d0 \ub2e4\uc6b4\ub85c\ub4dc \ubc0f \ubcf4\uae30: github.com/keikoproj/aws-auth\ub85c \uc774\ub3d9 aws-auth \ub3c4\uc6c0\ub9d0 \ub610\ub294 kubectl\uc6a9 krew \ud50c\ub7ec\uadf8\uc778 \uad00\ub9ac\uc790 \ub85c aws-auth \ub97c \uc124\uce58 \ud569\ub2c8\ub2e4. kubectl krew \uc124\uce58 aws-auth kubectl aws \uc778\uc99d GitHub\uc758 aws-auth \ubb38\uc11c \uac80\ud1a0 \uc5d0\uc11c go \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ube44\ub86f\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. AWS IAM \uc778\uc99d\uc790 CLI aws-iam-authenticator \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 ConfigMap\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc704\ud55c CLI\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9b4\ub9ac\uc2a4 \ub2e4\uc6b4\ub85c\ub4dc GitHub\uc5d0\uc11c. IAM \uc5ed\ud560\uc5d0 \ud074\ub7ec\uc2a4\ud130 \uad8c\ud55c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. ./aws-iam-authenticator \uc5ed\ud560 \ucd94\uac00 --rolearn arn:aws:iam::185309785115:role/lil-dev-role-cluster --username lil-dev-user --groups system:masters --kubeconfig ~/. \ud050\ube0c/\uad6c\uc131 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc815\uae30\uc801\uc73c\ub85c \uac10\uc0ac\ud569\ub2c8\ub2e4. \u00b6 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uc0ac\ub78c\uc740 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uae30\uc801\uc73c\ub85c aws-auth ConfigMap\uc744 \uac10\uc0ac\ud558\uc5ec \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub41c \uc0ac\ub78c\uacfc \ud560\ub2f9\ub41c \uad8c\ud55c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. kubectl-who-can \ub610\ub294 rbac-lookup \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815, \uc0ac\uc6a9\uc790 \ub610\ub294 \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub529\ub41c \uc5ed\ud560\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. \uac10\uc0ac \uc139\uc158\uc5d0\uc11c \uc774 \uc8fc\uc81c\ub97c \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4 . \ucd94\uac00 \uc544\uc774\ub514\uc5b4\ub294 \uc774 \uae30\uc0ac from NCC Group. \uc778\uc99d \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac\uc5d0 \ub300\ud55c \ub300\uccb4 \uc811\uadfc \ubc29\uc2dd \u00b6 \uac00\uc7a5 ]( https://kubernetes.io/docs/reference \ub97c \uc0ac\uc6a9\ud558\uc5ec GitHub\uc640 \uac19\uc740 OIDC \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. /access-authn-authz/authentication/#user-impersonation ). \uc774\ub7ec\ud55c \ub450 \uac00\uc9c0 \uc194\ub8e8\uc158\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uc774 AWS \uc624\ud508 \uc18c\uc2a4 \ube14\ub85c\uadf8\uc5d0 \uac8c\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Teleport\uc640 \ud568\uaed8 GitHub \uc790\uaca9 \uc99d\uba85\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS\uc5d0 \uc778\uc99d kube-oidc-proxy\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc77c\uad00\ub41c OIDC \uc778\uc99d \uc8fc\ubaa9 EKS\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud504\ub85d\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 OIDC \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucd9c\uc2dc \ube14\ub85c\uadf8 Amazon EKS\uc5d0 \ub300\ud55c OIDC \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790 \uc778\uc99d \uc18c\uac1c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ub2e4\uc591\ud55c \uc778\uc99d \ubc29\ubc95\uc5d0 \ub300\ud55c \ucee4\ub125\ud130\uac00 \uc788\ub294 \uc778\uae30 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 OIDC \uacf5\uae09\uc790\uc778 Dex\ub85c EKS\ub97c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\ub294 Dex \ubc0f dex-k8s-authenticator\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon EKS \uc778\uc99d . \ube14\ub85c\uadf8\uc5d0 \uc124\uba85\ub41c \ub300\ub85c OIDC \uacf5\uae09\uc790\uac00 \uc778\uc99d\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984/\uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc740 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \ub610\ud55c AWS SSO \ub97c \uc0ac\uc6a9\ud558\uc5ec Azure AD\uc640 \uac19\uc740 \uc678\ubd80 \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790\uc640 AWS\ub97c \uc5f0\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc815\ud55c \uacbd\uc6b0 AWS CLI v2.0\uc5d0\ub294 SSO \uc138\uc158\uc744 \ud604\uc7ac CLI \uc138\uc158\uacfc \uc27d\uac8c \uc5f0\uacb0\ud558\uace0 IAM \uc5ed\ud560\uc744 \uc218\uc784\ud560 \uc218 \uc788\ub294 \uba85\uba85\ub41c \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud558\ub294 \uc635\uc158\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uc758 Kubernetes RBAC \uadf8\ub8f9\uc744 \uacb0\uc815\ud558\ub294 \ub370 IAM \uc5ed\ud560\uc774 \uc0ac\uc6a9\ub418\ubbc0\ub85c kubectl \uc744 \uc2e4\ud589\ud558\uae30 \uc6b0\uc120 \uc5ed\ud560\uc744 \ub9e1\uc544\uc57c \ud569\ub2c8\ub2e4. \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 rbac.dev Kubernetes RBAC\uc5d0 \ub300\ud55c \ube14\ub85c\uadf8 \ubc0f \ub3c4\uad6c\ub97c \ud3ec\ud568\ud55c \ucd94\uac00 \ub9ac\uc18c\uc2a4 \ubaa9\ub85d \ud3ec\ub4dc ID \u00b6 Kubernetes \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uae30 \uc704\ud574 Kubernetes API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ub294 \uc11c\ube44\uc2a4\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub098\uc5f4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ucee8\ud2b8\ub864\ub7ec\ub294 ALB\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uace0 \uad6c\uc131\ud558\uae30 \uc704\ud574 AWS API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 Pod\uc5d0 \uad8c\ud55c\uc744 \ud560\ub2f9\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc0b4\ud3b4\ubd05\ub2c8\ub2e4. Kubernetes \uc11c\ube44\uc2a4 \uacc4\uc815 \u00b6 \uc11c\ube44\uc2a4 \uacc4\uc815\uc740 Pod\uc5d0 Kubernetes RBAC \uc5ed\ud560\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ud2b9\uc218\ud55c \uc720\ud615\uc758 \uac1c\uccb4\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud574 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ucc38\uc870\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub4dc\ub97c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ud558\uba74 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \ud3ec\ub4dc\uc5d0 \ud560\ub2f9\ub418\uace0 \uc2dc\ud06c\ub9bf, \uc989 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc11c\ube44\uc2a4 \uacc4\uc815(JWT) \ud1a0\ud070\uc774 \ub9c8\uc6b4\ud2b8\ub429\ub2c8\ub2e4. /var/run/secrets/kubernetes.io/serviceaccount \uc758 \ubcfc\ub968\uc73c\ub85c\uc11c \ud3ec\ub4dc . \ud574\ub2f9 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \ub514\ucf54\ub529\ud558\uba74 \ub2e4\uc74c \uba54\ud0c0\ub370\uc774\ud130\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. { \"iss\" : \"kubernetes/serviceaccount\" , \"kubernetes.io/serviceaccount/namespace\" : \"\uae30\ubcf8\" , \"kubernetes.io/serviceaccount/secret.name\" : \"default-token-5pv4z\" , \"kubernetes.io/serviceaccount/service-account.name\" : \"\uae30\ubcf8\" , \"kubernetes.io/serviceaccount/service-account.uid\" : \"3b36ddb5-438c-11ea-9438-063a49b60fba\" , \"\ud558\uc704\" : \"\uc2dc\uc2a4\ud15c:\uc11c\ube44\uc2a4 \uacc4\uc815:\uae30\ubcf8:\uae30\ubcf8\" } \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0\ub294 Kubernetes API\uc5d0 \ub300\ud55c \ub2e4\uc74c \uad8c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : ClusterRole \uba54\ud0c0\ub370\uc774\ud130 : \uc8fc\uc11d : rbac.authorization.kubernetes.io/autoupdate : \"\ucc38\" creationTimestamp : \"2020-01-30T18:13:25Z\" \ub77c\ubca8 : kubernetes.io/bootstrapping : rbac-defaults \uc774\ub984 : \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \ub9ac\uc18c\uc2a4 \ubc84\uc804 : \"43\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery UID : 350d2ab8-438c-11ea-9438-063a49b60fba \uaddc\uce59 : - nonResourceURLs : - /api - /api/* - /apis - /apis/* - /healthz - /openapi - /openapi/* - /\ubc84\uc804 - /\ubc84\uc804/ \ub3d9\uc0ac : - \uc5bb\ub2e4 \uc774 \uc5ed\ud560\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc640 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\uac00 API \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uba70 \uacf5\uac1c\uc801\uc73c\ub85c \uc561\uc138\uc2a4\ud574\ub3c4 \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. Pod \ub0b4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 Kubernetes API\ub97c \ud638\ucd9c\ud560 \ub54c \ud574\ub2f9 API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ubd80\uc5ec\ud558\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 Pod\uc5d0 \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc561\uc138\uc2a4\uc5d0 \ub300\ud55c \uc9c0\uce68\uacfc \uc720\uc0ac\ud558\uac8c \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ubc14\uc778\ub529\ub41c Role \ub610\ub294 ClusterRole\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c API \ub9ac\uc18c\uc2a4 \ubc0f \uba54\uc11c\ub4dc\ub85c \uc81c\ud55c\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc774 \uc544\ub2cc \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ud3ec\ub4dc\uc758 spec.serviceAccountName \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub824\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uc73c\ub85c \uc124\uc815\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0dd\uc131\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions . \ub178\ud2b8 Kubernetes 1.24 \uc774\uc804\uc5d0\ub294 Kubernetes\uac00 \uac01 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ub300\ud55c \uc554\ud638\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ud06c\ub9bf\uc740 /var/run/secrets/kubernetes.io/serviceaccount\uc758 \ud31f(Pod)\uc5d0 \ub9c8\uc6b4\ud2b8\ub418\uc5c8\uc73c\uba70 \ud31f(Pod)\uc5d0\uc11c Kubernetes API \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Kubernetes 1.24\uc5d0\uc11c\ub294 \ud3ec\ub4dc\uac00 \uc2e4\ud589\ub420 \ub54c \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc774 \ub3d9\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 1\uc2dc\uac04 \ub3d9\uc548\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \ube44\ubc00\uc740 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Jenkins\uc640 \uac19\uc774 Kubernetes API\uc5d0 \uc778\uc99d\ud574\uc57c \ud558\ub294 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \ub97c \ucc38\uc870\ud558\ub294 \uc8fc\uc11d\uacfc \ud568\uaed8 kubernetes.io/service-account-token \uc720\ud615\uc758 \uc2dc\ud06c\ub9bf\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. metadata.annotations.kubernetes.io/service-account.name: <SERVICE_ACCOUNT_NAME> \uacfc \uac19\uc740 \uacc4\uc815 . \uc774 \ubc29\ubc95\uc73c\ub85c \uc0dd\uc131\ub41c \ube44\ubc00\uc740 \ub9cc\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 IAM \uc5ed\ud560(IRSA) \u00b6 IRSA\ub294 Kubernetes \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 IAM \uc5ed\ud560\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \ubcfc\ub968 \ud504\ub85c\uc81d\uc158 . \ud3ec\ub4dc\uac00 IAM \uc5ed\ud560\uc744 \ucc38\uc870\ud558\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 Kubernetes API \uc11c\ubc84\ub294 \uc2dc\uc791 \uc2dc \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uacf5\uac1c OIDC \uac80\uc0c9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \ub05d\uc810\uc740 Kubernetes\uc5d0\uc11c \ubc1c\uae09\ud55c OIDC \ud1a0\ud070\uacfc \ubcfc\ub968\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub41c \uacb0\uacfc \ud1a0\ud070\uc5d0 \uc554\ud638\ud654 \uc11c\uba85\ud569\ub2c8\ub2e4. \uc774 \uc11c\uba85\ub41c \ud1a0\ud070\uc744 \ud1b5\ud574 \ud3ec\ub4dc\ub294 IAM \uc5ed\ud560\uacfc \uc5f0\uacb0\ub41c AWS API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS API\uac00 \ud638\ucd9c\ub418\uba74 AWS SDK\ub294 sts:AssumeRoleWithWebIdentity \ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4 . \ud1a0\ud070\uc758 \uc11c\uba85\uc744 \ud655\uc778\ud55c \ud6c4 IAM\uc740 Kubernetes\uc5d0\uc11c \ubc1c\ud589\ud55c \ud1a0\ud070\uc744 \uc784\uc2dc AWS \uc5ed\ud560 \uc790\uaca9 \uc99d\uba85\uc73c\ub85c \uad50\ud658\ud569\ub2c8\ub2e4. IRSA\uc5d0 \ub300\ud55c (JWT) \ud1a0\ud070\uc744 \ub514\ucf54\ub529\ud558\uba74 \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c \uc608\uc640 \uc720\uc0ac\ud55c \ucd9c\ub825\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. { \"\uc624\ub514\" : [ \"sts.amazonaws.com\" ], \"exp\" : 1582306514 , \"iat\" : 1582220114 , \"iss\" : \"https://oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"kubernetes.io\" : { \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\" : \"\uae30\ubcf8\uac12\" , \"\ud3ec\ub4dc\" : { \"\uc774\ub984\" : \"alpine-57b5664646-rf966\" , \"uid\" : \"5a20f883-5407-11ea-a85c-0e62b7a4a436\" }, \"\uc11c\ube44\uc2a4 \uacc4\uc815\" : { \"\uc774\ub984\" : \"s3 \uc77d\uae30 \uc804\uc6a9\" , \"uid\" : \"a720ba5c-5406-11ea-9438-063a49b60fba\" } }, \"nbf\" : 1582220114 , \"sub\" : \"system:serviceaccount:default:s3-\uc77d\uae30 \uc804\uc6a9\" } \uc774 \ud2b9\uc815 \ud1a0\ud070\uc740 \ud3ec\ub4dc \ubcf4\uae30 \uc804\uc6a9 \uad8c\ud55c\uc744 S3\uc5d0 \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 S3\uc5d0\uc11c \uc77d\uae30\ub97c \uc2dc\ub3c4\ud558\uba74 \ud1a0\ud070\uc774 \ub2e4\uc74c\uacfc \uc720\uc0ac\ud55c \uc784\uc2dc IAM \uc790\uaca9 \uc99d\uba85 \uc138\ud2b8\ub85c \uad50\ud658\ub429\ub2c8\ub2e4. { \"AssumedRoleUser\" : { \"AssumedRoleId\" : \"AROA36C6WWEJULFUYMPB6:abc\" , \"Arn\" : \"arn:aws:sts::123456789012:assumed-role/eksctl-winterfell-addon-iamserviceaccount-de-Role1-1D61LT75JH3MB/abc\" }, \"\ub300\uc0c1\" : \"sts.amazonaws.com\" , \"\uacf5\uae09\uc790\" : \"arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"SubjectFromWebIdentityToken\" : \"system:serviceaccount:default:s3-read-only\" , \"\uc790\uaca9 \uc99d\uba85\" : { \"SecretAccessKey\" : \"ORJ+8Adk+wW+nU8FETq7+mOqeA8Z6jlPihnV8hX1\" , \"SessionToken\" : \"FwoGZXIvYXdzEGMaDMLxAZkuLpmSwYXShiL9A1S0X87VBC1mHCrRe/pB2oes+l1eXxUYnPJyC9ayOoXMvqXQsomq0xs6OqZ3vaa5Iw1HIyA4Cv1suLaOCoU3hNvOIJ6C94H1vU0siQYk7DIq9Av5RZe+uE2FnOctNBvYLd3i0IZo1ajjc00yRK3v24VRq9nQpoPLuqyH2jzlhCEjXuPScPbi5KEVs9fNcOTtgzbVf7IG2gNiwNs5aCpN4Bv/Zv2A6zp5xGz9cWj2f0aD9v66vX4bexOs5t/YYhwuwAvkkJPSIGvxja0xRThnceHyFHKtj0H+bi/PWAtlI8YJcDX69cM30JAHDdQH+ltm/4scFptW1hlvMaP+WReCAaCrsHrAT+yka7ttw5YlUyvZ8EPog+j6fwHlxmrXM9h1BqdikomyJU00gm1++FJelfP+1zAwcyrxCnbRl3ARFrAt8hIlrT6Vyu8WvWtLxcI8KcLcJQb/LgkW+sCTGlYcY8z3zkigJMbYn07ewTL5Ss7LazTJJa758I7PZan/v3xQHd5DEc5WBneiV3iOznDFgup0VAMkIviVjVCkszaPSVEdK2NU7jtrh6Jfm7bU/3P6ZG+CkyDLIa8MBn9KPXeJd/y+jTk5Ii+ fIwO/+mDpGNUribg6TPxhzZ8b/XdZO1kS1gVgqjXyVC+M+BRBh6C4H21w/eMzjCtDIpoxt5rGKL6Nu/IFMipoC4fgx6LIIHwtGYMG7SWQi7OsMAkiwZRg0n68/RqWgLzBt/4pfjSRYuk=\" , \"\ub9cc\ub8cc\" : \"2020-02-20T18:49:50Z\" , \"AccessKeyId\" : \"ASIA36C6WWEJUMHA3L7Z\" } } EKS \uc81c\uc5b4 \ud50c\ub808\uc778\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ub294 \ubcc0\ud615 \uc6f9\ud6c4\ud06c\ub294 AWS \uc5ed\ud560 ARN\uacfc \uc6f9 \uc790\uaca9 \uc99d\uba85 \ud1a0\ud070 \ud30c\uc77c\uc758 \uacbd\ub85c\ub97c \ud658\uacbd \ubcc0\uc218\ub85c \ud3ec\ub4dc\uc5d0 \uc8fc\uc785\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac12\uc740 \uc218\ub3d9\uc73c\ub85c \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:\uc5ed\ud560/IAM_ROLE_NAME AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token kubelet\uc740 \ucd1d TTL\uc758 80%\ubcf4\ub2e4 \uc624\ub798\ub418\uac70\ub098 24\uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \ud504\ub85c\uc81d\uc158\ub41c \ud1a0\ud070\uc744 \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud569\ub2c8\ub2e4. AWS SDK\ub294 \ud1a0\ud070\uc774 \ud68c\uc804\ud560 \ub54c \ud1a0\ud070\uc744 \ub2e4\uc2dc \ub85c\ub4dc\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. IRSA\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html . \ucd94\ucc9c \u00b6 IRSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d aws-node daemonset \uc5c5\ub370\uc774\ud2b8 \u00b6 \ud604\uc7ac aws-node \ub370\ubaac\uc14b\uc740 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uc5d0 IP\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc5ed\ud560\uc5d0\ub294 AmazonEKS_CNI_Policy \ubc0f EC2ContainerRegistryReadOnly\uc640 \uac19\uc774 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 ENI\ub97c \uc5f0\uacb0/\ubd84\ub9ac\ud558\uac70\ub098, IP \uc8fc\uc18c\ub97c \ud560\ub2f9/\ud560\ub2f9 \ud574\uc81c\ud558\uac70\ub098, ECR\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub3c4\ub85d \ud6a8\uacfc\uc801\uc73c\ub85c \ud5c8\uc6a9\ud558\ub294 \uba87 \uac00\uc9c0 AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc704\ud5d8\uc744 \ucd08\ub798\ud558\ubbc0\ub85c IRSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d aws-node \ub370\ubaac\uc14b\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uae30 \uc704\ud55c \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc774 \uac00\uc774\ub4dc\uc758 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\ud55c \u00b6 IRSA\ub97c \uc0ac\uc6a9\ud558\uba74 IRSA \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud3ec\ub4dc\uc758 \uc790\uaca9 \uc99d\uba85 \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud30c\uc77c\uc758 \uad8c\ud55c\uc744 \uacc4\uc18d \uc0c1\uc18d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . IRSA\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \ub97c \ucc28\ub2e8\ud558\ub294 \uac83\uc774 \uc801\uadf9 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc704\ubc18\uc758 \ud3ed\ubc1c \ubc18\uacbd\uc744 \ucd5c\uc18c\ud654\ud569\ub2c8\ub2e4. \uc8fc\uc758 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\uba74 IRSA\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \ud3ec\ub4dc\uac00 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uc544\ub798 \uc608\uc640 \uac19\uc774 \uc778\uc2a4\ud134\uc2a4\uac00 IMDSv2\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uace0 \ud649 \uc218\ub97c 1\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc758 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0 \uc774\ub7ec\ud55c \uc124\uc815\uc744 \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\ub97c \ube44\ud65c\uc131\ud654 \ud558\uc9c0 \ub9c8\uc138\uc694 . \uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc \uc885\ub8cc \ud578\ub4e4\ub7ec\uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\uc640 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \uc758\uc874\ud558\ub294 \uae30\ud0c0 \uc694\uc18c\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. aws ec2 modify-instance-metadata-options --instance-id <\uac12> --http-tokens required --http-put-response-hop-limit 1 \ub178\ub4dc\uc5d0\uc11c iptables\ub97c \uc870\uc791\ud558\uc5ec EC2 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \ud3ec\ub4dc\uc758 \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\ud55c . IRSA\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uc774\uc804 \ubc84\uc804\uc758 AWS SDK\ub97c \uc0ac\uc6a9\ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\uace0 \ud3ec\ub4dc\uac00 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0c1\uc18d\ud558\ub3c4\ub85d \ud558\ub824\uba74 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c EC2 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uba54\ud0c0\ub370\uc774\ud130. \ubaa8\ub4e0 Pod\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\ub294 \uc815\ucc45\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uba54\ud0c0\ub370\uc774\ud130 \uc561\uc138\uc2a4 \uac70\ubd80 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uc608 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : {} \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \uc544\uc774\ube14\ub85d : cidr : 0.0.0.0/0 \uc81c\uc678 : - 169.254.169.254/32 'PodSelector' \ub97c \uc801\uc808\ud558\uac8c \uc218\uc815\ud558\uc5ec \uc120\ud0dd\ud55c \ud3ec\ub4dc\uc5d0\uc11c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4 . apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud5c8\uc6a9-\uba54\ud0c0\ub370\uc774\ud130-\uc561\uc138\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uc608 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \ub9c8\uc774 \uc571 \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \uc544\uc774\ube14\ub85d : cidr : 169.254.169.254/32 IRSA\uc5d0 \ub300\ud55c IAM \uc5ed\ud560 \uc2e0\ub8b0 \uc815\ucc45\uc758 \ubc94\uc704\ub97c \uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud569\ub2c8\ub2e4. \u00b6 \uc2e0\ub8b0 \uc815\ucc45\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \ubc94\uc704\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IRSA\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc744 \ud3ec\ud568\ud558\uc5ec \uc5ed\ud560 \uc2e0\ub8b0 \uc815\ucc45\uc744 \uac00\ub2a5\ud55c \ud55c \uba85\uc2dc\uc801\uc73c\ub85c \ub9cc\ub4dc\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub3d9\uc77c\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ub2e4\ub978 \ud3ec\ub4dc\uac00 \uc5ed\ud560\uc744 \ub9e1\ub294 \uac83\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLI eksctl \uc740 \uc11c\ube44\uc2a4 \uacc4\uc815/IAM \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \ub54c \uc774 \uc791\uc5c5\uc744 \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://eksctl.io/usage/iamserviceaccounts/ \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 IMDS\uc5d0 \uc561\uc138\uc2a4\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 IMDSv2\ub97c \uc0ac\uc6a9\ud558\uace0 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \ud649 \uc81c\ud55c\uc744 2\ub85c \ub298\ub9ac\uc2ed\uc2dc\uc624. \u00b6 IMDSv2 \uc5d0\uc11c\ub294 PUT \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc138\uc158 \ud1a0\ud070\uc744 \uac00\uc838\uc640\uc57c \ud569\ub2c8\ub2e4. \ucd08\uae30 PUT \uc694\uccad\uc5d0\ub294 \uc138\uc158 \ud1a0\ud070\uc5d0 \ub300\ud55c TTL\uc774 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS SDK\ub294 \uc774\ub97c \ucc98\ub9ac\ud558\uace0 \ud574\ub2f9 \ud1a0\ud070\uc758 \uac31\uc2e0\uc744 \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub610\ud55c IP \uc804\ub2ec\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \uae30\ubcf8 \ud649 \uc81c\ud55c\uc774 \uc758\ub3c4\uc801\uc73c\ub85c 1\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc138\uc158 \ud1a0\ud070\uc744 \uc694\uccad\ud558\ub294 \ud3ec\ub4dc\ub294 \uacb0\uad6d \uc2dc\uac04 \ucd08\uacfc\ub418\uc5b4 IMDSv1 \ub370\uc774\ud130 \ud750\ub984\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub300\uccb4\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub294 v1\uacfc v2\ub97c \ubaa8\ub450 _\ud65c\uc131\ud654_\ud558\uace0 eksctl \ub610\ub294 \uacf5\uc2dd CloudFormation \ud15c\ud50c\ub9bf\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc5d0\uc11c \ud649 \uc81c\ud55c\uc744 2\ub85c \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc6d0 IMDSv2\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \uc790\ub3d9 \ub9c8\uc6b4\ud2b8 \ube44\ud65c\uc131\ud654 \u00b6 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 Kubernetes API\ub97c \ud638\ucd9c\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc758 PodSpec\uc5d0\uc11c automountServiceAccountToken \uc18d\uc131\uc744 false \ub85c \uc124\uc815\ud558\uac70\ub098 \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud328\uce58\ud558\uc5ec \ub354 \uc774\uc0c1 \ud3ec\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: kubectl patch serviceaccount default -p $'automountServiceAccountToken: false' \uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc804\uc6a9 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0ac\uc6a9 \u00b6 \uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 \uace0\uc720\ud55c \uc804\uc6a9 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 Kubernetes API \ubc0f IRSA\uc758 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc8fc\ubaa9 \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ube14\ub8e8/\uadf8\ub9b0 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uac01 IRSA IAM \uc5ed\ud560\uc758 \uc2e0\ub8b0 \uc815\ucc45\uc744 \uc0c8 \ud074\ub7ec\uc2a4\ud130\uc758 OIDC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \ucd5c\uc2e0 \ubc84\uc804\uc758 Kubernetes\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub610\ub294 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ud2b8\ub798\ud53d\uc744 \uc6d0\ud65c\ud558\uac8c \uc774\ub3d9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589 \u00b6 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc6f9 \uc790\uaca9 \uc99d\uba85 \ud1a0\ud070 \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc788\uc9c0\ub9cc \ucee8\ud14c\uc774\ub108\ub97c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uc740 \ubaa8\ubc94 \uc0ac\ub840\ub85c \uac04\uc8fc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub610\ub294 PodSpec\uc5d0 spec.securityContext.runAsUser \uc18d\uc131\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. runAsUser` \uc758 \uac12 \uc740 \uc784\uc758\uc758 \uac12\uc785\ub2c8\ub2e4. runAsUser \ud544\ub4dc \uc5d0 \uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790 ID\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4 . api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 \ub370\ubaa8 \uc0ac\uc591 : \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : runAsUser : 1000 \uc2e4\ud589 \uadf8\ub8f9 : 3000 \uc6a9\uae30 : - \uc774\ub984 : sec-ctx-demo \uc774\ubbf8\uc9c0 : \ube44\uc9c0\ubc15\uc2a4 \uba85\ub839 : [ \"sh\" , \"-c\" , \"sleep 1h\" ] \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c \ud1a0\ud070\uc5d0 0600 [ root ] \uad8c\ud55c\uc774 \ud560\ub2f9\ub418\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud14c\uc774\ub108\uac00 IRSA \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \uc77d\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. fsgroup=65534 [ Nobody ]\ub97c \ud3ec\ud568\ud558\ub3c4\ub85d \ucee8\ud14c\uc774\ub108\uc758 securityContext\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \ud1a0\ud070\uc744 \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud22c\uae30: \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8: fs\uadf8\ub8f9: 65534 Kubernetes 1.19 \uc774\uc0c1\uc5d0\uc11c\ub294 \uc774 \ubcc0\uacbd\uc774 \ub354 \uc774\uc0c1 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c \ubd80\uc5ec \u00b6 Action Hero \ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c AWS API \ud638\ucd9c \ubc0f \ud574\ub2f9 IAM \uad8c\ud55c\uc744 \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud568\uaed8 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ud560\ub2f9\ub41c IAM \uc5ed\ud560\uc758 \ubc94\uc704\ub97c \uc810\uc9c4\uc801\uc73c\ub85c \uc81c\ud55c\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub41c\ub2e4\ub294 \uc810\uc5d0\uc11c IAM Access Advisor \uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ub9ac\uc18c\uc2a4\uc5d0 \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \ubd80\uc5ec\uc5d0 \ub300\ud55c \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ubd88\ud544\uc694\ud55c \uc775\uba85 \uc811\uadfc \uac80\ud1a0 \ubc0f \ucca0\ud68c \u00b6 \uc774\uc0c1\uc801\uc73c\ub85c\ub294 \ubaa8\ub4e0 API \uc791\uc5c5\uc5d0 \ub300\ud574 \uc775\uba85 \uc561\uc138\uc2a4\ub97c \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. Kubernetes \uae30\ubcf8 \uc81c\uacf5 \uc0ac\uc6a9\uc790 \uc2dc\uc2a4\ud15c:anonymous\uc5d0 \ub300\ud55c RoleBinding \ub610\ub294 ClusterRoleBinding\uc744 \uc0dd\uc131\ud558\uc5ec \uc775\uba85 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud569\ub2c8\ub2e4. rbac-lookup \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec system:anonymous \uc0ac\uc6a9\uc790\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \uac16\ub294 \uad8c\ud55c\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ./rbac-lookup | grep -P '\uc2dc\uc2a4\ud15c:(\uc775\uba85)|(\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c)' \uc2dc\uc2a4\ud15c:\uc775\uba85\uc758 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:public-info-viewer system:public-info-viewer \uc774\uc678\uc758 \ubaa8\ub4e0 \uc5ed\ud560 \ub610\ub294 ClusterRole\uc740 system:anonymous \uc0ac\uc6a9\uc790 \ub610\ub294 system:unauthenticated \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub529\ub418\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \ud2b9\uc815 API\uc5d0 \ub300\ud55c \uc775\uba85 \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub294 \uba87 \uac00\uc9c0 \uc815\ub2f9\ud55c \uc774\uc720\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0\uc5d0 \ud574\ub2f9\ud558\ub294 \uacbd\uc6b0 \uc775\uba85 \uc0ac\uc6a9\uc790\uac00 \ud2b9\uc815 API\uc5d0\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc778\uc99d \uc5c6\uc774 \ud574\ub2f9 API\ub97c \ub178\ucd9c\ud574\ub3c4 \ud074\ub7ec\uc2a4\ud130\uac00 \ucde8\uc57d\ud574\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes/EKS \ubc84\uc804 1.14 \uc774\uc804\uc5d0\ub294 system:unauthenticated \uadf8\ub8f9\uc774 \uae30\ubcf8\uc801\uc73c\ub85c system:discovery \ubc0f system:basic-user ClusterRoles\uc5d0 \uc5f0\uacb0\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.14 \uc774\uc0c1\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\ub370\uc774\ud2b8\uac00 \uc774\ub7ec\ud55c \uad8c\ud55c\uc744 \ucde8\uc18c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub7ec\ud55c \uad8c\ud55c\uc774 \uacc4\uc18d \ud65c\uc131\ud654\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. system:public-info-viewer\ub97c \uc81c\uc678\ud558\uace0 \uc5b4\ub5a4 ClusterRole\uc5d0 \"system:unauthenticated\"\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(jq util \ud544\uc694). kubectl get ClusterRoleBinding -o json | jq -r '.\ud56d\ubaa9[] | select(.subjects[]?.name ==\"\uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c\") | select(.metadata.name != \"system:public-info-viewer\") | .metadata.name' \uadf8\ub9ac\uace0 \"system:unauthenticated\"\ub294 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc5ec \"system:public-info-viewer\"\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc5ed\ud560\uc5d0\uc11c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get ClusterRoleBinding -o json | jq -r '.\ud56d\ubaa9[] | select(.subjects[]?.name ==\"\uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c\") | select(.metadata.name != \"system:public-info-viewer\") | del(.subjects[] | select(.name ==\"system:unauthenticated\"))' | kubectl \uc801\uc6a9 -f - \ub610\ub294 kubectl describe \ubc0f kubectl edit\ub85c \uc218\ub3d9\uc73c\ub85c \ud655\uc778\ud558\uace0 \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. system:unauthenticated \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c system:discovery \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc2ed\uc2dc\uc624. kubectl describe clusterrolebindings \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\ubc1c\uacac \ub808\uc774\ube14: kubernetes.io/bootstrapping=rbac-defaults \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: true \uc5ed\ud560: \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\ubc1c\uacac \uc8fc\uc81c: \uc885\ub958 \uc774\ub984 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 ---- ---- --------- \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub428 \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c system:unauthenticated \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c system:basic-user \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. kubectl describe clusterrolebindings \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \ub808\uc774\ube14: kubernetes.io/bootstrapping=rbac-defaults \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: true \uc5ed\ud560: \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc8fc\uc81c: \uc885\ub958 \uc774\ub984 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 ---- ---- --------- \uadf8\ub8f9 \uc2dc\uc2a4\ud15c: \uc778\uc99d\ub428 \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c system:unauthenticated \uadf8\ub8f9\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 system:discovery \ubc0f/\ub610\ub294 system:basic-user ClusterRoles\uc5d0 \ubc14\uc778\ub529\ub41c \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc5ed\ud560\uc744 system:unauthenticated \uadf8\ub8f9\uc5d0\uc11c \ubd84\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec system:discovery ClusterRoleBinding\uc744 \ud3b8\uc9d1\ud569\ub2c8\ub2e4. kubectl edit clusterrolebindings \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc704 \uba85\ub839\uc740 \uc544\ub798\uc640 \uac19\uc774 \ud3b8\uc9d1\uae30\uc5d0\uc11c system:discovery ClusterRoleBinding\uc758 \ud604\uc7ac \uc815\uc758\ub97c \uc5fd\ub2c8\ub2e4. # \uc544\ub798 \uac1c\uccb4\ub97c \uc218\uc815\ud558\uc2ed\uc2dc\uc624. '#'\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4. # \ube48 \ud30c\uc77c\uc740 \ud3b8\uc9d1\uc744 \uc911\ub2e8\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc744 \uc800\uc7a5\ud558\ub294 \ub3d9\uc548 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74 # \uad00\ub828 \uc624\ub958\ub85c \ub2e4\uc2dc \uc5f4\uc5c8\uc2b5\ub2c8\ub2e4. # apiVersion: rbac.authorization.k8s.io/v1 \uc885\ub958: ClusterRoleBinding \uba54\ud0c0\ub370\uc774\ud130: \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: \"\ucc38\" creationTimestamp: \"2021-06-17T20:50:49Z\" \ub77c\ubca8: kubernetes.io/bootstrapping: rbac-defaults \uc774\ub984: \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \ub9ac\uc18c\uc2a4 \ubc84\uc804: \"24502985\" selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery uid: b7936268-5043-431a-a0e1-171a423abeb6 \uc5ed\ud560\ucc38\uc870: api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uacfc\ubaa9: - api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: \uadf8\ub8f9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub428 - api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: \uadf8\ub8f9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c \uc704 \ud3b8\uc9d1\uae30 \ud654\uba74\uc758 \"\uc8fc\uccb4\" \uc139\uc158\uc5d0\uc11c system:unauthenticated \uadf8\ub8f9 \ud56d\ubaa9\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4. system:basic-user ClusterRoleBinding\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \ub2e8\uacc4\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4. \ub300\uccb4 \uc811\uadfc \ubc29\uc2dd \u00b6 IRSA\ub294 \ud3ec\ub4dc\uc5d0 AWS \"ID\"\ub97c \ud560\ub2f9\ud558\ub294 _\uc120\ud638 \ub418\ub294 \ubc29\ubc95_\uc774\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5d0 \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS SDK\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \ud604\uc7ac IRSA\ub97c \uc9c0\uc6d0\ud558\ub294 SDK\uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html . IRSA \ud638\ud658 SDK\ub85c \uc989\uc2dc \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\ub294 \uacbd\uc6b0 kube2iam \ubc0f kiam . AWS\ub294 \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc758 \uc0ac\uc6a9\uc744 \ubcf4\uc99d\ud558\uac70\ub098 \uc6a9\uc778\ud558\uc9c0 \uc54a\uc9c0\ub9cc IRSA\uc640 \uc720\uc0ac\ud55c \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud574 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac"},{"location":"security/docs/iam.kr/#id","text":"ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac (IAM)\ub294 \uc778\uc99d \ubc0f \uad8c\ud55c \ubd80\uc5ec\ub77c\ub294 \ub450 \uac00\uc9c0 \ud544\uc218 \uae30\ub2a5\uc744 \uc218\ud589\ud558\ub294 AWS \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \uc778\uc99d\uc5d0\ub294 \uc790\uaca9 \uc99d\uba85 \ud655\uc778\uc774 \ud3ec\ud568\ub418\ub294 \ubc18\uba74 \uad8c\ud55c \ubd80\uc5ec\ub294 AWS \ub9ac\uc18c\uc2a4\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4. AWS \ub0b4\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub294 \ub2e4\ub978 AWS \uc11c\ube44\uc2a4(\uc608: EC2) \ub610\ub294 AWS principal \uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. ) IAM \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560 . \ub9ac\uc18c\uc2a4\uac00 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5\uc744 \uad00\ub9ac\ud558\ub294 \uaddc\uce59\uc740 IAM \uc815\ucc45 \uc73c\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4.","title":"ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac"},{"location":"security/docs/iam.kr/#eks","text":"Kubernetes \ud504\ub85c\uc81d\ud2b8\ub294 Bearer \ud1a0\ud070, X.509 \uc778\uc99d\uc11c, OIDC \ub4f1 kube-apiserver \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc694\uccad\uc744 \uc778\uc99d\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c \uc804\ub7b5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. EKS\ub294 \ud604\uc7ac webhook \ud1a0\ud070 \uc778\uc99d , \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \ubc0f 2021\ub144 2\uc6d4 21\uc77c \ud604\uc7ac OIDC \uc778\uc99d. \uc6f9\ud6c4\ud06c \uc778\uc99d \uc804\ub7b5\uc740 \ubca0\uc5b4\ub7ec \ud1a0\ud070\uc744 \ud655\uc778\ud558\ub294 \uc6f9\ud6c4\ud06c\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. EKS\uc5d0\uc11c \uc774\ub7ec\ud55c \uc804\ub2ec\uc790 \ud1a0\ud070\uc740 kubectl \uba85\ub839 \uc744 \uc2e4\ud589\ud560 \ub54c AWS CLI \ub610\ub294 aws-iam-authenticator \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \uc758\ud574 \uc0dd\uc131\ub429\ub2c8\ub2e4. \uba85\ub839\uc744 \uc2e4\ud589\ud558\uba74 \ud1a0\ud070\uc774 \uc778\uc99d \uc6f9\ud6c5\uc73c\ub85c \uc804\ub2ec\ub418\ub294 kube-apiserver\ub85c \uc804\ub2ec\ub429\ub2c8\ub2e4. \uc694\uccad\uc774 \uc62c\ubc14\ub978 \ud615\uc2dd\uc774\uba74 \uc6f9\ud6c4\ud06c\ub294 \ud1a0\ud070 \ubcf8\ubb38\uc5d0 \ud3ec\ud568\ub41c \ubbf8\ub9ac \uc11c\uba85\ub41c URL\uc744 \ud638\ucd9c\ud569\ub2c8\ub2e4. \uc774 URL\uc740 \uc694\uccad \uc11c\uba85\uc758 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud558\uace0 \uc0ac\uc6a9\uc790 \uacc4\uc815, Arn \ubc0f UserId\uc640 \uac19\uc740 \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c kube-apiserver\uc5d0 \ubc18\ud658\ud569\ub2c8\ub2e4. \uc778\uc99d \ud1a0\ud070\uc744 \uc218\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub824\uba74 \ud130\ubbf8\ub110 \ucc3d\uc5d0 \ub2e4\uc74c \uba85\ub839\uc744 \uc785\ub825\ud569\ub2c8\ub2e4. aws eks get-token --cluster <\ud074\ub7ec\uc2a4\ud130_\uc774\ub984> \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc73c\ub85c \ud1a0\ud070\uc744 \uc5bb\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c\uc740 Go\ub85c \uc791\uc131\ub41c \uc608\uc785\ub2c8\ub2e4. \ud328\ud0a4\uc9c0 \uba54\uc778 \uac00\uc838\uc624\uae30 ( \"fmt\" \"\ud1b5\ub098\ubb34\" \"sigs.k8s.io/aws-iam-authenticator/pkg/token\" ) \uae30\ub2a5 \uba54\uc778 () { g , _ := \ud1a0\ud070. NewGenerator ( \uac70\uc9d3 , \uac70\uc9d3 ) tk , \uc624\ub958 := g. \uac00\uc838 \uc624\uae30 ( \"<cluster_name>\" ) \uc624\ub958 \uac00 \uc788\ub294 \uacbd\uc6b0 != nil { \ud1b5\ub098\ubb34. \uce58\uba85\uc801 (\uc624\ub958) } fmt. Println (tk) } \ucd9c\ub825\uc740 \ub2e4\uc74c\uacfc \uc720\uc0ac\ud574\uc57c \ud569\ub2c8\ub2e4. { \"\uc885\ub958\" : \"ExecCredential\" , \"apiVersion\" : \"client.authentication.k8s.io/v1alpha1\" , \"\uc0ac\uc591\" : {}, \"\uc0c1\ud0dc\" : { \"expirationTimestamp\" : \"2020-02-19T16:08:27Z\" , \"token\" : \"k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFKTkdSSUxLTlNSQzJXNVFBJTJGMjAyMDAyMTklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIwMDIxOVQxNTU0MjdaJlgtQW16LUV4cGlyZXM9NjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yMjBmOGYzNTg1ZTMyMGRkYjVlNjgzYTVjOWE0MDUzMDFhZDc2NTQ2ZjI0ZjI4MTExZmRhZDA5Y2Y2NDhhMzkz\" } } \uac01 \ud1a0\ud070\uc740 k8s-aws-v1. \uc73c\ub85c \uc2dc\uc791\ud558\uace0 base64\ub85c \uc778\ucf54\ub529\ub41c \ubb38\uc790\uc5f4\uc774 \ub4a4\ub530\ub985\ub2c8\ub2e4. \ubb38\uc790\uc5f4\uc740 \ub514\ucf54\ub529\ub420 \ub54c \ub2e4\uc74c\uacfc \uc720\uc0ac\ud574\uc57c \ud569\ub2c8\ub2e4. https://sts.amazonaws.com/?Action=GetCallerIdentity&Version=2011-06-15&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJPFRILKNSRC2W5QA%2F20200219%2Fus-east-1%2Fsts%2Faws4_request&X-Amz -\ub0a0\uc9dc=20200219T155427Z&X-Amz-Expires=60&X-Amz-SignedHeaders=host%3Bx-k8s-aws-id&X-Amz-Signature=220f8f3285e320ddb5e683a5c9a405301ad76546f24f28111fdad03936 \ud1a0\ud070\uc740 Amazon \uc790\uaca9 \uc99d\uba85 \ubc0f \uc11c\uba85\uc774 \ud3ec\ud568\ub41c \ubbf8\ub9ac \uc11c\uba85\ub41c URL\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ud1a0\ud070\uc5d0\ub294 15\ubd84\uc758 \uc218\uba85(TTL)\uc774 \uc788\uc73c\uba70 \uadf8 \ud6c4\uc5d0\ub294 \uc0c8 \ud1a0\ud070\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 kubectl \uacfc \uac19\uc740 \ud074\ub77c\uc774\uc5b8\ud2b8\ub97c \uc0ac\uc6a9\ud560 \ub54c \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac \ub418\uc9c0\ub9cc Kubernetes \ub300\uc2dc\ubcf4\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud1a0\ud070\uc774 \ub9cc\ub8cc\ub420 \ub54c\ub9c8\ub2e4 \uc0c8 \ud1a0\ud070\uc744 \uc0dd\uc131\ud558\uace0 \ub2e4\uc2dc \uc778\uc99d\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 ID\uac00 AWS IAM \uc11c\ube44\uc2a4\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uba74 kube-apiserver \ub294 'kube-system' \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c 'aws-auth' ConfigMap\uc744 \uc77d\uc5b4 \uc0ac\uc6a9\uc790\uc640 \uc5f0\uacb0\ud560 RBAC \uadf8\ub8f9\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4. aws-auth ConfigMap \uc740 IAM \ubcf4\uc548 \uc8fc\uccb4(\uc608: IAM \uc0ac\uc6a9\uc790 \ubc0f \uc5ed\ud560)\uc640 Kubernetes RBAC \uadf8\ub8f9 \uac04\uc758 \uc815\uc801 \ub9e4\ud551\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. RBAC \uadf8\ub8f9\uc740 Kubernetes RoleBindings \ub610\ub294 ClusterRoleBindings\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ub9ac\uc18c\uc2a4(\uac1d\uccb4) \ubaa8\uc74c\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \uc791\uc5c5(\ub3d9\uc0ac)\uc744 \uc815\uc758\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c IAM \uc5ed\ud560\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4.","title":"EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\uc5b4"},{"location":"security/docs/iam.kr/#_1","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/iam.kr/#_2","text":"\uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc740 \uc218\uba85\uc774 \uae34 \uc815\uc801 \uc0ac\uc6a9\uc790 \uc778\uc99d \uc815\ubcf4\uc785\ub2c8\ub2e4. \uc190\uc0c1, \ubd84\uc2e4 \ub610\ub294 \ub3c4\ub09c\ub41c \uacbd\uc6b0 \uacf5\uaca9\uc790\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc0ad\uc81c\ub420 \ub54c\uae4c\uc9c0 \ud574\ub2f9 \ud1a0\ud070\uacfc \uad00\ub828\ub41c \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c Kubernetes API\ub97c \uc0ac\uc6a9\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158(\uc608: CI/CD \ud30c\uc774\ud504\ub77c\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158)\uc5d0 \ub300\ud55c \uc608\uc678\ub97c \ubd80\uc5ec\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 EC2 \uc778\uc2a4\ud134\uc2a4\uc640 \uac19\uc740 AWS \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0 \ub300\uc2e0 \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\uace0 \uc774\ub97c 'aws-auth' ConfigMap\uc758 Kubernetes RBAC \uc5ed\ud560\uc5d0 \ub9e4\ud551\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"\uc778\uc99d\uc5d0 \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc138\uc694."},{"location":"security/docs/iam.kr/#aws","text":"Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud558\uae30 \uc704\ud574 IAM \uc0ac\uc6a9\uc790\uc5d0\uac8c AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uad8c\ud55c\uc744 \ud560\ub2f9\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. IAM \uc0ac\uc6a9\uc790\uc5d0\uac8c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ud2b9\uc815 Kubernetes RBAC \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ub418\ub294 \ud574\ub2f9 \uc0ac\uc6a9\uc790 \uc758 'aws-auth' ConfigMap\uc5d0 \ud56d\ubaa9\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.","title":"AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc0ac\uc6a9"},{"location":"security/docs/iam.kr/#iam","text":"'aws-auth' ConfigMap \uc5d0\uc11c \uac01 \uac1c\ubcc4 IAM \uc0ac\uc6a9\uc790\uc5d0 \ub300\ud55c \ud56d\ubaa9\uc744 \uc0dd\uc131\ud558\ub294 \ub300\uc2e0 \ud574\ub2f9 \uc0ac\uc6a9\uc790\uac00 IAM \uc5ed\ud560\uc744 \uc218\uc784\ud558\uace0 \ud574\ub2f9 \uc5ed\ud560\uc744 Kubernetes RBAC \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ud2b9\ud788 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uc0ac\uc6a9\uc790 \uc218\uac00 \uc99d\uac00\ud568\uc5d0 \ub530\ub77c \uc720\uc9c0 \uad00\ub9ac\uac00 \ub354 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4. \uc8fc\ubaa9 aws-auth ConfigMap\uc5d0 \uc758\ud574 \ub9e4\ud551\ub41c IAM \uc5d4\ud130\ud2f0\ub85c EKS \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \ub54c aws-auth ConfigMap\uc5d0 \uc124\uba85\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc774 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc758 \uc0ac\uc6a9\uc790 \ud544\ub4dc\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ud574\ub2f9 \uc5ed\ud560\uc744 \ub9e1\ub294 \uc2e4\uc81c \uc0ac\uc6a9\uc790\ub294 \uae30\ub85d\ub418\uc9c0 \uc54a\uc73c\uba70 \uac10\uc0ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. aws-auth ConfigMap\uc5d0\uc11c mapRoles\ub97c \uc0ac\uc6a9\ud558\uc5ec K8s RBAC \uad8c\ud55c\uc744 IAM \uc5ed\ud560\uc5d0 \ud560\ub2f9\ud560 \ub54c \uc0ac\uc6a9\uc790 \uc774\ub984\uc5d0 {{SessionName}}\uc744 \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uac10\uc0ac \ub85c\uadf8\uc5d0 \uc138\uc158 \uc774\ub984\uc774 \uae30\ub85d\ub418\ubbc0\ub85c CloudTrail \ub85c\uadf8\uc640 \ud568\uaed8 \uc774 \uc5ed\ud560\uc744 \ub9e1\uc740 \uc2e4\uc81c \uc0ac\uc6a9\uc790\ub97c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. - rolearn : arn:aws:iam::XXXXXXXXXXXX:\uc5ed\ud560/\ud14c\uc2a4\ud2b8\uc5ed\ud560 \uc0ac\uc6a9\uc790 \uc774\ub984 : testRole:{{\uc138\uc158 \uc774\ub984}} \uadf8\ub8f9 : - \uc2dc\uc2a4\ud15c:\ub9c8\uc2a4\ud130 user.extra.sessionName.0 \uc774 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0 \ucd94\uac00 \ub418\uc5c8\uc73c\ubbc0\ub85c \uc774 \ubcc0\uacbd\uc774 \ub354 \uc774\uc0c1 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 .","title":"\uc5ec\ub7ec \uc0ac\uc6a9\uc790\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0 IAM \uc5ed\ud560 \uc0ac\uc6a9"},{"location":"security/docs/iam.kr/#rolebinding-clusterrolebinding","text":"AWS \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c \ubd80\uc5ec\uc5d0 \ub300\ud55c \uc774\uc804 \ud56d\ubaa9\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c RoleBindings \ubc0f ClusterRoleBindings\uc5d0\ub294 \ud2b9\uc815 \uae30\ub2a5\uc744 \uc218\ud589\ud558\ub294 \ub370 \ud544\uc694\ud55c \uad8c\ud55c \uc9d1\ud569\ub9cc \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc808\ub300\uc801\uc73c\ub85c \ud544\uc694\ud55c \uacbd\uc6b0\uac00 \uc544\ub2c8\uba74 \uc5ed\ud560 \ubc0f ClusterRole\uc5d0\uc11c [\"*\"] \ub97c \uc0ac\uc6a9\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624 . \ud560\ub2f9\ud560 \uad8c\ud55c\uc774 \ud655\uc2e4\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 audit2rbac \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0\uc11c \uad00\ucc30\ub41c API \ud638\ucd9c\uc744 \uae30\ubc18\uc73c\ub85c \uc5ed\ud560 \ubc0f \ubc14\uc778\ub529\uc744 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"RoleBinding \ubc0f ClusterRoleBinding \uc0dd\uc131 \uc2dc \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc0ac\uc6a9"},{"location":"security/docs/iam.kr/#eks_1","text":"\uae30\ubcf8\uc801\uc73c\ub85c EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c API \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uacf5\uac1c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uc989, \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ud130\ub137\uc5d0\uc11c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc74c\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ubaa8\ub4e0 API \uc694\uccad\uc774 IAM\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uace0 Kubernetes RBAC\uc5d0 \uc758\ud574 \uc2b9\uc778\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub294 \uc5ec\uc804\ud788 \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uc989, \ud68c\uc0ac \ubcf4\uc548 \uc815\ucc45\uc5d0 \ub530\ub77c \uc778\ud130\ub137\uc5d0\uc11c API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 VPC \uc678\ubd80\ub85c \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ube44\uacf5\uac1c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9 \uc740 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4 \uc218\uc815 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810\uc744 \uacf5\uc6a9\uc73c\ub85c \ub450\uace0 \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810\uacfc \ud1b5\uc2e0\ud560 \uc218 \uc788\ub294 CIDR \ube14\ub85d\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \ube14\ub85d\uc740 \uc0ac\uc2e4\uc0c1 \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub294 \ud5c8\uc6a9 \ubaa9\ub85d\uc5d0 \uc788\ub294 \ud37c\ube14\ub9ad IP \uc8fc\uc18c \uc9d1\ud569\uc785\ub2c8\ub2e4. \ud654\uc774\ud2b8\ub9ac\uc2a4\ud2b8 CIDR \ube14\ub85d \uc138\ud2b8\ub85c \uacf5\uac1c \uc561\uc138\uc2a4\ub97c \uad6c\uc131\ud558\uace0 \uac1c\uc778 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ub85c \uc124\uc815\ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc774 \ud504\ub85c\ube44\uc800\ub2dd\ub420 \ub54c \ud074\ub7ec\uc2a4\ud130 VPC\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub418\ub294 \uad50\ucc28 \uacc4\uc815 ENI\ub97c \ud1b5\ud574 kubelet(\uc791\uc5c5\uc790)\uacfc Kubernetes API \uc0ac\uc774\uc758 \ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uac15\uc81c\ud558\ub294 \ub3d9\uc2dc\uc5d0 \ud2b9\uc815 \ud37c\ube14\ub9ad IP \ubc94\uc704\uc758 \ud37c\ube14\ub9ad \uc561\uc138\uc2a4\uac00 \ud5c8\uc6a9\ub429\ub2c8\ub2e4.","title":"EKS \ud074\ub7ec\uc2a4\ud130 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ube44\uacf5\uac1c\ub85c \uc124\uc815"},{"location":"security/docs/iam.kr/#iam_1","text":"Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uc5f0\ub3d9 \uc0ac\uc6a9\uc790\uc640 \uac19\uc740 IAM \uc5d4\ud130\ud2f0 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc5ed\ud560\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc758 RBAC \uad6c\uc131\uc5d0\uc11c 'system:masters' \uad8c\ud55c\uc774 \uc790\ub3d9\uc73c\ub85c \ubd80\uc5ec\ub429\ub2c8\ub2e4. \uc774 \uc561\uc138\uc2a4\ub294 \uc81c\uac70\ud560 \uc218 \uc5c6\uc73c\uba70 aws-auth ConfigMap\uc744 \ud1b5\ud574 \uad00\ub9ac\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc804\uc6a9 IAM \uc5ed\ud560\ub85c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \uc774 \uc5ed\ud560\uc744 \ub9e1\uc744 \uc218 \uc788\ub294 \uc0ac\ub78c\uc744 \uc815\uae30\uc801\uc73c\ub85c \uac10\uc0ac\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc5ed\ud560\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc77c\uc0c1\uc801\uc778 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\uc5b4\uc11c\ub294 \uc548 \ub418\uba70, \ub300\uc2e0 \uc774\ub7ec\ud55c \ubaa9\uc801\uc744 \uc704\ud574 'aws-auth' ConfigMap\uc744 \ud1b5\ud574 \ucd94\uac00 \uc0ac\uc6a9\uc790\uc5d0\uac8c \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud574\uc57c \ud569\ub2c8\ub2e4. 'aws-auth' ConfigMap\uc774 \uad6c\uc131\ub41c \ud6c4\uc5d0 \ub294 \uc5ed\ud560\uc744 \uc0ad\uc81c\ud560 \uc218 \uc788\uc73c\uba70 'aws-auth' ConfigMap\uc774 \uc190\uc0c1\ub418\uace0 \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc5c6\ub294 \uae34\uae09/\uc720\ub9ac \ud30c\uc190 \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c\ub9cc \ub2e4\uc2dc \uc0dd\uc131 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uc9c1\uc811 \uc0ac\uc6a9\uc790 \uc561\uc138\uc2a4\uac00 \uad6c\uc131\ub418\uc9c0 \uc54a\uc740 \ud504\ub85c\ub355\uc158 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc804\uc6a9 IAM \uc5ed\ud560\ub85c \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131"},{"location":"security/docs/iam.kr/#aws-auth-configmap","text":"\uc798\ubabb\ub41c \ud615\uc2dd\uc758 aws-auth ConfigMap\uc73c\ub85c \uc778\ud574 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc783\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ConfigMap\uc744 \ubcc0\uacbd\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. eksctl eksctl CLI\uc5d0\ub294 aws-auth\uc5d0 ID \ub9e4\ud551\uc744 \ucd94\uac00\ud558\uae30 \uc704\ud55c \uba85\ub839\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4 . \ucee8\ud53c\uadf8\ub9f5. CLI \ub3c4\uc6c0\ub9d0 \ubcf4\uae30: eksctl create iamidentitymapping --help IAM \uc5ed\ud560\uc744 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\ub85c \uc9c0\uc815: eksctl create iamidentitymapping --cluster <\ud074\ub7ec\uc2a4\ud130 \uc774\ub984> --region=<\uc9c0\uc5ed> --arn arn:aws:iam::123456:role/testing --group system:masters --username admin \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 eksctl \ubb38\uc11c \ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. aws-auth by keikoproj keikoproj\uc758 'aws-auth' \uc5d0\ub294 cli \ubc0f go \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \ubaa8\ub450 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub3c4\uc6c0\ub9d0 CLI \ub3c4\uc6c0\ub9d0 \ub2e4\uc6b4\ub85c\ub4dc \ubc0f \ubcf4\uae30: github.com/keikoproj/aws-auth\ub85c \uc774\ub3d9 aws-auth \ub3c4\uc6c0\ub9d0 \ub610\ub294 kubectl\uc6a9 krew \ud50c\ub7ec\uadf8\uc778 \uad00\ub9ac\uc790 \ub85c aws-auth \ub97c \uc124\uce58 \ud569\ub2c8\ub2e4. kubectl krew \uc124\uce58 aws-auth kubectl aws \uc778\uc99d GitHub\uc758 aws-auth \ubb38\uc11c \uac80\ud1a0 \uc5d0\uc11c go \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ube44\ub86f\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. AWS IAM \uc778\uc99d\uc790 CLI aws-iam-authenticator \ud504\ub85c\uc81d\ud2b8\uc5d0\ub294 ConfigMap\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc704\ud55c CLI\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9b4\ub9ac\uc2a4 \ub2e4\uc6b4\ub85c\ub4dc GitHub\uc5d0\uc11c. IAM \uc5ed\ud560\uc5d0 \ud074\ub7ec\uc2a4\ud130 \uad8c\ud55c\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. ./aws-iam-authenticator \uc5ed\ud560 \ucd94\uac00 --rolearn arn:aws:iam::185309785115:role/lil-dev-role-cluster --username lil-dev-user --groups system:masters --kubeconfig ~/. \ud050\ube0c/\uad6c\uc131","title":"\ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec aws-auth ConfigMap \ubcc0\uacbd"},{"location":"security/docs/iam.kr/#_3","text":"\uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uc0ac\ub78c\uc740 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ubcc0\uacbd\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uae30\uc801\uc73c\ub85c aws-auth ConfigMap\uc744 \uac10\uc0ac\ud558\uc5ec \uc561\uc138\uc2a4 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub41c \uc0ac\ub78c\uacfc \ud560\ub2f9\ub41c \uad8c\ud55c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. kubectl-who-can \ub610\ub294 rbac-lookup \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815, \uc0ac\uc6a9\uc790 \ub610\ub294 \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub529\ub41c \uc5ed\ud560\uc744 \uac80\uc0ac\ud569\ub2c8\ub2e4. \uac10\uc0ac \uc139\uc158\uc5d0\uc11c \uc774 \uc8fc\uc81c\ub97c \ub354 \uc790\uc138\ud788 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4 . \ucd94\uac00 \uc544\uc774\ub514\uc5b4\ub294 \uc774 \uae30\uc0ac from NCC Group.","title":"\ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc815\uae30\uc801\uc73c\ub85c \uac10\uc0ac\ud569\ub2c8\ub2e4."},{"location":"security/docs/iam.kr/#_4","text":"\uac00\uc7a5 ]( https://kubernetes.io/docs/reference \ub97c \uc0ac\uc6a9\ud558\uc5ec GitHub\uc640 \uac19\uc740 OIDC \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. /access-authn-authz/authentication/#user-impersonation ). \uc774\ub7ec\ud55c \ub450 \uac00\uc9c0 \uc194\ub8e8\uc158\uc5d0 \ub300\ud55c \uac8c\uc2dc\ubb3c\uc774 AWS \uc624\ud508 \uc18c\uc2a4 \ube14\ub85c\uadf8\uc5d0 \uac8c\uc2dc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Teleport\uc640 \ud568\uaed8 GitHub \uc790\uaca9 \uc99d\uba85\uc744 \uc0ac\uc6a9\ud558\uc5ec EKS\uc5d0 \uc778\uc99d kube-oidc-proxy\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5ec\ub7ec EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc77c\uad00\ub41c OIDC \uc778\uc99d \uc8fc\ubaa9 EKS\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud504\ub85d\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 OIDC \uc778\uc99d\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucd9c\uc2dc \ube14\ub85c\uadf8 Amazon EKS\uc5d0 \ub300\ud55c OIDC \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790 \uc778\uc99d \uc18c\uac1c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ub2e4\uc591\ud55c \uc778\uc99d \ubc29\ubc95\uc5d0 \ub300\ud55c \ucee4\ub125\ud130\uac00 \uc788\ub294 \uc778\uae30 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 OIDC \uacf5\uae09\uc790\uc778 Dex\ub85c EKS\ub97c \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uc608\ub294 Dex \ubc0f dex-k8s-authenticator\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon EKS \uc778\uc99d . \ube14\ub85c\uadf8\uc5d0 \uc124\uba85\ub41c \ub300\ub85c OIDC \uacf5\uae09\uc790\uac00 \uc778\uc99d\ud55c \uc0ac\uc6a9\uc790 \uc774\ub984/\uc0ac\uc6a9\uc790 \uadf8\ub8f9\uc740 Kubernetes \uac10\uc0ac \ub85c\uadf8\uc5d0 \ub098\ud0c0\ub0a9\ub2c8\ub2e4. \ub610\ud55c AWS SSO \ub97c \uc0ac\uc6a9\ud558\uc5ec Azure AD\uc640 \uac19\uc740 \uc678\ubd80 \uc790\uaca9 \uc99d\uba85 \uacf5\uae09\uc790\uc640 AWS\ub97c \uc5f0\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uae30\ub85c \uacb0\uc815\ud55c \uacbd\uc6b0 AWS CLI v2.0\uc5d0\ub294 SSO \uc138\uc158\uc744 \ud604\uc7ac CLI \uc138\uc158\uacfc \uc27d\uac8c \uc5f0\uacb0\ud558\uace0 IAM \uc5ed\ud560\uc744 \uc218\uc784\ud560 \uc218 \uc788\ub294 \uba85\uba85\ub41c \ud504\ub85c\ud544\uc744 \uc0dd\uc131\ud558\ub294 \uc635\uc158\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uc758 Kubernetes RBAC \uadf8\ub8f9\uc744 \uacb0\uc815\ud558\ub294 \ub370 IAM \uc5ed\ud560\uc774 \uc0ac\uc6a9\ub418\ubbc0\ub85c kubectl \uc744 \uc2e4\ud589\ud558\uae30 \uc6b0\uc120 \uc5ed\ud560\uc744 \ub9e1\uc544\uc57c \ud569\ub2c8\ub2e4.","title":"\uc778\uc99d \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac\uc5d0 \ub300\ud55c \ub300\uccb4 \uc811\uadfc \ubc29\uc2dd"},{"location":"security/docs/iam.kr/#_5","text":"rbac.dev Kubernetes RBAC\uc5d0 \ub300\ud55c \ube14\ub85c\uadf8 \ubc0f \ub3c4\uad6c\ub97c \ud3ec\ud568\ud55c \ucd94\uac00 \ub9ac\uc18c\uc2a4 \ubaa9\ub85d","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"security/docs/iam.kr/#id_1","text":"Kubernetes \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud2b9\uc815 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uae30 \uc704\ud574 Kubernetes API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ub294 \uc11c\ube44\uc2a4\uc758 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub098\uc5f4\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ucee8\ud2b8\ub864\ub7ec\ub294 ALB\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uace0 \uad6c\uc131\ud558\uae30 \uc704\ud574 AWS API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774 \uc139\uc158\uc5d0\uc11c\ub294 Pod\uc5d0 \uad8c\ud55c\uc744 \ud560\ub2f9\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc0b4\ud3b4\ubd05\ub2c8\ub2e4.","title":"\ud3ec\ub4dc ID"},{"location":"security/docs/iam.kr/#kubernetes","text":"\uc11c\ube44\uc2a4 \uacc4\uc815\uc740 Pod\uc5d0 Kubernetes RBAC \uc5ed\ud560\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ud2b9\uc218\ud55c \uc720\ud615\uc758 \uac1c\uccb4\uc785\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub300\ud574 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ucc38\uc870\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub4dc\ub97c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ud558\uba74 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc790\ub3d9\uc73c\ub85c \ud3ec\ub4dc\uc5d0 \ud560\ub2f9\ub418\uace0 \uc2dc\ud06c\ub9bf, \uc989 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc11c\ube44\uc2a4 \uacc4\uc815(JWT) \ud1a0\ud070\uc774 \ub9c8\uc6b4\ud2b8\ub429\ub2c8\ub2e4. /var/run/secrets/kubernetes.io/serviceaccount \uc758 \ubcfc\ub968\uc73c\ub85c\uc11c \ud3ec\ub4dc . \ud574\ub2f9 \ub514\ub809\ud130\ub9ac\uc5d0\uc11c \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \ub514\ucf54\ub529\ud558\uba74 \ub2e4\uc74c \uba54\ud0c0\ub370\uc774\ud130\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. { \"iss\" : \"kubernetes/serviceaccount\" , \"kubernetes.io/serviceaccount/namespace\" : \"\uae30\ubcf8\" , \"kubernetes.io/serviceaccount/secret.name\" : \"default-token-5pv4z\" , \"kubernetes.io/serviceaccount/service-account.name\" : \"\uae30\ubcf8\" , \"kubernetes.io/serviceaccount/service-account.uid\" : \"3b36ddb5-438c-11ea-9438-063a49b60fba\" , \"\ud558\uc704\" : \"\uc2dc\uc2a4\ud15c:\uc11c\ube44\uc2a4 \uacc4\uc815:\uae30\ubcf8:\uae30\ubcf8\" } \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0\ub294 Kubernetes API\uc5d0 \ub300\ud55c \ub2e4\uc74c \uad8c\ud55c\uc774 \uc788\uc2b5\ub2c8\ub2e4. apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : ClusterRole \uba54\ud0c0\ub370\uc774\ud130 : \uc8fc\uc11d : rbac.authorization.kubernetes.io/autoupdate : \"\ucc38\" creationTimestamp : \"2020-01-30T18:13:25Z\" \ub77c\ubca8 : kubernetes.io/bootstrapping : rbac-defaults \uc774\ub984 : \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \ub9ac\uc18c\uc2a4 \ubc84\uc804 : \"43\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery UID : 350d2ab8-438c-11ea-9438-063a49b60fba \uaddc\uce59 : - nonResourceURLs : - /api - /api/* - /apis - /apis/* - /healthz - /openapi - /openapi/* - /\ubc84\uc804 - /\ubc84\uc804/ \ub3d9\uc0ac : - \uc5bb\ub2e4 \uc774 \uc5ed\ud560\uc740 \uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \uc0ac\uc6a9\uc790\uc640 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790\uac00 API \uc815\ubcf4\ub97c \uc77d\uc744 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uba70 \uacf5\uac1c\uc801\uc73c\ub85c \uc561\uc138\uc2a4\ud574\ub3c4 \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. Pod \ub0b4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 Kubernetes API\ub97c \ud638\ucd9c\ud560 \ub54c \ud574\ub2f9 API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\ub294 \uad8c\ud55c\uc744 \uba85\uc2dc\uc801\uc73c\ub85c \ubd80\uc5ec\ud558\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 Pod\uc5d0 \ud560\ub2f9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc561\uc138\uc2a4\uc5d0 \ub300\ud55c \uc9c0\uce68\uacfc \uc720\uc0ac\ud558\uac8c \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ubc14\uc778\ub529\ub41c Role \ub610\ub294 ClusterRole\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c API \ub9ac\uc18c\uc2a4 \ubc0f \uba54\uc11c\ub4dc\ub85c \uc81c\ud55c\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc774 \uc544\ub2cc \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 \ud3ec\ub4dc\uc758 spec.serviceAccountName \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub824\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \uc774\ub984\uc73c\ub85c \uc124\uc815\ud558\uae30\ub9cc \ud558\uba74 \ub429\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0dd\uc131\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions . \ub178\ud2b8 Kubernetes 1.24 \uc774\uc804\uc5d0\ub294 Kubernetes\uac00 \uac01 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ub300\ud55c \uc554\ud638\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774 \uc2dc\ud06c\ub9bf\uc740 /var/run/secrets/kubernetes.io/serviceaccount\uc758 \ud31f(Pod)\uc5d0 \ub9c8\uc6b4\ud2b8\ub418\uc5c8\uc73c\uba70 \ud31f(Pod)\uc5d0\uc11c Kubernetes API \uc11c\ubc84\ub97c \uc778\uc99d\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. Kubernetes 1.24\uc5d0\uc11c\ub294 \ud3ec\ub4dc\uac00 \uc2e4\ud589\ub420 \ub54c \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc774 \ub3d9\uc801\uc73c\ub85c \uc0dd\uc131\ub418\uba70 \uae30\ubcf8\uc801\uc73c\ub85c 1\uc2dc\uac04 \ub3d9\uc548\ub9cc \uc720\ud6a8\ud569\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815\uc758 \ube44\ubc00\uc740 \uc0dd\uc131\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Jenkins\uc640 \uac19\uc774 Kubernetes API\uc5d0 \uc778\uc99d\ud574\uc57c \ud558\ub294 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \ub97c \ucc38\uc870\ud558\ub294 \uc8fc\uc11d\uacfc \ud568\uaed8 kubernetes.io/service-account-token \uc720\ud615\uc758 \uc2dc\ud06c\ub9bf\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. metadata.annotations.kubernetes.io/service-account.name: <SERVICE_ACCOUNT_NAME> \uacfc \uac19\uc740 \uacc4\uc815 . \uc774 \ubc29\ubc95\uc73c\ub85c \uc0dd\uc131\ub41c \ube44\ubc00\uc740 \ub9cc\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"Kubernetes \uc11c\ube44\uc2a4 \uacc4\uc815"},{"location":"security/docs/iam.kr/#iam-irsa","text":"IRSA\ub294 Kubernetes \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 IAM \uc5ed\ud560\uc744 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \ubcfc\ub968 \ud504\ub85c\uc81d\uc158 . \ud3ec\ub4dc\uac00 IAM \uc5ed\ud560\uc744 \ucc38\uc870\ud558\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 Kubernetes API \uc11c\ubc84\ub294 \uc2dc\uc791 \uc2dc \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uacf5\uac1c OIDC \uac80\uc0c9 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4. \ub05d\uc810\uc740 Kubernetes\uc5d0\uc11c \ubc1c\uae09\ud55c OIDC \ud1a0\ud070\uacfc \ubcfc\ub968\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub41c \uacb0\uacfc \ud1a0\ud070\uc5d0 \uc554\ud638\ud654 \uc11c\uba85\ud569\ub2c8\ub2e4. \uc774 \uc11c\uba85\ub41c \ud1a0\ud070\uc744 \ud1b5\ud574 \ud3ec\ub4dc\ub294 IAM \uc5ed\ud560\uacfc \uc5f0\uacb0\ub41c AWS API\ub97c \ud638\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS API\uac00 \ud638\ucd9c\ub418\uba74 AWS SDK\ub294 sts:AssumeRoleWithWebIdentity \ub97c \ud638\ucd9c\ud569\ub2c8\ub2e4 . \ud1a0\ud070\uc758 \uc11c\uba85\uc744 \ud655\uc778\ud55c \ud6c4 IAM\uc740 Kubernetes\uc5d0\uc11c \ubc1c\ud589\ud55c \ud1a0\ud070\uc744 \uc784\uc2dc AWS \uc5ed\ud560 \uc790\uaca9 \uc99d\uba85\uc73c\ub85c \uad50\ud658\ud569\ub2c8\ub2e4. IRSA\uc5d0 \ub300\ud55c (JWT) \ud1a0\ud070\uc744 \ub514\ucf54\ub529\ud558\uba74 \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c \uc608\uc640 \uc720\uc0ac\ud55c \ucd9c\ub825\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4. { \"\uc624\ub514\" : [ \"sts.amazonaws.com\" ], \"exp\" : 1582306514 , \"iat\" : 1582220114 , \"iss\" : \"https://oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"kubernetes.io\" : { \"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\" : \"\uae30\ubcf8\uac12\" , \"\ud3ec\ub4dc\" : { \"\uc774\ub984\" : \"alpine-57b5664646-rf966\" , \"uid\" : \"5a20f883-5407-11ea-a85c-0e62b7a4a436\" }, \"\uc11c\ube44\uc2a4 \uacc4\uc815\" : { \"\uc774\ub984\" : \"s3 \uc77d\uae30 \uc804\uc6a9\" , \"uid\" : \"a720ba5c-5406-11ea-9438-063a49b60fba\" } }, \"nbf\" : 1582220114 , \"sub\" : \"system:serviceaccount:default:s3-\uc77d\uae30 \uc804\uc6a9\" } \uc774 \ud2b9\uc815 \ud1a0\ud070\uc740 \ud3ec\ub4dc \ubcf4\uae30 \uc804\uc6a9 \uad8c\ud55c\uc744 S3\uc5d0 \ubd80\uc5ec\ud569\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 S3\uc5d0\uc11c \uc77d\uae30\ub97c \uc2dc\ub3c4\ud558\uba74 \ud1a0\ud070\uc774 \ub2e4\uc74c\uacfc \uc720\uc0ac\ud55c \uc784\uc2dc IAM \uc790\uaca9 \uc99d\uba85 \uc138\ud2b8\ub85c \uad50\ud658\ub429\ub2c8\ub2e4. { \"AssumedRoleUser\" : { \"AssumedRoleId\" : \"AROA36C6WWEJULFUYMPB6:abc\" , \"Arn\" : \"arn:aws:sts::123456789012:assumed-role/eksctl-winterfell-addon-iamserviceaccount-de-Role1-1D61LT75JH3MB/abc\" }, \"\ub300\uc0c1\" : \"sts.amazonaws.com\" , \"\uacf5\uae09\uc790\" : \"arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"SubjectFromWebIdentityToken\" : \"system:serviceaccount:default:s3-read-only\" , \"\uc790\uaca9 \uc99d\uba85\" : { \"SecretAccessKey\" : \"ORJ+8Adk+wW+nU8FETq7+mOqeA8Z6jlPihnV8hX1\" , \"SessionToken\" : \"FwoGZXIvYXdzEGMaDMLxAZkuLpmSwYXShiL9A1S0X87VBC1mHCrRe/pB2oes+l1eXxUYnPJyC9ayOoXMvqXQsomq0xs6OqZ3vaa5Iw1HIyA4Cv1suLaOCoU3hNvOIJ6C94H1vU0siQYk7DIq9Av5RZe+uE2FnOctNBvYLd3i0IZo1ajjc00yRK3v24VRq9nQpoPLuqyH2jzlhCEjXuPScPbi5KEVs9fNcOTtgzbVf7IG2gNiwNs5aCpN4Bv/Zv2A6zp5xGz9cWj2f0aD9v66vX4bexOs5t/YYhwuwAvkkJPSIGvxja0xRThnceHyFHKtj0H+bi/PWAtlI8YJcDX69cM30JAHDdQH+ltm/4scFptW1hlvMaP+WReCAaCrsHrAT+yka7ttw5YlUyvZ8EPog+j6fwHlxmrXM9h1BqdikomyJU00gm1++FJelfP+1zAwcyrxCnbRl3ARFrAt8hIlrT6Vyu8WvWtLxcI8KcLcJQb/LgkW+sCTGlYcY8z3zkigJMbYn07ewTL5Ss7LazTJJa758I7PZan/v3xQHd5DEc5WBneiV3iOznDFgup0VAMkIviVjVCkszaPSVEdK2NU7jtrh6Jfm7bU/3P6ZG+CkyDLIa8MBn9KPXeJd/y+jTk5Ii+ fIwO/+mDpGNUribg6TPxhzZ8b/XdZO1kS1gVgqjXyVC+M+BRBh6C4H21w/eMzjCtDIpoxt5rGKL6Nu/IFMipoC4fgx6LIIHwtGYMG7SWQi7OsMAkiwZRg0n68/RqWgLzBt/4pfjSRYuk=\" , \"\ub9cc\ub8cc\" : \"2020-02-20T18:49:50Z\" , \"AccessKeyId\" : \"ASIA36C6WWEJUMHA3L7Z\" } } EKS \uc81c\uc5b4 \ud50c\ub808\uc778\uc758 \uc77c\ubd80\ub85c \uc2e4\ud589\ub418\ub294 \ubcc0\ud615 \uc6f9\ud6c4\ud06c\ub294 AWS \uc5ed\ud560 ARN\uacfc \uc6f9 \uc790\uaca9 \uc99d\uba85 \ud1a0\ud070 \ud30c\uc77c\uc758 \uacbd\ub85c\ub97c \ud658\uacbd \ubcc0\uc218\ub85c \ud3ec\ub4dc\uc5d0 \uc8fc\uc785\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uac12\uc740 \uc218\ub3d9\uc73c\ub85c \uc81c\uacf5\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:\uc5ed\ud560/IAM_ROLE_NAME AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token kubelet\uc740 \ucd1d TTL\uc758 80%\ubcf4\ub2e4 \uc624\ub798\ub418\uac70\ub098 24\uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \ud504\ub85c\uc81d\uc158\ub41c \ud1a0\ud070\uc744 \uc790\ub3d9\uc73c\ub85c \uad50\uccb4\ud569\ub2c8\ub2e4. AWS SDK\ub294 \ud1a0\ud070\uc774 \ud68c\uc804\ud560 \ub54c \ud1a0\ud070\uc744 \ub2e4\uc2dc \ub85c\ub4dc\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. IRSA\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html .","title":"\uc11c\ube44\uc2a4 \uacc4\uc815\uc758 IAM \uc5ed\ud560(IRSA)"},{"location":"security/docs/iam.kr/#_6","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/iam.kr/#irsa-aws-node-daemonset","text":"\ud604\uc7ac aws-node \ub370\ubaac\uc14b\uc740 EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uc5d0 IP\ub97c \ud560\ub2f9\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc5ed\ud560\uc5d0\ub294 AmazonEKS_CNI_Policy \ubc0f EC2ContainerRegistryReadOnly\uc640 \uac19\uc774 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 ENI\ub97c \uc5f0\uacb0/\ubd84\ub9ac\ud558\uac70\ub098, IP \uc8fc\uc18c\ub97c \ud560\ub2f9/\ud560\ub2f9 \ud574\uc81c\ud558\uac70\ub098, ECR\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub3c4\ub85d \ud6a8\uacfc\uc801\uc73c\ub85c \ud5c8\uc6a9\ud558\ub294 \uba87 \uac00\uc9c0 AWS \uad00\ub9ac\ud615 \uc815\ucc45\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc704\ud5d8\uc744 \ucd08\ub798\ud558\ubbc0\ub85c IRSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d aws-node \ub370\ubaac\uc14b\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774 \uc791\uc5c5\uc744 \uc218\ud589\ud558\uae30 \uc704\ud55c \uc2a4\ud06c\ub9bd\ud2b8\ub294 \uc774 \uac00\uc774\ub4dc\uc758 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"IRSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d aws-node daemonset \uc5c5\ub370\uc774\ud2b8"},{"location":"security/docs/iam.kr/#_7","text":"IRSA\ub97c \uc0ac\uc6a9\ud558\uba74 IRSA \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud3ec\ub4dc\uc758 \uc790\uaca9 \uc99d\uba85 \uccb4\uc778\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud30c\uc77c\uc758 \uad8c\ud55c\uc744 \uacc4\uc18d \uc0c1\uc18d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . IRSA\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ub2e4\uc74c \ud56d\ubaa9\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \ub97c \ucc28\ub2e8\ud558\ub294 \uac83\uc774 \uc801\uadf9 \uad8c\uc7a5\ub429\ub2c8\ub2e4. \uc704\ubc18\uc758 \ud3ed\ubc1c \ubc18\uacbd\uc744 \ucd5c\uc18c\ud654\ud569\ub2c8\ub2e4. \uc8fc\uc758 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\uba74 IRSA\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \ud3ec\ub4dc\uac00 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0c1\uc18d\ubc1b\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uc544\ub798 \uc608\uc640 \uac19\uc774 \uc778\uc2a4\ud134\uc2a4\uac00 IMDSv2\ub9cc \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud558\uace0 \ud649 \uc218\ub97c 1\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uc5ec \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc \uadf8\ub8f9\uc758 \uc2dc\uc791 \ud15c\ud50c\ub9bf\uc5d0 \uc774\ub7ec\ud55c \uc124\uc815\uc744 \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\ub97c \ube44\ud65c\uc131\ud654 \ud558\uc9c0 \ub9c8\uc138\uc694 . \uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc \uc885\ub8cc \ud578\ub4e4\ub7ec\uc640 \uac19\uc740 \uad6c\uc131 \uc694\uc18c\uc640 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \uc758\uc874\ud558\ub294 \uae30\ud0c0 \uc694\uc18c\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. aws ec2 modify-instance-metadata-options --instance-id <\uac12> --http-tokens required --http-put-response-hop-limit 1 \ub178\ub4dc\uc5d0\uc11c iptables\ub97c \uc870\uc791\ud558\uc5ec EC2 \uba54\ud0c0\ub370\uc774\ud130\uc5d0 \ub300\ud55c \ud3ec\ub4dc\uc758 \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc778\uc2a4\ud134\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\ud55c . IRSA\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uc774\uc804 \ubc84\uc804\uc758 AWS SDK\ub97c \uc0ac\uc6a9\ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\uace0 \ud3ec\ub4dc\uac00 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud560\ub2f9\ub41c \uc5ed\ud560\uc744 \uc0c1\uc18d\ud558\ub3c4\ub85d \ud558\ub824\uba74 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc120\ud0dd\uc801\uc73c\ub85c EC2 \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uba54\ud0c0\ub370\uc774\ud130. \ubaa8\ub4e0 Pod\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\ub294 \uc815\ucc45\uc73c\ub85c \uc2dc\uc791\ud569\ub2c8\ub2e4. apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uba54\ud0c0\ub370\uc774\ud130 \uc561\uc138\uc2a4 \uac70\ubd80 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uc608 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : {} \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \uc544\uc774\ube14\ub85d : cidr : 0.0.0.0/0 \uc81c\uc678 : - 169.254.169.254/32 'PodSelector' \ub97c \uc801\uc808\ud558\uac8c \uc218\uc815\ud558\uc5ec \uc120\ud0dd\ud55c \ud3ec\ub4dc\uc5d0\uc11c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4 . apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud5c8\uc6a9-\uba54\ud0c0\ub370\uc774\ud130-\uc561\uc138\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uc608 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \ub9c8\uc774 \uc571 \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \uc544\uc774\ube14\ub85d : cidr : 169.254.169.254/32","title":"\uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc778\uc2a4\ud134\uc2a4 \ud504\ub85c\ud544\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uc81c\ud55c"},{"location":"security/docs/iam.kr/#irsa-iam","text":"\uc2e0\ub8b0 \uc815\ucc45\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud2b9\uc815 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \ubc94\uc704\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IRSA\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc744 \ud3ec\ud568\ud558\uc5ec \uc5ed\ud560 \uc2e0\ub8b0 \uc815\ucc45\uc744 \uac00\ub2a5\ud55c \ud55c \uba85\uc2dc\uc801\uc73c\ub85c \ub9cc\ub4dc\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub3d9\uc77c\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ub2e4\ub978 \ud3ec\ub4dc\uac00 \uc5ed\ud560\uc744 \ub9e1\ub294 \uac83\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLI eksctl \uc740 \uc11c\ube44\uc2a4 \uacc4\uc815/IAM \uc5ed\ud560\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \ub54c \uc774 \uc791\uc5c5\uc744 \uc790\ub3d9\uc73c\ub85c \uc218\ud589\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://eksctl.io/usage/iamserviceaccounts/ \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"IRSA\uc5d0 \ub300\ud55c IAM \uc5ed\ud560 \uc2e0\ub8b0 \uc815\ucc45\uc758 \ubc94\uc704\ub97c \uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc73c\ub85c \uc9c0\uc815\ud569\ub2c8\ub2e4."},{"location":"security/docs/iam.kr/#imds-imdsv2-ec2-2","text":"IMDSv2 \uc5d0\uc11c\ub294 PUT \uc694\uccad\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc138\uc158 \ud1a0\ud070\uc744 \uac00\uc838\uc640\uc57c \ud569\ub2c8\ub2e4. \ucd08\uae30 PUT \uc694\uccad\uc5d0\ub294 \uc138\uc158 \ud1a0\ud070\uc5d0 \ub300\ud55c TTL\uc774 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS SDK\ub294 \uc774\ub97c \ucc98\ub9ac\ud558\uace0 \ud574\ub2f9 \ud1a0\ud070\uc758 \uac31\uc2e0\uc744 \uc790\ub3d9\uc73c\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \ub610\ud55c IP \uc804\ub2ec\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \uae30\ubcf8 \ud649 \uc81c\ud55c\uc774 \uc758\ub3c4\uc801\uc73c\ub85c 1\ub85c \uc124\uc815\ub418\uc5b4 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c EC2 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc138\uc158 \ud1a0\ud070\uc744 \uc694\uccad\ud558\ub294 \ud3ec\ub4dc\ub294 \uacb0\uad6d \uc2dc\uac04 \ucd08\uacfc\ub418\uc5b4 IMDSv1 \ub370\uc774\ud130 \ud750\ub984\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ub300\uccb4\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\ub294 v1\uacfc v2\ub97c \ubaa8\ub450 _\ud65c\uc131\ud654_\ud558\uace0 eksctl \ub610\ub294 \uacf5\uc2dd CloudFormation \ud15c\ud50c\ub9bf\uc73c\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc5d0\uc11c \ud649 \uc81c\ud55c\uc744 2\ub85c \ubcc0\uacbd\ud558\uc5ec \uc9c0\uc6d0 IMDSv2\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.","title":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 IMDS\uc5d0 \uc561\uc138\uc2a4\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 IMDSv2\ub97c \uc0ac\uc6a9\ud558\uace0 EC2 \uc778\uc2a4\ud134\uc2a4\uc758 \ud649 \uc81c\ud55c\uc744 2\ub85c \ub298\ub9ac\uc2ed\uc2dc\uc624."},{"location":"security/docs/iam.kr/#_8","text":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 Kubernetes API\ub97c \ud638\ucd9c\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc758 PodSpec\uc5d0\uc11c automountServiceAccountToken \uc18d\uc131\uc744 false \ub85c \uc124\uc815\ud558\uac70\ub098 \uac01 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uae30\ubcf8 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud328\uce58\ud558\uc5ec \ub354 \uc774\uc0c1 \ud3ec\ub4dc\uc5d0 \uc790\ub3d9\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: kubectl patch serviceaccount default -p $'automountServiceAccountToken: false'","title":"\uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070 \uc790\ub3d9 \ub9c8\uc6b4\ud2b8 \ube44\ud65c\uc131\ud654"},{"location":"security/docs/iam.kr/#_9","text":"\uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub294 \uace0\uc720\ud55c \uc804\uc6a9 \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 Kubernetes API \ubc0f IRSA\uc758 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc8fc\ubaa9 \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud558\ub294 \ub300\uc2e0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ube14\ub8e8/\uadf8\ub9b0 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uac01 IRSA IAM \uc5ed\ud560\uc758 \uc2e0\ub8b0 \uc815\ucc45\uc744 \uc0c8 \ud074\ub7ec\uc2a4\ud130\uc758 OIDC \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub85c \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc640 \ud568\uaed8 \ucd5c\uc2e0 \ubc84\uc804\uc758 Kubernetes\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub85c\ub4dc \ubc38\ub7f0\uc11c \ub610\ub294 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc5d0\uc11c \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ud2b8\ub798\ud53d\uc744 \uc6d0\ud65c\ud558\uac8c \uc774\ub3d9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\uac01 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc804\uc6a9 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0ac\uc6a9"},{"location":"security/docs/iam.kr/#_10","text":"\ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uc6f9 \uc790\uaca9 \uc99d\uba85 \ud1a0\ud070 \ud30c\uc77c\uc744 \uc77d\uc744 \uc218 \uc788\uc9c0\ub9cc \ucee8\ud14c\uc774\ub108\ub97c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud558\ub294 \uac83\uc740 \ubaa8\ubc94 \uc0ac\ub840\ub85c \uac04\uc8fc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub610\ub294 PodSpec\uc5d0 spec.securityContext.runAsUser \uc18d\uc131\uc744 \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. runAsUser` \uc758 \uac12 \uc740 \uc784\uc758\uc758 \uac12\uc785\ub2c8\ub2e4. runAsUser \ud544\ub4dc \uc5d0 \uc9c0\uc815\ub41c \uc0ac\uc6a9\uc790 ID\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4 . api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 \ub370\ubaa8 \uc0ac\uc591 : \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : runAsUser : 1000 \uc2e4\ud589 \uadf8\ub8f9 : 3000 \uc6a9\uae30 : - \uc774\ub984 : sec-ctx-demo \uc774\ubbf8\uc9c0 : \ube44\uc9c0\ubc15\uc2a4 \uba85\ub839 : [ \"sh\" , \"-c\" , \"sleep 1h\" ] \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\uba74 \uae30\ubcf8\uc801\uc73c\ub85c \ud1a0\ud070\uc5d0 0600 [ root ] \uad8c\ud55c\uc774 \ud560\ub2f9\ub418\uae30 \ub54c\ubb38\uc5d0 \ucee8\ud14c\uc774\ub108\uac00 IRSA \uc11c\ube44\uc2a4 \uacc4\uc815 \ud1a0\ud070\uc744 \uc77d\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. fsgroup=65534 [ Nobody ]\ub97c \ud3ec\ud568\ud558\ub3c4\ub85d \ucee8\ud14c\uc774\ub108\uc758 securityContext\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\uba74 \ucee8\ud14c\uc774\ub108\uac00 \ud1a0\ud070\uc744 \uc77d\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud22c\uae30: \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8: fs\uadf8\ub8f9: 65534 Kubernetes 1.19 \uc774\uc0c1\uc5d0\uc11c\ub294 \uc774 \ubcc0\uacbd\uc774 \ub354 \uc774\uc0c1 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2e4\ud589"},{"location":"security/docs/iam.kr/#_11","text":"Action Hero \ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\ub294 \ub370 \ud544\uc694\ud55c AWS API \ud638\ucd9c \ubc0f \ud574\ub2f9 IAM \uad8c\ud55c\uc744 \uc2dd\ubcc4\ud558\uae30 \uc704\ud574 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ud568\uaed8 \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ud560\ub2f9\ub41c IAM \uc5ed\ud560\uc758 \ubc94\uc704\ub97c \uc810\uc9c4\uc801\uc73c\ub85c \uc81c\ud55c\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub41c\ub2e4\ub294 \uc810\uc5d0\uc11c IAM Access Advisor \uc640 \uc720\uc0ac\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ub9ac\uc18c\uc2a4\uc5d0 \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \ubd80\uc5ec\uc5d0 \ub300\ud55c \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c \ubd80\uc5ec"},{"location":"security/docs/iam.kr/#_12","text":"\uc774\uc0c1\uc801\uc73c\ub85c\ub294 \ubaa8\ub4e0 API \uc791\uc5c5\uc5d0 \ub300\ud574 \uc775\uba85 \uc561\uc138\uc2a4\ub97c \ube44\ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4. Kubernetes \uae30\ubcf8 \uc81c\uacf5 \uc0ac\uc6a9\uc790 \uc2dc\uc2a4\ud15c:anonymous\uc5d0 \ub300\ud55c RoleBinding \ub610\ub294 ClusterRoleBinding\uc744 \uc0dd\uc131\ud558\uc5ec \uc775\uba85 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud569\ub2c8\ub2e4. rbac-lookup \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec system:anonymous \uc0ac\uc6a9\uc790\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud574 \uac16\ub294 \uad8c\ud55c\uc744 \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ./rbac-lookup | grep -P '\uc2dc\uc2a4\ud15c:(\uc775\uba85)|(\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c)' \uc2dc\uc2a4\ud15c:\uc775\uba85\uc758 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc740 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4 ClusterRole/\uc2dc\uc2a4\ud15c:public-info-viewer system:public-info-viewer \uc774\uc678\uc758 \ubaa8\ub4e0 \uc5ed\ud560 \ub610\ub294 ClusterRole\uc740 system:anonymous \uc0ac\uc6a9\uc790 \ub610\ub294 system:unauthenticated \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub529\ub418\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \ud2b9\uc815 API\uc5d0 \ub300\ud55c \uc775\uba85 \uc561\uc138\uc2a4\ub97c \ud65c\uc131\ud654\ud558\ub294 \uba87 \uac00\uc9c0 \uc815\ub2f9\ud55c \uc774\uc720\uac00 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \uacbd\uc6b0\uc5d0 \ud574\ub2f9\ud558\ub294 \uacbd\uc6b0 \uc775\uba85 \uc0ac\uc6a9\uc790\uac00 \ud2b9\uc815 API\uc5d0\ub9cc \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud558\uace0 \uc778\uc99d \uc5c6\uc774 \ud574\ub2f9 API\ub97c \ub178\ucd9c\ud574\ub3c4 \ud074\ub7ec\uc2a4\ud130\uac00 \ucde8\uc57d\ud574\uc9c0\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes/EKS \ubc84\uc804 1.14 \uc774\uc804\uc5d0\ub294 system:unauthenticated \uadf8\ub8f9\uc774 \uae30\ubcf8\uc801\uc73c\ub85c system:discovery \ubc0f system:basic-user ClusterRoles\uc5d0 \uc5f0\uacb0\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.14 \uc774\uc0c1\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud55c \uacbd\uc6b0\uc5d0\ub3c4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\ub370\uc774\ud2b8\uac00 \uc774\ub7ec\ud55c \uad8c\ud55c\uc744 \ucde8\uc18c\ud558\uc9c0 \uc54a\uae30 \ub54c\ubb38\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc774\ub7ec\ud55c \uad8c\ud55c\uc774 \uacc4\uc18d \ud65c\uc131\ud654\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. system:public-info-viewer\ub97c \uc81c\uc678\ud558\uace0 \uc5b4\ub5a4 ClusterRole\uc5d0 \"system:unauthenticated\"\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(jq util \ud544\uc694). kubectl get ClusterRoleBinding -o json | jq -r '.\ud56d\ubaa9[] | select(.subjects[]?.name ==\"\uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c\") | select(.metadata.name != \"system:public-info-viewer\") | .metadata.name' \uadf8\ub9ac\uace0 \"system:unauthenticated\"\ub294 \ub2e4\uc74c\uc744 \uc0ac\uc6a9\ud558\uc5ec \"system:public-info-viewer\"\ub97c \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc5ed\ud560\uc5d0\uc11c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get ClusterRoleBinding -o json | jq -r '.\ud56d\ubaa9[] | select(.subjects[]?.name ==\"\uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c\") | select(.metadata.name != \"system:public-info-viewer\") | del(.subjects[] | select(.name ==\"system:unauthenticated\"))' | kubectl \uc801\uc6a9 -f - \ub610\ub294 kubectl describe \ubc0f kubectl edit\ub85c \uc218\ub3d9\uc73c\ub85c \ud655\uc778\ud558\uace0 \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. system:unauthenticated \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c system:discovery \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc2ed\uc2dc\uc624. kubectl describe clusterrolebindings \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\ubc1c\uacac \ub808\uc774\ube14: kubernetes.io/bootstrapping=rbac-defaults \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: true \uc5ed\ud560: \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\ubc1c\uacac \uc8fc\uc81c: \uc885\ub958 \uc774\ub984 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 ---- ---- --------- \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub428 \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c system:unauthenticated \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c system:basic-user \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4. kubectl describe clusterrolebindings \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \ub808\uc774\ube14: kubernetes.io/bootstrapping=rbac-defaults \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: true \uc5ed\ud560: \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\uae30\ubcf8 \uc0ac\uc6a9\uc790 \uc8fc\uc81c: \uc885\ub958 \uc774\ub984 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 ---- ---- --------- \uadf8\ub8f9 \uc2dc\uc2a4\ud15c: \uc778\uc99d\ub428 \uadf8\ub8f9 \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c system:unauthenticated \uadf8\ub8f9\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 system:discovery \ubc0f/\ub610\ub294 system:basic-user ClusterRoles\uc5d0 \ubc14\uc778\ub529\ub41c \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc5ed\ud560\uc744 system:unauthenticated \uadf8\ub8f9\uc5d0\uc11c \ubd84\ub9ac\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec system:discovery ClusterRoleBinding\uc744 \ud3b8\uc9d1\ud569\ub2c8\ub2e4. kubectl edit clusterrolebindings \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uc704 \uba85\ub839\uc740 \uc544\ub798\uc640 \uac19\uc774 \ud3b8\uc9d1\uae30\uc5d0\uc11c system:discovery ClusterRoleBinding\uc758 \ud604\uc7ac \uc815\uc758\ub97c \uc5fd\ub2c8\ub2e4. # \uc544\ub798 \uac1c\uccb4\ub97c \uc218\uc815\ud558\uc2ed\uc2dc\uc624. '#'\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uc904\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4. # \ube48 \ud30c\uc77c\uc740 \ud3b8\uc9d1\uc744 \uc911\ub2e8\ud569\ub2c8\ub2e4. \uc774 \ud30c\uc77c\uc744 \uc800\uc7a5\ud558\ub294 \ub3d9\uc548 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uba74 # \uad00\ub828 \uc624\ub958\ub85c \ub2e4\uc2dc \uc5f4\uc5c8\uc2b5\ub2c8\ub2e4. # apiVersion: rbac.authorization.k8s.io/v1 \uc885\ub958: ClusterRoleBinding \uba54\ud0c0\ub370\uc774\ud130: \uc8fc\uc11d: rbac.authorization.kubernetes.io/autoupdate: \"\ucc38\" creationTimestamp: \"2021-06-17T20:50:49Z\" \ub77c\ubca8: kubernetes.io/bootstrapping: rbac-defaults \uc774\ub984: \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \ub9ac\uc18c\uc2a4 \ubc84\uc804: \"24502985\" selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery uid: b7936268-5043-431a-a0e1-171a423abeb6 \uc5ed\ud560\ucc38\uc870: api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: ClusterRole \uc774\ub984: \uc2dc\uc2a4\ud15c:\uac80\uc0c9 \uacfc\ubaa9: - api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: \uadf8\ub8f9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub428 - api\uadf8\ub8f9: rbac.authorization.k8s.io \uc885\ub958: \uadf8\ub8f9 \uc774\ub984: \uc2dc\uc2a4\ud15c:\uc778\uc99d\ub418\uc9c0 \uc54a\uc74c \uc704 \ud3b8\uc9d1\uae30 \ud654\uba74\uc758 \"\uc8fc\uccb4\" \uc139\uc158\uc5d0\uc11c system:unauthenticated \uadf8\ub8f9 \ud56d\ubaa9\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4. system:basic-user ClusterRoleBinding\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \ub2e8\uacc4\ub97c \ubc18\ubcf5\ud569\ub2c8\ub2e4.","title":"\ubd88\ud544\uc694\ud55c \uc775\uba85 \uc811\uadfc \uac80\ud1a0 \ubc0f \ucca0\ud68c"},{"location":"security/docs/iam.kr/#_13","text":"IRSA\ub294 \ud3ec\ub4dc\uc5d0 AWS \"ID\"\ub97c \ud560\ub2f9\ud558\ub294 _\uc120\ud638 \ub418\ub294 \ubc29\ubc95_\uc774\uc9c0\ub9cc \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc5d0 \ucd5c\uc2e0 \ubc84\uc804\uc758 AWS SDK\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \ud604\uc7ac IRSA\ub97c \uc9c0\uc6d0\ud558\ub294 SDK\uc758 \uc804\uccb4 \ubaa9\ub85d\uc740 https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html . IRSA \ud638\ud658 SDK\ub85c \uc989\uc2dc \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc5c6\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc788\ub294 \uacbd\uc6b0 kube2iam \ubc0f kiam . AWS\ub294 \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc758 \uc0ac\uc6a9\uc744 \ubcf4\uc99d\ud558\uac70\ub098 \uc6a9\uc778\ud558\uc9c0 \uc54a\uc9c0\ub9cc IRSA\uc640 \uc720\uc0ac\ud55c \uacb0\uacfc\ub97c \uc5bb\uae30 \uc704\ud574 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc790\uc8fc \uc0ac\uc6a9\ud569\ub2c8\ub2e4.","title":"\ub300\uccb4 \uc811\uadfc \ubc29\uc2dd"},{"location":"security/docs/iam/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Identity and Access Management \u00b6 Identity and Access Management (IAM) is an AWS service that performs two essential functions: Authentication and Authorization. Authentication involves the verification of a identity whereas authorization governs the actions that can be performed by AWS resources. Within AWS, a resource can be another AWS service, e.g. EC2, or an AWS principal such as an IAM User or Role . The rules governing the actions that a resource is allowed to perform are expressed as IAM policies . Controlling Access to EKS Clusters \u00b6 The Kubernetes project supports a variety of different strategies to authenticate requests to the kube-apiserver service, e.g. Bearer Tokens, X.509 certificates, OIDC, etc. EKS currently has native support for webhook token authentication , service account tokens , and as of February 21, 2021, OIDC authentication. The webhook authentication strategy calls a webhook that verifies bearer tokens. On EKS, these bearer tokens are generated by the AWS CLI or the aws-iam-authenticator client when you run kubectl commands. As you execute commands, the token is passed to the kube-apiserver which forwards it to the authentication webhook. If the request is well-formed, the webhook calls a pre-signed URL embedded in the token's body. This URL validates the request's signature and returns information about the user, e.g. the user's account, Arn, and UserId to the kube-apiserver. To manually generate a authentication token, type the following command in a terminal window: aws eks get-token --cluster-name <cluster_name> You can also get a token programmatically. Below is an example written in Go: package main import ( \"fmt\" \"log\" \"sigs.k8s.io/aws-iam-authenticator/pkg/token\" ) func main () { g , _ := token . NewGenerator ( false , false ) tk , err := g . Get ( \"<cluster_name>\" ) if err != nil { log . Fatal ( err ) } fmt . Println ( tk ) } The output should resemble this: { \"kind\" : \"ExecCredential\" , \"apiVersion\" : \"client.authentication.k8s.io/v1alpha1\" , \"spec\" : {}, \"status\" : { \"expirationTimestamp\" : \"2020-02-19T16:08:27Z\" , \"token\" : \"k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFKTkdSSUxLTlNSQzJXNVFBJTJGMjAyMDAyMTklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIwMDIxOVQxNTU0MjdaJlgtQW16LUV4cGlyZXM9NjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yMjBmOGYzNTg1ZTMyMGRkYjVlNjgzYTVjOWE0MDUzMDFhZDc2NTQ2ZjI0ZjI4MTExZmRhZDA5Y2Y2NDhhMzkz\" } } Each token starts with k8s-aws-v1. followed by a base64 encoded string. The string, when decoded, should resemble this: https://sts.amazonaws.com/?Action = GetCallerIdentity & Version = 2011 -06-15 & X-Amz-Algorithm = AWS4-HMAC-SHA256 & X-Amz-Credential = AKIAJPFRILKNSRC2W5QA%2F20200219%2Fus-east-1%2Fsts%2Faws4_request & X-Amz-Date = 20200219T155427Z & X-Amz-Expires = 60 & X-Amz-SignedHeaders = host%3Bx-k8s-aws-id & X-Amz-Signature = 220f8f3285e320ddb5e683a5c9a405301ad76546f24f28111fdad09cf648a393 The token consists of a pre-signed URL that includes an Amazon credential and signature. For additional details see https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html . The token has a time to live (TTL) of 15 minutes after which a new token will need to be generated. This is handled automatically when you use a client like kubectl , however, if you're using the Kubernetes dashboard, you will need to generate a new token and re-authenticate each time the token expires. Once the user's identity has been authenticated by the AWS IAM service, the kube-apiserver reads the aws-auth ConfigMap in the kube-system Namespace to determine the RBAC group to associate with the user. The aws-auth ConfigMap is used to create a static mapping between IAM principals, i.e. IAM Users and Roles, and Kubernetes RBAC groups. RBAC groups can be referenced in Kubernetes RoleBindings or ClusterRoleBindings. They are similar to IAM Roles in that they define a set of actions (verbs) that can be performed against a collection of Kubernetes resources (objects). Recommendations \u00b6 Don't use a service account token for authentication \u00b6 A service account token is a long-lived, static credential. If it is compromised, lost, or stolen, an attacker may be able to perform all the actions associated with that token until the service account is deleted. At times, you may need to grant an exception for applications that have to consume the Kubernetes API from outside the cluster, e.g. a CI/CD pipeline application. If such applications run on AWS infrastructure, like EC2 instances, consider using an instance profile and mapping that to a Kubernetes RBAC role in the aws-auth ConfigMap instead. Employ least privileged access to AWS Resources \u00b6 An IAM User does not need to be assigned privileges to AWS resources to access the Kubernetes API. If you need to grant an IAM user access to an EKS cluster, create an entry in the aws-auth ConfigMap for that user that maps to a specific Kubernetes RBAC group. Use IAM Roles when multiple users need identical access to the cluster \u00b6 Rather than creating an entry for each individual IAM User in the aws-auth ConfigMap, allow those users to assume an IAM Role and map that role to a Kubernetes RBAC group. This will be easier to maintain, especially as the number of users that require access grows. Attention When accessing the EKS cluster with the IAM entity mapped by aws-auth ConfigMap, the username described in aws-auth ConfigMap is recorded in the user field of the Kubernetes audit log. If you're using an IAM role, the actual users who assume that role aren't recorded and can't be audited. When assigning K8s RBAC permissions to an IAM role using mapRoles in aws-auth ConfigMap, you should include {{SessionName}} in your username. That way, the audit log will record the session name so you can track who the actual user assume this role along with the CloudTrail log. - rolearn : arn:aws:iam::XXXXXXXXXXXX:role/testRole username : testRole:{{SessionName}} groups : - system:masters In Kubernetes 1.20 and above, this change is no longer required, since user.extra.sessionName.0 was added to the Kubernetes audit log. Employ least privileged access when creating RoleBindings and ClusterRoleBindings \u00b6 Like the earlier point about granting access to AWS Resources, RoleBindings and ClusterRoleBindings should only include the set of permissions necessary to perform a specific function. Avoid using [\"*\"] in your Roles and ClusterRoles unless it's absolutely necessary. If you're unsure what permissions to assign, consider using a tool like audit2rbac to automatically generate Roles and binding based on the observed API calls in the Kubernetes Audit Log. Make the EKS Cluster Endpoint private \u00b6 By default when you provision an EKS cluster, the API cluster endpoint is set to public, i.e. it can be accessed from the Internet. Despite being accessible from the Internet, the endpoint is still considered secure because it requires all API requests to be authenticated by IAM and then authorized by Kubernetes RBAC. That said, if your corporate security policy mandates that you restrict access to the API from the Internet or prevents you from routing traffic outside the cluster VPC, you can: Configure the EKS cluster endpoint to be private. See Modifying Cluster Endpoint Access for further information on this topic. Leave the cluster endpoint public and specify which CIDR blocks can communicate with the cluster endpoint. The blocks are effectively a whitelisted set of public IP addresses that are allowed to access the cluster endpoint. Configure public access with a set of whitelisted CIDR blocks and set private endpoint access to enabled. This will allow public access from a specific range of public IPs while forcing all network traffic between the kubelets (workers) and the Kubernetes API through the cross-account ENIs that get provisioned into the cluster VPC when the control plane is provisioned. Create the cluster with a dedicated IAM role \u00b6 When you create an Amazon EKS cluster, the IAM entity user or role, such as a federated user that creates the cluster, is automatically granted system:masters permissions in the cluster's RBAC configuration. This access cannot be removed and is not managed through the aws-auth ConfigMap. Therefore it is a good idea to create the cluster with a dedicated IAM role and regularly audit who can assume this role. This role should not be used to perform routine actions on the cluster, and instead additional users should be granted access to the cluster through the aws-auth ConfigMap for this purpose. After the aws-auth ConfigMap is configured, the role can be deleted and only recreated in an emergency / break glass scenario where the aws-auth ConfigMap is corrupted and the cluster is otherwise inaccessible. This can be particularly useful in production clusters which do not usually have direct user access configured. Use tools to make changes to the aws-auth ConfigMap \u00b6 An improperly formatted aws-auth ConfigMap may cause you to lose access to the cluster. If you need to make changes to the ConfigMap, use a tool. eksctl The eksctl CLI includes a command for adding identity mappings to the aws-auth ConfigMap. View CLI Help: eksctl create iamidentitymapping --help Make an IAM Role a Cluster Admin: eksctl create iamidentitymapping --cluster <clusterName> --region = <region> --arn arn:aws:iam::123456:role/testing --group system:masters --username admin For more information, review eksctl docs aws-auth by keikoproj aws-auth by keikoproj includes both a cli and a go library. Download and view help CLI help: go get github.com/keikoproj/aws-auth aws-auth help Alternatively, install aws-auth with the krew plugin manager for kubectl. kubectl krew install aws-auth kubectl aws-auth Review the aws-auth docs on GitHub for more information, including the go library. AWS IAM Authenticator CLI The aws-iam-authenticator project includes a CLI for updating the ConfigMap. Download a release on GitHub. Add cluster permissions to an IAM Role: ./aws-iam-authenticator add role --rolearn arn:aws:iam::185309785115:role/lil-dev-role-cluster --username lil-dev-user --groups system:masters --kubeconfig ~/.kube/config Regularly audit access to the cluster \u00b6 Who requires access is likely to change over time. Plan to periodically audit the aws-auth ConfigMap to see who has been granted access and the rights they've been assigned. You can also use open source tooling like kubectl-who-can , or rbac-lookup to examine the roles bound to a particular service account, user, or group. We'll explore this topic further when we get to the section on auditing . Additional ideas can be found in this article from NCC Group. Alternative Approaches to Authentication and Access Management \u00b6 While IAM is the preferred way to authenticate users who need access to an EKS cluster, it is possible to use an OIDC identity provider such as GitHub using an authentication proxy and Kubernetes impersonation . Posts for two such solutions have been published on the AWS Open Source blog: Authenticating to EKS Using GitHub Credentials with Teleport Consistent OIDC authentication across multiple EKS clusters using kube-oidc-proxy Attention EKS natively supports OIDC authentication without using a proxy. For further information, please read the launch blog, Introducing OIDC identity provider authentication for Amazon EKS . For an example showing how to configure EKS with Dex, a popular open source OIDC provider with connectors for a variety of different authention methods, see Using Dex & dex-k8s-authenticator to authenticate to Amazon EKS . As described in the blogs, the username/group of users authenticated by an OIDC provider will appear in the Kubernetes audit log. You can also use AWS SSO to federate AWS with an external identity provider, e.g. Azure AD. If you decide to use this, the AWS CLI v2.0 includes an option to create a named profile that makes it easy to associate an SSO session with your current CLI session and assume an IAM role. Know that you must assume a role prior to running kubectl as the IAM role is used to determine the user's Kubernetes RBAC group. Additional Resources \u00b6 rbac.dev A list of additional resources, including blogs and tools, for Kubernetes RBAC Pods Identities \u00b6 Certain applications that run within a Kubernetes cluster need permission to call the Kubernetes API to function properly. For example, the AWS Load Balancer Controller needs to be able to list a Service's Endpoints. The controller also needs to be able to invoke AWS APIs to provision and configure an ALB. In this section we will explore the best practices for assigning rights and privileges to Pods. Kubernetes Service Accounts \u00b6 A service account is a special type of object that allows you to assign a Kubernetes RBAC role to a pod. A default service account is created automatically for each Namespace within a cluster. When you deploy a pod into a Namespace without referencing a specific service account, the default service account for that Namespace will automatically get assigned to the Pod and the Secret, i.e. the service account (JWT) token for that service account, will get mounted to the pod as a volume at /var/run/secrets/kubernetes.io/serviceaccount . Decoding the service account token in that directory will reveal the following metadata: { \"iss\" : \"kubernetes/serviceaccount\" , \"kubernetes.io/serviceaccount/namespace\" : \"default\" , \"kubernetes.io/serviceaccount/secret.name\" : \"default-token-5pv4z\" , \"kubernetes.io/serviceaccount/service-account.name\" : \"default\" , \"kubernetes.io/serviceaccount/service-account.uid\" : \"3b36ddb5-438c-11ea-9438-063a49b60fba\" , \"sub\" : \"system:serviceaccount:default:default\" } The default service account has the following permissions to the Kubernetes API. apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : annotations : rbac.authorization.kubernetes.io/autoupdate : \"true\" creationTimestamp : \"2020-01-30T18:13:25Z\" labels : kubernetes.io/bootstrapping : rbac-defaults name : system:discovery resourceVersion : \"43\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery uid : 350d2ab8-438c-11ea-9438-063a49b60fba rules : - nonResourceURLs : - /api - /api/* - /apis - /apis/* - /healthz - /openapi - /openapi/* - /version - /version/ verbs : - get This role authorizes unauthenticated and authenticated users to read API information and is deemed safe to be publicly accessible. When an application running within a Pod calls the Kubernetes APIs, the Pod needs to be assigned a service account that explicitly grants it permission to call those APIs. Similar to guidelines for user access, the Role or ClusterRole bound to a service account should be restricted to the API resources and methods that the application needs to function and nothing else. To use a non-default service account simply set the spec.serviceAccountName field of a Pod to the name of the service account you wish to use. For additional information about creating service accounts, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions . Note Prior to Kubernetes 1.24, Kubernetes would automatically create a secret for each a service account. This secret was mounted to the pod at /var/run/secrets/kubernetes.io/serviceaccount and would be used by the pod to authenticate to the Kubernetes API server. In Kubernetes 1.24, a service account token is dynamically generated when the pod runs and is only valid for an hour by default. A secret for the service account will not be created. If you have an application that runs outside the cluster that needs to authenticate to the Kubernetes API, e.g. Jenkins, you will need to create a secret of type kubernetes.io/service-account-token along with an annotation that references the service account such as metadata.annotations.kubernetes.io/service-account.name: <SERVICE_ACCOUNT_NAME> . Secrets created in this way do not expire. IAM Roles for Service Accounts (IRSA) \u00b6 IRSA is a feature that allows you to assign an IAM role to a Kubernetes service account. It works by leveraging a Kubernetes feature known as Service Account Token Volume Projection . When Pods are configured with a Service Account that references an IAM Role, the Kubernetes API server will call the public OIDC discovery endpoint for the cluster on startup. The endpoint cryptographically signs the OIDC token issued by Kubernetes and the resulting token mounted as a volume. This signed token allows the Pod to call the AWS APIs associated IAM role. When an AWS API is invoked, the AWS SDKs calls sts:AssumeRoleWithWebIdentity . After validating the token's signature, IAM exchanges the Kubernetes issued token for a temporary AWS role credential. Decoding the (JWT) token for IRSA will produce output similar to the example you see below: { \"aud\" : [ \"sts.amazonaws.com\" ], \"exp\" : 1582306514 , \"iat\" : 1582220114 , \"iss\" : \"https://oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"kubernetes.io\" : { \"namespace\" : \"default\" , \"pod\" : { \"name\" : \"alpine-57b5664646-rf966\" , \"uid\" : \"5a20f883-5407-11ea-a85c-0e62b7a4a436\" }, \"serviceaccount\" : { \"name\" : \"s3-read-only\" , \"uid\" : \"a720ba5c-5406-11ea-9438-063a49b60fba\" } }, \"nbf\" : 1582220114 , \"sub\" : \"system:serviceaccount:default:s3-read-only\" } This particular token grants the Pod view-only privileges to S3. When the application attempts to read from S3, the token is exchanged for a temporary set of IAM credentials that resembles this: { \"AssumedRoleUser\" : { \"AssumedRoleId\" : \"AROA36C6WWEJULFUYMPB6:abc\" , \"Arn\" : \"arn:aws:sts::123456789012:assumed-role/eksctl-winterfell-addon-iamserviceaccount-de-Role1-1D61LT75JH3MB/abc\" }, \"Audience\" : \"sts.amazonaws.com\" , \"Provider\" : \"arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"SubjectFromWebIdentityToken\" : \"system:serviceaccount:default:s3-read-only\" , \"Credentials\" : { \"SecretAccessKey\" : \"ORJ+8Adk+wW+nU8FETq7+mOqeA8Z6jlPihnV8hX1\" , \"SessionToken\" : \"FwoGZXIvYXdzEGMaDMLxAZkuLpmSwYXShiL9A1S0X87VBC1mHCrRe/pB2oes+l1eXxUYnPJyC9ayOoXMvqXQsomq0xs6OqZ3vaa5Iw1HIyA4Cv1suLaOCoU3hNvOIJ6C94H1vU0siQYk7DIq9Av5RZe+uE2FnOctNBvYLd3i0IZo1ajjc00yRK3v24VRq9nQpoPLuqyH2jzlhCEjXuPScPbi5KEVs9fNcOTtgzbVf7IG2gNiwNs5aCpN4Bv/Zv2A6zp5xGz9cWj2f0aD9v66vX4bexOs5t/YYhwuwAvkkJPSIGvxja0xRThnceHyFHKtj0H+bi/PWAtlI8YJcDX69cM30JAHDdQH+ltm/4scFptW1hlvMaP+WReCAaCrsHrAT+yka7ttw5YlUyvZ8EPog+j6fwHlxmrXM9h1BqdikomyJU00gm1++FJelfP+1zAwcyrxCnbRl3ARFrAt8hIlrT6Vyu8WvWtLxcI8KcLcJQb/LgkW+sCTGlYcY8z3zkigJMbYn07ewTL5Ss7LazTJJa758I7PZan/v3xQHd5DEc5WBneiV3iOznDFgup0VAMkIviVjVCkszaPSVEdK2NU7jtrh6Jfm7bU/3P6ZG+CkyDLIa8MBn9KPXeJd/y+jTk5Ii+fIwO/+mDpGNUribg6TPxhzZ8b/XdZO1kS1gVgqjXyVC+M+BRBh6C4H21w/eMzjCtDIpoxt5rGKL6Nu/IFMipoC4fgx6LIIHwtGYMG7SWQi7OsMAkiwZRg0n68/RqWgLzBt/4pfjSRYuk=\" , \"Expiration\" : \"2020-02-20T18:49:50Z\" , \"AccessKeyId\" : \"ASIA36C6WWEJUMHA3L7Z\" } } A mutating webhook that runs as part of the EKS control plane injects the AWS Role ARN and the path to a web identity token file into the Pod as environment variables. These values can also be supplied manually. AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token The kubelet will automatically rotate the projected token when it is older than 80% of its total TTL, or after 24 hours. The AWS SDKs are responsible for reloading the token when it rotates. For further information about IRSA, see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html . Recommendations \u00b6 Update the aws-node daemonset to use IRSA \u00b6 At present, the aws-node daemonset is configured to use a role assigned to the EC2 instances to assign IPs to pods. This role includes several AWS managed policies, e.g. AmazonEKS_CNI_Policy and EC2ContainerRegistryReadOnly that effectively allow all pods running on a node to attach/detach ENIs, assign/unassign IP addresses, or pull images from ECR. Since this presents a risk to your cluster, it is recommended that you update the aws-node daemonset to use IRSA. A script for doing this can be found in the repository for this guide. Restrict access to the instance profile assigned to the worker node \u00b6 When you use IRSA, it updates the credential chain of the pod to use the IRSA token, however, the pod can still inherit the rights of the instance profile assigned to the worker node . When using IRSA, it is strongly recommended that you block access instance metadata to minimize the blast radius of a breach. Caution Blocking access to instance metadata will prevent pods that do not use IRSA from inheriting the role assigned to the worker node. You can block access to instance metadata by requiring the instance to use IMDSv2 only and updating the hop count to 1 as in the example below. You can also include these settings in the node group's launch template. Do not disable instance metadata as this will prevent components like the node termination handler and other things that rely on instance metadata from working properly. aws ec2 modify-instance-metadata-options --instance-id <value> --http-tokens required --http-put-response-hop-limit 1 If you are using Terraform to create launch templates for use with Managed Node Groups, add the metadata block to configure the hop count as seen in this code snippet: resource \"aws_launch_template\" \"foo\" { name = \"foo\" ... metadata_options { http_endpoint = \"enabled\" http_tokens = \"required\" http_put_response_hop_limit = 1 instance_metadata_tags = \"enabled\" } ... You can also block a pod's access to EC2 metadata by manipulating iptables on the node. For further information about this method, see Limiting access to the instance metadata service . If you have an application that is using an older version of the AWS SDK that doesn't support IRSA, you should update the SDK version. Scope the IAM Role trust policy for IRSA to the service account name \u00b6 The trust policy can be scoped to a Namespace or a specific service account within a Namespace. When using IRSA it's best to make the role trust policy as explicit as possible by including the service account name. This will effectively prevent other Pods within the same Namespace from assuming the role. The CLI eksctl will do this automatically when you use it to create service accounts/IAM roles. See https://eksctl.io/usage/iamserviceaccounts/ for further information. When your application needs access to IMDS, use IMDSv2 and increase the hop limit on EC2 instances to 2 \u00b6 IMDSv2 requires you use a PUT request to get a session token. The initial PUT request has to include a TTL for the session token. Newer versions of the AWS SDKs will handle this and the renewal of said token automatically. It's also important to be aware that the default hop limit on EC2 instances is intentionally set to 1 to prevent IP forwarding. As a consequence, Pods that request a session token that are run on EC2 instances may eventually time out and fallback to using the IMDSv1 data flow. EKS adds support IMDSv2 by enabling both v1 and v2 and changing the hop limit to 2 on nodes provisioned by eksctl or with the official CloudFormation templates. Disable auto-mounting of service account tokens \u00b6 If your application doesn't need to call the Kubernetes API set the automountServiceAccountToken attribute to false in the PodSpec for your application or patch the default service account in each namespace so that it's no longer mounted to pods automatically. For example: kubectl patch serviceaccount default -p $'automountServiceAccountToken: false' Use dedicated service accounts for each application \u00b6 Each application should have its own dedicated service account. This applies to service accounts for the Kubernetes API as well as IRSA. Attention If you employ a blue/green approach to cluster upgrades instead of performing an in-place cluster upgrade, you will need to update the trust policy of each of the IRSA IAM roles with the OIDC endpoint of the new cluster. A blue/green cluster upgrade is where you create a cluster running a newer version of Kubernetes alongside the old cluster and use a load balancer or a service mesh to seamlessly shift traffic from services running on the old cluster to the new cluster. Run the application as a non-root user \u00b6 Containers run as root by default. While this allows them to read the web identity token file, running a container as root is not considered a best practice. As an alternative, consider adding the spec.securityContext.runAsUser attribute to the PodSpec. The value of runAsUser is arbitrary value. In the following example, all processes within the Pod will run under the user ID specified in the runAsUser field. apiVersion : v1 kind : Pod metadata : name : security-context-demo spec : securityContext : runAsUser : 1000 runAsGroup : 3000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 1h\" ] When you run a container as a non-root user, it prevents the container from reading the IRSA service account token because the token is assigned 0600 [root] permissions by default. If you update the securityContext for your container to include fsgroup=65534 [Nobody] it will allow the container to read the token. spec : securityContext : fsGroup : 65534 In Kubernetes 1.19 and above, this change is no longer required. Grant least privileged access to applications \u00b6 Action Hero is a utility that you can run alongside your application to identify the AWS API calls and corresponding IAM permissions your application needs to function properly. It is similar to IAM Access Advisor in that it helps you gradually limit the scope of IAM roles assigned to applications. Consult the documentation on granting least privileged access to AWS resources for further information. Review and revoke unnecessary anonymous access \u00b6 Ideally anonymous access should be disabled for all API actions. Anonymous access is granted by creating a RoleBinding or ClusterRoleBinding for the Kubernetes built-in user system:anonymous. You can use the rbac-lookup tool to identify permissions that system:anonymous user has on your cluster: ./rbac-lookup | grep -P 'system:(anonymous)|(unauthenticated)' system:anonymous cluster-wide ClusterRole/system:discovery system:unauthenticated cluster-wide ClusterRole/system:discovery system:unauthenticated cluster-wide ClusterRole/system:public-info-viewer Any role or ClusterRole other than system:public-info-viewer should not be bound to system:anonymous user or system:unauthenticated group. There may be some legitimate reasons to enable anonymous access on specific APIs. If this is the case for your cluster ensure that only those specific APIs are accessible by anonymous user and exposing those APIs without authentication doesn\u2019t make your cluster vulnerable. Prior to Kubernetes/EKS Version 1.14, system:unauthenticated group was associated to system:discovery and system:basic-user ClusterRoles by default. Note that even if you have updated your cluster to version 1.14 or higher, these permissions may still be enabled on your cluster, since cluster updates do not revoke these permissions. To check which ClusterRoles have \"system:unauthenticated\" except system:public-info-viewer you can run the following command (requires jq util): kubectl get ClusterRoleBinding -o json | jq -r '.items[] | select(.subjects[]?.name ==\"system:unauthenticated\") | select(.metadata.name != \"system:public-info-viewer\") | .metadata.name' And \"system:unauthenticated\" can be removed from all the roles except \"system:public-info-viewer\" using: kubectl get ClusterRoleBinding -o json | jq -r '.items[] | select(.subjects[]?.name ==\"system:unauthenticated\") | select(.metadata.name != \"system:public-info-viewer\") | del(.subjects[] | select(.name ==\"system:unauthenticated\"))' | kubectl apply -f - Alternatively, you can check and remove it manually by kubectl describe and kubectl edit. To check if system:unauthenticated group has system:discovery permissions on your cluster run the following command: kubectl describe clusterrolebindings system:discovery Name: system:discovery Labels: kubernetes.io/bootstrapping=rbac-defaults Annotations: rbac.authorization.kubernetes.io/autoupdate: true Role: Kind: ClusterRole Name: system:discovery Subjects: Kind Name Namespace ---- ---- --------- Group system:authenticated Group system:unauthenticated To check if system:unauthenticated group has system:basic-user permission on your cluster run the following command: kubectl describe clusterrolebindings system:basic-user Name: system:basic-user Labels: kubernetes.io/bootstrapping=rbac-defaults Annotations: rbac.authorization.kubernetes.io/autoupdate: true Role: Kind: ClusterRole Name: system:basic-user Subjects: Kind Name Namespace ---- ---- --------- Group system:authenticated Group system:unauthenticated If system:unauthenticated group is bound to system:discovery and/or system:basic-user ClusterRoles on your cluster, you should disassociate these roles from system:unauthenticated group. Edit system:discovery ClusterRoleBinding using the following command: kubectl edit clusterrolebindings system:discovery The above command will open the current definition of system:discovery ClusterRoleBinding in an editor as shown below: # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRoleBinding metadata : annotations : rbac.authorization.kubernetes.io/autoupdate : \"true\" creationTimestamp : \"2021-06-17T20:50:49Z\" labels : kubernetes.io/bootstrapping : rbac-defaults name : system:discovery resourceVersion : \"24502985\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery uid : b7936268-5043-431a-a0e1-171a423abeb6 roleRef : apiGroup : rbac.authorization.k8s.io kind : ClusterRole name : system:discovery subjects : - apiGroup : rbac.authorization.k8s.io kind : Group name : system:authenticated - apiGroup : rbac.authorization.k8s.io kind : Group name : system:unauthenticated Delete the entry for system:unauthenticated group from the \u201csubjects\u201d section in the above editor screen. Repeat the same steps for system:basic-user ClusterRoleBinding. Alternative approaches \u00b6 While IRSA is the preferred way to assign an AWS \"identity\" to a pod, it requires that you include recent version of the AWS SDKs in your application. For a complete listing of the SDKs that currently support IRSA, see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html . If you have an application that you can't immediately update with a IRSA-compatible SDK, there are several community-built solutions available for assigning IAM roles to Kubernetes pods, including kube2iam and kiam . Although AWS doesn't endorse or condone the use of these solutions, they are frequently used by the community at large to achieve similar results as IRSA.","title":"Identity and Access Management ({'name': 'English', 'build': True})"},{"location":"security/docs/iam/#identity-and-access-management","text":"Identity and Access Management (IAM) is an AWS service that performs two essential functions: Authentication and Authorization. Authentication involves the verification of a identity whereas authorization governs the actions that can be performed by AWS resources. Within AWS, a resource can be another AWS service, e.g. EC2, or an AWS principal such as an IAM User or Role . The rules governing the actions that a resource is allowed to perform are expressed as IAM policies .","title":"Identity and Access Management"},{"location":"security/docs/iam/#controlling-access-to-eks-clusters","text":"The Kubernetes project supports a variety of different strategies to authenticate requests to the kube-apiserver service, e.g. Bearer Tokens, X.509 certificates, OIDC, etc. EKS currently has native support for webhook token authentication , service account tokens , and as of February 21, 2021, OIDC authentication. The webhook authentication strategy calls a webhook that verifies bearer tokens. On EKS, these bearer tokens are generated by the AWS CLI or the aws-iam-authenticator client when you run kubectl commands. As you execute commands, the token is passed to the kube-apiserver which forwards it to the authentication webhook. If the request is well-formed, the webhook calls a pre-signed URL embedded in the token's body. This URL validates the request's signature and returns information about the user, e.g. the user's account, Arn, and UserId to the kube-apiserver. To manually generate a authentication token, type the following command in a terminal window: aws eks get-token --cluster-name <cluster_name> You can also get a token programmatically. Below is an example written in Go: package main import ( \"fmt\" \"log\" \"sigs.k8s.io/aws-iam-authenticator/pkg/token\" ) func main () { g , _ := token . NewGenerator ( false , false ) tk , err := g . Get ( \"<cluster_name>\" ) if err != nil { log . Fatal ( err ) } fmt . Println ( tk ) } The output should resemble this: { \"kind\" : \"ExecCredential\" , \"apiVersion\" : \"client.authentication.k8s.io/v1alpha1\" , \"spec\" : {}, \"status\" : { \"expirationTimestamp\" : \"2020-02-19T16:08:27Z\" , \"token\" : \"k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFKTkdSSUxLTlNSQzJXNVFBJTJGMjAyMDAyMTklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIwMDIxOVQxNTU0MjdaJlgtQW16LUV4cGlyZXM9NjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT0yMjBmOGYzNTg1ZTMyMGRkYjVlNjgzYTVjOWE0MDUzMDFhZDc2NTQ2ZjI0ZjI4MTExZmRhZDA5Y2Y2NDhhMzkz\" } } Each token starts with k8s-aws-v1. followed by a base64 encoded string. The string, when decoded, should resemble this: https://sts.amazonaws.com/?Action = GetCallerIdentity & Version = 2011 -06-15 & X-Amz-Algorithm = AWS4-HMAC-SHA256 & X-Amz-Credential = AKIAJPFRILKNSRC2W5QA%2F20200219%2Fus-east-1%2Fsts%2Faws4_request & X-Amz-Date = 20200219T155427Z & X-Amz-Expires = 60 & X-Amz-SignedHeaders = host%3Bx-k8s-aws-id & X-Amz-Signature = 220f8f3285e320ddb5e683a5c9a405301ad76546f24f28111fdad09cf648a393 The token consists of a pre-signed URL that includes an Amazon credential and signature. For additional details see https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html . The token has a time to live (TTL) of 15 minutes after which a new token will need to be generated. This is handled automatically when you use a client like kubectl , however, if you're using the Kubernetes dashboard, you will need to generate a new token and re-authenticate each time the token expires. Once the user's identity has been authenticated by the AWS IAM service, the kube-apiserver reads the aws-auth ConfigMap in the kube-system Namespace to determine the RBAC group to associate with the user. The aws-auth ConfigMap is used to create a static mapping between IAM principals, i.e. IAM Users and Roles, and Kubernetes RBAC groups. RBAC groups can be referenced in Kubernetes RoleBindings or ClusterRoleBindings. They are similar to IAM Roles in that they define a set of actions (verbs) that can be performed against a collection of Kubernetes resources (objects).","title":"Controlling Access to EKS Clusters"},{"location":"security/docs/iam/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/iam/#dont-use-a-service-account-token-for-authentication","text":"A service account token is a long-lived, static credential. If it is compromised, lost, or stolen, an attacker may be able to perform all the actions associated with that token until the service account is deleted. At times, you may need to grant an exception for applications that have to consume the Kubernetes API from outside the cluster, e.g. a CI/CD pipeline application. If such applications run on AWS infrastructure, like EC2 instances, consider using an instance profile and mapping that to a Kubernetes RBAC role in the aws-auth ConfigMap instead.","title":"Don't use a service account token for authentication"},{"location":"security/docs/iam/#employ-least-privileged-access-to-aws-resources","text":"An IAM User does not need to be assigned privileges to AWS resources to access the Kubernetes API. If you need to grant an IAM user access to an EKS cluster, create an entry in the aws-auth ConfigMap for that user that maps to a specific Kubernetes RBAC group.","title":"Employ least privileged access to AWS Resources"},{"location":"security/docs/iam/#use-iam-roles-when-multiple-users-need-identical-access-to-the-cluster","text":"Rather than creating an entry for each individual IAM User in the aws-auth ConfigMap, allow those users to assume an IAM Role and map that role to a Kubernetes RBAC group. This will be easier to maintain, especially as the number of users that require access grows. Attention When accessing the EKS cluster with the IAM entity mapped by aws-auth ConfigMap, the username described in aws-auth ConfigMap is recorded in the user field of the Kubernetes audit log. If you're using an IAM role, the actual users who assume that role aren't recorded and can't be audited. When assigning K8s RBAC permissions to an IAM role using mapRoles in aws-auth ConfigMap, you should include {{SessionName}} in your username. That way, the audit log will record the session name so you can track who the actual user assume this role along with the CloudTrail log. - rolearn : arn:aws:iam::XXXXXXXXXXXX:role/testRole username : testRole:{{SessionName}} groups : - system:masters In Kubernetes 1.20 and above, this change is no longer required, since user.extra.sessionName.0 was added to the Kubernetes audit log.","title":"Use IAM Roles when multiple users need identical access to the cluster"},{"location":"security/docs/iam/#employ-least-privileged-access-when-creating-rolebindings-and-clusterrolebindings","text":"Like the earlier point about granting access to AWS Resources, RoleBindings and ClusterRoleBindings should only include the set of permissions necessary to perform a specific function. Avoid using [\"*\"] in your Roles and ClusterRoles unless it's absolutely necessary. If you're unsure what permissions to assign, consider using a tool like audit2rbac to automatically generate Roles and binding based on the observed API calls in the Kubernetes Audit Log.","title":"Employ least privileged access when creating RoleBindings and ClusterRoleBindings"},{"location":"security/docs/iam/#make-the-eks-cluster-endpoint-private","text":"By default when you provision an EKS cluster, the API cluster endpoint is set to public, i.e. it can be accessed from the Internet. Despite being accessible from the Internet, the endpoint is still considered secure because it requires all API requests to be authenticated by IAM and then authorized by Kubernetes RBAC. That said, if your corporate security policy mandates that you restrict access to the API from the Internet or prevents you from routing traffic outside the cluster VPC, you can: Configure the EKS cluster endpoint to be private. See Modifying Cluster Endpoint Access for further information on this topic. Leave the cluster endpoint public and specify which CIDR blocks can communicate with the cluster endpoint. The blocks are effectively a whitelisted set of public IP addresses that are allowed to access the cluster endpoint. Configure public access with a set of whitelisted CIDR blocks and set private endpoint access to enabled. This will allow public access from a specific range of public IPs while forcing all network traffic between the kubelets (workers) and the Kubernetes API through the cross-account ENIs that get provisioned into the cluster VPC when the control plane is provisioned.","title":"Make the EKS Cluster Endpoint private"},{"location":"security/docs/iam/#create-the-cluster-with-a-dedicated-iam-role","text":"When you create an Amazon EKS cluster, the IAM entity user or role, such as a federated user that creates the cluster, is automatically granted system:masters permissions in the cluster's RBAC configuration. This access cannot be removed and is not managed through the aws-auth ConfigMap. Therefore it is a good idea to create the cluster with a dedicated IAM role and regularly audit who can assume this role. This role should not be used to perform routine actions on the cluster, and instead additional users should be granted access to the cluster through the aws-auth ConfigMap for this purpose. After the aws-auth ConfigMap is configured, the role can be deleted and only recreated in an emergency / break glass scenario where the aws-auth ConfigMap is corrupted and the cluster is otherwise inaccessible. This can be particularly useful in production clusters which do not usually have direct user access configured.","title":"Create the cluster with a dedicated IAM role"},{"location":"security/docs/iam/#use-tools-to-make-changes-to-the-aws-auth-configmap","text":"An improperly formatted aws-auth ConfigMap may cause you to lose access to the cluster. If you need to make changes to the ConfigMap, use a tool. eksctl The eksctl CLI includes a command for adding identity mappings to the aws-auth ConfigMap. View CLI Help: eksctl create iamidentitymapping --help Make an IAM Role a Cluster Admin: eksctl create iamidentitymapping --cluster <clusterName> --region = <region> --arn arn:aws:iam::123456:role/testing --group system:masters --username admin For more information, review eksctl docs aws-auth by keikoproj aws-auth by keikoproj includes both a cli and a go library. Download and view help CLI help: go get github.com/keikoproj/aws-auth aws-auth help Alternatively, install aws-auth with the krew plugin manager for kubectl. kubectl krew install aws-auth kubectl aws-auth Review the aws-auth docs on GitHub for more information, including the go library. AWS IAM Authenticator CLI The aws-iam-authenticator project includes a CLI for updating the ConfigMap. Download a release on GitHub. Add cluster permissions to an IAM Role: ./aws-iam-authenticator add role --rolearn arn:aws:iam::185309785115:role/lil-dev-role-cluster --username lil-dev-user --groups system:masters --kubeconfig ~/.kube/config","title":"Use tools to make changes to the aws-auth ConfigMap"},{"location":"security/docs/iam/#regularly-audit-access-to-the-cluster","text":"Who requires access is likely to change over time. Plan to periodically audit the aws-auth ConfigMap to see who has been granted access and the rights they've been assigned. You can also use open source tooling like kubectl-who-can , or rbac-lookup to examine the roles bound to a particular service account, user, or group. We'll explore this topic further when we get to the section on auditing . Additional ideas can be found in this article from NCC Group.","title":"Regularly audit access to the cluster"},{"location":"security/docs/iam/#alternative-approaches-to-authentication-and-access-management","text":"While IAM is the preferred way to authenticate users who need access to an EKS cluster, it is possible to use an OIDC identity provider such as GitHub using an authentication proxy and Kubernetes impersonation . Posts for two such solutions have been published on the AWS Open Source blog: Authenticating to EKS Using GitHub Credentials with Teleport Consistent OIDC authentication across multiple EKS clusters using kube-oidc-proxy Attention EKS natively supports OIDC authentication without using a proxy. For further information, please read the launch blog, Introducing OIDC identity provider authentication for Amazon EKS . For an example showing how to configure EKS with Dex, a popular open source OIDC provider with connectors for a variety of different authention methods, see Using Dex & dex-k8s-authenticator to authenticate to Amazon EKS . As described in the blogs, the username/group of users authenticated by an OIDC provider will appear in the Kubernetes audit log. You can also use AWS SSO to federate AWS with an external identity provider, e.g. Azure AD. If you decide to use this, the AWS CLI v2.0 includes an option to create a named profile that makes it easy to associate an SSO session with your current CLI session and assume an IAM role. Know that you must assume a role prior to running kubectl as the IAM role is used to determine the user's Kubernetes RBAC group.","title":"Alternative Approaches to Authentication and Access Management"},{"location":"security/docs/iam/#additional-resources","text":"rbac.dev A list of additional resources, including blogs and tools, for Kubernetes RBAC","title":"Additional Resources"},{"location":"security/docs/iam/#pods-identities","text":"Certain applications that run within a Kubernetes cluster need permission to call the Kubernetes API to function properly. For example, the AWS Load Balancer Controller needs to be able to list a Service's Endpoints. The controller also needs to be able to invoke AWS APIs to provision and configure an ALB. In this section we will explore the best practices for assigning rights and privileges to Pods.","title":"Pods Identities"},{"location":"security/docs/iam/#kubernetes-service-accounts","text":"A service account is a special type of object that allows you to assign a Kubernetes RBAC role to a pod. A default service account is created automatically for each Namespace within a cluster. When you deploy a pod into a Namespace without referencing a specific service account, the default service account for that Namespace will automatically get assigned to the Pod and the Secret, i.e. the service account (JWT) token for that service account, will get mounted to the pod as a volume at /var/run/secrets/kubernetes.io/serviceaccount . Decoding the service account token in that directory will reveal the following metadata: { \"iss\" : \"kubernetes/serviceaccount\" , \"kubernetes.io/serviceaccount/namespace\" : \"default\" , \"kubernetes.io/serviceaccount/secret.name\" : \"default-token-5pv4z\" , \"kubernetes.io/serviceaccount/service-account.name\" : \"default\" , \"kubernetes.io/serviceaccount/service-account.uid\" : \"3b36ddb5-438c-11ea-9438-063a49b60fba\" , \"sub\" : \"system:serviceaccount:default:default\" } The default service account has the following permissions to the Kubernetes API. apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : annotations : rbac.authorization.kubernetes.io/autoupdate : \"true\" creationTimestamp : \"2020-01-30T18:13:25Z\" labels : kubernetes.io/bootstrapping : rbac-defaults name : system:discovery resourceVersion : \"43\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery uid : 350d2ab8-438c-11ea-9438-063a49b60fba rules : - nonResourceURLs : - /api - /api/* - /apis - /apis/* - /healthz - /openapi - /openapi/* - /version - /version/ verbs : - get This role authorizes unauthenticated and authenticated users to read API information and is deemed safe to be publicly accessible. When an application running within a Pod calls the Kubernetes APIs, the Pod needs to be assigned a service account that explicitly grants it permission to call those APIs. Similar to guidelines for user access, the Role or ClusterRole bound to a service account should be restricted to the API resources and methods that the application needs to function and nothing else. To use a non-default service account simply set the spec.serviceAccountName field of a Pod to the name of the service account you wish to use. For additional information about creating service accounts, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#service-account-permissions . Note Prior to Kubernetes 1.24, Kubernetes would automatically create a secret for each a service account. This secret was mounted to the pod at /var/run/secrets/kubernetes.io/serviceaccount and would be used by the pod to authenticate to the Kubernetes API server. In Kubernetes 1.24, a service account token is dynamically generated when the pod runs and is only valid for an hour by default. A secret for the service account will not be created. If you have an application that runs outside the cluster that needs to authenticate to the Kubernetes API, e.g. Jenkins, you will need to create a secret of type kubernetes.io/service-account-token along with an annotation that references the service account such as metadata.annotations.kubernetes.io/service-account.name: <SERVICE_ACCOUNT_NAME> . Secrets created in this way do not expire.","title":"Kubernetes Service Accounts"},{"location":"security/docs/iam/#iam-roles-for-service-accounts-irsa","text":"IRSA is a feature that allows you to assign an IAM role to a Kubernetes service account. It works by leveraging a Kubernetes feature known as Service Account Token Volume Projection . When Pods are configured with a Service Account that references an IAM Role, the Kubernetes API server will call the public OIDC discovery endpoint for the cluster on startup. The endpoint cryptographically signs the OIDC token issued by Kubernetes and the resulting token mounted as a volume. This signed token allows the Pod to call the AWS APIs associated IAM role. When an AWS API is invoked, the AWS SDKs calls sts:AssumeRoleWithWebIdentity . After validating the token's signature, IAM exchanges the Kubernetes issued token for a temporary AWS role credential. Decoding the (JWT) token for IRSA will produce output similar to the example you see below: { \"aud\" : [ \"sts.amazonaws.com\" ], \"exp\" : 1582306514 , \"iat\" : 1582220114 , \"iss\" : \"https://oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"kubernetes.io\" : { \"namespace\" : \"default\" , \"pod\" : { \"name\" : \"alpine-57b5664646-rf966\" , \"uid\" : \"5a20f883-5407-11ea-a85c-0e62b7a4a436\" }, \"serviceaccount\" : { \"name\" : \"s3-read-only\" , \"uid\" : \"a720ba5c-5406-11ea-9438-063a49b60fba\" } }, \"nbf\" : 1582220114 , \"sub\" : \"system:serviceaccount:default:s3-read-only\" } This particular token grants the Pod view-only privileges to S3. When the application attempts to read from S3, the token is exchanged for a temporary set of IAM credentials that resembles this: { \"AssumedRoleUser\" : { \"AssumedRoleId\" : \"AROA36C6WWEJULFUYMPB6:abc\" , \"Arn\" : \"arn:aws:sts::123456789012:assumed-role/eksctl-winterfell-addon-iamserviceaccount-de-Role1-1D61LT75JH3MB/abc\" }, \"Audience\" : \"sts.amazonaws.com\" , \"Provider\" : \"arn:aws:iam::123456789012:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/D43CF17C27A865933144EA99A26FB128\" , \"SubjectFromWebIdentityToken\" : \"system:serviceaccount:default:s3-read-only\" , \"Credentials\" : { \"SecretAccessKey\" : \"ORJ+8Adk+wW+nU8FETq7+mOqeA8Z6jlPihnV8hX1\" , \"SessionToken\" : \"FwoGZXIvYXdzEGMaDMLxAZkuLpmSwYXShiL9A1S0X87VBC1mHCrRe/pB2oes+l1eXxUYnPJyC9ayOoXMvqXQsomq0xs6OqZ3vaa5Iw1HIyA4Cv1suLaOCoU3hNvOIJ6C94H1vU0siQYk7DIq9Av5RZe+uE2FnOctNBvYLd3i0IZo1ajjc00yRK3v24VRq9nQpoPLuqyH2jzlhCEjXuPScPbi5KEVs9fNcOTtgzbVf7IG2gNiwNs5aCpN4Bv/Zv2A6zp5xGz9cWj2f0aD9v66vX4bexOs5t/YYhwuwAvkkJPSIGvxja0xRThnceHyFHKtj0H+bi/PWAtlI8YJcDX69cM30JAHDdQH+ltm/4scFptW1hlvMaP+WReCAaCrsHrAT+yka7ttw5YlUyvZ8EPog+j6fwHlxmrXM9h1BqdikomyJU00gm1++FJelfP+1zAwcyrxCnbRl3ARFrAt8hIlrT6Vyu8WvWtLxcI8KcLcJQb/LgkW+sCTGlYcY8z3zkigJMbYn07ewTL5Ss7LazTJJa758I7PZan/v3xQHd5DEc5WBneiV3iOznDFgup0VAMkIviVjVCkszaPSVEdK2NU7jtrh6Jfm7bU/3P6ZG+CkyDLIa8MBn9KPXeJd/y+jTk5Ii+fIwO/+mDpGNUribg6TPxhzZ8b/XdZO1kS1gVgqjXyVC+M+BRBh6C4H21w/eMzjCtDIpoxt5rGKL6Nu/IFMipoC4fgx6LIIHwtGYMG7SWQi7OsMAkiwZRg0n68/RqWgLzBt/4pfjSRYuk=\" , \"Expiration\" : \"2020-02-20T18:49:50Z\" , \"AccessKeyId\" : \"ASIA36C6WWEJUMHA3L7Z\" } } A mutating webhook that runs as part of the EKS control plane injects the AWS Role ARN and the path to a web identity token file into the Pod as environment variables. These values can also be supplied manually. AWS_ROLE_ARN=arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME AWS_WEB_IDENTITY_TOKEN_FILE=/var/run/secrets/eks.amazonaws.com/serviceaccount/token The kubelet will automatically rotate the projected token when it is older than 80% of its total TTL, or after 24 hours. The AWS SDKs are responsible for reloading the token when it rotates. For further information about IRSA, see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html .","title":"IAM Roles for Service Accounts (IRSA)"},{"location":"security/docs/iam/#recommendations_1","text":"","title":"Recommendations"},{"location":"security/docs/iam/#update-the-aws-node-daemonset-to-use-irsa","text":"At present, the aws-node daemonset is configured to use a role assigned to the EC2 instances to assign IPs to pods. This role includes several AWS managed policies, e.g. AmazonEKS_CNI_Policy and EC2ContainerRegistryReadOnly that effectively allow all pods running on a node to attach/detach ENIs, assign/unassign IP addresses, or pull images from ECR. Since this presents a risk to your cluster, it is recommended that you update the aws-node daemonset to use IRSA. A script for doing this can be found in the repository for this guide.","title":"Update the aws-node daemonset to use IRSA"},{"location":"security/docs/iam/#restrict-access-to-the-instance-profile-assigned-to-the-worker-node","text":"When you use IRSA, it updates the credential chain of the pod to use the IRSA token, however, the pod can still inherit the rights of the instance profile assigned to the worker node . When using IRSA, it is strongly recommended that you block access instance metadata to minimize the blast radius of a breach. Caution Blocking access to instance metadata will prevent pods that do not use IRSA from inheriting the role assigned to the worker node. You can block access to instance metadata by requiring the instance to use IMDSv2 only and updating the hop count to 1 as in the example below. You can also include these settings in the node group's launch template. Do not disable instance metadata as this will prevent components like the node termination handler and other things that rely on instance metadata from working properly. aws ec2 modify-instance-metadata-options --instance-id <value> --http-tokens required --http-put-response-hop-limit 1 If you are using Terraform to create launch templates for use with Managed Node Groups, add the metadata block to configure the hop count as seen in this code snippet: resource \"aws_launch_template\" \"foo\" { name = \"foo\" ... metadata_options { http_endpoint = \"enabled\" http_tokens = \"required\" http_put_response_hop_limit = 1 instance_metadata_tags = \"enabled\" } ... You can also block a pod's access to EC2 metadata by manipulating iptables on the node. For further information about this method, see Limiting access to the instance metadata service . If you have an application that is using an older version of the AWS SDK that doesn't support IRSA, you should update the SDK version.","title":"Restrict access to the instance profile assigned to the worker node"},{"location":"security/docs/iam/#scope-the-iam-role-trust-policy-for-irsa-to-the-service-account-name","text":"The trust policy can be scoped to a Namespace or a specific service account within a Namespace. When using IRSA it's best to make the role trust policy as explicit as possible by including the service account name. This will effectively prevent other Pods within the same Namespace from assuming the role. The CLI eksctl will do this automatically when you use it to create service accounts/IAM roles. See https://eksctl.io/usage/iamserviceaccounts/ for further information.","title":"Scope the IAM Role trust policy for IRSA to the service account name"},{"location":"security/docs/iam/#when-your-application-needs-access-to-imds-use-imdsv2-and-increase-the-hop-limit-on-ec2-instances-to-2","text":"IMDSv2 requires you use a PUT request to get a session token. The initial PUT request has to include a TTL for the session token. Newer versions of the AWS SDKs will handle this and the renewal of said token automatically. It's also important to be aware that the default hop limit on EC2 instances is intentionally set to 1 to prevent IP forwarding. As a consequence, Pods that request a session token that are run on EC2 instances may eventually time out and fallback to using the IMDSv1 data flow. EKS adds support IMDSv2 by enabling both v1 and v2 and changing the hop limit to 2 on nodes provisioned by eksctl or with the official CloudFormation templates.","title":"When your application needs access to IMDS, use IMDSv2 and increase the hop limit on EC2 instances to 2"},{"location":"security/docs/iam/#disable-auto-mounting-of-service-account-tokens","text":"If your application doesn't need to call the Kubernetes API set the automountServiceAccountToken attribute to false in the PodSpec for your application or patch the default service account in each namespace so that it's no longer mounted to pods automatically. For example: kubectl patch serviceaccount default -p $'automountServiceAccountToken: false'","title":"Disable auto-mounting of service account tokens"},{"location":"security/docs/iam/#use-dedicated-service-accounts-for-each-application","text":"Each application should have its own dedicated service account. This applies to service accounts for the Kubernetes API as well as IRSA. Attention If you employ a blue/green approach to cluster upgrades instead of performing an in-place cluster upgrade, you will need to update the trust policy of each of the IRSA IAM roles with the OIDC endpoint of the new cluster. A blue/green cluster upgrade is where you create a cluster running a newer version of Kubernetes alongside the old cluster and use a load balancer or a service mesh to seamlessly shift traffic from services running on the old cluster to the new cluster.","title":"Use dedicated service accounts for each application"},{"location":"security/docs/iam/#run-the-application-as-a-non-root-user","text":"Containers run as root by default. While this allows them to read the web identity token file, running a container as root is not considered a best practice. As an alternative, consider adding the spec.securityContext.runAsUser attribute to the PodSpec. The value of runAsUser is arbitrary value. In the following example, all processes within the Pod will run under the user ID specified in the runAsUser field. apiVersion : v1 kind : Pod metadata : name : security-context-demo spec : securityContext : runAsUser : 1000 runAsGroup : 3000 containers : - name : sec-ctx-demo image : busybox command : [ \"sh\" , \"-c\" , \"sleep 1h\" ] When you run a container as a non-root user, it prevents the container from reading the IRSA service account token because the token is assigned 0600 [root] permissions by default. If you update the securityContext for your container to include fsgroup=65534 [Nobody] it will allow the container to read the token. spec : securityContext : fsGroup : 65534 In Kubernetes 1.19 and above, this change is no longer required.","title":"Run the application as a non-root user"},{"location":"security/docs/iam/#grant-least-privileged-access-to-applications","text":"Action Hero is a utility that you can run alongside your application to identify the AWS API calls and corresponding IAM permissions your application needs to function properly. It is similar to IAM Access Advisor in that it helps you gradually limit the scope of IAM roles assigned to applications. Consult the documentation on granting least privileged access to AWS resources for further information.","title":"Grant least privileged access to applications"},{"location":"security/docs/iam/#review-and-revoke-unnecessary-anonymous-access","text":"Ideally anonymous access should be disabled for all API actions. Anonymous access is granted by creating a RoleBinding or ClusterRoleBinding for the Kubernetes built-in user system:anonymous. You can use the rbac-lookup tool to identify permissions that system:anonymous user has on your cluster: ./rbac-lookup | grep -P 'system:(anonymous)|(unauthenticated)' system:anonymous cluster-wide ClusterRole/system:discovery system:unauthenticated cluster-wide ClusterRole/system:discovery system:unauthenticated cluster-wide ClusterRole/system:public-info-viewer Any role or ClusterRole other than system:public-info-viewer should not be bound to system:anonymous user or system:unauthenticated group. There may be some legitimate reasons to enable anonymous access on specific APIs. If this is the case for your cluster ensure that only those specific APIs are accessible by anonymous user and exposing those APIs without authentication doesn\u2019t make your cluster vulnerable. Prior to Kubernetes/EKS Version 1.14, system:unauthenticated group was associated to system:discovery and system:basic-user ClusterRoles by default. Note that even if you have updated your cluster to version 1.14 or higher, these permissions may still be enabled on your cluster, since cluster updates do not revoke these permissions. To check which ClusterRoles have \"system:unauthenticated\" except system:public-info-viewer you can run the following command (requires jq util): kubectl get ClusterRoleBinding -o json | jq -r '.items[] | select(.subjects[]?.name ==\"system:unauthenticated\") | select(.metadata.name != \"system:public-info-viewer\") | .metadata.name' And \"system:unauthenticated\" can be removed from all the roles except \"system:public-info-viewer\" using: kubectl get ClusterRoleBinding -o json | jq -r '.items[] | select(.subjects[]?.name ==\"system:unauthenticated\") | select(.metadata.name != \"system:public-info-viewer\") | del(.subjects[] | select(.name ==\"system:unauthenticated\"))' | kubectl apply -f - Alternatively, you can check and remove it manually by kubectl describe and kubectl edit. To check if system:unauthenticated group has system:discovery permissions on your cluster run the following command: kubectl describe clusterrolebindings system:discovery Name: system:discovery Labels: kubernetes.io/bootstrapping=rbac-defaults Annotations: rbac.authorization.kubernetes.io/autoupdate: true Role: Kind: ClusterRole Name: system:discovery Subjects: Kind Name Namespace ---- ---- --------- Group system:authenticated Group system:unauthenticated To check if system:unauthenticated group has system:basic-user permission on your cluster run the following command: kubectl describe clusterrolebindings system:basic-user Name: system:basic-user Labels: kubernetes.io/bootstrapping=rbac-defaults Annotations: rbac.authorization.kubernetes.io/autoupdate: true Role: Kind: ClusterRole Name: system:basic-user Subjects: Kind Name Namespace ---- ---- --------- Group system:authenticated Group system:unauthenticated If system:unauthenticated group is bound to system:discovery and/or system:basic-user ClusterRoles on your cluster, you should disassociate these roles from system:unauthenticated group. Edit system:discovery ClusterRoleBinding using the following command: kubectl edit clusterrolebindings system:discovery The above command will open the current definition of system:discovery ClusterRoleBinding in an editor as shown below: # Please edit the object below. Lines beginning with a '#' will be ignored, # and an empty file will abort the edit. If an error occurs while saving this file will be # reopened with the relevant failures. # apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRoleBinding metadata : annotations : rbac.authorization.kubernetes.io/autoupdate : \"true\" creationTimestamp : \"2021-06-17T20:50:49Z\" labels : kubernetes.io/bootstrapping : rbac-defaults name : system:discovery resourceVersion : \"24502985\" selfLink : /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Adiscovery uid : b7936268-5043-431a-a0e1-171a423abeb6 roleRef : apiGroup : rbac.authorization.k8s.io kind : ClusterRole name : system:discovery subjects : - apiGroup : rbac.authorization.k8s.io kind : Group name : system:authenticated - apiGroup : rbac.authorization.k8s.io kind : Group name : system:unauthenticated Delete the entry for system:unauthenticated group from the \u201csubjects\u201d section in the above editor screen. Repeat the same steps for system:basic-user ClusterRoleBinding.","title":"Review and revoke unnecessary anonymous access"},{"location":"security/docs/iam/#alternative-approaches","text":"While IRSA is the preferred way to assign an AWS \"identity\" to a pod, it requires that you include recent version of the AWS SDKs in your application. For a complete listing of the SDKs that currently support IRSA, see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html . If you have an application that you can't immediately update with a IRSA-compatible SDK, there are several community-built solutions available for assigning IAM roles to Kubernetes pods, including kube2iam and kiam . Although AWS doesn't endorse or condone the use of these solutions, they are frequently used by the community at large to achieve similar results as IRSA.","title":"Alternative approaches"},{"location":"security/docs/image.kr/","text":"{'name': 'English', 'build': True} \uc774\ubbf8\uc9c0 \ubcf4\uc548 \u00b6 \uacf5\uaca9\uc5d0 \ub300\ud55c \uccab \ubc88\uc9f8 \ubc29\uc5b4\uc120\uc73c\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uace0 \uc798\ubabb \uad6c\uc131\ub41c \uc774\ubbf8\uc9c0\ub85c \uc778\ud574 \uacf5\uaca9\uc790\uac00 \ucee8\ud14c\uc774\ub108 \uacbd\uacc4\ub97c \ubc97\uc5b4\ub098 \ud638\uc2a4\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8 \ud638\uc2a4\ud2b8\uc5d0 \uc788\uc73c\uba74 \uacf5\uaca9\uc790\ub294 \ubbfc\uac10\ud55c \uc815\ubcf4\uc5d0 \uc561\uc138\uc2a4\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \ub610\ub294 AWS \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uce21\uba74\uc73c\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \uc774\ub7ec\ud55c \uc77c\uc774 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 \ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0 \ub9cc\ub4e4\uae30 \u00b6 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0\uc11c \ubd88\ud544\uc694\ud55c \ubc14\uc774\ub108\ub9ac\ub97c \ubaa8\ub450 \uc81c\uac70\ud558\uc5ec \uc2dc\uc791\ud569\ub2c8\ub2e4. Dockerhub\uc758 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uac01 \ucee8\ud14c\uc774\ub108 \ub808\uc774\uc5b4\uc758 \ucf58\ud150\uce20\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub294 Dive \uc640 \uac19\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \uac80\uc0ac\ud558\uc138\uc694. \uad8c\ud55c\uc744 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c SETUID \ubc0f SETGID \ube44\ud2b8\uac00 \uc788\ub294 \ubaa8\ub4e0 \ubc14\uc774\ub108\ub9ac\ub97c \uc81c\uac70\ud558\uace0 \uc0ac\uc545\ud55c \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 nc \ubc0f curl\uacfc \uac19\uc740 \ubaa8\ub4e0 \uc178 \ubc0f \uc720\ud2f8\ub9ac\ud2f0\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec SETUID \ubc0f SETGID \ube44\ud2b8\uac00 \uc788\ub294 \ud30c\uc77c\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc3e\uae30 / -perm /6000 -type f -exec ls -ld {} \\; \uc774\ub7ec\ud55c \ud30c\uc77c\uc5d0\uc11c \ud2b9\uc218 \uad8c\ud55c\uc744 \uc81c\uac70\ud558\ub824\uba74 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0 \ub2e4\uc74c \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. RUN find / -xdev -perm /6000 -type f -exec chmod as {} \\; || \uc9c4\uc2e4 \uad6c\uc5b4\uccb4\ub85c \uc774\uac83\uc740 \uc774\ubbf8\uc9c0\uc758 \uc1a1\uacf3\ub2c8\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub2e8\uacc4 \ube4c\ub4dc \uc0ac\uc6a9 \u00b6 \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc885\uc885 \uc5f0\uc18d \ud1b5\ud569 \uc8fc\uae30\uc758 \uc77c\ubd80\ub97c \uc790\ub3d9\ud654\ud558\uae30 \uc704\ud574 \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ub9b0\ud2b8\ud558\uac70\ub098 \uc815\uc801 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac1c\ubc1c\uc790\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uc9c0 \uc54a\uace0 \uac70\uc758 \uc989\uac01\uc801\uc778 \ud53c\ub4dc\ubc31\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub294 \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ud478\uc2dc\ub418\ub294 \ucd5c\uc885 \uc774\ubbf8\uc9c0\uc758 \ud06c\uae30\ub97c \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubcf4\uc548 \uad00\uc810\uc5d0\uc11c \ub9e4\ub825\uc801\uc785\ub2c8\ub2e4. \ube4c\ub4dc \ub3c4\uad6c \ubc0f \uae30\ud0c0 \uc678\ubd80 \ubc14\uc774\ub108\ub9ac\uac00 \uc5c6\ub294 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \uc774\ubbf8\uc9c0\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \uc904\uc5ec \ubcf4\uc548 \uc0c1\ud0dc\ub97c \uac1c\uc120\ud569\ub2c8\ub2e4. \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://docs.docker.com/develop/develop-images/multistage-build/ . \ucde8\uc57d\uc810\uc774 \uc788\ub294\uc9c0 \uc774\ubbf8\uc9c0\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc2a4\uce94 \u00b6 \uac00\uc0c1 \uba38\uc2e0\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \ucde8\uc57d\uc131\uc774 \uc788\ub294 \ubc14\uc774\ub108\ub9ac \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud3ec\ud568\ud558\uac70\ub098 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ucde8\uc57d\uc131\uc744 \uac1c\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc545\uc6a9\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc774\ubbf8\uc9c0 \uc2a4\uce90\ub108\ub85c \uc774\ubbf8\uc9c0\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc2a4\uce94\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Amazon ECR\uc5d0 \uc800\uc7a5\ub41c \uc774\ubbf8\uc9c0\ub294 \ud478\uc2dc \ub610\ub294 \uc628\ub514\ub9e8\ub4dc(24\uc2dc\uac04 \ub3d9\uc548 \ud55c \ubc88)\ub85c \uc2a4\uce94\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ECR\uc740 \ud604\uc7ac \uc624\ud508 \uc18c\uc2a4 \uc774\ubbf8\uc9c0 \uc2a4\uce90\ub2dd \uc194\ub8e8\uc158\uc778 Clair \ub97c \ud65c\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0\ub97c \uc2a4\uce94\ud55c \ud6c4 \uacb0\uacfc\ub294 EventBridge\uc758 ECR\uc5d0 \ub300\ud55c \uc774\ubca4\ud2b8 \uc2a4\ud2b8\ub9bc\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. ECR \ucf58\uc194 \ub0b4\uc5d0\uc11c \uac80\uc0ac \uacb0\uacfc\ub97c \ubcfc \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. HIGH \ub610\ub294 CRITICAL \ucde8\uc57d\uc131\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\ub294 \uc0ad\uc81c\ud558\uac70\ub098 \ub2e4\uc2dc \ube4c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc30\ud3ec\ub41c \uc774\ubbf8\uc9c0\uc5d0 \ucde8\uc57d\uc810\uc774 \ubc1c\uc0dd\ud558\uba74 \uac00\ub2a5\ud55c \ud55c \ube68\ub9ac \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \ucde8\uc57d\uc131\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\uac00 \ubc30\ud3ec\ub41c \uc704\uce58\ub97c \uc544\ub294 \uac83\uc740 \ud658\uacbd\uc744 \uc548\uc804\ud558\uac8c \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uc9c1\uc811 \uad6c\ucd95\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ubcf8 \uc81c\uacf5 \uae30\ub2a5\uacfc \uae30\ud0c0 \uace0\uae09 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uba87 \uac00\uc9c0 \uc0c1\uc6a9 \uc81c\ud488\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. \uc575\ucee4 Palo Alto - \ud504\ub9ac\uc988\ub9c8 \ud074\ub77c\uc6b0\ub4dc(twistcli) \uc544\ucfe0\uc544 \ucfe0\ubca0\uc774 \ud2b8\ub9ac\ube44 Snyk Kubernetes \uc720\ud6a8\uc131 \uac80\uc0ac \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uc5d0 \uc2ec\uac01\ud55c \ucde8\uc57d\uc131\uc774 \uc5c6\ub294\uc9c0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac80\uc99d \uc6f9\ud6c4\ud06c\ub294 Kubernetes API \uc774\uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc6f9\ud6c4\ud06c\uc5d0 \uc815\uc758\ub41c \uc720\ud6a8\uc131 \uac80\uc0ac \uae30\uc900\uc744 \uc900\uc218\ud558\uc9c0 \uc54a\ub294 \uc694\uccad\uc744 \uac70\ubd80\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub294 ECR describeImageScanFindings API\ub97c \ud638\ucd9c\ud558\ub294 \uc11c\ubc84\ub9ac\uc2a4 \uc6f9\ud6c4\ud06c\uc758 \uc608\uc785\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uce58\uba85\uc801\uc778 \ucde8\uc57d\uc810\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ucde8\uc57d\uc810\uc774 \ubc1c\uacac\ub418\uba74 \ud3ec\ub4dc\uac00 \uac70\ubd80\ub418\uace0 CVE \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \uba54\uc2dc\uc9c0\uac00 \uc774\ubca4\ud2b8\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4. ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c IAM \uc815\ucc45 \uc0dd\uc131 \u00b6 \uc624\ub298\ub0a0 \uc870\uc9c1\uc5d0\uc11c \uacf5\uc720 AWS \uacc4\uc815 \ub0b4\uc5d0\uc11c \ub3c5\ub9bd\uc801\uc73c\ub85c \uc6b4\uc601\ub418\ub294 \uc5ec\ub7ec \uac1c\ubc1c \ud300\uc744 \ubcf4\uc720\ud558\ub294 \uac83\uc740 \ub4dc\ubb38 \uc77c\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud300\uc774 \uc790\uc0b0\uc744 \uacf5\uc720\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uac01 \ud300\uc774 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc77c\ub828\uc758 IAM \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uad6c\ud604\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc740 ECR \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc720\uc0ac\ud55c \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud568\uaed8 \uadf8\ub8f9\ud654\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud300 A\uc758 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 team-a/\ub85c \uc2dc\uc791\ud558\uace0 \ud300 B\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 team-b/ \uc811\ub450\uc0ac\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. { \"\ubc84\uc804\" : \"2012-10-17\" , \"\uc9c4\uc220\uc11c\" : [ { \"\uc2dc\ub4dc\" : \"AllowPushPull\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ecr:GetDownloadUrlForLayer\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" , \"ecr:PutImage\" , \"ecr:InitiateLayerUpload\" , \"ecr:UploadLayerPart\" , \"ecr:CompleteLayerUpload\" ], \"\uc790\uc6d0\" : [ \"arn:aws:ecr:<\uc9c0\uc5ed>:<account_id>:repository/team-a/*\" ] } ] } ECR \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0ac\uc6a9 \uace0\ub824 \u00b6 ECR API\uc5d0\ub294 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c \uc694\uccad\uc774 IAM\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uace0 \uad8c\ud55c\uc774 \uc788\ub294 \ud55c \uc778\ud130\ub137\uc5d0\uc11c ECR \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 VPC\uc5d0 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774(IGW)\uac00 \uc5c6\ub294 \uc0cc\ub4dc\ubc15\uc2a4 \ud658\uacbd\uc5d0\uc11c \uc791\ub3d9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 ECR\uc6a9 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud558\uba74 \uc778\ud130\ub137\uc744 \ud1b5\ud574 \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud558\ub294 \ub300\uc2e0 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub97c \ud1b5\ud574 ECR API\uc5d0 \ube44\uacf5\uac1c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://docs.aws.amazon.com/AmazonECR/latest/userguide/vpc-endpoints.html\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. ECR\uc5d0 \ub300\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45 \uad6c\ud604 \u00b6 \uc5d0 \ub300\ud55c \uae30\ubcf8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc740 \ub9ac\uc804 \ub0b4\uc758 \ubaa8\ub4e0 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uacf5\uaca9\uc790/\ub0b4\ubd80\uc790\uac00 \ub370\uc774\ud130\ub97c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c \ud328\ud0a4\uc9d5\ud558\uace0 \ub2e4\ub978 AWS \uacc4\uc815\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub85c \ud478\uc2dc\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc720\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c API \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c \uc815\ucc45\uc740 \uacc4\uc815\uc758 \ubaa8\ub4e0 AWS \uc6d0\uce59\uc774 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. { \"\uc9c4\uc220\uc11c\" : [ { \"\uc2dc\ub4dc\" : \"LimitECRAccess\" , \"\uad50\uc7a5\" : \"*\" , \"\uc561\uc158\" : \"*\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\ub9ac\uc18c\uc2a4\" : \"arn:aws:ecr:<\uc9c0\uc5ed>:<account_id>:repository/*\" } ] } AWS \uc870\uc9c1\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc IAM \uc6d0\uce59\uc5d0 \uc758\ud55c \uc774\ubbf8\uc9c0 \ud478\uc2dc/\ud480\ub9c1\uc744 \ubc29\uc9c0\ud558\ub294 \uc0c8\ub85c\uc6b4 'PrincipalOrgID' \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\ub294 \uc870\uac74\uc744 \uc124\uc815\ud558\uc5ec \uc774\ub97c \ub354\uc6b1 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 aws:PrincipalOrgID \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. com.amazonaws.<region>.ecr.dkr \ubc0f com.amazonaws.<region>.ecr.api \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub450\uc5d0 \ub3d9\uc77c\ud55c \uc815\ucc45\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4 . EKS\ub294 ECR\uc5d0\uc11c kube-proxy, coredns \ubc0f aws-node\uc5d0 \ub300\ud55c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ubbc0\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uacc4\uc815 ID(\uc608: 602401143452.dkr.ecr.us-west-2.amazonaws.com/* )\ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc758 \ub9ac\uc18c\uc2a4 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud558\uac70\ub098 \"*\"\uc5d0\uc11c \uac00\uc838\uc624\uae30\ub97c \ud5c8\uc6a9\ud558\uace0 \uacc4\uc815 ID\uc5d0 \ub300\ud55c \ud478\uc2dc\ub97c \uc81c\ud55c\ud558\ub3c4\ub85d \uc815\ucc45\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ud45c\uc5d0\ub294 EKS \uc774\ubbf8\uc9c0\uac00 \ud310\ub9e4\ub418\ub294 AWS \uacc4\uc815\uacfc \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc804 \uac04\uc758 \ub9e4\ud551\uc774 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\uc88c \ubc88\ud638 \uc9c0\uc5ed 602401143452 \uc544\ub798 \ub098\uc5f4\ub41c \uc9c0\uc5ed\uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc0c1\uc5c5 \uc9c0\uc5ed 800184023465 \ud64d\ucf69 558608220178 \ubc14 918309763551 BJS 961992271922 ZHY \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45 \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec Amazon ECR \uc561\uc138\uc2a4 \uc81c\uc5b4 . ECR\uc5d0 \ub300\ud55c \uc218\uba85 \uc8fc\uae30 \uc815\ucc45 \uad6c\ud604 \u00b6 NIST \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud14c\uc774\ub108 \ubcf4\uc548 \uac00\uc774\ub4dc \ub294 \"\ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc624\ub798\ub41c \uc774\ubbf8\uc9c0\"\uc758 \uc704\ud5d8\uc5d0 \ub300\ud574 \uacbd\uace0\ud569\ub2c8\ub2e4. \ucde8\uc57d\ud558\uace0 \uc624\ub798\ub41c \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ud328\ud0a4\uc9c0\uac00 \ud3ec\ud568\ub41c \uc774\ubbf8\uc9c0\ub294 \uc6b0\ubc1c\uc801\uc778 \ubc30\ud3ec \ubc0f \ub178\ucd9c\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\ub294 \uc774\ubbf8\uc9c0 \ub9cc\ub8cc \uc2dc\uae30\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \uc124\uc815\ud558\ub294 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS \uacf5\uc2dd \ubb38\uc11c \uc5d0\ub294 \ud14c\uc2a4\ud2b8 \uaddc\uce59\uc744 \uc124\uc815\ud558\uace0 \ud3c9\uac00\ud55c \ub2e4\uc74c \uc801\uc6a9\ud558\ub294 \ubc29\ubc95\uc774 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \ud544\ud130\ub9c1\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uacf5\uc2dd \ubb38\uc11c \uc5d0\ub294 \uba87 \uac00\uc9c0 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45 \uc608\uc81c \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc5f0\ub839 \ub610\ub294 \uac1c\uc218\ub85c \ud544\ud130\ub9c1 \ud0dc\uadf8 \ub610\ub294 \ud0dc\uadf8\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc740 \uc774\ubbf8\uc9c0\ub85c \ud544\ud130\ub9c1 \uc5ec\ub7ec \uaddc\uce59 \ub610\ub294 \ub2e8\uc77c \uaddc\uce59\uc5d0\uc11c \uc774\ubbf8\uc9c0 \ud0dc\uadf8\ub85c \ud544\ud130\ub9c1 \uacbd\uace0 \uc7a5\uae30 \uc2e4\ud589 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc774\ubbf8\uc9c0\uac00 ECR\uc5d0\uc11c \uc81c\uac70\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc7ac\ubc30\ud3ec\ub418\uac70\ub098 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub420 \ub54c \uc774\ubbf8\uc9c0 \uac00\uc838\uc624\uae30 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c \ucc38\uc870\ud558\ub294 \ubc30\ud3ec \ubc0f \uc774\ubbf8\uc9c0\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uace0 \ub9b4\ub9ac\uc2a4/\ubc30\ud3ec \ube48\ub3c4\ub97c \uc124\uba85\ud558\ub294 [ \uc774\ubbf8\uc9c0 ] \ub9cc\ub8cc \uaddc\uce59\uc744 \ud56d\uc0c1 \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uc88b\uc740 CI/CD \uc0ac\ub840\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc120\ubcc4\ub41c \uc774\ubbf8\uc9c0 \uc138\ud2b8 \ub9cc\ub4e4\uae30 \u00b6 \uac1c\ubc1c\uc790\uac00 \uc790\uc2e0\uc758 \uc774\ubbf8\uc9c0\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ub300\uc2e0 \uc870\uc9c1\uc758 \ub2e4\uc591\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ud0dd\uc5d0 \ub300\ud574 \uac80\uc99d\ub41c \uc774\ubbf8\uc9c0 \uc138\ud2b8\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud568\uc73c\ub85c\uc368 \uac1c\ubc1c\uc790\ub294 Dockerfile\uc744 \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6b0\uc9c0 \uc54a\uace0 \ucf54\ub4dc \uc791\uc131\uc5d0 \uc9d1\uc911\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc774 \ub9c8\uc2a4\ud130\uc5d0 \ubcd1\ud569\ub418\uba74 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc740 \uc790\uc0b0\uc744 \uc790\ub3d9\uc73c\ub85c \ucef4\ud30c\uc77c\ud558\uace0 \uc544\ud2f0\ud329\ud2b8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ud558\uace0 \uc544\ud2f0\ud329\ud2b8\ub97c ECR\uacfc \uac19\uc740 Docker \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub85c \ud478\uc2dc\ud558\uae30 \uc804\uc5d0 \uc801\uc808\ud55c \uc774\ubbf8\uc9c0\uc5d0 \ubcf5\uc0ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c\ud55c \uac1c\ubc1c\uc790\uac00 \uc790\uc2e0\uc758 Dockerfile\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uae30\ubcf8 \uc774\ubbf8\uc9c0 \uc9d1\ud569\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\uc0c1\uc801\uc73c\ub85c\ub294 a) \uc774\ubbf8\uc9c0\uc5d0 \ubb34\uc5c7\uc774 \uc788\ub294\uc9c0 \ud56d\uc0c1 \uc54c \uc218 \uc5c6\uace0 b) [ a five ] ( https://www.kennasecurity.com/blog/one-fifth-of -the-most-used-docker-containers-have-at-least-one-critical-vulnerability/ ) \uc0c1\uc704 1000\uac1c \uc774\ubbf8\uc9c0 \uc911 \ucde8\uc57d\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\uc640 \ucde8\uc57d\uc810 \ubaa9\ub85d\uc740 https://vulnerablecontainers.org/\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ud558\ub824\uba74 Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud558\uc2ed\uc2dc\uc624. \u00b6 \ud3ec\ub4dc \ubcf4\uc548 \uc139\uc158\uc5d0\uc11c \uc5b8\uae09\ud588\ub4ef\uc774 \ucee8\ud14c\uc774\ub108\ub97c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \uc774\uac83\uc744 podSpec\uc758 \uc77c\ubd80\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. USER \uc9c0\uc2dc\uc5b4 \ub294 USER \uc9c0\uc2dc\uc5b4 \ub4a4\uc5d0 \ub098\ud0c0\ub098\ub294 RUN , ENTRYPOINT \ub610\ub294 CMD \uba85\ub839\uc744 \uc2e4\ud589\ud560 \ub54c \uc0ac\uc6a9\ud560 UID\ub97c \uc124\uc815\ud569\ub2c8\ub2e4 . Dockerfile \ub9b0\ud2b8 \u00b6 Linting\uc744 \uc0ac\uc6a9\ud558\uc5ec Dockerfile\uc774 \uc0ac\uc804 \uc815\uc758\ub41c \uc9c0\uce68 \uc138\ud2b8\ub97c \uc900\uc218\ud558\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc608: 'USER' \uc9c0\uc2dc\ubb38 \ud3ec\ud568 \ub610\ub294 \ubaa8\ub4e0 \uc774\ubbf8\uc9c0\uc5d0 \ud0dc\uadf8\uac00 \uc9c0\uc815\ub418\uc5b4\uc57c \ud558\ub294 \uc694\uad6c \uc0ac\ud56d). dockerfile_lint \ub294 RedHat\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub85c \uc77c\ubc18\uc801\uc778 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ud655\uc778\ud558\uace0 Dockerfile \ub9b0\ud305\uc744 \uc704\ud55c \uc790\uccb4 \uaddc\uce59\uc744 \ube4c\ub4dc\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uaddc\uce59 \uc5d4\uc9c4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uaddc\uce59\uc744 \uc704\ubc18\ud558\ub294 Dockerfile\ub85c \ube4c\ub4dc\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \uc2e4\ud328\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c CI \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \ud1b5\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2a4\ud06c\ub798\uce58\uc5d0\uc11c \uc774\ubbf8\uc9c0 \ube4c\ub4dc \u00b6 \uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc\ud560 \ub54c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \uc904\uc774\ub294 \uac83\uc774 \uc8fc\uc694 \ubaa9\ud45c\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud55c \uc774\uc0c1\uc801\uc778 \ubc29\ubc95\uc740 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5c6\ub294 \ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\ud589\ud788 Docker\uc5d0\ub294 scratch \uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uc0dd\uc131\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. Go\uc640 \uac19\uc740 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c \uc608\uc81c\uc640 \uac19\uc774 \uc815\uc801 \ub9c1\ud06c \ubc14\uc774\ub108\ub9ac\ub97c \ub9cc\ub4e4\uace0 Dockerfile\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ############################ # STEP 1 \uc2e4\ud589 \uac00\ub2a5\ud55c \ubc14\uc774\ub108\ub9ac \ube4c\ub4dc ############################ FROM golang:\uc54c\ud30c\uc778 AS \ube4c\ub354 # git\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. # \uc885\uc18d\uc131\uc744 \uac00\uc838\uc624\ub824\uba74 Git\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. RUN apk \uc5c5\ub370\uc774\ud2b8 && apk add --no-cache git WORKDIR $GOPATH/src/mypackage/myapp/ \uc0ac\ubcf8 . . # \uc885\uc18d\uc131\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. # go get\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc2e4\ud589 -d -v\ub97c \uc5bb\uc73c\uc2ed\uc2dc\uc624. # \ubc14\uc774\ub108\ub9ac\ub97c \ube4c\ub4dc\ud569\ub2c8\ub2e4. \uc2e4\ud589 go build -o /go/bin/hello ############################ # STEP 2 \uc791\uc740 \uc774\ubbf8\uc9c0 \uad6c\ucd95 ############################ \ucc98\uc74c \ubd80\ud130 # \uc815\uc801 \uc2e4\ud589 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud569\ub2c8\ub2e4. \ubcf5\uc0ac --from=\ube4c\ub354 /go/bin/hello /go/bin/hello # hello \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc9c4\uc785\uc810 [ \"/go/bin/hello\" ] \uc774\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c\ub9cc \uad6c\uc131\ub41c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uac00 \uc0dd\uc131\ub418\uc5b4 \ub9e4\uc6b0 \uc548\uc804\ud569\ub2c8\ub2e4. ECR\uacfc \ud568\uaed8 \ubd88\ubcc0 \ud0dc\uadf8 \uc0ac\uc6a9 \u00b6 \ubd88\ubcc0 \ud0dc\uadf8 \uc774\ubbf8\uc9c0 \ud0dc\uadf8\ub97c \uac15\uc81c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ud478\uc2dc\ud560 \ub54c\ub9c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uacf5\uaca9\uc790\uac00 \uc774\ubbf8\uc9c0\uc758 \ud0dc\uadf8\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uace0 \uc774\ubbf8\uc9c0\ub97c \uc545\uc131 \ubc84\uc804\uc73c\ub85c \ub36e\uc5b4\uc4f0\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774\ubbf8\uc9c0\ub97c \uc27d\uace0 \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ubbf8\uc9c0\uc5d0 \uc11c\uba85\ud558\uc138\uc694 \u00b6 Docker\uac00 \ucc98\uc74c \ub3c4\uc785\ub418\uc5c8\uc744 \ub54c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ud655\uc778\ud558\uae30 \uc704\ud55c \uc554\ud638\ud654 \ubaa8\ub378\uc774 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. v2\uc5d0\uc11c Docker\ub294 \ub2e4\uc774\uc81c\uc2a4\ud2b8\ub97c \uc774\ubbf8\uc9c0 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc774\ubbf8\uc9c0\uc758 \uad6c\uc131\uc744 \ud574\uc2dc\ud558\uace0 \ud574\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uc758 ID\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc11c\uba85\uc774 \ud65c\uc131\ud654\ub418\uba74 [ Docker ] \uc5d4\uc9c4\uc774 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc758 \uc11c\uba85\uc744 \ud655\uc778\ud558\uc5ec \ucf58\ud150\uce20\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc18c\uc2a4\uc5d0\uc11c \uc0dd\uc131\ub418\uc5c8\uace0 \ubcc0\uc870\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uac01 \ub808\uc774\uc5b4\uac00 \ub2e4\uc6b4\ub85c\ub4dc\ub41c \ud6c4 \uc5d4\uc9c4\uc740 \ub808\uc774\uc5b4\uc758 \ub2e4\uc774\uc81c\uc2a4\ud2b8\ub97c \ud655\uc778\ud558\uc5ec \ucf58\ud150\uce20\uac00 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 \uc9c0\uc815\ub41c \ucf58\ud150\uce20\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc11c\uba85\uc744 \uc0ac\uc6a9\ud558\uba74 \uc774\ubbf8\uc9c0\uc640 \uad00\ub828\ub41c \ub514\uc9c0\ud138 \uc11c\uba85 \ud655\uc778\uc744 \ud1b5\ud574 \uc548\uc804\ud55c \uacf5\uae09\ub9dd\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ud658\uacbd\uc5d0\uc11c\ub294 https://github.com/IBM/portieris \ubc0f https://github.com/kelseyhightower/grafeas- \uc608\uc81c\uc640 \uac19\uc774 \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uac00 \uc11c\uba85\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc9c0\ub3c4 \uc2dc\uac04. \uc774\ubbf8\uc9c0\uc5d0 \uc11c\uba85 \ud558\uba74 \uac8c\uc2dc\uc790(\uc18c\uc2a4)\ub97c \ud655\uc778\ud558\uc5ec \uc774\ubbf8\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4(\ubb34\uacb0\uc131). \ub178\ud2b8 ECR\uc740 \ud5a5\ud6c4 \uc774\ubbf8\uc9c0 \uc11c\uba85\uc744 \uc9c0\uc6d0\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. \ubb38\uc81c \ub294 \ucee8\ud14c\uc774\ub108 \ub85c\ub4dc\ub9f5\uc5d0\uc11c \ucd94\uc801\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8 \u00b6 \uc774\ubbf8\uc9c0\uc758 \ud328\ud0a4\uc9c0\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 Dockerfile\uc5d0 RUN apt-get update && apt-get upgrade \ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud574\uc57c \ud558\uc9c0\ub9cc \uc774\ub294 \uc774\ubbf8\uc9c0 \ube4c\ub4dc \ub2e8\uacc4\uc5d0\uc11c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8\ub97c \uc124\uce58\ud55c \ub2e4\uc74c USER \uc9c0\uc2dc\ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uc0ac\uc6a9\uc790\ub85c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc774\ubbf8\uc9c0\uac00 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0 \ub8e8\ud2b8\ub85c \uc804\ud658\ud588\ub2e4\uac00 \ub2e4\uc2dc \ub3cc\uc544\uac11\ub2c8\ub2e4. \ucd5c\uc2e0 \ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\ub97c \uc124\uce58\ud558\uae30 \uc704\ud574 \uae30\ubcf8 \uc774\ubbf8\uc9c0\uc758 \uad00\ub9ac\uc790\uc5d0\uac8c \uc804\uc801\uc73c\ub85c \uc758\uc874\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. apt-get clean \uc744 \uc2e4\ud589 \ud558\uc5ec /var/cache/apt/archives/ \uc5d0\uc11c \uc124\uce58 \ud504\ub85c\uadf8\ub7a8 \ud30c\uc77c\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4 . \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud55c \ud6c4 rm -rf /var/lib/apt/lists/* \ub97c \uc2e4\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4 . \uc774\ub807\uac8c \ud558\uba74 \uc124\uce58\ud560 \uc218 \uc788\ub294 \uc0c9\uc778 \ud30c\uc77c \ub610\ub294 \ud328\ud0a4\uc9c0 \ubaa9\ub85d\uc774 \uc81c\uac70\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba85\ub839\uc740 \uac01 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uc2e4\ud589 apt-get \uc5c5\ub370\uc774\ud2b8 && apt-get \uc124\uce58 -y \\ \uacf1\uc2ac \uacf1\uc2ac\ud558\ub2e4 \\ \uc790\uc2dd \\ libsqlite3-dev \\ && \uccad\uc18c\ud558\uae30 && rm -rf /var/lib/apt/lists/* \ub3c4\uad6c \u00b6 Bane Docker \ucee8\ud14c\uc774\ub108\uc6a9 AppArmor \ud504\ub85c\ud30c\uc77c \uc0dd\uc131\uae30 docker-slim \uc548\uc804\ud55c \ucd5c\uc18c \uc774\ubbf8\uc9c0 \uad6c\ucd95 dockle Dockerfile\uc774 \uc548\uc804\ud55c \uc774\ubbf8\uc9c0 \uc0dd\uc131\uc744 \uc704\ud55c \ubaa8\ubc94 \uc0ac\ub840\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. dockerfile-lint Dockerfile\uc6a9 \uaddc\uce59 \uae30\ubc18 \ub9b0\ud130 hadolint \uc2a4\ub9c8\ud2b8 \ub3c4\ucee4\ud30c\uc77c \ub9b0\ud130 \uac8c\uc774\ud2b8\ud0a4\ud37c \ubc0f OPA \uc815\ucc45 \uae30\ubc18 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec Kyverno \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\uc774\ud2f0\ube0c \uc815\ucc45 \uc5d4\uc9c4 in-toto \uacf5\uae09\ub9dd\uc758 \ud2b9\uc815 \ub2e8\uacc4\uac00 \uc758\ub3c4\uc801\uc73c\ub85c \uc218\ud589\ub418\uc5c8\ub294\uc9c0, \ud574\ub2f9 \ub2e8\uacc4\uac00 \uc62c\ubc14\ub978 \ud589\uc704\uc790\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uc5c8\ub294\uc9c0 \uc0ac\uc6a9\uc790\uac00 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Notary \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc11c\uba85 \ud504\ub85c\uc81d\ud2b8 \uacf5\uc99d v2 Grafeas \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uae09\ub9dd\uc744 \uac10\uc0ac\ud558\uace0 \uad00\ub9ac\ud558\ub294 \uac1c\ubc29\ud615 \uc544\ud2f0\ud329\ud2b8 \uba54\ud0c0\ub370\uc774\ud130 API","title":"\uc774\ubbf8\uc9c0 \ubcf4\uc548"},{"location":"security/docs/image.kr/#_1","text":"\uacf5\uaca9\uc5d0 \ub300\ud55c \uccab \ubc88\uc9f8 \ubc29\uc5b4\uc120\uc73c\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \uc548\uc804\ud558\uc9c0 \uc54a\uace0 \uc798\ubabb \uad6c\uc131\ub41c \uc774\ubbf8\uc9c0\ub85c \uc778\ud574 \uacf5\uaca9\uc790\uac00 \ucee8\ud14c\uc774\ub108 \uacbd\uacc4\ub97c \ubc97\uc5b4\ub098 \ud638\uc2a4\ud2b8\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ub2e8 \ud638\uc2a4\ud2b8\uc5d0 \uc788\uc73c\uba74 \uacf5\uaca9\uc790\ub294 \ubbfc\uac10\ud55c \uc815\ubcf4\uc5d0 \uc561\uc138\uc2a4\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \ub610\ub294 AWS \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\uc5ec \uce21\uba74\uc73c\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ubaa8\ubc94 \uc0ac\ub840\ub294 \uc774\ub7ec\ud55c \uc77c\uc774 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4.","title":"\uc774\ubbf8\uc9c0 \ubcf4\uc548"},{"location":"security/docs/image.kr/#_2","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/image.kr/#_3","text":"\ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0\uc11c \ubd88\ud544\uc694\ud55c \ubc14\uc774\ub108\ub9ac\ub97c \ubaa8\ub450 \uc81c\uac70\ud558\uc5ec \uc2dc\uc791\ud569\ub2c8\ub2e4. Dockerhub\uc758 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uac01 \ucee8\ud14c\uc774\ub108 \ub808\uc774\uc5b4\uc758 \ucf58\ud150\uce20\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub294 Dive \uc640 \uac19\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\ub97c \uac80\uc0ac\ud558\uc138\uc694. \uad8c\ud55c\uc744 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c SETUID \ubc0f SETGID \ube44\ud2b8\uac00 \uc788\ub294 \ubaa8\ub4e0 \ubc14\uc774\ub108\ub9ac\ub97c \uc81c\uac70\ud558\uace0 \uc0ac\uc545\ud55c \ubaa9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub294 nc \ubc0f curl\uacfc \uac19\uc740 \ubaa8\ub4e0 \uc178 \ubc0f \uc720\ud2f8\ub9ac\ud2f0\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec SETUID \ubc0f SETGID \ube44\ud2b8\uac00 \uc788\ub294 \ud30c\uc77c\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc3e\uae30 / -perm /6000 -type f -exec ls -ld {} \\; \uc774\ub7ec\ud55c \ud30c\uc77c\uc5d0\uc11c \ud2b9\uc218 \uad8c\ud55c\uc744 \uc81c\uac70\ud558\ub824\uba74 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0 \ub2e4\uc74c \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. RUN find / -xdev -perm /6000 -type f -exec chmod as {} \\; || \uc9c4\uc2e4 \uad6c\uc5b4\uccb4\ub85c \uc774\uac83\uc740 \uc774\ubbf8\uc9c0\uc758 \uc1a1\uacf3\ub2c8\ub97c \uc81c\uac70\ud558\ub294 \uac83\uc73c\ub85c \uc54c\ub824\uc838 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0 \ub9cc\ub4e4\uae30"},{"location":"security/docs/image.kr/#_4","text":"\ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0\ub97c \ub9cc\ub4dc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc885\uc885 \uc5f0\uc18d \ud1b5\ud569 \uc8fc\uae30\uc758 \uc77c\ubd80\ub97c \uc790\ub3d9\ud654\ud558\uae30 \uc704\ud574 \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\uac00 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4 \ucf54\ub4dc\ub97c \ub9b0\ud2b8\ud558\uac70\ub098 \uc815\uc801 \ucf54\ub4dc \ubd84\uc11d\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uac1c\ubc1c\uc790\ub294 \ud30c\uc774\ud504\ub77c\uc778\uc774 \uc2e4\ud589\ub420 \ub54c\uae4c\uc9c0 \uae30\ub2e4\ub9ac\uc9c0 \uc54a\uace0 \uac70\uc758 \uc989\uac01\uc801\uc778 \ud53c\ub4dc\ubc31\uc744 \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\ub294 \ucee8\ud14c\uc774\ub108 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \ud478\uc2dc\ub418\ub294 \ucd5c\uc885 \uc774\ubbf8\uc9c0\uc758 \ud06c\uae30\ub97c \ucd5c\uc18c\ud654\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \ubcf4\uc548 \uad00\uc810\uc5d0\uc11c \ub9e4\ub825\uc801\uc785\ub2c8\ub2e4. \ube4c\ub4dc \ub3c4\uad6c \ubc0f \uae30\ud0c0 \uc678\ubd80 \ubc14\uc774\ub108\ub9ac\uac00 \uc5c6\ub294 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \uc774\ubbf8\uc9c0\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \uc904\uc5ec \ubcf4\uc548 \uc0c1\ud0dc\ub97c \uac1c\uc120\ud569\ub2c8\ub2e4. \ub2e4\ub2e8\uacc4 \ube4c\ub4dc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://docs.docker.com/develop/develop-images/multistage-build/ .","title":"\ub2e4\ub2e8\uacc4 \ube4c\ub4dc \uc0ac\uc6a9"},{"location":"security/docs/image.kr/#_5","text":"\uac00\uc0c1 \uba38\uc2e0\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \ucde8\uc57d\uc131\uc774 \uc788\ub294 \ubc14\uc774\ub108\ub9ac \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \ud3ec\ud568\ud558\uac70\ub098 \uc2dc\uac04\uc774 \uc9c0\ub0a8\uc5d0 \ub530\ub77c \ucde8\uc57d\uc131\uc744 \uac1c\ubc1c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc545\uc6a9\uc73c\ub85c\ubd80\ud130 \ubcf4\ud638\ud558\ub294 \uac00\uc7a5 \uc88b\uc740 \ubc29\ubc95\uc740 \uc774\ubbf8\uc9c0 \uc2a4\uce90\ub108\ub85c \uc774\ubbf8\uc9c0\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc2a4\uce94\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Amazon ECR\uc5d0 \uc800\uc7a5\ub41c \uc774\ubbf8\uc9c0\ub294 \ud478\uc2dc \ub610\ub294 \uc628\ub514\ub9e8\ub4dc(24\uc2dc\uac04 \ub3d9\uc548 \ud55c \ubc88)\ub85c \uc2a4\uce94\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ECR\uc740 \ud604\uc7ac \uc624\ud508 \uc18c\uc2a4 \uc774\ubbf8\uc9c0 \uc2a4\uce90\ub2dd \uc194\ub8e8\uc158\uc778 Clair \ub97c \ud65c\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0\ub97c \uc2a4\uce94\ud55c \ud6c4 \uacb0\uacfc\ub294 EventBridge\uc758 ECR\uc5d0 \ub300\ud55c \uc774\ubca4\ud2b8 \uc2a4\ud2b8\ub9bc\uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. ECR \ucf58\uc194 \ub0b4\uc5d0\uc11c \uac80\uc0ac \uacb0\uacfc\ub97c \ubcfc \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. HIGH \ub610\ub294 CRITICAL \ucde8\uc57d\uc131\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\ub294 \uc0ad\uc81c\ud558\uac70\ub098 \ub2e4\uc2dc \ube4c\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc30\ud3ec\ub41c \uc774\ubbf8\uc9c0\uc5d0 \ucde8\uc57d\uc810\uc774 \ubc1c\uc0dd\ud558\uba74 \uac00\ub2a5\ud55c \ud55c \ube68\ub9ac \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \ucde8\uc57d\uc131\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\uac00 \ubc30\ud3ec\ub41c \uc704\uce58\ub97c \uc544\ub294 \uac83\uc740 \ud658\uacbd\uc744 \uc548\uc804\ud558\uac8c \uc720\uc9c0\ud558\ub294 \ub370 \ud544\uc218\uc801\uc785\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ucd94\uc801 \uc194\ub8e8\uc158\uc744 \uc9c1\uc811 \uad6c\ucd95\ud560 \uc218\ub3c4 \uc788\uc9c0\ub9cc \ub2e4\uc74c\uacfc \uac19\uc740 \uae30\ubcf8 \uc81c\uacf5 \uae30\ub2a5\uacfc \uae30\ud0c0 \uace0\uae09 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uba87 \uac00\uc9c0 \uc0c1\uc6a9 \uc81c\ud488\uc774 \uc774\ubbf8 \uc788\uc2b5\ub2c8\ub2e4. \uc575\ucee4 Palo Alto - \ud504\ub9ac\uc988\ub9c8 \ud074\ub77c\uc6b0\ub4dc(twistcli) \uc544\ucfe0\uc544 \ucfe0\ubca0\uc774 \ud2b8\ub9ac\ube44 Snyk Kubernetes \uc720\ud6a8\uc131 \uac80\uc0ac \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uc5d0 \uc2ec\uac01\ud55c \ucde8\uc57d\uc131\uc774 \uc5c6\ub294\uc9c0 \uc720\ud6a8\uc131\uc744 \uac80\uc0ac\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uac80\uc99d \uc6f9\ud6c4\ud06c\ub294 Kubernetes API \uc774\uc804\uc5d0 \ud638\ucd9c\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc6f9\ud6c4\ud06c\uc5d0 \uc815\uc758\ub41c \uc720\ud6a8\uc131 \uac80\uc0ac \uae30\uc900\uc744 \uc900\uc218\ud558\uc9c0 \uc54a\ub294 \uc694\uccad\uc744 \uac70\ubd80\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc774 \ub294 ECR describeImageScanFindings API\ub97c \ud638\ucd9c\ud558\ub294 \uc11c\ubc84\ub9ac\uc2a4 \uc6f9\ud6c4\ud06c\uc758 \uc608\uc785\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uce58\uba85\uc801\uc778 \ucde8\uc57d\uc810\uc774 \uc788\ub294 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \ucde8\uc57d\uc810\uc774 \ubc1c\uacac\ub418\uba74 \ud3ec\ub4dc\uac00 \uac70\ubd80\ub418\uace0 CVE \ubaa9\ub85d\uc774 \ud3ec\ud568\ub41c \uba54\uc2dc\uc9c0\uac00 \uc774\ubca4\ud2b8\ub85c \ubc18\ud658\ub429\ub2c8\ub2e4.","title":"\ucde8\uc57d\uc810\uc774 \uc788\ub294\uc9c0 \uc774\ubbf8\uc9c0\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc2a4\uce94"},{"location":"security/docs/image.kr/#ecr-iam","text":"\uc624\ub298\ub0a0 \uc870\uc9c1\uc5d0\uc11c \uacf5\uc720 AWS \uacc4\uc815 \ub0b4\uc5d0\uc11c \ub3c5\ub9bd\uc801\uc73c\ub85c \uc6b4\uc601\ub418\ub294 \uc5ec\ub7ec \uac1c\ubc1c \ud300\uc744 \ubcf4\uc720\ud558\ub294 \uac83\uc740 \ub4dc\ubb38 \uc77c\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud300\uc774 \uc790\uc0b0\uc744 \uacf5\uc720\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \uacbd\uc6b0 \uac01 \ud300\uc774 \uc0c1\ud638 \uc791\uc6a9\ud560 \uc218 \uc788\ub294 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc77c\ub828\uc758 IAM \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uad6c\ud604\ud558\ub294 \uc88b\uc740 \ubc29\ubc95\uc740 ECR \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc720\uc0ac\ud55c \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub97c \ud568\uaed8 \uadf8\ub8f9\ud654\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud300 A\uc758 \ubaa8\ub4e0 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 team-a/\ub85c \uc2dc\uc791\ud558\uace0 \ud300 B\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub294 team-b/ \uc811\ub450\uc0ac\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. { \"\ubc84\uc804\" : \"2012-10-17\" , \"\uc9c4\uc220\uc11c\" : [ { \"\uc2dc\ub4dc\" : \"AllowPushPull\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\uc561\uc158\" : [ \"ecr:GetDownloadUrlForLayer\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" , \"ecr:PutImage\" , \"ecr:InitiateLayerUpload\" , \"ecr:UploadLayerPart\" , \"ecr:CompleteLayerUpload\" ], \"\uc790\uc6d0\" : [ \"arn:aws:ecr:<\uc9c0\uc5ed>:<account_id>:repository/team-a/*\" ] } ] }","title":"ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c IAM \uc815\ucc45 \uc0dd\uc131"},{"location":"security/docs/image.kr/#ecr","text":"ECR API\uc5d0\ub294 \ud37c\ube14\ub9ad \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uacb0\uacfc\uc801\uc73c\ub85c \uc694\uccad\uc774 IAM\uc5d0 \uc758\ud574 \uc778\uc99d\ub418\uace0 \uad8c\ud55c\uc774 \uc788\ub294 \ud55c \uc778\ud130\ub137\uc5d0\uc11c ECR \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 VPC\uc5d0 \uc778\ud130\ub137 \uac8c\uc774\ud2b8\uc6e8\uc774(IGW)\uac00 \uc5c6\ub294 \uc0cc\ub4dc\ubc15\uc2a4 \ud658\uacbd\uc5d0\uc11c \uc791\ub3d9\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 ECR\uc6a9 \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \uc0dd\uc131\ud558\uba74 \uc778\ud130\ub137\uc744 \ud1b5\ud574 \ud2b8\ub798\ud53d\uc744 \ub77c\uc6b0\ud305\ud558\ub294 \ub300\uc2e0 \ud504\ub77c\uc774\ube57 IP \uc8fc\uc18c\ub97c \ud1b5\ud574 ECR API\uc5d0 \ube44\uacf5\uac1c\ub85c \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc8fc\uc81c\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://docs.aws.amazon.com/AmazonECR/latest/userguide/vpc-endpoints.html\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"ECR \ud504\ub77c\uc774\ube57 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc0ac\uc6a9 \uace0\ub824"},{"location":"security/docs/image.kr/#ecr_1","text":"\uc5d0 \ub300\ud55c \uae30\ubcf8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc740 \ub9ac\uc804 \ub0b4\uc758 \ubaa8\ub4e0 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uacf5\uaca9\uc790/\ub0b4\ubd80\uc790\uac00 \ub370\uc774\ud130\ub97c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c \ud328\ud0a4\uc9d5\ud558\uace0 \ub2e4\ub978 AWS \uacc4\uc815\uc758 \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub85c \ud478\uc2dc\ud558\uc5ec \ub370\uc774\ud130\ub97c \uc720\ucd9c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud55c API \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud558\ub294 \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc744 \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub2e4\uc74c \uc815\ucc45\uc740 \uacc4\uc815\uc758 \ubaa8\ub4e0 AWS \uc6d0\uce59\uc774 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ub300\ud574\uc11c\ub9cc \ubaa8\ub4e0 \uc791\uc5c5\uc744 \uc218\ud589\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. { \"\uc9c4\uc220\uc11c\" : [ { \"\uc2dc\ub4dc\" : \"LimitECRAccess\" , \"\uad50\uc7a5\" : \"*\" , \"\uc561\uc158\" : \"*\" , \"\ud6a8\uacfc\" : \"\ud5c8\uc6a9\" , \"\ub9ac\uc18c\uc2a4\" : \"arn:aws:ecr:<\uc9c0\uc5ed>:<account_id>:repository/*\" } ] } AWS \uc870\uc9c1\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc IAM \uc6d0\uce59\uc5d0 \uc758\ud55c \uc774\ubbf8\uc9c0 \ud478\uc2dc/\ud480\ub9c1\uc744 \ubc29\uc9c0\ud558\ub294 \uc0c8\ub85c\uc6b4 'PrincipalOrgID' \uc18d\uc131\uc744 \uc0ac\uc6a9\ud558\ub294 \uc870\uac74\uc744 \uc124\uc815\ud558\uc5ec \uc774\ub97c \ub354\uc6b1 \ud5a5\uc0c1\uc2dc\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 aws:PrincipalOrgID \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. com.amazonaws.<region>.ecr.dkr \ubc0f com.amazonaws.<region>.ecr.api \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubaa8\ub450\uc5d0 \ub3d9\uc77c\ud55c \uc815\ucc45\uc744 \uc801\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4 . EKS\ub294 ECR\uc5d0\uc11c kube-proxy, coredns \ubc0f aws-node\uc5d0 \ub300\ud55c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ubbc0\ub85c \ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uacc4\uc815 ID(\uc608: 602401143452.dkr.ecr.us-west-2.amazonaws.com/* )\ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc758 \ub9ac\uc18c\uc2a4 \ubaa9\ub85d\uc5d0 \ucd94\uac00\ud558\uac70\ub098 \"*\"\uc5d0\uc11c \uac00\uc838\uc624\uae30\ub97c \ud5c8\uc6a9\ud558\uace0 \uacc4\uc815 ID\uc5d0 \ub300\ud55c \ud478\uc2dc\ub97c \uc81c\ud55c\ud558\ub3c4\ub85d \uc815\ucc45\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \ud45c\uc5d0\ub294 EKS \uc774\ubbf8\uc9c0\uac00 \ud310\ub9e4\ub418\ub294 AWS \uacc4\uc815\uacfc \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc804 \uac04\uc758 \ub9e4\ud551\uc774 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. \uacc4\uc88c \ubc88\ud638 \uc9c0\uc5ed 602401143452 \uc544\ub798 \ub098\uc5f4\ub41c \uc9c0\uc5ed\uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \uc0c1\uc5c5 \uc9c0\uc5ed 800184023465 \ud64d\ucf69 558608220178 \ubc14 918309763551 BJS 961992271922 ZHY \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45 \uc0ac\uc6a9\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 VPC \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec Amazon ECR \uc561\uc138\uc2a4 \uc81c\uc5b4 .","title":"ECR\uc5d0 \ub300\ud55c \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc815\ucc45 \uad6c\ud604"},{"location":"security/docs/image.kr/#ecr_2","text":"NIST \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud14c\uc774\ub108 \ubcf4\uc548 \uac00\uc774\ub4dc \ub294 \"\ub808\uc9c0\uc2a4\ud2b8\ub9ac\uc758 \uc624\ub798\ub41c \uc774\ubbf8\uc9c0\"\uc758 \uc704\ud5d8\uc5d0 \ub300\ud574 \uacbd\uace0\ud569\ub2c8\ub2e4. \ucde8\uc57d\ud558\uace0 \uc624\ub798\ub41c \uc18c\ud504\ud2b8\uc6e8\uc5b4 \ud328\ud0a4\uc9c0\uac00 \ud3ec\ud568\ub41c \uc774\ubbf8\uc9c0\ub294 \uc6b0\ubc1c\uc801\uc778 \ubc30\ud3ec \ubc0f \ub178\ucd9c\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. \uac01 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\ub294 \uc774\ubbf8\uc9c0 \ub9cc\ub8cc \uc2dc\uae30\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \uc124\uc815\ud558\ub294 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45\uc774 \uc788\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. AWS \uacf5\uc2dd \ubb38\uc11c \uc5d0\ub294 \ud14c\uc2a4\ud2b8 \uaddc\uce59\uc744 \uc124\uc815\ud558\uace0 \ud3c9\uac00\ud55c \ub2e4\uc74c \uc801\uc6a9\ud558\ub294 \ubc29\ubc95\uc774 \uc124\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \ud544\ud130\ub9c1\ud558\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc8fc\ub294 \uacf5\uc2dd \ubb38\uc11c \uc5d0\ub294 \uba87 \uac00\uc9c0 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45 \uc608\uc81c \uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc5f0\ub839 \ub610\ub294 \uac1c\uc218\ub85c \ud544\ud130\ub9c1 \ud0dc\uadf8 \ub610\ub294 \ud0dc\uadf8\uac00 \uc9c0\uc815\ub418\uc9c0 \uc54a\uc740 \uc774\ubbf8\uc9c0\ub85c \ud544\ud130\ub9c1 \uc5ec\ub7ec \uaddc\uce59 \ub610\ub294 \ub2e8\uc77c \uaddc\uce59\uc5d0\uc11c \uc774\ubbf8\uc9c0 \ud0dc\uadf8\ub85c \ud544\ud130\ub9c1 \uacbd\uace0 \uc7a5\uae30 \uc2e4\ud589 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc774\ubbf8\uc9c0\uac00 ECR\uc5d0\uc11c \uc81c\uac70\ub418\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc7ac\ubc30\ud3ec\ub418\uac70\ub098 \uc218\ud3c9\uc73c\ub85c \ud655\uc7a5\ub420 \ub54c \uc774\ubbf8\uc9c0 \uac00\uc838\uc624\uae30 \uc624\ub958\uac00 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc218\uba85 \uc8fc\uae30 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c \ucc38\uc870\ud558\ub294 \ubc30\ud3ec \ubc0f \uc774\ubbf8\uc9c0\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\uace0 \ub9b4\ub9ac\uc2a4/\ubc30\ud3ec \ube48\ub3c4\ub97c \uc124\uba85\ud558\ub294 [ \uc774\ubbf8\uc9c0 ] \ub9cc\ub8cc \uaddc\uce59\uc744 \ud56d\uc0c1 \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uc88b\uc740 CI/CD \uc0ac\ub840\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"ECR\uc5d0 \ub300\ud55c \uc218\uba85 \uc8fc\uae30 \uc815\ucc45 \uad6c\ud604"},{"location":"security/docs/image.kr/#_6","text":"\uac1c\ubc1c\uc790\uac00 \uc790\uc2e0\uc758 \uc774\ubbf8\uc9c0\ub97c \uc0dd\uc131\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ub300\uc2e0 \uc870\uc9c1\uc758 \ub2e4\uc591\ud55c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc2a4\ud0dd\uc5d0 \ub300\ud574 \uac80\uc99d\ub41c \uc774\ubbf8\uc9c0 \uc138\ud2b8\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uadf8\ub807\uac8c \ud568\uc73c\ub85c\uc368 \uac1c\ubc1c\uc790\ub294 Dockerfile\uc744 \uc791\uc131\ud558\ub294 \ubc29\ubc95\uc744 \ubc30\uc6b0\uc9c0 \uc54a\uace0 \ucf54\ub4dc \uc791\uc131\uc5d0 \uc9d1\uc911\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubcc0\uacbd \uc0ac\ud56d\uc774 \ub9c8\uc2a4\ud130\uc5d0 \ubcd1\ud569\ub418\uba74 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uc740 \uc790\uc0b0\uc744 \uc790\ub3d9\uc73c\ub85c \ucef4\ud30c\uc77c\ud558\uace0 \uc544\ud2f0\ud329\ud2b8 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \uc800\uc7a5\ud558\uace0 \uc544\ud2f0\ud329\ud2b8\ub97c ECR\uacfc \uac19\uc740 Docker \ub808\uc9c0\uc2a4\ud2b8\ub9ac\ub85c \ud478\uc2dc\ud558\uae30 \uc804\uc5d0 \uc801\uc808\ud55c \uc774\ubbf8\uc9c0\uc5d0 \ubcf5\uc0ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c\ud55c \uac1c\ubc1c\uc790\uac00 \uc790\uc2e0\uc758 Dockerfile\uc744 \ub9cc\ub4e4 \uc218 \uc788\ub294 \uae30\ubcf8 \uc774\ubbf8\uc9c0 \uc9d1\ud569\uc744 \ub9cc\ub4e4\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\uc0c1\uc801\uc73c\ub85c\ub294 a) \uc774\ubbf8\uc9c0\uc5d0 \ubb34\uc5c7\uc774 \uc788\ub294\uc9c0 \ud56d\uc0c1 \uc54c \uc218 \uc5c6\uace0 b) [ a five ] ( https://www.kennasecurity.com/blog/one-fifth-of -the-most-used-docker-containers-have-at-least-one-critical-vulnerability/ ) \uc0c1\uc704 1000\uac1c \uc774\ubbf8\uc9c0 \uc911 \ucde8\uc57d\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\uc640 \ucde8\uc57d\uc810 \ubaa9\ub85d\uc740 https://vulnerablecontainers.org/\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc120\ubcc4\ub41c \uc774\ubbf8\uc9c0 \uc138\ud2b8 \ub9cc\ub4e4\uae30"},{"location":"security/docs/image.kr/#dockerfile-user","text":"\ud3ec\ub4dc \ubcf4\uc548 \uc139\uc158\uc5d0\uc11c \uc5b8\uae09\ud588\ub4ef\uc774 \ucee8\ud14c\uc774\ub108\ub97c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud558\uc9c0 \uc54a\uc544\uc57c \ud569\ub2c8\ub2e4. \uc774\uac83\uc744 podSpec\uc758 \uc77c\ubd80\ub85c \uad6c\uc131\ud560 \uc218 \uc788\uc9c0\ub9cc Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. USER \uc9c0\uc2dc\uc5b4 \ub294 USER \uc9c0\uc2dc\uc5b4 \ub4a4\uc5d0 \ub098\ud0c0\ub098\ub294 RUN , ENTRYPOINT \ub610\ub294 CMD \uba85\ub839\uc744 \uc2e4\ud589\ud560 \ub54c \uc0ac\uc6a9\ud560 UID\ub97c \uc124\uc815\ud569\ub2c8\ub2e4 .","title":"\ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ud558\ub824\uba74 Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud558\uc2ed\uc2dc\uc624."},{"location":"security/docs/image.kr/#dockerfile","text":"Linting\uc744 \uc0ac\uc6a9\ud558\uc5ec Dockerfile\uc774 \uc0ac\uc804 \uc815\uc758\ub41c \uc9c0\uce68 \uc138\ud2b8\ub97c \uc900\uc218\ud558\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc608: 'USER' \uc9c0\uc2dc\ubb38 \ud3ec\ud568 \ub610\ub294 \ubaa8\ub4e0 \uc774\ubbf8\uc9c0\uc5d0 \ud0dc\uadf8\uac00 \uc9c0\uc815\ub418\uc5b4\uc57c \ud558\ub294 \uc694\uad6c \uc0ac\ud56d). dockerfile_lint \ub294 RedHat\uc758 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub85c \uc77c\ubc18\uc801\uc778 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ud655\uc778\ud558\uace0 Dockerfile \ub9b0\ud305\uc744 \uc704\ud55c \uc790\uccb4 \uaddc\uce59\uc744 \ube4c\ub4dc\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uaddc\uce59 \uc5d4\uc9c4\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uaddc\uce59\uc744 \uc704\ubc18\ud558\ub294 Dockerfile\ub85c \ube4c\ub4dc\ud558\uba74 \uc790\ub3d9\uc73c\ub85c \uc2e4\ud328\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c CI \ud30c\uc774\ud504\ub77c\uc778\uc5d0 \ud1b5\ud569\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Dockerfile \ub9b0\ud2b8"},{"location":"security/docs/image.kr/#_7","text":"\uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc\ud560 \ub54c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \uc904\uc774\ub294 \uac83\uc774 \uc8fc\uc694 \ubaa9\ud45c\uc5ec\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud55c \uc774\uc0c1\uc801\uc778 \ubc29\ubc95\uc740 \ucde8\uc57d\uc810\uc744 \uc545\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubc14\uc774\ub108\ub9ac\uac00 \uc5c6\ub294 \ucd5c\uc18c\ud55c\uc758 \uc774\ubbf8\uc9c0\ub97c \ub9cc\ub4dc\ub294 \uac83\uc785\ub2c8\ub2e4. \ub2e4\ud589\ud788 Docker\uc5d0\ub294 scratch \uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uc0dd\uc131\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc774 \uc788\uc2b5\ub2c8\ub2e4. Go\uc640 \uac19\uc740 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c \uc608\uc81c\uc640 \uac19\uc774 \uc815\uc801 \ub9c1\ud06c \ubc14\uc774\ub108\ub9ac\ub97c \ub9cc\ub4e4\uace0 Dockerfile\uc5d0\uc11c \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ############################ # STEP 1 \uc2e4\ud589 \uac00\ub2a5\ud55c \ubc14\uc774\ub108\ub9ac \ube4c\ub4dc ############################ FROM golang:\uc54c\ud30c\uc778 AS \ube4c\ub354 # git\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. # \uc885\uc18d\uc131\uc744 \uac00\uc838\uc624\ub824\uba74 Git\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. RUN apk \uc5c5\ub370\uc774\ud2b8 && apk add --no-cache git WORKDIR $GOPATH/src/mypackage/myapp/ \uc0ac\ubcf8 . . # \uc885\uc18d\uc131\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. # go get\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc2e4\ud589 -d -v\ub97c \uc5bb\uc73c\uc2ed\uc2dc\uc624. # \ubc14\uc774\ub108\ub9ac\ub97c \ube4c\ub4dc\ud569\ub2c8\ub2e4. \uc2e4\ud589 go build -o /go/bin/hello ############################ # STEP 2 \uc791\uc740 \uc774\ubbf8\uc9c0 \uad6c\ucd95 ############################ \ucc98\uc74c \ubd80\ud130 # \uc815\uc801 \uc2e4\ud589 \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud569\ub2c8\ub2e4. \ubcf5\uc0ac --from=\ube4c\ub354 /go/bin/hello /go/bin/hello # hello \ubc14\uc774\ub108\ub9ac\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. \uc9c4\uc785\uc810 [ \"/go/bin/hello\" ] \uc774\ub807\uac8c \ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c\ub9cc \uad6c\uc131\ub41c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uac00 \uc0dd\uc131\ub418\uc5b4 \ub9e4\uc6b0 \uc548\uc804\ud569\ub2c8\ub2e4.","title":"\uc2a4\ud06c\ub798\uce58\uc5d0\uc11c \uc774\ubbf8\uc9c0 \ube4c\ub4dc"},{"location":"security/docs/image.kr/#ecr_3","text":"\ubd88\ubcc0 \ud0dc\uadf8 \uc774\ubbf8\uc9c0 \ud0dc\uadf8\ub97c \uac15\uc81c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ud478\uc2dc\ud560 \ub54c\ub9c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \uacf5\uaca9\uc790\uac00 \uc774\ubbf8\uc9c0\uc758 \ud0dc\uadf8\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\uace0 \uc774\ubbf8\uc9c0\ub97c \uc545\uc131 \ubc84\uc804\uc73c\ub85c \ub36e\uc5b4\uc4f0\ub294 \uac83\uc744 \ub9c9\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \uc774\ubbf8\uc9c0\ub97c \uc27d\uace0 \uace0\uc720\ud558\uac8c \uc2dd\ubcc4\ud560 \uc218 \uc788\ub294 \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"ECR\uacfc \ud568\uaed8 \ubd88\ubcc0 \ud0dc\uadf8 \uc0ac\uc6a9"},{"location":"security/docs/image.kr/#_8","text":"Docker\uac00 \ucc98\uc74c \ub3c4\uc785\ub418\uc5c8\uc744 \ub54c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ud655\uc778\ud558\uae30 \uc704\ud55c \uc554\ud638\ud654 \ubaa8\ub378\uc774 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4. v2\uc5d0\uc11c Docker\ub294 \ub2e4\uc774\uc81c\uc2a4\ud2b8\ub97c \uc774\ubbf8\uc9c0 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uc774\ubbf8\uc9c0\uc758 \uad6c\uc131\uc744 \ud574\uc2dc\ud558\uace0 \ud574\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uc758 ID\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc11c\uba85\uc774 \ud65c\uc131\ud654\ub418\uba74 [ Docker ] \uc5d4\uc9c4\uc774 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc758 \uc11c\uba85\uc744 \ud655\uc778\ud558\uc5ec \ucf58\ud150\uce20\uac00 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uc18c\uc2a4\uc5d0\uc11c \uc0dd\uc131\ub418\uc5c8\uace0 \ubcc0\uc870\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uac01 \ub808\uc774\uc5b4\uac00 \ub2e4\uc6b4\ub85c\ub4dc\ub41c \ud6c4 \uc5d4\uc9c4\uc740 \ub808\uc774\uc5b4\uc758 \ub2e4\uc774\uc81c\uc2a4\ud2b8\ub97c \ud655\uc778\ud558\uc5ec \ucf58\ud150\uce20\uac00 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 \uc9c0\uc815\ub41c \ucf58\ud150\uce20\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. \uc774\ubbf8\uc9c0 \uc11c\uba85\uc744 \uc0ac\uc6a9\ud558\uba74 \uc774\ubbf8\uc9c0\uc640 \uad00\ub828\ub41c \ub514\uc9c0\ud138 \uc11c\uba85 \ud655\uc778\uc744 \ud1b5\ud574 \uc548\uc804\ud55c \uacf5\uae09\ub9dd\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ud658\uacbd\uc5d0\uc11c\ub294 https://github.com/IBM/portieris \ubc0f https://github.com/kelseyhightower/grafeas- \uc608\uc81c\uc640 \uac19\uc774 \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0\uac00 \uc11c\uba85\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \uc9c0\ub3c4 \uc2dc\uac04. \uc774\ubbf8\uc9c0\uc5d0 \uc11c\uba85 \ud558\uba74 \uac8c\uc2dc\uc790(\uc18c\uc2a4)\ub97c \ud655\uc778\ud558\uc5ec \uc774\ubbf8\uc9c0\uac00 \ubcc0\uc870\ub418\uc9c0 \uc54a\uc558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4(\ubb34\uacb0\uc131). \ub178\ud2b8 ECR\uc740 \ud5a5\ud6c4 \uc774\ubbf8\uc9c0 \uc11c\uba85\uc744 \uc9c0\uc6d0\ud560 \uc608\uc815\uc785\ub2c8\ub2e4. \ubb38\uc81c \ub294 \ucee8\ud14c\uc774\ub108 \ub85c\ub4dc\ub9f5\uc5d0\uc11c \ucd94\uc801\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc774\ubbf8\uc9c0\uc5d0 \uc11c\uba85\ud558\uc138\uc694"},{"location":"security/docs/image.kr/#_9","text":"\uc774\ubbf8\uc9c0\uc758 \ud328\ud0a4\uc9c0\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 Dockerfile\uc5d0 RUN apt-get update && apt-get upgrade \ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud574\uc57c \ud558\uc9c0\ub9cc \uc774\ub294 \uc774\ubbf8\uc9c0 \ube4c\ub4dc \ub2e8\uacc4\uc5d0\uc11c \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \ub8e8\ud2b8\ub85c \uc2e4\ud589\ud560 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uc5c5\ub370\uc774\ud2b8\ub97c \uc124\uce58\ud55c \ub2e4\uc74c USER \uc9c0\uc2dc\ubb38\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \uc0ac\uc6a9\uc790\ub85c \uc804\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uc774\ubbf8\uc9c0\uac00 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0 \ub8e8\ud2b8\ub85c \uc804\ud658\ud588\ub2e4\uac00 \ub2e4\uc2dc \ub3cc\uc544\uac11\ub2c8\ub2e4. \ucd5c\uc2e0 \ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\ub97c \uc124\uce58\ud558\uae30 \uc704\ud574 \uae30\ubcf8 \uc774\ubbf8\uc9c0\uc758 \uad00\ub9ac\uc790\uc5d0\uac8c \uc804\uc801\uc73c\ub85c \uc758\uc874\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. apt-get clean \uc744 \uc2e4\ud589 \ud558\uc5ec /var/cache/apt/archives/ \uc5d0\uc11c \uc124\uce58 \ud504\ub85c\uadf8\ub7a8 \ud30c\uc77c\uc744 \uc0ad\uc81c\ud569\ub2c8\ub2e4 . \ud328\ud0a4\uc9c0\ub97c \uc124\uce58\ud55c \ud6c4 rm -rf /var/lib/apt/lists/* \ub97c \uc2e4\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4 . \uc774\ub807\uac8c \ud558\uba74 \uc124\uce58\ud560 \uc218 \uc788\ub294 \uc0c9\uc778 \ud30c\uc77c \ub610\ub294 \ud328\ud0a4\uc9c0 \ubaa9\ub85d\uc774 \uc81c\uac70\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba85\ub839\uc740 \uac01 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4: \uc2e4\ud589 apt-get \uc5c5\ub370\uc774\ud2b8 && apt-get \uc124\uce58 -y \\ \uacf1\uc2ac \uacf1\uc2ac\ud558\ub2e4 \\ \uc790\uc2dd \\ libsqlite3-dev \\ && \uccad\uc18c\ud558\uae30 && rm -rf /var/lib/apt/lists/*","title":"\ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8"},{"location":"security/docs/image.kr/#_10","text":"Bane Docker \ucee8\ud14c\uc774\ub108\uc6a9 AppArmor \ud504\ub85c\ud30c\uc77c \uc0dd\uc131\uae30 docker-slim \uc548\uc804\ud55c \ucd5c\uc18c \uc774\ubbf8\uc9c0 \uad6c\ucd95 dockle Dockerfile\uc774 \uc548\uc804\ud55c \uc774\ubbf8\uc9c0 \uc0dd\uc131\uc744 \uc704\ud55c \ubaa8\ubc94 \uc0ac\ub840\uc640 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud569\ub2c8\ub2e4. dockerfile-lint Dockerfile\uc6a9 \uaddc\uce59 \uae30\ubc18 \ub9b0\ud130 hadolint \uc2a4\ub9c8\ud2b8 \ub3c4\ucee4\ud30c\uc77c \ub9b0\ud130 \uac8c\uc774\ud2b8\ud0a4\ud37c \ubc0f OPA \uc815\ucc45 \uae30\ubc18 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec Kyverno \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\uc774\ud2f0\ube0c \uc815\ucc45 \uc5d4\uc9c4 in-toto \uacf5\uae09\ub9dd\uc758 \ud2b9\uc815 \ub2e8\uacc4\uac00 \uc758\ub3c4\uc801\uc73c\ub85c \uc218\ud589\ub418\uc5c8\ub294\uc9c0, \ud574\ub2f9 \ub2e8\uacc4\uac00 \uc62c\ubc14\ub978 \ud589\uc704\uc790\uc5d0 \uc758\ud574 \uc218\ud589\ub418\uc5c8\ub294\uc9c0 \uc0ac\uc6a9\uc790\uac00 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Notary \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc11c\uba85 \ud504\ub85c\uc81d\ud2b8 \uacf5\uc99d v2 Grafeas \uc18c\ud504\ud2b8\uc6e8\uc5b4 \uacf5\uae09\ub9dd\uc744 \uac10\uc0ac\ud558\uace0 \uad00\ub9ac\ud558\ub294 \uac1c\ubc29\ud615 \uc544\ud2f0\ud329\ud2b8 \uba54\ud0c0\ub370\uc774\ud130 API","title":"\ub3c4\uad6c"},{"location":"security/docs/image/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Image security \u00b6 You should consider the container image as your first line of defense against an attack. An insecure, poorly constructed image can allow an attacker to escape the bounds of the container and gain access to the host. Once on the host, an attacker can gain access to sensitive information or move laterally within the cluster or with your AWS account. The following best practices will help mitigate risk of this happening. Recommendations \u00b6 Create minimal images \u00b6 Start by removing all extraneous binaries from the container image. If you\u2019re using an unfamiliar image from Dockerhub, inspect the image using an application like Dive which can show you the contents of each of the container\u2019s layers. Remove all binaries with the SETUID and SETGID bits as they can be used to escalate privilege and consider removing all shells and utilities like nc and curl that can be used for nefarious purposes. You can find the files with SETUID and SETGID bits with the following command: find / -perm /6000 -type f -exec ls -ld {} \\; To remove the special permissions from these files, add the following directive to your container image: RUN find / -xdev -perm /6000 -type f -exec chmod a-s {} \\; || true Colloquially, this is known as de-fanging your image. Use multi-stage builds \u00b6 Using multi-stage builds is a way to create minimal images. Oftentimes, multi-stage builds are used to automate parts of the Continuous Integration cycle. For example, multi-stage builds can be used to lint your source code or perform static code analysis. This affords developers an opportunity to get near immediate feedback instead of waiting for a pipeline to execute. Multi-stage builds are attractive from a security standpoint because they allow you to minimize the size of the final image pushed to your container registry. Container images devoid of build tools and other extraneous binaries improves your security posture by reducing the attack surface of the image. For additional information about multi-stage builds, see https://docs.docker.com/develop/develop-images/multistage-build/. Create Software Bill of Materials (SBOMs) for your container image \u00b6 A \u201csoftware bill of materials\u201d (SBOM) is a nested inventory of the software artifacts that make up your container image. SBOM is a key building block in software security and software supply chain risk management. Generating, storing SBOMS in a central repository and scanning SBOMs for vulnerabilities helps address the following concerns: Visibility : understand what components make up your container image. Storing in a central repository allows SBOMs to be audited and scanned anytime, even post deployment to detect and respond to new vulnerabilities such as zero day vulnerabilities. Provenance Verification : assurance that existing assumptions of where and how an artifact originates from are true and that the artifact or its accompanying metadata have not been tampered with during the build or delivery processes. Trustworthiness : assurance that a given artifact and its contents can be trusted to do what it is purported to do, i.e. is suitable for a purpose. This involves judgement on whether the code is safe to execute and making informed decisions about the risks associated with executing the code. Trustworthiness is assured by creating an attested pipeline execution report along with attested SBOM and attested CVE scan report to assure the consumers of the image that this image is in-fact created through secure means (pipeline) with secure components. Dependency Trust Verification : recursive checking of an artifact\u2019s dependency tree for trustworthiness and provenance of the artifacts it uses. Drift in SBOMs can help detect malicious activity including unauthorized, untrusted dependencies, infiltration attempts. The following tools can be used to generate SBOM: Amazon Inspector can be used to create and export SBOMs . Syft from Anchore can also be used for SBOM generation. For quicker vulnerability scans, the SBOM generated for a container image can be used as an input to scan. The SBOM and scan report are then attested and attached to the image before pushing the image to a central OCI repository such as Amazon ECR for review and audit purposes. Learn more about securing your software supply chain by reviewing CNCF Software Supply Chain Best Practices guide . Scan images for vulnerabilities regularly \u00b6 Like their virtual machine counterparts, container images can contain binaries and application libraries with vulnerabilities or develop vulnerabilities over time. The best way to safeguard against exploits is by regularly scanning your images with an image scanner. Images that are stored in Amazon ECR can be scanned on push or on-demand (once during a 24 hour period). ECR currently supports two types of scanning - Basic and Enhanced . Basic scanning leverages Clair an open source image scanning solution for no cost. Enhanced scanning uses Amazon Inspector to provide automatic continuous scans for additional cost . After an image is scanned, the results are logged to the event stream for ECR in EventBridge. You can also see the results of a scan from within the ECR console. Images with a HIGH or CRITICAL vulnerability should be deleted or rebuilt. If an image that has been deployed develops a vulnerability, it should be replaced as soon as possible. Knowing where images with vulnerabilities have been deployed is essential to keeping your environment secure. While you could conceivably build an image tracking solution yourself, there are already several commercial offerings that provide this and other advanced capabilities out of the box, including: Grype Palo Alto - Prisma Cloud (twistcli) Aqua Kubei Trivy Snyk A Kubernetes validation webhook could also be used to validate that images are free of critical vulnerabilities. Validation webhooks are invoked prior to the Kubernetes API. They are typically used to reject requests that don't comply with the validation criteria defined in the webhook. This is an example of a serverless webhook that calls the ECR describeImageScanFindings API to determine whether a pod is pulling an image with critical vulnerabilities. If vulnerabilities are found, the pod is rejected and a message with list of CVEs is returned as an Event. Use attestations to validate artifact integrity \u00b6 An attestation is a cryptographically signed \u201cstatement\u201d that claims something - a \u201cpredicate\u201d e.g. a pipeline run or the SBOM or the vulnerability scan report is true about another thing - a \u201csubject\u201d i.e. the container image. Attestations help users to validate that an artifact comes from a trusted source in the software supply chain. As an example, we may use a container image without knowing all the software components or dependencies that are included in that image. However, if we trust whatever the producer of the container image says about what software is present, we can use the producer\u2019s attestation to rely on that artifact. This means that we can proceed to use the artifact safely in our workflow in place of having done the analysis ourself. Attestations can be created using AWS Signer or Sigstore cosign . Kubernetes admission controllers such as Kyverno can be used to verify attestations . Refer to this workshop to learn more about software supply chain management best practices on AWS using open source tools with topics including creating and attaching attestations to a container image. Create IAM policies for ECR repositories \u00b6 Nowadays, it is not uncommon for an organization to have multiple development teams operating independently within a shared AWS account. If these teams don't need to share assets, you may want to create a set of IAM policies that restrict access to the repositories each team can interact with. A good way to implement this is by using ECR namespaces . Namespaces are a way to group similar repositories together. For example, all of the registries for team A can be prefaced with the team-a/ while those for team B can use the team-b/ prefix. The policy to restrict access might look like the following: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"AllowPushPull\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:GetDownloadUrlForLayer\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" , \"ecr:PutImage\" , \"ecr:InitiateLayerUpload\" , \"ecr:UploadLayerPart\" , \"ecr:CompleteLayerUpload\" ], \"Resource\" : [ \"arn:aws:ecr:<region>:<account_id>:repository/team-a/*\" ] } ] } Consider using ECR private endpoints \u00b6 The ECR API has a public endpoint. Consequently, ECR registries can be accessed from the Internet so long as the request has been authenticated and authorized by IAM. For those who need to operate in a sandboxed environment where the cluster VPC lacks an Internet Gateway (IGW), you can configure a private endpoint for ECR. Creating a private endpoint enables you to privately access the ECR API through a private IP address instead of routing traffic across the Internet. For additional information on this topic, see Amazon ECR interface VPC endpoints . Implement endpoint policies for ECR \u00b6 The default endpoint policy for allows access to all ECR repositories within a region. This might allow an attacker/insider to exfiltrate data by packaging it as a container image and pushing it to a registry in another AWS account. Mitigating this risk involves creating an endpoint policy that limits API access to ECR repositories. For example, the following policy allows all AWS principles in your account to perform all actions against your and only your ECR repositories: { \"Statement\" : [ { \"Sid\" : \"LimitECRAccess\" , \"Principal\" : \"*\" , \"Action\" : \"*\" , \"Effect\" : \"Allow\" , \"Resource\" : \"arn:aws:ecr:<region>:<account_id>:repository/*\" } ] } You can enhance this further by setting a condition that uses the new PrincipalOrgID attribute which will prevent pushing/pulling of images by an IAM principle that is not part of your AWS Organization. See, aws:PrincipalOrgID for additional details. We recommended applying the same policy to both the com.amazonaws.<region>.ecr.dkr and the com.amazonaws.<region>.ecr.api endpoints. Since EKS pulls images for kube-proxy, coredns, and aws-node from ECR, you will need to add the account ID of the registry, e.g. 602401143452.dkr.ecr.us-west-2.amazonaws.com/* to the list of resources in the endpoint policy or alter the policy to allow pulls from \"*\" and restrict pushes to your account ID. The table below reveals the mapping between the AWS accounts where EKS images are vended from and cluster region. Account Number Region 602401143452 All commercial regions except for those listed below --- --- 800184023465 ap-east-1 - Asia Pacific (Hong Kong) 558608220178 me-south-1 - Middle East (Bahrain) 918309763551 cn-north-1 - China (Beijing) 961992271922 cn-northwest-1 - China (Ningxia) For further information about using endpoint policies, see Using VPC endpoint policies to control Amazon ECR access . Implement lifecycle policies for ECR \u00b6 The NIST Application Container Security Guide warns about the risk of \"stale images in registries\", noting that over time old images with vulnerable, out-of-date software packages should be removed to prevent accidental deployment and exposure. Each ECR repository can have a lifecycle policy that sets rules for when images expire. The AWS official documentation describes how to set up test rules, evaluate them and then apply them. There are several lifecycle policy examples in the official docs that show different ways of filtering the images in a repository: Filtering by image age or count Filtering by tagged or untagged images Filtering by image tags, either in multiple rules or a single rule Warning If the image for long running application is purged from ECR, it can cause an image pull errors when the application is redeployed or scaled horizontally. When using image lifecycle policies, be sure you have good CI/CD practices in place to keep deployments and the images that they reference up to date and always create [image] expiry rules that account for how often you do releases/deployments. Create a set of curated images \u00b6 Rather than allowing developers to create their own images, consider creating a set of vetted images for the different application stacks in your organization. By doing so, developers can forego learning how to compose Dockerfiles and concentrate on writing code. As changes are merged into Master, a CI/CD pipeline can automatically compile the asset, store it in an artifact repository and copy the artifact into the appropriate image before pushing it to a Docker registry like ECR. At the very least you should create a set of base images from which developers to create their own Dockerfiles. Ideally, you want to avoid pulling images from Dockerhub because a) you don't always know what is in the image and b) about a fifth of the top 1000 images have vulnerabilities. A list of those images and their vulnerabilities can be found at https://vulnerablecontainers.org/. Add the USER directive to your Dockerfiles to run as a non-root user \u00b6 As was mentioned in the pod security section, you should avoid running container as root. While you can configure this as part of the podSpec, it is a good habit to use the USER directive to your Dockerfiles. The USER directive sets the UID to use when running RUN , ENTRYPOINT , or CMD instruction that appears after the USER directive. Lint your Dockerfiles \u00b6 Linting can be used to verify that your Dockerfiles are adhering to a set of predefined guidelines, e.g. the inclusion of the USER directive or the requirement that all images be tagged. dockerfile_lint is an open source project from RedHat that verifies common best practices and includes a rule engine that you can use to build your own rules for linting Dockerfiles. It can be incorporated into a CI pipeline, in that builds with Dockerfiles that violate a rule will automatically fail. Build images from Scratch \u00b6 Reducing the attack surface of your container images should be primary aim when building images. The ideal way to do this is by creating minimal images that are devoid of binaries that can be used to exploit vulnerabilities. Fortunately, Docker has a mechanism to create images from scratch . With languages like Go, you can create a static linked binary and reference it in your Dockerfile as in this example: ############################ # STEP 1 build executable binary ############################ FROM golang:alpine AS builder# Install git. # Git is required for fetching the dependencies. RUN apk update && apk add --no-cache gitWORKDIR $GOPATH /src/mypackage/myapp/COPY . . # Fetch dependencies. # Using go get. RUN go get -d -v# Build the binary. RUN go build -o /go/bin/hello ############################ # STEP 2 build a small image ############################ FROM scratch# Copy our static executable. COPY --from = builder /go/bin/hello /go/bin/hello# Run the hello binary. ENTRYPOINT [ \"/go/bin/hello\" ] This creates a container image that consists of your application and nothing else, making it extremely secure. Use immutable tags with ECR \u00b6 Immutable tags force you to update the image tag on each push to the image repository. This can thwart an attacker from overwriting an image with a malicious version without changing the image's tags. Additionally, it gives you a way to easily and uniquely identify an image. Sign your images, SBOMs, pipeline runs and vulnerability reports \u00b6 When Docker was first introduced, there was no cryptographic model for verifying container images. With v2, Docker added digests to the image manifest. This allowed an image\u2019s configuration to be hashed and for the hash to be used to generate an ID for the image. When image signing is enabled, the Docker engine verifies the manifest\u2019s signature, ensuring that the content was produced from a trusted source and no tampering has occurred. After each layer is downloaded, the engine verifies the digest of the layer, ensuring that the content matches the content specified in the manifest. Image signing effectively allows you to create a secure supply chain, through the verification of digital signatures associated with the image. We can use AWS Signer or Sigstore Cosign , to sign container images, create attestations for SBOMs, vulnerability scan reports and pipeline run reports. These attestations assure the trustworthiness and integrity of the image, that it is in fact created by the trusted pipeline without any interference or tampering, and that it contains only the software components that are documented (in the SBOM) that is verified and trusted by the image publisher. These attestations can be attached to the container image and pushed to the repository. In the next section we will see how to use the attested artifacts for audits and admissions controller verification. Image integrity verification using Kubernetes admission controller \u00b6 We can verify image signatures, attested artifacts in an automated way before deploying the image to target Kubernetes cluster using dynamic admission controller and admit deployments only when the security metadata of the artifacts comply with the admission controller policies. For example we can write a policy that cryptographically verifies the signature of an image, an attested SBOM, attested pipeline run report, or attested CVE scan report. We can write conditions in the policy to check data in the report, e.g. a CVE scan should not have any critical CVEs. Deployment is allowed only for images that satisfy these conditions and all other deployments will be rejected by the admissions controller. Examples of admission controller include: Kyverno OPA Gatekeeper Portieris Ratify Kritis Grafeas tutorial Voucher Update the packages in your container images \u00b6 You should include RUN apt-get update && apt-get upgrade in your Dockerfiles to upgrade the packages in your images. Although upgrading requires you to run as root, this occurs during image build phase. The application doesn't need to run as root. You can install the updates and then switch to a different user with the USER directive. If your base image runs as a non-root user, switch to root and back; don't solely rely on the maintainers of the base image to install the latest security updates. Run apt-get clean to delete the installer files from /var/cache/apt/archives/ . You can also run rm -rf /var/lib/apt/lists/* after installing packages. This removes the index files or the lists of packages that are available to install. Be aware that these commands may be different for each package manager. For example: RUN apt-get update && apt-get install -y \\ curl \\ git \\ libsqlite3-dev \\ && apt-get clean && rm -rf /var/lib/apt/lists/* Tools \u00b6 docker-slim Build secure minimal images dockle Verifies that your Dockerfile aligns with best practices for creating secure images dockerfile-lint Rule based linter for Dockerfiles hadolint A smart dockerfile linter Gatekeeper and OPA A policy based admission controller Kyverno A Kubernetes-native policy engine in-toto Allows the user to verify if a step in the supply chain was intended to be performed, and if the step was performed by the right actor Notary A project for signing container images Notary v2 Grafeas An open artifact metadata API to audit and govern your software supply chain","title":"Image Security ({'name': 'English', 'build': True})"},{"location":"security/docs/image/#image-security","text":"You should consider the container image as your first line of defense against an attack. An insecure, poorly constructed image can allow an attacker to escape the bounds of the container and gain access to the host. Once on the host, an attacker can gain access to sensitive information or move laterally within the cluster or with your AWS account. The following best practices will help mitigate risk of this happening.","title":"Image security"},{"location":"security/docs/image/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/image/#create-minimal-images","text":"Start by removing all extraneous binaries from the container image. If you\u2019re using an unfamiliar image from Dockerhub, inspect the image using an application like Dive which can show you the contents of each of the container\u2019s layers. Remove all binaries with the SETUID and SETGID bits as they can be used to escalate privilege and consider removing all shells and utilities like nc and curl that can be used for nefarious purposes. You can find the files with SETUID and SETGID bits with the following command: find / -perm /6000 -type f -exec ls -ld {} \\; To remove the special permissions from these files, add the following directive to your container image: RUN find / -xdev -perm /6000 -type f -exec chmod a-s {} \\; || true Colloquially, this is known as de-fanging your image.","title":"Create minimal images"},{"location":"security/docs/image/#use-multi-stage-builds","text":"Using multi-stage builds is a way to create minimal images. Oftentimes, multi-stage builds are used to automate parts of the Continuous Integration cycle. For example, multi-stage builds can be used to lint your source code or perform static code analysis. This affords developers an opportunity to get near immediate feedback instead of waiting for a pipeline to execute. Multi-stage builds are attractive from a security standpoint because they allow you to minimize the size of the final image pushed to your container registry. Container images devoid of build tools and other extraneous binaries improves your security posture by reducing the attack surface of the image. For additional information about multi-stage builds, see https://docs.docker.com/develop/develop-images/multistage-build/.","title":"Use multi-stage builds"},{"location":"security/docs/image/#create-software-bill-of-materials-sboms-for-your-container-image","text":"A \u201csoftware bill of materials\u201d (SBOM) is a nested inventory of the software artifacts that make up your container image. SBOM is a key building block in software security and software supply chain risk management. Generating, storing SBOMS in a central repository and scanning SBOMs for vulnerabilities helps address the following concerns: Visibility : understand what components make up your container image. Storing in a central repository allows SBOMs to be audited and scanned anytime, even post deployment to detect and respond to new vulnerabilities such as zero day vulnerabilities. Provenance Verification : assurance that existing assumptions of where and how an artifact originates from are true and that the artifact or its accompanying metadata have not been tampered with during the build or delivery processes. Trustworthiness : assurance that a given artifact and its contents can be trusted to do what it is purported to do, i.e. is suitable for a purpose. This involves judgement on whether the code is safe to execute and making informed decisions about the risks associated with executing the code. Trustworthiness is assured by creating an attested pipeline execution report along with attested SBOM and attested CVE scan report to assure the consumers of the image that this image is in-fact created through secure means (pipeline) with secure components. Dependency Trust Verification : recursive checking of an artifact\u2019s dependency tree for trustworthiness and provenance of the artifacts it uses. Drift in SBOMs can help detect malicious activity including unauthorized, untrusted dependencies, infiltration attempts. The following tools can be used to generate SBOM: Amazon Inspector can be used to create and export SBOMs . Syft from Anchore can also be used for SBOM generation. For quicker vulnerability scans, the SBOM generated for a container image can be used as an input to scan. The SBOM and scan report are then attested and attached to the image before pushing the image to a central OCI repository such as Amazon ECR for review and audit purposes. Learn more about securing your software supply chain by reviewing CNCF Software Supply Chain Best Practices guide .","title":"Create Software Bill of Materials (SBOMs) for your container image"},{"location":"security/docs/image/#scan-images-for-vulnerabilities-regularly","text":"Like their virtual machine counterparts, container images can contain binaries and application libraries with vulnerabilities or develop vulnerabilities over time. The best way to safeguard against exploits is by regularly scanning your images with an image scanner. Images that are stored in Amazon ECR can be scanned on push or on-demand (once during a 24 hour period). ECR currently supports two types of scanning - Basic and Enhanced . Basic scanning leverages Clair an open source image scanning solution for no cost. Enhanced scanning uses Amazon Inspector to provide automatic continuous scans for additional cost . After an image is scanned, the results are logged to the event stream for ECR in EventBridge. You can also see the results of a scan from within the ECR console. Images with a HIGH or CRITICAL vulnerability should be deleted or rebuilt. If an image that has been deployed develops a vulnerability, it should be replaced as soon as possible. Knowing where images with vulnerabilities have been deployed is essential to keeping your environment secure. While you could conceivably build an image tracking solution yourself, there are already several commercial offerings that provide this and other advanced capabilities out of the box, including: Grype Palo Alto - Prisma Cloud (twistcli) Aqua Kubei Trivy Snyk A Kubernetes validation webhook could also be used to validate that images are free of critical vulnerabilities. Validation webhooks are invoked prior to the Kubernetes API. They are typically used to reject requests that don't comply with the validation criteria defined in the webhook. This is an example of a serverless webhook that calls the ECR describeImageScanFindings API to determine whether a pod is pulling an image with critical vulnerabilities. If vulnerabilities are found, the pod is rejected and a message with list of CVEs is returned as an Event.","title":"Scan images for vulnerabilities regularly"},{"location":"security/docs/image/#use-attestations-to-validate-artifact-integrity","text":"An attestation is a cryptographically signed \u201cstatement\u201d that claims something - a \u201cpredicate\u201d e.g. a pipeline run or the SBOM or the vulnerability scan report is true about another thing - a \u201csubject\u201d i.e. the container image. Attestations help users to validate that an artifact comes from a trusted source in the software supply chain. As an example, we may use a container image without knowing all the software components or dependencies that are included in that image. However, if we trust whatever the producer of the container image says about what software is present, we can use the producer\u2019s attestation to rely on that artifact. This means that we can proceed to use the artifact safely in our workflow in place of having done the analysis ourself. Attestations can be created using AWS Signer or Sigstore cosign . Kubernetes admission controllers such as Kyverno can be used to verify attestations . Refer to this workshop to learn more about software supply chain management best practices on AWS using open source tools with topics including creating and attaching attestations to a container image.","title":"Use attestations to validate artifact integrity"},{"location":"security/docs/image/#create-iam-policies-for-ecr-repositories","text":"Nowadays, it is not uncommon for an organization to have multiple development teams operating independently within a shared AWS account. If these teams don't need to share assets, you may want to create a set of IAM policies that restrict access to the repositories each team can interact with. A good way to implement this is by using ECR namespaces . Namespaces are a way to group similar repositories together. For example, all of the registries for team A can be prefaced with the team-a/ while those for team B can use the team-b/ prefix. The policy to restrict access might look like the following: { \"Version\" : \"2012-10-17\" , \"Statement\" : [ { \"Sid\" : \"AllowPushPull\" , \"Effect\" : \"Allow\" , \"Action\" : [ \"ecr:GetDownloadUrlForLayer\" , \"ecr:BatchGetImage\" , \"ecr:BatchCheckLayerAvailability\" , \"ecr:PutImage\" , \"ecr:InitiateLayerUpload\" , \"ecr:UploadLayerPart\" , \"ecr:CompleteLayerUpload\" ], \"Resource\" : [ \"arn:aws:ecr:<region>:<account_id>:repository/team-a/*\" ] } ] }","title":"Create IAM policies for ECR repositories"},{"location":"security/docs/image/#consider-using-ecr-private-endpoints","text":"The ECR API has a public endpoint. Consequently, ECR registries can be accessed from the Internet so long as the request has been authenticated and authorized by IAM. For those who need to operate in a sandboxed environment where the cluster VPC lacks an Internet Gateway (IGW), you can configure a private endpoint for ECR. Creating a private endpoint enables you to privately access the ECR API through a private IP address instead of routing traffic across the Internet. For additional information on this topic, see Amazon ECR interface VPC endpoints .","title":"Consider using ECR private endpoints"},{"location":"security/docs/image/#implement-endpoint-policies-for-ecr","text":"The default endpoint policy for allows access to all ECR repositories within a region. This might allow an attacker/insider to exfiltrate data by packaging it as a container image and pushing it to a registry in another AWS account. Mitigating this risk involves creating an endpoint policy that limits API access to ECR repositories. For example, the following policy allows all AWS principles in your account to perform all actions against your and only your ECR repositories: { \"Statement\" : [ { \"Sid\" : \"LimitECRAccess\" , \"Principal\" : \"*\" , \"Action\" : \"*\" , \"Effect\" : \"Allow\" , \"Resource\" : \"arn:aws:ecr:<region>:<account_id>:repository/*\" } ] } You can enhance this further by setting a condition that uses the new PrincipalOrgID attribute which will prevent pushing/pulling of images by an IAM principle that is not part of your AWS Organization. See, aws:PrincipalOrgID for additional details. We recommended applying the same policy to both the com.amazonaws.<region>.ecr.dkr and the com.amazonaws.<region>.ecr.api endpoints. Since EKS pulls images for kube-proxy, coredns, and aws-node from ECR, you will need to add the account ID of the registry, e.g. 602401143452.dkr.ecr.us-west-2.amazonaws.com/* to the list of resources in the endpoint policy or alter the policy to allow pulls from \"*\" and restrict pushes to your account ID. The table below reveals the mapping between the AWS accounts where EKS images are vended from and cluster region. Account Number Region 602401143452 All commercial regions except for those listed below --- --- 800184023465 ap-east-1 - Asia Pacific (Hong Kong) 558608220178 me-south-1 - Middle East (Bahrain) 918309763551 cn-north-1 - China (Beijing) 961992271922 cn-northwest-1 - China (Ningxia) For further information about using endpoint policies, see Using VPC endpoint policies to control Amazon ECR access .","title":"Implement endpoint policies for ECR"},{"location":"security/docs/image/#implement-lifecycle-policies-for-ecr","text":"The NIST Application Container Security Guide warns about the risk of \"stale images in registries\", noting that over time old images with vulnerable, out-of-date software packages should be removed to prevent accidental deployment and exposure. Each ECR repository can have a lifecycle policy that sets rules for when images expire. The AWS official documentation describes how to set up test rules, evaluate them and then apply them. There are several lifecycle policy examples in the official docs that show different ways of filtering the images in a repository: Filtering by image age or count Filtering by tagged or untagged images Filtering by image tags, either in multiple rules or a single rule Warning If the image for long running application is purged from ECR, it can cause an image pull errors when the application is redeployed or scaled horizontally. When using image lifecycle policies, be sure you have good CI/CD practices in place to keep deployments and the images that they reference up to date and always create [image] expiry rules that account for how often you do releases/deployments.","title":"Implement lifecycle policies for ECR"},{"location":"security/docs/image/#create-a-set-of-curated-images","text":"Rather than allowing developers to create their own images, consider creating a set of vetted images for the different application stacks in your organization. By doing so, developers can forego learning how to compose Dockerfiles and concentrate on writing code. As changes are merged into Master, a CI/CD pipeline can automatically compile the asset, store it in an artifact repository and copy the artifact into the appropriate image before pushing it to a Docker registry like ECR. At the very least you should create a set of base images from which developers to create their own Dockerfiles. Ideally, you want to avoid pulling images from Dockerhub because a) you don't always know what is in the image and b) about a fifth of the top 1000 images have vulnerabilities. A list of those images and their vulnerabilities can be found at https://vulnerablecontainers.org/.","title":"Create a set of curated images"},{"location":"security/docs/image/#add-the-user-directive-to-your-dockerfiles-to-run-as-a-non-root-user","text":"As was mentioned in the pod security section, you should avoid running container as root. While you can configure this as part of the podSpec, it is a good habit to use the USER directive to your Dockerfiles. The USER directive sets the UID to use when running RUN , ENTRYPOINT , or CMD instruction that appears after the USER directive.","title":"Add the USER directive to your Dockerfiles to run as a non-root user"},{"location":"security/docs/image/#lint-your-dockerfiles","text":"Linting can be used to verify that your Dockerfiles are adhering to a set of predefined guidelines, e.g. the inclusion of the USER directive or the requirement that all images be tagged. dockerfile_lint is an open source project from RedHat that verifies common best practices and includes a rule engine that you can use to build your own rules for linting Dockerfiles. It can be incorporated into a CI pipeline, in that builds with Dockerfiles that violate a rule will automatically fail.","title":"Lint your Dockerfiles"},{"location":"security/docs/image/#build-images-from-scratch","text":"Reducing the attack surface of your container images should be primary aim when building images. The ideal way to do this is by creating minimal images that are devoid of binaries that can be used to exploit vulnerabilities. Fortunately, Docker has a mechanism to create images from scratch . With languages like Go, you can create a static linked binary and reference it in your Dockerfile as in this example: ############################ # STEP 1 build executable binary ############################ FROM golang:alpine AS builder# Install git. # Git is required for fetching the dependencies. RUN apk update && apk add --no-cache gitWORKDIR $GOPATH /src/mypackage/myapp/COPY . . # Fetch dependencies. # Using go get. RUN go get -d -v# Build the binary. RUN go build -o /go/bin/hello ############################ # STEP 2 build a small image ############################ FROM scratch# Copy our static executable. COPY --from = builder /go/bin/hello /go/bin/hello# Run the hello binary. ENTRYPOINT [ \"/go/bin/hello\" ] This creates a container image that consists of your application and nothing else, making it extremely secure.","title":"Build images from Scratch"},{"location":"security/docs/image/#use-immutable-tags-with-ecr","text":"Immutable tags force you to update the image tag on each push to the image repository. This can thwart an attacker from overwriting an image with a malicious version without changing the image's tags. Additionally, it gives you a way to easily and uniquely identify an image.","title":"Use immutable tags with ECR"},{"location":"security/docs/image/#sign-your-images-sboms-pipeline-runs-and-vulnerability-reports","text":"When Docker was first introduced, there was no cryptographic model for verifying container images. With v2, Docker added digests to the image manifest. This allowed an image\u2019s configuration to be hashed and for the hash to be used to generate an ID for the image. When image signing is enabled, the Docker engine verifies the manifest\u2019s signature, ensuring that the content was produced from a trusted source and no tampering has occurred. After each layer is downloaded, the engine verifies the digest of the layer, ensuring that the content matches the content specified in the manifest. Image signing effectively allows you to create a secure supply chain, through the verification of digital signatures associated with the image. We can use AWS Signer or Sigstore Cosign , to sign container images, create attestations for SBOMs, vulnerability scan reports and pipeline run reports. These attestations assure the trustworthiness and integrity of the image, that it is in fact created by the trusted pipeline without any interference or tampering, and that it contains only the software components that are documented (in the SBOM) that is verified and trusted by the image publisher. These attestations can be attached to the container image and pushed to the repository. In the next section we will see how to use the attested artifacts for audits and admissions controller verification.","title":"Sign your images, SBOMs, pipeline runs and vulnerability reports"},{"location":"security/docs/image/#image-integrity-verification-using-kubernetes-admission-controller","text":"We can verify image signatures, attested artifacts in an automated way before deploying the image to target Kubernetes cluster using dynamic admission controller and admit deployments only when the security metadata of the artifacts comply with the admission controller policies. For example we can write a policy that cryptographically verifies the signature of an image, an attested SBOM, attested pipeline run report, or attested CVE scan report. We can write conditions in the policy to check data in the report, e.g. a CVE scan should not have any critical CVEs. Deployment is allowed only for images that satisfy these conditions and all other deployments will be rejected by the admissions controller. Examples of admission controller include: Kyverno OPA Gatekeeper Portieris Ratify Kritis Grafeas tutorial Voucher","title":"Image integrity verification using Kubernetes admission controller"},{"location":"security/docs/image/#update-the-packages-in-your-container-images","text":"You should include RUN apt-get update && apt-get upgrade in your Dockerfiles to upgrade the packages in your images. Although upgrading requires you to run as root, this occurs during image build phase. The application doesn't need to run as root. You can install the updates and then switch to a different user with the USER directive. If your base image runs as a non-root user, switch to root and back; don't solely rely on the maintainers of the base image to install the latest security updates. Run apt-get clean to delete the installer files from /var/cache/apt/archives/ . You can also run rm -rf /var/lib/apt/lists/* after installing packages. This removes the index files or the lists of packages that are available to install. Be aware that these commands may be different for each package manager. For example: RUN apt-get update && apt-get install -y \\ curl \\ git \\ libsqlite3-dev \\ && apt-get clean && rm -rf /var/lib/apt/lists/*","title":"Update the packages in your container images"},{"location":"security/docs/image/#tools","text":"docker-slim Build secure minimal images dockle Verifies that your Dockerfile aligns with best practices for creating secure images dockerfile-lint Rule based linter for Dockerfiles hadolint A smart dockerfile linter Gatekeeper and OPA A policy based admission controller Kyverno A Kubernetes-native policy engine in-toto Allows the user to verify if a step in the supply chain was intended to be performed, and if the step was performed by the right actor Notary A project for signing container images Notary v2 Grafeas An open artifact metadata API to audit and govern your software supply chain","title":"Tools"},{"location":"security/docs/incidents.kr/","text":"{'name': 'English', 'build': True} \uc0ac\uace0 \ub300\uc751 \ubc0f \ud3ec\ub80c\uc2dd \u00b6 \uc0ac\uac74\uc5d0 \uc2e0\uc18d\ud558\uac8c \ub300\uc751\ud558\ub294 \ub2a5\ub825\uc740 \uc704\ubc18\uc73c\ub85c \uc778\ud55c \ud53c\ud574\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud589\ub3d9\uc744 \uacbd\uace0\ud560 \uc218 \uc788\ub294 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uacbd\ubcf4 \uc2dc\uc2a4\ud15c\uc744 \uac16\ucd94\ub294 \uac83\uc774 \uc88b\uc740 \uc0ac\uace0 \ub300\uc751 \uacc4\ud68d\uc758 \uccab \ubc88\uc9f8 \ub2e8\uacc4\uc785\ub2c8\ub2e4. \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud558\uba74 \uc601\ud5a5\uc744 \ubc1b\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ud3d0\uae30\ud558\uace0 \uad50\uccb4\ud560\uc9c0 \ub610\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uaca9\ub9ac\ud558\uace0 \uac80\uc0ac\ud560\uc9c0 \uc2e0\uc18d\ud558\uac8c \uacb0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub80c\uc2dd \uc870\uc0ac \ubc0f \uadfc\ubcf8 \uc6d0\uc778 \ubd84\uc11d\uc758 \uc77c\ubd80\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uaca9\ub9ac\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 \ub2e4\uc74c \ud65c\ub3d9 \uc9d1\ud569\uc744 \ub530\ub77c\uc57c \ud569\ub2c8\ub2e4. \uc0d8\ud50c \uc0ac\uace0 \ub300\uc751 \uacc4\ud68d \u00b6 \ubb38\uc81c\uac00 \ub418\ub294 \ud3ec\ub4dc \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4 \u00b6 \uccab \ubc88\uc9f8 \uc870\uce58\ub294 \uc190\uc0c1\uc744 \uaca9\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc704\ubc18\uc774 \ubc1c\uc0dd\ud55c \uc704\uce58\ub97c \uc2dd\ubcc4\ud558\ub294 \uac83\ubd80\ud130 \uc2dc\uc791\ud558\uc5ec \ub098\uba38\uc9c0 \uc778\ud504\ub77c\uc5d0\uc11c \ud574\ub2f9 Pod\uc640 \ud574\ub2f9 \ub178\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c\uac00 \ub418\ub294 Pod \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4 \u00b6 \uc798\ubabb\ub41c \ud31f(Pod)\uc758 \uc774\ub984\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc54c\uace0 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ud31f(Pod)\uc744 \uc2e4\ud589\ud558\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pods <\uc774\ub984> --namespace <\uc774\ub984 \uacf5\uac04> -o=jsonpath='{.spec.nodeName}{\"\\n\"}' \ubc30\ud3ec\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4(https://kubernetes.io/docs/concepts/workloads/controllers/)\uac00 \uc190\uc0c1\ub41c \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc758 \uc77c\ubd80\uc778 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc190\uc0c1\ub418\uc5c8\uc744 \uac00\ub2a5\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uc640 \uc2e4\ud589 \uc911\uc778 \ub178\ub4dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. selector=$(kubectl get deployments <\uc774\ub984> \\ --\ub124\uc784\uc2a4\ud398\uc774\uc2a4 <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> -o json | jq -j \\ '.spec.selector.matchLabels | to_entries | .[] | \"\\(.\ud0a4)=\\(.\uac12)\"') kubectl get pods --namespace <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> --selector=$selector \\ -o json | jq -r '.\ud56d\ubaa9[] | \"\\(.metadata.name) \\(.spec.nodeName)\"' \uc704\uc758 \uba85\ub839\uc740 \ubc30\ud3ec\uc6a9\uc785\ub2c8\ub2e4. replicasets, statefulsets \ub4f1\uacfc \uac19\uc740 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c\uac00 \ub418\ub294 Pod \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4 \u00b6 \uacbd\uc6b0\uc5d0 \ub530\ub77c \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc190\uc0c1\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dd\ubcc4\ub41c \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ub4dc\uac00 \uc190\uc0c1\ub418\uc5c8\uc744 \uac00\ub2a5\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc73c\ub85c \uc2e4\ud589 \uc911\uc778 \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud3ec\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pods -o json --namespace <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> | \\ jq -r '.\ud56d\ubaa9[] | select(.spec.serviceAccount == \"<\uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984>\") | \"\\(.metadata.name) \\(.spec.nodeName)\"' \ucde8\uc57d\ud558\uac70\ub098 \uc190\uc0c1\ub41c \uc774\ubbf8\uc9c0 \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \uc788\ub294 Pod \uc2dd\ubcc4 \u00b6 \uacbd\uc6b0\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc758 \ud31f(Pod)\uc5d0\uc11c \uc0ac\uc6a9 \uc911\uc778 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uac00 \uc545\uc758\uc801\uc774\uac70\ub098 \uc190\uc0c1\ub418\uc5c8\uc74c\uc744 \ubc1c\uacac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \uc545\uc758\uc801\uc774\uac70\ub098 \uc190\uc0c1\ub41c \uac83\uc785\ub2c8\ub2e4. \ub9ec\uc6e8\uc5b4\ub97c \ud3ec\ud568\ud558\ub294 \uac83\uc73c\ub85c \ud655\uc778\ub418\uac70\ub098 \uc54c\ub824\uc9c4 \ubd88\ub7c9 \uc774\ubbf8\uc9c0\uc774\uac70\ub098 \uc545\uc6a9\ub41c CVE\uac00 \uc788\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc190\uc0c1\ub41c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc73c\ub85c \uc2e4\ud589 \uc911\uc778 \uc774\ubbf8\uc9c0\uc640 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IMAGE=<\uc545\uc131/\uc190\uc0c1\ub41c \uc774\ubbf8\uc9c0\uc758 \uc774\ub984> kubectl get pods -o json --all-namespaces | \\ jq -r --arg \uc774\ubbf8\uc9c0 \"$IMAGE\" '.items[] | select(.spec.containers[] | .image == $image) | \"\\(.metadata.name) \\(.metadata.namespace) \\(.spec.nodeName)\"' \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc778\uadf8\ub808\uc2a4 \ubc0f \uc774\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\uc744 \uac70\ubd80\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc5ec \ud3ec\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4. \u00b6 \ubaa8\ub4e0 \ud2b8\ub798\ud53d \uac70\ubd80 \uaddc\uce59\uc740 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc5f0\uacb0\uc744 \ub04a\uc74c\uc73c\ub85c\uc368 \uc774\ubbf8 \uc9c4\ud589 \uc911\uc778 \uacf5\uaca9\uc744 \uc911\uc9c0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 app=web \ub808\uc774\ube14\uc774 \uc788\ub294 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4 . apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \uc6f9 \uc815\ucc45 \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4 \uc8fc\ubaa9 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \uacf5\uaca9\uc790\uac00 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc740 \uacbd\uc6b0 \ud6a8\uacfc\uac00 \uc5c6\ub294 \uac83\uc73c\ub85c \ud310\uba85\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc77c\uc774 \ubc1c\uc0dd\ud55c \uac83\uc73c\ub85c \uc758\uc2ec\ub418\ub294 \uacbd\uc6b0 AWS \ubcf4\uc548 \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc190\uc0c1\ub41c \ud638\uc2a4\ud2b8\ub97c \ub2e4\ub978 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uaca9\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud638\uc2a4\ud2b8\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \ub54c \ud574\ub2f9 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\uc2ed\uc2dc\uc624. \ud544\uc694\ud55c \uacbd\uc6b0 \ud3ec\ub4dc \ub610\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc784\uc2dc \ubcf4\uc548 \uc790\uaca9 \uc99d\uba85 \ucde8\uc18c \u00b6 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud3ec\ub4dc\uac00 \ub2e4\ub978 AWS \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 IAM \uc5ed\ud560\uc774 \ud560\ub2f9\ub41c \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud574\ub2f9 \uc5ed\ud560\uc744 \uc81c\uac70\ud558\uc5ec \uacf5\uaca9\uc73c\ub85c \uc778\ud55c \ucd94\uac00 \uc190\uc0c1\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud3ec\ub4dc\uc5d0 IAM \uc5ed\ud560\uc774 \ud560\ub2f9\ub41c \uacbd\uc6b0 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \uc5ed\ud560\uc5d0\uc11c IAM \uc815\ucc45\uc744 \uc548\uc804\ud558\uac8c \uc81c\uac70\ud560 \uc218 \uc788\ub294\uc9c0 \ud3c9\uac00\ud569\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc \ucc28\ub2e8 \u00b6 \uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ucc28\ub2e8\ud558\uba74 \uc601\ud5a5\uc744 \ubc1b\ub294 \ub178\ub4dc\uc5d0 Pod\ub97c \uc608\uc57d\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc2a4\ucf00\uc904\ub7ec\uc5d0 \uc54c\ub9bd\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubc29\ud574\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub80c\uc2dd \uc5f0\uad6c\ub97c \uc704\ud574 \ub178\ub4dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 \uc774 \uc9c0\uce68\uc740 \uac01 Fargate \ud3ec\ub4dc\uac00 \uc790\uccb4 \uc0cc\ub4dc\ubc15\uc2a4 \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Fargate\uc5d0\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucc28\ub2e8\ud558\ub294 \ub300\uc2e0 \ubaa8\ub4e0 \uc218\uc2e0 \ubc0f \uc1a1\uc2e0 \ud2b8\ub798\ud53d\uc744 \uac70\ubd80\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc801\uc6a9\ud558\uc5ec \uc601\ud5a5\uc744 \ubc1b\ub294 Fargate \ud3ec\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4. \uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc885\ub8cc \ubcf4\ud638 \ud65c\uc131\ud654 \u00b6 \uacf5\uaca9\uc790\ub294 \uc601\ud5a5\uc744 \ubc1b\ub294 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\uc5ec \uc545\ud589\uc744 \uc9c0\uc6b0\ub824\uace0 \uc2dc\ub3c4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc885\ub8cc \ubc29\uc9c0 \uae30\ub2a5 \uc744 \ud65c\uc131\ud654 \ud558\uba74 \uc774\ub7ec\ud55c \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \ucd95\uc18c \ubcf4\ud638 \ub294 \ucd95\uc18c \uc774\ubca4\ud2b8\ub85c\ubd80\ud130 \ub178\ub4dc\ub97c \ubcf4\ud638\ud569\ub2c8\ub2e4. \uacbd\uace0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub294 \uc885\ub8cc \ubc29\uc9c0 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ubb38\uc81c\uac00 \ub418\ub294 \ud3ec\ub4dc/\ub178\ub4dc\uc5d0 \ud65c\uc131 \uc870\uc0ac\uc758 \uc77c\ubd80\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \u00b6 \uc774\ub294 \uc870\uc0ac\uac00 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc601\ud5a5\uc744 \ubc1b\ub294 \ud3ec\ub4dc/\ub178\ub4dc\ub97c \ubcc0\uc870\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c \uacbd\uace0\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \ud718\ubc1c\uc131 \uc544\ud2f0\ud329\ud2b8 \ucea1\ucc98 \u00b6 \uc6b4\uc601 \uccb4\uc81c \uba54\ubaa8\ub9ac \ucea1\ucc98 . \uadf8\ub7ec\uba74 Docker \ub370\ubaac\uacfc \ucee8\ud14c\uc774\ub108\ub2f9 \ud558\uc704 \ud504\ub85c\uc138\uc2a4\uac00 \ucea1\ucc98\ub429\ub2c8\ub2e4. \uc6d0\uaca9 \uba54\ubaa8\ub9ac \ud68d\ub4dd \ub3c4\uad6c\uc778 MargaritaShotgun \uc774 \uc774\ub7ec\ud55c \ub178\ub825\uc744 \ub3c4\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc640 \uc5f4\ub9b0 \ud3ec\ud2b8\uc758 netstat \ud2b8\ub9ac \ub364\ud504\ub97c \uc218\ud589\ud569\ub2c8\ub2e4 . \uc774\ub807\uac8c \ud558\uba74 \ub3c4\ucee4 \ub370\ubaac\uacfc \ucee8\ud14c\uc774\ub108\ub2f9 \ud558\uc704 \ud504\ub85c\uc138\uc2a4\uac00 \ucea1\ucc98\ub429\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc99d\uac70\uac00 \ubcc0\uacbd\ub418\uae30 \uc804\uc5d0 docker \uba85\ub839 \uc2e4\ud589 . \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\ub97c \uc704\ud55c docker container top CONTAINER . \ub370\ubaac \uc218\uc900 \ubcf4\uc720 \ub85c\uadf8\uc5d0 \ub300\ud55c docker \ucee8\ud14c\uc774\ub108 \ub85c\uadf8 CONTAINER . \uc5f4\ub9b0 \ud3ec\ud2b8 \ubaa9\ub85d\uc5d0 \ub300\ud55c '\ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \ud3ec\ud2b8 CONTAINER' . docker container diff CONTAINER \ub294 \ucd08\uae30 \uc2e4\ud589 \uc774\ud6c4 \ucee8\ud14c\uc774\ub108\uc758 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud30c\uc77c \ubc0f \ub514\ub809\ud1a0\ub9ac\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ucea1\ucc98\ud569\ub2c8\ub2e4. \ud3ec\ub80c\uc2dd \ucea1\ucc98\ub97c \uc704\ud574 \ucee8\ud14c\uc774\ub108\ub97c \uc77c\uc2dc\uc911\uc9c0\ud569\ub2c8\ub2e4 . \uc778\uc2a4\ud134\uc2a4\uc758 EBS \ubcfc\ub968 \uc2a4\ub0c5\uc0f7 . \uc190\uc0c1\ub41c \ud3ec\ub4dc \ub610\ub294 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4 \uc7ac\ubc30\ud3ec \u00b6 \ud3ec\ub80c\uc2dd \ubd84\uc11d\uc744 \uc704\ud55c \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud55c \ud6c4\uc5d0\ub294 \uc190\uc0c1\ub41c \ud3ec\ub4dc \ub610\ub294 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub97c \uc7ac\ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 \uc190\uc0c1\ub41c \ucde8\uc57d\uc131\uc5d0 \ub300\ud55c \uc218\uc815 \uc0ac\ud56d\uc744 \ub864\uc544\uc6c3\ud558\uace0 \uc0c8 \uad50\uccb4 \ud3ec\ub4dc\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ucde8\uc57d\ud55c \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. \ucde8\uc57d\ud55c \ud3ec\ub4dc\uac00 \ub354 \ub192\uc740 \uc218\uc900\uc758 Kubernetes \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4(\uc608: \ubc30\ud3ec \ub610\ub294 DaemonSet)\uc5d0 \uc758\ud574 \uad00\ub9ac\ub418\ub294 \uacbd\uc6b0 \uc774\ub97c \uc0ad\uc81c\ud558\uba74 \uc0c8 \ud3ec\ub4dc\uac00 \uc608\uc57d\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ucde8\uc57d\ud55c \ud3ec\ub4dc\uac00 \ub2e4\uc2dc \uc2dc\uc791\ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ucde8\uc57d\uc131\uc744 \uc218\uc815\ud55c \ud6c4 \uc0c8 \ub300\uccb4 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub97c \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ucde8\uc57d\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc0ad\uc81c\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 AWS \ubcf4\uc548 \uc0ac\uace0 \ub300\uc751 \ubc31\uc11c \uac80\ud1a0 \u00b6 AWS \ubcf4\uc548 \uc0ac\uace0 \ub300\uc751 ]( https://d1.awsstatic.com/whitepapers/aws_security_incident_response.pdf \ubc31\uc11c\uc5d0\uc11c \ucca0\uc800\ud558\uac8c \ub2e4\ub8f9\ub2c8\ub2e4. ). \ubcf4\uc548 \uac8c\uc784 \uc5f0\uc2b5 \ub0a0 \u00b6 \ubcf4\uc548 \uc2e4\ubb34\uc790\ub97c \ube68\uac04\uc0c9\uacfc \ud30c\ub780\uc0c9\uc758 \ub450 \ud300\uc73c\ub85c \ub098\ub215\ub2c8\ub2e4. \ub808\ub4dc \ud300\uc740 \uc11c\ub85c \ub2e4\ub978 \uc2dc\uc2a4\ud15c\uc758 \ucde8\uc57d\uc810\uc744 \uc870\uc0ac\ud558\ub294 \ub370 \uc9d1\uc911\ud558\uace0 \ube14\ub8e8 \ud300\uc740 \uc2dc\uc2a4\ud15c \ubc29\uc5b4\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 \ud300\uc744 \ub9cc\ub4e4 \ubcf4\uc548 \uc2e4\ubb34\uc790\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Kubernetes \uc775\uc2a4\ud50c\ub85c\uc787\uc5d0 \ub300\ud55c \uc9c0\uc2dd\uc774 \uc788\ub294 \uc678\ubd80 \uc5d4\ud130\ud2f0\ub97c \uace0\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubesploit \ub294 CyberArk\uc758 \uce68\ud22c \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub85c \uac8c\uc784 \ub370\uc774\ub97c \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ucde8\uc57d\uc810\uc744 \uc2a4\uce94\ud558\ub294 \ub2e4\ub978 \ub3c4\uad6c\uc640 \ub2ec\ub9ac kubesploit\uc740 \uc2e4\uc81c \uacf5\uaca9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ube14\ub8e8 \ud300\uc740 \uacf5\uaca9\uc5d0 \ub300\ud55c \ub300\uc751\uc744 \uc5f0\uc2b5\ud558\uace0 \uadf8 \ud6a8\uacfc\ub97c \uce21\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uce68\ud22c \ud14c\uc2a4\ud2b8 \uc2e4\ud589 \u00b6 \uc790\uc2e0\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \uc8fc\uae30\uc801\uc73c\ub85c \uacf5\uaca9\ud558\uba74 \ucde8\uc57d\uc131\uacfc \uc798\ubabb\ub41c \uad6c\uc131\uc744 \ubc1c\uacac\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc791\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \uc218\ud589\ud558\uae30 \uc804\uc5d0 \uce68\ud22c \ud14c\uc2a4\ud2b8 \uc9c0\uce68 \uc744 \ub530\ub974\uc2ed\uc2dc\uc624. \ub3c4\uad6c \u00b6 kube-hunter , Kubernetes\uc6a9 \uce68\ud22c \ud14c\uc2a4\ud2b8 \ub3c4\uad6c. Gremlin , \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc778\ud504\ub77c\uc5d0 \ub300\ud55c \uacf5\uaca9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ud234\ud0b7. kube-forensics , \uc2e4\ud589 \uc911\uc778 \ud3ec\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uc218\uc9d1\ud558\uace0 S3 \ubc84\ud0b7\uc5d0 \ub364\ud504\ud558\ub294 \uc791\uc5c5\uc744 \ud2b8\ub9ac\uac70\ud558\ub294 Kubernetes \ucee8\ud2b8\ub864\ub7ec. Kubernetes \uc124\uce58 \uacf5\uaca9 \ubc0f \ubc29\uc5b4 kubesploit \ub3d9\uc601\uc0c1 \u00b6 \uc9c0\ub2a5\ud615 \uc9c0\uc18d\uc801 \uc704\ud611 Kubernetes \uc2e4\uc6a9 \uacf5\uaca9 \ubc0f \ubc29\uc5b4 RBAC \uad8c\ud55c\uc744 \uc545\uc6a9\ud558\uc5ec Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc190\uc0c1","title":"\uc0ac\uace0 \ub300\uc751 \ubc0f \ud3ec\ub80c\uc2dd"},{"location":"security/docs/incidents.kr/#_1","text":"\uc0ac\uac74\uc5d0 \uc2e0\uc18d\ud558\uac8c \ub300\uc751\ud558\ub294 \ub2a5\ub825\uc740 \uc704\ubc18\uc73c\ub85c \uc778\ud55c \ud53c\ud574\ub97c \ucd5c\uc18c\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud589\ub3d9\uc744 \uacbd\uace0\ud560 \uc218 \uc788\ub294 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \uacbd\ubcf4 \uc2dc\uc2a4\ud15c\uc744 \uac16\ucd94\ub294 \uac83\uc774 \uc88b\uc740 \uc0ac\uace0 \ub300\uc751 \uacc4\ud68d\uc758 \uccab \ubc88\uc9f8 \ub2e8\uacc4\uc785\ub2c8\ub2e4. \uc0ac\uace0\uac00 \ubc1c\uc0dd\ud558\uba74 \uc601\ud5a5\uc744 \ubc1b\uc740 \ucee8\ud14c\uc774\ub108\ub97c \ud3d0\uae30\ud558\uace0 \uad50\uccb4\ud560\uc9c0 \ub610\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uaca9\ub9ac\ud558\uace0 \uac80\uc0ac\ud560\uc9c0 \uc2e0\uc18d\ud558\uac8c \uacb0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub80c\uc2dd \uc870\uc0ac \ubc0f \uadfc\ubcf8 \uc6d0\uc778 \ubd84\uc11d\uc758 \uc77c\ubd80\ub85c \ucee8\ud14c\uc774\ub108\ub97c \uaca9\ub9ac\ud558\uae30\ub85c \uc120\ud0dd\ud55c \uacbd\uc6b0 \ub2e4\uc74c \ud65c\ub3d9 \uc9d1\ud569\uc744 \ub530\ub77c\uc57c \ud569\ub2c8\ub2e4.","title":"\uc0ac\uace0 \ub300\uc751 \ubc0f \ud3ec\ub80c\uc2dd"},{"location":"security/docs/incidents.kr/#_2","text":"","title":"\uc0d8\ud50c \uc0ac\uace0 \ub300\uc751 \uacc4\ud68d"},{"location":"security/docs/incidents.kr/#_3","text":"\uccab \ubc88\uc9f8 \uc870\uce58\ub294 \uc190\uc0c1\uc744 \uaca9\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc704\ubc18\uc774 \ubc1c\uc0dd\ud55c \uc704\uce58\ub97c \uc2dd\ubcc4\ud558\ub294 \uac83\ubd80\ud130 \uc2dc\uc791\ud558\uc5ec \ub098\uba38\uc9c0 \uc778\ud504\ub77c\uc5d0\uc11c \ud574\ub2f9 Pod\uc640 \ud574\ub2f9 \ub178\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4.","title":"\ubb38\uc81c\uac00 \ub418\ub294 \ud3ec\ub4dc \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4"},{"location":"security/docs/incidents.kr/#pod","text":"\uc798\ubabb\ub41c \ud31f(Pod)\uc758 \uc774\ub984\uacfc \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc54c\uace0 \uc788\ub294 \uacbd\uc6b0 \ub2e4\uc74c\uacfc \uac19\uc774 \ud31f(Pod)\uc744 \uc2e4\ud589\ud558\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pods <\uc774\ub984> --namespace <\uc774\ub984 \uacf5\uac04> -o=jsonpath='{.spec.nodeName}{\"\\n\"}' \ubc30\ud3ec\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4(https://kubernetes.io/docs/concepts/workloads/controllers/)\uac00 \uc190\uc0c1\ub41c \uacbd\uc6b0 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc758 \uc77c\ubd80\uc778 \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc190\uc0c1\ub418\uc5c8\uc744 \uac00\ub2a5\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uc640 \uc2e4\ud589 \uc911\uc778 \ub178\ub4dc\ub97c \ub098\uc5f4\ud569\ub2c8\ub2e4. selector=$(kubectl get deployments <\uc774\ub984> \\ --\ub124\uc784\uc2a4\ud398\uc774\uc2a4 <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> -o json | jq -j \\ '.spec.selector.matchLabels | to_entries | .[] | \"\\(.\ud0a4)=\\(.\uac12)\"') kubectl get pods --namespace <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> --selector=$selector \\ -o json | jq -r '.\ud56d\ubaa9[] | \"\\(.metadata.name) \\(.spec.nodeName)\"' \uc704\uc758 \uba85\ub839\uc740 \ubc30\ud3ec\uc6a9\uc785\ub2c8\ub2e4. replicasets, statefulsets \ub4f1\uacfc \uac19\uc740 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc6cc\ud06c\ub85c\ub4dc \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c\uac00 \ub418\ub294 Pod \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4"},{"location":"security/docs/incidents.kr/#pod_1","text":"\uacbd\uc6b0\uc5d0 \ub530\ub77c \uc11c\ube44\uc2a4 \uacc4\uc815\uc774 \uc190\uc0c1\ub418\uc5c8\uc74c\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dd\ubcc4\ub41c \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc0ac\uc6a9\ud558\ub294 \ud3ec\ub4dc\uac00 \uc190\uc0c1\ub418\uc5c8\uc744 \uac00\ub2a5\uc131\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc73c\ub85c \uc2e4\ud589 \uc911\uc778 \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud3ec\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get pods -o json --namespace <\ub124\uc784\uc2a4\ud398\uc774\uc2a4> | \\ jq -r '.\ud56d\ubaa9[] | select(.spec.serviceAccount == \"<\uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984>\") | \"\\(.metadata.name) \\(.spec.nodeName)\"'","title":"\uc11c\ube44\uc2a4 \uacc4\uc815 \uc774\ub984\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubb38\uc81c\uac00 \ub418\ub294 Pod \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc \uc2dd\ubcc4"},{"location":"security/docs/incidents.kr/#pod_2","text":"\uacbd\uc6b0\uc5d0 \ub530\ub77c \ud074\ub7ec\uc2a4\ud130\uc758 \ud31f(Pod)\uc5d0\uc11c \uc0ac\uc6a9 \uc911\uc778 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uac00 \uc545\uc758\uc801\uc774\uac70\ub098 \uc190\uc0c1\ub418\uc5c8\uc74c\uc744 \ubc1c\uacac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 \uc545\uc758\uc801\uc774\uac70\ub098 \uc190\uc0c1\ub41c \uac83\uc785\ub2c8\ub2e4. \ub9ec\uc6e8\uc5b4\ub97c \ud3ec\ud568\ud558\ub294 \uac83\uc73c\ub85c \ud655\uc778\ub418\uac70\ub098 \uc54c\ub824\uc9c4 \ubd88\ub7c9 \uc774\ubbf8\uc9c0\uc774\uac70\ub098 \uc545\uc6a9\ub41c CVE\uac00 \uc788\ub294 \uacbd\uc6b0\uc785\ub2c8\ub2e4. \uc190\uc0c1\ub41c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc73c\ub85c \uc2e4\ud589 \uc911\uc778 \uc774\ubbf8\uc9c0\uc640 \ub178\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. IMAGE=<\uc545\uc131/\uc190\uc0c1\ub41c \uc774\ubbf8\uc9c0\uc758 \uc774\ub984> kubectl get pods -o json --all-namespaces | \\ jq -r --arg \uc774\ubbf8\uc9c0 \"$IMAGE\" '.items[] | select(.spec.containers[] | .image == $image) | \"\\(.metadata.name) \\(.metadata.namespace) \\(.spec.nodeName)\"'","title":"\ucde8\uc57d\ud558\uac70\ub098 \uc190\uc0c1\ub41c \uc774\ubbf8\uc9c0 \ubc0f \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \uc788\ub294 Pod \uc2dd\ubcc4"},{"location":"security/docs/incidents.kr/#_4","text":"\ubaa8\ub4e0 \ud2b8\ub798\ud53d \uac70\ubd80 \uaddc\uce59\uc740 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc5f0\uacb0\uc744 \ub04a\uc74c\uc73c\ub85c\uc368 \uc774\ubbf8 \uc9c4\ud589 \uc911\uc778 \uacf5\uaca9\uc744 \uc911\uc9c0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 app=web \ub808\uc774\ube14\uc774 \uc788\ub294 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4 . apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \uc6f9 \uc815\ucc45 \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4 \uc8fc\ubaa9 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \uacf5\uaca9\uc790\uac00 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc740 \uacbd\uc6b0 \ud6a8\uacfc\uac00 \uc5c6\ub294 \uac83\uc73c\ub85c \ud310\uba85\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc77c\uc774 \ubc1c\uc0dd\ud55c \uac83\uc73c\ub85c \uc758\uc2ec\ub418\ub294 \uacbd\uc6b0 AWS \ubcf4\uc548 \uadf8\ub8f9 \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc190\uc0c1\ub41c \ud638\uc2a4\ud2b8\ub97c \ub2e4\ub978 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uaca9\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud638\uc2a4\ud2b8\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubcc0\uacbd\ud560 \ub54c \ud574\ub2f9 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce5c\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\uc2ed\uc2dc\uc624.","title":"\ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc778\uadf8\ub808\uc2a4 \ubc0f \uc774\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\uc744 \uac70\ubd80\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc5ec \ud3ec\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4."},{"location":"security/docs/incidents.kr/#_5","text":"\uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud3ec\ub4dc\uac00 \ub2e4\ub978 AWS \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 IAM \uc5ed\ud560\uc774 \ud560\ub2f9\ub41c \uacbd\uc6b0 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud574\ub2f9 \uc5ed\ud560\uc744 \uc81c\uac70\ud558\uc5ec \uacf5\uaca9\uc73c\ub85c \uc778\ud55c \ucd94\uac00 \uc190\uc0c1\uc744 \ubc29\uc9c0\ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud3ec\ub4dc\uc5d0 IAM \uc5ed\ud560\uc774 \ud560\ub2f9\ub41c \uacbd\uc6b0 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 \uc5ed\ud560\uc5d0\uc11c IAM \uc815\ucc45\uc744 \uc548\uc804\ud558\uac8c \uc81c\uac70\ud560 \uc218 \uc788\ub294\uc9c0 \ud3c9\uac00\ud569\ub2c8\ub2e4.","title":"\ud544\uc694\ud55c \uacbd\uc6b0 \ud3ec\ub4dc \ub610\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ud560\ub2f9\ub41c \uc784\uc2dc \ubcf4\uc548 \uc790\uaca9 \uc99d\uba85 \ucde8\uc18c"},{"location":"security/docs/incidents.kr/#_6","text":"\uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ucc28\ub2e8\ud558\uba74 \uc601\ud5a5\uc744 \ubc1b\ub294 \ub178\ub4dc\uc5d0 Pod\ub97c \uc608\uc57d\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc2a4\ucf00\uc904\ub7ec\uc5d0 \uc54c\ub9bd\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ub2e4\ub978 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubc29\ud574\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub80c\uc2dd \uc5f0\uad6c\ub97c \uc704\ud574 \ub178\ub4dc\ub97c \uc81c\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 \uc774 \uc9c0\uce68\uc740 \uac01 Fargate \ud3ec\ub4dc\uac00 \uc790\uccb4 \uc0cc\ub4dc\ubc15\uc2a4 \ud658\uacbd\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Fargate\uc5d0\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucc28\ub2e8\ud558\ub294 \ub300\uc2e0 \ubaa8\ub4e0 \uc218\uc2e0 \ubc0f \uc1a1\uc2e0 \ud2b8\ub798\ud53d\uc744 \uac70\ubd80\ud558\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc801\uc6a9\ud558\uc5ec \uc601\ud5a5\uc744 \ubc1b\ub294 Fargate \ud3ec\ub4dc\ub97c \uaca9\ub9ac\ud569\ub2c8\ub2e4.","title":"\uc791\uc5c5\uc790 \ub178\ub4dc \ucc28\ub2e8"},{"location":"security/docs/incidents.kr/#_7","text":"\uacf5\uaca9\uc790\ub294 \uc601\ud5a5\uc744 \ubc1b\ub294 \ub178\ub4dc\ub97c \uc885\ub8cc\ud558\uc5ec \uc545\ud589\uc744 \uc9c0\uc6b0\ub824\uace0 \uc2dc\ub3c4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc885\ub8cc \ubc29\uc9c0 \uae30\ub2a5 \uc744 \ud65c\uc131\ud654 \ud558\uba74 \uc774\ub7ec\ud55c \uc0c1\ud669\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4 \ucd95\uc18c \ubcf4\ud638 \ub294 \ucd95\uc18c \uc774\ubca4\ud2b8\ub85c\ubd80\ud130 \ub178\ub4dc\ub97c \ubcf4\ud638\ud569\ub2c8\ub2e4. \uacbd\uace0 \uc2a4\ud31f \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c\ub294 \uc885\ub8cc \ubc29\uc9c0 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc885\ub8cc \ubcf4\ud638 \ud65c\uc131\ud654"},{"location":"security/docs/incidents.kr/#_8","text":"\uc774\ub294 \uc870\uc0ac\uac00 \uc644\ub8cc\ub420 \ub54c\uae4c\uc9c0 \uc601\ud5a5\uc744 \ubc1b\ub294 \ud3ec\ub4dc/\ub178\ub4dc\ub97c \ubcc0\uc870\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c \uacbd\uace0\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4.","title":"\ubb38\uc81c\uac00 \ub418\ub294 \ud3ec\ub4dc/\ub178\ub4dc\uc5d0 \ud65c\uc131 \uc870\uc0ac\uc758 \uc77c\ubd80\uc784\uc744 \ub098\ud0c0\ub0b4\ub294 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4."},{"location":"security/docs/incidents.kr/#_9","text":"\uc6b4\uc601 \uccb4\uc81c \uba54\ubaa8\ub9ac \ucea1\ucc98 . \uadf8\ub7ec\uba74 Docker \ub370\ubaac\uacfc \ucee8\ud14c\uc774\ub108\ub2f9 \ud558\uc704 \ud504\ub85c\uc138\uc2a4\uac00 \ucea1\ucc98\ub429\ub2c8\ub2e4. \uc6d0\uaca9 \uba54\ubaa8\ub9ac \ud68d\ub4dd \ub3c4\uad6c\uc778 MargaritaShotgun \uc774 \uc774\ub7ec\ud55c \ub178\ub825\uc744 \ub3c4\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc640 \uc5f4\ub9b0 \ud3ec\ud2b8\uc758 netstat \ud2b8\ub9ac \ub364\ud504\ub97c \uc218\ud589\ud569\ub2c8\ub2e4 . \uc774\ub807\uac8c \ud558\uba74 \ub3c4\ucee4 \ub370\ubaac\uacfc \ucee8\ud14c\uc774\ub108\ub2f9 \ud558\uc704 \ud504\ub85c\uc138\uc2a4\uac00 \ucea1\ucc98\ub429\ub2c8\ub2e4. \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \uc99d\uac70\uac00 \ubcc0\uacbd\ub418\uae30 \uc804\uc5d0 docker \uba85\ub839 \uc2e4\ud589 . \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\ub97c \uc704\ud55c docker container top CONTAINER . \ub370\ubaac \uc218\uc900 \ubcf4\uc720 \ub85c\uadf8\uc5d0 \ub300\ud55c docker \ucee8\ud14c\uc774\ub108 \ub85c\uadf8 CONTAINER . \uc5f4\ub9b0 \ud3ec\ud2b8 \ubaa9\ub85d\uc5d0 \ub300\ud55c '\ub3c4\ucee4 \ucee8\ud14c\uc774\ub108 \ud3ec\ud2b8 CONTAINER' . docker container diff CONTAINER \ub294 \ucd08\uae30 \uc2e4\ud589 \uc774\ud6c4 \ucee8\ud14c\uc774\ub108\uc758 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \ud30c\uc77c \ubc0f \ub514\ub809\ud1a0\ub9ac\uc758 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ucea1\ucc98\ud569\ub2c8\ub2e4. \ud3ec\ub80c\uc2dd \ucea1\ucc98\ub97c \uc704\ud574 \ucee8\ud14c\uc774\ub108\ub97c \uc77c\uc2dc\uc911\uc9c0\ud569\ub2c8\ub2e4 . \uc778\uc2a4\ud134\uc2a4\uc758 EBS \ubcfc\ub968 \uc2a4\ub0c5\uc0f7 .","title":"\uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c \ud718\ubc1c\uc131 \uc544\ud2f0\ud329\ud2b8 \ucea1\ucc98"},{"location":"security/docs/incidents.kr/#_10","text":"\ud3ec\ub80c\uc2dd \ubd84\uc11d\uc744 \uc704\ud55c \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud55c \ud6c4\uc5d0\ub294 \uc190\uc0c1\ub41c \ud3ec\ub4dc \ub610\ub294 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub97c \uc7ac\ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 \uc190\uc0c1\ub41c \ucde8\uc57d\uc131\uc5d0 \ub300\ud55c \uc218\uc815 \uc0ac\ud56d\uc744 \ub864\uc544\uc6c3\ud558\uace0 \uc0c8 \uad50\uccb4 \ud3ec\ub4dc\ub97c \uc2dc\uc791\ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ucde8\uc57d\ud55c \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud569\ub2c8\ub2e4. \ucde8\uc57d\ud55c \ud3ec\ub4dc\uac00 \ub354 \ub192\uc740 \uc218\uc900\uc758 Kubernetes \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4(\uc608: \ubc30\ud3ec \ub610\ub294 DaemonSet)\uc5d0 \uc758\ud574 \uad00\ub9ac\ub418\ub294 \uacbd\uc6b0 \uc774\ub97c \uc0ad\uc81c\ud558\uba74 \uc0c8 \ud3ec\ub4dc\uac00 \uc608\uc57d\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \ucde8\uc57d\ud55c \ud3ec\ub4dc\uac00 \ub2e4\uc2dc \uc2dc\uc791\ub429\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ucde8\uc57d\uc131\uc744 \uc218\uc815\ud55c \ud6c4 \uc0c8 \ub300\uccb4 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub97c \ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ucde8\uc57d\ud55c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc0ad\uc81c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc190\uc0c1\ub41c \ud3ec\ub4dc \ub610\ub294 \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4 \uc7ac\ubc30\ud3ec"},{"location":"security/docs/incidents.kr/#_11","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/incidents.kr/#aws","text":"AWS \ubcf4\uc548 \uc0ac\uace0 \ub300\uc751 ]( https://d1.awsstatic.com/whitepapers/aws_security_incident_response.pdf \ubc31\uc11c\uc5d0\uc11c \ucca0\uc800\ud558\uac8c \ub2e4\ub8f9\ub2c8\ub2e4. ).","title":"AWS \ubcf4\uc548 \uc0ac\uace0 \ub300\uc751 \ubc31\uc11c \uac80\ud1a0"},{"location":"security/docs/incidents.kr/#_12","text":"\ubcf4\uc548 \uc2e4\ubb34\uc790\ub97c \ube68\uac04\uc0c9\uacfc \ud30c\ub780\uc0c9\uc758 \ub450 \ud300\uc73c\ub85c \ub098\ub215\ub2c8\ub2e4. \ub808\ub4dc \ud300\uc740 \uc11c\ub85c \ub2e4\ub978 \uc2dc\uc2a4\ud15c\uc758 \ucde8\uc57d\uc810\uc744 \uc870\uc0ac\ud558\ub294 \ub370 \uc9d1\uc911\ud558\uace0 \ube14\ub8e8 \ud300\uc740 \uc2dc\uc2a4\ud15c \ubc29\uc5b4\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ubcc4\ub3c4\uc758 \ud300\uc744 \ub9cc\ub4e4 \ubcf4\uc548 \uc2e4\ubb34\uc790\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 Kubernetes \uc775\uc2a4\ud50c\ub85c\uc787\uc5d0 \ub300\ud55c \uc9c0\uc2dd\uc774 \uc788\ub294 \uc678\ubd80 \uc5d4\ud130\ud2f0\ub97c \uace0\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubesploit \ub294 CyberArk\uc758 \uce68\ud22c \ud14c\uc2a4\ud2b8 \ud504\ub808\uc784\uc6cc\ud06c\ub85c \uac8c\uc784 \ub370\uc774\ub97c \uc218\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc758 \ucde8\uc57d\uc810\uc744 \uc2a4\uce94\ud558\ub294 \ub2e4\ub978 \ub3c4\uad6c\uc640 \ub2ec\ub9ac kubesploit\uc740 \uc2e4\uc81c \uacf5\uaca9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud569\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ube14\ub8e8 \ud300\uc740 \uacf5\uaca9\uc5d0 \ub300\ud55c \ub300\uc751\uc744 \uc5f0\uc2b5\ud558\uace0 \uadf8 \ud6a8\uacfc\ub97c \uce21\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ubcf4\uc548 \uac8c\uc784 \uc5f0\uc2b5 \ub0a0"},{"location":"security/docs/incidents.kr/#_13","text":"\uc790\uc2e0\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \uc8fc\uae30\uc801\uc73c\ub85c \uacf5\uaca9\ud558\uba74 \ucde8\uc57d\uc131\uacfc \uc798\ubabb\ub41c \uad6c\uc131\uc744 \ubc1c\uacac\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uc791\ud558\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ud14c\uc2a4\ud2b8\ub97c \uc218\ud589\ud558\uae30 \uc804\uc5d0 \uce68\ud22c \ud14c\uc2a4\ud2b8 \uc9c0\uce68 \uc744 \ub530\ub974\uc2ed\uc2dc\uc624.","title":"\ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uce68\ud22c \ud14c\uc2a4\ud2b8 \uc2e4\ud589"},{"location":"security/docs/incidents.kr/#_14","text":"kube-hunter , Kubernetes\uc6a9 \uce68\ud22c \ud14c\uc2a4\ud2b8 \ub3c4\uad6c. Gremlin , \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc0f \uc778\ud504\ub77c\uc5d0 \ub300\ud55c \uacf5\uaca9\uc744 \uc2dc\ubbac\ub808\uc774\uc158\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uce74\uc624\uc2a4 \uc5d4\uc9c0\ub2c8\uc5b4\ub9c1 \ud234\ud0b7. kube-forensics , \uc2e4\ud589 \uc911\uc778 \ud3ec\ub4dc\uc758 \uc0c1\ud0dc\ub97c \uc218\uc9d1\ud558\uace0 S3 \ubc84\ud0b7\uc5d0 \ub364\ud504\ud558\ub294 \uc791\uc5c5\uc744 \ud2b8\ub9ac\uac70\ud558\ub294 Kubernetes \ucee8\ud2b8\ub864\ub7ec. Kubernetes \uc124\uce58 \uacf5\uaca9 \ubc0f \ubc29\uc5b4 kubesploit","title":"\ub3c4\uad6c"},{"location":"security/docs/incidents.kr/#_15","text":"\uc9c0\ub2a5\ud615 \uc9c0\uc18d\uc801 \uc704\ud611 Kubernetes \uc2e4\uc6a9 \uacf5\uaca9 \ubc0f \ubc29\uc5b4 RBAC \uad8c\ud55c\uc744 \uc545\uc6a9\ud558\uc5ec Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc190\uc0c1","title":"\ub3d9\uc601\uc0c1"},{"location":"security/docs/incidents/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Incident response and forensics \u00b6 Your ability to react quickly to an incident can help minimize damage caused from a breach. Having a reliable alerting system that can warn you of suspicious behavior is the first step in a good incident response plan. When an incident does arise, you have to quickly decide whether to destroy and replace the effected container, or isolate and inspect the container. If you choose to isolate the container as part of a forensic investigation and root cause analysis, then the following set of activities should be followed: Sample incident response plan \u00b6 Identify the offending Pod and worker node \u00b6 Your first course of action should be to isolate the damage. Start by identifying where the breach occurred and isolate that Pod and its node from the rest of the infrastructure. Identify the offending Pods and worker nodes using workload name \u00b6 If you know the name and namespace of the offending pod, you can identify the the worker node running the pod as follows: kubectl get pods <name> --namespace <namespace> -o=jsonpath='{.spec.nodeName}{\"\\n\"}' If a Workload Resource (https://kubernetes.io/docs/concepts/workloads/controllers/) such as a Deployment has been compromised, it is likely that all the pods that are part of the workload resource are compromised. Use the following command to list all the pods of the Workload Resource and the nodes they are running on: selector=$(kubectl get deployments <name> \\ --namespace <namespace> -o json | jq -j \\ '.spec.selector.matchLabels | to_entries | .[] | \"\\(.key)=\\(.value)\"') kubectl get pods --namespace <namespace> --selector=$selector \\ -o json | jq -r '.items[] | \"\\(.metadata.name) \\(.spec.nodeName)\"' The above command is for deployments. You can run the same command for other workload resources such as replicasets,, statefulsets, etc. Identify the offending Pods and worker nodes using service account name \u00b6 In some cases, you may identify that a service account is compromised. It is likely that pods using the identified service account are compromised. You can identify all the pods using the service account and nodes they are running on with the following command: kubectl get pods -o json --namespace <namespace> | \\ jq -r '.items[] | select(.spec.serviceAccount == \"<service account name>\") | \"\\(.metadata.name) \\(.spec.nodeName)\"' Identify Pods with vulnerable or compromised images and worker nodes \u00b6 In some cases, you may discover that a container image being used in pods on your cluster is malicious or compromised. A container image is malicious or compromised, if it was found to contain malware, is a known bad image or has a CVE that has been exploited. You should consider all the pods using the container image compromised. You can identify the pods using the image and nodes they are running on with the following command: IMAGE=<Name of the malicious/compromised image> kubectl get pods -o json --all-namespaces | \\ jq -r --arg image \"$IMAGE\" '.items[] | select(.spec.containers[] | .image == $image) | \"\\(.metadata.name) \\(.metadata.namespace) \\(.spec.nodeName)\"' Isolate the Pod by creating a Network Policy that denies all ingress and egress traffic to the pod \u00b6 A deny all traffic rule may help stop an attack that is already underway by severing all connections to the pod. The following Network Policy will apply to a pod with the label app=web . apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : default-deny spec : podSelector : matchLabels : app : web policyTypes : - Ingress - Egress Attention A Network Policy may prove ineffective if an attacker has gained access to underlying host. If you suspect that has happened, you can use AWS Security Groups to isolate a compromised host from other hosts. When changing a host's security group, be aware that it will impact all containers running on that host. Revoke temporary security credentials assigned to the pod or worker node if necessary \u00b6 If the worker node has been assigned an IAM role that allows Pods to gain access to other AWS resources, remove those roles from the instance to prevent further damage from the attack. Similarly, if the Pod has been assigned an IAM role, evaluate whether you can safely remove the IAM policies from the role without impacting other workloads. Cordon the worker node \u00b6 By cordoning the impacted worker node, you're informing the scheduler to avoid scheduling pods onto the affected node. This will allow you to remove the node for forensic study without disrupting other workloads. Info This guidance is not applicable to Fargate where each Fargate pod run in its own sandboxed environment. Instead of cordoning, sequester the affected Fargate pods by applying a network policy that denies all ingress and egress traffic. Enable termination protection on impacted worker node \u00b6 An attacker may attempt to erase their misdeeds by terminating an affected node. Enabling termination protection can prevent this from happening. Instance scale-in protection will protect the node from a scale-in event. Warning You cannot enable termination protection on a Spot instance. Label the offending Pod/Node with a label indicating that it is part of an active investigation \u00b6 This will serve as a warning to cluster administrators not to tamper with the affected Pods/Nodes until the investigation is complete. Capture volatile artifacts on the worker node \u00b6 Capture the operating system memory . This will capture the Docker daemon (or other container runtime) and its subprocesses per container. This can be accomplished using tools like LiME and Volatility , or through higher-level tools such as Automated Forensics Orchestrator for Amazon EC2 that build on top of them. Perform a netstat tree dump of the processes running and the open ports . This will capture the docker daemon and its subprocess per container. Run commands to save container-level state before evidence is altered . You can use capabilities of the container runtime to capture information about currently running containers. For example, with Docker, you could do the following: docker top CONTAINER for processes running. docker logs CONTAINER for daemon level held logs. docker inspect CONTAINER for various information about the container. The same could be achieved with containerd using the nerdctl CLI, in place of docker (e.g. nerdctl inspect ). Some additional commands are available depending on the container runtime. For example, Docker has docker diff to see changes to the container filesystem or docker checkpoint to save all container state including volatile memory (RAM). See this Kubernetes blog post for discussion of similar capabilities with containerd or CRI-O runtimes. Pause the container for forensic capture . Snapshot the instance's EBS volumes . Redeploy compromised Pod or Workload Resource \u00b6 Once you have gathered data for forensic analysis, you can redeploy the compromised pod or workload resource. First roll out the fix for the vulnerability that was compromised and start new replacement pods. Then delete the vulnerable pods. If the vulnerable pods are managed by a higher-level Kubernetes workload resource (for example, a Deployment or DaemonSet), deleting them will schedule new ones. So vulnerable pods will be launched again. In that case you should deploy a new replacement workload resource after fixing the vulnerability. Then you should delete the vulnerable workload. Recommendations \u00b6 Review the AWS Security Incident Response Whitepaper \u00b6 While this section gives a brief overview along with a few recommendations for handling suspected security breaches, the topic is exhaustively covered in the white paper, AWS Security Incident Response . Practice security game days \u00b6 Divide your security practitioners into 2 teams: red and blue. The red team will be focused on probing different systems for vulnerabilities while the blue team will be responsible for defending against them. If you don't have enough security practitioners to create separate teams, consider hiring an outside entity that has knowledge of Kubernetes exploits. Kubesploit is a penetration testing framework from CyberArk that you can use to conduct game days. Unlike other tools which scan your cluster for vulnerabilities, kubesploit simulates a real-world attack. This gives your blue team an opportunity to practice its response to an attack and gauge its effectiveness. Run penetration tests against your cluster \u00b6 Periodically attacking your own cluster can help you discover vulnerabilities and misconfigurations. Before getting started, follow the penetration test guidelines before conducting a test against your cluster. Tools \u00b6 kube-hunter , a penetration testing tool for Kubernetes. Gremlin , a chaos engineering toolkit that you can use to simulate attacks against your applications and infrastructure. Attacking and Defending Kubernetes Installations kubesploit Videos \u00b6 Advanced Persistent Threats Kubernetes Practical Attack and Defense Compromising Kubernetes Cluster by Exploiting RBAC Permissions","title":"Incident Response and Forensics ({'name': 'English', 'build': True})"},{"location":"security/docs/incidents/#incident-response-and-forensics","text":"Your ability to react quickly to an incident can help minimize damage caused from a breach. Having a reliable alerting system that can warn you of suspicious behavior is the first step in a good incident response plan. When an incident does arise, you have to quickly decide whether to destroy and replace the effected container, or isolate and inspect the container. If you choose to isolate the container as part of a forensic investigation and root cause analysis, then the following set of activities should be followed:","title":"Incident response and forensics"},{"location":"security/docs/incidents/#sample-incident-response-plan","text":"","title":"Sample incident response plan"},{"location":"security/docs/incidents/#identify-the-offending-pod-and-worker-node","text":"Your first course of action should be to isolate the damage. Start by identifying where the breach occurred and isolate that Pod and its node from the rest of the infrastructure.","title":"Identify the offending Pod and worker node"},{"location":"security/docs/incidents/#identify-the-offending-pods-and-worker-nodes-using-workload-name","text":"If you know the name and namespace of the offending pod, you can identify the the worker node running the pod as follows: kubectl get pods <name> --namespace <namespace> -o=jsonpath='{.spec.nodeName}{\"\\n\"}' If a Workload Resource (https://kubernetes.io/docs/concepts/workloads/controllers/) such as a Deployment has been compromised, it is likely that all the pods that are part of the workload resource are compromised. Use the following command to list all the pods of the Workload Resource and the nodes they are running on: selector=$(kubectl get deployments <name> \\ --namespace <namespace> -o json | jq -j \\ '.spec.selector.matchLabels | to_entries | .[] | \"\\(.key)=\\(.value)\"') kubectl get pods --namespace <namespace> --selector=$selector \\ -o json | jq -r '.items[] | \"\\(.metadata.name) \\(.spec.nodeName)\"' The above command is for deployments. You can run the same command for other workload resources such as replicasets,, statefulsets, etc.","title":"Identify the offending Pods and worker nodes using workload name"},{"location":"security/docs/incidents/#identify-the-offending-pods-and-worker-nodes-using-service-account-name","text":"In some cases, you may identify that a service account is compromised. It is likely that pods using the identified service account are compromised. You can identify all the pods using the service account and nodes they are running on with the following command: kubectl get pods -o json --namespace <namespace> | \\ jq -r '.items[] | select(.spec.serviceAccount == \"<service account name>\") | \"\\(.metadata.name) \\(.spec.nodeName)\"'","title":"Identify the offending Pods and worker nodes using service account name"},{"location":"security/docs/incidents/#identify-pods-with-vulnerable-or-compromised-images-and-worker-nodes","text":"In some cases, you may discover that a container image being used in pods on your cluster is malicious or compromised. A container image is malicious or compromised, if it was found to contain malware, is a known bad image or has a CVE that has been exploited. You should consider all the pods using the container image compromised. You can identify the pods using the image and nodes they are running on with the following command: IMAGE=<Name of the malicious/compromised image> kubectl get pods -o json --all-namespaces | \\ jq -r --arg image \"$IMAGE\" '.items[] | select(.spec.containers[] | .image == $image) | \"\\(.metadata.name) \\(.metadata.namespace) \\(.spec.nodeName)\"'","title":"Identify Pods with vulnerable or compromised images and worker nodes"},{"location":"security/docs/incidents/#isolate-the-pod-by-creating-a-network-policy-that-denies-all-ingress-and-egress-traffic-to-the-pod","text":"A deny all traffic rule may help stop an attack that is already underway by severing all connections to the pod. The following Network Policy will apply to a pod with the label app=web . apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : default-deny spec : podSelector : matchLabels : app : web policyTypes : - Ingress - Egress Attention A Network Policy may prove ineffective if an attacker has gained access to underlying host. If you suspect that has happened, you can use AWS Security Groups to isolate a compromised host from other hosts. When changing a host's security group, be aware that it will impact all containers running on that host.","title":"Isolate the Pod by creating a Network Policy that denies all ingress and egress traffic to the pod"},{"location":"security/docs/incidents/#revoke-temporary-security-credentials-assigned-to-the-pod-or-worker-node-if-necessary","text":"If the worker node has been assigned an IAM role that allows Pods to gain access to other AWS resources, remove those roles from the instance to prevent further damage from the attack. Similarly, if the Pod has been assigned an IAM role, evaluate whether you can safely remove the IAM policies from the role without impacting other workloads.","title":"Revoke temporary security credentials assigned to the pod or worker node if necessary"},{"location":"security/docs/incidents/#cordon-the-worker-node","text":"By cordoning the impacted worker node, you're informing the scheduler to avoid scheduling pods onto the affected node. This will allow you to remove the node for forensic study without disrupting other workloads. Info This guidance is not applicable to Fargate where each Fargate pod run in its own sandboxed environment. Instead of cordoning, sequester the affected Fargate pods by applying a network policy that denies all ingress and egress traffic.","title":"Cordon the worker node"},{"location":"security/docs/incidents/#enable-termination-protection-on-impacted-worker-node","text":"An attacker may attempt to erase their misdeeds by terminating an affected node. Enabling termination protection can prevent this from happening. Instance scale-in protection will protect the node from a scale-in event. Warning You cannot enable termination protection on a Spot instance.","title":"Enable termination protection on impacted worker node"},{"location":"security/docs/incidents/#label-the-offending-podnode-with-a-label-indicating-that-it-is-part-of-an-active-investigation","text":"This will serve as a warning to cluster administrators not to tamper with the affected Pods/Nodes until the investigation is complete.","title":"Label the offending Pod/Node with a label indicating that it is part of an active investigation"},{"location":"security/docs/incidents/#capture-volatile-artifacts-on-the-worker-node","text":"Capture the operating system memory . This will capture the Docker daemon (or other container runtime) and its subprocesses per container. This can be accomplished using tools like LiME and Volatility , or through higher-level tools such as Automated Forensics Orchestrator for Amazon EC2 that build on top of them. Perform a netstat tree dump of the processes running and the open ports . This will capture the docker daemon and its subprocess per container. Run commands to save container-level state before evidence is altered . You can use capabilities of the container runtime to capture information about currently running containers. For example, with Docker, you could do the following: docker top CONTAINER for processes running. docker logs CONTAINER for daemon level held logs. docker inspect CONTAINER for various information about the container. The same could be achieved with containerd using the nerdctl CLI, in place of docker (e.g. nerdctl inspect ). Some additional commands are available depending on the container runtime. For example, Docker has docker diff to see changes to the container filesystem or docker checkpoint to save all container state including volatile memory (RAM). See this Kubernetes blog post for discussion of similar capabilities with containerd or CRI-O runtimes. Pause the container for forensic capture . Snapshot the instance's EBS volumes .","title":"Capture volatile artifacts on the worker node"},{"location":"security/docs/incidents/#redeploy-compromised-pod-or-workload-resource","text":"Once you have gathered data for forensic analysis, you can redeploy the compromised pod or workload resource. First roll out the fix for the vulnerability that was compromised and start new replacement pods. Then delete the vulnerable pods. If the vulnerable pods are managed by a higher-level Kubernetes workload resource (for example, a Deployment or DaemonSet), deleting them will schedule new ones. So vulnerable pods will be launched again. In that case you should deploy a new replacement workload resource after fixing the vulnerability. Then you should delete the vulnerable workload.","title":"Redeploy compromised Pod or Workload Resource"},{"location":"security/docs/incidents/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/incidents/#review-the-aws-security-incident-response-whitepaper","text":"While this section gives a brief overview along with a few recommendations for handling suspected security breaches, the topic is exhaustively covered in the white paper, AWS Security Incident Response .","title":"Review the AWS Security Incident Response Whitepaper"},{"location":"security/docs/incidents/#practice-security-game-days","text":"Divide your security practitioners into 2 teams: red and blue. The red team will be focused on probing different systems for vulnerabilities while the blue team will be responsible for defending against them. If you don't have enough security practitioners to create separate teams, consider hiring an outside entity that has knowledge of Kubernetes exploits. Kubesploit is a penetration testing framework from CyberArk that you can use to conduct game days. Unlike other tools which scan your cluster for vulnerabilities, kubesploit simulates a real-world attack. This gives your blue team an opportunity to practice its response to an attack and gauge its effectiveness.","title":"Practice security game days"},{"location":"security/docs/incidents/#run-penetration-tests-against-your-cluster","text":"Periodically attacking your own cluster can help you discover vulnerabilities and misconfigurations. Before getting started, follow the penetration test guidelines before conducting a test against your cluster.","title":"Run penetration tests against your cluster"},{"location":"security/docs/incidents/#tools","text":"kube-hunter , a penetration testing tool for Kubernetes. Gremlin , a chaos engineering toolkit that you can use to simulate attacks against your applications and infrastructure. Attacking and Defending Kubernetes Installations kubesploit","title":"Tools"},{"location":"security/docs/incidents/#videos","text":"Advanced Persistent Threats Kubernetes Practical Attack and Defense Compromising Kubernetes Cluster by Exploiting RBAC Permissions","title":"Videos"},{"location":"security/docs/index.kr/","text":"{'name': 'English', 'build': True} \ubcf4\uc548\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \u00b6 \uc774 \uac00\uc774\ub4dc\ub294 \uc704\ud5d8 \ud3c9\uac00 \ubc0f \uc644\ud654 \uc804\ub7b5\uc744 \ud1b5\ud574 \ube44\uc988\ub2c8\uc2a4 \uac00\uce58\ub97c \uc81c\uacf5\ud558\ub294 \ub3d9\uc2dc\uc5d0 EKS\uc5d0 \uc758\uc874\ud558\ub294 \uc815\ubcf4, \uc2dc\uc2a4\ud15c \ubc0f \uc790\uc0b0\uc744 \ubcf4\ud638\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc870\uc5b8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc758 \uc9c0\uce68\uc740 \uace0\uac1d\uc774 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c EKS\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub3c4\ub85d AWS\uc5d0\uc11c \uac8c\uc2dc\ud558\ub294 \uc77c\ub828\uc758 \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \uc911 \uc77c\ubd80\uc785\ub2c8\ub2e4. \uc131\ub2a5, \uc6b4\uc601 \uc6b0\uc218\uc131, \ube44\uc6a9 \ucd5c\uc801\ud654 \ubc0f \uc548\uc815\uc131\uc5d0 \ub300\ud55c \uac00\uc774\ub4dc\ub294 \uc55e\uc73c\ub85c \uba87 \uac1c\uc6d4 \ub0b4\uc5d0 \uc81c\uacf5\ub420 \uc608\uc815\uc785\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95 \u00b6 \uc774 \uac00\uc774\ub4dc\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ud074\ub7ec\uc2a4\ud130\uac00 \uc9c0\uc6d0\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uc81c\uc5b4\uc758 \ud6a8\uacfc\ub97c \uad6c\ud604\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ucc45\uc784\uc774 \uc788\ub294 \ubcf4\uc548 \uc2e4\ubb34\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uac00\uc774\ub4dc\ub294 \ub354 \uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub2e4\uc591\ud55c \uc8fc\uc81c \uc601\uc5ed\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc8fc\uc81c\ub294 \uac04\ub7b5\ud55c \uac1c\uc694\ub85c \uc2dc\uc791\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548\uc744 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840 \ubaa9\ub85d\uc774 \uc774\uc5b4\uc9d1\ub2c8\ub2e4. \uc8fc\uc81c\ub294 \ud2b9\uc815 \uc21c\uc11c\ub85c \uc77d\uc744 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4. \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378 \uc774\ud574 \u00b6 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218\ub294 EKS\uc640 \uac19\uc740 \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c \uacf5\ub3d9 \ucc45\uc784\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub9d0\ud574\uc11c AWS\ub294 \ud074\ub77c\uc6b0\ub4dc \"\uc758\" \ubcf4\uc548\uc744 \ucc45\uc784\uc9c0\uace0 \uace0\uac1d\uc778 \uadc0\ud558\ub294 \ud074\ub77c\uc6b0\ub4dc \"\uc548\"\uc758 \ubcf4\uc548\uc744 \ucc45\uc784\uc9d1\ub2c8\ub2e4. EKS\uc5d0\uc11c AWS\ub294 EKS \uad00\ub9ac\ud615 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 Kubernetes \ub9c8\uc2a4\ud130, ETCD \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc0f AWS\uac00 \uc548\uc804\ud558\uace0 \uc548\uc815\uc801\uc778 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ub370 \ud544\uc694\ud55c \uae30\ud0c0 \uc778\ud504\ub77c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. EKS\uc758 \uc18c\ube44\uc790\ub294 IAM, \ud3ec\ub4dc \ubcf4\uc548, \ub7f0\ud0c0\uc784 \ubcf4\uc548, \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \ub4f1\uacfc \uac19\uc740 \uc774 \uac00\uc774\ub4dc\uc758 \uc8fc\uc81c\uc5d0 \ub300\ud574 \uc8fc\ub85c \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ud504\ub77c \ubcf4\uc548\uacfc \uad00\ub828\ud558\uc5ec AWS\ub294 \uc790\uccb4 \uad00\ub9ac \uc791\uc5c5\uc790\uc5d0\uc11c \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9, Fargate\ub85c \uc774\ub3d9\ud560 \ub54c \ucd94\uac00 \ucc45\uc784\uc744 \ub9e1\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate\ub97c \uc0ac\uc6a9\ud558\uba74 AWS\uac00 Pod\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \uc778\uc2a4\ud134\uc2a4/\ub7f0\ud0c0\uc784\uc744 \ubcf4\ud638\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. AWS\ub294 \ub610\ud55c Kubernetes \ud328\uce58 \ubc84\uc804 \ubc0f \ubcf4\uc548 \ud328\uce58\ub85c EKS \ucd5c\uc801\ud654 AMI\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. MNG(\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9)\ub97c \uc0ac\uc6a9\ud558\ub294 \uace0\uac1d\uc740 EKS API, CLI, Cloudformation \ub610\ub294 AWS \ucf58\uc194\uc744 \ud1b5\ud574 \ub178\ub4dc \uadf8\ub8f9\uc744 \ucd5c\uc2e0 AMI\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c Fargate\uc640 \ub2ec\ub9ac MNG\ub294 \uc778\ud504\ub77c/\ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. [ cluster- autoscaler ] ( https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md ) \ub610\ub294 Karpenter , \uae30\ubcf8 AWS \uc790\ub3d9 \ud655\uc7a5, SpotInst\uc758 Ocean \ub610\ub294 Atlassian\uc758 Escalator . \uc2dc\uc2a4\ud15c\uc744 \uc124\uacc4\ud558\uae30 \uc804\uc5d0 \uadc0\ud558\uc758 \ucc45\uc784\uacfc \uc11c\ube44\uc2a4 \uacf5\uae09\uc790(AWS) \uc0ac\uc774\uc758 \uacbd\uacc4\uc120\uc774 \uc5b4\ub514\uc778\uc9c0 \uc544\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://aws.amazon.com/compliance/shared-responsibility-model/ \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc18c\uac1c \u00b6 EKS\uc640 \uac19\uc740 \uad00\ub9ac\ud615 Kubernetes \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c \uad00\ub828\ub41c \uba87 \uac00\uc9c0 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \uc601\uc5ed\uc774 \uc788\uc2b5\ub2c8\ub2e4. ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac \ud3ec\ub4dc \ubcf4\uc548 \ub7f0\ud0c0\uc784 \ubcf4\uc548 \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uba40\ud2f0\ud14c\ub10c\uc2dc \ud0d0\uc815 \ucee8\ud2b8\ub864 \uc778\ud504\ub77c \ubcf4\uc548 \ub370\uc774\ud130 \uc554\ud638\ud654 \ubc0f \ube44\ubc00 \uad00\ub9ac \uaddc\uc815 \uc900\uc218 \uc0ac\uace0 \ub300\uc751 \ubc0f \ubc95\uc758\ud559 \uc774\ubbf8\uc9c0 \ubcf4\uc548 \uc2dc\uc2a4\ud15c \uc124\uacc4\uc758 \uc77c\ubd80\ub85c \ubcf4\uc548 \uc0c1\ud0dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \ubcf4\uc548 \uad00\ub828 \uc0ac\ud56d\uacfc \uad00\ud589\uc5d0 \ub300\ud574 \uc0dd\uac01\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub9ac\uc18c\uc2a4 \uc9d1\ud569\uc5d0 \ub300\ud574 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc0ac\ub78c\uc744 \uc81c\uc5b4\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uc0ac\uace0\ub97c \uc2e0\uc18d\ud558\uac8c \uc2dd\ubcc4\ud558\uace0 \ubb34\ub2e8 \uc561\uc138\uc2a4\ub85c\ubd80\ud130 \uc2dc\uc2a4\ud15c\uacfc \uc11c\ube44\uc2a4\ub97c \ubcf4\ud638\ud558\uba70 \ub370\uc774\ud130 \ubcf4\ud638\ub97c \ud1b5\ud574 \ub370\uc774\ud130\uc758 \uae30\ubc00\uc131\uacfc \ubb34\uacb0\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uc0ac\uace0\uc5d0 \ub300\uc751\ud558\uae30 \uc704\ud574 \uc798 \uc815\uc758\ub418\uace0 \uc5f0\uc2b5\ub41c \uc77c\ub828\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \uac16\ucd94\uba74 \ubcf4\uc548 \ud0dc\uc138\ub3c4 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub3c4\uad6c\uc640 \uae30\uc220\uc740 \uc7ac\uc815\uc801 \uc190\uc2e4 \ubc29\uc9c0 \ub610\ub294 \uaddc\uc81c \uc758\ubb34 \uc900\uc218\uc640 \uac19\uc740 \ubaa9\ud45c\ub97c \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \uc911\uc694\ud569\ub2c8\ub2e4. AWS\ub294 \ubcf4\uc548\uc5d0 \ubbfc\uac10\ud55c \ub2e4\uc591\ud55c \uace0\uac1d\uc758 \ud53c\ub4dc\ubc31\uc744 \uae30\ubc18\uc73c\ub85c \uc9c4\ud654\ud55c \ub2e4\uc591\ud55c \ubcf4\uc548 \uc11c\ube44\uc2a4 \uc138\ud2b8\ub97c \uc81c\uacf5\ud558\uc5ec \uc870\uc9c1\uc774 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218 \ubaa9\ud45c\ub97c \ub2ec\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub9e4\uc6b0 \uc548\uc804\ud55c \uae30\ubc18\uc744 \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \uace0\uac1d\uc740 \"\ucc28\ubcc4\ud654\ub418\uc9c0 \uc54a\uc740 \ubb34\uac70\uc6b4 \uc791\uc5c5\"\uc5d0 \uc18c\uc694\ub418\ub294 \uc2dc\uac04\uc744 \uc904\uc774\uace0 \ube44\uc988\ub2c8\uc2a4 \ubaa9\ud45c\ub97c \ub2ec\uc131\ud558\ub294 \ub370 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc744 \ud560\uc560\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud53c\ub4dc\ubc31 \u00b6 \uc774 \uac00\uc774\ub4dc\ub294 \uad11\ubc94\uc704\ud55c EKS/Kubernetes \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc9c1\uc811\uc801\uc778 \ud53c\ub4dc\ubc31\uacfc \uc81c\uc548\uc744 \uc218\uc9d1\ud558\uae30 \uc704\ud574 GitHub\uc5d0\uc11c \ub9b4\ub9ac\uc2a4\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc774\ub4dc\uc5d0 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4\uace0 \uc0dd\uac01\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc788\ub294 \uacbd\uc6b0 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ubb38\uc81c\ub97c \uc81c\ucd9c\ud558\uac70\ub098 PR\uc744 \uc81c\ucd9c\ud558\uc138\uc694. \uc6b0\ub9ac\uc758 \uc758\ub3c4\ub294 \uc11c\ube44\uc2a4\uc5d0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uc0c8\ub85c\uc6b4 \ubaa8\ubc94 \uc0ac\ub840\uac00 \ubc1c\uc804\ud560 \ub54c \uac00\uc774\ub4dc\ub97c \uc8fc\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub354 \uc77d\uc744 \uac70\ub9ac \u00b6 Kubernetes \ubcf4\uc548 \ubc31\uc11c , \ud6c4\uc6d0 Security Audit Working Group\uc5d0\uc11c \ub9cc\ub4e0 \uc774 \ubc31\uc11c\ub294 \ubcf4\uc548 \uc2e4\ubb34\uc790\uac00 \uac74\uc804\ud55c \uc124\uacc4 \ubc0f \uad6c\ud604 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc8fc\uae30 \uc704\ud574 Kubernetes \uacf5\uaca9 \ud45c\uba74 \ubc0f \ubcf4\uc548 \uc544\ud0a4\ud14d\ucc98\uc758 \uc8fc\uc694 \uce21\uba74\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. CNCF\ub294 \ub610\ud55c \ud074\ub77c\uc6b0\ub4dc\uc5d0 \ubc31\uc11c \ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ubcf4\uc548. \uc774 \ubc31\uc11c\uc5d0\uc11c\ub294 \uae30\uc220 \ud658\uacbd\uc774 \uc5b4\ub5bb\uac8c \ubc1c\uc804\ud588\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uace0 DevOps \ud504\ub85c\uc138\uc2a4 \ubc0f \uc560\uc790\uc77c \ubc29\ubc95\ub860\uacfc \uc77c\uce58\ud558\ub294 \ubcf4\uc548 \uad00\ud589\uc758 \ucc44\ud0dd\uc744 \uc639\ud638\ud569\ub2c8\ub2e4.","title":"\ubcf4\uc548\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"security/docs/index.kr/#amazon-eks","text":"\uc774 \uac00\uc774\ub4dc\ub294 \uc704\ud5d8 \ud3c9\uac00 \ubc0f \uc644\ud654 \uc804\ub7b5\uc744 \ud1b5\ud574 \ube44\uc988\ub2c8\uc2a4 \uac00\uce58\ub97c \uc81c\uacf5\ud558\ub294 \ub3d9\uc2dc\uc5d0 EKS\uc5d0 \uc758\uc874\ud558\ub294 \uc815\ubcf4, \uc2dc\uc2a4\ud15c \ubc0f \uc790\uc0b0\uc744 \ubcf4\ud638\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc870\uc5b8\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc758 \uc9c0\uce68\uc740 \uace0\uac1d\uc774 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c EKS\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub3c4\ub85d AWS\uc5d0\uc11c \uac8c\uc2dc\ud558\ub294 \uc77c\ub828\uc758 \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc \uc911 \uc77c\ubd80\uc785\ub2c8\ub2e4. \uc131\ub2a5, \uc6b4\uc601 \uc6b0\uc218\uc131, \ube44\uc6a9 \ucd5c\uc801\ud654 \ubc0f \uc548\uc815\uc131\uc5d0 \ub300\ud55c \uac00\uc774\ub4dc\ub294 \uc55e\uc73c\ub85c \uba87 \uac1c\uc6d4 \ub0b4\uc5d0 \uc81c\uacf5\ub420 \uc608\uc815\uc785\ub2c8\ub2e4.","title":"\ubcf4\uc548\uc744 \uc704\ud55c Amazon EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc"},{"location":"security/docs/index.kr/#_1","text":"\uc774 \uac00\uc774\ub4dc\ub294 EKS \ud074\ub7ec\uc2a4\ud130\uc640 \ud074\ub7ec\uc2a4\ud130\uac00 \uc9c0\uc6d0\ud558\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uc81c\uc5b4\uc758 \ud6a8\uacfc\ub97c \uad6c\ud604\ud558\uace0 \ubaa8\ub2c8\ud130\ub9c1\ud558\ub294 \ucc45\uc784\uc774 \uc788\ub294 \ubcf4\uc548 \uc2e4\ubb34\uc790\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4. \uac00\uc774\ub4dc\ub294 \ub354 \uc27d\uac8c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub2e4\uc591\ud55c \uc8fc\uc81c \uc601\uc5ed\uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc8fc\uc81c\ub294 \uac04\ub7b5\ud55c \uac1c\uc694\ub85c \uc2dc\uc791\ud558\uc5ec EKS \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548\uc744 \uc704\ud55c \uad8c\uc7a5 \uc0ac\ud56d \ubc0f \ubaa8\ubc94 \uc0ac\ub840 \ubaa9\ub85d\uc774 \uc774\uc5b4\uc9d1\ub2c8\ub2e4. \uc8fc\uc81c\ub294 \ud2b9\uc815 \uc21c\uc11c\ub85c \uc77d\uc744 \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uc774 \uac00\uc774\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \ubc29\ubc95"},{"location":"security/docs/index.kr/#_2","text":"\ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218\ub294 EKS\uc640 \uac19\uc740 \uad00\ub9ac\ud615 \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c \uacf5\ub3d9 \ucc45\uc784\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \ub9d0\ud574\uc11c AWS\ub294 \ud074\ub77c\uc6b0\ub4dc \"\uc758\" \ubcf4\uc548\uc744 \ucc45\uc784\uc9c0\uace0 \uace0\uac1d\uc778 \uadc0\ud558\ub294 \ud074\ub77c\uc6b0\ub4dc \"\uc548\"\uc758 \ubcf4\uc548\uc744 \ucc45\uc784\uc9d1\ub2c8\ub2e4. EKS\uc5d0\uc11c AWS\ub294 EKS \uad00\ub9ac\ud615 Kubernetes \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 Kubernetes \ub9c8\uc2a4\ud130, ETCD \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ubc0f AWS\uac00 \uc548\uc804\ud558\uace0 \uc548\uc815\uc801\uc778 \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ub370 \ud544\uc694\ud55c \uae30\ud0c0 \uc778\ud504\ub77c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. EKS\uc758 \uc18c\ube44\uc790\ub294 IAM, \ud3ec\ub4dc \ubcf4\uc548, \ub7f0\ud0c0\uc784 \ubcf4\uc548, \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \ub4f1\uacfc \uac19\uc740 \uc774 \uac00\uc774\ub4dc\uc758 \uc8fc\uc81c\uc5d0 \ub300\ud574 \uc8fc\ub85c \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc778\ud504\ub77c \ubcf4\uc548\uacfc \uad00\ub828\ud558\uc5ec AWS\ub294 \uc790\uccb4 \uad00\ub9ac \uc791\uc5c5\uc790\uc5d0\uc11c \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9, Fargate\ub85c \uc774\ub3d9\ud560 \ub54c \ucd94\uac00 \ucc45\uc784\uc744 \ub9e1\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Fargate\ub97c \uc0ac\uc6a9\ud558\uba74 AWS\uac00 Pod\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 \uae30\ubcf8 \uc778\uc2a4\ud134\uc2a4/\ub7f0\ud0c0\uc784\uc744 \ubcf4\ud638\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. AWS\ub294 \ub610\ud55c Kubernetes \ud328\uce58 \ubc84\uc804 \ubc0f \ubcf4\uc548 \ud328\uce58\ub85c EKS \ucd5c\uc801\ud654 AMI\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. MNG(\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9)\ub97c \uc0ac\uc6a9\ud558\ub294 \uace0\uac1d\uc740 EKS API, CLI, Cloudformation \ub610\ub294 AWS \ucf58\uc194\uc744 \ud1b5\ud574 \ub178\ub4dc \uadf8\ub8f9\uc744 \ucd5c\uc2e0 AMI\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ucc45\uc784\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c Fargate\uc640 \ub2ec\ub9ac MNG\ub294 \uc778\ud504\ub77c/\ud074\ub7ec\uc2a4\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ud655\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. [ cluster- autoscaler ] ( https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md ) \ub610\ub294 Karpenter , \uae30\ubcf8 AWS \uc790\ub3d9 \ud655\uc7a5, SpotInst\uc758 Ocean \ub610\ub294 Atlassian\uc758 Escalator . \uc2dc\uc2a4\ud15c\uc744 \uc124\uacc4\ud558\uae30 \uc804\uc5d0 \uadc0\ud558\uc758 \ucc45\uc784\uacfc \uc11c\ube44\uc2a4 \uacf5\uae09\uc790(AWS) \uc0ac\uc774\uc758 \uacbd\uacc4\uc120\uc774 \uc5b4\ub514\uc778\uc9c0 \uc544\ub294 \uac83\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 https://aws.amazon.com/compliance/shared-responsibility-model/ \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378 \uc774\ud574"},{"location":"security/docs/index.kr/#_3","text":"EKS\uc640 \uac19\uc740 \uad00\ub9ac\ud615 Kubernetes \uc11c\ube44\uc2a4\ub97c \uc0ac\uc6a9\ud560 \ub54c \uad00\ub828\ub41c \uba87 \uac00\uc9c0 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \uc601\uc5ed\uc774 \uc788\uc2b5\ub2c8\ub2e4. ID \ubc0f \uc561\uc138\uc2a4 \uad00\ub9ac \ud3ec\ub4dc \ubcf4\uc548 \ub7f0\ud0c0\uc784 \ubcf4\uc548 \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uba40\ud2f0\ud14c\ub10c\uc2dc \ud0d0\uc815 \ucee8\ud2b8\ub864 \uc778\ud504\ub77c \ubcf4\uc548 \ub370\uc774\ud130 \uc554\ud638\ud654 \ubc0f \ube44\ubc00 \uad00\ub9ac \uaddc\uc815 \uc900\uc218 \uc0ac\uace0 \ub300\uc751 \ubc0f \ubc95\uc758\ud559 \uc774\ubbf8\uc9c0 \ubcf4\uc548 \uc2dc\uc2a4\ud15c \uc124\uacc4\uc758 \uc77c\ubd80\ub85c \ubcf4\uc548 \uc0c1\ud0dc\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\ub294 \ubcf4\uc548 \uad00\ub828 \uc0ac\ud56d\uacfc \uad00\ud589\uc5d0 \ub300\ud574 \uc0dd\uac01\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub9ac\uc18c\uc2a4 \uc9d1\ud569\uc5d0 \ub300\ud574 \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc0ac\ub78c\uc744 \uc81c\uc5b4\ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ubcf4\uc548 \uc0ac\uace0\ub97c \uc2e0\uc18d\ud558\uac8c \uc2dd\ubcc4\ud558\uace0 \ubb34\ub2e8 \uc561\uc138\uc2a4\ub85c\ubd80\ud130 \uc2dc\uc2a4\ud15c\uacfc \uc11c\ube44\uc2a4\ub97c \ubcf4\ud638\ud558\uba70 \ub370\uc774\ud130 \ubcf4\ud638\ub97c \ud1b5\ud574 \ub370\uc774\ud130\uc758 \uae30\ubc00\uc131\uacfc \ubb34\uacb0\uc131\uc744 \uc720\uc9c0\ud560 \uc218 \uc788\ub294 \ub2a5\ub825\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uc0ac\uace0\uc5d0 \ub300\uc751\ud558\uae30 \uc704\ud574 \uc798 \uc815\uc758\ub418\uace0 \uc5f0\uc2b5\ub41c \uc77c\ub828\uc758 \ud504\ub85c\uc138\uc2a4\ub97c \uac16\ucd94\uba74 \ubcf4\uc548 \ud0dc\uc138\ub3c4 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub3c4\uad6c\uc640 \uae30\uc220\uc740 \uc7ac\uc815\uc801 \uc190\uc2e4 \ubc29\uc9c0 \ub610\ub294 \uaddc\uc81c \uc758\ubb34 \uc900\uc218\uc640 \uac19\uc740 \ubaa9\ud45c\ub97c \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \uc911\uc694\ud569\ub2c8\ub2e4. AWS\ub294 \ubcf4\uc548\uc5d0 \ubbfc\uac10\ud55c \ub2e4\uc591\ud55c \uace0\uac1d\uc758 \ud53c\ub4dc\ubc31\uc744 \uae30\ubc18\uc73c\ub85c \uc9c4\ud654\ud55c \ub2e4\uc591\ud55c \ubcf4\uc548 \uc11c\ube44\uc2a4 \uc138\ud2b8\ub97c \uc81c\uacf5\ud558\uc5ec \uc870\uc9c1\uc774 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218 \ubaa9\ud45c\ub97c \ub2ec\uc131\ud560 \uc218 \uc788\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ub9e4\uc6b0 \uc548\uc804\ud55c \uae30\ubc18\uc744 \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \uace0\uac1d\uc740 \"\ucc28\ubcc4\ud654\ub418\uc9c0 \uc54a\uc740 \ubb34\uac70\uc6b4 \uc791\uc5c5\"\uc5d0 \uc18c\uc694\ub418\ub294 \uc2dc\uac04\uc744 \uc904\uc774\uace0 \ube44\uc988\ub2c8\uc2a4 \ubaa9\ud45c\ub97c \ub2ec\uc131\ud558\ub294 \ub370 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc744 \ud560\uc560\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc18c\uac1c"},{"location":"security/docs/index.kr/#_4","text":"\uc774 \uac00\uc774\ub4dc\ub294 \uad11\ubc94\uc704\ud55c EKS/Kubernetes \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc9c1\uc811\uc801\uc778 \ud53c\ub4dc\ubc31\uacfc \uc81c\uc548\uc744 \uc218\uc9d1\ud558\uae30 \uc704\ud574 GitHub\uc5d0\uc11c \ub9b4\ub9ac\uc2a4\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \uac00\uc774\ub4dc\uc5d0 \ud3ec\ud568\ud574\uc57c \ud55c\ub2e4\uace0 \uc0dd\uac01\ud558\ub294 \ubaa8\ubc94 \uc0ac\ub840\uac00 \uc788\ub294 \uacbd\uc6b0 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0 \ubb38\uc81c\ub97c \uc81c\ucd9c\ud558\uac70\ub098 PR\uc744 \uc81c\ucd9c\ud558\uc138\uc694. \uc6b0\ub9ac\uc758 \uc758\ub3c4\ub294 \uc11c\ube44\uc2a4\uc5d0 \uc0c8\ub85c\uc6b4 \uae30\ub2a5\uc774 \ucd94\uac00\ub418\uac70\ub098 \uc0c8\ub85c\uc6b4 \ubaa8\ubc94 \uc0ac\ub840\uac00 \ubc1c\uc804\ud560 \ub54c \uac00\uc774\ub4dc\ub97c \uc8fc\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ud53c\ub4dc\ubc31"},{"location":"security/docs/index.kr/#_5","text":"Kubernetes \ubcf4\uc548 \ubc31\uc11c , \ud6c4\uc6d0 Security Audit Working Group\uc5d0\uc11c \ub9cc\ub4e0 \uc774 \ubc31\uc11c\ub294 \ubcf4\uc548 \uc2e4\ubb34\uc790\uac00 \uac74\uc804\ud55c \uc124\uacc4 \ubc0f \uad6c\ud604 \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \ub3c4\uc6c0\uc744 \uc8fc\uae30 \uc704\ud574 Kubernetes \uacf5\uaca9 \ud45c\uba74 \ubc0f \ubcf4\uc548 \uc544\ud0a4\ud14d\ucc98\uc758 \uc8fc\uc694 \uce21\uba74\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. CNCF\ub294 \ub610\ud55c \ud074\ub77c\uc6b0\ub4dc\uc5d0 \ubc31\uc11c \ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ubcf4\uc548. \uc774 \ubc31\uc11c\uc5d0\uc11c\ub294 \uae30\uc220 \ud658\uacbd\uc774 \uc5b4\ub5bb\uac8c \ubc1c\uc804\ud588\ub294\uc9c0 \uc0b4\ud3b4\ubcf4\uace0 DevOps \ud504\ub85c\uc138\uc2a4 \ubc0f \uc560\uc790\uc77c \ubc29\ubc95\ub860\uacfc \uc77c\uce58\ud558\ub294 \ubcf4\uc548 \uad00\ud589\uc758 \ucc44\ud0dd\uc744 \uc639\ud638\ud569\ub2c8\ub2e4.","title":"\ub354 \uc77d\uc744 \uac70\ub9ac"},{"location":"security/docs/multitenancy.kr/","text":"{'name': 'English', 'build': True} \uc784\ucc28\uc778 \uaca9\ub9ac \u00b6 \ub2e4\uc911 \ud14c\ub10c\uc2dc\ub97c \uc0dd\uac01\ud560 \ub54c \uacf5\uc720 \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c\ubd80\ud130 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uaca9\ub9ac\ud558\ub824\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. Kubernetes\ub294 \ub2e8\uc77c \ud14c\ub10c\ud2b8 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 \uc785\ub2c8\ub2e4 . \uc989, \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ubaa8\ub4e0 \ud14c\ub10c\ud2b8 \uac04\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub2e4\uc911 \ud14c\ub10c\uc2dc\uc758 \uc720\uc0ac\uc131\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c Kubernetes \uac1c\uccb4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f RBAC(\uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4)\ub97c \uad6c\ud604\ud558\uc5ec \ud14c\ub10c\ud2b8\ub97c \uc11c\ub85c \ub17c\ub9ac\uc801\uc73c\ub85c \uaca9\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac01 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ud074\ub7ec\uc2a4\ud130\ub294 \uac15\ub825\ud55c \ubcf4\uc548 \uacbd\uacc4\ub97c \uc81c\uacf5\ud558\ub294 \uc720\uc77c\ud55c \uad6c\uc870\uc785\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud558\ub294 \uacf5\uaca9\uc790\uac00 \ud574\ub2f9 \ud638\uc2a4\ud2b8\uc5d0 \ub9c8\uc6b4\ud2b8\ub41c all \ube44\ubc00, ConfigMap \ubc0f \ubcfc\ub968\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub4e4\uc740 \ub610\ud55c Kubelet\uc744 \uc0ac\uce6d\ud558\uc5ec \ub178\ub4dc\uc758 \uc18d\uc131\uc744 \uc870\uc791\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uce21\uba74\uc73c\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 Kubernetes\uc640 \uac19\uc740 \ub2e8\uc77c \ud14c\ub10c\ud2b8 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uc704\ud5d8\uc744 \uc644\ud654\ud558\uba74\uc11c \ud14c\ub10c\ud2b8 \uaca9\ub9ac\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc \u00b6 \uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\uc5d0\uc11c\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4, \uc5ed\ud560 \ubc0f \uc5ed\ud560 \ubc14\uc778\ub529, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uacfc \uac19\uc740 \uae30\ubcf8 Kubernetes \uad6c\uc870\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\ub10c\ud2b8 \uac04\uc5d0 \ub17c\ub9ac\uc801 \ubd84\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 RBAC\ub294 \ud14c\ub10c\ud2b8\uac00 \uc11c\ub85c\uc758 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\uac70\ub098 \uc870\uc791\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub294 \uac01 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\uc5b4\ud558\ub294 \ubc18\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \uc11c\ub85c \ub2e4\ub978 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc11c\ub85c \ud1b5\uc2e0\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uc81c\uc5b4 \uc911 \uc5b4\ub290 \uac83\ub3c4 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\uac00 \ub178\ub4dc\ub97c \uacf5\uc720\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub354 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ub178\ub4dc \uc120\ud0dd\uae30, \ubc18\uc120\ud638\ub3c4 \uaddc\uce59 \ubc0f/\ub610\ub294 taint \ubc0f toleration\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\ub97c \ubcc4\ub3c4\uc758 \ub178\ub4dc\uc5d0 \uc608\uc57d\ud558\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc885\uc885 \ub2e8\ub3c5 \ud14c\ub10c\ud2b8 \ub178\ub4dc \ub77c\uace0 \ud569\ub2c8\ub2e4 . \ud14c\ub10c\ud2b8\uac00 \ub9ce\uc740 \ud658\uacbd\uc5d0\uc11c\ub294 \ub2e4\uc18c \ubcf5\uc7a1\ud558\uace0 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Namespaces\ub85c \uad6c\ud604\ub41c Soft multi-tenancy\ub294 Namespaces\uac00 \uc804\uc5ed \ubc94\uc704 \uc720\ud615\uc774\uae30 \ub54c\ubb38\uc5d0 \ud544\ud130\ub9c1\ub41c Namespaces \ubaa9\ub85d\uc744 \ud14c\ub10c\ud2b8\uc5d0\uac8c \uc81c\uacf5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\uac00 \ud2b9\uc815 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ubcfc \uc218 \uc788\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\ub97c \ud1b5\ud574 \ud14c\ub10c\ud2b8\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 CoreDNS\ub97c \ucffc\ub9ac\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. \uacf5\uaca9\uc790 \ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uc5d0\uc11c dig SRV . .svc.cluster.local\uc744 \uc2e4\ud589\ud558\uc5ec \uc774\ub97c \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc758 DNS \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 CoreDNS\uc6a9 \ubc29\ud654\ubcbd \ub610\ub294 \uc815\ucc45 \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc815\ubcf4\ub294 https://github.com/coredns/policy#kubernetes-metadata-multi-tenancy-policy \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. ). \ud0a4\uc624\uc2a4\ud06c \ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\uc758 \uad6c\ud604\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \ub2e4\uc74c \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc77c\ub828\uc758 CRD \ubc0f \ucee8\ud2b8\ub864\ub7ec\ub85c \uad6c\ud604\ub429\ub2c8\ub2e4. \uacf5\uc720 Kubernetes \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub97c \ubd84\ub9ac\ud558\uae30 \uc704\ud55c \uacc4\uc815 \ubc0f \uacc4\uc815 \uc0ac\uc6a9\uc790 \uacc4\uc815 \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \uc140\ud504 \uc11c\ube44\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ud504\ub85c\ube44\uc800\ub2dd \ud074\ub7ec\uc2a4\ud130 \uacf5\uc720 \uc2dc \uc11c\ube44\uc2a4 \ud488\uc9c8 \ubc0f \uacf5\uc815\uc131\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud55c \uacc4\uc815 \uc81c\ud55c \uc548\uc804\ud55c \ud14c\ub10c\ud2b8 \uaca9\ub9ac \ubc0f \uc140\ud504 \uc11c\ube44\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ucd08\uae30\ud654\ub97c \uc704\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ud15c\ud50c\ub9bf Loft \ub294 \ub2e4\uc74c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\ub294 Kiosk \ubc0f DevSpace \uc758 \uad00\ub9ac\uc790\uac00 \uc81c\uacf5\ud558\ub294 \uc0c1\uc6a9 \uc81c\ud488\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ud074\ub7ec\uc2a4\ud130\uc758 \uacf5\uac04\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uae30 \uc704\ud55c \uba40\ud2f0 \ud074\ub7ec\uc2a4\ud130 \uc561\uc138\uc2a4 \uc808\uc804 \ubaa8\ub4dc \ub294 \ube44\ud65c\uc131 \uae30\uac04 \ub3d9\uc548 \uacf5\uac04\uc5d0\uc11c \ubc30\ud3ec\ub97c \ucd95\uc18c\ud569\ub2c8\ub2e4. GitHub\uc640 \uac19\uc740 OIDC \uc778\uc99d \uacf5\uae09\uc790\ub97c \uc0ac\uc6a9\ud55c \uc2f1\uae00 \uc0ac\uc778\uc628 \uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\ub85c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \uc138 \uac00\uc9c0 \uae30\ubcf8 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc5d4\ud130\ud504\ub77c\uc774\uc988 \uc124\uc815 \u00b6 \uccab \ubc88\uc9f8\ub294 \"\uc784\ucc28\uc778\"\uc774 \uc9c1\uc6d0, \uacc4\uc57d\uc790\uc774\uac70\ub098 \uc870\uc9c1\uc5d0\uc11c \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uad8c\ud55c\uc744 \ubd80\uc5ec\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c \ubc18\uc2e0\ub8b0\ub418\ub294 \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ud658\uacbd\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud14c\ub10c\ud2b8\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubd80\uc11c \ub610\ub294 \ud300\uacfc \uac19\uc740 \uad00\ub9ac \ubd80\uc11c\uc5d0 \ub9de\ucdb0\uc9d1\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc124\uc815\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc0dd\uc131 \ubc0f \uc815\ucc45 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uac1c\uc778\uc5d0\uac8c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uac10\ub3c5\ud558\ub294 \uc704\uc784\ub41c \uad00\ub9ac \ubaa8\ub378\uc744 \uad6c\ud604\ud558\uc5ec \ubc30\ud3ec, \uc11c\ube44\uc2a4, \ud3ec\ub4dc, \uc791\uc5c5 \ub4f1\uacfc \uac19\uc740 \uc815\ucc45\uacfc \uad00\ub828\ub418\uc9c0 \uc54a\uc740 \uac1c\uccb4\uc5d0 \ub300\ud55c CRUD \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uaca9\ub9ac\ub294 \uc774 \uc124\uc815 \ub0b4\uc5d0\uc11c \ud5c8\uc6a9\ub418\uac70\ub098 \ud3ec\ub4dc \ubcf4\uc548\uc744 \uc704\ud55c \ucd94\uac00 \uc81c\uc5b4\ub85c \uac15\ud654\ub418\uc5b4\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc5c4\uaca9\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ub2e4\ub978 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \uc81c\ud55c\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \u00b6 \ubc18\ub300\ub85c \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\ub294 Kubernetes\ub97c KaaS(Kubernetes as a Service)\ub85c \uc81c\uacf5\ud558\ub824\ub294 \uc124\uc815\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. KaaS\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc77c\ub828\uc758 PaaS \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ucee8\ud2b8\ub864\ub7ec \ubc0f CRD \ubaa8\uc74c\uacfc \ud568\uaed8 \uacf5\uc720 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud638\uc2a4\ud305\ub429\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\ub294 Kubernetes API \uc11c\ubc84\uc640 \uc9c1\uc811 \uc0c1\ud638 \uc791\uc6a9\ud558\uba70 \ube44\uc815\ucc45 \uac1c\uccb4\uc5d0\uc11c CRUD \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\uac00 \uc790\uc2e0\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ub9cc\ub4e4\uace0 \uad00\ub9ac\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c \uc140\ud504 \uc11c\ube44\uc2a4 \uc694\uc18c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ud658\uacbd\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub294 \uc2e0\ub8b0\ud560 \uc218 \uc5c6\ub294 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. pod sandboxing \uc744 \uad6c\ud604\ud574\uc57c \ud560 \uac00\ub2a5\uc131\uc774 \ub192\uc2b5\ub2c8\ub2e4 . \uc0cc\ub4dc\ubc15\uc2f1\uc740 Firecracker\uc640 \uac19\uc740 \ub9c8\uc774\ud06c\ub85c VM \ub610\ub294 \uc0ac\uc6a9\uc790 \uacf5\uac04 \ucee4\ub110\uc5d0\uc11c \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub294 \uacf3\uc785\ub2c8\ub2e4. \ud604\uc7ac EKS Fargate\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0cc\ub4dc\ubc15\uc2a4 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4\ud615 \uc18c\ud504\ud2b8\uc6e8\uc5b4(SaaS) \u00b6 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ucd5c\uc885 \uc0ac\uc6a9 \uc0ac\ub840\ub294 SaaS(Software-as-a-Service) \uc124\uc815\uc785\ub2c8\ub2e4. \uc774 \ud658\uacbd\uc5d0\uc11c \uac01 \ud14c\ub10c\ud2b8\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud2b9\uc815 instance \uc640 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 \uc885\uc885 \uc790\uccb4 \ub370\uc774\ud130\uac00 \uc788\uc73c\uba70 \uc77c\ubc18\uc801\uc73c\ub85c Kubernetes RBAC\uc640 \ub3c5\ub9bd\uc801\uc778 \ubcc4\ub3c4\uc758 \uc561\uc138\uc2a4 \uc81c\uc5b4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\ub978 \uc0ac\uc6a9 \uc0ac\ub840\uc640 \ub2ec\ub9ac SaaS \uc124\uc815\uc758 \ud14c\ub10c\ud2b8\ub294 Kubernetes API\uc640 \uc9c1\uc811 \uc778\ud130\ud398\uc774\uc2a4\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 SaaS \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uac01 \ud14c\ub10c\ud2b8\ub97c \uc9c0\uc6d0\ud558\ub294 \ub370 \ud544\uc694\ud55c \uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 Kubernetes API\uc640\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. Kubernetes \uad6c\uc131 \u00b6 \uc774\ub7ec\ud55c \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub97c \uc11c\ub85c \uaca9\ub9ac\ud558\ub294 \ub370 \ub2e4\uc74c \uad6c\uc131\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \u00b6 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc \uad6c\ud604\uc758 \uae30\ubcf8\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ub17c\ub9ac\uc801 \ud30c\ud2f0\uc158\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc911 \ud14c\ub10c\uc2dc\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ud544\uc694\ud55c \ud560\ub2f9\ub7c9, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45, \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \uae30\ud0c0 \uac1c\uccb4\uc758 \ubc94\uc704\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub85c \uc9c0\uc815\ub429\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \u00b6 \uae30\ubcf8\uc801\uc73c\ub85c Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 \uc11c\ub85c \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ub808\uc774\ube14 \ub610\ub294 IP \uc8fc\uc18c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. \ud14c\ub10c\ud2b8 \uac04\uc5d0 \uc5c4\uaca9\ud55c \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc5d0\uc11c\ub294 \ud3ec\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uac70\ubd80\ud558\ub294 \uae30\ubcf8 \uaddc\uce59\uacfc \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 DNS \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ub2e4\ub978 \uaddc\uce59\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc5d0\uc11c \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\ub294 \ub354 \ub9ce\uc740 \ud5c8\uc6a9 \uaddc\uce59\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ud544\uc694\uc5d0 \ub530\ub77c \ub354 \uc138\ubd84\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ud544\uc694\ud558\uc9c0\ub9cc \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc2dc\ud589\ud558\ub824\uba74 Calico \ub610\ub294 Cilium\uacfc \uac19\uc740 \uc815\ucc45 \uc5d4\uc9c4\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4(RBAC) \u00b6 \uc5ed\ud560 \ubc0f \uc5ed\ud560 \ubc14\uc778\ub529\uc740 Kubernetes\uc5d0\uc11c \uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4(RBAC)\ub97c \uc801\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 Kubernetes \uac1c\uccb4\uc785\ub2c8\ub2e4. \uc5ed\ud560 \uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \uac1c\uccb4\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc5ed\ud560 \uacb0\ud569 \uc740 \uc5ed\ud560\uc774 \uc801\uc6a9\ub418\ub294 \uac1c\uc778 \ub610\ub294 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ubc0f KaaS \uc124\uc815\uc5d0\uc11c RBAC\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub610\ub294 \uac1c\uc778\uc774 \uac1c\uccb4\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud560\ub2f9\ub7c9 \u00b6 \ud560\ub2f9\ub7c9\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud638\uc2a4\ud305\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \uc81c\ud55c\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 CPU \ubc0f \uba54\ubaa8\ub9ac \uc591\uc744 \uc9c0\uc815\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uc218\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc94\uc704 \ub97c \uc0ac\uc6a9\ud558\uba74 \uac01 \uc81c\ud55c\uc5d0 \ub300\ud55c \ucd5c\uc18c\uac12, \ucd5c\ub300\uac12 \ubc0f \uae30\ubcf8\uac12\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc720 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uc624\ubc84 \ucee4\ubc0b\ud558\uba74 \ub9ac\uc18c\uc2a4\ub97c \ucd5c\ub300\ud654\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc885\uc885 \uc720\uc775\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc81c\ud55c \uc5c6\ub294 \uc561\uc138\uc2a4\ub294 \ub9ac\uc18c\uc2a4 \uace0\uac08\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc131\ub2a5 \uc800\ud558 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac00\uc6a9\uc131 \uc190\uc2e4\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod\uc758 \uc694\uccad\uc774 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ub418\uace0 \uc2e4\uc81c \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub960\uc774 \ub178\ub4dc\uc758 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uba74 \ub178\ub4dc\uc5d0\uc11c CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \ubc1c\uc0dd\ud558\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 Pod\uac00 \ub2e4\uc2dc \uc2dc\uc791\ub418\uac70\ub098 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc5d0\uc11c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub7c9\uc744 \ubd80\uacfc\ud558\uc5ec \ud14c\ub10c\ud2b8\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud3ec\ub4dc\ub97c \uc608\uc57d\ud560 \ub54c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ud3ec\ub4dc\uac00 \uc18c\ube44\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uc591\uc744 \uc81c\ud55c\ud558\uc5ec \uc7a0\uc7ac\uc801\uc778 \uc11c\ube44\uc2a4 \uac70\ubd80\ub97c \uc644\ud654\ud569\ub2c8\ub2e4. \ub610\ud55c \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud14c\ub10c\ud2b8\uc758 \uc9c0\ucd9c\uc5d0 \ub9de\uac8c \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 KaaS \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4. \ud3ec\ub4dc \uc6b0\uc120\uc21c\uc704 \ubc0f \uc120\uc810 \u00b6 \ud3ec\ub4dc \uc6b0\uc120 \uc21c\uc704 \ubc0f \uc120\uc810\uc740 \ub2e4\uc591\ud55c \uace0\uac1d\uc5d0\uac8c \ub2e4\uc591\ud55c \uc11c\ube44\uc2a4 \ud488\uc9c8(QoS)\uc744 \uc81c\uacf5\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ub4dc \uc6b0\uc120 \uc21c\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \uace0\uac1d A\uc758 \ud3ec\ub4dc\uac00 \uace0\uac1d B\ubcf4\ub2e4 \ub192\uc740 \uc6b0\uc120 \uc21c\uc704\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 Kubelet\uc740 \uace0\uac1d B\uc758 \uc6b0\uc120 \uc21c\uc704\uac00 \ub0ae\uc740 \ud3ec\ub4dc\ub97c \uc81c\uac70\ud558\uc5ec \uace0\uac1d\uc758 \uc6b0\uc120 \uc21c\uc704\uac00 \ub192\uc740 \ud3ec\ub4dc\ub97c \uc218\uc6a9\ud569\ub2c8\ub2e4. A. \ud504\ub9ac\ubbf8\uc5c4\uc744 \uae30\uaebc\uc774 \uc9c0\ubd88\ud558\ub824\ub294 \uace0\uac1d\uc774 \ub354 \ub192\uc740 \ud488\uc9c8\uc758 \uc11c\ube44\uc2a4\ub97c \ubc1b\ub294 SaaS \ud658\uacbd\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc644\ud654 \uc81c\uc5b4 \u00b6 \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc758 \uad00\ub9ac\uc790\ub85c\uc11c \uadc0\ud558\uc758 \uc8fc\uc694 \uad00\uc2ec\uc0ac\ub294 \uacf5\uaca9\uc790\uac00 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 \ub2e4\uc74c \uc81c\uc5b4\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc6a9 \uc0cc\ub4dc\ubc15\uc2a4 \uc2e4\ud589 \ud658\uacbd \u00b6 \uc0cc\ub4dc\ubc15\uc2f1\uc740 \uac01 \ucee8\ud14c\uc774\ub108\uac00 \uc790\uccb4 \uaca9\ub9ac\ub41c \uac00\uc0c1 \uba38\uc2e0\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uae30\uc220\uc785\ub2c8\ub2e4. \ud3ec\ub4dc \uc0cc\ub4dc\ubc15\uc2f1\uc744 \uc218\ud589\ud558\ub294 \uae30\uc220\uc5d0\ub294 Firecracker \ubc0f Weave\uc758 Firekube . AWS\uc5d0\uc11c \uc790\uccb4 \uad00\ub9ac\ud615 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\ub294 \uacbd\uc6b0 Kata \ucee8\ud14c\uc774\ub108 . Firecracker\ub97c EKS\uc5d0 \ub300\ud574 \uc9c0\uc6d0\ub418\ub294 \ub7f0\ud0c0\uc784\uc73c\ub85c \ub9cc\ub4e4\uae30 \uc704\ud55c \ub178\ub825\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 \ub2e4\uc74c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. https://threadreaderapp.com/thread/1238496944684597248.html . \uac1c\ubc29\ud615 \uc815\ucc45 \uc5d0\uc774\uc804\ud2b8(OPA) \ubc0f \uac8c\uc774\ud2b8\ud0a4\ud37c \u00b6 Gatekeeper \ub294 OPA \ub85c \uc0dd\uc131\ub41c \uc815\ucc45\uc744 \uc2dc\ud589\ud558\ub294 Kubernetes \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\uc785\ub2c8\ub2e4 . OPA\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcc4\ub3c4\uc758 \uc778\uc2a4\ud134\uc2a4 \ub610\ub294 \ub2e4\ub978 \ud14c\ub10c\ud2b8\ubcf4\ub2e4 \ub354 \ub192\uc740 \uc6b0\uc120\uc21c\uc704\uc5d0\uc11c \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \uc815\ucc45 \ubaa8\uc74c\uc740 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub97c \uc0ac\uc6a9\ud558\uc5ec CoreDNS\uc5d0\uc11c \ubc18\ud658\ub41c \ub808\ucf54\ub4dc\ub97c \ud544\ud130\ub9c1/\uc81c\uc5b4\ud560 \uc218 \uc788\ub294 \uc2e4\ud5d8\uc801\uc778 CoreDNS\uc6a9 OPA \ud50c\ub7ec\uadf8\uc778 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uce74\uc774\ubca0\ub974\ub178 \u00b6 Kyverno \ub294 \uc815\ucc45\uc744 Kubernetes \ub9ac\uc18c\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\uc744 \uac80\uc99d, \ubcc0\uacbd \ubc0f \uc0dd\uc131\ud560 \uc218 \uc788\ub294 Kubernetes \uae30\ubcf8 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. Kyverno\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud574 Kustomize \uc2a4\ud0c0\uc77c \uc624\ubc84\ub808\uc774\ub97c \uc0ac\uc6a9\ud558\uace0 \ubcc0\ud615\uc744 \uc704\ud55c JSON \ud328\uce58 \ubc0f \uc804\ub7b5\uc801 \ubcd1\ud569 \ud328\uce58\ub97c \uc9c0\uc6d0\ud558\uba70 \uc720\uc5f0\ud55c \ud2b8\ub9ac\uac70\ub97c \uae30\ubc18\uc73c\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ubcf5\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kyverno\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uaca9\ub9ac\ud558\uace0, \ud3ec\ub4dc \ubcf4\uc548 \ubc0f \uae30\ud0c0 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc801\uc6a9\ud558\uace0, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uacfc \uac19\uc740 \uae30\ubcf8 \uad6c\uc131\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8 \uc758 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0 \uba87 \uac00\uc9c0 \uc608\uc81c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \ub9ce\uc740 \uac83\ub4e4\uc774 Kyverno \uc6f9\uc0ac\uc774\ud2b8 \uc758 \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud2b9\uc815 \ub178\ub4dc\ub85c \uaca9\ub9ac \u00b6 \ud2b9\uc815 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub3c4\ub85d \ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc81c\ud55c\ud558\uba74 \uc18c\ud504\ud2b8 \ub2e4\uc911 \ud14c\ub10c\uc2dc \ubaa8\ub378\uc5d0\uc11c \uaca9\ub9ac\ub97c \uac15\ud654\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uba74 \ud14c\ub10c\ud2b8\ubcc4 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 \ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaca9\ub9ac\ub97c \ub2ec\uc131\ud558\uae30 \uc704\ud574 \uae30\ubcf8 Kubernetes \uc18d\uc131(\ub178\ub4dc \uc120\ud638\ub3c4, \uc624\uc5fc \ubc0f \ud5c8\uc6a9 \uc624\ucc28)\uc744 \uc0ac\uc6a9\ud558\uc5ec Pod \uc608\uc57d\uc744 \uc704\ud574 \ud2b9\uc815 \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \uc9c0\uc815\ud558\uace0 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 Pod\uac00 \ud14c\ub10c\ud2b8\ubcc4 \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. 1\ubd80 - \ub178\ub4dc \uc120\ud638\ub3c4 \u00b6 Kubernetes \ub178\ub4dc \uc120\ud638\ub3c4 \ub294 \ub178\ub4dc \ub808\uc774\ube14 \uc744 \uae30\ubc18\uc73c\ub85c \uc608\uc57d \ub300\uc0c1 \ub178\ub4dc\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. . \ub178\ub4dc \uce5c\ud654\uc131 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\ub294 \uc120\ud0dd\uae30 \uc6a9\uc5b4\uc640 \uc77c\uce58\ud558\ub294 \ud2b9\uc815 \ub178\ub4dc\uc5d0 \ub04c\ub9bd\ub2c8\ub2e4. \uc544\ub798 \ud3ec\ub4dc \uc0ac\uc591\uc5d0\uc11c 'requiredDuringSchedulingIgnoredDuringExecution' \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\uac00 \uac01 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uadf8 \uacb0\uacfc \ud3ec\ub4dc\ub294 tenant: tenants-x \ud0a4/\uac12\uc73c\ub85c \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4 . ... \uc0ac\uc591 : \uc120\ud638\ub3c4 : \ub178\ub4dc\uce5c\ud654\ub3c4 : requiredDuringSchedulingIgnoredDuringExecution : nodeSelector\uc870\uac74 : - matchExpressions : - \ud0a4 : \ud14c\ub10c\ud2b8 \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \ud14c\ub10c\ud2b8-x ... \uc774 \ub178\ub4dc \uc120\ud638\ub3c4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc608\uc57d \uc911\uc5d0\ub294 \ub808\uc774\ube14\uc774 \ud544\uc694\ud558\uc9c0\ub9cc \uc2e4\ud589 \uc911\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ub178\ub4dc\uc758 \ub808\uc774\ube14\uc774 \ubcc0\uacbd\ub418\uba74 \ud574\ub2f9 \ub808\uc774\ube14 \ubcc0\uacbd\ub9cc\uc73c\ub85c \ud3ec\ub4dc\uac00 \uc81c\uac70\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud5a5\ud6c4 \uc77c\uc815\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 \ub178\ub4dc \uc120\ud638\ub3c4 \ub300\uc2e0 \ub178\ub4dc \uc120\ud0dd\uae30 \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub294 \ud45c\ud604\ub825\uc774 \ub354 \ud48d\ubd80\ud558\uba70 \ud3ec\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc911\uc5d0 \ub354 \ub9ce\uc740 \uc870\uac74\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc28\uc774\uc810 \ubc0f \uace0\uae09 \uc2a4\ucf00\uc904\ub9c1 \uc120\ud0dd\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 Advanced Kubernetes pod to node scheduling . \ud30c\ud2b8 2 - \uc624\uc5fc \ubc0f \ud5c8\uc6a9 \u00b6 Pod\ub97c \ub178\ub4dc\ub85c \ub04c\uc5b4\ub4e4\uc774\ub294 \uac83\uc740 \uc774 \uc138 \ubd80\ubd84\uc73c\ub85c \uad6c\uc131\ub41c \uc811\uadfc \ubc29\uc2dd\uc758 \uccab \ubc88\uc9f8 \ubd80\ubd84\uc5d0 \ubd88\uacfc\ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc774 \uc791\ub3d9\ud558\ub824\uba74 \ud3ec\ub4dc\uac00 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub418\uc9c0 \uc54a\uc740 \ub178\ub4dc\ub85c \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud3ec\ub4dc\ub97c \ubc00\uc5b4\ub0b4\uc57c \ud569\ub2c8\ub2e4. \uc6d0\uce58 \uc54a\uac70\ub098 \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \ud3ec\ub4dc\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 Kubernetes\ub294 \ub178\ub4dc taints \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. taint\ub294 Pod\uac00 \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub178\ub4dc\uc5d0 \uc870\uac74\uc744 \uc9c0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc544\ub798 taint\ub294 tenant: tenants-x \uc758 \ud0a4-\uac12 \uc30d\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4 . ... \uc624\uc5fc : - \ud0a4 : \ud14c\ub10c\ud2b8 \uac12 : \ud14c\ub10c\ud2b8-x \ud6a8\uacfc : \uc2a4\ucf00\uc904 \uc5c6\uc74c ... \uc704\uc758 \ub178\ub4dc taint \uac00 \uc8fc\uc5b4\uc9c0\uba74 \uc624\uc5fc\uc744 \uc6a9\uc778\ud558\ub294 \ud3ec\ub4dc\ub9cc \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778\ub41c \ud3ec\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uc608\uc57d\ub418\ub3c4\ub85d \ud558\ub824\uba74 \uac01 \ud3ec\ub4dc \uc0ac\uc591\uc5d0 \uc544\ub798\uc640 \uac19\uc774 taint\uc5d0 \ub300\ud55c 'toleration' \uc774 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. ... \uad00\uc6a9 : - \ud6a8\uacfc : NoSchedule \ud0a4 : \uc784\ucc28\uc778 \uc5f0\uc0b0\uc790 : \uac19\uc74c \uac12 : \ud14c\ub10c\ud2b8-x ... 'toleration' \uc774 \uc788\ub294 \ud3ec\ub4dc \ub294 \uc801\uc5b4\ub3c4 \ud574\ub2f9 \ud2b9\uc815 \uc624\uc5fc\uc73c\ub85c \uc778\ud574 \ub178\ub4dc\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\uc774 \uc911\uc9c0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud14c\uc778\ud2b8\ub294 Kubernetes\uc5d0\uc11c \ub178\ub4dc \ub9ac\uc18c\uc2a4 \uc555\ub825\uacfc \uac19\uc740 \ud2b9\uc815 \uc870\uac74\uc5d0\uc11c Pod \uc608\uc57d\uc744 \uc77c\uc2dc\uc801\uc73c\ub85c \uc911\uc9c0\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud638\ub3c4, taint \ubc0f toleration\uc744 \ud1b5\ud574 \uc6d0\ud558\ub294 pod\ub97c \ud2b9\uc815 \ub178\ub4dc\ub85c \ud6a8\uacfc\uc801\uc73c\ub85c \uc720\uc778\ud558\uace0 \uc6d0\uce58 \uc54a\ub294 pod\ub97c \uaca9\ud1f4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\uba74 \ud2b9\uc815 Kubernetes \ud3ec\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud3ec\ub4dc\uc758 \uc608\ub294 \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI) \ubc0f kube-proxy daemonsets . \uc774\ub97c \uc704\ud574 \uc774\ub7ec\ud55c \ud31f(Pod)\uc758 \uc0ac\uc591\uc5d0\ub294 \ub2e4\uc591\ud55c \uc624\uc5fc\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \ub9e4\uc6b0 \ud5c8\uc6a9\uc801\uc778 \ud5c8\uc6a9 \uc624\ucc28\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud5c8\uc6a9 \uc624\ucc28\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub0b4\uacb0\ud568\uc131\uc744 \ubcc0\uacbd\ud558\uba74 \uc798\ubabb\ub41c \ud074\ub7ec\uc2a4\ud130 \uc791\uc5c5\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c OPA/Gatekeeper \ubc0f Kyverno \uc640 \uac19\uc740 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \ud31f(Pod)\uc774 \uc774\ub7ec\ud55c \uad00\ub300\ud55c \ub0b4\uacb0\ud568\uc131\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\ub294 \uc815\ucc45\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4. 3\ubd80 - \ub178\ub4dc \uc120\ud0dd\uc744 \uc704\ud55c \uc815\ucc45 \uae30\ubc18 \uad00\ub9ac \u00b6 CICD \ud30c\uc774\ud504\ub77c\uc778\uc758 \uaddc\uce59 \uc801\uc6a9\uc744 \ud3ec\ud568\ud558\uc5ec \ud3ec\ub4dc \uc0ac\uc591\uc758 \ub178\ub4dc \uc120\ud638\ub3c4 \ubc0f \ub0b4\uacb0\ud568\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uaca9\ub9ac \uc801\uc6a9\uc740 Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc218\uc900\uc5d0\uc11c\ub3c4 \uc218\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uae30\ubc18\uc73c\ub85c \uc778\ubc14\uc6b4\ub4dc Kubernetes API \uc11c\ubc84 \uc694\uccad\uc744 \ubcc0\ud615 \ud558\uc5ec \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uac01 \ub178\ub4dc \uc120\ud638\ub3c4 \uaddc\uce59 \ubc0f \ud5c8\uc6a9\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub85c \ud5a5\ud558\ub294 \ud3ec\ub4dc\ub294 tenants-x \ub178\ub4dc \uc5d0\uc11c \uc608\uc57d\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc62c\ubc14\ub978 \ub178\ub4dc \uc120\ud638\ub3c4 \ubc0f \ub0b4\uacb0\ud568\uc131 \uc744 \uc0ac\uc6a9\ud558\uc5ec _\uc2a4\ud0ec\ud504_\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . Kubernetes Mutating Admission Webhook \ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\ub41c \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \ud65c\uc6a9\ud558\uc5ec \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\ubc14\uc6b4\ub4dc \ud3ec\ub4dc\ub97c \ubcc0\ud615\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba85\uc138\uc11c. \ub3cc\uc5f0\ubcc0\uc774\ub294 \uc6d0\ud558\ub294 \uc77c\uc815\uc744 \ud5c8\uc6a9\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc694\uc18c\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud638\ub3c4\ub97c \ucd94\uac00\ud558\ub294 OPA/\uac8c\uc774\ud2b8\ud0a4\ud37c \uc815\ucc45\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. apiVersion : mutations.gatekeeper.sh/v1alpha1 \uc885\ub958 : \ud560\ub2f9 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : mutator-add-nodeaffinity-pod \uc8fc\uc11d : aws-eks-best-practices/description : > - \ub178\ub4dc \uc120\ud638\ub3c4 \ucd94\uac00 - https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity \uc0ac\uc591 : \uc801\uc6a9 \ub300\uc0c1 : - \uadf8\ub8f9 : [ \"\" ] \uc885\ub958 : [ \"\ud3ec\ub4dc\" ] \ubc84\uc804 : [ \"v1\" ] \uc77c\uce58 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"tenants-x\" ] \uc704\uce58 : \"spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms\" \ub9e4\uac1c\ubcc0\uc218 : \ud560\ub2f9 : \uac12 : - matchExpressions : - \ud0a4 : \"\uc784\ucc28\uc778\" \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \"\uc138\uc785\uc790-x\" tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc5d0 \ud3ec\ub4dc\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574 Kubernetes API \uc11c\ubc84 \uc694\uccad\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4 . \uc774 \uc815\ucc45\uc740 requiredDuringSchedulingIgnoredDuringExecution \ub178\ub4dc \uce5c\ud654\uc131 \uaddc\uce59\uc744 \ucd94\uac00\ud558\uc5ec \ud3ec\ub4dc\uac00 tenant: tenants-x \ub808\uc774\ube14\uc774 \uc788\ub294 \ub178\ub4dc\uc5d0 \uc720\uc778\ub429\ub2c8\ub2e4. \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c \ub450 \ubc88\uc9f8 \uc815\ucc45\uc740 \ub300\uc0c1 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \uadf8\ub8f9, \uc885\ub958 \ubc0f \ubc84\uc804\uc758 \ub3d9\uc77c\ud55c \uc77c\uce58 \uae30\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \ud3ec\ub4dc \uc0ac\uc591\uc5d0 \ub0b4\uacb0\ud568\uc131\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. apiVersion : mutations.gatekeeper.sh/v1alpha1 \uc885\ub958 : \ud560\ub2f9 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : mutator-add-toleration-pod \uc8fc\uc11d : aws-eks-best-practices/description : > - \uad00\uc6a9 \ucd94\uac00 - https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ \uc0ac\uc591 : \uc801\uc6a9 \ub300\uc0c1 : - \uadf8\ub8f9 : [ \"\" ] \uc885\ub958 : [ \"\ud3ec\ub4dc\" ] \ubc84\uc804 : [ \"v1\" ] \uc77c\uce58 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"tenants-x\" ] \uc704\uce58 : \"\uc0ac\uc591 \ud5c8\uc6a9\" \ub9e4\uac1c\ubcc0\uc218 : \ud560\ub2f9 : \uac12 : - \ud0a4 : \"\uc784\ucc28\uc778\" \uc5f0\uc0b0\uc790 : \"\uac19\uc74c\" \uac12 : \"\ud14c\ub10c\ud2b8-x\" \ud6a8\uacfc : \"NoSchedule\" \uc704\uc758 \uc815\ucc45\uc740 \ud3ec\ub4dc\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub294 \uc815\ucc45\uc758 location \uc694\uc18c\uc5d0\uc11c \ubcc0\uacbd\ub41c \uc694\uc18c\uc5d0 \ub300\ud55c \uacbd\ub85c \ub54c\ubb38\uc785\ub2c8\ub2e4. \ubc30\ud3ec \ubc0f \uc791\uc5c5 \ub9ac\uc18c\uc2a4\uc640 \uac19\uc774 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \ub9ac\uc18c\uc2a4\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00 \uc815\ucc45\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub098\uc5f4\ub41c \uc815\ucc45 \ubc0f \uae30\ud0c0 \uc608\uc81c\ub294 \ub2e4\uc74c\uc744 \uc704\ud55c \ub3d9\ubc18\uc790 GitHub \ud504\ub85c\uc81d\ud2b8 \uc5d0\uc11c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc. \uc774 \ub450 \ubcc0\uc774\uc758 \uacb0\uacfc\ub294 \ud3ec\ub4dc\uac00 \uc6d0\ud558\ub294 \ub178\ub4dc\uc5d0 \ub04c\ub9ac\ub294 \ub3d9\uc2dc\uc5d0 \ud2b9\uc815 \ub178\ub4dc \uc624\uc5fc\uc5d0 \uc758\ud574 \ubc18\ubc1c\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 tenant=tenants-x \ub85c \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\ub97c \uac00\uc838 \uc624\uace0 tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc5d0\uc11c \ud3ec\ub4dc\ub97c \uac00\uc838 \uc624\uae30 \uc704\ud574 \ub450 \uac1c\uc758 kubectl \ud638\ucd9c\uc5d0\uc11c \ucd9c\ub825 \uc2a4\ub2c8\ud3ab\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl \ub178\ub4dc \uac00\uc838\uc624\uae30 -l \ud14c\ub10c\ud2b8=\ud14c\ub10c\ud2b8-x \uc774\ub984 IP-10-0-11-255... IP-10-0-28-81... IP-10-0-43-107... kubectl -n tenants-x \ud31f(Pod) \uac00\uc838\uc624\uae30 -owide \uc774\ub984 \uc900\ube44 \uc0c1\ud0dc \ub2e4\uc2dc \uc2dc\uc791 \uc5f0\ub839 IP \ub178\ub4dc \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-2q7xw 1/1 \uc2e4\ud589 0 13s 10.0.42.143 ip-10-0-43-107... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-9b6hg 1/1 \uc2e4\ud589 0 13s 10.0.18.145 ip-10-0-28-81... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-nxvw5 1/1 \uc2e4\ud589 0 13s 10.0.30.117 ip-10-0-28-81... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-vw796 1/1 \uc2e4\ud589 \uc911 0 13s 10.0.3.113 ip-10-0-11-255... \ud14c\ub10c\ud2b8 \ud14c\uc2a4\ud2b8 \ud3ec\ub4dc 1/1 \uc2e4\ud589 0 13s 10.0.35.83 ip-10-0-43-107... \uc704 \ucd9c\ub825\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 tenant=tenants-x \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ub429\ub2c8\ub2e4 . \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c \ud3ec\ub4dc\ub294 \uc6d0\ud558\ub294 \ub178\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\uace0 \ub2e4\ub978 \ud3ec\ub4dc(\ud544\uc218 \uce5c\ud654\uc131 \ubc0f \ub0b4\uc57d\uc131 \uc5c6\uc74c)\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ud6a8\uacfc\uc801\uc73c\ub85c \uaca9\ub9ac\ub429\ub2c8\ub2e4. \ubcc0\ud615\ub41c \ud3ec\ub4dc \uc0ac\uc591\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud14c\ub10c\ud2b8 \ud14c\uc2a4\ud2b8 \ud3ec\ub4dc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \ud14c\ub10c\ud2b8-x \uc0ac\uc591 : \uc120\ud638\ub3c4 : \ub178\ub4dc\uce5c\ud654\ub3c4 : requiredDuringSchedulingIgnoredDuringExecution : nodeSelector\uc870\uac74 : - matchExpressions : - \ud0a4 : \ud14c\ub10c\ud2b8 \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \ud14c\ub10c\ud2b8-x ... \uad00\uc6a9 : - \ud6a8\uacfc : NoSchedule \ud0a4 : \uc784\ucc28\uc778 \uc5f0\uc0b0\uc790 : \uac19\uc74c \uac12 : \ud14c\ub10c\ud2b8-x ... \uc8fc\ubaa9 \ubcc0\uacbd \ubc0f \uac80\uc99d \uc2b9\uc778 \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes API \uc11c\ubc84 \uc694\uccad \ud750\ub984\uc5d0 \ud1b5\ud569\ub41c \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub294 \uc9c0\uc815\ub41c \uc2dc\uac04 \ub0b4\uc5d0 API \uc11c\ubc84\uc758 \uc694\uccad\uc5d0 \uc751\ub2f5\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 3\ucd08 \uc774\ud558\uc785\ub2c8\ub2e4. Webhook \ud638\ucd9c\uc774 \uad6c\uc131\ub41c \uc2dc\uac04 \ub0b4\uc5d0 \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uc9c0 \ubabb\ud558\uba74 \uc778\ubc14\uc6b4\ub4dc API \uc11c\ubc84 \uc694\uccad\uc758 \ubcc0\ud615 \ubc0f/\ub610\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uace0 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud5c8\uc6a9 \uc6f9\ud6c4\ud06c \uad6c\uc131\uc774 Fail Open \ub610\ub294 Fail Close . \uc704\uc758 \uc608\uc5d0\uc11c\ub294 OPA/Gatekeeper\uc6a9\uc73c\ub85c \uc791\uc131\ub41c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc \uc120\ud0dd \uc0ac\uc6a9 \uc0ac\ub840\ub3c4 \ucc98\ub9ac\ud558\ub294 \ub2e4\ub978 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc774 Kyverno \uc815\ucc45 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uc120\ud638\ub3c4 \ubcc0\uacbd\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud558\ub294 \uacbd\uc6b0 \ubcc0\uacbd \uc815\ucc45\uc740 \uc778\ubc14\uc6b4\ub4dc API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\uc5d0 \uc6d0\ud558\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc9c0\uc18d\ub418\ub3c4\ub85d \ud5c8\uc6a9\ub418\uae30 \uc804\uc5d0 \uc6d0\ud558\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ubc1c\uc0dd\ud558\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud55c \uac80\uc99d \uc815\ucc45\ub3c4 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ud14c\ub10c\ud2b8-\ub178\ub4dc \uaca9\ub9ac\ub97c \uc704\ud574 \uc774\ub7ec\ud55c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc6d0\ud558\uc9c0 \uc54a\ub294 \uad6c\uc131\uc774 \uc788\ub294\uc9c0 \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud558\uae30 \uc704\ud574 Audit \uc815\ucc45\uc744 \ud3ec\ud568\ud558\ub294 \uac83\ub3c4 \uc88b\uc740 \uc0dd\uac01 \uc785\ub2c8\ub2e4. \ucc38\uc870 \u00b6 k-rail \ud2b9\uc815 \uc815\ucc45 \uc2dc\ud589\uc744 \ud1b5\ud574 \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc744 \ubcf4\ud638\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Amazon EKS\ub97c \uc0ac\uc6a9\ud558\ub294 \ub2e4\uc911 \ud14c\ub10c\ud2b8 SaaS \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \ubcf4\uc548 \uc0ac\ub840 \ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc \u00b6 \uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud14c\ub10c\ud2b8 \uac04\uc5d0 \ub9e4\uc6b0 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \uc81c\uacf5\ub418\uc9c0\ub9cc \uba87 \uac00\uc9c0 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uccab\uc9f8, \ud14c\ub10c\ud2b8\uac00 \ub9ce\uc740 \uacbd\uc6b0 \uc774 \uc811\uadfc \ubc29\uc2dd\uc740 \uae08\uc138 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ube44\uc6a9\uc744 \uc9c0\ubd88\ud574\uc57c \ud560 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ud074\ub7ec\uc2a4\ud130 \uac04\uc5d0 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \uacf5\uc720\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uacb0\uad6d \ud074\ub7ec\uc2a4\ud130\uc758 \ud558\uc704 \uc9d1\ud569\uc774 \ucda9\ubd84\ud788 \ud65c\uc6a9\ub418\uc9c0 \uc54a\uace0 \ub098\uba38\uc9c0\ub294 \uacfc\ub3c4\ud558\uac8c \ud65c\uc6a9\ub418\ub294 \uc870\uac01\ud654\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub458\uc9f8, \uc774\ub7ec\ud55c \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud558\ub824\uba74 \ud2b9\uc218 \ub3c4\uad6c\ub97c \uad6c\uc785\ud558\uac70\ub098 \uad6c\ucd95\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \uc218\ubc31 \ub610\ub294 \uc218\ucc9c \uac1c\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud558\ub294 \uac83\uc774 \ub108\ubb34 \uc5b4\ub824\uc6cc\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \ud14c\ub10c\ud2b8\ub2f9 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc0dd\uc131\uc5d0 \ube44\ud574 \ub290\ub9bd\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uaddc\uc81c\uac00 \uc5c4\uaca9\ud55c \uc0b0\uc5c5\uc774\ub098 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c SaaS \ud658\uacbd\uc5d0\uc11c\ub294 \ud558\ub4dc \ud14c\ub10c\uc2dc \uc811\uadfc \ubc29\uc2dd\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud5a5\ud6c4 \ubc29\ud5a5 \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ud604\uc7ac \ub2e8\uc810\uacfc \ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ubb38\uc81c\uc810\uc744 \uc778\uc2dd\ud588\uc2b5\ub2c8\ub2e4. Multi-Tenancy SIG(Special Interest Group) \ub294 HNC(Hierarchical Namespace Controller) \ubc0f \uac00\uc0c1 \ud074\ub7ec\uc2a4\ud130\ub97c \ube44\ub86f\ud55c \uc5ec\ub7ec \uc778\ud050\ubca0\uc774\uc158 \ud504\ub85c\uc81d\ud2b8\ub97c \ud1b5\ud574 \uc774\ub7ec\ud55c \ub2e8\uc810\uc744 \ud574\uacb0\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. . \uc740 \ud14c\ub10c\ud2b8 \uad00\ub9ac\uc790\uac00 \ud558\uc704 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uacfc \ud568\uaed8 [ \uc815\ucc45 ] \uac1c\uccb4 \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc5d0 \ubd80\ubaa8-\uc790\uc2dd \uad00\uacc4\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4 . \uac00\uc0c1 \ud074\ub7ec\uc2a4\ud130 \uc81c\uc548\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 API \uc11c\ubc84, \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec\ub97c \ud3ec\ud568\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc11c\ube44\uc2a4\uc758 \ubcc4\ub3c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \uc124\uba85\ud569\ub2c8\ub2e4(\"Kubernetes on Kubernetes\"\ub77c\uace0\ub3c4 \ud568). Multi-Tenancy Benchmarks \uc81c\uc548\uc740 \uaca9\ub9ac \ubc0f \uc138\ubd84\ud654\ub97c \uc704\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uacf5\uc720\ud558\uae30 \uc704\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub77c\uc778 \ub3c4\uad6c kubectl-mtb \ub97c \uc0ac\uc6a9\ud558\uc5ec \uac00\uc774\ub4dc\ub77c\uc778 \uc900\uc218 \uc5ec\ubd80\ub97c \ud655\uc778\ud569\ub2c8\ub2e4. \ub2e4\uc911 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ub9ac\uc18c\uc2a4 \u00b6 \ubc18\uc790\uc774 \ud074\ub77c\uc6b0\ub4dc \ucf54\ub9e8\ub354 \ub80c\uc988 \ub2c8\ub974\ub9c8\ud0c0 \ub77c\ud398\uc774 \ubaa9\uc7a5\uc8fc \uc704\ube0c \ud50c\ub7ed\uc2a4","title":"\uc784\ucc28\uc778 \uaca9\ub9ac"},{"location":"security/docs/multitenancy.kr/#_1","text":"\ub2e4\uc911 \ud14c\ub10c\uc2dc\ub97c \uc0dd\uac01\ud560 \ub54c \uacf5\uc720 \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c\ubd80\ud130 \uc0ac\uc6a9\uc790 \ub610\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uaca9\ub9ac\ud558\ub824\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. Kubernetes\ub294 \ub2e8\uc77c \ud14c\ub10c\ud2b8 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130 \uc785\ub2c8\ub2e4 . \uc989, \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc758 \ub2e8\uc77c \uc778\uc2a4\ud134\uc2a4\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ubaa8\ub4e0 \ud14c\ub10c\ud2b8 \uac04\uc5d0 \uacf5\uc720\ub429\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub2e4\uc911 \ud14c\ub10c\uc2dc\uc758 \uc720\uc0ac\uc131\uc744 \uc0dd\uc131\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c Kubernetes \uac1c\uccb4\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc0f RBAC(\uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4)\ub97c \uad6c\ud604\ud558\uc5ec \ud14c\ub10c\ud2b8\ub97c \uc11c\ub85c \ub17c\ub9ac\uc801\uc73c\ub85c \uaca9\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \uac01 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ud074\ub7ec\uc2a4\ud130\ub294 \uac15\ub825\ud55c \ubcf4\uc548 \uacbd\uacc4\ub97c \uc81c\uacf5\ud558\ub294 \uc720\uc77c\ud55c \uad6c\uc870\uc785\ub2c8\ub2e4. \uc774\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud558\ub294 \uacf5\uaca9\uc790\uac00 \ud574\ub2f9 \ud638\uc2a4\ud2b8\uc5d0 \ub9c8\uc6b4\ud2b8\ub41c all \ube44\ubc00, ConfigMap \ubc0f \ubcfc\ub968\uc744 \uac80\uc0c9\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. \uadf8\ub4e4\uc740 \ub610\ud55c Kubelet\uc744 \uc0ac\uce6d\ud558\uc5ec \ub178\ub4dc\uc758 \uc18d\uc131\uc744 \uc870\uc791\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uce21\uba74\uc73c\ub85c \uc774\ub3d9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \uc139\uc158\uc5d0\uc11c\ub294 Kubernetes\uc640 \uac19\uc740 \ub2e8\uc77c \ud14c\ub10c\ud2b8 \uc624\ucf00\uc2a4\ud2b8\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uc704\ud5d8\uc744 \uc644\ud654\ud558\uba74\uc11c \ud14c\ub10c\ud2b8 \uaca9\ub9ac\ub97c \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.","title":"\uc784\ucc28\uc778 \uaca9\ub9ac"},{"location":"security/docs/multitenancy.kr/#_2","text":"\uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\uc5d0\uc11c\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4, \uc5ed\ud560 \ubc0f \uc5ed\ud560 \ubc14\uc778\ub529, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uacfc \uac19\uc740 \uae30\ubcf8 Kubernetes \uad6c\uc870\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\ub10c\ud2b8 \uac04\uc5d0 \ub17c\ub9ac\uc801 \ubd84\ub9ac\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 RBAC\ub294 \ud14c\ub10c\ud2b8\uac00 \uc11c\ub85c\uc758 \ub9ac\uc18c\uc2a4\uc5d0 \uc561\uc138\uc2a4\ud558\uac70\ub098 \uc870\uc791\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub294 \uac01 \ud14c\ub10c\ud2b8\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uc758 \uc591\uc744 \uc81c\uc5b4\ud558\ub294 \ubc18\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \uc11c\ub85c \ub2e4\ub978 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc11c\ub85c \ud1b5\uc2e0\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \uc81c\uc5b4 \uc911 \uc5b4\ub290 \uac83\ub3c4 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\uac00 \ub178\ub4dc\ub97c \uacf5\uc720\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub354 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ub178\ub4dc \uc120\ud0dd\uae30, \ubc18\uc120\ud638\ub3c4 \uaddc\uce59 \ubc0f/\ub610\ub294 taint \ubc0f toleration\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\ub97c \ubcc4\ub3c4\uc758 \ub178\ub4dc\uc5d0 \uc608\uc57d\ud558\ub3c4\ub85d \uac15\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc885\uc885 \ub2e8\ub3c5 \ud14c\ub10c\ud2b8 \ub178\ub4dc \ub77c\uace0 \ud569\ub2c8\ub2e4 . \ud14c\ub10c\ud2b8\uac00 \ub9ce\uc740 \ud658\uacbd\uc5d0\uc11c\ub294 \ub2e4\uc18c \ubcf5\uc7a1\ud558\uace0 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Namespaces\ub85c \uad6c\ud604\ub41c Soft multi-tenancy\ub294 Namespaces\uac00 \uc804\uc5ed \ubc94\uc704 \uc720\ud615\uc774\uae30 \ub54c\ubb38\uc5d0 \ud544\ud130\ub9c1\ub41c Namespaces \ubaa9\ub85d\uc744 \ud14c\ub10c\ud2b8\uc5d0\uac8c \uc81c\uacf5\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\uac00 \ud2b9\uc815 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ubcfc \uc218 \uc788\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacbd\uace0 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\ub97c \ud1b5\ud574 \ud14c\ub10c\ud2b8\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ubaa8\ub4e0 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud574 CoreDNS\ub97c \ucffc\ub9ac\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4. \uacf5\uaca9\uc790 \ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\uc5d0\uc11c dig SRV . .svc.cluster.local\uc744 \uc2e4\ud589\ud558\uc5ec \uc774\ub97c \uc545\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc758 DNS \ub808\ucf54\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uc81c\ud55c\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 CoreDNS\uc6a9 \ubc29\ud654\ubcbd \ub610\ub294 \uc815\ucc45 \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc815\ubcf4\ub294 https://github.com/coredns/policy#kubernetes-metadata-multi-tenancy-policy \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. ). \ud0a4\uc624\uc2a4\ud06c \ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\uc758 \uad6c\ud604\uc744 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \uc624\ud508 \uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \ub2e4\uc74c \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294 \uc77c\ub828\uc758 CRD \ubc0f \ucee8\ud2b8\ub864\ub7ec\ub85c \uad6c\ud604\ub429\ub2c8\ub2e4. \uacf5\uc720 Kubernetes \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub97c \ubd84\ub9ac\ud558\uae30 \uc704\ud55c \uacc4\uc815 \ubc0f \uacc4\uc815 \uc0ac\uc6a9\uc790 \uacc4\uc815 \uc0ac\uc6a9\uc790\ub97c \uc704\ud55c \uc140\ud504 \uc11c\ube44\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ud504\ub85c\ube44\uc800\ub2dd \ud074\ub7ec\uc2a4\ud130 \uacf5\uc720 \uc2dc \uc11c\ube44\uc2a4 \ud488\uc9c8 \ubc0f \uacf5\uc815\uc131\uc744 \ubcf4\uc7a5\ud558\uae30 \uc704\ud55c \uacc4\uc815 \uc81c\ud55c \uc548\uc804\ud55c \ud14c\ub10c\ud2b8 \uaca9\ub9ac \ubc0f \uc140\ud504 \uc11c\ube44\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ucd08\uae30\ud654\ub97c \uc704\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ud15c\ud50c\ub9bf Loft \ub294 \ub2e4\uc74c \uae30\ub2a5\uc744 \ucd94\uac00\ud558\ub294 Kiosk \ubc0f DevSpace \uc758 \uad00\ub9ac\uc790\uac00 \uc81c\uacf5\ud558\ub294 \uc0c1\uc6a9 \uc81c\ud488\uc785\ub2c8\ub2e4. \ub2e4\ub978 \ud074\ub7ec\uc2a4\ud130\uc758 \uacf5\uac04\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uae30 \uc704\ud55c \uba40\ud2f0 \ud074\ub7ec\uc2a4\ud130 \uc561\uc138\uc2a4 \uc808\uc804 \ubaa8\ub4dc \ub294 \ube44\ud65c\uc131 \uae30\uac04 \ub3d9\uc548 \uacf5\uac04\uc5d0\uc11c \ubc30\ud3ec\ub97c \ucd95\uc18c\ud569\ub2c8\ub2e4. GitHub\uc640 \uac19\uc740 OIDC \uc778\uc99d \uacf5\uae09\uc790\ub97c \uc0ac\uc6a9\ud55c \uc2f1\uae00 \uc0ac\uc778\uc628 \uc18c\ud504\ud2b8 \uba40\ud2f0 \ud14c\ub10c\uc2dc\ub85c \ud574\uacb0\ud560 \uc218 \uc788\ub294 \uc138 \uac00\uc9c0 \uae30\ubcf8 \uc0ac\uc6a9 \uc0ac\ub840\uac00 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc"},{"location":"security/docs/multitenancy.kr/#_3","text":"\uccab \ubc88\uc9f8\ub294 \"\uc784\ucc28\uc778\"\uc774 \uc9c1\uc6d0, \uacc4\uc57d\uc790\uc774\uac70\ub098 \uc870\uc9c1\uc5d0\uc11c \ub2e4\ub978 \ubc29\uc2dd\uc73c\ub85c \uad8c\ud55c\uc744 \ubd80\uc5ec\ud55c\ub2e4\ub294 \uc810\uc5d0\uc11c \ubc18\uc2e0\ub8b0\ub418\ub294 \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ud658\uacbd\uc5d0 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud14c\ub10c\ud2b8\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ubd80\uc11c \ub610\ub294 \ud300\uacfc \uac19\uc740 \uad00\ub9ac \ubd80\uc11c\uc5d0 \ub9de\ucdb0\uc9d1\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc124\uc815\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc0dd\uc131 \ubc0f \uc815\ucc45 \uad00\ub9ac\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4. \ub610\ud55c \ud2b9\uc815 \uac1c\uc778\uc5d0\uac8c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uac10\ub3c5\ud558\ub294 \uc704\uc784\ub41c \uad00\ub9ac \ubaa8\ub378\uc744 \uad6c\ud604\ud558\uc5ec \ubc30\ud3ec, \uc11c\ube44\uc2a4, \ud3ec\ub4dc, \uc791\uc5c5 \ub4f1\uacfc \uac19\uc740 \uc815\ucc45\uacfc \uad00\ub828\ub418\uc9c0 \uc54a\uc740 \uac1c\uccb4\uc5d0 \ub300\ud55c CRUD \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uaca9\ub9ac\ub294 \uc774 \uc124\uc815 \ub0b4\uc5d0\uc11c \ud5c8\uc6a9\ub418\uac70\ub098 \ud3ec\ub4dc \ubcf4\uc548\uc744 \uc704\ud55c \ucd94\uac00 \uc81c\uc5b4\ub85c \uac15\ud654\ub418\uc5b4\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub354 \uc5c4\uaca9\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \ub2e4\ub978 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uc11c\ube44\uc2a4 \uac04 \ud1b5\uc2e0\uc744 \uc81c\ud55c\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc5d4\ud130\ud504\ub77c\uc774\uc988 \uc124\uc815"},{"location":"security/docs/multitenancy.kr/#_4","text":"\ubc18\ub300\ub85c \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\ub294 Kubernetes\ub97c KaaS(Kubernetes as a Service)\ub85c \uc81c\uacf5\ud558\ub824\ub294 \uc124\uc815\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. KaaS\ub97c \uc0ac\uc6a9\ud558\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc77c\ub828\uc758 PaaS \uc11c\ube44\uc2a4\ub97c \uc81c\uacf5\ud558\ub294 \ucee8\ud2b8\ub864\ub7ec \ubc0f CRD \ubaa8\uc74c\uacfc \ud568\uaed8 \uacf5\uc720 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud638\uc2a4\ud305\ub429\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\ub294 Kubernetes API \uc11c\ubc84\uc640 \uc9c1\uc811 \uc0c1\ud638 \uc791\uc6a9\ud558\uba70 \ube44\uc815\ucc45 \uac1c\uccb4\uc5d0\uc11c CRUD \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8\uac00 \uc790\uc2e0\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \ub9cc\ub4e4\uace0 \uad00\ub9ac\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c \uc140\ud504 \uc11c\ube44\uc2a4 \uc694\uc18c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4 . \uc774\ub7ec\ud55c \uc720\ud615\uc758 \ud658\uacbd\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub294 \uc2e0\ub8b0\ud560 \uc218 \uc5c6\ub294 \ucf54\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc73c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. pod sandboxing \uc744 \uad6c\ud604\ud574\uc57c \ud560 \uac00\ub2a5\uc131\uc774 \ub192\uc2b5\ub2c8\ub2e4 . \uc0cc\ub4dc\ubc15\uc2f1\uc740 Firecracker\uc640 \uac19\uc740 \ub9c8\uc774\ud06c\ub85c VM \ub610\ub294 \uc0ac\uc6a9\uc790 \uacf5\uac04 \ucee4\ub110\uc5d0\uc11c \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub294 \uacf3\uc785\ub2c8\ub2e4. \ud604\uc7ac EKS Fargate\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0cc\ub4dc\ubc15\uc2a4 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc11c\ube44\uc2a4\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4"},{"location":"security/docs/multitenancy.kr/#saas","text":"\uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ucd5c\uc885 \uc0ac\uc6a9 \uc0ac\ub840\ub294 SaaS(Software-as-a-Service) \uc124\uc815\uc785\ub2c8\ub2e4. \uc774 \ud658\uacbd\uc5d0\uc11c \uac01 \ud14c\ub10c\ud2b8\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud2b9\uc815 instance \uc640 \uc5f0\uacb0\ub429\ub2c8\ub2e4. \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0\ub294 \uc885\uc885 \uc790\uccb4 \ub370\uc774\ud130\uac00 \uc788\uc73c\uba70 \uc77c\ubc18\uc801\uc73c\ub85c Kubernetes RBAC\uc640 \ub3c5\ub9bd\uc801\uc778 \ubcc4\ub3c4\uc758 \uc561\uc138\uc2a4 \uc81c\uc5b4\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\ub978 \uc0ac\uc6a9 \uc0ac\ub840\uc640 \ub2ec\ub9ac SaaS \uc124\uc815\uc758 \ud14c\ub10c\ud2b8\ub294 Kubernetes API\uc640 \uc9c1\uc811 \uc778\ud130\ud398\uc774\uc2a4\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub300\uc2e0 SaaS \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uac01 \ud14c\ub10c\ud2b8\ub97c \uc9c0\uc6d0\ud558\ub294 \ub370 \ud544\uc694\ud55c \uac1d\uccb4\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud574 Kubernetes API\uc640\uc758 \uc778\ud130\ud398\uc774\uc2a4\ub97c \ub2f4\ub2f9\ud569\ub2c8\ub2e4.","title":"\uc11c\ube44\uc2a4\ud615 \uc18c\ud504\ud2b8\uc6e8\uc5b4(SaaS)"},{"location":"security/docs/multitenancy.kr/#kubernetes","text":"\uc774\ub7ec\ud55c \uac01 \uc778\uc2a4\ud134\uc2a4\uc5d0\uc11c \ud14c\ub10c\ud2b8\ub97c \uc11c\ub85c \uaca9\ub9ac\ud558\ub294 \ub370 \ub2e4\uc74c \uad6c\uc131\uc774 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.","title":"Kubernetes \uad6c\uc131"},{"location":"security/docs/multitenancy.kr/#_5","text":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc \uad6c\ud604\uc758 \uae30\ubcf8\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ub17c\ub9ac\uc801 \ud30c\ud2f0\uc158\uc73c\ub85c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc911 \ud14c\ub10c\uc2dc\ub97c \uad6c\ud604\ud558\ub294 \ub370 \ud544\uc694\ud55c \ud560\ub2f9\ub7c9, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45, \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \uae30\ud0c0 \uac1c\uccb4\uc758 \ubc94\uc704\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub85c \uc9c0\uc815\ub429\ub2c8\ub2e4.","title":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4"},{"location":"security/docs/multitenancy.kr/#_6","text":"\uae30\ubcf8\uc801\uc73c\ub85c Kubernetes \ud074\ub7ec\uc2a4\ud130\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 \uc11c\ub85c \ud1b5\uc2e0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ub808\uc774\ube14 \ub610\ub294 IP \uc8fc\uc18c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. \ud14c\ub10c\ud2b8 \uac04\uc5d0 \uc5c4\uaca9\ud55c \ub124\ud2b8\uc6cc\ud06c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc5d0\uc11c\ub294 \ud3ec\ub4dc \uac04\uc758 \ud1b5\uc2e0\uc744 \uac70\ubd80\ud558\ub294 \uae30\ubcf8 \uaddc\uce59\uacfc \ubaa8\ub4e0 \ud3ec\ub4dc\uac00 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 DNS \uc11c\ubc84\ub97c \ucffc\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ub2e4\ub978 \uaddc\uce59\uc73c\ub85c \uc2dc\uc791\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc5d0\uc11c \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\ub294 \ub354 \ub9ce\uc740 \ud5c8\uc6a9 \uaddc\uce59\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 \ud544\uc694\uc5d0 \ub530\ub77c \ub354 \uc138\ubd84\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ud544\uc694\ud558\uc9c0\ub9cc \ucda9\ubd84\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc2dc\ud589\ud558\ub824\uba74 Calico \ub610\ub294 Cilium\uacfc \uac19\uc740 \uc815\ucc45 \uc5d4\uc9c4\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \uc815\ucc45"},{"location":"security/docs/multitenancy.kr/#rbac","text":"\uc5ed\ud560 \ubc0f \uc5ed\ud560 \ubc14\uc778\ub529\uc740 Kubernetes\uc5d0\uc11c \uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4(RBAC)\ub97c \uc801\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ub418\ub294 Kubernetes \uac1c\uccb4\uc785\ub2c8\ub2e4. \uc5ed\ud560 \uc5d0\ub294 \ud074\ub7ec\uc2a4\ud130\uc758 \uac1c\uccb4\uc5d0 \ub300\ud574 \uc218\ud589\ud560 \uc218 \uc788\ub294 \uc791\uc5c5 \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc5ed\ud560 \uacb0\ud569 \uc740 \uc5ed\ud560\uc774 \uc801\uc6a9\ub418\ub294 \uac1c\uc778 \ub610\ub294 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ubc0f KaaS \uc124\uc815\uc5d0\uc11c RBAC\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc120\ud0dd\ud55c \uadf8\ub8f9 \ub610\ub294 \uac1c\uc778\uc774 \uac1c\uccb4\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc5ed\ud560 \uae30\ubc18 \uc561\uc138\uc2a4 \uc81c\uc5b4(RBAC)"},{"location":"security/docs/multitenancy.kr/#_7","text":"\ud560\ub2f9\ub7c9\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud638\uc2a4\ud305\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \uc81c\ud55c\uc744 \uc815\uc758\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 CPU \ubc0f \uba54\ubaa8\ub9ac \uc591\uc744 \uc9c0\uc815\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uc218\ub97c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc94\uc704 \ub97c \uc0ac\uc6a9\ud558\uba74 \uac01 \uc81c\ud55c\uc5d0 \ub300\ud55c \ucd5c\uc18c\uac12, \ucd5c\ub300\uac12 \ubc0f \uae30\ubcf8\uac12\uc744 \uc120\uc5b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc720 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub9ac\uc18c\uc2a4\ub97c \uc624\ubc84 \ucee4\ubc0b\ud558\uba74 \ub9ac\uc18c\uc2a4\ub97c \ucd5c\ub300\ud654\ud560 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc885\uc885 \uc720\uc775\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \uc81c\ud55c \uc5c6\ub294 \uc561\uc138\uc2a4\ub294 \ub9ac\uc18c\uc2a4 \uace0\uac08\uc744 \uc720\ubc1c\ud560 \uc218 \uc788\uc73c\uba70, \uc774\ub294 \uc131\ub2a5 \uc800\ud558 \ubc0f \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac00\uc6a9\uc131 \uc190\uc2e4\ub85c \uc774\uc5b4\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod\uc758 \uc694\uccad\uc774 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ub418\uace0 \uc2e4\uc81c \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub960\uc774 \ub178\ub4dc\uc758 \uc6a9\ub7c9\uc744 \ucd08\uacfc\ud558\uba74 \ub178\ub4dc\uc5d0\uc11c CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \ubc1c\uc0dd\ud558\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 Pod\uac00 \ub2e4\uc2dc \uc2dc\uc791\ub418\uac70\ub098 \ub178\ub4dc\uc5d0\uc11c \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ubc29\uc9c0\ud558\ub824\uba74 \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc5d0\uc11c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub7c9\uc744 \ubd80\uacfc\ud558\uc5ec \ud14c\ub10c\ud2b8\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ud3ec\ub4dc\ub97c \uc608\uc57d\ud560 \ub54c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud558\ub3c4\ub85d \ud574\uc57c \ud569\ub2c8\ub2e4. \ub610\ud55c \ud3ec\ub4dc\uac00 \uc18c\ube44\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uc591\uc744 \uc81c\ud55c\ud558\uc5ec \uc7a0\uc7ac\uc801\uc778 \uc11c\ube44\uc2a4 \uac70\ubd80\ub97c \uc644\ud654\ud569\ub2c8\ub2e4. \ub610\ud55c \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud14c\ub10c\ud2b8\uc758 \uc9c0\ucd9c\uc5d0 \ub9de\uac8c \ud074\ub7ec\uc2a4\ud130\uc758 \ub9ac\uc18c\uc2a4\ub97c \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub294 KaaS \uc2dc\ub098\ub9ac\uc624\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud569\ub2c8\ub2e4.","title":"\ud560\ub2f9\ub7c9"},{"location":"security/docs/multitenancy.kr/#_8","text":"\ud3ec\ub4dc \uc6b0\uc120 \uc21c\uc704 \ubc0f \uc120\uc810\uc740 \ub2e4\uc591\ud55c \uace0\uac1d\uc5d0\uac8c \ub2e4\uc591\ud55c \uc11c\ube44\uc2a4 \ud488\uc9c8(QoS)\uc744 \uc81c\uacf5\ud558\ub824\ub294 \uacbd\uc6b0\uc5d0 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \ud3ec\ub4dc \uc6b0\uc120 \uc21c\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \uace0\uac1d A\uc758 \ud3ec\ub4dc\uac00 \uace0\uac1d B\ubcf4\ub2e4 \ub192\uc740 \uc6b0\uc120 \uc21c\uc704\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc6a9\ub7c9\uc774 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 Kubelet\uc740 \uace0\uac1d B\uc758 \uc6b0\uc120 \uc21c\uc704\uac00 \ub0ae\uc740 \ud3ec\ub4dc\ub97c \uc81c\uac70\ud558\uc5ec \uace0\uac1d\uc758 \uc6b0\uc120 \uc21c\uc704\uac00 \ub192\uc740 \ud3ec\ub4dc\ub97c \uc218\uc6a9\ud569\ub2c8\ub2e4. A. \ud504\ub9ac\ubbf8\uc5c4\uc744 \uae30\uaebc\uc774 \uc9c0\ubd88\ud558\ub824\ub294 \uace0\uac1d\uc774 \ub354 \ub192\uc740 \ud488\uc9c8\uc758 \uc11c\ube44\uc2a4\ub97c \ubc1b\ub294 SaaS \ud658\uacbd\uc5d0\uc11c \ud2b9\ud788 \uc720\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud3ec\ub4dc \uc6b0\uc120\uc21c\uc704 \ubc0f \uc120\uc810"},{"location":"security/docs/multitenancy.kr/#_9","text":"\ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc758 \uad00\ub9ac\uc790\ub85c\uc11c \uadc0\ud558\uc758 \uc8fc\uc694 \uad00\uc2ec\uc0ac\ub294 \uacf5\uaca9\uc790\uac00 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 \ub2e4\uc74c \uc81c\uc5b4\ub97c \uace0\ub824\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc644\ud654 \uc81c\uc5b4"},{"location":"security/docs/multitenancy.kr/#_10","text":"\uc0cc\ub4dc\ubc15\uc2f1\uc740 \uac01 \ucee8\ud14c\uc774\ub108\uac00 \uc790\uccb4 \uaca9\ub9ac\ub41c \uac00\uc0c1 \uba38\uc2e0\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uae30\uc220\uc785\ub2c8\ub2e4. \ud3ec\ub4dc \uc0cc\ub4dc\ubc15\uc2f1\uc744 \uc218\ud589\ud558\ub294 \uae30\uc220\uc5d0\ub294 Firecracker \ubc0f Weave\uc758 Firekube . AWS\uc5d0\uc11c \uc790\uccb4 \uad00\ub9ac\ud615 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub97c \uad6c\ucd95\ud558\ub294 \uacbd\uc6b0 Kata \ucee8\ud14c\uc774\ub108 . Firecracker\ub97c EKS\uc5d0 \ub300\ud574 \uc9c0\uc6d0\ub418\ub294 \ub7f0\ud0c0\uc784\uc73c\ub85c \ub9cc\ub4e4\uae30 \uc704\ud55c \ub178\ub825\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 \ub2e4\uc74c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. https://threadreaderapp.com/thread/1238496944684597248.html .","title":"\ucee8\ud14c\uc774\ub108\uc6a9 \uc0cc\ub4dc\ubc15\uc2a4 \uc2e4\ud589 \ud658\uacbd"},{"location":"security/docs/multitenancy.kr/#opa","text":"Gatekeeper \ub294 OPA \ub85c \uc0dd\uc131\ub41c \uc815\ucc45\uc744 \uc2dc\ud589\ud558\ub294 Kubernetes \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec\uc785\ub2c8\ub2e4 . OPA\ub97c \uc0ac\uc6a9\ud558\uba74 \ubcc4\ub3c4\uc758 \uc778\uc2a4\ud134\uc2a4 \ub610\ub294 \ub2e4\ub978 \ud14c\ub10c\ud2b8\ubcf4\ub2e4 \ub354 \ub192\uc740 \uc6b0\uc120\uc21c\uc704\uc5d0\uc11c \ud14c\ub10c\ud2b8\uc758 \ud3ec\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \uc815\ucc45\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \uc815\ucc45 \ubaa8\uc74c\uc740 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub97c \uc0ac\uc6a9\ud558\uc5ec CoreDNS\uc5d0\uc11c \ubc18\ud658\ub41c \ub808\ucf54\ub4dc\ub97c \ud544\ud130\ub9c1/\uc81c\uc5b4\ud560 \uc218 \uc788\ub294 \uc2e4\ud5d8\uc801\uc778 CoreDNS\uc6a9 OPA \ud50c\ub7ec\uadf8\uc778 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uac1c\ubc29\ud615 \uc815\ucc45 \uc5d0\uc774\uc804\ud2b8(OPA) \ubc0f \uac8c\uc774\ud2b8\ud0a4\ud37c"},{"location":"security/docs/multitenancy.kr/#_11","text":"Kyverno \ub294 \uc815\ucc45\uc744 Kubernetes \ub9ac\uc18c\uc2a4\ub85c \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\uc744 \uac80\uc99d, \ubcc0\uacbd \ubc0f \uc0dd\uc131\ud560 \uc218 \uc788\ub294 Kubernetes \uae30\ubcf8 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4. Kyverno\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \uc704\ud574 Kustomize \uc2a4\ud0c0\uc77c \uc624\ubc84\ub808\uc774\ub97c \uc0ac\uc6a9\ud558\uace0 \ubcc0\ud615\uc744 \uc704\ud55c JSON \ud328\uce58 \ubc0f \uc804\ub7b5\uc801 \ubcd1\ud569 \ud328\uce58\ub97c \uc9c0\uc6d0\ud558\uba70 \uc720\uc5f0\ud55c \ud2b8\ub9ac\uac70\ub97c \uae30\ubc18\uc73c\ub85c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc5d0 \ub9ac\uc18c\uc2a4\ub97c \ubcf5\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kyverno\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uaca9\ub9ac\ud558\uace0, \ud3ec\ub4dc \ubcf4\uc548 \ubc0f \uae30\ud0c0 \ubaa8\ubc94 \uc0ac\ub840\ub97c \uc801\uc6a9\ud558\uace0, \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uacfc \uac19\uc740 \uae30\ubcf8 \uad6c\uc131\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud504\ub85c\uc81d\ud2b8 \uc758 GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac \uc5d0 \uba87 \uac00\uc9c0 \uc608\uc81c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \ub9ce\uc740 \uac83\ub4e4\uc774 Kyverno \uc6f9\uc0ac\uc774\ud2b8 \uc758 \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uce74\uc774\ubca0\ub974\ub178"},{"location":"security/docs/multitenancy.kr/#_12","text":"\ud2b9\uc815 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub3c4\ub85d \ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc81c\ud55c\ud558\uba74 \uc18c\ud504\ud2b8 \ub2e4\uc911 \ud14c\ub10c\uc2dc \ubaa8\ub378\uc5d0\uc11c \uaca9\ub9ac\ub97c \uac15\ud654\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc744 \uc0ac\uc6a9\ud558\uba74 \ud14c\ub10c\ud2b8\ubcc4 \uc6cc\ud06c\ub85c\ub4dc\ub294 \uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 \ud504\ub85c\ube44\uc800\ub2dd\ub41c \ub178\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uaca9\ub9ac\ub97c \ub2ec\uc131\ud558\uae30 \uc704\ud574 \uae30\ubcf8 Kubernetes \uc18d\uc131(\ub178\ub4dc \uc120\ud638\ub3c4, \uc624\uc5fc \ubc0f \ud5c8\uc6a9 \uc624\ucc28)\uc744 \uc0ac\uc6a9\ud558\uc5ec Pod \uc608\uc57d\uc744 \uc704\ud574 \ud2b9\uc815 \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \uc9c0\uc815\ud558\uace0 \ub2e4\ub978 \ud14c\ub10c\ud2b8\uc758 Pod\uac00 \ud14c\ub10c\ud2b8\ubcc4 \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4.","title":"\ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ud2b9\uc815 \ub178\ub4dc\ub85c \uaca9\ub9ac"},{"location":"security/docs/multitenancy.kr/#1-","text":"Kubernetes \ub178\ub4dc \uc120\ud638\ub3c4 \ub294 \ub178\ub4dc \ub808\uc774\ube14 \uc744 \uae30\ubc18\uc73c\ub85c \uc608\uc57d \ub300\uc0c1 \ub178\ub4dc\uc5d0 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. . \ub178\ub4dc \uce5c\ud654\uc131 \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\ub294 \uc120\ud0dd\uae30 \uc6a9\uc5b4\uc640 \uc77c\uce58\ud558\ub294 \ud2b9\uc815 \ub178\ub4dc\uc5d0 \ub04c\ub9bd\ub2c8\ub2e4. \uc544\ub798 \ud3ec\ub4dc \uc0ac\uc591\uc5d0\uc11c 'requiredDuringSchedulingIgnoredDuringExecution' \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\uac00 \uac01 \ud3ec\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uadf8 \uacb0\uacfc \ud3ec\ub4dc\ub294 tenant: tenants-x \ud0a4/\uac12\uc73c\ub85c \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\ub97c \ub300\uc0c1\uc73c\ub85c \ud569\ub2c8\ub2e4 . ... \uc0ac\uc591 : \uc120\ud638\ub3c4 : \ub178\ub4dc\uce5c\ud654\ub3c4 : requiredDuringSchedulingIgnoredDuringExecution : nodeSelector\uc870\uac74 : - matchExpressions : - \ud0a4 : \ud14c\ub10c\ud2b8 \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \ud14c\ub10c\ud2b8-x ... \uc774 \ub178\ub4dc \uc120\ud638\ub3c4\ub97c \uc0ac\uc6a9\ud558\uba74 \uc608\uc57d \uc911\uc5d0\ub294 \ub808\uc774\ube14\uc774 \ud544\uc694\ud558\uc9c0\ub9cc \uc2e4\ud589 \uc911\uc5d0\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \ub178\ub4dc\uc758 \ub808\uc774\ube14\uc774 \ubcc0\uacbd\ub418\uba74 \ud574\ub2f9 \ub808\uc774\ube14 \ubcc0\uacbd\ub9cc\uc73c\ub85c \ud3ec\ub4dc\uac00 \uc81c\uac70\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ud5a5\ud6c4 \uc77c\uc815\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 \ub178\ub4dc \uc120\ud638\ub3c4 \ub300\uc2e0 \ub178\ub4dc \uc120\ud0dd\uae30 \ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc \uc5b4\ud53c\ub2c8\ud2f0\ub294 \ud45c\ud604\ub825\uc774 \ub354 \ud48d\ubd80\ud558\uba70 \ud3ec\ub4dc \uc2a4\ucf00\uc904\ub9c1 \uc911\uc5d0 \ub354 \ub9ce\uc740 \uc870\uac74\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc28\uc774\uc810 \ubc0f \uace0\uae09 \uc2a4\ucf00\uc904\ub9c1 \uc120\ud0dd\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 Advanced Kubernetes pod to node scheduling .","title":"1\ubd80 - \ub178\ub4dc \uc120\ud638\ub3c4"},{"location":"security/docs/multitenancy.kr/#2-","text":"Pod\ub97c \ub178\ub4dc\ub85c \ub04c\uc5b4\ub4e4\uc774\ub294 \uac83\uc740 \uc774 \uc138 \ubd80\ubd84\uc73c\ub85c \uad6c\uc131\ub41c \uc811\uadfc \ubc29\uc2dd\uc758 \uccab \ubc88\uc9f8 \ubd80\ubd84\uc5d0 \ubd88\uacfc\ud569\ub2c8\ub2e4. \uc774 \uc811\uadfc \ubc29\uc2dd\uc774 \uc791\ub3d9\ud558\ub824\uba74 \ud3ec\ub4dc\uac00 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub418\uc9c0 \uc54a\uc740 \ub178\ub4dc\ub85c \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud3ec\ub4dc\ub97c \ubc00\uc5b4\ub0b4\uc57c \ud569\ub2c8\ub2e4. \uc6d0\uce58 \uc54a\uac70\ub098 \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \ud3ec\ub4dc\ub97c \ubc29\uc9c0\ud558\uae30 \uc704\ud574 Kubernetes\ub294 \ub178\ub4dc taints \ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. taint\ub294 Pod\uac00 \uc608\uc57d\ub418\uc9c0 \uc54a\ub3c4\ub85d \ub178\ub4dc\uc5d0 \uc870\uac74\uc744 \uc9c0\uc815\ud558\ub294 \ub370 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \uc544\ub798 taint\ub294 tenant: tenants-x \uc758 \ud0a4-\uac12 \uc30d\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4 . ... \uc624\uc5fc : - \ud0a4 : \ud14c\ub10c\ud2b8 \uac12 : \ud14c\ub10c\ud2b8-x \ud6a8\uacfc : \uc2a4\ucf00\uc904 \uc5c6\uc74c ... \uc704\uc758 \ub178\ub4dc taint \uac00 \uc8fc\uc5b4\uc9c0\uba74 \uc624\uc5fc\uc744 \uc6a9\uc778\ud558\ub294 \ud3ec\ub4dc\ub9cc \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778\ub41c \ud3ec\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uc608\uc57d\ub418\ub3c4\ub85d \ud558\ub824\uba74 \uac01 \ud3ec\ub4dc \uc0ac\uc591\uc5d0 \uc544\ub798\uc640 \uac19\uc774 taint\uc5d0 \ub300\ud55c 'toleration' \uc774 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. ... \uad00\uc6a9 : - \ud6a8\uacfc : NoSchedule \ud0a4 : \uc784\ucc28\uc778 \uc5f0\uc0b0\uc790 : \uac19\uc74c \uac12 : \ud14c\ub10c\ud2b8-x ... 'toleration' \uc774 \uc788\ub294 \ud3ec\ub4dc \ub294 \uc801\uc5b4\ub3c4 \ud574\ub2f9 \ud2b9\uc815 \uc624\uc5fc\uc73c\ub85c \uc778\ud574 \ub178\ub4dc\uc5d0\uc11c \uc2a4\ucf00\uc904\ub9c1\uc774 \uc911\uc9c0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud14c\uc778\ud2b8\ub294 Kubernetes\uc5d0\uc11c \ub178\ub4dc \ub9ac\uc18c\uc2a4 \uc555\ub825\uacfc \uac19\uc740 \ud2b9\uc815 \uc870\uac74\uc5d0\uc11c Pod \uc608\uc57d\uc744 \uc77c\uc2dc\uc801\uc73c\ub85c \uc911\uc9c0\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud638\ub3c4, taint \ubc0f toleration\uc744 \ud1b5\ud574 \uc6d0\ud558\ub294 pod\ub97c \ud2b9\uc815 \ub178\ub4dc\ub85c \ud6a8\uacfc\uc801\uc73c\ub85c \uc720\uc778\ud558\uace0 \uc6d0\uce58 \uc54a\ub294 pod\ub97c \uaca9\ud1f4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \ubaa8\ub4e0 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud558\ub824\uba74 \ud2b9\uc815 Kubernetes \ud3ec\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud3ec\ub4dc\uc758 \uc608\ub294 \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI) \ubc0f kube-proxy daemonsets . \uc774\ub97c \uc704\ud574 \uc774\ub7ec\ud55c \ud31f(Pod)\uc758 \uc0ac\uc591\uc5d0\ub294 \ub2e4\uc591\ud55c \uc624\uc5fc\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \ub9e4\uc6b0 \ud5c8\uc6a9\uc801\uc778 \ud5c8\uc6a9 \uc624\ucc28\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud5c8\uc6a9 \uc624\ucc28\ub97c \ubcc0\uacbd\ud558\uc9c0 \uc54a\ub3c4\ub85d \uc8fc\uc758\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub0b4\uacb0\ud568\uc131\uc744 \ubcc0\uacbd\ud558\uba74 \uc798\ubabb\ub41c \ud074\ub7ec\uc2a4\ud130 \uc791\uc5c5\uc774 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c OPA/Gatekeeper \ubc0f Kyverno \uc640 \uac19\uc740 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \ud31f(Pod)\uc774 \uc774\ub7ec\ud55c \uad00\ub300\ud55c \ub0b4\uacb0\ud568\uc131\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\ub294 \uc815\ucc45\uc744 \uac80\uc99d\ud569\ub2c8\ub2e4.","title":"\ud30c\ud2b8 2 - \uc624\uc5fc \ubc0f \ud5c8\uc6a9"},{"location":"security/docs/multitenancy.kr/#3-","text":"CICD \ud30c\uc774\ud504\ub77c\uc778\uc758 \uaddc\uce59 \uc801\uc6a9\uc744 \ud3ec\ud568\ud558\uc5ec \ud3ec\ub4dc \uc0ac\uc591\uc758 \ub178\ub4dc \uc120\ud638\ub3c4 \ubc0f \ub0b4\uacb0\ud568\uc131\uc744 \uad00\ub9ac\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uaca9\ub9ac \uc801\uc6a9\uc740 Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc218\uc900\uc5d0\uc11c\ub3c4 \uc218\ud589\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uae30\ubc18\uc73c\ub85c \uc778\ubc14\uc6b4\ub4dc Kubernetes API \uc11c\ubc84 \uc694\uccad\uc744 \ubcc0\ud615 \ud558\uc5ec \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uac01 \ub178\ub4dc \uc120\ud638\ub3c4 \uaddc\uce59 \ubc0f \ud5c8\uc6a9\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub85c \ud5a5\ud558\ub294 \ud3ec\ub4dc\ub294 tenants-x \ub178\ub4dc \uc5d0\uc11c \uc608\uc57d\uc744 \ud5c8\uc6a9\ud558\uae30 \uc704\ud574 \uc62c\ubc14\ub978 \ub178\ub4dc \uc120\ud638\ub3c4 \ubc0f \ub0b4\uacb0\ud568\uc131 \uc744 \uc0ac\uc6a9\ud558\uc5ec _\uc2a4\ud0ec\ud504_\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . Kubernetes Mutating Admission Webhook \ub97c \uc0ac\uc6a9\ud558\uc5ec \uad6c\uc131\ub41c \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub97c \ud65c\uc6a9\ud558\uc5ec \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc778\ubc14\uc6b4\ub4dc \ud3ec\ub4dc\ub97c \ubcc0\ud615\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba85\uc138\uc11c. \ub3cc\uc5f0\ubcc0\uc774\ub294 \uc6d0\ud558\ub294 \uc77c\uc815\uc744 \ud5c8\uc6a9\ud558\ub294 \ub370 \ud544\uc694\ud55c \uc694\uc18c\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4. \ub178\ub4dc \uc120\ud638\ub3c4\ub97c \ucd94\uac00\ud558\ub294 OPA/\uac8c\uc774\ud2b8\ud0a4\ud37c \uc815\ucc45\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. apiVersion : mutations.gatekeeper.sh/v1alpha1 \uc885\ub958 : \ud560\ub2f9 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : mutator-add-nodeaffinity-pod \uc8fc\uc11d : aws-eks-best-practices/description : > - \ub178\ub4dc \uc120\ud638\ub3c4 \ucd94\uac00 - https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity \uc0ac\uc591 : \uc801\uc6a9 \ub300\uc0c1 : - \uadf8\ub8f9 : [ \"\" ] \uc885\ub958 : [ \"\ud3ec\ub4dc\" ] \ubc84\uc804 : [ \"v1\" ] \uc77c\uce58 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"tenants-x\" ] \uc704\uce58 : \"spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms\" \ub9e4\uac1c\ubcc0\uc218 : \ud560\ub2f9 : \uac12 : - matchExpressions : - \ud0a4 : \"\uc784\ucc28\uc778\" \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \"\uc138\uc785\uc790-x\" tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc5d0 \ud3ec\ub4dc\ub97c \uc801\uc6a9\ud558\uae30 \uc704\ud574 Kubernetes API \uc11c\ubc84 \uc694\uccad\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4 . \uc774 \uc815\ucc45\uc740 requiredDuringSchedulingIgnoredDuringExecution \ub178\ub4dc \uce5c\ud654\uc131 \uaddc\uce59\uc744 \ucd94\uac00\ud558\uc5ec \ud3ec\ub4dc\uac00 tenant: tenants-x \ub808\uc774\ube14\uc774 \uc788\ub294 \ub178\ub4dc\uc5d0 \uc720\uc778\ub429\ub2c8\ub2e4. \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c \ub450 \ubc88\uc9f8 \uc815\ucc45\uc740 \ub300\uc0c1 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \uadf8\ub8f9, \uc885\ub958 \ubc0f \ubc84\uc804\uc758 \ub3d9\uc77c\ud55c \uc77c\uce58 \uae30\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub3d9\uc77c\ud55c \ud3ec\ub4dc \uc0ac\uc591\uc5d0 \ub0b4\uacb0\ud568\uc131\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. apiVersion : mutations.gatekeeper.sh/v1alpha1 \uc885\ub958 : \ud560\ub2f9 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : mutator-add-toleration-pod \uc8fc\uc11d : aws-eks-best-practices/description : > - \uad00\uc6a9 \ucd94\uac00 - https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ \uc0ac\uc591 : \uc801\uc6a9 \ub300\uc0c1 : - \uadf8\ub8f9 : [ \"\" ] \uc885\ub958 : [ \"\ud3ec\ub4dc\" ] \ubc84\uc804 : [ \"v1\" ] \uc77c\uce58 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"tenants-x\" ] \uc704\uce58 : \"\uc0ac\uc591 \ud5c8\uc6a9\" \ub9e4\uac1c\ubcc0\uc218 : \ud560\ub2f9 : \uac12 : - \ud0a4 : \"\uc784\ucc28\uc778\" \uc5f0\uc0b0\uc790 : \"\uac19\uc74c\" \uac12 : \"\ud14c\ub10c\ud2b8-x\" \ud6a8\uacfc : \"NoSchedule\" \uc704\uc758 \uc815\ucc45\uc740 \ud3ec\ub4dc\uc5d0\ub9cc \uc801\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub294 \uc815\ucc45\uc758 location \uc694\uc18c\uc5d0\uc11c \ubcc0\uacbd\ub41c \uc694\uc18c\uc5d0 \ub300\ud55c \uacbd\ub85c \ub54c\ubb38\uc785\ub2c8\ub2e4. \ubc30\ud3ec \ubc0f \uc791\uc5c5 \ub9ac\uc18c\uc2a4\uc640 \uac19\uc774 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \ub9ac\uc18c\uc2a4\ub97c \ucc98\ub9ac\ud558\uae30 \uc704\ud574 \ucd94\uac00 \uc815\ucc45\uc744 \uc791\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub098\uc5f4\ub41c \uc815\ucc45 \ubc0f \uae30\ud0c0 \uc608\uc81c\ub294 \ub2e4\uc74c\uc744 \uc704\ud55c \ub3d9\ubc18\uc790 GitHub \ud504\ub85c\uc81d\ud2b8 \uc5d0\uc11c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc. \uc774 \ub450 \ubcc0\uc774\uc758 \uacb0\uacfc\ub294 \ud3ec\ub4dc\uac00 \uc6d0\ud558\ub294 \ub178\ub4dc\uc5d0 \ub04c\ub9ac\ub294 \ub3d9\uc2dc\uc5d0 \ud2b9\uc815 \ub178\ub4dc \uc624\uc5fc\uc5d0 \uc758\ud574 \ubc18\ubc1c\ub418\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\ub97c \ud655\uc778\ud558\uae30 \uc704\ud574 tenant=tenants-x \ub85c \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\ub97c \uac00\uc838 \uc624\uace0 tenants-x \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc5d0\uc11c \ud3ec\ub4dc\ub97c \uac00\uc838 \uc624\uae30 \uc704\ud574 \ub450 \uac1c\uc758 kubectl \ud638\ucd9c\uc5d0\uc11c \ucd9c\ub825 \uc2a4\ub2c8\ud3ab\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl \ub178\ub4dc \uac00\uc838\uc624\uae30 -l \ud14c\ub10c\ud2b8=\ud14c\ub10c\ud2b8-x \uc774\ub984 IP-10-0-11-255... IP-10-0-28-81... IP-10-0-43-107... kubectl -n tenants-x \ud31f(Pod) \uac00\uc838\uc624\uae30 -owide \uc774\ub984 \uc900\ube44 \uc0c1\ud0dc \ub2e4\uc2dc \uc2dc\uc791 \uc5f0\ub839 IP \ub178\ub4dc \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-2q7xw 1/1 \uc2e4\ud589 0 13s 10.0.42.143 ip-10-0-43-107... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-9b6hg 1/1 \uc2e4\ud589 0 13s 10.0.18.145 ip-10-0-28-81... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-nxvw5 1/1 \uc2e4\ud589 0 13s 10.0.30.117 ip-10-0-28-81... \ud14c\ub10c\ud2b8-\ud14c\uc2a4\ud2b8-\ubc30\ud3ec-58b895ff87-vw796 1/1 \uc2e4\ud589 \uc911 0 13s 10.0.3.113 ip-10-0-11-255... \ud14c\ub10c\ud2b8 \ud14c\uc2a4\ud2b8 \ud3ec\ub4dc 1/1 \uc2e4\ud589 0 13s 10.0.35.83 ip-10-0-43-107... \uc704 \ucd9c\ub825\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ubaa8\ub4e0 \ud3ec\ub4dc\ub294 tenant=tenants-x \ub808\uc774\ube14\uc774 \uc9c0\uc815\ub41c \ub178\ub4dc\uc5d0\uc11c \uc608\uc57d\ub429\ub2c8\ub2e4 . \uac04\ub2e8\ud788 \ub9d0\ud574\uc11c \ud3ec\ub4dc\ub294 \uc6d0\ud558\ub294 \ub178\ub4dc\uc5d0\uc11c\ub9cc \uc2e4\ud589\ub418\uace0 \ub2e4\ub978 \ud3ec\ub4dc(\ud544\uc218 \uce5c\ud654\uc131 \ubc0f \ub0b4\uc57d\uc131 \uc5c6\uc74c)\ub294 \uc2e4\ud589\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud14c\ub10c\ud2b8 \uc6cc\ud06c\ub85c\ub4dc\ub294 \ud6a8\uacfc\uc801\uc73c\ub85c \uaca9\ub9ac\ub429\ub2c8\ub2e4. \ubcc0\ud615\ub41c \ud3ec\ub4dc \uc0ac\uc591\uc758 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud14c\ub10c\ud2b8 \ud14c\uc2a4\ud2b8 \ud3ec\ub4dc \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \ud14c\ub10c\ud2b8-x \uc0ac\uc591 : \uc120\ud638\ub3c4 : \ub178\ub4dc\uce5c\ud654\ub3c4 : requiredDuringSchedulingIgnoredDuringExecution : nodeSelector\uc870\uac74 : - matchExpressions : - \ud0a4 : \ud14c\ub10c\ud2b8 \uc5f0\uc0b0\uc790 : \uc548\uc73c\ub85c \uac12 : - \ud14c\ub10c\ud2b8-x ... \uad00\uc6a9 : - \ud6a8\uacfc : NoSchedule \ud0a4 : \uc784\ucc28\uc778 \uc5f0\uc0b0\uc790 : \uac19\uc74c \uac12 : \ud14c\ub10c\ud2b8-x ... \uc8fc\ubaa9 \ubcc0\uacbd \ubc0f \uac80\uc99d \uc2b9\uc778 \uc6f9\ud6c4\ud06c\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes API \uc11c\ubc84 \uc694\uccad \ud750\ub984\uc5d0 \ud1b5\ud569\ub41c \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\ub294 \uc9c0\uc815\ub41c \uc2dc\uac04 \ub0b4\uc5d0 API \uc11c\ubc84\uc758 \uc694\uccad\uc5d0 \uc751\ub2f5\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c 3\ucd08 \uc774\ud558\uc785\ub2c8\ub2e4. Webhook \ud638\ucd9c\uc774 \uad6c\uc131\ub41c \uc2dc\uac04 \ub0b4\uc5d0 \uc751\ub2f5\uc744 \ubc18\ud658\ud558\uc9c0 \ubabb\ud558\uba74 \uc778\ubc14\uc6b4\ub4dc API \uc11c\ubc84 \uc694\uccad\uc758 \ubcc0\ud615 \ubc0f/\ub610\ub294 \uc720\ud6a8\uc131 \uac80\uc0ac\uac00 \ubc1c\uc0dd\ud560 \uc218\ub3c4 \uc788\uace0 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\uc744 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ub3d9\uc791\uc740 \ud5c8\uc6a9 \uc6f9\ud6c4\ud06c \uad6c\uc131\uc774 Fail Open \ub610\ub294 Fail Close . \uc704\uc758 \uc608\uc5d0\uc11c\ub294 OPA/Gatekeeper\uc6a9\uc73c\ub85c \uc791\uc131\ub41c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ub178\ub4dc \uc120\ud0dd \uc0ac\uc6a9 \uc0ac\ub840\ub3c4 \ucc98\ub9ac\ud558\ub294 \ub2e4\ub978 \uc815\ucc45 \uad00\ub9ac \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc774 Kyverno \uc815\ucc45 \uc744 \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc \uc120\ud638\ub3c4 \ubcc0\uacbd\uc744 \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \uc62c\ubc14\ub974\uac8c \uc791\ub3d9\ud558\ub294 \uacbd\uc6b0 \ubcc0\uacbd \uc815\ucc45\uc740 \uc778\ubc14\uc6b4\ub4dc API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\uc5d0 \uc6d0\ud558\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \ubcc0\uacbd \uc0ac\ud56d\uc774 \uc9c0\uc18d\ub418\ub3c4\ub85d \ud5c8\uc6a9\ub418\uae30 \uc804\uc5d0 \uc6d0\ud558\ub294 \ubcc0\uacbd \uc0ac\ud56d\uc774 \ubc1c\uc0dd\ud558\ub294\uc9c0 \ud655\uc778\ud558\uae30 \uc704\ud55c \uac80\uc99d \uc815\ucc45\ub3c4 \ud3ec\ud568\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uc774\ub294 \ud14c\ub10c\ud2b8-\ub178\ub4dc \uaca9\ub9ac\ub97c \uc704\ud574 \uc774\ub7ec\ud55c \uc815\ucc45\uc744 \uc0ac\uc6a9\ud560 \ub54c \ud2b9\ud788 \uc911\uc694\ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc6d0\ud558\uc9c0 \uc54a\ub294 \uad6c\uc131\uc774 \uc788\ub294\uc9c0 \uc815\uae30\uc801\uc73c\ub85c \ud655\uc778\ud558\uae30 \uc704\ud574 Audit \uc815\ucc45\uc744 \ud3ec\ud568\ud558\ub294 \uac83\ub3c4 \uc88b\uc740 \uc0dd\uac01 \uc785\ub2c8\ub2e4.","title":"3\ubd80 - \ub178\ub4dc \uc120\ud0dd\uc744 \uc704\ud55c \uc815\ucc45 \uae30\ubc18 \uad00\ub9ac"},{"location":"security/docs/multitenancy.kr/#_13","text":"k-rail \ud2b9\uc815 \uc815\ucc45 \uc2dc\ud589\uc744 \ud1b5\ud574 \ub2e4\uc911 \ud14c\ub10c\ud2b8 \ud658\uacbd\uc744 \ubcf4\ud638\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Amazon EKS\ub97c \uc0ac\uc6a9\ud558\ub294 \ub2e4\uc911 \ud14c\ub10c\ud2b8 SaaS \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub300\ud55c \ubcf4\uc548 \uc0ac\ub840","title":"\ucc38\uc870"},{"location":"security/docs/multitenancy.kr/#_14","text":"\uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uc5ec \ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc\ub97c \uad6c\ud604\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ud14c\ub10c\ud2b8 \uac04\uc5d0 \ub9e4\uc6b0 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \uc81c\uacf5\ub418\uc9c0\ub9cc \uba87 \uac00\uc9c0 \ub2e8\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uccab\uc9f8, \ud14c\ub10c\ud2b8\uac00 \ub9ce\uc740 \uacbd\uc6b0 \uc774 \uc811\uadfc \ubc29\uc2dd\uc740 \uae08\uc138 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ub300\ud55c \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ube44\uc6a9\uc744 \uc9c0\ubd88\ud574\uc57c \ud560 \ubfd0\ub9cc \uc544\ub2c8\ub77c \ud074\ub7ec\uc2a4\ud130 \uac04\uc5d0 \ucef4\ud4e8\ud305 \ub9ac\uc18c\uc2a4\ub97c \uacf5\uc720\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub85c \uc778\ud574 \uacb0\uad6d \ud074\ub7ec\uc2a4\ud130\uc758 \ud558\uc704 \uc9d1\ud569\uc774 \ucda9\ubd84\ud788 \ud65c\uc6a9\ub418\uc9c0 \uc54a\uace0 \ub098\uba38\uc9c0\ub294 \uacfc\ub3c4\ud558\uac8c \ud65c\uc6a9\ub418\ub294 \uc870\uac01\ud654\uac00 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. \ub458\uc9f8, \uc774\ub7ec\ud55c \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud558\ub824\uba74 \ud2b9\uc218 \ub3c4\uad6c\ub97c \uad6c\uc785\ud558\uac70\ub098 \uad6c\ucd95\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \uc218\ubc31 \ub610\ub294 \uc218\ucc9c \uac1c\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \uad00\ub9ac\ud558\ub294 \uac83\uc774 \ub108\ubb34 \uc5b4\ub824\uc6cc\uc9c8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c, \ud14c\ub10c\ud2b8\ub2f9 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\ub294 \uac83\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc0dd\uc131\uc5d0 \ube44\ud574 \ub290\ub9bd\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uaddc\uc81c\uac00 \uc5c4\uaca9\ud55c \uc0b0\uc5c5\uc774\ub098 \uac15\ub825\ud55c \uaca9\ub9ac\uac00 \ud544\uc694\ud55c SaaS \ud658\uacbd\uc5d0\uc11c\ub294 \ud558\ub4dc \ud14c\ub10c\uc2dc \uc811\uadfc \ubc29\uc2dd\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc"},{"location":"security/docs/multitenancy.kr/#_15","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\ub294 \uc18c\ud504\ud2b8 \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ud604\uc7ac \ub2e8\uc810\uacfc \ud558\ub4dc \uba40\ud2f0\ud14c\ub10c\uc2dc\uc758 \ubb38\uc81c\uc810\uc744 \uc778\uc2dd\ud588\uc2b5\ub2c8\ub2e4. Multi-Tenancy SIG(Special Interest Group) \ub294 HNC(Hierarchical Namespace Controller) \ubc0f \uac00\uc0c1 \ud074\ub7ec\uc2a4\ud130\ub97c \ube44\ub86f\ud55c \uc5ec\ub7ec \uc778\ud050\ubca0\uc774\uc158 \ud504\ub85c\uc81d\ud2b8\ub97c \ud1b5\ud574 \uc774\ub7ec\ud55c \ub2e8\uc810\uc744 \ud574\uacb0\ud558\ub824\uace0 \uc2dc\ub3c4\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. . \uc740 \ud14c\ub10c\ud2b8 \uad00\ub9ac\uc790\uac00 \ud558\uc704 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uacfc \ud568\uaed8 [ \uc815\ucc45 ] \uac1c\uccb4 \uc0c1\uc18d\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uac04\uc5d0 \ubd80\ubaa8-\uc790\uc2dd \uad00\uacc4\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4 . \uac00\uc0c1 \ud074\ub7ec\uc2a4\ud130 \uc81c\uc548\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc758 \uac01 \ud14c\ub10c\ud2b8\uc5d0 \ub300\ud574 API \uc11c\ubc84, \ucee8\ud2b8\ub864\ub7ec \uad00\ub9ac\uc790 \ubc0f \uc2a4\ucf00\uc904\ub7ec\ub97c \ud3ec\ud568\ud558\uc5ec \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc11c\ube44\uc2a4\uc758 \ubcc4\ub3c4 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud55c \uba54\ucee4\ub2c8\uc998\uc744 \uc124\uba85\ud569\ub2c8\ub2e4(\"Kubernetes on Kubernetes\"\ub77c\uace0\ub3c4 \ud568). Multi-Tenancy Benchmarks \uc81c\uc548\uc740 \uaca9\ub9ac \ubc0f \uc138\ubd84\ud654\ub97c \uc704\ud55c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc640 \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uacf5\uc720\ud558\uae30 \uc704\ud55c \uc9c0\uce68\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub77c\uc778 \ub3c4\uad6c kubectl-mtb \ub97c \uc0ac\uc6a9\ud558\uc5ec \uac00\uc774\ub4dc\ub77c\uc778 \uc900\uc218 \uc5ec\ubd80\ub97c \ud655\uc778\ud569\ub2c8\ub2e4.","title":"\ud5a5\ud6c4 \ubc29\ud5a5"},{"location":"security/docs/multitenancy.kr/#_16","text":"\ubc18\uc790\uc774 \ud074\ub77c\uc6b0\ub4dc \ucf54\ub9e8\ub354 \ub80c\uc988 \ub2c8\ub974\ub9c8\ud0c0 \ub77c\ud398\uc774 \ubaa9\uc7a5\uc8fc \uc704\ube0c \ud50c\ub7ed\uc2a4","title":"\ub2e4\uc911 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac \ub9ac\uc18c\uc2a4"},{"location":"security/docs/multitenancy/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Tenant Isolation \u00b6 When we think of multi-tenancy, we often want to isolate a user or application from other users or applications running on a shared infrastructure. Kubernetes is a single tenant orchestrator , i.e. a single instance of the control plane is shared among all the tenants within a cluster. There are, however, various Kubernetes objects that you can use to create the semblance of multi-tenancy. For example, Namespaces and Role-based access controls (RBAC) can be implemented to logically isolate tenants from each other. Similarly, Quotas and Limit Ranges can be used to control the amount of cluster resources each tenant can consume. Nevertheless, the cluster is the only construct that provides a strong security boundary. This is because an attacker that manages to gain access to a host within the cluster can retrieve all Secrets, ConfigMaps, and Volumes, mounted on that host. They could also impersonate the Kubelet which would allow them to manipulate the attributes of the node and/or move laterally within the cluster. The following sections will explain how to implement tenant isolation while mitigating the risks of using a single tenant orchestrator like Kubernetes. Soft multi-tenancy \u00b6 With soft multi-tenancy, you use native Kubernetes constructs, e.g. namespaces, roles and role bindings, and network policies, to create logical separation between tenants. RBAC, for example, can prevent tenants from accessing or manipulate each other's resources. Quotas and limit ranges control the amount of cluster resources each tenant can consume while network policies can help prevent applications deployed into different namespaces from communicating with each other. None of these controls, however, prevent pods from different tenants from sharing a node. If stronger isolation is required, you can use a node selector, anti-affinity rules, and/or taints and tolerations to force pods from different tenants to be scheduled onto separate nodes; often referred to as sole tenant nodes . This could get rather complicated, and cost prohibitive, in an environment with many tenants. Attention Soft multi-tenancy implemented with Namespaces does not allow you to provide tenants with a filtered list of Namespaces because Namespaces are a globally scoped Type. If a tenant has the ability to view a particular Namespace, it can view all Namespaces within the cluster. Warning With soft-multi-tenancy, tenants retain the ability to query CoreDNS for all services that run within the cluster by default. An attacker could exploit this by running dig SRV . .svc.cluster.local from any pod in the cluster. If you need to restrict access to DNS records of services that run within your clusters, consider using the Firewall or Policy plugins for CoreDNS. For additional information, see https://github.com/coredns/policy#kubernetes-metadata-multi-tenancy-policy . Kiosk is an open source project that can aid in the implementation of soft multi-tenancy. It is implemented as a series of CRDs and controllers that provide the following capabilities: Accounts & Account Users to separate tenants in a shared Kubernetes cluster Self-Service Namespace Provisioning for account users Account Limits to ensure quality of service and fairness when sharing a cluster Namespace Templates for secure tenant isolation and self-service namespace initialization Loft is a commercial offering from the maintainers of Kiosk and DevSpace that adds the following capabilities: Multi-cluster access for granting access to spaces in different clusters Sleep mode scales down deployments in a space during periods of inactivity Single sign-on with OIDC authentication providers like GitHub There are three primary use cases that can be addressed by soft multi-tenancy. Enterprise Setting \u00b6 The first is in an Enterprise setting where the \"tenants\" are semi-trusted in that they are employees, contractors, or are otherwise authorized by the organization. Each tenant will typically align to an administrative division such as a department or team. In this type of setting, a cluster administrator will usually be responsible for creating namespaces and managing policies. They may also implement a delegated administration model where certain individuals are given oversight of a namespace, allowing them to perform CRUD operations for non-policy related objects like deployments, services, pods, jobs, etc. The isolation provided by a container runtime may be acceptable within this setting or it may need to be augmented with additional controls for pod security. It may also be necessary to restrict communication between services in different namespaces if stricter isolation is required. Kubernetes as a Service \u00b6 By contrast, soft multi-tenancy can be used in settings where you want to offer Kubernetes as a service (KaaS). With KaaS, your application is hosted in a shared cluster along with a collection of controllers and CRDs that provide a set of PaaS services. Tenants interact directly with the Kubernetes API server and are permitted to perform CRUD operations on non-policy objects. There is also an element of self-service in that tenants may be allowed to create and manage their own namespaces. In this type of environment, tenants are assumed to be running untrusted code. To isolate tenants in this type of environment, you will likely need to implement strict network policies as well as pod sandboxing . Sandboxing is where you run the containers of a pod inside a micro VM like Firecracker or in a user-space kernel. Today, you can create sandboxed pods with EKS Fargate. Software as a Service (SaaS) \u00b6 The final use case for soft multi-tenancy is in a Software-as-a-Service (SaaS) setting. In this environment, each tenant is associated with a particular instance of an application that's running within the cluster. Each instance often has its own data and uses separate access controls that are usually independent of Kubernetes RBAC. Unlike the other use cases, the tenant in a SaaS setting does not directly interface with the Kubernetes API. Instead, the SaaS application is responsible for interfacing with the Kubernetes API to create the necessary objects to support each tenant. Kubernetes Constructs \u00b6 In each of these instances the following constructs are used to isolate tenants from each other: Namespaces \u00b6 Namespaces are fundamental to implementing soft multi-tenancy. They allow you to divide the cluster into logical partitions. Quotas, network policies, service accounts, and other objects needed to implement multi-tenancy are scoped to a namespace. Network policies \u00b6 By default, all pods in a Kubernetes cluster are allowed to communicate with each other. This behavior can be altered using network policies. Network policies restrict communication between pods using labels or IP address ranges. In a multi-tenant environment where strict network isolation between tenants is required, we recommend starting with a default rule that denies communication between pods, and another rule that allows all pods to query the DNS server for name resolution. With that in place, you can begin adding more permissive rules that allow for communication within a namespace. This can be further refined as required. Attention Network policies are necessary but not sufficient. The enforcement of network policies requires a policy engine such as Calico or Cilium. Role-based access control (RBAC) \u00b6 Roles and role bindings are the Kubernetes objects used to enforce role-based access control (RBAC) in Kubernetes. Roles contain lists of actions that can be performed against objects in your cluster. Role bindings specify the individuals or groups to whom the roles apply. In the enterprise and KaaS settings, RBAC can be used to permit administration of objects by selected groups or individuals. Quotas \u00b6 Quotas are used to define limits on workloads hosted in your cluster. With quotas, you can specify the maximum amount of CPU and memory that a pod can consume, or you can limit the number of resources that can be allocated in a cluster or namespace. Limit ranges allow you to declare minimum, maximum, and default values for each limit. Overcommitting resources in a shared cluster is often beneficial because it allows you maximize your resources. However, unbounded access to a cluster can cause resource starvation, which can lead to performance degradation and loss of application availability. If a pod's requests are set too low and the actual resource utilization exceeds the capacity of the node, the node will begin to experience CPU or memory pressure. When this happens, pods may be restarted and/or evicted from the node. To prevent this from happening, you should plan to impose quotas on namespaces in a multi-tenant environment to force tenants to specify requests and limits when scheduling their pods on the cluster. It will also mitigate a potential denial of service by constraining the amount of resources a pod can consume. You can also use quotas to apportion the cluster's resources to align with a tenant's spend. This is particularly useful in the KaaS scenario. Pod priority and preemption \u00b6 Pod priority and preemption can be useful when you want to provide more importance to a Pod relative to other Pods. For example, with pod priority you can configure pods from customer A to run at a higher priority than customer B. When there's insufficient capacity available, the scheduler will evict the lower-priority pods from customer B to accommodate the higher-priority pods from customer A. This can be especially handy in a SaaS environment where customers willing to pay a premium receive a higher priority. Attention Pods priority can have an undesired effect on other Pods with lower priority. For example, although the victim pods are terminated gracefully but the PodDisruptionBudget is not guaranteed, which could break a application with lower priority that relies on a quorum of Pods, see Limitations of preemption . Mitigating controls \u00b6 Your chief concern as an administrator of a multi-tenant environment is preventing an attacker from gaining access to the underlying host. The following controls should be considered to mitigate this risk: Sandboxed execution environments for containers \u00b6 Sandboxing is a technique by which each container is run in its own isolated virtual machine. Technologies that perform pod sandboxing include Firecracker and Weave's Firekube . For additional information about the effort to make Firecracker a supported runtime for EKS, see https://threadreaderapp.com/thread/1238496944684597248.html . Open Policy Agent (OPA) & Gatekeeper \u00b6 Gatekeeper is a Kubernetes admission controller that enforces policies created with OPA . With OPA you can create a policy that runs pods from tenants on separate instances or at a higher priority than other tenants. A collection of common OPA policies can be found in the GitHub repository for this project. There is also an experimental OPA plugin for CoreDNS that allows you to use OPA to filter/control the records returned by CoreDNS. Kyverno \u00b6 Kyverno is a Kubernetes native policy engine that can validate, mutate, and generate configurations with policies as Kubernetes resources. Kyverno uses Kustomize-style overlays for validation, supports JSON Patch and strategic merge patch for mutation, and can clone resources across namespaces based on flexible triggers. You can use Kyverno to isolate namespaces, enforce pod security and other best practices, and generate default configurations such as network policies. Several examples are included in the GitHub repository for this project. Many others are included in the policy library on the Kyverno website. Isolating tenant workloads to specific nodes \u00b6 Restricting tenant workloads to run on specific nodes can be used to increase isolation in the soft multi-tenancy model. With this approach, tenant-specific workloads are only run on nodes provisioned for the respective tenants. To achieve this isolation, native Kubernetes properties (node affinity, and taints and tolerations) are used to target specific nodes for pod scheduling, and prevent pods, from other tenants, from being scheduled on the tenant-specific nodes. Part 1 - Node affinity \u00b6 Kubernetes node affinity is used to target nodes for scheduling, based on node labels . With node affinity rules, the pods are attracted to specific nodes that match the selector terms. In the below pod specification, the requiredDuringSchedulingIgnoredDuringExecution node affinity is applied to the respective pod. The result is that the pod will target nodes that are labeled with the following key/value: node-restriction.kubernetes.io/tenant: tenants-x . ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : node-restriction.kubernetes.io/tenant operator : In values : - tenants-x ... With this node affinity, the label is required during scheduling, but not during execution; if the underlying nodes' labels change, the pods will not be evicted due solely to that label change. However, future scheduling could be impacted. Warning The label prefix of node-restriction.kubernetes.io/ has special meaning in Kubernetes. NodeRestriction which is enabled for EKS clusters prevents kubelet from adding/removing/updating labels with this prefix. Attackers aren't able to use the kubelet 's credentials to update the node object or modify the system setup to pass these labels into kubelet as kubelet isn't allowed to modify these labels. If this prefix is used for all pod to node scheduling, it prevents scenarios where an attacker may want to attract a different set of workloads to a node by modifying the node labels. Info Instead of node affinity, we could have used the node selector . However, node affinity is more expressive and allows for more conditions to be considered during pod scheduling. For additional information about the differences and more advanced scheduling choices, please see this CNCF blog post on Advanced Kubernetes pod to node scheduling . Part 2 - Taints and tolerations \u00b6 Attracting pods to nodes is just the first part of this three-part approach. For this approach to work, we must repel pods from scheduling onto nodes for which the pods are not authorized. To repel unwanted or unauthorized pods, Kubernetes uses node taints . Taints are used to place conditions on nodes that prevent pods from being scheduled. The below taint uses a key-value pair of tenant: tenants-x . ... taints : - key : tenant value : tenants-x effect : NoSchedule ... Given the above node taint , only pods that tolerate the taint will be allowed to be scheduled on the node. To allow authorized pods to be scheduled onto the node, the respective pod specifications must include a toleration to the taint, as seen below. ... tolerations : - effect : NoSchedule key : tenant operator : Equal value : tenants-x ... Pods with the above toleration will not be stopped from scheduling on the node, at least not because of that specific taint. Taints are also used by Kubernetes to temporarily stop pod scheduling during certain conditions, like node resource pressure. With node affinity, and taints and tolerations, we can effectively attract the desired pods to specific nodes and repel unwanted pods. Attention Certain Kubernetes pods are required to run on all nodes. Examples of these pods are those started by the Container Network Interface (CNI) and kube-proxy daemonsets . To that end, the specifications for these pods contain very permissive tolerations, to tolerate different taints. Care should be taken to not change these tolerations. Changing these tolerations could result in incorrect cluster operation. Additionally, policy-management tools, such as OPA/Gatekeeper and Kyverno can be used to write validating policies that prevent unauthorized pods from using these permissive tolerations. Part 3 - Policy-based management for node selection \u00b6 There are several tools that can be used to help manage the node affinity and tolerations of pod specifications, including enforcement of rules in CICD pipelines. However, enforcement of isolation should also be done at the Kubernetes cluster level. For this purpose, policy-management tools can be used to mutate inbound Kubernetes API server requests, based on request payloads, to apply the respective node affinity rules and tolerations mentioned above. For example, pods destined for the tenants-x namespace can be stamped with the correct node affinity and toleration to permit scheduling on the tenants-x nodes. Utilizing policy-management tools configured using the Kubernetes Mutating Admission Webhook , policies can be used to mutate the inbound pod specifications. The mutations add the needed elements to allow desired scheduling. An example OPA/Gatekeeper policy that adds a node affinity is seen below. apiVersion : mutations.gatekeeper.sh/v1alpha1 kind : Assign metadata : name : mutator-add-nodeaffinity-pod annotations : aws-eks-best-practices/description : >- Adds Node affinity - https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity spec : applyTo : - groups : [ \"\" ] kinds : [ \"Pod\" ] versions : [ \"v1\" ] match : namespaces : [ \"tenants-x\" ] location : \"spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms\" parameters : assign : value : - matchExpressions : - key : \"tenant\" operator : In values : - \"tenants-x\" The above policy is applied to a Kubernetes API server request, to apply a pod to the tenants-x namespace. The policy adds the requiredDuringSchedulingIgnoredDuringExecution node affinity rule, so that pods are attracted to nodes with the tenant: tenants-x label. A second policy, seen below, adds the toleration to the same pod specification, using the same matching criteria of target namespace and groups, kinds, and versions. apiVersion : mutations.gatekeeper.sh/v1alpha1 kind : Assign metadata : name : mutator-add-toleration-pod annotations : aws-eks-best-practices/description : >- Adds toleration - https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ spec : applyTo : - groups : [ \"\" ] kinds : [ \"Pod\" ] versions : [ \"v1\" ] match : namespaces : [ \"tenants-x\" ] location : \"spec.tolerations\" parameters : assign : value : - key : \"tenant\" operator : \"Equal\" value : \"tenants-x\" effect : \"NoSchedule\" The above policies are specific to pods; this is due to the paths to the mutated elements in the policies' location elements. Additional policies could be written to handle resources that create pods, like Deployment and Job resources. The listed policies and other examples can been seen in the companion GitHub project for this guide. The result of these two mutations is that pods are attracted to the desired node, while at the same time, not repelled by the specific node taint. To verify this, we can see the snippets of output from two kubectl calls to get the nodes labeled with tenant=tenants-x , and get the pods in the tenants-x namespace. kubectl get nodes -l tenant = tenants-x NAME ip-10-0-11-255... ip-10-0-28-81... ip-10-0-43-107... kubectl -n tenants-x get pods -owide NAME READY STATUS RESTARTS AGE IP NODE tenant-test-deploy-58b895ff87-2q7xw 1 /1 Running 0 13s 10 .0.42.143 ip-10-0-43-107... tenant-test-deploy-58b895ff87-9b6hg 1 /1 Running 0 13s 10 .0.18.145 ip-10-0-28-81... tenant-test-deploy-58b895ff87-nxvw5 1 /1 Running 0 13s 10 .0.30.117 ip-10-0-28-81... tenant-test-deploy-58b895ff87-vw796 1 /1 Running 0 13s 10 .0.3.113 ip-10-0-11-255... tenant-test-pod 1 /1 Running 0 13s 10 .0.35.83 ip-10-0-43-107... As we can see from the above outputs, all the pods are scheduled on the nodes labeled with tenant=tenants-x . Simply put, the pods will only run on the desired nodes, and the other pods (without the required affinity and tolerations) will not. The tenant workloads are effectively isolated. An example mutated pod specification is seen below. apiVersion : v1 kind : Pod metadata : name : tenant-test-pod namespace : tenants-x spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : tenant operator : In values : - tenants-x ... tolerations : - effect : NoSchedule key : tenant operator : Equal value : tenants-x ... Attention Policy-management tools that are integrated to the Kubernetes API server request flow, using mutating and validating admission webhooks, are designed to respond to the API server's request within a specified timeframe. This is usually 3 seconds or less. If the webhook call fails to return a response within the configured time, the mutation and/or validation of the inbound API sever request may or may not occur. This behavior is based on whether the admission webhook configurations are set to Fail Open or Fail Close . In the above examples, we used policies written for OPA/Gatekeeper. However, there are other policy management tools that handle our node-selection use case as well. For example, this Kyverno policy could be used to handle the node affinity mutation. Tip If operating correctly, mutating policies will effect the desired changes to inbound API server request payloads. However, validating policies should also be included to verify that the desired changes occur, before changes are allowed to persist. This is especially important when using these policies for tenant-to-node isolation. It is also a good idea to include Audit policies to routinely check your cluster for unwanted configurations. References \u00b6 k-rail Designed to help you secure a multi-tenant environment through the enforcement of certain policies. Security Practices for MultiTenant SaaS Applications using Amazon EKS Hard multi-tenancy \u00b6 Hard multi-tenancy can be implemented by provisioning separate clusters for each tenant. While this provides very strong isolation between tenants, it has several drawbacks. First, when you have many tenants, this approach can quickly become expensive. Not only will you have to pay for the control plane costs for each cluster, you will not be able to share compute resources between clusters. This will eventually cause fragmentation where a subset of your clusters are underutilized while others are overutilized. Second, you will likely need to buy or build special tooling to manage all of these clusters. In time, managing hundreds or thousands of clusters may simply become too unwieldy. Finally, creating a cluster per tenant will be slow relative to a creating a namespace. Nevertheless, a hard-tenancy approach may be necessary in highly-regulated industries or in SaaS environments where strong isolation is required. Future directions \u00b6 The Kubernetes community has recognized the current shortcomings of soft multi-tenancy and the challenges with hard multi-tenancy. The Multi-Tenancy Special Interest Group (SIG) is attempting to address these shortcomings through several incubation projects, including Hierarchical Namespace Controller (HNC) and Virtual Cluster. The HNC proposal (KEP) describes a way to create parent-child relationships between namespaces with [policy] object inheritance along with an ability for tenant administrators to create sub-namespaces. The Virtual Cluster proposal describes a mechanism for creating separate instances of the control plane services, including the API server, the controller manager, and scheduler, for each tenant within the cluster (also known as \"Kubernetes on Kubernetes\"). The Multi-Tenancy Benchmarks proposal provides guidelines for sharing clusters using namespaces for isolation and segmentation, and a command line tool kubectl-mtb to validate conformance to the guidelines. Multi-cluster management resources \u00b6 Banzai Cloud Kommander Lens Nirmata Rafay Rancher Weave Flux","title":"Multi-tenancy ({'name': 'English', 'build': True})"},{"location":"security/docs/multitenancy/#tenant-isolation","text":"When we think of multi-tenancy, we often want to isolate a user or application from other users or applications running on a shared infrastructure. Kubernetes is a single tenant orchestrator , i.e. a single instance of the control plane is shared among all the tenants within a cluster. There are, however, various Kubernetes objects that you can use to create the semblance of multi-tenancy. For example, Namespaces and Role-based access controls (RBAC) can be implemented to logically isolate tenants from each other. Similarly, Quotas and Limit Ranges can be used to control the amount of cluster resources each tenant can consume. Nevertheless, the cluster is the only construct that provides a strong security boundary. This is because an attacker that manages to gain access to a host within the cluster can retrieve all Secrets, ConfigMaps, and Volumes, mounted on that host. They could also impersonate the Kubelet which would allow them to manipulate the attributes of the node and/or move laterally within the cluster. The following sections will explain how to implement tenant isolation while mitigating the risks of using a single tenant orchestrator like Kubernetes.","title":"Tenant Isolation"},{"location":"security/docs/multitenancy/#soft-multi-tenancy","text":"With soft multi-tenancy, you use native Kubernetes constructs, e.g. namespaces, roles and role bindings, and network policies, to create logical separation between tenants. RBAC, for example, can prevent tenants from accessing or manipulate each other's resources. Quotas and limit ranges control the amount of cluster resources each tenant can consume while network policies can help prevent applications deployed into different namespaces from communicating with each other. None of these controls, however, prevent pods from different tenants from sharing a node. If stronger isolation is required, you can use a node selector, anti-affinity rules, and/or taints and tolerations to force pods from different tenants to be scheduled onto separate nodes; often referred to as sole tenant nodes . This could get rather complicated, and cost prohibitive, in an environment with many tenants. Attention Soft multi-tenancy implemented with Namespaces does not allow you to provide tenants with a filtered list of Namespaces because Namespaces are a globally scoped Type. If a tenant has the ability to view a particular Namespace, it can view all Namespaces within the cluster. Warning With soft-multi-tenancy, tenants retain the ability to query CoreDNS for all services that run within the cluster by default. An attacker could exploit this by running dig SRV . .svc.cluster.local from any pod in the cluster. If you need to restrict access to DNS records of services that run within your clusters, consider using the Firewall or Policy plugins for CoreDNS. For additional information, see https://github.com/coredns/policy#kubernetes-metadata-multi-tenancy-policy . Kiosk is an open source project that can aid in the implementation of soft multi-tenancy. It is implemented as a series of CRDs and controllers that provide the following capabilities: Accounts & Account Users to separate tenants in a shared Kubernetes cluster Self-Service Namespace Provisioning for account users Account Limits to ensure quality of service and fairness when sharing a cluster Namespace Templates for secure tenant isolation and self-service namespace initialization Loft is a commercial offering from the maintainers of Kiosk and DevSpace that adds the following capabilities: Multi-cluster access for granting access to spaces in different clusters Sleep mode scales down deployments in a space during periods of inactivity Single sign-on with OIDC authentication providers like GitHub There are three primary use cases that can be addressed by soft multi-tenancy.","title":"Soft multi-tenancy"},{"location":"security/docs/multitenancy/#enterprise-setting","text":"The first is in an Enterprise setting where the \"tenants\" are semi-trusted in that they are employees, contractors, or are otherwise authorized by the organization. Each tenant will typically align to an administrative division such as a department or team. In this type of setting, a cluster administrator will usually be responsible for creating namespaces and managing policies. They may also implement a delegated administration model where certain individuals are given oversight of a namespace, allowing them to perform CRUD operations for non-policy related objects like deployments, services, pods, jobs, etc. The isolation provided by a container runtime may be acceptable within this setting or it may need to be augmented with additional controls for pod security. It may also be necessary to restrict communication between services in different namespaces if stricter isolation is required.","title":"Enterprise Setting"},{"location":"security/docs/multitenancy/#kubernetes-as-a-service","text":"By contrast, soft multi-tenancy can be used in settings where you want to offer Kubernetes as a service (KaaS). With KaaS, your application is hosted in a shared cluster along with a collection of controllers and CRDs that provide a set of PaaS services. Tenants interact directly with the Kubernetes API server and are permitted to perform CRUD operations on non-policy objects. There is also an element of self-service in that tenants may be allowed to create and manage their own namespaces. In this type of environment, tenants are assumed to be running untrusted code. To isolate tenants in this type of environment, you will likely need to implement strict network policies as well as pod sandboxing . Sandboxing is where you run the containers of a pod inside a micro VM like Firecracker or in a user-space kernel. Today, you can create sandboxed pods with EKS Fargate.","title":"Kubernetes as a Service"},{"location":"security/docs/multitenancy/#software-as-a-service-saas","text":"The final use case for soft multi-tenancy is in a Software-as-a-Service (SaaS) setting. In this environment, each tenant is associated with a particular instance of an application that's running within the cluster. Each instance often has its own data and uses separate access controls that are usually independent of Kubernetes RBAC. Unlike the other use cases, the tenant in a SaaS setting does not directly interface with the Kubernetes API. Instead, the SaaS application is responsible for interfacing with the Kubernetes API to create the necessary objects to support each tenant.","title":"Software as a Service (SaaS)"},{"location":"security/docs/multitenancy/#kubernetes-constructs","text":"In each of these instances the following constructs are used to isolate tenants from each other:","title":"Kubernetes Constructs"},{"location":"security/docs/multitenancy/#namespaces","text":"Namespaces are fundamental to implementing soft multi-tenancy. They allow you to divide the cluster into logical partitions. Quotas, network policies, service accounts, and other objects needed to implement multi-tenancy are scoped to a namespace.","title":"Namespaces"},{"location":"security/docs/multitenancy/#network-policies","text":"By default, all pods in a Kubernetes cluster are allowed to communicate with each other. This behavior can be altered using network policies. Network policies restrict communication between pods using labels or IP address ranges. In a multi-tenant environment where strict network isolation between tenants is required, we recommend starting with a default rule that denies communication between pods, and another rule that allows all pods to query the DNS server for name resolution. With that in place, you can begin adding more permissive rules that allow for communication within a namespace. This can be further refined as required. Attention Network policies are necessary but not sufficient. The enforcement of network policies requires a policy engine such as Calico or Cilium.","title":"Network policies"},{"location":"security/docs/multitenancy/#role-based-access-control-rbac","text":"Roles and role bindings are the Kubernetes objects used to enforce role-based access control (RBAC) in Kubernetes. Roles contain lists of actions that can be performed against objects in your cluster. Role bindings specify the individuals or groups to whom the roles apply. In the enterprise and KaaS settings, RBAC can be used to permit administration of objects by selected groups or individuals.","title":"Role-based access control (RBAC)"},{"location":"security/docs/multitenancy/#quotas","text":"Quotas are used to define limits on workloads hosted in your cluster. With quotas, you can specify the maximum amount of CPU and memory that a pod can consume, or you can limit the number of resources that can be allocated in a cluster or namespace. Limit ranges allow you to declare minimum, maximum, and default values for each limit. Overcommitting resources in a shared cluster is often beneficial because it allows you maximize your resources. However, unbounded access to a cluster can cause resource starvation, which can lead to performance degradation and loss of application availability. If a pod's requests are set too low and the actual resource utilization exceeds the capacity of the node, the node will begin to experience CPU or memory pressure. When this happens, pods may be restarted and/or evicted from the node. To prevent this from happening, you should plan to impose quotas on namespaces in a multi-tenant environment to force tenants to specify requests and limits when scheduling their pods on the cluster. It will also mitigate a potential denial of service by constraining the amount of resources a pod can consume. You can also use quotas to apportion the cluster's resources to align with a tenant's spend. This is particularly useful in the KaaS scenario.","title":"Quotas"},{"location":"security/docs/multitenancy/#pod-priority-and-preemption","text":"Pod priority and preemption can be useful when you want to provide more importance to a Pod relative to other Pods. For example, with pod priority you can configure pods from customer A to run at a higher priority than customer B. When there's insufficient capacity available, the scheduler will evict the lower-priority pods from customer B to accommodate the higher-priority pods from customer A. This can be especially handy in a SaaS environment where customers willing to pay a premium receive a higher priority. Attention Pods priority can have an undesired effect on other Pods with lower priority. For example, although the victim pods are terminated gracefully but the PodDisruptionBudget is not guaranteed, which could break a application with lower priority that relies on a quorum of Pods, see Limitations of preemption .","title":"Pod priority and preemption"},{"location":"security/docs/multitenancy/#mitigating-controls","text":"Your chief concern as an administrator of a multi-tenant environment is preventing an attacker from gaining access to the underlying host. The following controls should be considered to mitigate this risk:","title":"Mitigating controls"},{"location":"security/docs/multitenancy/#sandboxed-execution-environments-for-containers","text":"Sandboxing is a technique by which each container is run in its own isolated virtual machine. Technologies that perform pod sandboxing include Firecracker and Weave's Firekube . For additional information about the effort to make Firecracker a supported runtime for EKS, see https://threadreaderapp.com/thread/1238496944684597248.html .","title":"Sandboxed execution environments for containers"},{"location":"security/docs/multitenancy/#open-policy-agent-opa-gatekeeper","text":"Gatekeeper is a Kubernetes admission controller that enforces policies created with OPA . With OPA you can create a policy that runs pods from tenants on separate instances or at a higher priority than other tenants. A collection of common OPA policies can be found in the GitHub repository for this project. There is also an experimental OPA plugin for CoreDNS that allows you to use OPA to filter/control the records returned by CoreDNS.","title":"Open Policy Agent (OPA) &amp; Gatekeeper"},{"location":"security/docs/multitenancy/#kyverno","text":"Kyverno is a Kubernetes native policy engine that can validate, mutate, and generate configurations with policies as Kubernetes resources. Kyverno uses Kustomize-style overlays for validation, supports JSON Patch and strategic merge patch for mutation, and can clone resources across namespaces based on flexible triggers. You can use Kyverno to isolate namespaces, enforce pod security and other best practices, and generate default configurations such as network policies. Several examples are included in the GitHub repository for this project. Many others are included in the policy library on the Kyverno website.","title":"Kyverno"},{"location":"security/docs/multitenancy/#isolating-tenant-workloads-to-specific-nodes","text":"Restricting tenant workloads to run on specific nodes can be used to increase isolation in the soft multi-tenancy model. With this approach, tenant-specific workloads are only run on nodes provisioned for the respective tenants. To achieve this isolation, native Kubernetes properties (node affinity, and taints and tolerations) are used to target specific nodes for pod scheduling, and prevent pods, from other tenants, from being scheduled on the tenant-specific nodes.","title":"Isolating tenant workloads to specific nodes"},{"location":"security/docs/multitenancy/#part-1-node-affinity","text":"Kubernetes node affinity is used to target nodes for scheduling, based on node labels . With node affinity rules, the pods are attracted to specific nodes that match the selector terms. In the below pod specification, the requiredDuringSchedulingIgnoredDuringExecution node affinity is applied to the respective pod. The result is that the pod will target nodes that are labeled with the following key/value: node-restriction.kubernetes.io/tenant: tenants-x . ... spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : node-restriction.kubernetes.io/tenant operator : In values : - tenants-x ... With this node affinity, the label is required during scheduling, but not during execution; if the underlying nodes' labels change, the pods will not be evicted due solely to that label change. However, future scheduling could be impacted. Warning The label prefix of node-restriction.kubernetes.io/ has special meaning in Kubernetes. NodeRestriction which is enabled for EKS clusters prevents kubelet from adding/removing/updating labels with this prefix. Attackers aren't able to use the kubelet 's credentials to update the node object or modify the system setup to pass these labels into kubelet as kubelet isn't allowed to modify these labels. If this prefix is used for all pod to node scheduling, it prevents scenarios where an attacker may want to attract a different set of workloads to a node by modifying the node labels. Info Instead of node affinity, we could have used the node selector . However, node affinity is more expressive and allows for more conditions to be considered during pod scheduling. For additional information about the differences and more advanced scheduling choices, please see this CNCF blog post on Advanced Kubernetes pod to node scheduling .","title":"Part 1 - Node affinity"},{"location":"security/docs/multitenancy/#part-2-taints-and-tolerations","text":"Attracting pods to nodes is just the first part of this three-part approach. For this approach to work, we must repel pods from scheduling onto nodes for which the pods are not authorized. To repel unwanted or unauthorized pods, Kubernetes uses node taints . Taints are used to place conditions on nodes that prevent pods from being scheduled. The below taint uses a key-value pair of tenant: tenants-x . ... taints : - key : tenant value : tenants-x effect : NoSchedule ... Given the above node taint , only pods that tolerate the taint will be allowed to be scheduled on the node. To allow authorized pods to be scheduled onto the node, the respective pod specifications must include a toleration to the taint, as seen below. ... tolerations : - effect : NoSchedule key : tenant operator : Equal value : tenants-x ... Pods with the above toleration will not be stopped from scheduling on the node, at least not because of that specific taint. Taints are also used by Kubernetes to temporarily stop pod scheduling during certain conditions, like node resource pressure. With node affinity, and taints and tolerations, we can effectively attract the desired pods to specific nodes and repel unwanted pods. Attention Certain Kubernetes pods are required to run on all nodes. Examples of these pods are those started by the Container Network Interface (CNI) and kube-proxy daemonsets . To that end, the specifications for these pods contain very permissive tolerations, to tolerate different taints. Care should be taken to not change these tolerations. Changing these tolerations could result in incorrect cluster operation. Additionally, policy-management tools, such as OPA/Gatekeeper and Kyverno can be used to write validating policies that prevent unauthorized pods from using these permissive tolerations.","title":"Part 2 - Taints and tolerations"},{"location":"security/docs/multitenancy/#part-3-policy-based-management-for-node-selection","text":"There are several tools that can be used to help manage the node affinity and tolerations of pod specifications, including enforcement of rules in CICD pipelines. However, enforcement of isolation should also be done at the Kubernetes cluster level. For this purpose, policy-management tools can be used to mutate inbound Kubernetes API server requests, based on request payloads, to apply the respective node affinity rules and tolerations mentioned above. For example, pods destined for the tenants-x namespace can be stamped with the correct node affinity and toleration to permit scheduling on the tenants-x nodes. Utilizing policy-management tools configured using the Kubernetes Mutating Admission Webhook , policies can be used to mutate the inbound pod specifications. The mutations add the needed elements to allow desired scheduling. An example OPA/Gatekeeper policy that adds a node affinity is seen below. apiVersion : mutations.gatekeeper.sh/v1alpha1 kind : Assign metadata : name : mutator-add-nodeaffinity-pod annotations : aws-eks-best-practices/description : >- Adds Node affinity - https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity spec : applyTo : - groups : [ \"\" ] kinds : [ \"Pod\" ] versions : [ \"v1\" ] match : namespaces : [ \"tenants-x\" ] location : \"spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms\" parameters : assign : value : - matchExpressions : - key : \"tenant\" operator : In values : - \"tenants-x\" The above policy is applied to a Kubernetes API server request, to apply a pod to the tenants-x namespace. The policy adds the requiredDuringSchedulingIgnoredDuringExecution node affinity rule, so that pods are attracted to nodes with the tenant: tenants-x label. A second policy, seen below, adds the toleration to the same pod specification, using the same matching criteria of target namespace and groups, kinds, and versions. apiVersion : mutations.gatekeeper.sh/v1alpha1 kind : Assign metadata : name : mutator-add-toleration-pod annotations : aws-eks-best-practices/description : >- Adds toleration - https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ spec : applyTo : - groups : [ \"\" ] kinds : [ \"Pod\" ] versions : [ \"v1\" ] match : namespaces : [ \"tenants-x\" ] location : \"spec.tolerations\" parameters : assign : value : - key : \"tenant\" operator : \"Equal\" value : \"tenants-x\" effect : \"NoSchedule\" The above policies are specific to pods; this is due to the paths to the mutated elements in the policies' location elements. Additional policies could be written to handle resources that create pods, like Deployment and Job resources. The listed policies and other examples can been seen in the companion GitHub project for this guide. The result of these two mutations is that pods are attracted to the desired node, while at the same time, not repelled by the specific node taint. To verify this, we can see the snippets of output from two kubectl calls to get the nodes labeled with tenant=tenants-x , and get the pods in the tenants-x namespace. kubectl get nodes -l tenant = tenants-x NAME ip-10-0-11-255... ip-10-0-28-81... ip-10-0-43-107... kubectl -n tenants-x get pods -owide NAME READY STATUS RESTARTS AGE IP NODE tenant-test-deploy-58b895ff87-2q7xw 1 /1 Running 0 13s 10 .0.42.143 ip-10-0-43-107... tenant-test-deploy-58b895ff87-9b6hg 1 /1 Running 0 13s 10 .0.18.145 ip-10-0-28-81... tenant-test-deploy-58b895ff87-nxvw5 1 /1 Running 0 13s 10 .0.30.117 ip-10-0-28-81... tenant-test-deploy-58b895ff87-vw796 1 /1 Running 0 13s 10 .0.3.113 ip-10-0-11-255... tenant-test-pod 1 /1 Running 0 13s 10 .0.35.83 ip-10-0-43-107... As we can see from the above outputs, all the pods are scheduled on the nodes labeled with tenant=tenants-x . Simply put, the pods will only run on the desired nodes, and the other pods (without the required affinity and tolerations) will not. The tenant workloads are effectively isolated. An example mutated pod specification is seen below. apiVersion : v1 kind : Pod metadata : name : tenant-test-pod namespace : tenants-x spec : affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : tenant operator : In values : - tenants-x ... tolerations : - effect : NoSchedule key : tenant operator : Equal value : tenants-x ... Attention Policy-management tools that are integrated to the Kubernetes API server request flow, using mutating and validating admission webhooks, are designed to respond to the API server's request within a specified timeframe. This is usually 3 seconds or less. If the webhook call fails to return a response within the configured time, the mutation and/or validation of the inbound API sever request may or may not occur. This behavior is based on whether the admission webhook configurations are set to Fail Open or Fail Close . In the above examples, we used policies written for OPA/Gatekeeper. However, there are other policy management tools that handle our node-selection use case as well. For example, this Kyverno policy could be used to handle the node affinity mutation. Tip If operating correctly, mutating policies will effect the desired changes to inbound API server request payloads. However, validating policies should also be included to verify that the desired changes occur, before changes are allowed to persist. This is especially important when using these policies for tenant-to-node isolation. It is also a good idea to include Audit policies to routinely check your cluster for unwanted configurations.","title":"Part 3 - Policy-based management for node selection"},{"location":"security/docs/multitenancy/#references","text":"k-rail Designed to help you secure a multi-tenant environment through the enforcement of certain policies. Security Practices for MultiTenant SaaS Applications using Amazon EKS","title":"References"},{"location":"security/docs/multitenancy/#hard-multi-tenancy","text":"Hard multi-tenancy can be implemented by provisioning separate clusters for each tenant. While this provides very strong isolation between tenants, it has several drawbacks. First, when you have many tenants, this approach can quickly become expensive. Not only will you have to pay for the control plane costs for each cluster, you will not be able to share compute resources between clusters. This will eventually cause fragmentation where a subset of your clusters are underutilized while others are overutilized. Second, you will likely need to buy or build special tooling to manage all of these clusters. In time, managing hundreds or thousands of clusters may simply become too unwieldy. Finally, creating a cluster per tenant will be slow relative to a creating a namespace. Nevertheless, a hard-tenancy approach may be necessary in highly-regulated industries or in SaaS environments where strong isolation is required.","title":"Hard multi-tenancy"},{"location":"security/docs/multitenancy/#future-directions","text":"The Kubernetes community has recognized the current shortcomings of soft multi-tenancy and the challenges with hard multi-tenancy. The Multi-Tenancy Special Interest Group (SIG) is attempting to address these shortcomings through several incubation projects, including Hierarchical Namespace Controller (HNC) and Virtual Cluster. The HNC proposal (KEP) describes a way to create parent-child relationships between namespaces with [policy] object inheritance along with an ability for tenant administrators to create sub-namespaces. The Virtual Cluster proposal describes a mechanism for creating separate instances of the control plane services, including the API server, the controller manager, and scheduler, for each tenant within the cluster (also known as \"Kubernetes on Kubernetes\"). The Multi-Tenancy Benchmarks proposal provides guidelines for sharing clusters using namespaces for isolation and segmentation, and a command line tool kubectl-mtb to validate conformance to the guidelines.","title":"Future directions"},{"location":"security/docs/multitenancy/#multi-cluster-management-resources","text":"Banzai Cloud Kommander Lens Nirmata Rafay Rancher Weave Flux","title":"Multi-cluster management resources"},{"location":"security/docs/network.kr/","text":"{'name': 'English', 'build': True} \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \u00b6 \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548\uc5d0\ub294 \uc5ec\ub7ec \uce21\uba74\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uccab \ubc88\uc9f8\ub294 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc81c\ud55c\ud558\ub294 \uaddc\uce59 \uc801\uc6a9\uacfc \uad00\ub828\ub429\ub2c8\ub2e4. \ub450 \ubc88\uc9f8\ub294 \uc804\uc1a1 \uc911\uc778 \ud2b8\ub798\ud53d\uc758 \uc554\ud638\ud654\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c \uc774\ub7ec\ud55c \ubcf4\uc548 \uc870\uce58\ub97c \uad6c\ud604\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc740 \ub2e4\uc591\ud558\uc9c0\ub9cc \uc885\uc885 \ub2e4\uc74c \ud56d\ubaa9\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \uad50\ud1b5 \ud1b5\uc81c \u00b6 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubcf4\uc548 \uadf8\ub8f9 \uc804\uc1a1 \uc911 \uc554\ud638\ud654 \u00b6 \uc11c\ube44\uc2a4 \uba54\uc2dc \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI) \ub2c8\ud2b8\ub85c \uc778\uc2a4\ud134\uc2a4 cert-manager\uac00 \uc788\ub294 ACM \uc0ac\uc124 CA \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \u00b6 Kubernetes \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \ubaa8\ub4e0 \ud3ec\ub4dc \uac04 \ud1b5\uc2e0\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 \uc2e4\ud5d8\uc744 \ucd09\uc9c4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc9c0\ub9cc \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 Pod \uac04(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0 \ud568) \ubc0f Pod\uc640 \uc678\ubd80 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 OSI \ubaa8\ub378\uc758 \uacc4\uce35 3\uacfc 4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ud31f \uc120\ud0dd\uae30 \ubc0f \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4 \ubc0f \ub300\uc0c1 \ud31f\uc744 \uc2dd\ubcc4\ud558\uc9c0\ub9cc IP \uc8fc\uc18c, \ud3ec\ud2b8 \ubc88\ud638, \ud504\ub85c\ud1a0\ucf5c \ubc88\ud638 \ub610\ub294 \uc774\ub4e4\uc758 \uc870\ud569\uc744 \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Calico \ub294 EKS\uc640 \uc798 \uc791\ub3d9\ud558\ub294 Tigera \uc758 \uc624\ud508 \uc18c\uc2a4 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4 . \uc804\uccb4 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uae30\ub2a5 \uc138\ud2b8\ub97c \uad6c\ud604\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 Calico\ub294 Istio\uc640 \ud1b5\ud569\ub420 \ub54c HTTP\uc640 \uac19\uc740 \uacc4\uce35 7 \uaddc\uce59 \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\uc5ec \ub354 \ud48d\ubd80\ud55c \uae30\ub2a5 \uc138\ud2b8\ub85c \ud655\uc7a5\ub41c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Isovalent, Cilium \uc758 \uad00\ub9ac\uc790\ub294 HTTP\uc640 \uac19\uc740 \uacc4\uce35 7 \uaddc\uce59\uc5d0 \ub300\ud55c \ubd80\ubd84 \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\ub3c4\ub85d \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \ud655\uc7a5\ud588\uc2b5\ub2c8\ub2e4. Cilium\uc740 \ub610\ud55c Kubernetes Services/Pod\uc640 VPC \ub0b4\ubd80 \ub610\ub294 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub9ac\uc18c\uc2a4 \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub294 DNS \ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c Calico Enterprise\uc5d0\ub294 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 AWS \ubcf4\uc548 \uadf8\ub8f9\uacfc DNS \ud638\uc2a4\ud2b8 \uc774\ub984\uc5d0 \ub9e4\ud551\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ucc98\uc74c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c Calico \uc815\ucc45 \uc5d4\uc9c4\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Calico \uc124\uce58\ub97c \uc704\ud55c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 VPC CNI \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac( https://github.com/aws/amazon-vpc-cni-k8s/tree/master/config \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. amazon-vpc-cni-k8s/tree/master/config ). Calico \uc815\ucc45\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4, \ud3ec\ub4dc, \uc11c\ube44\uc2a4 \uacc4\uc815 \ub610\ub294 \uc804\uc5ed\uc73c\ub85c \ubc94\uc704\uac00 \uc9c0\uc815\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ucc45 \ubc94\uc704\uac00 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \uc9c0\uc815\ub418\uba74 \uc218\uc2e0/\ubc1c\uc2e0 \uaddc\uce59 \uc9d1\ud569\uc744 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c RBAC \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud300\uc774 \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \uc7ac\uc815\uc758\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\uc5ec IT \ubcf4\uc548 \uc804\ubb38\uac00\uac00 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uad00\ub9ac\ub97c \uc548\uc804\ud558\uac8c \uc704\uc784\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubaa9\ub85d\uc740 https://github.com/ahmetb/kubernetes-network-policy-recipes \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico\uc5d0 \ub300\ud55c \uc720\uc0ac\ud55c \uaddc\uce59 \uc138\ud2b8\ub294 https://docs.projectcalico.org/security/calico-network-policy \uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 \uae30\ubcf8 \uac70\ubd80 \uc815\ucc45 \ub9cc\ub4e4\uae30 \u00b6 RBAC \uc815\ucc45\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc815\ucc45\uc744 \uc900\uc218\ud574\uc57c \ud569\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub85c\ubd80\ud130\uc758 \ubaa8\ub4e0 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \ubaa8\ub450 \uac70\ubd80 \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc5ec \uc2dc\uc791\ud558\uac70\ub098 Calico\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae00\ub85c\ubc8c \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : {} \uc815\ucc45 \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4 \ud301 \uc704 \uc774\ubbf8\uc9c0\ub294 Tufin \uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubdf0\uc5b4\ub85c \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Calico \uae00\ub85c\ubc8c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : GlobalNetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \uc0ac\uc591 : \uc120\ud0dd\uc790 : \ubaa8\ub450() \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4 DNS \ucffc\ub9ac\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59 \ub9cc\ub4e4\uae30 \u00b6 \uae30\ubcf8 \uac70\ubd80 \ubaa8\ub4e0 \uaddc\uce59\uc744 \uc801\uc6a9\ud55c \ud6c4\uc5d0\ub294 \ud3ec\ub4dc\uac00 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 CoreDNS\ub97c \ucffc\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \uc804\uc5ed \uaddc\uce59\uacfc \uac19\uc740 \ucd94\uac00 \uaddc\uce59\uc5d0 \uacc4\uce35\ud654\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uc5ec \uc2dc\uc791\ud569\ub2c8\ub2e4. kubectl \ub808\uc774\ube14 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 kube-system \uc774\ub984=kube-system \uadf8\ub7f0 \ub2e4\uc74c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud5c8\uc6a9-dns-\uc561\uc138\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : {} \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc774\ub984 : kube-system \ud3ec\ud2b8 : - \ud504\ub85c\ud1a0\ucf5c : UDP \ud3ec\ud2b8 : 53 Calico \uae00\ub85c\ubc8c \uc815\ucc45 \ub4f1\uac00\ubb3c apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : GlobalNetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : allow-dns-egress \uc0ac\uc591 : \uc120\ud0dd\uc790 : \ubaa8\ub450() \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc870\uce58 : \ud5c8\uc6a9 \ud504\ub85c\ud1a0\ucf5c : UDP \ubaa9\uc801\uc9c0 : namespaceSelector : \uc774\ub984 == \"kube-\uc2dc\uc2a4\ud15c\" \ud3ec\ud2b8 : - 53 \ub2e4\uc74c\uc740 readonly-sa-group\uacfc \uc5f0\uacb0\ub41c \uc0ac\uc6a9\uc790\uac00 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c my-sa \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud3b8\uc9d1\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\uba74\uc11c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc758 \uc608\uc785\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : ServiceAccount \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ub9c8\uc774\uc0ac \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc774\ub984 : \ub9c8\uc774\uc0ac --- apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : \uc5ed\ud560 \uba54\ud0c0\ub370\uc774\ud130 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc774\ub984 : readonly-sa-role \uaddc\uce59 : # \uc8fc\uccb4\uac00 my-sa\ub77c\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. - api\uadf8\ub8f9 : [ \"\" ] \ub9ac\uc18c\uc2a4 : [ \"\uc11c\ube44\uc2a4 \uacc4\uc815\" ] \ub9ac\uc18c\uc2a4 \uc774\ub984 : [ \"my-sa\" ] \ub3d9\uc0ac : [ \"get\" , \"watch\" , \"list\" ] --- apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : \ub864\ubc14\uc778\ub529 \uba54\ud0c0\ub370\uc774\ud130 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc774\ub984 : readonly-sa-rolebinding # readonly-sa-role\uc744 readonly-sa-group\uc774\ub77c\ub294 RBAC \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub4dc\ud569\ub2c8\ub2e4. \uacfc\ubaa9 : - \uc885\ub958 : \uadf8\ub8f9 \uc774\ub984 : \uc77d\uae30 \uc804\uc6a9-sa-\uadf8\ub8f9 api \uadf8\ub8f9 : rbac.authorization.k8s.io \uc5ed\ud560 \ucc38\uc870 : \uc885\ub958 : \uc5ed\ud560 \uc774\ub984 : readonly-sa-role api \uadf8\ub8f9 : rbac.authorization.k8s.io --- apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : netpol-sa-demo \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 # \ucc38\uc870\ud558\ub294 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc778\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. # my-sa\ub77c\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0ac\uc591 : \uc9c4\uc785 : - \uc870\uce58 : \ud5c8\uc6a9 \ucd9c\ucc98 : \uc11c\ube44\uc2a4 \uacc4\uc815 : \uc120\ud0dd\uae30 : '\uc774\ub984 == \"my-sa\"' \uc120\ud0dd\uc790 : \ubaa8\ub450() \ub124\uc784\uc2a4\ud398\uc774\uc2a4/\ud31f \uac04\uc758 \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc744 \uc810\uc9c4\uc801\uc73c\ub85c \ucd94\uac00 \u00b6 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud3ec\ub4dc\uac00 \uc11c\ub85c \ud1b5\uc2e0\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \uac83\uc73c\ub85c \uc2dc\uc791\ud55c \ub2e4\uc74c \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud3ec\ub4dc \uac04 \ud1b5\uc2e0\uc744 \ucd94\uac00\ub85c \uc81c\ud55c\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uaddc\uce59\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \uba54\ud0c0\ub370\uc774\ud130 \uae30\ub85d \u00b6 AWS VPC \ud750\ub984 \ub85c\uadf8 \ub294 \uc6d0\ubcf8 \ubc0f \ub300\uc0c1 IP \uc8fc\uc18c\uc640 \ud3ec\ud2b8\uc640 \uac19\uc740 VPC\ub97c \ud1b5\ud574 \ud750\ub974\ub294 \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucea1\ucc98\ud569\ub2c8\ub2e4. \uc218\ub77d/\uc0ad\uc81c\ub41c \ud328\ud0b7\uacfc \ud568\uaed8. \uc774 \uc815\ubcf4\ub97c \ubd84\uc11d\ud558\uc5ec Pod\ub97c \ud3ec\ud568\ud558\uc5ec VPC \ub0b4\uc758 \ub9ac\uc18c\uc2a4 \uac04\uc5d0 \uc758\uc2ec\uc2a4\ub7fd\uac70\ub098 \ube44\uc815\uc0c1\uc801\uc778 \ud65c\ub3d9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Pod\uc758 IP \uc8fc\uc18c\ub294 \uad50\uccb4\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 Flow Log\ub9cc\uc73c\ub85c\ub294 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico Enterprise\ub294 \ud31f(Pod) \ub808\uc774\ube14 \ubc0f \uae30\ud0c0 \uba54\ud0c0\ub370\uc774\ud130\ub85c \ud50c\ub85c\uc6b0 \ub85c\uadf8\ub97c \ud655\uc7a5\ud558\uc5ec \ud31f(Pod) \uac04\uc758 \ud2b8\ub798\ud53d \ud50c\ub85c\uc6b0\ub97c \ub354 \uc27d\uac8c \ud574\ub3c5\ud569\ub2c8\ub2e4. AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub85c \uc554\ud638\ud654 \uc0ac\uc6a9 \u00b6 AWS Application Load Balancer (ALB) \ubc0f Network Load Balancer (NLB) \ub458 \ub2e4 \uc804\uc1a1 \uc554\ud638\ud654(SSL \ubc0f TLS)\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ALB\uc5d0 \ub300\ud55c 'alb.ingress.kubernetes.io/certificate-arn' \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud558\uba74 ALB\uc5d0 \ucd94\uac00\ud560 \uc778\uc99d\uc11c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d\uc744 \uc0dd\ub7b5\ud558\uba74 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c AWS Certificate Manager(ACM) \ud638\uc2a4\ud2b8 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc778\uc99d\uc11c. EKS v1.15\ubd80\ud130\ub294 \uc544\ub798 \uc608\uc640 \uac19\uc774 NLB\uc640 \ud568\uaed8 service.beta.kubernetes.io/aws-load-balancer-ssl-cert \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \uc11c\ube44\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ub370\ubaa8 \uc571 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc8fc\uc11d : service.beta.kubernetes.io/aws-load-balancer-type : \"nlb\" service.beta.kubernetes.io/aws-load-balancer-ssl-cert : \"<\uc778\uc99d\uc11c ARN>\" service.beta.kubernetes.io/aws-load-balancer-ssl-ports : \"443\" service.beta.kubernetes.io/aws-load-balancer-backend-protocol : \"http\" \uc0ac\uc591 : \uc720\ud615 : \ub85c\ub4dc\ubc38\ub7f0\uc11c \ud3ec\ud2b8 : - \ud3ec\ud2b8 : 443 \ub300\uc0c1\ud3ec\ud2b8 : 80 \ud504\ub85c\ud1a0\ucf5c : TCP \uc120\ud0dd\uae30 : \uc571 : \ub370\ubaa8 \uc571 --- \uc885\ub958 : \ubc30\ud3ec apiVersion : \uc571/v1 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : nginx \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc0ac\uc591 : \ubcf5\uc81c\ubcf8 : 1 \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \ud15c\ud50c\ub9bf : \uba54\ud0c0\ub370\uc774\ud130 : \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc0ac\uc591 : \uc6a9\uae30 : - \uc774\ub984 : nginx \uc774\ubbf8\uc9c0 : nginx \ud3ec\ud2b8 : - \ucee8\ud14c\uc774\ub108 \ud3ec\ud2b8 : 443 \ud504\ub85c\ud1a0\ucf5c : TCP - \ucee8\ud14c\uc774\ub108\ud3ec\ud2b8 : 80 \ud504\ub85c\ud1a0\ucf5c : TCP \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 Kubernetes & Tigera: \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45, \ubcf4\uc548 \ubc0f \uac10\uc0ac Calico Enterprise \uc12c\ubaa8 NetworkPolicy Editor Cilium\uc758 \ub300\ud654\ud615 \uc815\ucc45 \ud3b8\uc9d1\uae30 Kinvolk\uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5b4\ub4dc\ubc14\uc774\uc800 \ubd84\uc11d\uc744 \uae30\ubc18\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc81c\uc548 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \ubcf4\uc548 \uadf8\ub8f9 \u00b6 EKS\ub294 AWS VPC \ubcf4\uc548 \uadf8\ub8f9 (SG)\uc744 \uc0ac\uc6a9\ud558\uc5ec Kubernetes \uc81c\uc5b4 \ud50c\ub808\uc778\uacfc \ud074\ub7ec\uc2a4\ud130\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc791\uc5c5\uc790 \ub178\ub4dc\uc640 \ub2e4\ub978 VPC \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 IP \uc8fc\uc18c \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130(Kubernetes \ubc84\uc804 1.14-eks.3 \uc774\uc0c1 \ud3ec\ud568)\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774 \ubcf4\uc548 \uadf8\ub8f9\uc740 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc \uac04\uc5d0 \uc790\uc720\ub85c\uc6b4 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub2e8\uc21c\ud654\ub97c \uc704\ud574 \ube44\uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9\uc744 \ud3ec\ud568\ud558\uc5ec \ubaa8\ub4e0 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130 SG\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.14 \ubc0f EKS \ubc84\uc804 eks.3 \uc774\uc804\uc5d0\ub294 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uad6c\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub178\ub4dc \uadf8\ub8f9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \ucd5c\uc18c \ubc0f \uc81c\uc548 \uaddc\uce59\uc740 https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html . _ \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubcf4\uc548 \uadf8\ub8f9_ \uc5d0 \ub300\ud55c \ucd5c\uc18c \uaddc\uce59 \uc740 \uc791\uc5c5\uc790 \ub178\ub4dc SG\uc5d0\uc11c \ud3ec\ud2b8 443 \uc778\ubc14\uc6b4\ub4dc\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uaddc\uce59\uc740 kubelet\uc774 Kubernetes API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc791\uc5c5\uc790 \ub178\ub4dc SG\uc5d0 \ub300\ud55c \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc6a9 \ud3ec\ud2b8 10250\ub3c4 \ud3ec\ud568\ud569\ub2c8\ub2e4. 10250\uc740 kubelet\uc774 \uc218\uc2e0 \ub300\uae30\ud558\ub294 \ud3ec\ud2b8\uc785\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucd5c\uc18c node group \uaddc\uce59\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 SG\uc5d0\uc11c \ud3ec\ud2b8 10250 \uc778\ubc14\uc6b4\ub4dc \ubc0f \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 SG\ub85c \uc544\uc6c3\ubc14\uc6b4\ub4dc 443\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub178\ub4dc \uadf8\ub8f9 \ub0b4\uc758 \ub178\ub4dc \uac04\uc5d0 \uc790\uc720\ub85c\uc6b4 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc640 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4 \uac04\uc758 \ud1b5\uc2e0\uc744 \uc81c\uc5b4\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 . Pod\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 \uae30\uc874 \ubcf4\uc548 \uadf8\ub8f9\uc744 Pod \ubaa8\uc74c\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uacbd\uace0 \ud3ec\ub4dc \uc0dd\uc131 \uc804\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc38\uc870\ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 \uc608\uc57d\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. SecurityGroupPolicy \uac1d\uccb4 \ub97c \uc0dd\uc131\ud558\uace0 PodSelector \ub610\ub294 ServiceAccountSelector \ub97c \uc9c0\uc815 \ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud560\ub2f9\ub418\ub294 \ud3ec\ub4dc\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uc120\ud0dd\uae30\ub97c {} \ub85c \uc124\uc815\ud558\uba74 SecurityGroupPolicy \uc5d0\uc11c \ucc38\uc870\ub418\ub294 SG \ub97c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uace0\ub824 \uc0ac\ud56d \uc744 \uc219\uc9c0 \ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624 . \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad6c\ud604\ud558\uae30 \uc804\uc5d0. \uc911\uc694\ud55c \ud3ec\ub4dc\uc5d0 SG\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubc18\ub4dc\uc2dc \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \ud3ec\ud2b8 53 \uc544\uc6c3\ubc14\uc6b4\ub4dc\ub97c \ud5c8\uc6a9\ud558\ub294 SG\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud3ec\ub4dc \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \ud3ec\ud2b8 53 \uc778\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc218\ub77d\ud558\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubc18\ub4dc\uc2dc \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc911\uc694\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc81c\ud55c \uc740 \ud3ec\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \ub54c \uacc4\uc18d \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \uc911\uc694\ud55c \ud3ec\ub4dc\uc5d0 \uad6c\uc131\ub41c \ubaa8\ub4e0 \ud504\ub85c\ube0c\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9(kubelet)\uc758 \uc778\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \ubc18\ub4dc\uc2dc \uc0dd\uc131 \ud574\uc57c \ud569\ub2c8\ub2e4 . \uacbd\uace0 \ud604\uc7ac kubelet\uc774 SG\uc5d0 \ud560\ub2f9\ub41c \ud3ec\ub4dc\uc640 \ud1b5\uc2e0\ud558\uc9c0 \ubabb\ud558\uac8c \ud558\ub294 \ubc84\uadf8 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \ud574\uacb0 \ubc29\ubc95\uc740 \uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c sudo sysctl net.ipv4.tcp_early_demux=0 \uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 CNI v1.7.3\uc5d0\uc11c \uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. https://github.com/aws/amazon-vpc-cni-k8s/releases/tag/v1.7.3 . \uc911\uc694\ud55c \ud3ec\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 ENI \ud2b8\ub801\ud0b9 \uc774\ub77c\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud3ec\ub4dc\uc758 ENI \ubc00\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4. \ud3ec\ub4dc\uac00 SG\uc5d0 \ud560\ub2f9\ub418\uba74 VPC \ucee8\ud2b8\ub864\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubd84\uae30 ENI\ub97c \ud3ec\ub4dc\uc640 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uc608\uc57d\ub41c \uc2dc\uc810\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd84\uae30 ENI\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 \ud3ec\ub4dc\ub294 \ubcf4\ub958 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub429\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uac00 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ubd84\uae30 ENI \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615/\ud328\ubc00\ub9ac\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html#supported-instance-types \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. \ud3ec\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc815\ucc45 \ub370\ubaac\uc758 \uc624\ubc84\ud5e4\ub4dc \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \ubc0f \uc678\ubd80\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 AWS \uace0\uc720\uc758 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc \ub2e4\ub978 \uc635\uc158\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Cilium \uc815\ucc45 \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud558\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc5d0\uc11c DNS \uc774\ub984\uc744 \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico Enterprise\uc5d0\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 AWS \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ud558\ub294 \uc635\uc158\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Istio\uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uad6c\ud604\ud55c \uacbd\uc6b0 \uc1a1\uc2e0 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc1a1\uc2e0\uc744 \ud2b9\uc815 \uc815\uaddc\ud654\ub41c \ub3c4\uba54\uc778 \ub610\ub294 IP \uc8fc\uc18c\ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Istio\uc758 \uc1a1\uc2e0 \ud2b8\ub798\ud53d \uc81c\uc5b4 \uc5d0 \ub300\ud55c 3 \ubd80\uc791 \uc2dc\ub9ac\uc988\ub97c \uc77d\uc5b4\ubcf4\uc2ed\uc2dc\uc624 . \uc804\uc1a1 \uc911 \uc554\ud638\ud654 \u00b6 PCI, HIPAA \ub610\ub294 \uae30\ud0c0 \uaddc\uc815\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc804\uc1a1 \uc911\uc778 \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ub298\ub0a0 TLS\ub294 \uc720\uc120 \ud2b8\ub798\ud53d\uc744 \uc554\ud638\ud654\ud558\uae30 \uc704\ud55c \uc0ac\uc2e4\uc0c1\uc758 \uc120\ud0dd\uc785\ub2c8\ub2e4. \uc774\uc804 SSL\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c TLS\ub294 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ubcf4\uc548 \ud1b5\uc2e0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. TLS\ub294 \uc138\uc158 \uc2dc\uc791 \uc2dc \ud611\uc0c1\ub418\ub294 \uacf5\uc720 \uc554\ud638\ub97c \uae30\ubc18\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud558\ub294 \ud0a4\uac00 \uc0dd\uc131\ub418\ub294 \ub300\uce6d \uc554\ud638\ud654\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 Kubernetes \ud658\uacbd\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc785\ub2c8\ub2e4. Nitro \uc778\uc2a4\ud134\uc2a4 \u00b6 \ub2e4\uc74c Nitro \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 C5n, G4, I3en, M5dn, M5n, P3dn, R5dn \ubc0f R5n \uac04\uc5d0 \uad50\ud658\ub418\ub294 \ud2b8\ub798\ud53d\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc554\ud638\ud654\ub429\ub2c8\ub2e4. \uc804\uc1a1 \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uac19\uc740 \uc911\uac04 \ud649\uc774 \uc788\ub294 \uacbd\uc6b0 \ud2b8\ub798\ud53d\uc774 \uc554\ud638\ud654\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc804\uc1a1 \uc911 \uc554\ud638\ud654 \ubc0f \ub2e4\uc74c \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 .com/about-aws/whats-new/2019/10/introducing-amazon-ec2-m5n-m5dn-r5n-and-r5dn-instances-featuring-100-gbps-of-network-bandwidth/ ) \ubc1c\ud45c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI) \u00b6 WeaveNet \uc740 \uc2ac\ub9ac\ube0c \ud2b8\ub798\ud53d\uc5d0 NaCl \uc554\ud638\ud654\ub97c \uc0ac\uc6a9\ud558\uace0 \ube60\ub978 \ub370\uc774\ud130 \uacbd\ub85c \ud2b8\ub798\ud53d\uc5d0 IPsec ESP\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc744 \uc790\ub3d9\uc73c\ub85c \uc554\ud638\ud654\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4 \uba54\uc2dc \u00b6 App Mesh, Linkerd v2 \ubc0f Istio\uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\uc1a1 \uc911 \uc554\ud638\ud654\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. AppMesh\ub294 X.509 \uc778\uc99d\uc11c \ub610\ub294 Envoy\uc758 SDS(Secret Discovery Service)\ub85c mTLS \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Linkerd\uc640 Istio\ub294 \ubaa8\ub450 mTLS\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. aws-app-mesh-examples GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub294 X.509 \uc778\uc99d\uc11c \ubc0f SPIRE\ub97c Envoy \ucee8\ud14c\uc774\ub108\uc640 \ud568\uaed8 SDS \uacf5\uae09\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec mTLS\ub97c \uad6c\uc131\ud558\ub294 \uc5f0\uc2b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. : X.509 \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec mTLS \uad6c\uc131 SPIRE(SDS)\ub97c \uc0ac\uc6a9\ud558\uc5ec TLS \uad6c\uc131 \ub610\ud55c App Mesh\ub294 [ AWS Certificate Manager ] ( https ://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html ) (ACM) \ub610\ub294 \uac00\uc0c1 \ub178\ub4dc\uc758 \ub85c\uceec \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc800\uc7a5\ub41c \uc778\uc99d\uc11c. aws-app-mesh-examples GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub294 ACM\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c \ubc0f Envoy \ucee8\ud14c\uc774\ub108\uc640 \ud568\uaed8 \ud328\ud0a4\uc9d5\ub41c \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec TLS\ub97c \uad6c\uc131\ud558\ub294 \uc5f0\uc2b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. : + \ud30c\uc77c \uc81c\uacf5 TLS \uc778\uc99d\uc11c\ub85c TLS \uad6c\uc131 + AWS Certificate Manager\ub85c TLS \uad6c\uc131 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ubc0f \ub85c\ub4dc \ubc38\ub7f0\uc11c \u00b6 \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub294 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 HTTP/S \ud2b8\ub798\ud53d\uc744 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub85c \uc9c0\ub2a5\uc801\uc73c\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc885\uc885 \uc774\ub7ec\ud55c Ingress\ub294 Classic Load Balancer \ub610\ub294 NLB(Network Load Balancer)\uc640 \uac19\uc740 \uacc4\uce35 4 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \uc758\ud574 \uc804\uba74\uc5d0 \ubc30\uce58\ub429\ub2c8\ub2e4. \uc554\ud638\ud654\ub41c \ud2b8\ub798\ud53d\uc740 \ub85c\ub4dc \ubc38\ub7f0\uc11c, \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4 \ub610\ub294 \ud3ec\ub4dc\uc640 \uac19\uc774 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc758 \ub2e4\ub978 \uc704\uce58\uc5d0\uc11c \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SSL \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub294 \ubc29\ubc95\uacfc \uc704\uce58\ub294 \uad81\uadf9\uc801\uc73c\ub85c \uc870\uc9c1\uc758 \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc815\ucc45\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc885\ub2e8 \uac04 \uc554\ud638\ud654\ub97c \uc694\uad6c\ud558\ub294 \uc815\ucc45\uc774 \uc788\ub294 \uacbd\uc6b0 Pod\uc5d0\uc11c \ud2b8\ub798\ud53d\uc744 \ud574\ub3c5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucd08\uae30 \ud578\ub4dc\uc170\uc774\ud06c\ub97c \uc124\uc815\ud558\ub294 \uc8fc\uae30\ub97c \uc18c\ube44\ud574\uc57c \ud558\ubbc0\ub85c Pod\uc5d0 \ucd94\uac00 \ubd80\ub2f4\uc774 \uac00\ud574\uc9d1\ub2c8\ub2e4. \uc804\ubc18\uc801\uc778 SSL/TLS \ucc98\ub9ac\ub294 CPU\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc720\uc5f0\uc131\uc774 \uc788\ub294 \uacbd\uc6b0 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c SSL \uc624\ud504\ub85c\ub4dc\ub97c \uc218\ud589\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub294 SSL/TLS \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. NLB\uc5d0\uc11c SSL/TLS \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc608\ub294 \uc704 \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. SSL/TLS \uc885\ub8cc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. Contour\ub85c EKS \uc778\uadf8\ub808\uc2a4 \ubcf4\ud638 \ubc0f GitOps \ubc29\uc2dd \uc554\ud638\ud654 ACM\uc744 \uc0ac\uc6a9\ud558\uc5ec Amazon EKS \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c HTTPS \ud2b8\ub798\ud53d\uc744 \uc885\ub8cc\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud569\ub2c8\uae4c? \uc8fc\ubaa9 ALB \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\uc640 \uac19\uc740 \uc77c\ubd80 \uc218\uc2e0\uc740 \uc218\uc2e0 \uc0ac\uc591\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud558\uc5ec SSL/TLS\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4. cert-manager\uac00 \uc788\ub294 ACM \uc0ac\uc124 CA \u00b6 cert-manager ]( https://cert-manager.io/ ) \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\uc2e0, \ud3ec\ub4dc \ubc0f \ud3ec\ub4dc \uac04\uc5d0 EKS \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uc778\uc99d\uc11c\ub97c \ubc30\ud3ec, \uac31\uc2e0 \ubc0f \ucde8\uc18c\ud558\ub294 \uc778\uae30 \uc788\ub294 Kubernetes \ucd94\uac00 \uae30\ub2a5\uc785\ub2c8\ub2e4. ACM \uc0ac\uc124 CA\ub294 \uc790\uccb4 CA\ub97c \uad00\ub9ac\ud558\ub294 \uc120\ud589 \ube44\uc6a9 \ubc0f \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc774 \uc5c6\ub294 \uac00\uc6a9\uc131\uc774 \ub192\uace0 \uc548\uc804\ud55c \uad00\ub9ac\ud615 CA\uc785\ub2c8\ub2e4. \uae30\ubcf8 Kubernetes \uc778\uc99d \uae30\uad00\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 ACM Private CA\ub97c \ud1b5\ud574 \ubcf4\uc548\uc744 \uac1c\uc120\ud558\uace0 \uaddc\uc815 \uc900\uc218 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACM \uc0ac\uc124 CA\ub294 FIPS 140-2 \ub808\ubca8 3 \ud558\ub4dc\uc6e8\uc5b4 \ubcf4\uc548 \ubaa8\ub4c8(\ub9e4\uc6b0 \uc548\uc804\ud568)\uc758 \uac1c\uc778 \ud0a4\ub97c \ubcf4\ud638\ud558\uba70, \uc774\ub294 \uba54\ubaa8\ub9ac\uc5d0 \uc778\ucf54\ub529\ub41c \ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uae30\ubcf8 CA(\ub35c \uc548\uc804\ud568)\uc640 \ube44\uad50\ub429\ub2c8\ub2e4. \ub610\ud55c \uc911\uc559 \uc9d1\uc911\uc2dd CA \ub294 Kubernetes \ud658\uacbd \ub0b4\ubd80\uc640 \uc678\ubd80 \ubaa8\ub450\uc5d0\uc11c \uc0ac\uc124 \uc778\uc99d\uc11c\uc5d0 \ub300\ud574 \ub354 \ub9ce\uc740 \uc81c\uc5b4 \uae30\ub2a5\uacfc \ud5a5\uc0c1\ub41c \uac10\uc0ac \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\uc11c ACM \uc0ac\uc124 CA \ubc0f \uadf8 \uc774\uc810\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624 . \uc124\uc815 \uc9c0\uce68 \u00b6 ACM \uc0ac\uc124 CA \uae30\uc220 \ubb38\uc11c ]( https://docs.aws.amazon.com/acm-pca/latest/userguide/create-CA.html ) \uc5d0 \uc81c\uacf5\ub41c \uc808\ucc28\uc5d0 \ub530\ub77c \uc0ac\uc124 CA \uc0dd\uc131\ubd80\ud130 \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624 . \uc0ac\uc124 CA\uac00 \uc788\uc73c\uba74 \uc77c\ubc18 \uc124\uce58 \uc9c0\uce68 \uc744 \uc0ac\uc6a9\ud558\uc5ec cert-manager\ub97c \uc124\uce58\ud569\ub2c8\ub2e4. cert-manager\ub97c \uc124\uce58\ud55c \ud6c4 GitHub\uc758 \uc124\uc815 \uc9c0\uce68 \uc5d0 \ub530\ub77c Private CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 cert-manager\uac00 ACM Private CA\uc5d0\uc11c \uc0ac\uc124 \uc778\uc99d\uc11c\ub97c \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c cert-manager \ubc0f \ud50c\ub7ec\uadf8\uc778\uc774 \uc124\uce58\ub41c \uc0ac\uc124 CA \ubc0f EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\uc73c\ubbc0\ub85c \uad8c\ud55c\uc744 \uc124\uc815\ud558\uace0 \ubc1c\uae09\uc790\ub97c \uc0dd\uc131\ud560 \ucc28\ub840\uc785\ub2c8\ub2e4. ACM Private CA\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud558\ub3c4\ub85d EKS \ub178\ub4dc \uc5ed\ud560\uc758 IAM \uad8c\ud55c\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. <CA_ARN> \uc744 \uc0ac\uc124 CA\uc758 \uac12\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4 . { \"\ubc84\uc804\": \"2012-10-17\", \"\uc131\uba85\": [ { \"\uc2dc\ub4dc\": \"awspcaissuer\", \"\ub3d9\uc791\": [ \"acm-pca:DescribeCertificateAuthority\", \"acm-pca:GetCertificate\", \"acm-pca:IssueCertificate\" ], \"\ud6a8\uacfc\": \"\ud5c8\uc6a9\", \"\ub9ac\uc18c\uc2a4\": \"<CA_ARN>\" } ] } IAM \uacc4\uc815\uc758 \uc11c\ube44\uc2a4 \uc5ed\ud560 \ub610\ub294 IRSA \ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \uc608\uc81c\ub294 \uc544\ub798\uc758 \ucd94\uac00 \ub9ac\uc18c\uc2a4 \uc139\uc158\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub2e4\uc74c \ud14d\uc2a4\ud2b8\uac00 \ud3ec\ud568\ub41c cluster-issuer.yaml\uc774\ub77c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4 \uc815\uc758 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 <CA_ARN> \ubc0f <Region> \uc815\ubcf4\ub97c \uc0ac\uc124 CA \ub85c \ub300\uccb4\ud558\uc5ec Amazon EKS\uc5d0\uc11c \ubc1c\uae09\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. apiVersion: awspca.cert-manager.io/v1beta1 \uc885\ub958: AWSPCAClusterIssuer \uba54\ud0c0\ub370\uc774\ud130: \uc774\ub984: \ub370\ubaa8-\ud14c\uc2a4\ud2b8-\ub8e8\ud2b8-ca \ud22c\uae30: \uc548: <CA_ARN> \uc9c0\uc5ed: <\uc9c0\uc5ed> \uc0dd\uc131\ud55c \ubc1c\uae09\uc790\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. kubectl \uc801\uc6a9 -f \ud074\ub7ec\uc2a4\ud130-issuer.yaml EKS \ud074\ub7ec\uc2a4\ud130\ub294 \uc0ac\uc124 CA\uc5d0\uc11c \uc778\uc99d\uc11c\ub97c \uc694\uccad\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc704\uc5d0\uc11c \uc0dd\uc131\ud55c \uc0ac\uc124 CA \ubc1c\uae09\uc790\ub85c 'issuerRef' \ud544\ub4dc\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec cert-manager\uc758 'Certificate' \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc99d\uc11c \ub9ac\uc18c\uc2a4 \uc9c0\uc815 \ubc0f \uc694\uccad \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 cert-manager\uc758 \uc778\uc99d\uc11c \ub9ac\uc18c\uc2a4 \uac00\uc774\ub4dc \ub97c \ud655\uc778\ud558\uc138\uc694. \uc5ec\uae30\uc5d0\uc11c \uc608\uc2dc \ubcf4\uae30 . \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 EKS\uc5d0\uc11c TLS\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 cert-manager \ubc0f ACM Private CA \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95 . \uc0c8\ub85c\uc6b4 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ubc0f ACM \uc0ac\uc124 CA\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon EKS\uc5d0\uc11c \uc885\ub2e8 \uac04 TLS \uc554\ud638\ud654 \uc124\uc815 . Github\uc758 Private CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778 . \uc0ac\uc124 CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc . \ud234\ub9c1 \u00b6 ksniff \ubc0f Wireshark\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes\uc5d0\uc11c Service Mesh TLS \ud655\uc778 ksniff egress-operator \ud504\ub85c\ud1a0\ucf5c \uac80\uc0ac \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub098\uac00\ub294 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \uc6b4\uc601\uc790 \ubc0f DNS \ud50c\ub7ec\uadf8\uc778","title":"\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548"},{"location":"security/docs/network.kr/#_1","text":"\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548\uc5d0\ub294 \uc5ec\ub7ec \uce21\uba74\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uccab \ubc88\uc9f8\ub294 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc81c\ud55c\ud558\ub294 \uaddc\uce59 \uc801\uc6a9\uacfc \uad00\ub828\ub429\ub2c8\ub2e4. \ub450 \ubc88\uc9f8\ub294 \uc804\uc1a1 \uc911\uc778 \ud2b8\ub798\ud53d\uc758 \uc554\ud638\ud654\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc5d0\uc11c \uc774\ub7ec\ud55c \ubcf4\uc548 \uc870\uce58\ub97c \uad6c\ud604\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc740 \ub2e4\uc591\ud558\uc9c0\ub9cc \uc885\uc885 \ub2e4\uc74c \ud56d\ubaa9\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548"},{"location":"security/docs/network.kr/#_2","text":"\ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubcf4\uc548 \uadf8\ub8f9","title":"\uad50\ud1b5 \ud1b5\uc81c"},{"location":"security/docs/network.kr/#_3","text":"\uc11c\ube44\uc2a4 \uba54\uc2dc \ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI) \ub2c8\ud2b8\ub85c \uc778\uc2a4\ud134\uc2a4 cert-manager\uac00 \uc788\ub294 ACM \uc0ac\uc124 CA","title":"\uc804\uc1a1 \uc911 \uc554\ud638\ud654"},{"location":"security/docs/network.kr/#_4","text":"Kubernetes \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \ubaa8\ub4e0 \ud3ec\ub4dc \uac04 \ud1b5\uc2e0\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc720\uc5f0\uc131\uc740 \uc2e4\ud5d8\uc744 \ucd09\uc9c4\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\uc9c0\ub9cc \uc548\uc804\ud55c \uac83\uc73c\ub85c \uac04\uc8fc\ub418\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 Pod \uac04(\uc885\uc885 East/West \ud2b8\ub798\ud53d\uc774\ub77c\uace0 \ud568) \ubc0f Pod\uc640 \uc678\ubd80 \uc11c\ube44\uc2a4 \uac04\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 OSI \ubaa8\ub378\uc758 \uacc4\uce35 3\uacfc 4\uc5d0\uc11c \uc791\ub3d9\ud569\ub2c8\ub2e4. \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ud31f \uc120\ud0dd\uae30 \ubc0f \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc18c\uc2a4 \ubc0f \ub300\uc0c1 \ud31f\uc744 \uc2dd\ubcc4\ud558\uc9c0\ub9cc IP \uc8fc\uc18c, \ud3ec\ud2b8 \ubc88\ud638, \ud504\ub85c\ud1a0\ucf5c \ubc88\ud638 \ub610\ub294 \uc774\ub4e4\uc758 \uc870\ud569\uc744 \ud3ec\ud568\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Calico \ub294 EKS\uc640 \uc798 \uc791\ub3d9\ud558\ub294 Tigera \uc758 \uc624\ud508 \uc18c\uc2a4 \uc815\ucc45 \uc5d4\uc9c4\uc785\ub2c8\ub2e4 . \uc804\uccb4 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uae30\ub2a5 \uc138\ud2b8\ub97c \uad6c\ud604\ud558\ub294 \uac83 \uc678\uc5d0\ub3c4 Calico\ub294 Istio\uc640 \ud1b5\ud569\ub420 \ub54c HTTP\uc640 \uac19\uc740 \uacc4\uce35 7 \uaddc\uce59 \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\uc5ec \ub354 \ud48d\ubd80\ud55c \uae30\ub2a5 \uc138\ud2b8\ub85c \ud655\uc7a5\ub41c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Isovalent, Cilium \uc758 \uad00\ub9ac\uc790\ub294 HTTP\uc640 \uac19\uc740 \uacc4\uce35 7 \uaddc\uce59\uc5d0 \ub300\ud55c \ubd80\ubd84 \uc9c0\uc6d0\uc744 \ud3ec\ud568\ud558\ub3c4\ub85d \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \ud655\uc7a5\ud588\uc2b5\ub2c8\ub2e4. Cilium\uc740 \ub610\ud55c Kubernetes Services/Pod\uc640 VPC \ub0b4\ubd80 \ub610\ub294 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ub9ac\uc18c\uc2a4 \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \uc720\uc6a9\ud560 \uc218 \uc788\ub294 DNS \ud638\uc2a4\ud2b8 \uc774\ub984\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c Calico Enterprise\uc5d0\ub294 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 AWS \ubcf4\uc548 \uadf8\ub8f9\uacfc DNS \ud638\uc2a4\ud2b8 \uc774\ub984\uc5d0 \ub9e4\ud551\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ucc98\uc74c \ud504\ub85c\ube44\uc800\ub2dd\ud560 \ub54c Calico \uc815\ucc45 \uc5d4\uc9c4\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Calico \uc124\uce58\ub97c \uc704\ud55c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub294 VPC CNI \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac( https://github.com/aws/amazon-vpc-cni-k8s/tree/master/config \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. amazon-vpc-cni-k8s/tree/master/config ). Calico \uc815\ucc45\uc740 \ub124\uc784\uc2a4\ud398\uc774\uc2a4, \ud3ec\ub4dc, \uc11c\ube44\uc2a4 \uacc4\uc815 \ub610\ub294 \uc804\uc5ed\uc73c\ub85c \ubc94\uc704\uac00 \uc9c0\uc815\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ucc45 \ubc94\uc704\uac00 \uc11c\ube44\uc2a4 \uacc4\uc815\uc73c\ub85c \uc9c0\uc815\ub418\uba74 \uc218\uc2e0/\ubc1c\uc2e0 \uaddc\uce59 \uc9d1\ud569\uc744 \ud574\ub2f9 \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc801\uc808\ud55c RBAC \uaddc\uce59\uc744 \uc0ac\uc6a9\ud558\uba74 \ud300\uc774 \uc774\ub7ec\ud55c \uaddc\uce59\uc744 \uc7ac\uc815\uc758\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud558\uc5ec IT \ubcf4\uc548 \uc804\ubb38\uac00\uac00 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uad00\ub9ac\ub97c \uc548\uc804\ud558\uac8c \uc704\uc784\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 Kubernetes \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubaa9\ub85d\uc740 https://github.com/ahmetb/kubernetes-network-policy-recipes \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico\uc5d0 \ub300\ud55c \uc720\uc0ac\ud55c \uaddc\uce59 \uc138\ud2b8\ub294 https://docs.projectcalico.org/security/calico-network-policy \uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \uc815\ucc45"},{"location":"security/docs/network.kr/#_5","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/network.kr/#_6","text":"RBAC \uc815\ucc45\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc740 \ucd5c\uc18c \uad8c\ud55c \uc561\uc138\uc2a4 \uc815\ucc45\uc744 \uc900\uc218\ud574\uc57c \ud569\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub85c\ubd80\ud130\uc758 \ubaa8\ub4e0 \uc778\ubc14\uc6b4\ub4dc \ubc0f \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc81c\ud55c\ud558\ub294 \ubaa8\ub450 \uac70\ubd80 \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc5ec \uc2dc\uc791\ud558\uac70\ub098 Calico\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae00\ub85c\ubc8c \uc815\ucc45\uc744 \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : {} \uc815\ucc45 \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4 \ud301 \uc704 \uc774\ubbf8\uc9c0\ub294 Tufin \uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \ubdf0\uc5b4\ub85c \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Calico \uae00\ub85c\ubc8c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : GlobalNetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uae30\ubcf8 \uac70\ubd80 \uc0ac\uc591 : \uc120\ud0dd\uc790 : \ubaa8\ub450() \uc720\ud615 : - \uc778 \uadf8\ub808\uc2a4 - \uc774\uadf8\ub808\uc2a4","title":"\uae30\ubcf8 \uac70\ubd80 \uc815\ucc45 \ub9cc\ub4e4\uae30"},{"location":"security/docs/network.kr/#dns","text":"\uae30\ubcf8 \uac70\ubd80 \ubaa8\ub4e0 \uaddc\uce59\uc744 \uc801\uc6a9\ud55c \ud6c4\uc5d0\ub294 \ud3ec\ub4dc\uac00 \uc774\ub984 \ud655\uc778\uc744 \uc704\ud574 CoreDNS\ub97c \ucffc\ub9ac\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \uc804\uc5ed \uaddc\uce59\uacfc \uac19\uc740 \ucd94\uac00 \uaddc\uce59\uc5d0 \uacc4\uce35\ud654\ub97c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub808\uc774\ube14\uc744 \uc9c0\uc815\ud558\uc5ec \uc2dc\uc791\ud569\ub2c8\ub2e4. kubectl \ub808\uc774\ube14 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 kube-system \uc774\ub984=kube-system \uadf8\ub7f0 \ub2e4\uc74c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. apiVersion : networking.k8s.io/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud5c8\uc6a9-dns-\uc561\uc138\uc2a4 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc0ac\uc591 : \ud3ec\ub4dc \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : {} \uc815\ucc45 \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc5d0 : - \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc774\ub984 : kube-system \ud3ec\ud2b8 : - \ud504\ub85c\ud1a0\ucf5c : UDP \ud3ec\ud2b8 : 53 Calico \uae00\ub85c\ubc8c \uc815\ucc45 \ub4f1\uac00\ubb3c apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : GlobalNetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : allow-dns-egress \uc0ac\uc591 : \uc120\ud0dd\uc790 : \ubaa8\ub450() \uc720\ud615 : - \uc774\uadf8\ub808\uc2a4 \ucd9c\uad6c : - \uc870\uce58 : \ud5c8\uc6a9 \ud504\ub85c\ud1a0\ucf5c : UDP \ubaa9\uc801\uc9c0 : namespaceSelector : \uc774\ub984 == \"kube-\uc2dc\uc2a4\ud15c\" \ud3ec\ud2b8 : - 53 \ub2e4\uc74c\uc740 readonly-sa-group\uacfc \uc5f0\uacb0\ub41c \uc0ac\uc6a9\uc790\uac00 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c my-sa \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \ud3b8\uc9d1\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\uba74\uc11c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 \uc11c\ube44\uc2a4 \uacc4\uc815\uacfc \uc5f0\uacb0\ud558\ub294 \ubc29\ubc95\uc758 \uc608\uc785\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : ServiceAccount \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ub9c8\uc774\uc0ac \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc774\ub984 : \ub9c8\uc774\uc0ac --- apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : \uc5ed\ud560 \uba54\ud0c0\ub370\uc774\ud130 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc774\ub984 : readonly-sa-role \uaddc\uce59 : # \uc8fc\uccb4\uac00 my-sa\ub77c\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815\uc744 \uc77d\uc744 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. - api\uadf8\ub8f9 : [ \"\" ] \ub9ac\uc18c\uc2a4 : [ \"\uc11c\ube44\uc2a4 \uacc4\uc815\" ] \ub9ac\uc18c\uc2a4 \uc774\ub984 : [ \"my-sa\" ] \ub3d9\uc0ac : [ \"get\" , \"watch\" , \"list\" ] --- apiVersion : rbac.authorization.k8s.io/v1 \uc885\ub958 : \ub864\ubc14\uc778\ub529 \uba54\ud0c0\ub370\uc774\ud130 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \uc774\ub984 : readonly-sa-rolebinding # readonly-sa-role\uc744 readonly-sa-group\uc774\ub77c\ub294 RBAC \uadf8\ub8f9\uc5d0 \ubc14\uc778\ub4dc\ud569\ub2c8\ub2e4. \uacfc\ubaa9 : - \uc885\ub958 : \uadf8\ub8f9 \uc774\ub984 : \uc77d\uae30 \uc804\uc6a9-sa-\uadf8\ub8f9 api \uadf8\ub8f9 : rbac.authorization.k8s.io \uc5ed\ud560 \ucc38\uc870 : \uc885\ub958 : \uc5ed\ud560 \uc774\ub984 : readonly-sa-role api \uadf8\ub8f9 : rbac.authorization.k8s.io --- apiVersion : crd.projectcalico.org/v1 \uc885\ub958 : NetworkPolicy \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : netpol-sa-demo \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 # \ucc38\uc870\ud558\ub294 \uae30\ubcf8 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ubaa8\ub4e0 \uc778\uadf8\ub808\uc2a4 \ud2b8\ub798\ud53d\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. # my-sa\ub77c\ub294 \uc11c\ube44\uc2a4 \uacc4\uc815 \uc0ac\uc591 : \uc9c4\uc785 : - \uc870\uce58 : \ud5c8\uc6a9 \ucd9c\ucc98 : \uc11c\ube44\uc2a4 \uacc4\uc815 : \uc120\ud0dd\uae30 : '\uc774\ub984 == \"my-sa\"' \uc120\ud0dd\uc790 : \ubaa8\ub450()","title":"DNS \ucffc\ub9ac\ub97c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59 \ub9cc\ub4e4\uae30"},{"location":"security/docs/network.kr/#_7","text":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud3ec\ub4dc\uac00 \uc11c\ub85c \ud1b5\uc2e0\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \uac83\uc73c\ub85c \uc2dc\uc791\ud55c \ub2e4\uc74c \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ud3ec\ub4dc \uac04 \ud1b5\uc2e0\uc744 \ucd94\uac00\ub85c \uc81c\ud55c\ud558\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uaddc\uce59\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4.","title":"\ub124\uc784\uc2a4\ud398\uc774\uc2a4/\ud31f \uac04\uc758 \ud2b8\ub798\ud53d \ud750\ub984\uc744 \uc120\ud0dd\uc801\uc73c\ub85c \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc744 \uc810\uc9c4\uc801\uc73c\ub85c \ucd94\uac00"},{"location":"security/docs/network.kr/#_8","text":"AWS VPC \ud750\ub984 \ub85c\uadf8 \ub294 \uc6d0\ubcf8 \ubc0f \ub300\uc0c1 IP \uc8fc\uc18c\uc640 \ud3ec\ud2b8\uc640 \uac19\uc740 VPC\ub97c \ud1b5\ud574 \ud750\ub974\ub294 \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucea1\ucc98\ud569\ub2c8\ub2e4. \uc218\ub77d/\uc0ad\uc81c\ub41c \ud328\ud0b7\uacfc \ud568\uaed8. \uc774 \uc815\ubcf4\ub97c \ubd84\uc11d\ud558\uc5ec Pod\ub97c \ud3ec\ud568\ud558\uc5ec VPC \ub0b4\uc758 \ub9ac\uc18c\uc2a4 \uac04\uc5d0 \uc758\uc2ec\uc2a4\ub7fd\uac70\ub098 \ube44\uc815\uc0c1\uc801\uc778 \ud65c\ub3d9\uc744 \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7ec\ub098 Pod\uc758 IP \uc8fc\uc18c\ub294 \uad50\uccb4\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 Flow Log\ub9cc\uc73c\ub85c\ub294 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico Enterprise\ub294 \ud31f(Pod) \ub808\uc774\ube14 \ubc0f \uae30\ud0c0 \uba54\ud0c0\ub370\uc774\ud130\ub85c \ud50c\ub85c\uc6b0 \ub85c\uadf8\ub97c \ud655\uc7a5\ud558\uc5ec \ud31f(Pod) \uac04\uc758 \ud2b8\ub798\ud53d \ud50c\ub85c\uc6b0\ub97c \ub354 \uc27d\uac8c \ud574\ub3c5\ud569\ub2c8\ub2e4.","title":"\ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d \uba54\ud0c0\ub370\uc774\ud130 \uae30\ub85d"},{"location":"security/docs/network.kr/#aws","text":"AWS Application Load Balancer (ALB) \ubc0f Network Load Balancer (NLB) \ub458 \ub2e4 \uc804\uc1a1 \uc554\ud638\ud654(SSL \ubc0f TLS)\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. ALB\uc5d0 \ub300\ud55c 'alb.ingress.kubernetes.io/certificate-arn' \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud558\uba74 ALB\uc5d0 \ucd94\uac00\ud560 \uc778\uc99d\uc11c\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d\uc744 \uc0dd\ub7b5\ud558\uba74 \ucee8\ud2b8\ub864\ub7ec\ub294 \uc0ac\uc6a9 \uac00\ub2a5\ud55c AWS Certificate Manager(ACM) \ud638\uc2a4\ud2b8 \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\ub294 \uc778\uc99d\uc11c. EKS v1.15\ubd80\ud130\ub294 \uc544\ub798 \uc608\uc640 \uac19\uc774 NLB\uc640 \ud568\uaed8 service.beta.kubernetes.io/aws-load-balancer-ssl-cert \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \uc11c\ube44\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ub370\ubaa8 \uc571 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc8fc\uc11d : service.beta.kubernetes.io/aws-load-balancer-type : \"nlb\" service.beta.kubernetes.io/aws-load-balancer-ssl-cert : \"<\uc778\uc99d\uc11c ARN>\" service.beta.kubernetes.io/aws-load-balancer-ssl-ports : \"443\" service.beta.kubernetes.io/aws-load-balancer-backend-protocol : \"http\" \uc0ac\uc591 : \uc720\ud615 : \ub85c\ub4dc\ubc38\ub7f0\uc11c \ud3ec\ud2b8 : - \ud3ec\ud2b8 : 443 \ub300\uc0c1\ud3ec\ud2b8 : 80 \ud504\ub85c\ud1a0\ucf5c : TCP \uc120\ud0dd\uae30 : \uc571 : \ub370\ubaa8 \uc571 --- \uc885\ub958 : \ubc30\ud3ec apiVersion : \uc571/v1 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : nginx \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : \uae30\ubcf8\uac12 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc0ac\uc591 : \ubcf5\uc81c\ubcf8 : 1 \uc120\ud0dd\uae30 : \uc77c\uce58 \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \ud15c\ud50c\ub9bf : \uba54\ud0c0\ub370\uc774\ud130 : \ub77c\ubca8 : \uc571 : \ub370\ubaa8 \uc571 \uc0ac\uc591 : \uc6a9\uae30 : - \uc774\ub984 : nginx \uc774\ubbf8\uc9c0 : nginx \ud3ec\ud2b8 : - \ucee8\ud14c\uc774\ub108 \ud3ec\ud2b8 : 443 \ud504\ub85c\ud1a0\ucf5c : TCP - \ucee8\ud14c\uc774\ub108\ud3ec\ud2b8 : 80 \ud504\ub85c\ud1a0\ucf5c : TCP","title":"AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c\ub85c \uc554\ud638\ud654 \uc0ac\uc6a9"},{"location":"security/docs/network.kr/#_9","text":"Kubernetes & Tigera: \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45, \ubcf4\uc548 \ubc0f \uac10\uc0ac Calico Enterprise \uc12c\ubaa8 NetworkPolicy Editor Cilium\uc758 \ub300\ud654\ud615 \uc815\ucc45 \ud3b8\uc9d1\uae30 Kinvolk\uc758 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc5b4\ub4dc\ubc14\uc774\uc800 \ubd84\uc11d\uc744 \uae30\ubc18\uc73c\ub85c \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45 \uc81c\uc548 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"security/docs/network.kr/#_10","text":"EKS\ub294 AWS VPC \ubcf4\uc548 \uadf8\ub8f9 (SG)\uc744 \uc0ac\uc6a9\ud558\uc5ec Kubernetes \uc81c\uc5b4 \ud50c\ub808\uc778\uacfc \ud074\ub7ec\uc2a4\ud130\uc758 \uc791\uc5c5\uc790 \ub178\ub4dc \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud569\ub2c8\ub2e4. \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc791\uc5c5\uc790 \ub178\ub4dc\uc640 \ub2e4\ub978 VPC \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 IP \uc8fc\uc18c \uac04\uc758 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ub429\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130(Kubernetes \ubc84\uc804 1.14-eks.3 \uc774\uc0c1 \ud3ec\ud568)\ub97c \ud504\ub85c\ube44\uc800\ub2dd\ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub429\ub2c8\ub2e4. \uc774 \ubcf4\uc548 \uadf8\ub8f9\uc740 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \ub178\ub4dc \uac04\uc5d0 \uc790\uc720\ub85c\uc6b4 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub2e8\uc21c\ud654\ub97c \uc704\ud574 \ube44\uad00\ub9ac \ub178\ub4dc \uadf8\ub8f9\uc744 \ud3ec\ud568\ud558\uc5ec \ubaa8\ub4e0 \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ud074\ub7ec\uc2a4\ud130 SG\ub97c \ucd94\uac00\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.14 \ubc0f EKS \ubc84\uc804 eks.3 \uc774\uc804\uc5d0\ub294 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud574 \ubcc4\ub3c4\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uad6c\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc0f \ub178\ub4dc \uadf8\ub8f9 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \ucd5c\uc18c \ubc0f \uc81c\uc548 \uaddc\uce59\uc740 https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html . _ \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubcf4\uc548 \uadf8\ub8f9_ \uc5d0 \ub300\ud55c \ucd5c\uc18c \uaddc\uce59 \uc740 \uc791\uc5c5\uc790 \ub178\ub4dc SG\uc5d0\uc11c \ud3ec\ud2b8 443 \uc778\ubc14\uc6b4\ub4dc\ub97c \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uaddc\uce59\uc740 kubelet\uc774 Kubernetes API \uc11c\ubc84\uc640 \ud1b5\uc2e0\ud560 \uc218 \uc788\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub610\ud55c \uc791\uc5c5\uc790 \ub178\ub4dc SG\uc5d0 \ub300\ud55c \uc544\uc6c3\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc6a9 \ud3ec\ud2b8 10250\ub3c4 \ud3ec\ud568\ud569\ub2c8\ub2e4. 10250\uc740 kubelet\uc774 \uc218\uc2e0 \ub300\uae30\ud558\ub294 \ud3ec\ud2b8\uc785\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ucd5c\uc18c node group \uaddc\uce59\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 SG\uc5d0\uc11c \ud3ec\ud2b8 10250 \uc778\ubc14\uc6b4\ub4dc \ubc0f \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 SG\ub85c \uc544\uc6c3\ubc14\uc6b4\ub4dc 443\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub178\ub4dc \uadf8\ub8f9 \ub0b4\uc758 \ub178\ub4dc \uac04\uc5d0 \uc790\uc720\ub85c\uc6b4 \ud1b5\uc2e0\uc744 \ud5c8\uc6a9\ud558\ub294 \uaddc\uce59\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\uc640 RDS \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc640 \uac19\uc740 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4 \uac04\uc758 \ud1b5\uc2e0\uc744 \uc81c\uc5b4\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uc6a9 \ubcf4\uc548 \uadf8\ub8f9 . Pod\uc6a9 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\uba74 \uae30\uc874 \ubcf4\uc548 \uadf8\ub8f9\uc744 Pod \ubaa8\uc74c\uc5d0 \ud560\ub2f9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uacbd\uace0 \ud3ec\ub4dc \uc0dd\uc131 \uc804\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc38\uc870\ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 \uc608\uc57d\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. SecurityGroupPolicy \uac1d\uccb4 \ub97c \uc0dd\uc131\ud558\uace0 PodSelector \ub610\ub294 ServiceAccountSelector \ub97c \uc9c0\uc815 \ud558\uc5ec \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ud560\ub2f9\ub418\ub294 \ud3ec\ub4dc\ub97c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uc120\ud0dd\uae30\ub97c {} \ub85c \uc124\uc815\ud558\uba74 SecurityGroupPolicy \uc5d0\uc11c \ucc38\uc870\ub418\ub294 SG \ub97c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \ud3ec\ub4dc \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ubaa8\ub4e0 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ud560\ub2f9\ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \uace0\ub824 \uc0ac\ud56d \uc744 \uc219\uc9c0 \ud588\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624 . \ud3ec\ub4dc\uc5d0 \ub300\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc744 \uad6c\ud604\ud558\uae30 \uc804\uc5d0. \uc911\uc694\ud55c \ud3ec\ub4dc\uc5d0 SG\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ubc18\ub4dc\uc2dc \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \ud3ec\ud2b8 53 \uc544\uc6c3\ubc14\uc6b4\ub4dc\ub97c \ud5c8\uc6a9\ud558\ub294 SG\ub97c \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ub9c8\ucc2c\uac00\uc9c0\ub85c \ud3ec\ub4dc \ubcf4\uc548 \uadf8\ub8f9\uc5d0\uc11c \ud3ec\ud2b8 53 \uc778\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc744 \uc218\ub77d\ud558\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ubc18\ub4dc\uc2dc \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc911\uc694\ud55c \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub300\ud55c \uc81c\ud55c \uc740 \ud3ec\ub4dc\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud560 \ub54c \uacc4\uc18d \uc801\uc6a9\ub429\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc2e0\uc911\ud558\uac8c \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624. \uc911\uc694\ud55c \ud3ec\ub4dc\uc5d0 \uad6c\uc131\ub41c \ubaa8\ub4e0 \ud504\ub85c\ube0c\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130 \ubcf4\uc548 \uadf8\ub8f9(kubelet)\uc758 \uc778\ubc14\uc6b4\ub4dc \ud2b8\ub798\ud53d\uc5d0 \ub300\ud55c \uaddc\uce59\uc744 \ubc18\ub4dc\uc2dc \uc0dd\uc131 \ud574\uc57c \ud569\ub2c8\ub2e4 . \uacbd\uace0 \ud604\uc7ac kubelet\uc774 SG\uc5d0 \ud560\ub2f9\ub41c \ud3ec\ub4dc\uc640 \ud1b5\uc2e0\ud558\uc9c0 \ubabb\ud558\uac8c \ud558\ub294 \ubc84\uadf8 \uac00 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \ud574\uacb0 \ubc29\ubc95\uc740 \uc601\ud5a5\uc744 \ubc1b\ub294 \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c sudo sysctl net.ipv4.tcp_early_demux=0 \uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uc774\uac83\uc740 CNI v1.7.3\uc5d0\uc11c \uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4. https://github.com/aws/amazon-vpc-cni-k8s/releases/tag/v1.7.3 . \uc911\uc694\ud55c \ud3ec\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 ENI \ud2b8\ub801\ud0b9 \uc774\ub77c\ub294 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc740 \ud3ec\ub4dc\uc758 ENI \ubc00\ub3c4\ub97c \ub192\uc774\uae30 \uc704\ud574 \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4. EC2 \uc778\uc2a4\ud134\uc2a4. \ud3ec\ub4dc\uac00 SG\uc5d0 \ud560\ub2f9\ub418\uba74 VPC \ucee8\ud2b8\ub864\ub7ec\ub294 \ub178\ub4dc \uadf8\ub8f9\uc758 \ubd84\uae30 ENI\ub97c \ud3ec\ub4dc\uc640 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \ud3ec\ub4dc\uac00 \uc608\uc57d\ub41c \uc2dc\uc810\uc5d0 \ub178\ub4dc \uadf8\ub8f9\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubd84\uae30 ENI\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\uc73c\uba74 \ud3ec\ub4dc\ub294 \ubcf4\ub958 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ub429\ub2c8\ub2e4. \uc778\uc2a4\ud134\uc2a4\uac00 \uc9c0\uc6d0\ud560 \uc218 \uc788\ub294 \ubd84\uae30 ENI \uc218\ub294 \uc778\uc2a4\ud134\uc2a4 \uc720\ud615/\ud328\ubc00\ub9ac\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html#supported-instance-types \uc5d0\uc11c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ud655\uc778\ud558\uc138\uc694. \ud3ec\ub4dc\uc758 \ubcf4\uc548 \uadf8\ub8f9\uc740 \uc815\ucc45 \ub370\ubaac\uc758 \uc624\ubc84\ud5e4\ub4dc \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80 \ubc0f \uc678\ubd80\uc758 \ub124\ud2b8\uc6cc\ud06c \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 AWS \uace0\uc720\uc758 \ubc29\ubc95\uc744 \uc81c\uacf5\ud558\uc9c0\ub9cc \ub2e4\ub978 \uc635\uc158\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 Cilium \uc815\ucc45 \uc5d4\uc9c4\uc744 \uc0ac\uc6a9\ud558\uba74 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc5d0\uc11c DNS \uc774\ub984\uc744 \ucc38\uc870\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Calico Enterprise\uc5d0\ub294 \ub124\ud2b8\uc6cc\ud06c \uc815\ucc45\uc744 AWS \ubcf4\uc548 \uadf8\ub8f9\uc5d0 \ub9e4\ud551\ud558\ub294 \uc635\uc158\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Istio\uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uad6c\ud604\ud55c \uacbd\uc6b0 \uc1a1\uc2e0 \uac8c\uc774\ud2b8\uc6e8\uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c \uc1a1\uc2e0\uc744 \ud2b9\uc815 \uc815\uaddc\ud654\ub41c \ub3c4\uba54\uc778 \ub610\ub294 IP \uc8fc\uc18c\ub85c \uc81c\ud55c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \uc635\uc158\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Istio\uc758 \uc1a1\uc2e0 \ud2b8\ub798\ud53d \uc81c\uc5b4 \uc5d0 \ub300\ud55c 3 \ubd80\uc791 \uc2dc\ub9ac\uc988\ub97c \uc77d\uc5b4\ubcf4\uc2ed\uc2dc\uc624 .","title":"\ubcf4\uc548 \uadf8\ub8f9"},{"location":"security/docs/network.kr/#_11","text":"PCI, HIPAA \ub610\ub294 \uae30\ud0c0 \uaddc\uc815\uc744 \uc900\uc218\ud574\uc57c \ud558\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc804\uc1a1 \uc911\uc778 \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc624\ub298\ub0a0 TLS\ub294 \uc720\uc120 \ud2b8\ub798\ud53d\uc744 \uc554\ud638\ud654\ud558\uae30 \uc704\ud55c \uc0ac\uc2e4\uc0c1\uc758 \uc120\ud0dd\uc785\ub2c8\ub2e4. \uc774\uc804 SSL\uacfc \ub9c8\ucc2c\uac00\uc9c0\ub85c TLS\ub294 \uc554\ud638\ud654 \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ubcf4\uc548 \ud1b5\uc2e0\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. TLS\ub294 \uc138\uc158 \uc2dc\uc791 \uc2dc \ud611\uc0c1\ub418\ub294 \uacf5\uc720 \uc554\ud638\ub97c \uae30\ubc18\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud558\ub294 \ud0a4\uac00 \uc0dd\uc131\ub418\ub294 \ub300\uce6d \uc554\ud638\ud654\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 Kubernetes \ud658\uacbd\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uc554\ud638\ud654\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \ubc29\ubc95\uc785\ub2c8\ub2e4.","title":"\uc804\uc1a1 \uc911 \uc554\ud638\ud654"},{"location":"security/docs/network.kr/#nitro","text":"\ub2e4\uc74c Nitro \uc778\uc2a4\ud134\uc2a4 \uc720\ud615 C5n, G4, I3en, M5dn, M5n, P3dn, R5dn \ubc0f R5n \uac04\uc5d0 \uad50\ud658\ub418\ub294 \ud2b8\ub798\ud53d\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc790\ub3d9\uc73c\ub85c \uc554\ud638\ud654\ub429\ub2c8\ub2e4. \uc804\uc1a1 \uac8c\uc774\ud2b8\uc6e8\uc774 \ub610\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uac19\uc740 \uc911\uac04 \ud649\uc774 \uc788\ub294 \uacbd\uc6b0 \ud2b8\ub798\ud53d\uc774 \uc554\ud638\ud654\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc804\uc1a1 \uc911 \uc554\ud638\ud654 \ubc0f \ub2e4\uc74c \uc0c8\ub85c\uc6b4 \uae30\ub2a5 \uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 .com/about-aws/whats-new/2019/10/introducing-amazon-ec2-m5n-m5dn-r5n-and-r5dn-instances-featuring-100-gbps-of-network-bandwidth/ ) \ubc1c\ud45c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. .","title":"Nitro \uc778\uc2a4\ud134\uc2a4"},{"location":"security/docs/network.kr/#cni","text":"WeaveNet \uc740 \uc2ac\ub9ac\ube0c \ud2b8\ub798\ud53d\uc5d0 NaCl \uc554\ud638\ud654\ub97c \uc0ac\uc6a9\ud558\uace0 \ube60\ub978 \ub370\uc774\ud130 \uacbd\ub85c \ud2b8\ub798\ud53d\uc5d0 IPsec ESP\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ud2b8\ub798\ud53d\uc744 \uc790\ub3d9\uc73c\ub85c \uc554\ud638\ud654\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucee8\ud14c\uc774\ub108 \ub124\ud2b8\uc6cc\ud06c \uc778\ud130\ud398\uc774\uc2a4(CNI)"},{"location":"security/docs/network.kr/#_12","text":"App Mesh, Linkerd v2 \ubc0f Istio\uc640 \uac19\uc740 \uc11c\ube44\uc2a4 \uba54\uc2dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc804\uc1a1 \uc911 \uc554\ud638\ud654\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. AppMesh\ub294 X.509 \uc778\uc99d\uc11c \ub610\ub294 Envoy\uc758 SDS(Secret Discovery Service)\ub85c mTLS \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. Linkerd\uc640 Istio\ub294 \ubaa8\ub450 mTLS\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. aws-app-mesh-examples GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub294 X.509 \uc778\uc99d\uc11c \ubc0f SPIRE\ub97c Envoy \ucee8\ud14c\uc774\ub108\uc640 \ud568\uaed8 SDS \uacf5\uae09\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec mTLS\ub97c \uad6c\uc131\ud558\ub294 \uc5f0\uc2b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. : X.509 \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec mTLS \uad6c\uc131 SPIRE(SDS)\ub97c \uc0ac\uc6a9\ud558\uc5ec TLS \uad6c\uc131 \ub610\ud55c App Mesh\ub294 [ AWS Certificate Manager ] ( https ://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html ) (ACM) \ub610\ub294 \uac00\uc0c1 \ub178\ub4dc\uc758 \ub85c\uceec \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uc800\uc7a5\ub41c \uc778\uc99d\uc11c. aws-app-mesh-examples GitHub \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\ub294 ACM\uc5d0\uc11c \ubc1c\uae09\ud55c \uc778\uc99d\uc11c \ubc0f Envoy \ucee8\ud14c\uc774\ub108\uc640 \ud568\uaed8 \ud328\ud0a4\uc9d5\ub41c \uc778\uc99d\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec TLS\ub97c \uad6c\uc131\ud558\ub294 \uc5f0\uc2b5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. : + \ud30c\uc77c \uc81c\uacf5 TLS \uc778\uc99d\uc11c\ub85c TLS \uad6c\uc131 + AWS Certificate Manager\ub85c TLS \uad6c\uc131","title":"\uc11c\ube44\uc2a4 \uba54\uc2dc"},{"location":"security/docs/network.kr/#_13","text":"\uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub294 \ud074\ub7ec\uc2a4\ud130 \uc678\ubd80\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 HTTP/S \ud2b8\ub798\ud53d\uc744 \ud074\ub7ec\uc2a4\ud130 \ub0b4\ubd80\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc11c\ube44\uc2a4\ub85c \uc9c0\ub2a5\uc801\uc73c\ub85c \ub77c\uc6b0\ud305\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. \uc885\uc885 \uc774\ub7ec\ud55c Ingress\ub294 Classic Load Balancer \ub610\ub294 NLB(Network Load Balancer)\uc640 \uac19\uc740 \uacc4\uce35 4 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0 \uc758\ud574 \uc804\uba74\uc5d0 \ubc30\uce58\ub429\ub2c8\ub2e4. \uc554\ud638\ud654\ub41c \ud2b8\ub798\ud53d\uc740 \ub85c\ub4dc \ubc38\ub7f0\uc11c, \uc778\uadf8\ub808\uc2a4 \ub9ac\uc18c\uc2a4 \ub610\ub294 \ud3ec\ub4dc\uc640 \uac19\uc774 \ub124\ud2b8\uc6cc\ud06c \ub0b4\uc758 \ub2e4\ub978 \uc704\uce58\uc5d0\uc11c \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SSL \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub294 \ubc29\ubc95\uacfc \uc704\uce58\ub294 \uad81\uadf9\uc801\uc73c\ub85c \uc870\uc9c1\uc758 \ub124\ud2b8\uc6cc\ud06c \ubcf4\uc548 \uc815\ucc45\uc5d0 \ub530\ub77c \uacb0\uc815\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc885\ub2e8 \uac04 \uc554\ud638\ud654\ub97c \uc694\uad6c\ud558\ub294 \uc815\ucc45\uc774 \uc788\ub294 \uacbd\uc6b0 Pod\uc5d0\uc11c \ud2b8\ub798\ud53d\uc744 \ud574\ub3c5\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 \ucd08\uae30 \ud578\ub4dc\uc170\uc774\ud06c\ub97c \uc124\uc815\ud558\ub294 \uc8fc\uae30\ub97c \uc18c\ube44\ud574\uc57c \ud558\ubbc0\ub85c Pod\uc5d0 \ucd94\uac00 \ubd80\ub2f4\uc774 \uac00\ud574\uc9d1\ub2c8\ub2e4. \uc804\ubc18\uc801\uc778 SSL/TLS \ucc98\ub9ac\ub294 CPU\ub97c \ub9ce\uc774 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ub530\ub77c\uc11c \uc720\uc5f0\uc131\uc774 \uc788\ub294 \uacbd\uc6b0 \uc778\uadf8\ub808\uc2a4 \ub610\ub294 \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc5d0\uc11c SSL \uc624\ud504\ub85c\ub4dc\ub97c \uc218\ud589\ud574 \ubcf4\uc2ed\uc2dc\uc624. \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\ub294 SSL/TLS \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. NLB\uc5d0\uc11c SSL/TLS \uc5f0\uacb0\uc744 \uc885\ub8cc\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc608\ub294 \uc704 \uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. SSL/TLS \uc885\ub8cc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\ub294 \uc544\ub798\uc5d0 \ub098\uc640 \uc788\uc2b5\ub2c8\ub2e4. Contour\ub85c EKS \uc778\uadf8\ub808\uc2a4 \ubcf4\ud638 \ubc0f GitOps \ubc29\uc2dd \uc554\ud638\ud654 ACM\uc744 \uc0ac\uc6a9\ud558\uc5ec Amazon EKS \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c HTTPS \ud2b8\ub798\ud53d\uc744 \uc885\ub8cc\ud558\ub824\uba74 \uc5b4\ub5bb\uac8c \ud574\uc57c \ud569\ub2c8\uae4c? \uc8fc\ubaa9 ALB \uc218\uc2e0 \ucee8\ud2b8\ub864\ub7ec\uc640 \uac19\uc740 \uc77c\ubd80 \uc218\uc2e0\uc740 \uc218\uc2e0 \uc0ac\uc591\uc758 \uc77c\ubd80\uac00 \uc544\ub2cc \uc8fc\uc11d\uc744 \uc0ac\uc6a9\ud558\uc5ec SSL/TLS\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4.","title":"\uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec \ubc0f \ub85c\ub4dc \ubc38\ub7f0\uc11c"},{"location":"security/docs/network.kr/#cert-manager-acm-ca","text":"cert-manager ]( https://cert-manager.io/ ) \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc218\uc2e0, \ud3ec\ub4dc \ubc0f \ud3ec\ub4dc \uac04\uc5d0 EKS \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc6cc\ud06c\ub85c\ub4dc\ub97c \ubcf4\ud638\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uc778\uc99d\uc11c\ub97c \ubc30\ud3ec, \uac31\uc2e0 \ubc0f \ucde8\uc18c\ud558\ub294 \uc778\uae30 \uc788\ub294 Kubernetes \ucd94\uac00 \uae30\ub2a5\uc785\ub2c8\ub2e4. ACM \uc0ac\uc124 CA\ub294 \uc790\uccb4 CA\ub97c \uad00\ub9ac\ud558\ub294 \uc120\ud589 \ube44\uc6a9 \ubc0f \uc720\uc9c0 \uad00\ub9ac \ube44\uc6a9\uc774 \uc5c6\ub294 \uac00\uc6a9\uc131\uc774 \ub192\uace0 \uc548\uc804\ud55c \uad00\ub9ac\ud615 CA\uc785\ub2c8\ub2e4. \uae30\ubcf8 Kubernetes \uc778\uc99d \uae30\uad00\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 ACM Private CA\ub97c \ud1b5\ud574 \ubcf4\uc548\uc744 \uac1c\uc120\ud558\uace0 \uaddc\uc815 \uc900\uc218 \uc694\uad6c \uc0ac\ud56d\uc744 \ucda9\uc871\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ACM \uc0ac\uc124 CA\ub294 FIPS 140-2 \ub808\ubca8 3 \ud558\ub4dc\uc6e8\uc5b4 \ubcf4\uc548 \ubaa8\ub4c8(\ub9e4\uc6b0 \uc548\uc804\ud568)\uc758 \uac1c\uc778 \ud0a4\ub97c \ubcf4\ud638\ud558\uba70, \uc774\ub294 \uba54\ubaa8\ub9ac\uc5d0 \uc778\ucf54\ub529\ub41c \ud0a4\ub97c \uc800\uc7a5\ud558\ub294 \uae30\ubcf8 CA(\ub35c \uc548\uc804\ud568)\uc640 \ube44\uad50\ub429\ub2c8\ub2e4. \ub610\ud55c \uc911\uc559 \uc9d1\uc911\uc2dd CA \ub294 Kubernetes \ud658\uacbd \ub0b4\ubd80\uc640 \uc678\ubd80 \ubaa8\ub450\uc5d0\uc11c \uc0ac\uc124 \uc778\uc99d\uc11c\uc5d0 \ub300\ud574 \ub354 \ub9ce\uc740 \uc81c\uc5b4 \uae30\ub2a5\uacfc \ud5a5\uc0c1\ub41c \uac10\uc0ac \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\uc11c ACM \uc0ac\uc124 CA \ubc0f \uadf8 \uc774\uc810\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624 .","title":"cert-manager\uac00 \uc788\ub294 ACM \uc0ac\uc124 CA"},{"location":"security/docs/network.kr/#_14","text":"ACM \uc0ac\uc124 CA \uae30\uc220 \ubb38\uc11c ]( https://docs.aws.amazon.com/acm-pca/latest/userguide/create-CA.html ) \uc5d0 \uc81c\uacf5\ub41c \uc808\ucc28\uc5d0 \ub530\ub77c \uc0ac\uc124 CA \uc0dd\uc131\ubd80\ud130 \uc2dc\uc791\ud558\uc2ed\uc2dc\uc624 . \uc0ac\uc124 CA\uac00 \uc788\uc73c\uba74 \uc77c\ubc18 \uc124\uce58 \uc9c0\uce68 \uc744 \uc0ac\uc6a9\ud558\uc5ec cert-manager\ub97c \uc124\uce58\ud569\ub2c8\ub2e4. cert-manager\ub97c \uc124\uce58\ud55c \ud6c4 GitHub\uc758 \uc124\uc815 \uc9c0\uce68 \uc5d0 \ub530\ub77c Private CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778\uc744 \uc124\uce58\ud569\ub2c8\ub2e4. \ud50c\ub7ec\uadf8\uc778\uc744 \uc0ac\uc6a9\ud558\uba74 cert-manager\uac00 ACM Private CA\uc5d0\uc11c \uc0ac\uc124 \uc778\uc99d\uc11c\ub97c \uc694\uccad\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c cert-manager \ubc0f \ud50c\ub7ec\uadf8\uc778\uc774 \uc124\uce58\ub41c \uc0ac\uc124 CA \ubc0f EKS \ud074\ub7ec\uc2a4\ud130\uac00 \uc788\uc73c\ubbc0\ub85c \uad8c\ud55c\uc744 \uc124\uc815\ud558\uace0 \ubc1c\uae09\uc790\ub97c \uc0dd\uc131\ud560 \ucc28\ub840\uc785\ub2c8\ub2e4. ACM Private CA\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \ud5c8\uc6a9\ud558\ub3c4\ub85d EKS \ub178\ub4dc \uc5ed\ud560\uc758 IAM \uad8c\ud55c\uc744 \uc5c5\ub370\uc774\ud2b8\ud569\ub2c8\ub2e4. <CA_ARN> \uc744 \uc0ac\uc124 CA\uc758 \uac12\uc73c\ub85c \ubc14\uafc9\ub2c8\ub2e4 . { \"\ubc84\uc804\": \"2012-10-17\", \"\uc131\uba85\": [ { \"\uc2dc\ub4dc\": \"awspcaissuer\", \"\ub3d9\uc791\": [ \"acm-pca:DescribeCertificateAuthority\", \"acm-pca:GetCertificate\", \"acm-pca:IssueCertificate\" ], \"\ud6a8\uacfc\": \"\ud5c8\uc6a9\", \"\ub9ac\uc18c\uc2a4\": \"<CA_ARN>\" } ] } IAM \uacc4\uc815\uc758 \uc11c\ube44\uc2a4 \uc5ed\ud560 \ub610\ub294 IRSA \ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \uc608\uc81c\ub294 \uc544\ub798\uc758 \ucd94\uac00 \ub9ac\uc18c\uc2a4 \uc139\uc158\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub2e4\uc74c \ud14d\uc2a4\ud2b8\uac00 \ud3ec\ud568\ub41c cluster-issuer.yaml\uc774\ub77c\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \ub9ac\uc18c\uc2a4 \uc815\uc758 \ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 <CA_ARN> \ubc0f <Region> \uc815\ubcf4\ub97c \uc0ac\uc124 CA \ub85c \ub300\uccb4\ud558\uc5ec Amazon EKS\uc5d0\uc11c \ubc1c\uae09\uc790\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. apiVersion: awspca.cert-manager.io/v1beta1 \uc885\ub958: AWSPCAClusterIssuer \uba54\ud0c0\ub370\uc774\ud130: \uc774\ub984: \ub370\ubaa8-\ud14c\uc2a4\ud2b8-\ub8e8\ud2b8-ca \ud22c\uae30: \uc548: <CA_ARN> \uc9c0\uc5ed: <\uc9c0\uc5ed> \uc0dd\uc131\ud55c \ubc1c\uae09\uc790\ub97c \ubc30\ud3ec\ud569\ub2c8\ub2e4. kubectl \uc801\uc6a9 -f \ud074\ub7ec\uc2a4\ud130-issuer.yaml EKS \ud074\ub7ec\uc2a4\ud130\ub294 \uc0ac\uc124 CA\uc5d0\uc11c \uc778\uc99d\uc11c\ub97c \uc694\uccad\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc704\uc5d0\uc11c \uc0dd\uc131\ud55c \uc0ac\uc124 CA \ubc1c\uae09\uc790\ub85c 'issuerRef' \ud544\ub4dc\uc758 \uac12\uc744 \ubcc0\uacbd\ud558\uc5ec cert-manager\uc758 'Certificate' \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc778\uc99d\uc11c\ub97c \ubc1c\uae09\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc778\uc99d\uc11c \ub9ac\uc18c\uc2a4 \uc9c0\uc815 \ubc0f \uc694\uccad \ubc29\ubc95\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 cert-manager\uc758 \uc778\uc99d\uc11c \ub9ac\uc18c\uc2a4 \uac00\uc774\ub4dc \ub97c \ud655\uc778\ud558\uc138\uc694. \uc5ec\uae30\uc5d0\uc11c \uc608\uc2dc \ubcf4\uae30 .","title":"\uc124\uc815 \uc9c0\uce68"},{"location":"security/docs/network.kr/#_15","text":"EKS\uc5d0\uc11c TLS\ub97c \ud65c\uc131\ud654\ud558\uae30 \uc704\ud574 cert-manager \ubc0f ACM Private CA \ud50c\ub7ec\uadf8\uc778\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95 . \uc0c8\ub85c\uc6b4 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \ubc0f ACM \uc0ac\uc124 CA\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon EKS\uc5d0\uc11c \uc885\ub2e8 \uac04 TLS \uc554\ud638\ud654 \uc124\uc815 . Github\uc758 Private CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778 . \uc0ac\uc124 CA Kubernetes cert-manager \ud50c\ub7ec\uadf8\uc778 \uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc .","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"security/docs/network.kr/#_16","text":"ksniff \ubc0f Wireshark\ub97c \uc0ac\uc6a9\ud558\uc5ec Kubernetes\uc5d0\uc11c Service Mesh TLS \ud655\uc778 ksniff egress-operator \ud504\ub85c\ud1a0\ucf5c \uac80\uc0ac \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ub098\uac00\ub294 \ud2b8\ub798\ud53d\uc744 \uc81c\uc5b4\ud558\ub294 \uc6b4\uc601\uc790 \ubc0f DNS \ud50c\ub7ec\uadf8\uc778","title":"\ud234\ub9c1"},{"location":"security/docs/network/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Network security \u00b6 Network security has several facets. The first involves the application of rules which restrict the flow of network traffic between services. The second involves the encryption of traffic while it is in transit. The mechanisms to implement these security measures on EKS are varied but often include the following items: Traffic control \u00b6 Network Policies Security Groups Encryption in transit \u00b6 Service Mesh Container Network Interfaces (CNIs) Ingress Controllers and Load Balancers Nitro Instances ACM Private CA with cert-manager Network policy \u00b6 Within a Kubernetes cluster, all Pod to Pod communication is allowed by default. While this flexibility may help promote experimentation, it is not considered secure. Kubernetes network policies give you a mechanism to restrict network traffic between Pods (often referred to as East/West traffic) as well as between Pods and external services. Kubernetes network policies operate at layers 3 and 4 of the OSI model. Network policies use pod, namespace selectors and labels to identify source and destination pods, but can also include IP addresses, port numbers, protocols, or a combination of these. Network Policies can be applied to both Inbound or Outbound connections to the pod, often called Ingress and Egress rules. With native network policy support of Amazon VPC CNI Plugin, you can implement network policies to secure network traffic in kubernetes clusters. This integrates with the upstream Kubernetes Network Policy API, ensuring compatibility and adherence to Kubernetes standards. You can define policies using different identifiers supported by the upstream API. By default, all ingress and egress traffic is allowed to a pod. When a network policy with a policyType Ingress is specified, only allowed connections into the pod are those from the pod's node and those allowed by the ingress rules. Same applies for egress rules. If multiple rules are defined, then union of all rules are taken into account when making the decision. Thus, order of evaluation does not affect the policy result. Attention When you first provision an EKS cluster, VPC CNI Network Policy functionality is not enabled by default. Ensure you deployed supported VPC CNI Add-on version and set ENABLE_NETWORK_POLICY flag to true on the vpc-cni add-on to enable this. Refer Amazon EKS User guide for detailed instructions. Recommendations \u00b6 Getting Started with Network Policies - Follow Principle of Least Privilege \u00b6 Create a default deny policy \u00b6 As with RBAC policies, it is recommended to follow least privileged access principles with network policies. Start by creating a deny all policy that restricts all inbound and outbound traffic with in a namespace. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : default-deny namespace : default spec : podSelector : {} policyTypes : - Ingress - Egress Tip The image above was created by the network policy viewer from Tufin . Create a rule to allow DNS queries \u00b6 Once you have the default deny all rule in place, you can begin layering on additional rules, such as a rule that allows pods to query CoreDNS for name resolution. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : allow-dns-access namespace : default spec : podSelector : matchLabels : {} policyTypes : - Egress egress : - to : - namespaceSelector : matchLabels : kubernetes.io/metadata.name : kube-system podSelector : matchLabels : k8s-app : kube-dns ports : - protocol : UDP port : 53 Incrementally add rules to selectively allow the flow of traffic between namespaces/pods \u00b6 Understand the application requirements and create fine-grained ingress and egress rules as needed. Below example shows how to restrict ingress traffic on port 80 to app-one from client-one . This helps minimize the attack surface and reduces the risk of unauthorized access. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : allow-ingress-app-one namespace : default spec : podSelector : matchLabels : k8s-app : app-one policyTypes : - Ingress ingress : - from : - podSelector : matchLabels : k8s-app : client-one ports : - protocol : TCP port : 80 Monitoring network policy enforcement \u00b6 Use Network Policy editor Network policy editor helps with visualizations, security score, autogenerates from network flow logs Build network policies in an interactive way Audit Logs Regularly review audit logs of your EKS cluster Audit logs provide wealth of information about what actions have been performed on your cluster including changes to network policies Use this information to track changes to your network policies over time and detect any unauthorized or unexpected changes Automated testing Implement automated testing by creating a test environment that mirrors your production environment and periodically deploy workloads that attempt to violate your network policies. Monitoring metrics Configure your observability agents to scrape the prometheus metrics from the VPC CNI node agents, that allows to monitor the agent health, and sdk errors. Audit Network Policies regularly Periodically audit your Network Policies to make sure that they meet your current application requirements. As your application evolves, an audit gives you the opportunity to remove redundant ingress, egress rules and make sure that your applications don\u2019t have excessive permissions. Ensure Network Policies exists using Open Policy Agent (OPA) Use OPA Policy like shown below to ensure Network Policy always exists before onboarding application pods. This policy denies onboarding k8s pods with a label k8s-app: sample-app if corresponding network policy does not exist. package kubernetes . admission import data . kubernetes . networkpolicies deny [ msg ] { input . request . kind . kind == \"Pod\" pod_label_value := { v [ \"k8s-app\" ] | v := input . request . object . metadata . labels } contains_label ( pod_label_value , \"sample-app\" ) np_label_value := { v [ \"k8s-app\" ] | v := networkpolicies [ _ ]. spec . podSelector . matchLabels } not contains_label ( np_label_value , \"sample-app\" ) msg := sprintf ( \"The Pod %v could not be created because it is missing an associated Network Policy.\" , [ input . request . object . metadata . name ]) } contains_label ( arr , val ) { arr [ _ ] == val } Troubleshooting \u00b6 Monitor the vpc-network-policy-controller, node-agent logs \u00b6 Enable the EKS Control plane controller manager logs to diagnose the network policy functionality. You can stream the control plane logs to a CloudWatch log group and use CloudWatch Log insights to perform advanced queries. From the logs, you can view what pod endpoint objects are resolved to a Network Policy, reconcilation status of the policies, and debug if the policy is working as expected. In addition, Amazon VPC CNI allows you to enable the collection and export of policy enforcement logs to Amazon Cloudwatch from the EKS worker nodes. Once enabled, you can leverage CloudWatch Container Insights to provide insights on your usage related to Network Policies. Amazon VPC CNI also ships an SDK that provides an interface to interact with eBPF programs on the node. The SDK is installed when the aws-node is deployed onto the nodes. You can find the SDK binary installed under /opt/cni/bin directory on the node. At launch, the SDK provides support for fundamental functionalities such as inspecting eBPF programs and maps. sudo /opt/cni/bin/aws-eks-na-cli ebpf progs Log network traffic metadata \u00b6 AWS VPC Flow Logs captures metadata about the traffic flowing through a VPC, such as source and destination IP address and port along with accepted/dropped packets. This information could be analyzed to look for suspicious or unusual activity between resources within the VPC, including Pods. However, since the IP addresses of pods frequently change as they are replaced, Flow Logs may not be sufficient on its own. Calico Enterprise extends the Flow Logs with pod labels and other metadata, making it easier to decipher the traffic flows between pods. Security groups \u00b6 EKS uses AWS VPC Security Groups (SGs) to control the traffic between the Kubernetes control plane and the cluster's worker nodes. Security groups are also used to control the traffic between worker nodes, and other VPC resources, and external IP addresses. When you provision an EKS cluster (with Kubernetes version 1.14-eks.3 or greater), a cluster security group is automatically created for you. This security group allows unfettered communication between the EKS control plane and the nodes from managed node groups. For simplicity, it is recommended that you add the cluster SG to all node groups, including unmanaged node groups. Prior to Kubernetes version 1.14 and EKS version eks.3, there were separate security groups configured for the EKS control plane and node groups. The minimum and suggested rules for the control plane and node group security groups can be found at https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html . The minimum rules for the control plane security group allows port 443 inbound from the worker node SG. This rule is what allows the kubelets to communicate with the Kubernetes API server. It also includes port 10250 for outbound traffic to the worker node SG; 10250 is the port that the kubelets listen on. Similarly, the minimum node group rules allow port 10250 inbound from the control plane SG and 443 outbound to the control plane SG. Finally there is a rule that allows unfettered communication between nodes within a node group. If you need to control communication between services that run within the cluster and service the run outside the cluster such as an RDS database, consider security groups for pods . With security groups for pods, you can assign an existing security group to a collection of pods. Warning If you reference a security group that does not exist prior to the creation of the pods, the pods will not get scheduled. You can control which pods are assigned to a security group by creating a SecurityGroupPolicy object and specifying a PodSelector or a ServiceAccountSelector . Setting the selectors to {} will assign the SGs referenced in the SecurityGroupPolicy to all pods in a namespace or all Service Accounts in a namespace. Be sure you've familiarized yourself with all the considerations before implementing security groups for pods. Important If you use SGs for pods you must create SGs that allow port 53 outbound to the cluster security group. Similarly, you must update the cluster security group to accept port 53 inbound traffic from the pod security group. Important The limits for security groups still apply when using security groups for pods so use them judiciously. Important You must create rules for inbound traffic from the cluster security group (kubelet) for all of the probes configured for pod. Important Security groups for pods relies on a feature known as ENI trunking which was created to increase the ENI density of an EC2 instance. When a pod is assigned to an SG, a VPC controller associates a branch ENI from the node group with the pod. If there aren't enough branch ENIs available in a node group at the time the pod is scheduled, the pod will stay in pending state. The number of branch ENIs an instance can support varies by instance type/family. See https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html#supported-instance-types for further details. While security groups for pods offers an AWS-native way to control network traffic within and outside of your cluster without the overhead of a policy daemon, other options are available. For example, the Cilium policy engine allows you to reference a DNS name in a network policy. Calico Enterprise includes an option for mapping network policies to AWS security groups. If you've implemented a service mesh like Istio, you can use an egress gateway to restrict network egress to specific, fully qualified domains or IP addresses. For further information about this option, read the three part series on egress traffic control in Istio . When to use Network Policy vs Security Group for Pods? \u00b6 When to use Kubernetes network policy: \u00b6 Controlling pod-to-pod traffic Suitable for controlling network traffic between pods inside a cluster (east-west traffic) Control traffic at the IP address or port level (OSI layer 3 or 4) When to use AWS Security groups for pods (SGP): \u00b6 Leverage existing AWS configurations If you already have complex set of EC2 security groups that manage access to AWS services and you are migrating applications from EC2 instances to EKS, SGPs can be a very good choice allowing you to reuse security group resources and apply them to your pods. Control access to AWS services Your applications running within an EKS cluster wants to communicate with other AWS services (RDS database), use SGPs as an efficient mechanism to control the traffic from the pods to AWS services. Isolation of Pod & Node traffic If you want to completely separate pod traffic from the rest of the node traffic, use SGP in POD_SECURITY_GROUP_ENFORCING_MODE=strict mode. Best practices using Security groups for pods and Network Policy \u00b6 Layered security Use a combination of SGP and kubernetes network policy for a layered security approach Use SGPs to limit network level access to AWS services that are not part of a cluster, while kubernetes network policies can restrict network traffic between pods inside the cluster Principle of least privilege Only allow necessary traffic between pods or namespaces Segment your applications Wherever possible, segment applications by the network policy to reduce the blast radius if an application is compromised Keep policies simple and clear Kubernetes network policies can be quite granular and complex, its best to keep them as simple as possible to reduce the risk of misconfiguration and ease the management overhead Reduce the attack surface Minimize the attack surface by limiting the exposure of your applications Attention Security Groups for pods provides two enforcing modes: strict and standard . You must use standard mode when using both Network Policy and Security Groups for pods features in an EKS cluster. When it comes to network security, a layered approach is often the most effective solution. Using kubernetes network policy and SGP in combination can provide a robust defense-in-depth strategy for your applications running in EKS. Service Mesh Policy Enforcement or Kubernetes network policy \u00b6 A service mesh is a dedicated infrastructure layer that you can add to your applications. It allows you to transparently add capabilities like observability, traffic management, and security, without adding them to your own code. Service mesh enforces policies at Layer 7 (application) of OSI model whereas kubernetes network policies operate at Layer 3 (network) and Layer 4 (transport). There are many offerings in this space like AWS AppMesh, Istio, Linkerd, etc., When to use Service mesh for policy enforcement: \u00b6 Have existing investment in a service mesh Need more advanced capabilities like traffic management, observability & security Traffic control, load balancing, circuit breaking, rate limiting, timeouts etc. Detailed insights into how your services are performing (latency, error rates, requests per second, request volumes etc.) You want to implement and leverage service mesh for security features like mTLS Choose Kubernetes network policy for simpler use cases \u00b6 Limit which pods can communicate with each other Network policies require fewer resources than a service mesh making them a good fit for simpler use cases or for smaller clusters where the overhead of running and managing a service mesh might not be justified Tip Network policies and Service mesh can also be used together. Use network policies to provide a baseline level of security and isolation between your pods and then use a service mesh to add additional capabilities like traffic management, observability and security. ThirdParty Network Policy Engines \u00b6 Consider a Third Party Network Policy Engine when you have advanced policy requirements like Global Network Policies, support for DNS Hostname based rules, Layer 7 rules, ServiceAccount based rules, and explicit deny/log actions, etc., Calico , is an open source policy engine from Tigera that works well with EKS. In addition to implementing the full set of Kubernetes network policy features, Calico supports extended network polices with a richer set of features, including support for layer 7 rules, e.g. HTTP, when integrated with Istio. Calico policies can be scoped to Namespaces, Pods, service accounts, or globally. When policies are scoped to a service account, it associates a set of ingress/egress rules with that service account. With the proper RBAC rules in place, you can prevent teams from overriding these rules, allowing IT security professionals to safely delegate administration of namespaces. Isovalent, the maintainers of Cilium , have also extended the network policies to include partial support for layer 7 rules, e.g. HTTP. Cilium also has support for DNS hostnames which can be useful for restricting traffic between Kubernetes Services/Pods and resources that run within or outside of your VPC. By contrast, Calico Enterprise includes a feature that allows you to map a Kubernetes network policy to an AWS security group, as well as DNS hostnames. You can find a list of common Kubernetes network policies at https://github.com/ahmetb/kubernetes-network-policy-recipes . A similar set of rules for Calico are available at https://docs.projectcalico.org/security/calico-network-policy . Migration to Amazon VPC CNI Network Policy Engine \u00b6 To maintain consistency and avoid unexpected pod communication behavior, it is recommended to deploy only one Network Policy Engine in your cluster. If you want to migrate from 3P to VPC CNI Network Policy Engine, we recommend converting your existing 3P NetworkPolicy CRDs to the Kubernetes NetworkPolicy resources before enabling VPC CNI network policy support. And, test the migrated policies in a separate test cluster before applying them in you production environment. This allows you to identify and address any potential issues or inconsistencies in pod communication behavior. Migration Tool \u00b6 To assist in your migration process, we have developed a tool called K8s Network Policy Migrator that converts your existing Calico/Cilium network policy CRDs to Kubernetes native network policies. After conversion you can directly test the converted network policies on your new clusters running VPC CNI network policy controller. The tool is designed to help you streamline the migration process and ensure a smooth transition. Important Migration tool will only convert 3P policies that are compatible with native kubernetes network policy api. If you are using advanced network policy features offered by 3P plugins, Migration tool will skip and report them. Please note that migration tool is currently not supported by AWS VPC CNI Network policy engineering team, it is made available to customers on a best-effort basis. We encourage you to utilize this tool to facilitate your migration process. In the event that you encounter any issues or bugs with the tool, we kindly ask you create a Github issue . Your feedback is invaluable to us and will assist in the continuous improvement of our services. Additional Resources \u00b6 Kubernetes & Tigera: Network Policies, Security, and Audit Calico Enterprise Cilium NetworkPolicy Editor an interactive policy editor from Cilium Kinvolk's Network Policy Advisor Suggests network policies based on an analysis of network traffic Encryption in transit \u00b6 Applications that need to conform to PCI, HIPAA, or other regulations may need to encrypt data while it is in transit. Nowadays TLS is the de facto choice for encrypting traffic on the wire. TLS, like it's predecessor SSL, provides secure communications over a network using cryptographic protocols. TLS uses symmetric encryption where the keys to encrypt the data are generated based on a shared secret that is negotiated at the beginning of the session. The following are a few ways that you can encrypt data in a Kubernetes environment. Nitro Instances \u00b6 Traffic exchanged between the following Nitro instance types, e.g. C5n, G4, I3en, M5dn, M5n, P3dn, R5dn, and R5n, is automatically encrypted by default. When there's an intermediate hop, like a transit gateway or a load balancer, the traffic is not encrypted. See Encryption in transit for further details on encryption in transit as well as the complete list of instances types that support network encryption by default. Container Network Interfaces (CNIs) \u00b6 WeaveNet can be configured to automatically encrypt all traffic using NaCl encryption for sleeve traffic, and IPsec ESP for fast datapath traffic. Service Mesh \u00b6 Encryption in transit can also be implemented with a service mesh like App Mesh, Linkerd v2, and Istio. AppMesh supports mTLS with X.509 certificates or Envoy's Secret Discovery Service(SDS). Linkerd and Istio both have support for mTLS. The aws-app-mesh-examples GitHub repository provides walkthroughs for configuring mTLS using X.509 certificates and SPIRE as SDS provider with your Envoy container: Configuring mTLS using X.509 certificates Configuring TLS using SPIRE (SDS) App Mesh also supports TLS encryption with a private certificate issued by AWS Certificate Manager (ACM) or a certificate stored on the local file system of the virtual node. The aws-app-mesh-examples GitHub repository provides walkthroughs for configuring TLS using certificates issued by ACM and certificates that are packaged with your Envoy container: + Configuring TLS with File Provided TLS Certificates + Configuring TLS with AWS Certificate Manager Ingress Controllers and Load Balancers \u00b6 Ingress controllers are a way for you to intelligently route HTTP/S traffic that emanates from outside the cluster to services running inside the cluster. Oftentimes, these Ingresses are fronted by a layer 4 load balancer, like the Classic Load Balancer or the Network Load Balancer (NLB). Encrypted traffic can be terminated at different places within the network, e.g. at the load balancer, at the ingress resource, or the Pod. How and where you terminate your SSL connection will ultimately be dictated by your organization's network security policy. For instance, if you have a policy that requires end-to-end encryption, you will have to decrypt the traffic at the Pod. This will place additional burden on your Pod as it will have to spend cycles establishing the initial handshake. Overall SSL/TLS processing is very CPU intensive. Consequently, if you have the flexibility, try performing the SSL offload at the Ingress or the load balancer. Use encryption with AWS Elastic load balancers \u00b6 The AWS Application Load Balancer (ALB) and Network Load Balancer (NLB) both have support for transport encryption (SSL and TLS). The alb.ingress.kubernetes.io/certificate-arn annotation for the ALB lets you to specify which certificates to add to the ALB. If you omit the annotation the controller will attempt to add certificates to listeners that require it by matching the available AWS Certificate Manager (ACM) certificates using the host field. Starting with EKS v1.15 you can use the service.beta.kubernetes.io/aws-load-balancer-ssl-cert annotation with the NLB as shown in the example below. apiVersion : v1 kind : Service metadata : name : demo-app namespace : default labels : app : demo-app annotations : service.beta.kubernetes.io/aws-load-balancer-type : \"nlb\" service.beta.kubernetes.io/aws-load-balancer-ssl-cert : \"<certificate ARN>\" service.beta.kubernetes.io/aws-load-balancer-ssl-ports : \"443\" service.beta.kubernetes.io/aws-load-balancer-backend-protocol : \"http\" spec : type : LoadBalancer ports : - port : 443 targetPort : 80 protocol : TCP selector : app : demo-app --- kind : Deployment apiVersion : apps/v1 metadata : name : nginx namespace : default labels : app : demo-app spec : replicas : 1 selector : matchLabels : app : demo-app template : metadata : labels : app : demo-app spec : containers : - name : nginx image : nginx ports : - containerPort : 443 protocol : TCP - containerPort : 80 protocol : TCP Following are additional examples for SSL/TLS termination. Securing EKS Ingress With Contour And Let\u2019s Encrypt The GitOps Way How do I terminate HTTPS traffic on Amazon EKS workloads with ACM? Attention Some Ingresses, like the AWS LB controller, implement the SSL/TLS using Annotations instead of as part of the Ingress Spec. ACM Private CA with cert-manager \u00b6 You can enable TLS and mTLS to secure your EKS application workloads at the ingress, on the pod, and between pods using ACM Private Certificate Authority (CA) and cert-manager , a popular Kubernetes add-on to distribute, renew, and revoke certificates. ACM Private CA is a highly-available, secure, managed CA without the upfront and maintenance costs of managing your own CA. If you are using the default Kubernetes certificate authority, there is an opportunity to improve your security and meet compliance requirements with ACM Private CA. ACM Private CA secures private keys in FIPS 140-2 Level 3 hardware security modules (very secure), compared with the default CA storing keys encoded in memory (less secure). A centralized CA also gives you more control and improved auditability for private certificates both inside and outside of a Kubernetes environment. Short-Lived CA Mode for Mutual TLS Between Workloads \u00b6 When using ACM Private CA for mTLS in EKS, it is recommended that you use short lived certificates with short-lived CA mode . Although it is possible to issue out short-lived certificates in the general-purpose CA mode, using short-lived CA mode works out more cost-effective (~75% cheaper than general mode) for use cases where new certificates need to be issued frequently. In addition to this, you should try to align the validity period of the private certificates with the lifetime of the pods in your EKS cluster. Learn more about ACM Private CA and its benefits here . Setup Instructions \u00b6 Start by creating a Private CA by following procedures provided in the ACM Private CA tech docs . Once you have a Private CA, install cert-manager using regular installation instructions . After installing cert-manager, install the Private CA Kubernetes cert-manager plugin by following the setup instructions in GitHub . The plugin lets cert-manager request private certificates from ACM Private CA. Now that you have a Private CA and an EKS cluster with cert-manager and the plugin installed, it\u2019s time to set permissions and create the issuer. Update IAM permissions of the EKS node role to allow access to ACM Private CA. Replace the <CA_ARN> with the value from your Private CA: { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"awspcaissuer\", \"Action\": [ \"acm-pca:DescribeCertificateAuthority\", \"acm-pca:GetCertificate\", \"acm-pca:IssueCertificate\" ], \"Effect\": \"Allow\", \"Resource\": \"<CA_ARN>\" } ] } Service Roles for IAM Accounts, or IRSA can also be used. Please see the Additional Resources section below for complete examples. Create an Issuer in Amazon EKS by creating a Custom Resource Definition file named cluster-issuer.yaml with the following text in it, replacing <CA_ARN> and <Region> information with your Private CA. apiVersion: awspca.cert-manager.io/v1beta1 kind: AWSPCAClusterIssuer metadata: name: demo-test-root-ca spec: arn: <CA_ARN> region: <Region> Deploy the Issuer you created. kubectl apply -f cluster-issuer.yaml Your EKS cluster is configured to request certificates from Private CA. You can now use cert-manager's Certificate resource to issue certificates by changing the issuerRef field's values to the Private CA Issuer you created above. For more details on how to specify and request Certificate resources, please check cert-manager's Certificate Resources guide . See examples here . ACM Private CA with Istio and cert-manager \u00b6 If you are running Istio in your EKS cluster, you can disable the Istio control plane (specifically istiod ) from functioning as the root Certificate Authority (CA), and configure ACM Private CA as the root CA for mTLS between workloads. If you're going with this approach, consider using the short-lived CA mode in ACM Private CA. Refer to the previous section and this blog post for more details. How Certificate Signing Works in Istio (Default) \u00b6 Workloads in Kubernetes are identified using service accounts. If you don't specify a service account, Kubernetes will automatically assign one to your workload. Also, service accounts automatically mount an associated token. This token is used by the service account for workloads to authenticate against the Kubernetes API. The service account may be sufficient as an identity for Kubernetes but Istio has its own identity management system and CA. When a workload starts up with its envoy sidecar proxy, it needs an identity assigned from Istio in order for it to be deemed as trustworthy and allowed to communicate with other services in the mesh. To get this identity from Istio, the istio-agent sends a request known as a certificate signing request (or CSR) to the Istio control plane. This CSR contains the service account token so that the workload's identity can be verified before being processed. This verification process is handled by istiod , which acts as both the Registration Authority (or RA) and the CA. The RA serves as a gatekeeper that makes sure only verified CSR makes it through to the CA. Once the CSR is verified, it will be forwarded to the CA which will then issue a certificate containing a SPIFFE identity with the service account. This certificate is called a SPIFFE verifiable identity document (or SVID). The SVID is assigned to the requesting service for identification purposes and to encrypt the traffic in transit between the communicating services. How Certificate Signing Works in Istio with ACM Private CA \u00b6 You can use a cert-manager add-on called the Istio Certificate Signing Request agent ( istio-csr ) to integrate Istio with ACM Private CA. This agent allows Istio workloads and control plane components to be secured with cert manager issuers, in this case ACM Private CA. The istio-csr agent exposes the same service that istiod serves in the default config of validating incoming CSRs. Except, after verification, it will convert the requests into resources that cert manager supports (i.e. integrations with external CA issuers). Whenever there's a CSR from a workload, it will be forwarded to istio-csr , which will request certificates from ACM Private CA. This communication between istio-csr and ACM Private CA is enabled by the AWS Private CA issuer plugin . Cert manager uses this plugin to request TLS certificates from ACM Private CA. The issuer plugin will communicate with the ACM Private CA service to request a signed certificate for the workload. Once the certificate has been signed, it will be returned to istio-csr , which will read the signed request, and return it to the workload that initiated the CSR. Setup Instructions \u00b6 Start by following the same setup instructions in this section to complete the following: Create a Private CA Install cert-manager Install the issuer plugin Set permissions and create an issuer. The issuer represents the CA and is used to sign istiod and mesh workload certificates. It will communicate with ACM Private CA. Create an istio-system namespace. This is where the istiod certificate and other Istio resources will be deployed. Install Istio CSR configured with AWS Private CA Issuer Plugin. You can preserve the certificate signing requests for workloads to verify that they get approved and signed ( preserveCertificateRequests=true ). helm install -n cert-manager cert-manager-istio-csr jetstack/cert-manager-istio-csr \\ --set \"app.certmanager.issuer.group=awspca.cert-manager.io\" \\ --set \"app.certmanager.issuer.kind=AWSPCAClusterIssuer\" \\ --set \"app.certmanager.issuer.name=<the-name-of-the-issuer-you-created>\" \\ --set \"app.certmanager.preserveCertificateRequests=true\" \\ --set \"app.server.maxCertificateDuration=48h\" \\ --set \"app.tls.certificateDuration=24h\" \\ --set \"app.tls.istiodCertificateDuration=24h\" \\ --set \"app.tls.rootCAFile=/var/run/secrets/istio-csr/ca.pem\" \\ --set \"volumeMounts[0].name=root-ca\" \\ --set \"volumeMounts[0].mountPath=/var/run/secrets/istio-csr\" \\ --set \"volumes[0].name=root-ca\" \\ --set \"volumes[0].secret.secretName=istio-root-ca\" 4. Install Istio with custom configurations to replace istiod with cert-manager istio-csr as the certificate provider for the mesh. This process can be carried out using the Istio Operator . apiVersion : install.istio.io/v1alpha1 kind : IstioOperator metadata : name : istio namespace : istio-system spec : profile : \"demo\" hub : gcr.io/istio-release values : global : # Change certificate provider to cert-manager istio agent for istio agent caAddress : cert-manager-istio-csr.cert-manager.svc:443 components : pilot : k8s : env : # Disable istiod CA Sever functionality - name : ENABLE_CA_SERVER value : \"false\" overlays : - apiVersion : apps/v1 kind : Deployment name : istiod patches : # Mount istiod serving and webhook certificate from Secret mount - path : spec.template.spec.containers.[name:discovery].args[7] value : \"--tlsCertFile=/etc/cert-manager/tls/tls.crt\" - path : spec.template.spec.containers.[name:discovery].args[8] value : \"--tlsKeyFile=/etc/cert-manager/tls/tls.key\" - path : spec.template.spec.containers.[name:discovery].args[9] value : \"--caCertFile=/etc/cert-manager/ca/root-cert.pem\" - path : spec.template.spec.containers.[name:discovery].volumeMounts[6] value : name : cert-manager mountPath : \"/etc/cert-manager/tls\" readOnly : true - path : spec.template.spec.containers.[name:discovery].volumeMounts[7] value : name : ca-root-cert mountPath : \"/etc/cert-manager/ca\" readOnly : true - path : spec.template.spec.volumes[6] value : name : cert-manager secret : secretName : istiod-tls - path : spec.template.spec.volumes[7] value : name : ca-root-cert configMap : defaultMode : 420 name : istio-ca-root-cert Deploy the above custom resource you created. istioctl operator init kubectl apply -f istio-custom-config.yaml Now you can deploy a workload to the mesh in your EKS cluster and enforce mTLS . Additional Resources \u00b6 How to implement cert-manager and the ACM Private CA plugin to enable TLS in EKS . Setting up end-to-end TLS encryption on Amazon EKS with the new AWS Load Balancer Controller and ACM Private CA . Private CA Kubernetes cert-manager plugin on Github . Private CA Kubernetes cert-manager plugin user guide . How to use AWS Private Certificate Authority short-lived certificate mode Tooling \u00b6 Verifying Service Mesh TLS in Kubernetes, Using ksniff and Wireshark ksniff egress-operator An operator and DNS plugin to control egress traffic from your cluster without protocol inspection","title":"Network Security ({'name': 'English', 'build': True})"},{"location":"security/docs/network/#network-security","text":"Network security has several facets. The first involves the application of rules which restrict the flow of network traffic between services. The second involves the encryption of traffic while it is in transit. The mechanisms to implement these security measures on EKS are varied but often include the following items:","title":"Network security"},{"location":"security/docs/network/#traffic-control","text":"Network Policies Security Groups","title":"Traffic control"},{"location":"security/docs/network/#encryption-in-transit","text":"Service Mesh Container Network Interfaces (CNIs) Ingress Controllers and Load Balancers Nitro Instances ACM Private CA with cert-manager","title":"Encryption in transit"},{"location":"security/docs/network/#network-policy","text":"Within a Kubernetes cluster, all Pod to Pod communication is allowed by default. While this flexibility may help promote experimentation, it is not considered secure. Kubernetes network policies give you a mechanism to restrict network traffic between Pods (often referred to as East/West traffic) as well as between Pods and external services. Kubernetes network policies operate at layers 3 and 4 of the OSI model. Network policies use pod, namespace selectors and labels to identify source and destination pods, but can also include IP addresses, port numbers, protocols, or a combination of these. Network Policies can be applied to both Inbound or Outbound connections to the pod, often called Ingress and Egress rules. With native network policy support of Amazon VPC CNI Plugin, you can implement network policies to secure network traffic in kubernetes clusters. This integrates with the upstream Kubernetes Network Policy API, ensuring compatibility and adherence to Kubernetes standards. You can define policies using different identifiers supported by the upstream API. By default, all ingress and egress traffic is allowed to a pod. When a network policy with a policyType Ingress is specified, only allowed connections into the pod are those from the pod's node and those allowed by the ingress rules. Same applies for egress rules. If multiple rules are defined, then union of all rules are taken into account when making the decision. Thus, order of evaluation does not affect the policy result. Attention When you first provision an EKS cluster, VPC CNI Network Policy functionality is not enabled by default. Ensure you deployed supported VPC CNI Add-on version and set ENABLE_NETWORK_POLICY flag to true on the vpc-cni add-on to enable this. Refer Amazon EKS User guide for detailed instructions.","title":"Network policy"},{"location":"security/docs/network/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/network/#getting-started-with-network-policies-follow-principle-of-least-privilege","text":"","title":"Getting Started with Network Policies - Follow Principle of Least Privilege"},{"location":"security/docs/network/#create-a-default-deny-policy","text":"As with RBAC policies, it is recommended to follow least privileged access principles with network policies. Start by creating a deny all policy that restricts all inbound and outbound traffic with in a namespace. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : default-deny namespace : default spec : podSelector : {} policyTypes : - Ingress - Egress Tip The image above was created by the network policy viewer from Tufin .","title":"Create a default deny policy"},{"location":"security/docs/network/#create-a-rule-to-allow-dns-queries","text":"Once you have the default deny all rule in place, you can begin layering on additional rules, such as a rule that allows pods to query CoreDNS for name resolution. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : allow-dns-access namespace : default spec : podSelector : matchLabels : {} policyTypes : - Egress egress : - to : - namespaceSelector : matchLabels : kubernetes.io/metadata.name : kube-system podSelector : matchLabels : k8s-app : kube-dns ports : - protocol : UDP port : 53","title":"Create a rule to allow DNS queries"},{"location":"security/docs/network/#incrementally-add-rules-to-selectively-allow-the-flow-of-traffic-between-namespacespods","text":"Understand the application requirements and create fine-grained ingress and egress rules as needed. Below example shows how to restrict ingress traffic on port 80 to app-one from client-one . This helps minimize the attack surface and reduces the risk of unauthorized access. Kubernetes network policy apiVersion : networking.k8s.io/v1 kind : NetworkPolicy metadata : name : allow-ingress-app-one namespace : default spec : podSelector : matchLabels : k8s-app : app-one policyTypes : - Ingress ingress : - from : - podSelector : matchLabels : k8s-app : client-one ports : - protocol : TCP port : 80","title":"Incrementally add rules to selectively allow the flow of traffic between namespaces/pods"},{"location":"security/docs/network/#monitoring-network-policy-enforcement","text":"Use Network Policy editor Network policy editor helps with visualizations, security score, autogenerates from network flow logs Build network policies in an interactive way Audit Logs Regularly review audit logs of your EKS cluster Audit logs provide wealth of information about what actions have been performed on your cluster including changes to network policies Use this information to track changes to your network policies over time and detect any unauthorized or unexpected changes Automated testing Implement automated testing by creating a test environment that mirrors your production environment and periodically deploy workloads that attempt to violate your network policies. Monitoring metrics Configure your observability agents to scrape the prometheus metrics from the VPC CNI node agents, that allows to monitor the agent health, and sdk errors. Audit Network Policies regularly Periodically audit your Network Policies to make sure that they meet your current application requirements. As your application evolves, an audit gives you the opportunity to remove redundant ingress, egress rules and make sure that your applications don\u2019t have excessive permissions. Ensure Network Policies exists using Open Policy Agent (OPA) Use OPA Policy like shown below to ensure Network Policy always exists before onboarding application pods. This policy denies onboarding k8s pods with a label k8s-app: sample-app if corresponding network policy does not exist. package kubernetes . admission import data . kubernetes . networkpolicies deny [ msg ] { input . request . kind . kind == \"Pod\" pod_label_value := { v [ \"k8s-app\" ] | v := input . request . object . metadata . labels } contains_label ( pod_label_value , \"sample-app\" ) np_label_value := { v [ \"k8s-app\" ] | v := networkpolicies [ _ ]. spec . podSelector . matchLabels } not contains_label ( np_label_value , \"sample-app\" ) msg := sprintf ( \"The Pod %v could not be created because it is missing an associated Network Policy.\" , [ input . request . object . metadata . name ]) } contains_label ( arr , val ) { arr [ _ ] == val }","title":"Monitoring network policy enforcement"},{"location":"security/docs/network/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"security/docs/network/#monitor-the-vpc-network-policy-controller-node-agent-logs","text":"Enable the EKS Control plane controller manager logs to diagnose the network policy functionality. You can stream the control plane logs to a CloudWatch log group and use CloudWatch Log insights to perform advanced queries. From the logs, you can view what pod endpoint objects are resolved to a Network Policy, reconcilation status of the policies, and debug if the policy is working as expected. In addition, Amazon VPC CNI allows you to enable the collection and export of policy enforcement logs to Amazon Cloudwatch from the EKS worker nodes. Once enabled, you can leverage CloudWatch Container Insights to provide insights on your usage related to Network Policies. Amazon VPC CNI also ships an SDK that provides an interface to interact with eBPF programs on the node. The SDK is installed when the aws-node is deployed onto the nodes. You can find the SDK binary installed under /opt/cni/bin directory on the node. At launch, the SDK provides support for fundamental functionalities such as inspecting eBPF programs and maps. sudo /opt/cni/bin/aws-eks-na-cli ebpf progs","title":"Monitor the vpc-network-policy-controller, node-agent logs"},{"location":"security/docs/network/#log-network-traffic-metadata","text":"AWS VPC Flow Logs captures metadata about the traffic flowing through a VPC, such as source and destination IP address and port along with accepted/dropped packets. This information could be analyzed to look for suspicious or unusual activity between resources within the VPC, including Pods. However, since the IP addresses of pods frequently change as they are replaced, Flow Logs may not be sufficient on its own. Calico Enterprise extends the Flow Logs with pod labels and other metadata, making it easier to decipher the traffic flows between pods.","title":"Log network traffic metadata"},{"location":"security/docs/network/#security-groups","text":"EKS uses AWS VPC Security Groups (SGs) to control the traffic between the Kubernetes control plane and the cluster's worker nodes. Security groups are also used to control the traffic between worker nodes, and other VPC resources, and external IP addresses. When you provision an EKS cluster (with Kubernetes version 1.14-eks.3 or greater), a cluster security group is automatically created for you. This security group allows unfettered communication between the EKS control plane and the nodes from managed node groups. For simplicity, it is recommended that you add the cluster SG to all node groups, including unmanaged node groups. Prior to Kubernetes version 1.14 and EKS version eks.3, there were separate security groups configured for the EKS control plane and node groups. The minimum and suggested rules for the control plane and node group security groups can be found at https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html . The minimum rules for the control plane security group allows port 443 inbound from the worker node SG. This rule is what allows the kubelets to communicate with the Kubernetes API server. It also includes port 10250 for outbound traffic to the worker node SG; 10250 is the port that the kubelets listen on. Similarly, the minimum node group rules allow port 10250 inbound from the control plane SG and 443 outbound to the control plane SG. Finally there is a rule that allows unfettered communication between nodes within a node group. If you need to control communication between services that run within the cluster and service the run outside the cluster such as an RDS database, consider security groups for pods . With security groups for pods, you can assign an existing security group to a collection of pods. Warning If you reference a security group that does not exist prior to the creation of the pods, the pods will not get scheduled. You can control which pods are assigned to a security group by creating a SecurityGroupPolicy object and specifying a PodSelector or a ServiceAccountSelector . Setting the selectors to {} will assign the SGs referenced in the SecurityGroupPolicy to all pods in a namespace or all Service Accounts in a namespace. Be sure you've familiarized yourself with all the considerations before implementing security groups for pods. Important If you use SGs for pods you must create SGs that allow port 53 outbound to the cluster security group. Similarly, you must update the cluster security group to accept port 53 inbound traffic from the pod security group. Important The limits for security groups still apply when using security groups for pods so use them judiciously. Important You must create rules for inbound traffic from the cluster security group (kubelet) for all of the probes configured for pod. Important Security groups for pods relies on a feature known as ENI trunking which was created to increase the ENI density of an EC2 instance. When a pod is assigned to an SG, a VPC controller associates a branch ENI from the node group with the pod. If there aren't enough branch ENIs available in a node group at the time the pod is scheduled, the pod will stay in pending state. The number of branch ENIs an instance can support varies by instance type/family. See https://docs.aws.amazon.com/eks/latest/userguide/security-groups-for-pods.html#supported-instance-types for further details. While security groups for pods offers an AWS-native way to control network traffic within and outside of your cluster without the overhead of a policy daemon, other options are available. For example, the Cilium policy engine allows you to reference a DNS name in a network policy. Calico Enterprise includes an option for mapping network policies to AWS security groups. If you've implemented a service mesh like Istio, you can use an egress gateway to restrict network egress to specific, fully qualified domains or IP addresses. For further information about this option, read the three part series on egress traffic control in Istio .","title":"Security groups"},{"location":"security/docs/network/#when-to-use-network-policy-vs-security-group-for-pods","text":"","title":"When to use Network Policy vs Security Group for Pods?"},{"location":"security/docs/network/#when-to-use-kubernetes-network-policy","text":"Controlling pod-to-pod traffic Suitable for controlling network traffic between pods inside a cluster (east-west traffic) Control traffic at the IP address or port level (OSI layer 3 or 4)","title":"When to use Kubernetes network policy:"},{"location":"security/docs/network/#when-to-use-aws-security-groups-for-pods-sgp","text":"Leverage existing AWS configurations If you already have complex set of EC2 security groups that manage access to AWS services and you are migrating applications from EC2 instances to EKS, SGPs can be a very good choice allowing you to reuse security group resources and apply them to your pods. Control access to AWS services Your applications running within an EKS cluster wants to communicate with other AWS services (RDS database), use SGPs as an efficient mechanism to control the traffic from the pods to AWS services. Isolation of Pod & Node traffic If you want to completely separate pod traffic from the rest of the node traffic, use SGP in POD_SECURITY_GROUP_ENFORCING_MODE=strict mode.","title":"When to use AWS Security groups for pods (SGP):"},{"location":"security/docs/network/#best-practices-using-security-groups-for-pods-and-network-policy","text":"Layered security Use a combination of SGP and kubernetes network policy for a layered security approach Use SGPs to limit network level access to AWS services that are not part of a cluster, while kubernetes network policies can restrict network traffic between pods inside the cluster Principle of least privilege Only allow necessary traffic between pods or namespaces Segment your applications Wherever possible, segment applications by the network policy to reduce the blast radius if an application is compromised Keep policies simple and clear Kubernetes network policies can be quite granular and complex, its best to keep them as simple as possible to reduce the risk of misconfiguration and ease the management overhead Reduce the attack surface Minimize the attack surface by limiting the exposure of your applications Attention Security Groups for pods provides two enforcing modes: strict and standard . You must use standard mode when using both Network Policy and Security Groups for pods features in an EKS cluster. When it comes to network security, a layered approach is often the most effective solution. Using kubernetes network policy and SGP in combination can provide a robust defense-in-depth strategy for your applications running in EKS.","title":"Best practices using Security groups for pods and Network Policy"},{"location":"security/docs/network/#service-mesh-policy-enforcement-or-kubernetes-network-policy","text":"A service mesh is a dedicated infrastructure layer that you can add to your applications. It allows you to transparently add capabilities like observability, traffic management, and security, without adding them to your own code. Service mesh enforces policies at Layer 7 (application) of OSI model whereas kubernetes network policies operate at Layer 3 (network) and Layer 4 (transport). There are many offerings in this space like AWS AppMesh, Istio, Linkerd, etc.,","title":"Service Mesh Policy Enforcement or Kubernetes network policy"},{"location":"security/docs/network/#when-to-use-service-mesh-for-policy-enforcement","text":"Have existing investment in a service mesh Need more advanced capabilities like traffic management, observability & security Traffic control, load balancing, circuit breaking, rate limiting, timeouts etc. Detailed insights into how your services are performing (latency, error rates, requests per second, request volumes etc.) You want to implement and leverage service mesh for security features like mTLS","title":"When to use Service mesh for policy enforcement:"},{"location":"security/docs/network/#choose-kubernetes-network-policy-for-simpler-use-cases","text":"Limit which pods can communicate with each other Network policies require fewer resources than a service mesh making them a good fit for simpler use cases or for smaller clusters where the overhead of running and managing a service mesh might not be justified Tip Network policies and Service mesh can also be used together. Use network policies to provide a baseline level of security and isolation between your pods and then use a service mesh to add additional capabilities like traffic management, observability and security.","title":"Choose Kubernetes network policy for simpler use cases"},{"location":"security/docs/network/#thirdparty-network-policy-engines","text":"Consider a Third Party Network Policy Engine when you have advanced policy requirements like Global Network Policies, support for DNS Hostname based rules, Layer 7 rules, ServiceAccount based rules, and explicit deny/log actions, etc., Calico , is an open source policy engine from Tigera that works well with EKS. In addition to implementing the full set of Kubernetes network policy features, Calico supports extended network polices with a richer set of features, including support for layer 7 rules, e.g. HTTP, when integrated with Istio. Calico policies can be scoped to Namespaces, Pods, service accounts, or globally. When policies are scoped to a service account, it associates a set of ingress/egress rules with that service account. With the proper RBAC rules in place, you can prevent teams from overriding these rules, allowing IT security professionals to safely delegate administration of namespaces. Isovalent, the maintainers of Cilium , have also extended the network policies to include partial support for layer 7 rules, e.g. HTTP. Cilium also has support for DNS hostnames which can be useful for restricting traffic between Kubernetes Services/Pods and resources that run within or outside of your VPC. By contrast, Calico Enterprise includes a feature that allows you to map a Kubernetes network policy to an AWS security group, as well as DNS hostnames. You can find a list of common Kubernetes network policies at https://github.com/ahmetb/kubernetes-network-policy-recipes . A similar set of rules for Calico are available at https://docs.projectcalico.org/security/calico-network-policy .","title":"ThirdParty Network Policy Engines"},{"location":"security/docs/network/#migration-to-amazon-vpc-cni-network-policy-engine","text":"To maintain consistency and avoid unexpected pod communication behavior, it is recommended to deploy only one Network Policy Engine in your cluster. If you want to migrate from 3P to VPC CNI Network Policy Engine, we recommend converting your existing 3P NetworkPolicy CRDs to the Kubernetes NetworkPolicy resources before enabling VPC CNI network policy support. And, test the migrated policies in a separate test cluster before applying them in you production environment. This allows you to identify and address any potential issues or inconsistencies in pod communication behavior.","title":"Migration to Amazon VPC CNI Network Policy Engine"},{"location":"security/docs/network/#migration-tool","text":"To assist in your migration process, we have developed a tool called K8s Network Policy Migrator that converts your existing Calico/Cilium network policy CRDs to Kubernetes native network policies. After conversion you can directly test the converted network policies on your new clusters running VPC CNI network policy controller. The tool is designed to help you streamline the migration process and ensure a smooth transition. Important Migration tool will only convert 3P policies that are compatible with native kubernetes network policy api. If you are using advanced network policy features offered by 3P plugins, Migration tool will skip and report them. Please note that migration tool is currently not supported by AWS VPC CNI Network policy engineering team, it is made available to customers on a best-effort basis. We encourage you to utilize this tool to facilitate your migration process. In the event that you encounter any issues or bugs with the tool, we kindly ask you create a Github issue . Your feedback is invaluable to us and will assist in the continuous improvement of our services.","title":"Migration Tool"},{"location":"security/docs/network/#additional-resources","text":"Kubernetes & Tigera: Network Policies, Security, and Audit Calico Enterprise Cilium NetworkPolicy Editor an interactive policy editor from Cilium Kinvolk's Network Policy Advisor Suggests network policies based on an analysis of network traffic","title":"Additional Resources"},{"location":"security/docs/network/#encryption-in-transit_1","text":"Applications that need to conform to PCI, HIPAA, or other regulations may need to encrypt data while it is in transit. Nowadays TLS is the de facto choice for encrypting traffic on the wire. TLS, like it's predecessor SSL, provides secure communications over a network using cryptographic protocols. TLS uses symmetric encryption where the keys to encrypt the data are generated based on a shared secret that is negotiated at the beginning of the session. The following are a few ways that you can encrypt data in a Kubernetes environment.","title":"Encryption in transit"},{"location":"security/docs/network/#nitro-instances","text":"Traffic exchanged between the following Nitro instance types, e.g. C5n, G4, I3en, M5dn, M5n, P3dn, R5dn, and R5n, is automatically encrypted by default. When there's an intermediate hop, like a transit gateway or a load balancer, the traffic is not encrypted. See Encryption in transit for further details on encryption in transit as well as the complete list of instances types that support network encryption by default.","title":"Nitro Instances"},{"location":"security/docs/network/#container-network-interfaces-cnis","text":"WeaveNet can be configured to automatically encrypt all traffic using NaCl encryption for sleeve traffic, and IPsec ESP for fast datapath traffic.","title":"Container Network Interfaces (CNIs)"},{"location":"security/docs/network/#service-mesh","text":"Encryption in transit can also be implemented with a service mesh like App Mesh, Linkerd v2, and Istio. AppMesh supports mTLS with X.509 certificates or Envoy's Secret Discovery Service(SDS). Linkerd and Istio both have support for mTLS. The aws-app-mesh-examples GitHub repository provides walkthroughs for configuring mTLS using X.509 certificates and SPIRE as SDS provider with your Envoy container: Configuring mTLS using X.509 certificates Configuring TLS using SPIRE (SDS) App Mesh also supports TLS encryption with a private certificate issued by AWS Certificate Manager (ACM) or a certificate stored on the local file system of the virtual node. The aws-app-mesh-examples GitHub repository provides walkthroughs for configuring TLS using certificates issued by ACM and certificates that are packaged with your Envoy container: + Configuring TLS with File Provided TLS Certificates + Configuring TLS with AWS Certificate Manager","title":"Service Mesh"},{"location":"security/docs/network/#ingress-controllers-and-load-balancers","text":"Ingress controllers are a way for you to intelligently route HTTP/S traffic that emanates from outside the cluster to services running inside the cluster. Oftentimes, these Ingresses are fronted by a layer 4 load balancer, like the Classic Load Balancer or the Network Load Balancer (NLB). Encrypted traffic can be terminated at different places within the network, e.g. at the load balancer, at the ingress resource, or the Pod. How and where you terminate your SSL connection will ultimately be dictated by your organization's network security policy. For instance, if you have a policy that requires end-to-end encryption, you will have to decrypt the traffic at the Pod. This will place additional burden on your Pod as it will have to spend cycles establishing the initial handshake. Overall SSL/TLS processing is very CPU intensive. Consequently, if you have the flexibility, try performing the SSL offload at the Ingress or the load balancer.","title":"Ingress Controllers and Load Balancers"},{"location":"security/docs/network/#use-encryption-with-aws-elastic-load-balancers","text":"The AWS Application Load Balancer (ALB) and Network Load Balancer (NLB) both have support for transport encryption (SSL and TLS). The alb.ingress.kubernetes.io/certificate-arn annotation for the ALB lets you to specify which certificates to add to the ALB. If you omit the annotation the controller will attempt to add certificates to listeners that require it by matching the available AWS Certificate Manager (ACM) certificates using the host field. Starting with EKS v1.15 you can use the service.beta.kubernetes.io/aws-load-balancer-ssl-cert annotation with the NLB as shown in the example below. apiVersion : v1 kind : Service metadata : name : demo-app namespace : default labels : app : demo-app annotations : service.beta.kubernetes.io/aws-load-balancer-type : \"nlb\" service.beta.kubernetes.io/aws-load-balancer-ssl-cert : \"<certificate ARN>\" service.beta.kubernetes.io/aws-load-balancer-ssl-ports : \"443\" service.beta.kubernetes.io/aws-load-balancer-backend-protocol : \"http\" spec : type : LoadBalancer ports : - port : 443 targetPort : 80 protocol : TCP selector : app : demo-app --- kind : Deployment apiVersion : apps/v1 metadata : name : nginx namespace : default labels : app : demo-app spec : replicas : 1 selector : matchLabels : app : demo-app template : metadata : labels : app : demo-app spec : containers : - name : nginx image : nginx ports : - containerPort : 443 protocol : TCP - containerPort : 80 protocol : TCP Following are additional examples for SSL/TLS termination. Securing EKS Ingress With Contour And Let\u2019s Encrypt The GitOps Way How do I terminate HTTPS traffic on Amazon EKS workloads with ACM? Attention Some Ingresses, like the AWS LB controller, implement the SSL/TLS using Annotations instead of as part of the Ingress Spec.","title":"Use encryption with AWS Elastic load balancers"},{"location":"security/docs/network/#acm-private-ca-with-cert-manager","text":"You can enable TLS and mTLS to secure your EKS application workloads at the ingress, on the pod, and between pods using ACM Private Certificate Authority (CA) and cert-manager , a popular Kubernetes add-on to distribute, renew, and revoke certificates. ACM Private CA is a highly-available, secure, managed CA without the upfront and maintenance costs of managing your own CA. If you are using the default Kubernetes certificate authority, there is an opportunity to improve your security and meet compliance requirements with ACM Private CA. ACM Private CA secures private keys in FIPS 140-2 Level 3 hardware security modules (very secure), compared with the default CA storing keys encoded in memory (less secure). A centralized CA also gives you more control and improved auditability for private certificates both inside and outside of a Kubernetes environment.","title":"ACM Private CA with cert-manager"},{"location":"security/docs/network/#short-lived-ca-mode-for-mutual-tls-between-workloads","text":"When using ACM Private CA for mTLS in EKS, it is recommended that you use short lived certificates with short-lived CA mode . Although it is possible to issue out short-lived certificates in the general-purpose CA mode, using short-lived CA mode works out more cost-effective (~75% cheaper than general mode) for use cases where new certificates need to be issued frequently. In addition to this, you should try to align the validity period of the private certificates with the lifetime of the pods in your EKS cluster. Learn more about ACM Private CA and its benefits here .","title":"Short-Lived CA Mode for Mutual TLS Between Workloads"},{"location":"security/docs/network/#setup-instructions","text":"Start by creating a Private CA by following procedures provided in the ACM Private CA tech docs . Once you have a Private CA, install cert-manager using regular installation instructions . After installing cert-manager, install the Private CA Kubernetes cert-manager plugin by following the setup instructions in GitHub . The plugin lets cert-manager request private certificates from ACM Private CA. Now that you have a Private CA and an EKS cluster with cert-manager and the plugin installed, it\u2019s time to set permissions and create the issuer. Update IAM permissions of the EKS node role to allow access to ACM Private CA. Replace the <CA_ARN> with the value from your Private CA: { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"awspcaissuer\", \"Action\": [ \"acm-pca:DescribeCertificateAuthority\", \"acm-pca:GetCertificate\", \"acm-pca:IssueCertificate\" ], \"Effect\": \"Allow\", \"Resource\": \"<CA_ARN>\" } ] } Service Roles for IAM Accounts, or IRSA can also be used. Please see the Additional Resources section below for complete examples. Create an Issuer in Amazon EKS by creating a Custom Resource Definition file named cluster-issuer.yaml with the following text in it, replacing <CA_ARN> and <Region> information with your Private CA. apiVersion: awspca.cert-manager.io/v1beta1 kind: AWSPCAClusterIssuer metadata: name: demo-test-root-ca spec: arn: <CA_ARN> region: <Region> Deploy the Issuer you created. kubectl apply -f cluster-issuer.yaml Your EKS cluster is configured to request certificates from Private CA. You can now use cert-manager's Certificate resource to issue certificates by changing the issuerRef field's values to the Private CA Issuer you created above. For more details on how to specify and request Certificate resources, please check cert-manager's Certificate Resources guide . See examples here .","title":"Setup Instructions"},{"location":"security/docs/network/#acm-private-ca-with-istio-and-cert-manager","text":"If you are running Istio in your EKS cluster, you can disable the Istio control plane (specifically istiod ) from functioning as the root Certificate Authority (CA), and configure ACM Private CA as the root CA for mTLS between workloads. If you're going with this approach, consider using the short-lived CA mode in ACM Private CA. Refer to the previous section and this blog post for more details.","title":"ACM Private CA with Istio and cert-manager"},{"location":"security/docs/network/#how-certificate-signing-works-in-istio-default","text":"Workloads in Kubernetes are identified using service accounts. If you don't specify a service account, Kubernetes will automatically assign one to your workload. Also, service accounts automatically mount an associated token. This token is used by the service account for workloads to authenticate against the Kubernetes API. The service account may be sufficient as an identity for Kubernetes but Istio has its own identity management system and CA. When a workload starts up with its envoy sidecar proxy, it needs an identity assigned from Istio in order for it to be deemed as trustworthy and allowed to communicate with other services in the mesh. To get this identity from Istio, the istio-agent sends a request known as a certificate signing request (or CSR) to the Istio control plane. This CSR contains the service account token so that the workload's identity can be verified before being processed. This verification process is handled by istiod , which acts as both the Registration Authority (or RA) and the CA. The RA serves as a gatekeeper that makes sure only verified CSR makes it through to the CA. Once the CSR is verified, it will be forwarded to the CA which will then issue a certificate containing a SPIFFE identity with the service account. This certificate is called a SPIFFE verifiable identity document (or SVID). The SVID is assigned to the requesting service for identification purposes and to encrypt the traffic in transit between the communicating services.","title":"How Certificate Signing Works in Istio (Default)"},{"location":"security/docs/network/#how-certificate-signing-works-in-istio-with-acm-private-ca","text":"You can use a cert-manager add-on called the Istio Certificate Signing Request agent ( istio-csr ) to integrate Istio with ACM Private CA. This agent allows Istio workloads and control plane components to be secured with cert manager issuers, in this case ACM Private CA. The istio-csr agent exposes the same service that istiod serves in the default config of validating incoming CSRs. Except, after verification, it will convert the requests into resources that cert manager supports (i.e. integrations with external CA issuers). Whenever there's a CSR from a workload, it will be forwarded to istio-csr , which will request certificates from ACM Private CA. This communication between istio-csr and ACM Private CA is enabled by the AWS Private CA issuer plugin . Cert manager uses this plugin to request TLS certificates from ACM Private CA. The issuer plugin will communicate with the ACM Private CA service to request a signed certificate for the workload. Once the certificate has been signed, it will be returned to istio-csr , which will read the signed request, and return it to the workload that initiated the CSR.","title":"How Certificate Signing Works in Istio with ACM Private CA"},{"location":"security/docs/network/#setup-instructions_1","text":"Start by following the same setup instructions in this section to complete the following: Create a Private CA Install cert-manager Install the issuer plugin Set permissions and create an issuer. The issuer represents the CA and is used to sign istiod and mesh workload certificates. It will communicate with ACM Private CA. Create an istio-system namespace. This is where the istiod certificate and other Istio resources will be deployed. Install Istio CSR configured with AWS Private CA Issuer Plugin. You can preserve the certificate signing requests for workloads to verify that they get approved and signed ( preserveCertificateRequests=true ). helm install -n cert-manager cert-manager-istio-csr jetstack/cert-manager-istio-csr \\ --set \"app.certmanager.issuer.group=awspca.cert-manager.io\" \\ --set \"app.certmanager.issuer.kind=AWSPCAClusterIssuer\" \\ --set \"app.certmanager.issuer.name=<the-name-of-the-issuer-you-created>\" \\ --set \"app.certmanager.preserveCertificateRequests=true\" \\ --set \"app.server.maxCertificateDuration=48h\" \\ --set \"app.tls.certificateDuration=24h\" \\ --set \"app.tls.istiodCertificateDuration=24h\" \\ --set \"app.tls.rootCAFile=/var/run/secrets/istio-csr/ca.pem\" \\ --set \"volumeMounts[0].name=root-ca\" \\ --set \"volumeMounts[0].mountPath=/var/run/secrets/istio-csr\" \\ --set \"volumes[0].name=root-ca\" \\ --set \"volumes[0].secret.secretName=istio-root-ca\" 4. Install Istio with custom configurations to replace istiod with cert-manager istio-csr as the certificate provider for the mesh. This process can be carried out using the Istio Operator . apiVersion : install.istio.io/v1alpha1 kind : IstioOperator metadata : name : istio namespace : istio-system spec : profile : \"demo\" hub : gcr.io/istio-release values : global : # Change certificate provider to cert-manager istio agent for istio agent caAddress : cert-manager-istio-csr.cert-manager.svc:443 components : pilot : k8s : env : # Disable istiod CA Sever functionality - name : ENABLE_CA_SERVER value : \"false\" overlays : - apiVersion : apps/v1 kind : Deployment name : istiod patches : # Mount istiod serving and webhook certificate from Secret mount - path : spec.template.spec.containers.[name:discovery].args[7] value : \"--tlsCertFile=/etc/cert-manager/tls/tls.crt\" - path : spec.template.spec.containers.[name:discovery].args[8] value : \"--tlsKeyFile=/etc/cert-manager/tls/tls.key\" - path : spec.template.spec.containers.[name:discovery].args[9] value : \"--caCertFile=/etc/cert-manager/ca/root-cert.pem\" - path : spec.template.spec.containers.[name:discovery].volumeMounts[6] value : name : cert-manager mountPath : \"/etc/cert-manager/tls\" readOnly : true - path : spec.template.spec.containers.[name:discovery].volumeMounts[7] value : name : ca-root-cert mountPath : \"/etc/cert-manager/ca\" readOnly : true - path : spec.template.spec.volumes[6] value : name : cert-manager secret : secretName : istiod-tls - path : spec.template.spec.volumes[7] value : name : ca-root-cert configMap : defaultMode : 420 name : istio-ca-root-cert Deploy the above custom resource you created. istioctl operator init kubectl apply -f istio-custom-config.yaml Now you can deploy a workload to the mesh in your EKS cluster and enforce mTLS .","title":"Setup Instructions"},{"location":"security/docs/network/#additional-resources_1","text":"How to implement cert-manager and the ACM Private CA plugin to enable TLS in EKS . Setting up end-to-end TLS encryption on Amazon EKS with the new AWS Load Balancer Controller and ACM Private CA . Private CA Kubernetes cert-manager plugin on Github . Private CA Kubernetes cert-manager plugin user guide . How to use AWS Private Certificate Authority short-lived certificate mode","title":"Additional Resources"},{"location":"security/docs/network/#tooling","text":"Verifying Service Mesh TLS in Kubernetes, Using ksniff and Wireshark ksniff egress-operator An operator and DNS plugin to control egress traffic from your cluster without protocol inspection","title":"Tooling"},{"location":"security/docs/pods.kr/","text":"{'name': 'English', 'build': True} \ud3ec\ub4dc \ubcf4\uc548 \u00b6 \ud3ec\ub4dc \uc0ac\uc591\uc5d0\ub294 \uc804\ubc18\uc801\uc778 \ubcf4\uc548 \ud0dc\uc138\ub97c \uac15\ud654\ud558\uac70\ub098 \uc57d\ud654\uc2dc\ud0ac \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2e4\ubb34\uc790\ub85c\uc11c \uc8fc\uc694 \uad00\uc2ec\uc0ac\ub294 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uac00 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc758 \uaca9\ub9ac \uacbd\uacc4\ub97c \ubc97\uc5b4\ub098 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ub9ac\ub205\uc2a4 \uae30\ub2a5 \u00b6 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud504\ub85c\uc138\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c [ Linux ] \ub8e8\ud2b8 \uc0ac\uc6a9\uc790\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub0b4\uc758 \ub8e8\ud2b8 \uc791\uc5c5\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc774 \ucee8\ud14c\uc774\ub108\uc5d0 \ud560\ub2f9\ud558\ub294 Linux \uae30\ub2a5 \uc138\ud2b8\uc5d0 \uc758\ud574 \ubd80\ubd84\uc801\uc73c\ub85c \uc81c\ud55c\ub418\uc9c0\ub9cc \uc774\ub7ec\ud55c \uae30\ubcf8 \uad8c\ud55c\uc744 \ud1b5\ud574 \uacf5\uaca9\uc790\ub294 \uad8c\ud55c\uc744 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\ud558\uac70\ub098 \ud638\uc2a4\ud2b8\uc5d0 \ubc14\uc778\ub529\ub41c \ubbfc\uac10\ud55c \uc815\ubcf4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\ubc00 \ubc0f ConfigMap\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ucee8\ud14c\uc774\ub108\uc5d0 \ud560\ub2f9\ub41c \uae30\ubcf8 \uae30\ub2a5 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uac01 \uae30\ub2a5\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 http://man7.org/linux/man-pages/man7/capabilities.7.html . CAP_AUDIT_WRITE, CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_FSETID, CAP_KILL, CAP_MKNOD, CAP_NET_BIND_SERVICE, CAP_NET_RAW, CAP_SETGID, CAP_SETUID, CAP_SETFCAP, CAP_SETPCAP, CAP_SYS_CHROOT \uc815\ubcf4 EC2 \ubc0f Fargate \ud3ec\ub4dc\uc5d0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc55e\uc11c \uc5b8\uae09\ud55c \uae30\ub2a5\uc774 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ub610\ud55c Linux \uae30\ub2a5\uc740 Fargate \ud3ec\ub4dc\uc5d0\uc11c\ub9cc \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uc788\ub294 \uc0c1\ud0dc\ub85c \uc2e4\ud589\ub418\ub294 \ud3ec\ub4dc \ub294 \ud638\uc2a4\ud2b8\uc758 \ub8e8\ud2b8\uc640 \uc5f0\uacb0\ub41c Linux \uae30\ub2a5\uc758 all \uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4. \ub178\ub4dc \uc2b9\uc778 \u00b6 \ub178\ub4dc \uad8c\ud55c \ubd80\uc5ec ]( https://kubernetes.io/docs/reference/access-authn-authz/node/ ) \ub77c\ub294 \uad8c\ud55c \ubd80\uc5ec \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 . \ub178\ub4dc \uad8c\ud55c \ubd80\uc5ec\ub294 kubelet\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 API \uc694\uccad\uc5d0 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uace0 \ub178\ub4dc\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77d\uae30 \uc791\uc5c5: \uc11c\ube44\uc2a4 \ub05d\uc810 \ub178\ub4dc \ud3ec\ub4dc kubelet\uc758 \ub178\ub4dc\uc5d0 \ubc14\uc778\ub529\ub41c \ud3ec\ub4dc\uc640 \uad00\ub828\ub41c \ube44\ubc00, \uad6c\uc131 \ub9f5, \uc601\uad6c \ubcfc\ub968 \ud074\ub808\uc784 \ubc0f \uc601\uad6c \ubcfc\ub968 \uc4f0\uae30 \uc791\uc5c5: \ub178\ub4dc \ubc0f \ub178\ub4dc \uc0c1\ud0dc( NodeRestriction \ud5c8\uc6a9 \ud50c\ub7ec\uadf8\uc778\uc744 \ud65c\uc131\ud654\ud558\uc5ec kubelet\uc774 \uc790\uc2e0\uc758 \ub178\ub4dc\ub97c \uc218\uc815\ud558\ub3c4\ub85d \uc81c\ud55c) pod \ubc0f pod \uc0c1\ud0dc( NodeRestriction \uc2b9\uc778 \ud50c\ub7ec\uadf8\uc778\uc744 \ud65c\uc131\ud654\ud558\uc5ec kubelet\uc774 \uc790\uc2e0\uc5d0\uac8c \ubc14\uc778\ub529\ub41c pod\ub97c \uc218\uc815\ud558\ub3c4\ub85d \uc81c\ud55c) \uc774\ubca4\ud2b8 \uc778\uc99d \uad00\ub828 \uc791\uc5c5: TLS \ubd80\ud2b8\uc2a4\ud2b8\ub798\ud551\uc744 \uc704\ud55c CertificateSigningRequest(CSR) API\uc5d0 \ub300\ud55c \uc77d\uae30/\uc4f0\uae30 \uc561\uc138\uc2a4 \uc704\uc784\ub41c \uc778\uc99d/\uad8c\ud55c \ud655\uc778\uc744 \uc704\ud574 TokenReview \ubc0f SubjectAccessReview\ub97c \uc0dd\uc131\ud558\ub294 \uae30\ub2a5 EKS\ub294 \ub178\ub4dc \uc81c\ud55c \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uac00 \uc81c\ud55c\ub41c \ub178\ub4dc \uc18d\uc131 \ubc0f \ud3ec\ub4dc \uc138\ud2b8\ub9cc \uc218\uc815\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubc14\uc778\ub529\ub41c \uac1c\uccb4\uc785\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud558\ub294 \uacf5\uaca9\uc790\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uce21\uba74 \uc774\ub3d9\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 Kubernetes API\uc5d0\uc11c \ud658\uacbd\uc5d0 \ub300\ud55c \ubbfc\uac10\ud55c \uc815\ubcf4\ub97c \uc218\uc9d1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158 \u00b6 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP) \u00b6 \uacfc\uac70\uc5d0\ub294 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP) \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uac00 \ucda9\uc871\ud574\uc57c \ud558\ub294 \uc77c\ub828\uc758 \uc694\uad6c \uc0ac\ud56d\uc744 \uc9c0\uc815\ud588\uc2b5\ub2c8\ub2e4. \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.21\ubd80\ud130 PSP\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.25\uc5d0\uc11c \uc81c\uac70\ub420 \uc608\uc815\uc785\ub2c8\ub2e4. \uc8fc\ubaa9 Kubernetes \ubc84\uc804 1.21\uc5d0\uc11c PSP\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \ubc84\uc804 1.25\uae4c\uc9c0 \ub610\ub294 \ub300\uc548\uc73c\ub85c \uc804\ud658\ud558\ub294 \ub370 \ub300\ub7b5 2\ub144\uc774 \uac78\ub9bd\ub2c8\ub2e4. \uc774 \ubb38\uc11c \ub294 \uc774\ub7ec\ud55c \uc9c0\uc6d0 \uc911\ub2e8\uc758 \ub3d9\uae30\ub97c \uc124\uba85\ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \u00b6 PSP\ub294 \uc81c\uac70\ub420 \uc608\uc815\uc774\uba70 \ub354 \uc774\uc0c1 \ud65c\uc131 \uac1c\ubc1c \uc911\uc774 \uc544\ub2c8\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc640 \uc6b4\uc601\uc790\ub294 \uc774\ub7ec\ud55c \ubcf4\uc548 \uc81c\uc5b4\ub97c \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \uc194\ub8e8\uc158\uc73c\ub85c \uc774\ub7ec\ud55c \uc694\uad6c\ub97c \ucda9\uc871\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \uc5d0\ucf54\uc2dc\uc2a4\ud15c\uc758 PAC(Policy-as-code) \uc194\ub8e8\uc158 Kubernetes \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) PAC \ubc0f PSS \uc194\ub8e8\uc158\uc740 \ubaa8\ub450 PSP\uc640 \uacf5\uc874\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PSP\uac00 \uc81c\uac70\ub418\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 PSP\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ub54c \ucc44\ud0dd\uc774 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4. PSP\uc5d0\uc11c PSS\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uace0\ub824\ud558\ub294 \uacbd\uc6b0 \uc774 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45(PAC) \u00b6 PAC(Policy-as-code) \uc194\ub8e8\uc158\uc740 \uaddc\uc815\ub41c \uc790\ub3d9 \uc81c\uc5b4\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc0ac\uc6a9\uc790\ub97c \uc548\ub0b4\ud558\uace0 \uc6d0\uce58 \uc54a\ub294 \ub3d9\uc791\uc744 \ubc29\uc9c0\ud558\ub294 \uac00\ub4dc\ub808\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. PAC\ub294 Kubernetes \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6f9\ud6c4\ud06c \ud638\ucd9c\uc744 \ud1b5\ud574 Kubernetes API \uc11c\ubc84 \uc694\uccad \ud750\ub984\uc744 \uac00\ub85c\ucc44\uace0 \ubcc0\ud615 \ubc0f \uac80\uc99d\ud569\ub2c8\ub2e4. \ucf54\ub4dc\ub85c \uc791\uc131\ub418\uace0 \uc800\uc7a5\ub41c \uc815\ucc45\uc744 \uae30\ubc18\uc73c\ub85c \ud398\uc774\ub85c\ub4dc\ub97c \uc694\uccad\ud569\ub2c8\ub2e4. \ubcc0\ud615 \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 API \uc11c\ubc84 \uc694\uccad\uc73c\ub85c \uc778\ud574 \ud074\ub7ec\uc2a4\ud130\uac00 \ubcc0\uacbd\ub418\uae30 \uc804\uc5d0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. PAC \uc194\ub8e8\uc158\uc740 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\ub958 \ubc0f \uac12\uc744 \uae30\ubc18\uc73c\ub85c API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uc77c\uce58\uc2dc\ud0a4\uace0 \uc791\ub3d9\ud569\ub2c8\ub2e4. Kubernetes\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc624\ud508 \uc18c\uc2a4 PAC \uc194\ub8e8\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc740 Kubernetes \ud504\ub85c\uc81d\ud2b8\uc758 \uc77c\ubd80\uac00 \uc544\ub2d9\ub2c8\ub2e4. Kubernetes \uc0dd\ud0dc\uacc4\uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc77c\ubd80 PAC \uc194\ub8e8\uc158\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. OPA/\uac8c\uc774\ud2b8\ud0a4\ud37c \uc624\ud508 \uc815\ucc45 \uc5d0\uc774\uc804\ud2b8(OPA) \uce74\uc774\ubca0\ub974\ub178 Kubewarden jsPolicy PAC \uc194\ub8e8\uc158\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uacfc \ud544\uc694\uc5d0 \ub9de\ub294 \uc801\uc808\ud55c \uc194\ub8e8\uc158\uc744 \uc120\ud0dd\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \ubc29\ubc95\uc740 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub300\ud55c \uc815\ucc45 \uae30\ubc18 \ub300\ucc45 - 1\ubd80 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc704\ud55c \uc815\ucc45 \uae30\ubc18 \ub300\ucc45 \u2013 2\ubd80 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) \ubc0f \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778(PSA) \u00b6 PSP \uc9c0\uc6d0 \uc911\ub2e8 \ubc0f \uae30\ubcf8 \uc81c\uacf5 Kubernetes \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc989\uc2dc \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud3ec\ub4dc \ubcf4\uc548\uc744 \uc81c\uc5b4\ud574\uc57c \ud558\ub294 \uc9c0\uc18d\uc801\uc778 \ud544\uc694\uc131\uc5d0 \ub300\uc751\ud558\uc5ec Kubernetes Auth Special Interest Group \ub294 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) \ubc0f [ \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778(PSA) ] \uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. ( https://kubernetes.io/docs/concepts/security/pod-security-admission/ ). PSA \ub178\ub825\uc5d0\ub294 PSS\uc5d0 \uc815\uc758\ub41c \ucee8\ud2b8\ub864\uc744 \uad6c\ud604 \ud558\ub294 \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uc6f9\ud6c4\ud06c \ud504\ub85c\uc81d\ud2b8 \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774 \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uc811\uadfc \ubc29\uc2dd\uc740 PAC \uc194\ub8e8\uc158\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ubc29\uc2dd\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4. Kubernetes \uc124\uba85\uc11c\uc5d0 \ub530\ub974\uba74 PSS\ub294 \"\ubcf4\uc548 \uc2a4\ud399\ud2b8\ub7fc\uc744 \uad11\ubc94\uc704\ud558\uac8c \ud3ec\uad04\ud558\ub294 \uc138 \uac00\uc9c0 \ub2e4\ub978 \uc815\ucc45\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ub204\uc801\ub418\uba70 \ub9e4\uc6b0 \ud5c8\uc6a9\uc801\uc778 \uac83\ubd80\ud130 \ub9e4\uc6b0 \uc81c\ud55c\uc801\uc778 \uac83\uae4c\uc9c0 \ub2e4\uc591\ud569\ub2c8\ub2e4.\" \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ub429\ub2c8\ub2e4. Privileged: \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740(\ubcf4\uc548\ub418\uc9c0 \uc54a\uc740) \uc815\ucc45\uc73c\ub85c \uac00\ub2a5\ud55c \uac00\uc7a5 \uad11\ubc94\uc704\ud55c \uc218\uc900\uc758 \uad8c\ud55c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uc815\ucc45\uc740 \uc54c\ub824\uc9c4 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc815\ucc45\uc758 \ubd80\uc7ac\uc785\ub2c8\ub2e4. \uc774\ub294 \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8, CNI, \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \ubc0f \uad8c\ud55c \uc788\ub294 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uae30\ud0c0 \uc2dc\uc2a4\ud15c \uc804\uccb4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uac19\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uae30\uc900: \uc54c\ub824\uc9c4 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ubc29\uc9c0\ud558\ub294 \ucd5c\uc18c \uc81c\ud55c \uc815\ucc45\uc785\ub2c8\ub2e4. \uae30\ubcf8(\ucd5c\uc18c \uc9c0\uc815) \ud3ec\ub4dc \uad6c\uc131\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc815\ucc45\uc740 hostNetwork, hostPID, hostIPC, hostPath, hostPort\uc758 \uc0ac\uc6a9, Linux \uae30\ub2a5 \ucd94\uac00 \ubd88\uac00 \ubc0f \uae30\ud0c0 \uba87 \uac00\uc9c0 \uc81c\ud55c \uc0ac\ud56d\uc744 \uae08\uc9c0\ud569\ub2c8\ub2e4. \uc81c\ud55c\ub428: \ud604\uc7ac \ud3ec\ub4dc \uac15\ud654 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c \uc5c4\uaca9\ud558\uac8c \uc81c\ud55c\ub41c \uc815\ucc45\uc785\ub2c8\ub2e4. \uc774 \uc815\ucc45\uc740 \uae30\uc900\uc120\uc5d0\uc11c \uc0c1\uc18d\ub418\uba70 \ub8e8\ud2b8 \ub610\ub294 \ub8e8\ud2b8 \uadf8\ub8f9\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\ub294 \uac83\uacfc \uac19\uc740 \ucd94\uac00 \uc81c\ud55c \uc0ac\ud56d\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc81c\ud55c\ub41c \uc815\ucc45\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uae30\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub4e4\uc740 \uc8fc\ub85c \ubcf4\uc548\uc5d0 \uc911\uc694\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ud30c\ub4dc \uc2e4\ud589\uc744 \uc704\ud55c \ud504\ub85c\ud30c\uc77c \uc744 \uc815\uc758\ud558\uba70, \uc138 \uac00\uc9c0 \uc218\uc900\uc758 \ud2b9\uad8c \uc561\uc138\uc2a4\uc640 \uc81c\ud55c\ub41c \uc561\uc138\uc2a4\ub85c \uc815\ub82c\ub429\ub2c8\ub2e4. PSS\uc5d0\uc11c \uc815\uc758\ud55c \ucee8\ud2b8\ub864\uc744 \uad6c\ud604\ud558\uae30 \uc704\ud574 PSA\ub294 \uc138 \uac00\uc9c0 \ubaa8\ub4dc\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. enforce: \uc815\ucc45\uc744 \uc704\ubc18\ud558\uba74 \ud3ec\ub4dc\uac00 \uac70\ubd80\ub429\ub2c8\ub2e4. \uac10\uc0ac: \uc815\ucc45 \uc704\ubc18\uc740 \uac10\uc0ac \ub85c\uadf8\uc5d0 \uae30\ub85d\ub41c \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uac10\uc0ac \uc8fc\uc11d \ucd94\uac00\ub97c \ud2b8\ub9ac\uac70\ud558\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uacbd\uace0: \uc815\ucc45\uc744 \uc704\ubc18\ud558\uba74 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uacbd\uace0\uac00 \ud45c\uc2dc\ub418\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc640 \ud504\ub85c\ud544(\uc81c\ud55c) \uc218\uc900\uc740 \uc544\ub798 \uc608\uc640 \uac19\uc774 \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec Kubernetes \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uad6c\uc131\ub429\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc791\ub3d9 \ubaa8\ub4dc\ub294 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc81c\uacf5\ud558\ub294 \ub2e4\ub978 \uc751\ub2f5\uc744 \uac16\uc2b5\ub2c8\ub2e4. enforce \ubaa8\ub4dc\ub294 \uac01 podSpec\uc774 \uad6c\uc131\ub41c \uc81c\ud55c \uc218\uc900\uc744 \uc704\ubc18\ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774 \ubaa8\ub4dc\uc5d0\uc11c\ub294 PodSpec\uc774 \uc801\uc6a9\ub41c PSS\ub97c \uc704\ubc18\ud558\ub354\ub77c\ub3c4 \ubc30\ud3ec\uc640 \uac19\uc774 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \ud3ec\ub4dc\uac00 \uc544\ub2cc Kubernetes \uac1c\uccb4\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ubc30\ud3ec\uac00 \uc801\uc6a9\ub418\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub41c \ubc30\ud3ec \uac1c\uccb4\uac00 \ud3ec\ub4dc \uc0dd\uc131 \uc2e4\ud328\uc5d0 \uc18d\ud55c\ub2e4\ub294 \uc989\uac01\uc801\uc778 \ud45c\uc2dc\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc774\uac83\uc740 \uc5b4\ub824\uc6b4 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc785\ub2c8\ub2e4. \uc798\ubabb\ub41c podSpec\uc740 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. kubectl get deploy <DEPLOYMENT_NAME> -oyaml \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec \ub9ac\uc18c\uc2a4\ub97c \uac80\uc0ac\ud558\uba74 \uc544\ub798\uc640 \uac19\uc774 \uc2e4\ud328\ud55c \ud3ec\ub4dc .status.conditions \uc694\uc18c\uc758 \uba54\uc2dc\uc9c0\uac00 \ub178\ucd9c\ub429\ub2c8\ub2e4. ... \uc0c1\ud0dc : \uc870\uac74 : - lastTransitionTime : \"2022-01-20T01:02:08Z\" lastUpdateTime : \"2022-01-20T01:02:08Z\" \uba54\uc2dc\uc9c0 : 'pods \"test-688f68dc87-tw587\"\uc774 \uae08\uc9c0\ub428: PodSecurity \"restricted:latest\"\ub97c \uc704\ubc18\ud568: allowPrivilegeEscalation != false(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.allowPrivilegeEscalation=false\ub85c \uc124\uc815\ud574\uc57c \ud568), \ubb34\uc81c\ud55c \uae30\ub2a5(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.capabilities.drop=[\"ALL\"]\uc744 \uc124\uc815\ud574\uc57c \ud568), runAsNonRoot != true(\ud3ec\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.runAsNonRoot=true\ub85c \uc124\uc815\ud574\uc57c \ud568), seccompProfile(\ud3ec\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.seccompProfile.type\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \"RuntimeDefault\" \ub610\ub294 \"Localhost\"\ub85c)' \uc774\uc720 : FailedCreate \uc0c1\ud0dc : \"\ucc38\" \uc720\ud615 : ReplicaFailure ... audit \ubc0f warn \ubaa8\ub4dc\uc5d0\uc11c \ud3ec\ub4dc \uc81c\ud55c\uc740 \uc704\ubc18 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uace0 \uc2dc\uc791\ub418\ub294 \uac83\uc744 \ub9c9\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc5d0\uc11c\ub294 API \uc11c\ubc84 \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uac10\uc0ac \uc8fc\uc11d \ubc0f API \uc11c\ubc84 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud55c \uacbd\uace0(\uc608: kubectl )\ub294 pod\uc640 pod\ub97c \uc0dd\uc131\ud558\ub294 \uac1c\uccb4\uc5d0 \uc704\ubc18\uc774 \uc788\ub294 podSpec\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc744 \ub54c \uac01\uac01 \ud2b8\ub9ac\uac70\ub429\ub2c8\ub2e4. kubectl \uacbd\uace0 \uba54\uc2dc\uc9c0\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uacbd\uace0: PodSecurity \"restricted:latest\" \uc704\ubc18 : allowPrivilegeEscalation != false (\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.allowPrivilegeEscalation=false\ub97c \uc124\uc815 \ud574\uc57c \ud568), \ubb34\uc81c\ud55c \uae30\ub2a5(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.capabilities.drop=[ \"ALL\" ] \uc744 \uc124\uc815 \ud574\uc57c \ud568) , runAsNonRoot != true (\ud31f \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.runAsNonRoot=true \ub85c \uc124\uc815 \ud574\uc57c \ud568), seccompProfile(\ud31f \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.seccompProfile.type\uc744 \"RuntimeDefault\" \ub610\ub294 \"Localhost\" \ub85c \uc124\uc815 \ud574\uc57c \ud568) deployment.apps/test \uc0dd\uc131\ub428 PSA audit \ubc0f warn \ubaa8\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc791\uc5c5\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 PSS\ub97c \ub3c4\uc785\ud560 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4. PSA \uc791\ub3d9 \ubaa8\ub4dc\ub294 \uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uc9c0 \uc54a\uc73c\uba70 \ub204\uc801 \ubc29\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ub2e8\uc77c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc5ec\ub7ec \ubaa8\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/audit : \uc81c\ud55c\ub428 pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c \ubc30\ud3ec\ub97c \uc801\uc6a9\ud560 \ub54c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uacbd\uace0 \ubc0f \uac10\uc0ac \uc8fc\uc11d\uc774 \uc81c\uacf5\ub418\ub294 \ubc18\uba74 \uc704\ubc18 \uc801\uc6a9\ub3c4 \ud3ec\ub4dc \uc218\uc900\uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc2e4\uc81c\ub85c \uc5ec\ub7ec PSA \ub808\uc774\ube14\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc11c\ub85c \ub2e4\ub978 \ud504\ub85c\ud544 \uc218\uc900\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/enforce : \uae30\uc900\uc120 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c PSA\ub294 baseline \ud504\ub85c\ud544 \uc218\uc900\uc744 \ucda9\uc871\ud558\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\uc758 \uc0dd\uc131\uc744 \ud5c8\uc6a9\ud55c \ub2e4\uc74c restricted \ud504\ub85c\ud544 \uc218\uc900 \uc744 \uc704\ubc18\ud558\ub294 \ud3ec\ub4dc(\ubc0f \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac1c\uccb4)\uc5d0\uc11c warn \ud558\ub3c4\ub85d \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub294 baseline \uc5d0\uc11c restricted \ud504\ub85c\ud544\ub85c \ubcc0\uacbd\ud560 \ub54c \uac00\ub2a5\ud55c \uc601\ud5a5\uc744 \ud655\uc778\ud558\ub294 \ub370 \uc720\uc6a9\ud55c \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4. \uae30\uc874 \ud3ec\ub4dc \u00b6 \uae30\uc874 \ud3ec\ub4dc\uac00 \uc788\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ub354 \uc81c\ud55c\uc801\uc778 PSS \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc218\uc815\ub418\uba74 audit \ubc0f warn \ubaa8\ub4dc\uac00 \uc801\uc808\ud55c \uba54\uc2dc\uc9c0\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 enforce \ubaa8\ub4dc\ub294 \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uacbd\uace0 \uba54\uc2dc\uc9c0\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uacbd\uace0: \"policy-test\" \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc758 \uae30\uc874 \ud3ec\ub4dc \uac00 \uc0c8\ub85c\uc6b4 PodSecurity \uc801\uc6a9 \uc218\uc900 \"restricted:latest\" \ub97c \uc704\ubc18\ud569\ub2c8\ub2e4. \uacbd\uace0: test-688f68dc87-htm8x: allowPrivilegeEscalation != false, \ubb34\uc81c\ud55c \uae30\ub2a5, runAsNonRoot != true, seccompProfile \ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc815\ucc45 \ud14c\uc2a4\ud2b8 \uad6c\uc131\ub428 \uba74\uc81c \u00b6 PSA\ub294 Exemptions \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2ec\ub9ac \uc801\uc6a9\ub418\uc5c8\uc744 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \uc704\ubc18 \uc9d1\ud589\uc744 \uc81c\uc678\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba74\uc81c\ub294 \uc544\ub798\uc5d0 \ub098\uc5f4\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc774\ub984: \uba74\uc81c\ub41c \uc778\uc99d(\ub610\ub294 \uc0ac\uce6d) \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uac00\uc9c4 \uc0ac\uc6a9\uc790\uc758 \uc694\uccad\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4. RuntimeClassNames: \uba74\uc81c \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub294 \ud3ec\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4: \uba74\uc81c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud3ec\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba74\uc81c\ub294 PSA \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uad6c\uc131 \uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc801\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4. API \uc11c\ubc84 \uad6c\uc131\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. Validating Webhook \uad6c\ud604\uc5d0\uc11c \uc608\uc678\ub294 Kubernetes ConfigMap \ub9ac\uc18c\uc2a4 \ub0b4\uc5d0\uc11c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pod-security-webhook \ucee8\ud14c\uc774\ub108 \uc5d0 \ubcfc\ub968\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub429\ub2c8\ub2e4 . api\ubc84\uc804 : v1 \uc885\ub958 : \ucee8\ud53c\uadf8\ub9f5 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud31f-\ubcf4\uc548-\uc6f9\ud6c4\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : pod-security-webhook \ub370\uc774\ud130 : podsecurityconfiguration.yaml : | apiVersion : pod-security.admission.config.k8s.io/v1beta1 \uc885\ub958 : PodSecurityConfiguration \uae30\ubcf8\uac12 : \uc801\uc6a9 : \"\uc81c\ud55c\ub428\" \uc2dc\ud589 \ubc84\uc804 : \"\ucd5c\uc2e0\" \uac10\uc0ac : \"\uc81c\ud55c\ub428\" \uac10\uc0ac \ubc84\uc804 : \"\ucd5c\uc2e0\" \uacbd\uace0 : \"\uc81c\ud55c\ub428\" \uacbd\uace0 \ubc84\uc804 : \"\ucd5c\uc2e0\" \uba74\uc81c : # \uba74\uc81c\ud560 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc758 \ubc30\uc5f4. \uc0ac\uc6a9\uc790 \uc774\ub984 : [] # \uba74\uc81c\ud560 \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 \uc774\ub984\uc758 \ubc30\uc5f4. \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 : [] # \uba74\uc81c\ud560 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc30\uc5f4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" , \"policy-test1\" ] \uc704\uc758 ConfigMap YAML\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc758 \uae30\ubcf8 PSS \uc218\uc900\uc740 \ubaa8\ub4e0 PSA \ubaa8\ub4dc, audit , enforce \ubc0f warn \uc5d0 \ub300\ud574 restricted \ub85c \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4 . \uc774\ub294 \uc608\uc678\uc778 namespaces: [\"kube-system\",\"policy-test1\"] \uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4 . \ub610\ud55c \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c ValidatingWebhookConfiguration \ub9ac\uc18c\uc2a4\uc5d0\uc11c pod-security-webhook \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub3c4 \uad6c\uc131\ub41c PSS\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. ... \uc6f9\ud6c4\ud06c : # \uac10\uc0ac \uc8fc\uc11d\uc5d0\ub294 \uc774 \uc774\ub984\uc774 \uc811\ub450\uc0ac\ub85c \ubd99\uc2b5\ub2c8\ub2e4. - \uc774\ub984 : \"pod-security-webhook.kubernetes.io\" # \ud398\uc77c\ud074\ub85c\uc988 \uc2b9\uc778 \uc6f9\ud6c4\ud06c\ub294 \uc6b4\uc601\uc0c1 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ubb34\uc2dc \uc2e4\ud328 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc9c0\ub9cc # \ubcf4\uc548 \uc7a5\ub2e8\uc810\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. failurePolicy : \uc2e4\ud328 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc120\ud0dd\uae30 : # \uc21c\ud658 \uc885\uc18d\uc131\uc744 \ud53c\ud558\uae30 \uc704\ud574 webhook \uc790\uccb4\ub97c \uba74\uc81c\ud569\ub2c8\ub2e4. \uc77c\uce58 \ud45c\ud604 : - \ud0a4 : kubernetes.io/metadata.name \uc5f0\uc0b0\uc790 : NotIn \uac12 : [ \"pod-security-webhook\" ] ... \uc8fc\ubaa9 Kubernetes \ubc84\uc804 1.22 \ubc0f 1.23_\uc5d0\uc11c \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778 \uae30\ub2a5\uc740 \uac01\uac01 _alpha \ubc0f beta \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc801\uc5b4\ub3c4 GA\uae4c\uc9c0\ub294 \uc774 \uc9c0\uce68 \uc5d0\uc11c \uad6c\uc131\ub41c \uac80\uc99d \uc6f9\ud6c5\uc744 \ud1b5\ud574 \ud604\uc7ac \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Policy-as-Code\uc640 Pod \ubcf4\uc548 \ud45c\uc900 \uc911\uc5d0\uc11c \uc120\ud0dd \u00b6 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS)\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc5d0\ucf54\uc2dc\uc2a4\ud15c\uc758 \uc194\ub8e8\uc158\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc194\ub8e8\uc158\uc744 \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP)\uc744 \ub300\uccb4\ud558\uae30 \uc704\ud574 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4. PAC(Policy-as-Code) \uc194\ub8e8\uc158\uc740 \ud6e8\uc52c \ub354 \uc720\uc5f0\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\ub2e8\uc810 \ubaa9\ub85d\uc740 \ud31f(Pod) \ubcf4\uc548 \uc194\ub8e8\uc158\uc5d0 \ub300\ud574 \uc815\ubcf4\uc5d0 \uc785\uac01\ud55c \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Policy-as-code(Policy-as-code(\ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uacfc \ube44\uad50) \uc7a5\uc810: \ubcf4\ub2e4 \uc720\uc5f0\ud558\uace0 \uc138\ubd84\ud654\ub428(\ud544\uc694\ud55c \uacbd\uc6b0 \ub9ac\uc18c\uc2a4 \uc18d\uc131\uae4c\uc9c0) \ud3ec\ub4dc\uc5d0\ub9cc \uc9d1\uc911\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \ub2e4\uc591\ud55c \ub9ac\uc18c\uc2a4 \ubc0f \uc791\uc5c5\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c\ub9cc \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\ubcf4\ub2e4 \ub354 \uc131\uc219\ud568 \uc758\uc0ac\uacb0\uc815\uc740 \uae30\uc874 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 \ub370\uc774\ud130(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984)\ubfd0\ub9cc \uc544\ub2c8\ub77c API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\uc758 \ubaa8\ub4e0 \ud56d\ubaa9\uc744 \uae30\ubc18\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc804\uc5d0 API \uc11c\ubc84 \uc694\uccad \ubcc0\uacbd \uc9c0\uc6d0(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984) \ubcf4\uc644 \uc815\ucc45 \ubc0f Kubernetes \ub9ac\uc18c\uc2a4 \uc0dd\uc131 \uac00\ub2a5(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984 - Pod \uc815\ucc45 \uc5d0\uc11c Kyverno \ub294 \ubc30\ud3ec. Kyverno\ub294 \ub610\ud55c Generate Rules \ub97c \uc0ac\uc6a9\ud558\uc5ec \"\uc0c8 \ub9ac\uc18c\uc2a4\uac00 \uc0dd\uc131\ub418\uac70\ub098 \uc18c\uc2a4\uac00 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c\" \ucd94\uac00 Kubernetes \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . ) Kubernetes API \uc11c\ubc84\ub97c \ud638\ucd9c\ud558\uae30 \uc804\uc5d0 CICD \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc67c\ucabd\uc73c\ub85c \uc774\ub3d9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984). \ubaa8\ubc94 \uc0ac\ub840, \uc870\uc9c1 \ud45c\uc900 \ub4f1\uacfc \uac19\uc774 \ubc18\ub4dc\uc2dc \ubcf4\uc548\uacfc \uad00\ub828\ub418\uc9c0 \uc54a\uc740 \ub3d9\uc791\uc744 \uad6c\ud604\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \uc774\uc678\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984) \uc720\uc5f0\uc131\uc73c\ub85c \uc778\ud574 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc0ac\uc6a9\uc790\uc758 \uc694\uad6c\uc5d0 \ub9de\uac8c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e8\uc810: Kubernetes\uc5d0 \ub0b4\uc7a5\ub418\uc9c0 \uc54a\uc74c \ud559\uc2b5, \uad6c\uc131 \ubc0f \uc9c0\uc6d0\uc774 \ub354 \ubcf5\uc7a1\ud568 \uc815\ucc45 \uc791\uc131\uc5d0\ub294 \uc0c8\ub85c\uc6b4 \uae30\uc220/\uc5b8\uc5b4/\uae30\ub2a5\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod \ubcf4\uc548 \uc2b9\uc778(Policy-as-Code\uc640 \ube44\uad50) \uc7a5\uc810: \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub0b4\uc7a5 \ub354 \uac04\ub2e8\ud55c \uad6c\uc131 \uc0ac\uc6a9\ud560 \uc0c8\ub85c\uc6b4 \uc5b8\uc5b4\ub098 \uc791\uc131\ud560 \uc815\ucc45\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uae30\ubcf8 \uc2b9\uc778 \uc218\uc900\uc774 privileged \ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \ubcf4\uc548 \ud504\ub85c\ud544\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc635\ud2b8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e8\uc810: Policy-as-Code\ub9cc\ud07c \uc720\uc5f0\ud558\uac70\ub098 \uc138\ubd84\ud654\ub418\uc9c0 \uc54a\uc74c \ub2e8 3\ub2e8\uacc4 \uc81c\ud55c \uc8fc\ub85c \ud3ec\ub4dc\uc5d0 \uc9d1\uc911 \uc694\uc57d \u00b6 \ud604\uc7ac PSP \uc678\uc5d0 \ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158\uc774 \uc5c6\uace0 \ud544\uc694\ud55c \ud3ec\ub4dc \ubcf4\uc548 \uc0c1\ud0dc\uac00 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS)\uc5d0 \uc815\uc758\ub41c \ubaa8\ub378\uc5d0 \ub9de\ub294 \uacbd\uc6b0 \uc815\ucc45 \ub300\uc2e0 PSS\ub97c \ucc44\ud0dd\ud558\ub294 \uac83\uc774 \ub354 \uc26c\uc6b4 \uacbd\ub85c\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc194\ub8e8\uc158. \uadf8\ub7ec\ub098 \ud31f(Pod) \ubcf4\uc548 \uc0c1\ud0dc\uac00 PSS \ubaa8\ub378\uc5d0 \uc801\ud569\ud558\uc9c0 \uc54a\uac70\ub098 PSS\uc5d0\uc11c \uc815\uc758\ud55c \uac83 \uc774\uc0c1\uc73c\ub85c \ucd94\uac00 \uc81c\uc5b4\ub97c \ucd94\uac00\ud558\ub824\ub294 \uacbd\uc6b0 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc774 \ub354 \uc801\ud569\ud574 \ubcf4\uc785\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 \ub354 \ub098\uc740 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc704\ud574 \uc5ec\ub7ec PSA(Pod Security Admission) \ubaa8\ub4dc \uc0ac\uc6a9 \u00b6 \uc55e\uc11c \uc5b8\uae09\ud588\ub4ef\uc774 PSA enforce \ubaa8\ub4dc\ub294 PSS \uc704\ubc18\uc774 \uc788\ub294 \ud3ec\ub4dc\uac00 \uc801\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0\ub9cc \ubc30\ud3ec\uc640 \uac19\uc740 \uc0c1\uc704 \uc218\uc900 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc911\uc9c0\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c\ub85c \ud3ec\ub4dc \uc801\uc6a9\uc5d0 \uc2e4\ud328\ud588\ub2e4\ub294 \ud45c\uc2dc \uc5c6\uc774 \ubc30\ud3ec\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9 \ud558\uc5ec \ubc30\ud3ec \uac1c\uccb4\ub97c \uac80\uc0ac\ud558\uace0 PSA\uc5d0\uc11c \uc2e4\ud328\ud55c \ud3ec\ub4dc \uba54\uc2dc\uc9c0\ub97c \uac80\uc0c9\ud560 \uc218 \uc788\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc774 \ub354 \uc88b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uac1c\uc120\ud558\ub824\uba74 \uc5ec\ub7ec PSA \ubaa8\ub4dc(\uac10\uc0ac, \uc2dc\ud589, \uacbd\uace0)\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/audit : \uc81c\ud55c\ub428 pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c enforce \ubaa8\ub4dc\uac00 \uc815\uc758\ub41c \uacbd\uc6b0 \uac01 podSpec\uc5d0\uc11c PSS \uc704\ubc18\uc774 \uc788\ub294 \ubc30\ud3ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c Kubernetes API \uc11c\ubc84\uc5d0 \uc801\uc6a9\ud558\ub824\uace0 \ud558\uba74 \ubc30\ud3ec\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub418\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 audit \ubc0f warn \ubaa8\ub4dc\ub3c4 \ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c API \uc11c\ubc84 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uacbd\uace0 \uba54\uc2dc\uc9c0\ub97c \uc218\uc2e0\ud558\uace0 API \uc11c\ubc84 \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\uc5d0\ub3c4 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uad8c\ud55c \uc788\ub294 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucee8\ud14c\uc774\ub108 \uc81c\ud55c \u00b6 \uc5b8\uae09\ud55c \ubc14\uc640 \uac19\uc774 \uad8c\ud55c\uc774 \uc788\ub294 \uc0c1\ud0dc\ub85c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108\ub294 \ud638\uc2a4\ud2b8\uc758 \ub8e8\ud2b8\uc5d0 \ud560\ub2f9\ub41c \ubaa8\ub4e0 Linux \uae30\ub2a5\uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc758 \uad8c\ud55c\uacfc \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Fargate\ub294 \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uac00 AWS\uac00 \uad00\ub9ac\ud558\ub294 \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \"\uc11c\ubc84\ub9ac\uc2a4\" \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uc2dc\uc791 \uc720\ud615\uc785\ub2c8\ub2e4. Fargate\ub97c \uc0ac\uc6a9\ud558\uba74 \uad8c\ud55c \uc788\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\uac70\ub098 hostNetwork \ub610\ub294 hostPort\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud3ec\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub8e8\ud2b8\ub85c \ud504\ub85c\uc138\uc2a4\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \u00b6 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub294 \uacf5\uaca9\uc790\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ucde8\uc57d\uc131\uc744 \uc545\uc6a9\ud558\uace0 \uc2e4\ud589 \uc911\uc778 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc178 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc744 \uc218 \uc788\ub294 \uacbd\uc6b0 \ubb38\uc81c\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \ubc29\ubc95\uc73c\ub85c \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0\uc11c \uc178\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. \ub458\uc9f8, Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. Kubernetes podSpec\uc5d0\ub294 spec.securityContext \uc544\ub798\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud560 \uc0ac\uc6a9\uc790 \ubc0f/\ub610\ub294 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uac01\uac01 runAsUser \ubc0f runAsGroup \uc785\ub2c8\ub2e4. spec.securityContext \ubc0f \uad00\ub828 \uc694\uc18c \uc758 \uc0ac\uc6a9\uc744 \uac15\uc81c\ud558\uae30 \uc704\ud574 \ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45 \ub610\ub294 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uc744 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 etcd\uc5d0 \uc720\uc9c0\ub418\uae30 \uc804\uc5d0 \uc778\ubc14\uc6b4\ub4dc Kubernetes API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uac80\uc99d\ud560 \uc218 \uc788\ub294 \uc815\ucc45 \ub610\ub294 \ud504\ub85c\ud544\uc744 \uc791\uc131 \ubc0f/\ub610\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc740 \uc778\ubc14\uc6b4\ub4dc \uc694\uccad\uc744 \ubcc0\uacbd\ud558\uace0 \uacbd\uc6b0\uc5d0 \ub530\ub77c \uc0c8 \uc694\uccad\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Docker\uc5d0\uc11c Docker\ub97c \uc2e4\ud589\ud558\uac70\ub098 \ucee8\ud14c\uc774\ub108\uc5d0 \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624. \u00b6 \uc774\ub807\uac8c \ud558\uba74 \ud3b8\ub9ac\ud558\uac8c Docker \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc/\uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc \uae30\ubcf8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc5d0 \ub300\ud55c \ub178\ub4dc\uc758 \uc644\uc804\ud55c \uc81c\uc5b4\ub97c \uc591\ub3c4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubernetes\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 Kaniko , buildah , img \ub610\ub294 CodeBuild \uac19\uc740 \ube4c\ub4dc \uc11c\ube44\uc2a4 \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \ube4c\ub4dc\uc640 \uac19\uc740 CICD \ucc98\ub9ac\uc5d0 \uc0ac\uc6a9\ub418\ub294 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub294 \ubcf4\ub2e4 \uc77c\ubc18\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\uc640 \uaca9\ub9ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. hostPath \uc0ac\uc6a9\uc744 \uc81c\ud55c\ud558\uac70\ub098 hostPath\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc811\ub450\uc0ac\ub97c \uc81c\ud55c\ud558\uace0 \ubcfc\ub968\uc744 \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4. \u00b6 hostPath \ub294 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub85c \uc9c1\uc811 \ub514\ub809\ud1a0\ub9ac\ub97c \ub9c8\uc6b4\ud2b8\ud558\ub294 \ubcfc\ub968\uc785\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \uac70\uc758 \uc5c6\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 \uc704\ud5d8\uc744 \uc778\uc2dd\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub418\ub294 \ud3ec\ub4dc\ub294 hostPath\uc5d0 \uc758\ud574 \ub178\ucd9c\ub41c \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc4f0\uae30 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uac16\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uacf5\uaca9\uc790\ub294 kubelet \uc124\uc815\uc744 \uc218\uc815\ud558\uace0, /etc/shadow\uc640 \uac19\uc774 hostPath\uc5d0 \uc758\ud574 \uc9c1\uc811 \ub178\ucd9c\ub418\uc9c0 \uc54a\ub294 \ub514\ub809\ud1a0\ub9ac \ub610\ub294 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc2ec\ubcfc\ub9ad \ub9c1\ud06c\ub97c \uc0dd\uc131\ud558\uace0, ssh \ud0a4\ub97c \uc124\uce58\ud558\uace0, \ud638\uc2a4\ud2b8\uc5d0 \ub9c8\uc6b4\ud2b8\ub41c \ube44\ubc00\uc744 \uc77d\uace0, \uae30\ud0c0 \uc545\uc758\uc801\uc778 \uac83\ub4e4\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. hostPath\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 spec.containers.volumeMounts \ub97c readOnly \ub85c \uad6c\uc131\ud558\uc2ed\uc2dc\uc624 . \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubcfc\ub968 \ub9c8\uc6b4\ud2b8 : - \uc774\ub984 : hostPath-\ubcfc\ub968 \uc77d\uae30 \uc804\uc6a9 : \ucc38 mountPath : /\ud638\uc2a4\ud2b8 \uacbd\ub85c \ub610\ud55c \uc815\ucc45 \ucf54\ub4dc \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec hostPath \ubcfc\ub968\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub514\ub809\ud1a0\ub9ac\ub97c \uc81c\ud55c\ud558\uac70\ub098 hostPath \uc0ac\uc6a9\uc744 \ubaa8\ub450 \ubc29\uc9c0\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900 Baseline \ub610\ub294 Restricted \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec hostPath \uc0ac\uc6a9\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uad8c\ud55c \uc0c1\uc2b9\uc758 \uc704\ud5d8\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Seth Art\uc758 \ube14\ub85c\uadf8 Bad Pods: Kubernetes Pod Privilege Escalation \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. . \ub9ac\uc18c\uc2a4 \uacbd\ud569 \ubc0f DoS \uacf5\uaca9\uc744 \ud53c\ud558\uae30 \uc704\ud574 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c \uc124\uc815 \u00b6 \uc694\uccad\uc774\ub098 \uc81c\ud55c\uc774 \uc5c6\ub294 \ud3ec\ub4dc\ub294 \uc774\ub860\uc801\uc73c\ub85c \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub97c \uc18c\ube44\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \ud3ec\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uc608\uc57d\ub418\uba74 \ub178\ub4dc\uc5d0\uc11c CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \ubc1c\uc0dd\ud558\uc5ec Kubelet\uc774 \uc885\ub8cc\ub418\uac70\ub098 \ub178\ub4dc\uc5d0\uc11c \ud3ec\ub4dc\uac00 \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc77c\uc774 \ud568\uaed8 \ubc1c\uc0dd\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218\ub294 \uc5c6\uc9c0\ub9cc \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc124\uc815\ud558\uba74 \ub9ac\uc18c\uc2a4 \uacbd\ud569\uc744 \ucd5c\uc18c\ud654\ud558\uace0 \ub9ac\uc18c\uc2a4\ub97c \uacfc\ub3c4\ud558\uac8c \uc18c\ube44\ud558\ub294 \uc798\ubabb \uc791\uc131\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c \uc778\ud55c \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. podSpec \uc744 \uc0ac\uc6a9\ud558\uba74 CPU \ubc0f \uba54\ubaa8\ub9ac\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\ub294 \ucd08\uacfc \uc2e0\uccad\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc555\ucd95 \uac00\ub2a5\ud55c \ub9ac\uc18c\uc2a4\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uba54\ubaa8\ub9ac\ub294 \uc555\ucd95\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc989, \uc5ec\ub7ec \ucee8\ud14c\uc774\ub108 \uac04\uc5d0 \uacf5\uc720\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. CPU \ub610\ub294 \uba54\ubaa8\ub9ac\uc5d0 \ub300\ud574 requests \ub97c \uc9c0\uc815\ud560 \ub54c \ubcf8\uc9c8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\uac00 \ud655\ubcf4\ud560 \uc218 \uc788\ub294 memory \uc758 \uc591\uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubernetes\ub294 \ud3ec\ub4dc\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc758 \uc694\uccad\uc744 \uc9d1\uacc4\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc608\uc57d\ud560 \ub178\ub4dc\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc694\uccad\ub41c \uba54\ubaa8\ub9ac \uc591\uc744 \ucd08\uacfc\ud558\uba74 \ub178\ub4dc\uc5d0 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \uc788\uc73c\uba74 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Limits \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uc758 \ucd5c\ub300\ub7c9\uc774\uba70 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c cgroup \uc758 memory.limit_in_bytes \uac12\uc5d0 \uc9c1\uc811 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 OOM \uc885\ub8cc\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 CPU \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud301 \ucee8\ud14c\uc774\ub108 resources.limits \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9(\ub9ac\uc18c\uc2a4 \ud48b\ud504\ub9b0\ud2b8\ub77c\uace0\ub3c4 \ud568)\uc740 \ubd80\ud558 \ud14c\uc2a4\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ub370\uc774\ud130 \uae30\ubc18\uc774\uace0 \uc815\ud655\ud574\uc57c \ud569\ub2c8\ub2e4. \uc815\ud655\ud558\uace0 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uacf5\uac04\uc774 \uc5c6\uc73c\uba74 \ucee8\ud14c\uc774\ub108 'resources.limits'\ub97c \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 'resources.limits.memory'\ub294 \uc7a0\uc7ac\uc801\uc778 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4 \uc81c\ud55c \ubd80\uc815\ud655\uc131\uc744 \uc124\uba85\ud558\uae30 \uc704\ud574 \uad00\ucc30 \uac00\ub2a5\ud55c \ucd5c\ub300\uac12\ubcf4\ub2e4 20-30% \ub192\uac8c \ud328\ub529\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes\ub294 \uc138 \uac00\uc9c0 \uc11c\ube44\uc2a4 \ud488\uc9c8(QoS) \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ubcf4\uc7a5 \ud30c\uc5f4 \uac00\ub2a5 \ucd5c\uc120\uc758 \ub178\ub825 \uc81c\ud55c \ubc0f \uc694\uccad\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ud3ec\ub4dc\ub294 best-effort (\uac00\uc7a5 \ub0ae\uc740 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. Best-effort \ud3ec\ub4dc\ub294 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud560 \ub54c \uac00\uc7a5 \uba3c\uc800 \uc885\ub8cc\ub429\ub2c8\ub2e4. \ud3ec\ub4dc \ub0b4\uc758 all \ucee8\ud14c\uc774\ub108 \uc5d0 \uc81c\ud55c\uc774 \uc124\uc815 \ub418\uac70\ub098 \uc694\uccad \ubc0f \uc81c\ud55c\uc774 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uace0 0\uc774 \uc544\ub2cc \uacbd\uc6b0 \ud3ec\ub4dc\ub294 guaranteed (\uac00\uc7a5 \ub192\uc740 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \ubcf4\uc7a5\ub41c \ud3ec\ub4dc\ub294 \uad6c\uc131\ub41c \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uc9c0 \uc54a\ub294 \ud55c \uc885\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc0f \uc694\uccad\uc774 0\uc774 \uc544\ub2cc \ub2e4\ub978 \uac12\uc73c\ub85c \uad6c\uc131\ub418\uac70\ub098 \ud3ec\ub4dc \ub0b4\uc758 \ud55c \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uace0 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108\ub294 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc81c\ud55c\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uac70\ub098 \uc124\uc815\ub41c \uacbd\uc6b0 \ud3ec\ub4dc\ub294 burstable (\uc911\uac04 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud3ec\ub4dc\uc5d0\ub294 \uc77c\ubd80 \ub9ac\uc18c\uc2a4 \ubcf4\uc7a5\uc774 \uc788\uc9c0\ub9cc \uc694\uccad\ub41c \uba54\ubaa8\ub9ac\ub97c \ucd08\uacfc\ud558\uba74 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \uc694\uccad\uc740 \ucee8\ud14c\uc774\ub108 cgroup\uc758 memory_limit_in_bytes \uac12\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. cgroup \uc81c\ud55c\uc740 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba54\ubaa8\ub9ac \uc591\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc694\uccad \uac12\uc744 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uba74 \ub178\ub4dc\uac00 \uba54\ubaa8\ub9ac \uc555\ub825\uc744 \ubc1b\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 kubelet\uc5d0 \uc758\ud574 \uc885\ub8cc \ub300\uc0c1\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc6b0\uc120\uc21c\uc704 \uc870\uac74 \uc8fd\uc774\uae30 \uc870\uac74 \ubcf4\uc7a5 \ucd5c\uace0 \uc81c\ud55c = \uc694\uccad != 0 \uba54\ubaa8\ub9ac \uc81c\ud55c\ub9cc \ucd08\uacfc \ubc84\uc2a4\ud2b8 \uac00\ub2a5 \ub9e4\uccb4 \uc81c\ud55c != \uc694\uccad != 0 \uc694\uccad \uba54\ubaa8\ub9ac\ub97c \ucd08\uacfc\ud558\uba74 \uc8fd\uc744 \uc218 \uc788\uc74c \ucd5c\uc120\uc758 \ub178\ub825 \ucd5c\uc800 \ud55c\ub3c4 \ubc0f \uc694\uccad\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc74c \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud560 \ub54c \uac00\uc7a5 \uba3c\uc800 \uc8fd\uc784\uc744 \ub2f9\ud568 \ub9ac\uc18c\uc2a4 QoS\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 Kubernetes \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc124\uc815\ud558\uac70\ub098 \uc81c\ud55c \ubc94\uc704 . \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uba74 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \ub9ac\uc18c\uc2a4 \uc591(\uc608: CPU \ubc0f RAM)\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc801\uc6a9\ub418\uba74 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\uc744 \ubcf4\ub2e4 \uc138\ubc00\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\ub2f9 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ucee8\ud14c\uc774\ub108\ub2f9 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\ub97c \ucd5c\uc18c/\ucd5c\ub300\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \uc694\uccad/\uc81c\ud55c \uac12\uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Policy-as-code \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc0dd\uc131\ub420 \ub54c \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub97c \uc0dd\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc74c \u00b6 \ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4\ub294 \uc2e4\ud589 \uc911\uc778 \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Sudo\ub294 SUID \ub610\ub294 SGID \ube44\ud2b8\uac00 \uc788\ub294 \ubc14\uc774\ub108\ub9ac\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774\uc5d0 \ub300\ud55c \uc88b\uc740 \uc608\uc785\ub2c8\ub2e4. \ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\uc790\uac00 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \ub610\ub294 \uadf8\ub8f9\uc758 \uad8c\ud55c\uc73c\ub85c \ud30c\uc77c\uc744 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. allowPrivilegeEscalation \uc744 false \ub85c \uc124\uc815\ud558\ub294 \uc815\ucc45 \ucf54\ub4dc \ubcc0\uacbd \uc815\ucc45\uc744 \uad6c\ud604\ud558\uac70\ub098 podSpec \uc5d0\uc11c securityContext.allowPrivilegeEscalation \uc744 \uc124\uc815\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uad8c\ud55c \uc788\ub294 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . Policy-as-code \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc798\ubabb\ub41c \uc124\uc815\uc774 \uac10\uc9c0\ub41c \uacbd\uc6b0 API \uc11c\ubc84 \uc694\uccad\uc774 \uc131\uacf5\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uac00 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. ServiceAccount \ud1a0\ud070 \ud0d1\uc7ac \ube44\ud65c\uc131\ud654 \u00b6 Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ud3ec\ub4dc\uc758 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc \uc0ac\uc591 \ub610\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\uc5d0 \ub300\ud55c ServiceAccount \ud1a0\ud070 \uc790\ub3d9 \ub9c8\uc6b4\ud2b8 \ud2b9\uc815 ServiceAccount\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc8fc\ubaa9 ServiceAccount \ub9c8\uc6b4\ud305\uc744 \ube44\ud65c\uc131\ud654\ud574\ub3c4 \ud3ec\ub4dc\uac00 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4. \ud3ec\ub4dc\uac00 \ub124\ud2b8\uc6cc\ud06c\ub97c \uac00\uc9c0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub824\uba74 Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 [EKS \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810 \uc561\uc138\uc2a4][eks-ep-access] \ubc0f \uc0ac\uc6a9 \ud3ec\ub4dc \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\ub294 NetworkPolicy api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : pod-no-automount \uc0ac\uc591 : automountServiceAccountToken : \uac70\uc9d3 api\ubc84\uc804 : v1 \uc885\ub958 : ServiceAccount \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : sa-no-automount automountServiceAccountToken : \uac70\uc9d3 \uc11c\ube44\uc2a4 \uac80\uc0c9 \ube44\ud65c\uc131\ud654 \u00b6 \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\ub97c \uc870\ud68c\ud558\uac70\ub098 \ud638\ucd9c\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ud3ec\ub4dc\uc758 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod\uc5d0 \uc81c\uacf5\ub418\ub294 \uc815\ubcf4\uc758 \uc591\uc744 \uc904\uc785\ub2c8\ub2e4. Pod\uc758 DNS\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub4dc\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \ub178\ucd9c\ud558\uc9c0 \uc54a\ub294 \uc815\ucc45 \ud658\uacbd \ubcc0\uc218. \ud658\uacbd\uc5d0 \ub300\ud55c Kubernetes \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ubcc0\uc218 \uc11c\ube44\uc2a4 \ub9c1\ud06c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uae30\ubcf8\uac12 Pod\uc758 DNS \uc815\ucc45\uc5d0 \ub300\ud55c \uac12\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS\ub97c \uc0ac\uc6a9\ud558\ub294 \"ClusterFirst\"\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc774 \uc544\ub2cc \"\uae30\ubcf8\uac12\"\uc740 \uae30\ubcf8 \ub178\ub4dc\uc758 DNS \ud655\uc778\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubcf4\ub2e4 Pod DNS \uc815\ucc45\uc5d0 \ub300\ud55c Kubernetes \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc8fc\ubaa9 \uc11c\ube44\uc2a4 \ub9c1\ud06c\ub97c \ube44\ud65c\uc131\ud654\ud558\uace0 \ud3ec\ub4dc\uc758 DNS \uc815\ucc45\uc744 \ubcc0\uacbd\ud574\ub3c4 pod\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uac00\uc9c0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uacf5\uaca9\uc790 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS\uc5d0 \ub3c4\ub2ec\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \uc11c\ube44\uc2a4\ub97c \uacc4\uc18d \uc5f4\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4. (\uc608: dig SRV *.*.svc.cluster.local @$CLUSTER_DNS_IP ) \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4 \uac80\uc0c9, NetworkPolicy \uc0ac\uc6a9 \ud3ec\ub4dc \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\uae30 \uc704\ud574 api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : pod-no-service-info \uc0ac\uc591 : dnsPolicy : \uae30\ubcf8\uac12 # \"Default\"\ub294 \uc2e4\uc81c \uae30\ubcf8\uac12\uc774 \uc544\ub2d9\ub2c8\ub2e4. enableServiceLinks : \uac70\uc9d3 \uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc73c\ub85c \uc774\ubbf8\uc9c0 \uad6c\uc131 \u00b6 \uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc73c\ub85c \uc774\ubbf8\uc9c0\ub97c \uad6c\uc131\ud558\uba74 \uacf5\uaca9\uc790\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ubc14\uc774\ub108\ub9ac\ub97c \ub36e\uc5b4\uc4f0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uae30\ub85d\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc784\uc2dc \ub514\ub809\ud130\ub9ac\uc5d0 \uae30\ub85d\ud558\uac70\ub098 \ubcfc\ub968\uc744 \uc5f0\uacb0 \ubc0f \ub9c8\uc6b4\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc758 SecurityContext\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc124\uc815\ud558\uc5ec \uc774\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ... \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : readOnlyRootFilesystem : \ucc38 ... Policy-as-code \ubc0f Pod \ubcf4\uc548 \ud45c\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \uc2dc\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 Kubernetes\uc758 Windows \ucee8\ud14c\uc774\ub108 \uc5d0 \ub530\ub77c securityContext.readOnlyRootFilesystem \uc740 \ub2e4\uc74c\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ubc0f \uc2dc\uc2a4\ud15c \ud504\ub85c\uc138\uc2a4\uac00 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \uc704\ud574\uc11c\ub294 \uc4f0\uae30 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud558\ubbc0\ub85c Windows\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108\uc758 \uacbd\uc6b0 'true'. \ub3c4\uad6c \ubc0f \ub9ac\uc18c\uc2a4 \u00b6 open-policy-agent/gatekeeper-library: OPA Gatekeeper \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac OPA/Gatekeeper \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PSP\ub97c \ub300\uccb4\ud569\ub2c8\ub2e4. Kyverno \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac EKS\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \ubc0f Kyverno \uc815\ucc45 \ubaa8\uc74c. \uc815\ucc45 \uae30\ubc18 \ub300\ucc45: \ud30c\ud2b8 1 \uc815\ucc45 \uae30\ubc18 \ub300\ucc45: \ud30c\ud2b8 2 Pod Security Policy Migrator PSP\ub97c OPA/Gatekeeper, KubeWarden \ub610\ub294 Kyverno \uc815\ucc45\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ub3c4\uad6c","title":"\ud3ec\ub4dc \ubcf4\uc548"},{"location":"security/docs/pods.kr/#_1","text":"\ud3ec\ub4dc \uc0ac\uc591\uc5d0\ub294 \uc804\ubc18\uc801\uc778 \ubcf4\uc548 \ud0dc\uc138\ub97c \uac15\ud654\ud558\uac70\ub098 \uc57d\ud654\uc2dc\ud0ac \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \uc18d\uc131\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2e4\ubb34\uc790\ub85c\uc11c \uc8fc\uc694 \uad00\uc2ec\uc0ac\ub294 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uac00 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc758 \uaca9\ub9ac \uacbd\uacc4\ub97c \ubc97\uc5b4\ub098 \uae30\ubcf8 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub294 \uac83\uc785\ub2c8\ub2e4.","title":"\ud3ec\ub4dc \ubcf4\uc548"},{"location":"security/docs/pods.kr/#_2","text":"\ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ud504\ub85c\uc138\uc2a4\ub294 \uae30\ubcf8\uc801\uc73c\ub85c [ Linux ] \ub8e8\ud2b8 \uc0ac\uc6a9\uc790\uc758 \ucee8\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uc2e4\ud589\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub0b4\uc758 \ub8e8\ud2b8 \uc791\uc5c5\uc740 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc774 \ucee8\ud14c\uc774\ub108\uc5d0 \ud560\ub2f9\ud558\ub294 Linux \uae30\ub2a5 \uc138\ud2b8\uc5d0 \uc758\ud574 \ubd80\ubd84\uc801\uc73c\ub85c \uc81c\ud55c\ub418\uc9c0\ub9cc \uc774\ub7ec\ud55c \uae30\ubcf8 \uad8c\ud55c\uc744 \ud1b5\ud574 \uacf5\uaca9\uc790\ub294 \uad8c\ud55c\uc744 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\ud558\uac70\ub098 \ud638\uc2a4\ud2b8\uc5d0 \ubc14\uc778\ub529\ub41c \ubbfc\uac10\ud55c \uc815\ubcf4\uc5d0 \uc561\uc138\uc2a4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ube44\ubc00 \ubc0f ConfigMap\uc744 \ud3ec\ud568\ud569\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ucee8\ud14c\uc774\ub108\uc5d0 \ud560\ub2f9\ub41c \uae30\ubcf8 \uae30\ub2a5 \ubaa9\ub85d\uc785\ub2c8\ub2e4. \uac01 \uae30\ub2a5\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 http://man7.org/linux/man-pages/man7/capabilities.7.html . CAP_AUDIT_WRITE, CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_FSETID, CAP_KILL, CAP_MKNOD, CAP_NET_BIND_SERVICE, CAP_NET_RAW, CAP_SETGID, CAP_SETUID, CAP_SETFCAP, CAP_SETPCAP, CAP_SYS_CHROOT \uc815\ubcf4 EC2 \ubc0f Fargate \ud3ec\ub4dc\uc5d0\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \uc55e\uc11c \uc5b8\uae09\ud55c \uae30\ub2a5\uc774 \ud560\ub2f9\ub429\ub2c8\ub2e4. \ub610\ud55c Linux \uae30\ub2a5\uc740 Fargate \ud3ec\ub4dc\uc5d0\uc11c\ub9cc \uc0ad\uc81c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad8c\ud55c\uc774 \uc788\ub294 \uc0c1\ud0dc\ub85c \uc2e4\ud589\ub418\ub294 \ud3ec\ub4dc \ub294 \ud638\uc2a4\ud2b8\uc758 \ub8e8\ud2b8\uc640 \uc5f0\uacb0\ub41c Linux \uae30\ub2a5\uc758 all \uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. \uac00\ub2a5\ud558\uba74 \ud53c\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ub9ac\ub205\uc2a4 \uae30\ub2a5"},{"location":"security/docs/pods.kr/#_3","text":"\ub178\ub4dc \uad8c\ud55c \ubd80\uc5ec ]( https://kubernetes.io/docs/reference/access-authn-authz/node/ ) \ub77c\ub294 \uad8c\ud55c \ubd80\uc5ec \ubaa8\ub4dc\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4 . \ub178\ub4dc \uad8c\ud55c \ubd80\uc5ec\ub294 kubelet\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ubaa8\ub4e0 API \uc694\uccad\uc5d0 \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\uace0 \ub178\ub4dc\uac00 \ub2e4\uc74c \uc791\uc5c5\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uc77d\uae30 \uc791\uc5c5: \uc11c\ube44\uc2a4 \ub05d\uc810 \ub178\ub4dc \ud3ec\ub4dc kubelet\uc758 \ub178\ub4dc\uc5d0 \ubc14\uc778\ub529\ub41c \ud3ec\ub4dc\uc640 \uad00\ub828\ub41c \ube44\ubc00, \uad6c\uc131 \ub9f5, \uc601\uad6c \ubcfc\ub968 \ud074\ub808\uc784 \ubc0f \uc601\uad6c \ubcfc\ub968 \uc4f0\uae30 \uc791\uc5c5: \ub178\ub4dc \ubc0f \ub178\ub4dc \uc0c1\ud0dc( NodeRestriction \ud5c8\uc6a9 \ud50c\ub7ec\uadf8\uc778\uc744 \ud65c\uc131\ud654\ud558\uc5ec kubelet\uc774 \uc790\uc2e0\uc758 \ub178\ub4dc\ub97c \uc218\uc815\ud558\ub3c4\ub85d \uc81c\ud55c) pod \ubc0f pod \uc0c1\ud0dc( NodeRestriction \uc2b9\uc778 \ud50c\ub7ec\uadf8\uc778\uc744 \ud65c\uc131\ud654\ud558\uc5ec kubelet\uc774 \uc790\uc2e0\uc5d0\uac8c \ubc14\uc778\ub529\ub41c pod\ub97c \uc218\uc815\ud558\ub3c4\ub85d \uc81c\ud55c) \uc774\ubca4\ud2b8 \uc778\uc99d \uad00\ub828 \uc791\uc5c5: TLS \ubd80\ud2b8\uc2a4\ud2b8\ub798\ud551\uc744 \uc704\ud55c CertificateSigningRequest(CSR) API\uc5d0 \ub300\ud55c \uc77d\uae30/\uc4f0\uae30 \uc561\uc138\uc2a4 \uc704\uc784\ub41c \uc778\uc99d/\uad8c\ud55c \ud655\uc778\uc744 \uc704\ud574 TokenReview \ubc0f SubjectAccessReview\ub97c \uc0dd\uc131\ud558\ub294 \uae30\ub2a5 EKS\ub294 \ub178\ub4dc \uc81c\ud55c \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uac00 \uc81c\ud55c\ub41c \ub178\ub4dc \uc18d\uc131 \ubc0f \ud3ec\ub4dc \uc138\ud2b8\ub9cc \uc218\uc815\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \ub178\ub4dc\uc5d0 \ubc14\uc778\ub529\ub41c \uac1c\uccb4\uc785\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \ud638\uc2a4\ud2b8\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\ub97c \uad00\ub9ac\ud558\ub294 \uacf5\uaca9\uc790\ub294 \ud074\ub7ec\uc2a4\ud130 \ub0b4\uc5d0\uc11c \uce21\uba74 \uc774\ub3d9\uc744 \ud5c8\uc6a9\ud560 \uc218 \uc788\ub294 Kubernetes API\uc5d0\uc11c \ud658\uacbd\uc5d0 \ub300\ud55c \ubbfc\uac10\ud55c \uc815\ubcf4\ub97c \uc218\uc9d1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub178\ub4dc \uc2b9\uc778"},{"location":"security/docs/pods.kr/#_4","text":"","title":"\ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158"},{"location":"security/docs/pods.kr/#psp","text":"\uacfc\uac70\uc5d0\ub294 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP) \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uac00 \ucda9\uc871\ud574\uc57c \ud558\ub294 \uc77c\ub828\uc758 \uc694\uad6c \uc0ac\ud56d\uc744 \uc9c0\uc815\ud588\uc2b5\ub2c8\ub2e4. \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.21\ubd80\ud130 PSP\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes \ubc84\uc804 1.25\uc5d0\uc11c \uc81c\uac70\ub420 \uc608\uc815\uc785\ub2c8\ub2e4. \uc8fc\ubaa9 Kubernetes \ubc84\uc804 1.21\uc5d0\uc11c PSP\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \ubc84\uc804 1.25\uae4c\uc9c0 \ub610\ub294 \ub300\uc548\uc73c\ub85c \uc804\ud658\ud558\ub294 \ub370 \ub300\ub7b5 2\ub144\uc774 \uac78\ub9bd\ub2c8\ub2e4. \uc774 \ubb38\uc11c \ub294 \uc774\ub7ec\ud55c \uc9c0\uc6d0 \uc911\ub2e8\uc758 \ub3d9\uae30\ub97c \uc124\uba85\ud569\ub2c8\ub2e4.","title":"\ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP)"},{"location":"security/docs/pods.kr/#_5","text":"PSP\ub294 \uc81c\uac70\ub420 \uc608\uc815\uc774\uba70 \ub354 \uc774\uc0c1 \ud65c\uc131 \uac1c\ubc1c \uc911\uc774 \uc544\ub2c8\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc640 \uc6b4\uc601\uc790\ub294 \uc774\ub7ec\ud55c \ubcf4\uc548 \uc81c\uc5b4\ub97c \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \ub450 \uac00\uc9c0 \uc194\ub8e8\uc158\uc73c\ub85c \uc774\ub7ec\ud55c \uc694\uad6c\ub97c \ucda9\uc871\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \uc5d0\ucf54\uc2dc\uc2a4\ud15c\uc758 PAC(Policy-as-code) \uc194\ub8e8\uc158 Kubernetes \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) PAC \ubc0f PSS \uc194\ub8e8\uc158\uc740 \ubaa8\ub450 PSP\uc640 \uacf5\uc874\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PSP\uac00 \uc81c\uac70\ub418\uae30 \uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub807\uac8c \ud558\uba74 PSP\uc5d0\uc11c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ub54c \ucc44\ud0dd\uc774 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4. PSP\uc5d0\uc11c PSS\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc744 \uace0\ub824\ud558\ub294 \uacbd\uc6b0 \uc774 \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\uc0c8\ub85c\uc6b4 \ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"},{"location":"security/docs/pods.kr/#pac","text":"PAC(Policy-as-code) \uc194\ub8e8\uc158\uc740 \uaddc\uc815\ub41c \uc790\ub3d9 \uc81c\uc5b4\ub97c \ud1b5\ud574 \ud074\ub7ec\uc2a4\ud130 \uc0ac\uc6a9\uc790\ub97c \uc548\ub0b4\ud558\uace0 \uc6d0\uce58 \uc54a\ub294 \ub3d9\uc791\uc744 \ubc29\uc9c0\ud558\ub294 \uac00\ub4dc\ub808\uc77c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. PAC\ub294 Kubernetes \ub3d9\uc801 \uc2b9\uc778 \ucee8\ud2b8\ub864\ub7ec \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc6f9\ud6c4\ud06c \ud638\ucd9c\uc744 \ud1b5\ud574 Kubernetes API \uc11c\ubc84 \uc694\uccad \ud750\ub984\uc744 \uac00\ub85c\ucc44\uace0 \ubcc0\ud615 \ubc0f \uac80\uc99d\ud569\ub2c8\ub2e4. \ucf54\ub4dc\ub85c \uc791\uc131\ub418\uace0 \uc800\uc7a5\ub41c \uc815\ucc45\uc744 \uae30\ubc18\uc73c\ub85c \ud398\uc774\ub85c\ub4dc\ub97c \uc694\uccad\ud569\ub2c8\ub2e4. \ubcc0\ud615 \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac\ub294 API \uc11c\ubc84 \uc694\uccad\uc73c\ub85c \uc778\ud574 \ud074\ub7ec\uc2a4\ud130\uac00 \ubcc0\uacbd\ub418\uae30 \uc804\uc5d0 \ubc1c\uc0dd\ud569\ub2c8\ub2e4. PAC \uc194\ub8e8\uc158\uc740 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubd84\ub958 \ubc0f \uac12\uc744 \uae30\ubc18\uc73c\ub85c API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uc77c\uce58\uc2dc\ud0a4\uace0 \uc791\ub3d9\ud569\ub2c8\ub2e4. Kubernetes\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uba87 \uac00\uc9c0 \uc624\ud508 \uc18c\uc2a4 PAC \uc194\ub8e8\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc740 Kubernetes \ud504\ub85c\uc81d\ud2b8\uc758 \uc77c\ubd80\uac00 \uc544\ub2d9\ub2c8\ub2e4. Kubernetes \uc0dd\ud0dc\uacc4\uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc77c\ubd80 PAC \uc194\ub8e8\uc158\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. OPA/\uac8c\uc774\ud2b8\ud0a4\ud37c \uc624\ud508 \uc815\ucc45 \uc5d0\uc774\uc804\ud2b8(OPA) \uce74\uc774\ubca0\ub974\ub178 Kubewarden jsPolicy PAC \uc194\ub8e8\uc158\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uacfc \ud544\uc694\uc5d0 \ub9de\ub294 \uc801\uc808\ud55c \uc194\ub8e8\uc158\uc744 \uc120\ud0dd\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \ubc29\ubc95\uc740 \uc544\ub798 \ub9c1\ud06c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub300\ud55c \uc815\ucc45 \uae30\ubc18 \ub300\ucc45 - 1\ubd80 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \uc704\ud55c \uc815\ucc45 \uae30\ubc18 \ub300\ucc45 \u2013 2\ubd80","title":"\ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45(PAC)"},{"location":"security/docs/pods.kr/#pss-psa","text":"PSP \uc9c0\uc6d0 \uc911\ub2e8 \ubc0f \uae30\ubcf8 \uc81c\uacf5 Kubernetes \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc989\uc2dc \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ud3ec\ub4dc \ubcf4\uc548\uc744 \uc81c\uc5b4\ud574\uc57c \ud558\ub294 \uc9c0\uc18d\uc801\uc778 \ud544\uc694\uc131\uc5d0 \ub300\uc751\ud558\uc5ec Kubernetes Auth Special Interest Group \ub294 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) \ubc0f [ \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778(PSA) ] \uc744 \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4. ( https://kubernetes.io/docs/concepts/security/pod-security-admission/ ). PSA \ub178\ub825\uc5d0\ub294 PSS\uc5d0 \uc815\uc758\ub41c \ucee8\ud2b8\ub864\uc744 \uad6c\ud604 \ud558\ub294 \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uc6f9\ud6c4\ud06c \ud504\ub85c\uc81d\ud2b8 \uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \uc774 \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uc811\uadfc \ubc29\uc2dd\uc740 PAC \uc194\ub8e8\uc158\uc5d0\uc11c \uc0ac\uc6a9\ub418\ub294 \ubc29\uc2dd\uacfc \uc720\uc0ac\ud569\ub2c8\ub2e4. Kubernetes \uc124\uba85\uc11c\uc5d0 \ub530\ub974\uba74 PSS\ub294 \"\ubcf4\uc548 \uc2a4\ud399\ud2b8\ub7fc\uc744 \uad11\ubc94\uc704\ud558\uac8c \ud3ec\uad04\ud558\ub294 \uc138 \uac00\uc9c0 \ub2e4\ub978 \uc815\ucc45\uc744 \uc815\uc758\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ub204\uc801\ub418\uba70 \ub9e4\uc6b0 \ud5c8\uc6a9\uc801\uc778 \uac83\ubd80\ud130 \ub9e4\uc6b0 \uc81c\ud55c\uc801\uc778 \uac83\uae4c\uc9c0 \ub2e4\uc591\ud569\ub2c8\ub2e4.\" \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc758\ub429\ub2c8\ub2e4. Privileged: \uc81c\ud55c\ub418\uc9c0 \uc54a\uc740(\ubcf4\uc548\ub418\uc9c0 \uc54a\uc740) \uc815\ucc45\uc73c\ub85c \uac00\ub2a5\ud55c \uac00\uc7a5 \uad11\ubc94\uc704\ud55c \uc218\uc900\uc758 \uad8c\ud55c\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uc815\ucc45\uc740 \uc54c\ub824\uc9c4 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uc815\ucc45\uc758 \ubd80\uc7ac\uc785\ub2c8\ub2e4. \uc774\ub294 \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8, CNI, \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \ubc0f \uad8c\ud55c \uc788\ub294 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uae30\ud0c0 \uc2dc\uc2a4\ud15c \uc804\uccb4 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uac19\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. \uae30\uc900: \uc54c\ub824\uc9c4 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ubc29\uc9c0\ud558\ub294 \ucd5c\uc18c \uc81c\ud55c \uc815\ucc45\uc785\ub2c8\ub2e4. \uae30\ubcf8(\ucd5c\uc18c \uc9c0\uc815) \ud3ec\ub4dc \uad6c\uc131\uc744 \ud5c8\uc6a9\ud569\ub2c8\ub2e4. \uae30\ubcf8 \uc815\ucc45\uc740 hostNetwork, hostPID, hostIPC, hostPath, hostPort\uc758 \uc0ac\uc6a9, Linux \uae30\ub2a5 \ucd94\uac00 \ubd88\uac00 \ubc0f \uae30\ud0c0 \uba87 \uac00\uc9c0 \uc81c\ud55c \uc0ac\ud56d\uc744 \uae08\uc9c0\ud569\ub2c8\ub2e4. \uc81c\ud55c\ub428: \ud604\uc7ac \ud3ec\ub4dc \uac15\ud654 \ubaa8\ubc94 \uc0ac\ub840\uc5d0 \ub530\ub77c \uc5c4\uaca9\ud558\uac8c \uc81c\ud55c\ub41c \uc815\ucc45\uc785\ub2c8\ub2e4. \uc774 \uc815\ucc45\uc740 \uae30\uc900\uc120\uc5d0\uc11c \uc0c1\uc18d\ub418\uba70 \ub8e8\ud2b8 \ub610\ub294 \ub8e8\ud2b8 \uadf8\ub8f9\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc5c6\ub294 \uac83\uacfc \uac19\uc740 \ucd94\uac00 \uc81c\ud55c \uc0ac\ud56d\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. \uc81c\ud55c\ub41c \uc815\ucc45\uc740 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uae30\ub2a5\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce60 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub4e4\uc740 \uc8fc\ub85c \ubcf4\uc548\uc5d0 \uc911\uc694\ud55c \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc744 \uc2e4\ud589\ud558\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc815\ucc45\uc740 \ud30c\ub4dc \uc2e4\ud589\uc744 \uc704\ud55c \ud504\ub85c\ud30c\uc77c \uc744 \uc815\uc758\ud558\uba70, \uc138 \uac00\uc9c0 \uc218\uc900\uc758 \ud2b9\uad8c \uc561\uc138\uc2a4\uc640 \uc81c\ud55c\ub41c \uc561\uc138\uc2a4\ub85c \uc815\ub82c\ub429\ub2c8\ub2e4. PSS\uc5d0\uc11c \uc815\uc758\ud55c \ucee8\ud2b8\ub864\uc744 \uad6c\ud604\ud558\uae30 \uc704\ud574 PSA\ub294 \uc138 \uac00\uc9c0 \ubaa8\ub4dc\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. enforce: \uc815\ucc45\uc744 \uc704\ubc18\ud558\uba74 \ud3ec\ub4dc\uac00 \uac70\ubd80\ub429\ub2c8\ub2e4. \uac10\uc0ac: \uc815\ucc45 \uc704\ubc18\uc740 \uac10\uc0ac \ub85c\uadf8\uc5d0 \uae30\ub85d\ub41c \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uac10\uc0ac \uc8fc\uc11d \ucd94\uac00\ub97c \ud2b8\ub9ac\uac70\ud558\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uacbd\uace0: \uc815\ucc45\uc744 \uc704\ubc18\ud558\uba74 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uacbd\uace0\uac00 \ud45c\uc2dc\ub418\uc9c0\ub9cc \uadf8\ub807\uc9c0 \uc54a\uc73c\uba74 \ud5c8\uc6a9\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc640 \ud504\ub85c\ud544(\uc81c\ud55c) \uc218\uc900\uc740 \uc544\ub798 \uc608\uc640 \uac19\uc774 \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec Kubernetes \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \uad6c\uc131\ub429\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 \ub3c5\ub9bd\uc801\uc73c\ub85c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \uc774\ub7ec\ud55c \uc791\ub3d9 \ubaa8\ub4dc\ub294 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc81c\uacf5\ud558\ub294 \ub2e4\ub978 \uc751\ub2f5\uc744 \uac16\uc2b5\ub2c8\ub2e4. enforce \ubaa8\ub4dc\ub294 \uac01 podSpec\uc774 \uad6c\uc131\ub41c \uc81c\ud55c \uc218\uc900\uc744 \uc704\ubc18\ud558\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uc9c0 \uc54a\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 \uc774 \ubaa8\ub4dc\uc5d0\uc11c\ub294 PodSpec\uc774 \uc801\uc6a9\ub41c PSS\ub97c \uc704\ubc18\ud558\ub354\ub77c\ub3c4 \ubc30\ud3ec\uc640 \uac19\uc774 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \ud3ec\ub4dc\uac00 \uc544\ub2cc Kubernetes \uac1c\uccb4\uac00 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc801\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0 \ubc30\ud3ec\uac00 \uc801\uc6a9\ub418\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub41c \ubc30\ud3ec \uac1c\uccb4\uac00 \ud3ec\ub4dc \uc0dd\uc131 \uc2e4\ud328\uc5d0 \uc18d\ud55c\ub2e4\ub294 \uc989\uac01\uc801\uc778 \ud45c\uc2dc\uac00 \uc5c6\uae30 \ub54c\ubb38\uc5d0 \uc774\uac83\uc740 \uc5b4\ub824\uc6b4 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc785\ub2c8\ub2e4. \uc798\ubabb\ub41c podSpec\uc740 \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. kubectl get deploy <DEPLOYMENT_NAME> -oyaml \uc744 \uc0ac\uc6a9\ud558\uc5ec \ubc30\ud3ec \ub9ac\uc18c\uc2a4\ub97c \uac80\uc0ac\ud558\uba74 \uc544\ub798\uc640 \uac19\uc774 \uc2e4\ud328\ud55c \ud3ec\ub4dc .status.conditions \uc694\uc18c\uc758 \uba54\uc2dc\uc9c0\uac00 \ub178\ucd9c\ub429\ub2c8\ub2e4. ... \uc0c1\ud0dc : \uc870\uac74 : - lastTransitionTime : \"2022-01-20T01:02:08Z\" lastUpdateTime : \"2022-01-20T01:02:08Z\" \uba54\uc2dc\uc9c0 : 'pods \"test-688f68dc87-tw587\"\uc774 \uae08\uc9c0\ub428: PodSecurity \"restricted:latest\"\ub97c \uc704\ubc18\ud568: allowPrivilegeEscalation != false(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.allowPrivilegeEscalation=false\ub85c \uc124\uc815\ud574\uc57c \ud568), \ubb34\uc81c\ud55c \uae30\ub2a5(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.capabilities.drop=[\"ALL\"]\uc744 \uc124\uc815\ud574\uc57c \ud568), runAsNonRoot != true(\ud3ec\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.runAsNonRoot=true\ub85c \uc124\uc815\ud574\uc57c \ud568), seccompProfile(\ud3ec\ub4dc \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\"\ub294 securityContext.seccompProfile.type\uc744 \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \"RuntimeDefault\" \ub610\ub294 \"Localhost\"\ub85c)' \uc774\uc720 : FailedCreate \uc0c1\ud0dc : \"\ucc38\" \uc720\ud615 : ReplicaFailure ... audit \ubc0f warn \ubaa8\ub4dc\uc5d0\uc11c \ud3ec\ub4dc \uc81c\ud55c\uc740 \uc704\ubc18 \ud3ec\ub4dc\uac00 \uc0dd\uc131\ub418\uace0 \uc2dc\uc791\ub418\ub294 \uac83\uc744 \ub9c9\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4 . \uadf8\ub7ec\ub098 \uc774\ub7ec\ud55c \ubaa8\ub4dc\uc5d0\uc11c\ub294 API \uc11c\ubc84 \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uac10\uc0ac \uc8fc\uc11d \ubc0f API \uc11c\ubc84 \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0 \ub300\ud55c \uacbd\uace0(\uc608: kubectl )\ub294 pod\uc640 pod\ub97c \uc0dd\uc131\ud558\ub294 \uac1c\uccb4\uc5d0 \uc704\ubc18\uc774 \uc788\ub294 podSpec\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc744 \ub54c \uac01\uac01 \ud2b8\ub9ac\uac70\ub429\ub2c8\ub2e4. kubectl \uacbd\uace0 \uba54\uc2dc\uc9c0\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uacbd\uace0: PodSecurity \"restricted:latest\" \uc704\ubc18 : allowPrivilegeEscalation != false (\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.allowPrivilegeEscalation=false\ub97c \uc124\uc815 \ud574\uc57c \ud568), \ubb34\uc81c\ud55c \uae30\ub2a5(\ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.capabilities.drop=[ \"ALL\" ] \uc744 \uc124\uc815 \ud574\uc57c \ud568) , runAsNonRoot != true (\ud31f \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.runAsNonRoot=true \ub85c \uc124\uc815 \ud574\uc57c \ud568), seccompProfile(\ud31f \ub610\ub294 \ucee8\ud14c\uc774\ub108 \"\ud14c\uc2a4\ud2b8\" \ub294 securityContext.seccompProfile.type\uc744 \"RuntimeDefault\" \ub610\ub294 \"Localhost\" \ub85c \uc124\uc815 \ud574\uc57c \ud568) deployment.apps/test \uc0dd\uc131\ub428 PSA audit \ubc0f warn \ubaa8\ub4dc\ub294 \ud074\ub7ec\uc2a4\ud130 \uc791\uc5c5\uc5d0 \ubd80\uc815\uc801\uc778 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uace0 PSS\ub97c \ub3c4\uc785\ud560 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4. PSA \uc791\ub3d9 \ubaa8\ub4dc\ub294 \uc0c1\ud638 \ubc30\ud0c0\uc801\uc774\uc9c0 \uc54a\uc73c\uba70 \ub204\uc801 \ubc29\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ub2e8\uc77c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc5ec\ub7ec \ubaa8\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/audit : \uc81c\ud55c\ub428 pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c \ubc30\ud3ec\ub97c \uc801\uc6a9\ud560 \ub54c \uc0ac\uc6a9\uc790\uc5d0\uac8c \uce5c\uc219\ud55c \uacbd\uace0 \ubc0f \uac10\uc0ac \uc8fc\uc11d\uc774 \uc81c\uacf5\ub418\ub294 \ubc18\uba74 \uc704\ubc18 \uc801\uc6a9\ub3c4 \ud3ec\ub4dc \uc218\uc900\uc5d0\uc11c \uc81c\uacf5\ub429\ub2c8\ub2e4. \uc2e4\uc81c\ub85c \uc5ec\ub7ec PSA \ub808\uc774\ube14\uc740 \uc544\ub798\uc640 \uac19\uc774 \uc11c\ub85c \ub2e4\ub978 \ud504\ub85c\ud544 \uc218\uc900\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/enforce : \uae30\uc900\uc120 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c PSA\ub294 baseline \ud504\ub85c\ud544 \uc218\uc900\uc744 \ucda9\uc871\ud558\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\uc758 \uc0dd\uc131\uc744 \ud5c8\uc6a9\ud55c \ub2e4\uc74c restricted \ud504\ub85c\ud544 \uc218\uc900 \uc744 \uc704\ubc18\ud558\ub294 \ud3ec\ub4dc(\ubc0f \ud3ec\ub4dc\ub97c \uc0dd\uc131\ud558\ub294 \uac1c\uccb4)\uc5d0\uc11c warn \ud558\ub3c4\ub85d \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub294 baseline \uc5d0\uc11c restricted \ud504\ub85c\ud544\ub85c \ubcc0\uacbd\ud560 \ub54c \uac00\ub2a5\ud55c \uc601\ud5a5\uc744 \ud655\uc778\ud558\ub294 \ub370 \uc720\uc6a9\ud55c \uc811\uadfc \ubc29\uc2dd\uc785\ub2c8\ub2e4.","title":"\ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS) \ubc0f \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778(PSA)"},{"location":"security/docs/pods.kr/#_6","text":"\uae30\uc874 \ud3ec\ub4dc\uac00 \uc788\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \ub354 \uc81c\ud55c\uc801\uc778 PSS \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \uc218\uc815\ub418\uba74 audit \ubc0f warn \ubaa8\ub4dc\uac00 \uc801\uc808\ud55c \uba54\uc2dc\uc9c0\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uadf8\ub7ec\ub098 enforce \ubaa8\ub4dc\ub294 \ud3ec\ub4dc\ub97c \uc0ad\uc81c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uacbd\uace0 \uba54\uc2dc\uc9c0\ub294 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uacbd\uace0: \"policy-test\" \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc758 \uae30\uc874 \ud3ec\ub4dc \uac00 \uc0c8\ub85c\uc6b4 PodSecurity \uc801\uc6a9 \uc218\uc900 \"restricted:latest\" \ub97c \uc704\ubc18\ud569\ub2c8\ub2e4. \uacbd\uace0: test-688f68dc87-htm8x: allowPrivilegeEscalation != false, \ubb34\uc81c\ud55c \uae30\ub2a5, runAsNonRoot != true, seccompProfile \ub124\uc784\uc2a4\ud398\uc774\uc2a4/\uc815\ucc45 \ud14c\uc2a4\ud2b8 \uad6c\uc131\ub428","title":"\uae30\uc874 \ud3ec\ub4dc"},{"location":"security/docs/pods.kr/#_7","text":"PSA\ub294 Exemptions \ub97c \uc0ac\uc6a9\ud558\uc5ec \ub2ec\ub9ac \uc801\uc6a9\ub418\uc5c8\uc744 \ud3ec\ub4dc\uc5d0 \ub300\ud55c \uc704\ubc18 \uc9d1\ud589\uc744 \uc81c\uc678\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba74\uc81c\ub294 \uc544\ub798\uc5d0 \ub098\uc5f4\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc774\ub984: \uba74\uc81c\ub41c \uc778\uc99d(\ub610\ub294 \uc0ac\uce6d) \uc0ac\uc6a9\uc790 \uc774\ub984\uc744 \uac00\uc9c4 \uc0ac\uc6a9\uc790\uc758 \uc694\uccad\uc740 \ubb34\uc2dc\ub429\ub2c8\ub2e4. RuntimeClassNames: \uba74\uc81c \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 \uc774\ub984\uc744 \uc9c0\uc815\ud558\ub294 \ud3ec\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4: \uba74\uc81c \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc758 \ud3ec\ub4dc \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9ac\uc18c\uc2a4\ub294 \ubb34\uc2dc\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uba74\uc81c\ub294 PSA \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec \uad6c\uc131 \uc5d0\uc11c \ub2e4\uc74c\uacfc \uac19\uc774 \uc815\uc801\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4. API \uc11c\ubc84 \uad6c\uc131\uc758 \uc77c\ubd80\uc785\ub2c8\ub2e4. Validating Webhook \uad6c\ud604\uc5d0\uc11c \uc608\uc678\ub294 Kubernetes ConfigMap \ub9ac\uc18c\uc2a4 \ub0b4\uc5d0\uc11c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. pod-security-webhook \ucee8\ud14c\uc774\ub108 \uc5d0 \ubcfc\ub968\uc73c\ub85c \ub9c8\uc6b4\ud2b8\ub429\ub2c8\ub2e4 . api\ubc84\uc804 : v1 \uc885\ub958 : \ucee8\ud53c\uadf8\ub9f5 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \ud31f-\ubcf4\uc548-\uc6f9\ud6c4\ud06c \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : pod-security-webhook \ub370\uc774\ud130 : podsecurityconfiguration.yaml : | apiVersion : pod-security.admission.config.k8s.io/v1beta1 \uc885\ub958 : PodSecurityConfiguration \uae30\ubcf8\uac12 : \uc801\uc6a9 : \"\uc81c\ud55c\ub428\" \uc2dc\ud589 \ubc84\uc804 : \"\ucd5c\uc2e0\" \uac10\uc0ac : \"\uc81c\ud55c\ub428\" \uac10\uc0ac \ubc84\uc804 : \"\ucd5c\uc2e0\" \uacbd\uace0 : \"\uc81c\ud55c\ub428\" \uacbd\uace0 \ubc84\uc804 : \"\ucd5c\uc2e0\" \uba74\uc81c : # \uba74\uc81c\ud560 \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790 \uc774\ub984\uc758 \ubc30\uc5f4. \uc0ac\uc6a9\uc790 \uc774\ub984 : [] # \uba74\uc81c\ud560 \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 \uc774\ub984\uc758 \ubc30\uc5f4. \ub7f0\ud0c0\uc784 \ud074\ub798\uc2a4 : [] # \uba74\uc81c\ud560 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ubc30\uc5f4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 : [ \"kube-system\" , \"policy-test1\" ] \uc704\uc758 ConfigMap YAML\uc5d0\uc11c \ubcfc \uc218 \uc788\ub4ef\uc774 \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc758 \uae30\ubcf8 PSS \uc218\uc900\uc740 \ubaa8\ub4e0 PSA \ubaa8\ub4dc, audit , enforce \ubc0f warn \uc5d0 \ub300\ud574 restricted \ub85c \uc124\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4 . \uc774\ub294 \uc608\uc678\uc778 namespaces: [\"kube-system\",\"policy-test1\"] \uc744 \uc81c\uc678\ud55c \ubaa8\ub4e0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce69\ub2c8\ub2e4 . \ub610\ud55c \uc544\ub798\uc5d0 \ud45c\uc2dc\ub41c ValidatingWebhookConfiguration \ub9ac\uc18c\uc2a4\uc5d0\uc11c pod-security-webhook \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub3c4 \uad6c\uc131\ub41c PSS\uc5d0\uc11c \uc81c\uc678\ub429\ub2c8\ub2e4. ... \uc6f9\ud6c4\ud06c : # \uac10\uc0ac \uc8fc\uc11d\uc5d0\ub294 \uc774 \uc774\ub984\uc774 \uc811\ub450\uc0ac\ub85c \ubd99\uc2b5\ub2c8\ub2e4. - \uc774\ub984 : \"pod-security-webhook.kubernetes.io\" # \ud398\uc77c\ud074\ub85c\uc988 \uc2b9\uc778 \uc6f9\ud6c4\ud06c\ub294 \uc6b4\uc601\uc0c1 \ubb38\uc81c\ub97c \uc77c\uc73c\ud0ac \uc218 \uc788\uc2b5\ub2c8\ub2e4. # \ubb34\uc2dc \uc2e4\ud328 \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uace0\ub824\ud560 \uc218 \uc788\uc9c0\ub9cc # \ubcf4\uc548 \uc7a5\ub2e8\uc810\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. failurePolicy : \uc2e4\ud328 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc120\ud0dd\uae30 : # \uc21c\ud658 \uc885\uc18d\uc131\uc744 \ud53c\ud558\uae30 \uc704\ud574 webhook \uc790\uccb4\ub97c \uba74\uc81c\ud569\ub2c8\ub2e4. \uc77c\uce58 \ud45c\ud604 : - \ud0a4 : kubernetes.io/metadata.name \uc5f0\uc0b0\uc790 : NotIn \uac12 : [ \"pod-security-webhook\" ] ... \uc8fc\ubaa9 Kubernetes \ubc84\uc804 1.22 \ubc0f 1.23_\uc5d0\uc11c \ud3ec\ub4dc \ubcf4\uc548 \uc2b9\uc778 \uae30\ub2a5\uc740 \uac01\uac01 _alpha \ubc0f beta \uc0c1\ud0dc\uc785\ub2c8\ub2e4. \uc801\uc5b4\ub3c4 GA\uae4c\uc9c0\ub294 \uc774 \uc9c0\uce68 \uc5d0\uc11c \uad6c\uc131\ub41c \uac80\uc99d \uc6f9\ud6c5\uc744 \ud1b5\ud574 \ud604\uc7ac \ud5c8\uc6a9 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uba74\uc81c"},{"location":"security/docs/pods.kr/#policy-as-code-pod","text":"\ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS)\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub0b4\uc7a5\ub418\uc5b4 \uc788\uace0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc5d0\ucf54\uc2dc\uc2a4\ud15c\uc758 \uc194\ub8e8\uc158\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc740 \uc194\ub8e8\uc158\uc744 \uc81c\uacf5\ud568\uc73c\ub85c\uc368 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP)\uc744 \ub300\uccb4\ud558\uae30 \uc704\ud574 \uac1c\ubc1c\ub418\uc5c8\uc2b5\ub2c8\ub2e4. PAC(Policy-as-Code) \uc194\ub8e8\uc158\uc740 \ud6e8\uc52c \ub354 \uc720\uc5f0\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc7a5\ub2e8\uc810 \ubaa9\ub85d\uc740 \ud31f(Pod) \ubcf4\uc548 \uc194\ub8e8\uc158\uc5d0 \ub300\ud574 \uc815\ubcf4\uc5d0 \uc785\uac01\ud55c \uacb0\uc815\uc744 \ub0b4\ub9ac\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. Policy-as-code(Policy-as-code(\ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uacfc \ube44\uad50) \uc7a5\uc810: \ubcf4\ub2e4 \uc720\uc5f0\ud558\uace0 \uc138\ubd84\ud654\ub428(\ud544\uc694\ud55c \uacbd\uc6b0 \ub9ac\uc18c\uc2a4 \uc18d\uc131\uae4c\uc9c0) \ud3ec\ub4dc\uc5d0\ub9cc \uc9d1\uc911\ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c \ub2e4\uc591\ud55c \ub9ac\uc18c\uc2a4 \ubc0f \uc791\uc5c5\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c\ub9cc \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\ubcf4\ub2e4 \ub354 \uc131\uc219\ud568 \uc758\uc0ac\uacb0\uc815\uc740 \uae30\uc874 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4 \ubc0f \uc678\ubd80 \ub370\uc774\ud130(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984)\ubfd0\ub9cc \uc544\ub2c8\ub77c API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\uc758 \ubaa8\ub4e0 \ud56d\ubaa9\uc744 \uae30\ubc18\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc720\ud6a8\uc131 \uac80\uc0ac \uc804\uc5d0 API \uc11c\ubc84 \uc694\uccad \ubcc0\uacbd \uc9c0\uc6d0(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984) \ubcf4\uc644 \uc815\ucc45 \ubc0f Kubernetes \ub9ac\uc18c\uc2a4 \uc0dd\uc131 \uac00\ub2a5(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984 - Pod \uc815\ucc45 \uc5d0\uc11c Kyverno \ub294 \ubc30\ud3ec. Kyverno\ub294 \ub610\ud55c Generate Rules \ub97c \uc0ac\uc6a9\ud558\uc5ec \"\uc0c8 \ub9ac\uc18c\uc2a4\uac00 \uc0dd\uc131\ub418\uac70\ub098 \uc18c\uc2a4\uac00 \uc5c5\ub370\uc774\ud2b8\ub420 \ub54c\" \ucd94\uac00 Kubernetes \ub9ac\uc18c\uc2a4\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . ) Kubernetes API \uc11c\ubc84\ub97c \ud638\ucd9c\ud558\uae30 \uc804\uc5d0 CICD \ud30c\uc774\ud504\ub77c\uc778\uc73c\ub85c \uc67c\ucabd\uc73c\ub85c \uc774\ub3d9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984). \ubaa8\ubc94 \uc0ac\ub840, \uc870\uc9c1 \ud45c\uc900 \ub4f1\uacfc \uac19\uc774 \ubc18\ub4dc\uc2dc \ubcf4\uc548\uacfc \uad00\ub828\ub418\uc9c0 \uc54a\uc740 \ub3d9\uc791\uc744 \uad6c\ud604\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes \uc774\uc678\uc758 \uc0ac\uc6a9 \uc0ac\ub840\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5(\uc194\ub8e8\uc158\uc5d0 \ub530\ub77c \ub2e4\ub984) \uc720\uc5f0\uc131\uc73c\ub85c \uc778\ud574 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc0ac\uc6a9\uc790\uc758 \uc694\uad6c\uc5d0 \ub9de\uac8c \uc870\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e8\uc810: Kubernetes\uc5d0 \ub0b4\uc7a5\ub418\uc9c0 \uc54a\uc74c \ud559\uc2b5, \uad6c\uc131 \ubc0f \uc9c0\uc6d0\uc774 \ub354 \ubcf5\uc7a1\ud568 \uc815\ucc45 \uc791\uc131\uc5d0\ub294 \uc0c8\ub85c\uc6b4 \uae30\uc220/\uc5b8\uc5b4/\uae30\ub2a5\uc774 \ud544\uc694\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod \ubcf4\uc548 \uc2b9\uc778(Policy-as-Code\uc640 \ube44\uad50) \uc7a5\uc810: \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \ub0b4\uc7a5 \ub354 \uac04\ub2e8\ud55c \uad6c\uc131 \uc0ac\uc6a9\ud560 \uc0c8\ub85c\uc6b4 \uc5b8\uc5b4\ub098 \uc791\uc131\ud560 \uc815\ucc45\uc774 \uc5c6\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uae30\ubcf8 \uc2b9\uc778 \uc218\uc900\uc774 privileged \ub85c \uad6c\uc131\ub41c \uacbd\uc6b0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub808\uc774\ube14\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc \ubcf4\uc548 \ud504\ub85c\ud544\uc5d0 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\ub97c \uc635\ud2b8\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e8\uc810: Policy-as-Code\ub9cc\ud07c \uc720\uc5f0\ud558\uac70\ub098 \uc138\ubd84\ud654\ub418\uc9c0 \uc54a\uc74c \ub2e8 3\ub2e8\uacc4 \uc81c\ud55c \uc8fc\ub85c \ud3ec\ub4dc\uc5d0 \uc9d1\uc911","title":"Policy-as-Code\uc640 Pod \ubcf4\uc548 \ud45c\uc900 \uc911\uc5d0\uc11c \uc120\ud0dd"},{"location":"security/docs/pods.kr/#_8","text":"\ud604\uc7ac PSP \uc678\uc5d0 \ud3ec\ub4dc \ubcf4\uc548 \uc194\ub8e8\uc158\uc774 \uc5c6\uace0 \ud544\uc694\ud55c \ud3ec\ub4dc \ubcf4\uc548 \uc0c1\ud0dc\uac00 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900(PSS)\uc5d0 \uc815\uc758\ub41c \ubaa8\ub378\uc5d0 \ub9de\ub294 \uacbd\uc6b0 \uc815\ucc45 \ub300\uc2e0 PSS\ub97c \ucc44\ud0dd\ud558\ub294 \uac83\uc774 \ub354 \uc26c\uc6b4 \uacbd\ub85c\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc \uc194\ub8e8\uc158. \uadf8\ub7ec\ub098 \ud31f(Pod) \ubcf4\uc548 \uc0c1\ud0dc\uac00 PSS \ubaa8\ub378\uc5d0 \uc801\ud569\ud558\uc9c0 \uc54a\uac70\ub098 PSS\uc5d0\uc11c \uc815\uc758\ud55c \uac83 \uc774\uc0c1\uc73c\ub85c \ucd94\uac00 \uc81c\uc5b4\ub97c \ucd94\uac00\ud558\ub824\ub294 \uacbd\uc6b0 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc774 \ub354 \uc801\ud569\ud574 \ubcf4\uc785\ub2c8\ub2e4.","title":"\uc694\uc57d"},{"location":"security/docs/pods.kr/#_9","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/pods.kr/#psapod-security-admission","text":"\uc55e\uc11c \uc5b8\uae09\ud588\ub4ef\uc774 PSA enforce \ubaa8\ub4dc\ub294 PSS \uc704\ubc18\uc774 \uc788\ub294 \ud3ec\ub4dc\uac00 \uc801\uc6a9\ub418\ub294 \uac83\uc744 \ubc29\uc9c0\ud558\uc9c0\ub9cc \ubc30\ud3ec\uc640 \uac19\uc740 \uc0c1\uc704 \uc218\uc900 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc911\uc9c0\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c\ub85c \ud3ec\ub4dc \uc801\uc6a9\uc5d0 \uc2e4\ud328\ud588\ub2e4\ub294 \ud45c\uc2dc \uc5c6\uc774 \ubc30\ud3ec\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub429\ub2c8\ub2e4. kubectl \uc744 \uc0ac\uc6a9 \ud558\uc5ec \ubc30\ud3ec \uac1c\uccb4\ub97c \uac80\uc0ac\ud558\uace0 PSA\uc5d0\uc11c \uc2e4\ud328\ud55c \ud3ec\ub4dc \uba54\uc2dc\uc9c0\ub97c \uac80\uc0c9\ud560 \uc218 \uc788\uc9c0\ub9cc \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc774 \ub354 \uc88b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uac1c\uc120\ud558\ub824\uba74 \uc5ec\ub7ec PSA \ubaa8\ub4dc(\uac10\uc0ac, \uc2dc\ud589, \uacbd\uace0)\ub97c \uc0ac\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. api\ubc84\uc804 : v1 \uc885\ub958 : \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : \uc815\ucc45 \ud14c\uc2a4\ud2b8 \ub77c\ubca8 : pod-security.kubernetes.io/audit : \uc81c\ud55c\ub428 pod-security.kubernetes.io/enforce : \uc81c\ud55c\ub428 pod-security.kubernetes.io/warn : \uc81c\ud55c\ub428 \uc704\uc758 \uc608\uc5d0\uc11c enforce \ubaa8\ub4dc\uac00 \uc815\uc758\ub41c \uacbd\uc6b0 \uac01 podSpec\uc5d0\uc11c PSS \uc704\ubc18\uc774 \uc788\ub294 \ubc30\ud3ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c Kubernetes API \uc11c\ubc84\uc5d0 \uc801\uc6a9\ud558\ub824\uace0 \ud558\uba74 \ubc30\ud3ec\uac00 \uc131\uacf5\uc801\uc73c\ub85c \uc801\uc6a9\ub418\uc9c0\ub9cc \ud3ec\ub4dc\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 audit \ubc0f warn \ubaa8\ub4dc\ub3c4 \ud65c\uc131\ud654\ub418\uc5b4 \uc788\uc73c\ubbc0\ub85c API \uc11c\ubc84 \ud074\ub77c\uc774\uc5b8\ud2b8\ub294 \uacbd\uace0 \uba54\uc2dc\uc9c0\ub97c \uc218\uc2e0\ud558\uace0 API \uc11c\ubc84 \uac10\uc0ac \ub85c\uadf8 \uc774\ubca4\ud2b8\uc5d0\ub3c4 \uba54\uc2dc\uc9c0\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4.","title":"\ub354 \ub098\uc740 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uc704\ud574 \uc5ec\ub7ec PSA(Pod Security Admission) \ubaa8\ub4dc \uc0ac\uc6a9"},{"location":"security/docs/pods.kr/#_10","text":"\uc5b8\uae09\ud55c \ubc14\uc640 \uac19\uc774 \uad8c\ud55c\uc774 \uc788\ub294 \uc0c1\ud0dc\ub85c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108\ub294 \ud638\uc2a4\ud2b8\uc758 \ub8e8\ud2b8\uc5d0 \ud560\ub2f9\ub41c \ubaa8\ub4e0 Linux \uae30\ub2a5\uc744 \uc0c1\uc18d\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ub300\ub85c \uc791\ub3d9\ud558\uae30 \uc704\ud574 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \uac70\uc758 \uc5c6\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc758 \uad8c\ud55c\uacfc \uae30\ub2a5\uc744 \uc81c\ud55c\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc5ec\ub7ec \uac00\uc9c0 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Fargate\ub294 \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\uac00 AWS\uac00 \uad00\ub9ac\ud558\ub294 \uc778\ud504\ub77c\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \"\uc11c\ubc84\ub9ac\uc2a4\" \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uac8c \ud574\uc8fc\ub294 \uc2dc\uc791 \uc720\ud615\uc785\ub2c8\ub2e4. Fargate\ub97c \uc0ac\uc6a9\ud558\uba74 \uad8c\ud55c \uc788\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\uac70\ub098 hostNetwork \ub610\ub294 hostPort\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \ud3ec\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.","title":"\uad8c\ud55c \uc788\ub294 \uad8c\ud55c\uc73c\ub85c \uc2e4\ud589\ud560 \uc218 \uc788\ub294 \ucee8\ud14c\uc774\ub108 \uc81c\ud55c"},{"location":"security/docs/pods.kr/#_11","text":"\ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\ub294 \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub429\ub2c8\ub2e4. \uc774\ub294 \uacf5\uaca9\uc790\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ucde8\uc57d\uc131\uc744 \uc545\uc6a9\ud558\uace0 \uc2e4\ud589 \uc911\uc778 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc178 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uc5bb\uc744 \uc218 \uc788\ub294 \uacbd\uc6b0 \ubb38\uc81c\uac00 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \ubc29\ubc95\uc73c\ub85c \uc774 \uc704\ud5d8\uc744 \uc644\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba3c\uc800 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc5d0\uc11c \uc178\uc744 \uc81c\uac70\ud569\ub2c8\ub2e4. \ub458\uc9f8, Dockerfile\uc5d0 USER \uc9c0\uc2dc\ubb38\uc744 \ucd94\uac00\ud558\uac70\ub098 \ub8e8\ud2b8\uac00 \uc544\ub2cc \uc0ac\uc6a9\uc790\ub85c \ud3ec\ub4dc\uc758 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud569\ub2c8\ub2e4. Kubernetes podSpec\uc5d0\ub294 spec.securityContext \uc544\ub798\uc5d0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc2e4\ud589\ud560 \uc0ac\uc6a9\uc790 \ubc0f/\ub610\ub294 \uadf8\ub8f9\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\ub294 \uc77c\ub828\uc758 \ud544\ub4dc\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud544\ub4dc\ub294 \uac01\uac01 runAsUser \ubc0f runAsGroup \uc785\ub2c8\ub2e4. spec.securityContext \ubc0f \uad00\ub828 \uc694\uc18c \uc758 \uc0ac\uc6a9\uc744 \uac15\uc81c\ud558\uae30 \uc704\ud574 \ucf54\ub4dc\ub85c\uc11c\uc758 \uc815\ucc45 \ub610\ub294 \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uc744 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uba74 etcd\uc5d0 \uc720\uc9c0\ub418\uae30 \uc804\uc5d0 \uc778\ubc14\uc6b4\ub4dc Kubernetes API \uc11c\ubc84 \uc694\uccad \ud398\uc774\ub85c\ub4dc\ub97c \uac80\uc99d\ud560 \uc218 \uc788\ub294 \uc815\ucc45 \ub610\ub294 \ud504\ub85c\ud544\uc744 \uc791\uc131 \ubc0f/\ub610\ub294 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ud55c \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc740 \uc778\ubc14\uc6b4\ub4dc \uc694\uccad\uc744 \ubcc0\uacbd\ud558\uace0 \uacbd\uc6b0\uc5d0 \ub530\ub77c \uc0c8 \uc694\uccad\uc744 \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub8e8\ud2b8\ub85c \ud504\ub85c\uc138\uc2a4\ub97c \uc2e4\ud589\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."},{"location":"security/docs/pods.kr/#docker-docker","text":"\uc774\ub807\uac8c \ud558\uba74 \ud3b8\ub9ac\ud558\uac8c Docker \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc/\uc2e4\ud589\ud560 \uc218 \uc788\uc9c0\ub9cc \uae30\ubcf8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \ud504\ub85c\uc138\uc2a4\uc5d0 \ub300\ud55c \ub178\ub4dc\uc758 \uc644\uc804\ud55c \uc81c\uc5b4\ub97c \uc591\ub3c4\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubernetes\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ube4c\ub4dc\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 Kaniko , buildah , img \ub610\ub294 CodeBuild \uac19\uc740 \ube4c\ub4dc \uc11c\ube44\uc2a4 \ub97c \ub300\uc2e0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud301 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \ube4c\ub4dc\uc640 \uac19\uc740 CICD \ucc98\ub9ac\uc5d0 \uc0ac\uc6a9\ub418\ub294 Kubernetes \ud074\ub7ec\uc2a4\ud130\ub294 \ubcf4\ub2e4 \uc77c\ubc18\ud654\ub41c \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2e4\ud589\ud558\ub294 \ud074\ub7ec\uc2a4\ud130\uc640 \uaca9\ub9ac\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.","title":"Docker\uc5d0\uc11c Docker\ub97c \uc2e4\ud589\ud558\uac70\ub098 \ucee8\ud14c\uc774\ub108\uc5d0 \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\uc9c0 \ub9c8\uc2ed\uc2dc\uc624."},{"location":"security/docs/pods.kr/#hostpath-hostpath","text":"hostPath \ub294 \ud638\uc2a4\ud2b8\uc5d0\uc11c \ucee8\ud14c\uc774\ub108\ub85c \uc9c1\uc811 \ub514\ub809\ud1a0\ub9ac\ub97c \ub9c8\uc6b4\ud2b8\ud558\ub294 \ubcfc\ub968\uc785\ub2c8\ub2e4. \ud3ec\ub4dc\uc5d0 \uc774\ub7ec\ud55c \uc720\ud615\uc758 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0\ub294 \uac70\uc758 \uc5c6\uc9c0\ub9cc \ud544\uc694\ud55c \uacbd\uc6b0 \uc704\ud5d8\uc744 \uc778\uc2dd\ud574\uc57c \ud569\ub2c8\ub2e4. \uae30\ubcf8\uc801\uc73c\ub85c \ub8e8\ud2b8\ub85c \uc2e4\ud589\ub418\ub294 \ud3ec\ub4dc\ub294 hostPath\uc5d0 \uc758\ud574 \ub178\ucd9c\ub41c \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc4f0\uae30 \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uac16\uc2b5\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uacf5\uaca9\uc790\ub294 kubelet \uc124\uc815\uc744 \uc218\uc815\ud558\uace0, /etc/shadow\uc640 \uac19\uc774 hostPath\uc5d0 \uc758\ud574 \uc9c1\uc811 \ub178\ucd9c\ub418\uc9c0 \uc54a\ub294 \ub514\ub809\ud1a0\ub9ac \ub610\ub294 \ud30c\uc77c\uc5d0 \ub300\ud55c \uc2ec\ubcfc\ub9ad \ub9c1\ud06c\ub97c \uc0dd\uc131\ud558\uace0, ssh \ud0a4\ub97c \uc124\uce58\ud558\uace0, \ud638\uc2a4\ud2b8\uc5d0 \ub9c8\uc6b4\ud2b8\ub41c \ube44\ubc00\uc744 \uc77d\uace0, \uae30\ud0c0 \uc545\uc758\uc801\uc778 \uac83\ub4e4\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. hostPath\uc758 \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub824\uba74 spec.containers.volumeMounts \ub97c readOnly \ub85c \uad6c\uc131\ud558\uc2ed\uc2dc\uc624 . \uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ubcfc\ub968 \ub9c8\uc6b4\ud2b8 : - \uc774\ub984 : hostPath-\ubcfc\ub968 \uc77d\uae30 \uc804\uc6a9 : \ucc38 mountPath : /\ud638\uc2a4\ud2b8 \uacbd\ub85c \ub610\ud55c \uc815\ucc45 \ucf54\ub4dc \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec hostPath \ubcfc\ub968\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ub514\ub809\ud1a0\ub9ac\ub97c \uc81c\ud55c\ud558\uac70\ub098 hostPath \uc0ac\uc6a9\uc744 \ubaa8\ub450 \ubc29\uc9c0\ud574\uc57c \ud569\ub2c8\ub2e4. \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900 Baseline \ub610\ub294 Restricted \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec hostPath \uc0ac\uc6a9\uc744 \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . \uad8c\ud55c \uc0c1\uc2b9\uc758 \uc704\ud5d8\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Seth Art\uc758 \ube14\ub85c\uadf8 Bad Pods: Kubernetes Pod Privilege Escalation \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. .","title":"hostPath \uc0ac\uc6a9\uc744 \uc81c\ud55c\ud558\uac70\ub098 hostPath\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uc811\ub450\uc0ac\ub97c \uc81c\ud55c\ud558\uace0 \ubcfc\ub968\uc744 \uc77d\uae30 \uc804\uc6a9\uc73c\ub85c \uad6c\uc131\ud569\ub2c8\ub2e4."},{"location":"security/docs/pods.kr/#dos","text":"\uc694\uccad\uc774\ub098 \uc81c\ud55c\uc774 \uc5c6\ub294 \ud3ec\ub4dc\ub294 \uc774\ub860\uc801\uc73c\ub85c \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ub9ac\uc18c\uc2a4\ub97c \uc18c\ube44\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \ud3ec\ub4dc\uac00 \ub178\ub4dc\uc5d0 \uc608\uc57d\ub418\uba74 \ub178\ub4dc\uc5d0\uc11c CPU \ub610\ub294 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \ubc1c\uc0dd\ud558\uc5ec Kubelet\uc774 \uc885\ub8cc\ub418\uac70\ub098 \ub178\ub4dc\uc5d0\uc11c \ud3ec\ub4dc\uac00 \uc81c\uac70\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc77c\uc774 \ud568\uaed8 \ubc1c\uc0dd\ud558\ub294 \uac83\uc744 \ubc29\uc9c0\ud560 \uc218\ub294 \uc5c6\uc9c0\ub9cc \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc124\uc815\ud558\uba74 \ub9ac\uc18c\uc2a4 \uacbd\ud569\uc744 \ucd5c\uc18c\ud654\ud558\uace0 \ub9ac\uc18c\uc2a4\ub97c \uacfc\ub3c4\ud558\uac8c \uc18c\ube44\ud558\ub294 \uc798\ubabb \uc791\uc131\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c \uc778\ud55c \uc704\ud5d8\uc744 \uc644\ud654\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. podSpec \uc744 \uc0ac\uc6a9\ud558\uba74 CPU \ubc0f \uba54\ubaa8\ub9ac\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CPU\ub294 \ucd08\uacfc \uc2e0\uccad\ub420 \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc555\ucd95 \uac00\ub2a5\ud55c \ub9ac\uc18c\uc2a4\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. \uba54\ubaa8\ub9ac\ub294 \uc555\ucd95\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc989, \uc5ec\ub7ec \ucee8\ud14c\uc774\ub108 \uac04\uc5d0 \uacf5\uc720\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. CPU \ub610\ub294 \uba54\ubaa8\ub9ac\uc5d0 \ub300\ud574 requests \ub97c \uc9c0\uc815\ud560 \ub54c \ubcf8\uc9c8\uc801\uc73c\ub85c \ucee8\ud14c\uc774\ub108\uac00 \ud655\ubcf4\ud560 \uc218 \uc788\ub294 memory \uc758 \uc591\uc744 \uc9c0\uc815\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Kubernetes\ub294 \ud3ec\ub4dc\uc5d0 \uc788\ub294 \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc758 \uc694\uccad\uc744 \uc9d1\uacc4\ud558\uc5ec \ud3ec\ub4dc\ub97c \uc608\uc57d\ud560 \ub178\ub4dc\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 \uc694\uccad\ub41c \uba54\ubaa8\ub9ac \uc591\uc744 \ucd08\uacfc\ud558\uba74 \ub178\ub4dc\uc5d0 \uba54\ubaa8\ub9ac \uc555\ub825\uc774 \uc788\uc73c\uba74 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Limits \ub294 \ucee8\ud14c\uc774\ub108\uac00 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\uc758 \ucd5c\ub300\ub7c9\uc774\uba70 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud574 \uc0dd\uc131\ub41c cgroup \uc758 memory.limit_in_bytes \uac12\uc5d0 \uc9c1\uc811 \ud574\ub2f9\ud569\ub2c8\ub2e4. \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\ub294 \ucee8\ud14c\uc774\ub108\ub294 OOM \uc885\ub8cc\ub429\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uac00 CPU \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uba74 \uc81c\ud55c\ub429\ub2c8\ub2e4. \ud301 \ucee8\ud14c\uc774\ub108 resources.limits \ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ucee8\ud14c\uc774\ub108 \ub9ac\uc18c\uc2a4 \uc0ac\uc6a9\ub7c9(\ub9ac\uc18c\uc2a4 \ud48b\ud504\ub9b0\ud2b8\ub77c\uace0\ub3c4 \ud568)\uc740 \ubd80\ud558 \ud14c\uc2a4\ud2b8\ub97c \uae30\ubc18\uc73c\ub85c \ub370\uc774\ud130 \uae30\ubc18\uc774\uace0 \uc815\ud655\ud574\uc57c \ud569\ub2c8\ub2e4. \uc815\ud655\ud558\uace0 \uc2e0\ub8b0\ud560 \uc218 \uc788\ub294 \ub9ac\uc18c\uc2a4 \uacf5\uac04\uc774 \uc5c6\uc73c\uba74 \ucee8\ud14c\uc774\ub108 'resources.limits'\ub97c \ucc44\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 'resources.limits.memory'\ub294 \uc7a0\uc7ac\uc801\uc778 \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4 \uc81c\ud55c \ubd80\uc815\ud655\uc131\uc744 \uc124\uba85\ud558\uae30 \uc704\ud574 \uad00\ucc30 \uac00\ub2a5\ud55c \ucd5c\ub300\uac12\ubcf4\ub2e4 20-30% \ub192\uac8c \ud328\ub529\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Kubernetes\ub294 \uc138 \uac00\uc9c0 \uc11c\ube44\uc2a4 \ud488\uc9c8(QoS) \ud074\ub798\uc2a4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc6b0\uc120 \uc21c\uc704\ub97c \uc9c0\uc815\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ub2e4\uc74c\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ubcf4\uc7a5 \ud30c\uc5f4 \uac00\ub2a5 \ucd5c\uc120\uc758 \ub178\ub825 \uc81c\ud55c \ubc0f \uc694\uccad\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \ud3ec\ub4dc\ub294 best-effort (\uac00\uc7a5 \ub0ae\uc740 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. Best-effort \ud3ec\ub4dc\ub294 \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud560 \ub54c \uac00\uc7a5 \uba3c\uc800 \uc885\ub8cc\ub429\ub2c8\ub2e4. \ud3ec\ub4dc \ub0b4\uc758 all \ucee8\ud14c\uc774\ub108 \uc5d0 \uc81c\ud55c\uc774 \uc124\uc815 \ub418\uac70\ub098 \uc694\uccad \ubc0f \uc81c\ud55c\uc774 \ub3d9\uc77c\ud55c \uac12\uc73c\ub85c \uc124\uc815\ub418\uace0 0\uc774 \uc544\ub2cc \uacbd\uc6b0 \ud3ec\ub4dc\ub294 guaranteed (\uac00\uc7a5 \ub192\uc740 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \ubcf4\uc7a5\ub41c \ud3ec\ub4dc\ub294 \uad6c\uc131\ub41c \uba54\ubaa8\ub9ac \uc81c\ud55c\uc744 \ucd08\uacfc\ud558\uc9c0 \uc54a\ub294 \ud55c \uc885\ub8cc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc0f \uc694\uccad\uc774 0\uc774 \uc544\ub2cc \ub2e4\ub978 \uac12\uc73c\ub85c \uad6c\uc131\ub418\uac70\ub098 \ud3ec\ub4dc \ub0b4\uc758 \ud55c \ucee8\ud14c\uc774\ub108\uac00 \uc81c\ud55c\uc744 \uc124\uc815\ud558\uace0 \ub2e4\ub978 \ucee8\ud14c\uc774\ub108\ub294 \ub2e4\ub978 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud574 \uc81c\ud55c\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uac70\ub098 \uc124\uc815\ub41c \uacbd\uc6b0 \ud3ec\ub4dc\ub294 burstable (\uc911\uac04 \uc6b0\uc120 \uc21c\uc704)\ub85c \uad6c\uc131\ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud3ec\ub4dc\uc5d0\ub294 \uc77c\ubd80 \ub9ac\uc18c\uc2a4 \ubcf4\uc7a5\uc774 \uc788\uc9c0\ub9cc \uc694\uccad\ub41c \uba54\ubaa8\ub9ac\ub97c \ucd08\uacfc\ud558\uba74 \uc885\ub8cc\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 \uc694\uccad\uc740 \ucee8\ud14c\uc774\ub108 cgroup\uc758 memory_limit_in_bytes \uac12\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. cgroup \uc81c\ud55c\uc740 \ud638\uc2a4\ud2b8\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uba54\ubaa8\ub9ac \uc591\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4. \uadf8\ub7fc\uc5d0\ub3c4 \ubd88\uad6c\ud558\uace0 \uc694\uccad \uac12\uc744 \ub108\ubb34 \ub0ae\uac8c \uc124\uc815\ud558\uba74 \ub178\ub4dc\uac00 \uba54\ubaa8\ub9ac \uc555\ub825\uc744 \ubc1b\ub294 \uacbd\uc6b0 \ud3ec\ub4dc\uac00 kubelet\uc5d0 \uc758\ud574 \uc885\ub8cc \ub300\uc0c1\uc774 \ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub798\uc2a4 \uc6b0\uc120\uc21c\uc704 \uc870\uac74 \uc8fd\uc774\uae30 \uc870\uac74 \ubcf4\uc7a5 \ucd5c\uace0 \uc81c\ud55c = \uc694\uccad != 0 \uba54\ubaa8\ub9ac \uc81c\ud55c\ub9cc \ucd08\uacfc \ubc84\uc2a4\ud2b8 \uac00\ub2a5 \ub9e4\uccb4 \uc81c\ud55c != \uc694\uccad != 0 \uc694\uccad \uba54\ubaa8\ub9ac\ub97c \ucd08\uacfc\ud558\uba74 \uc8fd\uc744 \uc218 \uc788\uc74c \ucd5c\uc120\uc758 \ub178\ub825 \ucd5c\uc800 \ud55c\ub3c4 \ubc0f \uc694\uccad\uc774 \uc124\uc815\ub418\uc9c0 \uc54a\uc74c \uba54\ubaa8\ub9ac\uac00 \ubd80\uc871\ud560 \ub54c \uac00\uc7a5 \uba3c\uc800 \uc8fd\uc784\uc744 \ub2f9\ud568 \ub9ac\uc18c\uc2a4 QoS\uc5d0 \ub300\ud55c \ucd94\uac00 \uc815\ubcf4\ub294 Kubernetes \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc124\uc815\ud558\uac70\ub098 \uc81c\ud55c \ubc94\uc704 . \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9\uc744 \uc0ac\uc6a9\ud558\uba74 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ud560\ub2f9\ub41c \ucd1d \ub9ac\uc18c\uc2a4 \uc591(\uc608: CPU \ubc0f RAM)\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc801\uc6a9\ub418\uba74 \ud574\ub2f9 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \ubc30\ud3ec\ub41c \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \ubc18\ub300\ub85c \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \ub9ac\uc18c\uc2a4 \ud560\ub2f9\uc744 \ubcf4\ub2e4 \uc138\ubc00\ud558\uac8c \uc81c\uc5b4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\ud55c \ubc94\uc704\ub97c \uc0ac\uc6a9\ud558\uba74 \ud30c\ub4dc\ub2f9 \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4 \ub0b4\uc758 \ucee8\ud14c\uc774\ub108\ub2f9 CPU \ubc0f \uba54\ubaa8\ub9ac \ub9ac\uc18c\uc2a4\ub97c \ucd5c\uc18c/\ucd5c\ub300\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc81c\uacf5\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uae30\ubcf8 \uc694\uccad/\uc81c\ud55c \uac12\uc744 \uc124\uc815\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. Policy-as-code \uc194\ub8e8\uc158\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc694\uccad \ubc0f \uc81c\ud55c\uc744 \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub610\ub294 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uac00 \uc0dd\uc131\ub420 \ub54c \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \ubc0f \uc81c\ud55c \ubc94\uc704\ub97c \uc0dd\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub9ac\uc18c\uc2a4 \uacbd\ud569 \ubc0f DoS \uacf5\uaca9\uc744 \ud53c\ud558\uae30 \uc704\ud574 \uac01 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \uc694\uccad \ubc0f \uc81c\ud55c \uc124\uc815"},{"location":"security/docs/pods.kr/#_12","text":"\ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud1b5\ud574 \ud504\ub85c\uc138\uc2a4\ub294 \uc2e4\ud589 \uc911\uc778 \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Sudo\ub294 SUID \ub610\ub294 SGID \ube44\ud2b8\uac00 \uc788\ub294 \ubc14\uc774\ub108\ub9ac\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc774\uc5d0 \ub300\ud55c \uc88b\uc740 \uc608\uc785\ub2c8\ub2e4. \ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc740 \uae30\ubcf8\uc801\uc73c\ub85c \uc0ac\uc6a9\uc790\uac00 \ub2e4\ub978 \uc0ac\uc6a9\uc790 \ub610\ub294 \uadf8\ub8f9\uc758 \uad8c\ud55c\uc73c\ub85c \ud30c\uc77c\uc744 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4. allowPrivilegeEscalation \uc744 false \ub85c \uc124\uc815\ud558\ub294 \uc815\ucc45 \ucf54\ub4dc \ubcc0\uacbd \uc815\ucc45\uc744 \uad6c\ud604\ud558\uac70\ub098 podSpec \uc5d0\uc11c securityContext.allowPrivilegeEscalation \uc744 \uc124\uc815\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uac00 \uad8c\ud55c \uc788\ub294 \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 . Policy-as-code \uc815\ucc45\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc798\ubabb\ub41c \uc124\uc815\uc774 \uac10\uc9c0\ub41c \uacbd\uc6b0 API \uc11c\ubc84 \uc694\uccad\uc774 \uc131\uacf5\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc \ubcf4\uc548 \ud45c\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \ud3ec\ub4dc\uac00 \uad8c\ud55c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ud2b9\uad8c \uc5d0\uc2a4\uceec\ub808\uc774\uc158\uc744 \ud5c8\uc6a9\ud558\uc9c0 \uc54a\uc74c"},{"location":"security/docs/pods.kr/#serviceaccount","text":"Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ud3ec\ub4dc\uc758 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \ube44\ud65c\uc131\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc \uc0ac\uc591 \ub610\ub294 \ubaa8\ub4e0 \ud3ec\ub4dc\uc5d0 \ub300\ud55c ServiceAccount \ud1a0\ud070 \uc790\ub3d9 \ub9c8\uc6b4\ud2b8 \ud2b9\uc815 ServiceAccount\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \uc8fc\ubaa9 ServiceAccount \ub9c8\uc6b4\ud305\uc744 \ube44\ud65c\uc131\ud654\ud574\ub3c4 \ud3ec\ub4dc\uac00 \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Kubernetes API\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4. \ud3ec\ub4dc\uac00 \ub124\ud2b8\uc6cc\ud06c\ub97c \uac00\uc9c0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud558\ub824\uba74 Kubernetes API\uc5d0 \uc561\uc138\uc2a4\ud558\ub824\uba74 [EKS \ud074\ub7ec\uc2a4\ud130 \ub05d\uc810 \uc561\uc138\uc2a4][eks-ep-access] \ubc0f \uc0ac\uc6a9 \ud3ec\ub4dc \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\ub294 NetworkPolicy api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : pod-no-automount \uc0ac\uc591 : automountServiceAccountToken : \uac70\uc9d3 api\ubc84\uc804 : v1 \uc885\ub958 : ServiceAccount \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : sa-no-automount automountServiceAccountToken : \uac70\uc9d3","title":"ServiceAccount \ud1a0\ud070 \ud0d1\uc7ac \ube44\ud65c\uc131\ud654"},{"location":"security/docs/pods.kr/#_13","text":"\ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4\ub97c \uc870\ud68c\ud558\uac70\ub098 \ud638\ucd9c\ud560 \ud544\uc694\uac00 \uc5c6\ub294 \ud3ec\ub4dc\uc758 \uacbd\uc6b0 \ub2e4\uc74c\uc744 \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Pod\uc5d0 \uc81c\uacf5\ub418\ub294 \uc815\ubcf4\uc758 \uc591\uc744 \uc904\uc785\ub2c8\ub2e4. Pod\uc758 DNS\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CoreDNS\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uace0 \ud3ec\ub4dc\uc758 \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0\uc11c \uc11c\ube44\uc2a4\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \ub178\ucd9c\ud558\uc9c0 \uc54a\ub294 \uc815\ucc45 \ud658\uacbd \ubcc0\uc218. \ud658\uacbd\uc5d0 \ub300\ud55c Kubernetes \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ubcc0\uc218 \uc11c\ube44\uc2a4 \ub9c1\ud06c\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uae30\ubcf8\uac12 Pod\uc758 DNS \uc815\ucc45\uc5d0 \ub300\ud55c \uac12\uc740 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS\ub97c \uc0ac\uc6a9\ud558\ub294 \"ClusterFirst\"\uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc774 \uc544\ub2cc \"\uae30\ubcf8\uac12\"\uc740 \uae30\ubcf8 \ub178\ub4dc\uc758 DNS \ud655\uc778\uc744 \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ubcf4\ub2e4 Pod DNS \uc815\ucc45\uc5d0 \ub300\ud55c Kubernetes \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. \uc8fc\ubaa9 \uc11c\ube44\uc2a4 \ub9c1\ud06c\ub97c \ube44\ud65c\uc131\ud654\ud558\uace0 \ud3ec\ub4dc\uc758 DNS \uc815\ucc45\uc744 \ubcc0\uacbd\ud574\ub3c4 pod\uac00 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS \uc11c\ube44\uc2a4\uc5d0 \ub300\ud55c \ub124\ud2b8\uc6cc\ud06c \uc561\uc138\uc2a4 \uad8c\ud55c\uc744 \uac00\uc9c0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4. \uacf5\uaca9\uc790 \ud074\ub7ec\uc2a4\ud130 \ub0b4 DNS\uc5d0 \ub3c4\ub2ec\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\uc758 \uc11c\ube44\uc2a4\ub97c \uacc4\uc18d \uc5f4\uac70\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc11c\ube44\uc2a4. (\uc608: dig SRV *.*.svc.cluster.local @$CLUSTER_DNS_IP ) \ud074\ub7ec\uc2a4\ud130 \ub0b4 \uc11c\ube44\uc2a4 \uac80\uc0c9, NetworkPolicy \uc0ac\uc6a9 \ud3ec\ub4dc \uc561\uc138\uc2a4\ub97c \ucc28\ub2e8\ud558\uae30 \uc704\ud574 api\ubc84\uc804 : v1 \uc885\ub958 : \ud3ec\ub4dc \uba54\ud0c0\ub370\uc774\ud130 : \uc774\ub984 : pod-no-service-info \uc0ac\uc591 : dnsPolicy : \uae30\ubcf8\uac12 # \"Default\"\ub294 \uc2e4\uc81c \uae30\ubcf8\uac12\uc774 \uc544\ub2d9\ub2c8\ub2e4. enableServiceLinks : \uac70\uc9d3","title":"\uc11c\ube44\uc2a4 \uac80\uc0c9 \ube44\ud65c\uc131\ud654"},{"location":"security/docs/pods.kr/#_14","text":"\uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc73c\ub85c \uc774\ubbf8\uc9c0\ub97c \uad6c\uc131\ud558\uba74 \uacf5\uaca9\uc790\uac00 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \ubc14\uc774\ub108\ub9ac\ub97c \ub36e\uc5b4\uc4f0\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc5d0 \uae30\ub85d\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc784\uc2dc \ub514\ub809\ud130\ub9ac\uc5d0 \uae30\ub85d\ud558\uac70\ub098 \ubcfc\ub968\uc744 \uc5f0\uacb0 \ubc0f \ub9c8\uc6b4\ud2b8\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud3ec\ub4dc\uc758 SecurityContext\ub97c \ub2e4\uc74c\uacfc \uac19\uc774 \uc124\uc815\ud558\uc5ec \uc774\ub97c \uc801\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ... \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8 : readOnlyRootFilesystem : \ucc38 ... Policy-as-code \ubc0f Pod \ubcf4\uc548 \ud45c\uc900\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774 \ub3d9\uc791\uc744 \uc2dc\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc815\ubcf4 Kubernetes\uc758 Windows \ucee8\ud14c\uc774\ub108 \uc5d0 \ub530\ub77c securityContext.readOnlyRootFilesystem \uc740 \ub2e4\uc74c\uc73c\ub85c \uc124\uc815\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \ub808\uc9c0\uc2a4\ud2b8\ub9ac \ubc0f \uc2dc\uc2a4\ud15c \ud504\ub85c\uc138\uc2a4\uac00 \ucee8\ud14c\uc774\ub108 \ub0b4\uc5d0\uc11c \uc2e4\ud589\ub418\uae30 \uc704\ud574\uc11c\ub294 \uc4f0\uae30 \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud558\ubbc0\ub85c Windows\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108\uc758 \uacbd\uc6b0 'true'.","title":"\uc77d\uae30 \uc804\uc6a9 \ub8e8\ud2b8 \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc73c\ub85c \uc774\ubbf8\uc9c0 \uad6c\uc131"},{"location":"security/docs/pods.kr/#_15","text":"open-policy-agent/gatekeeper-library: OPA Gatekeeper \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac OPA/Gatekeeper \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. PSP\ub97c \ub300\uccb4\ud569\ub2c8\ub2e4. Kyverno \uc815\ucc45 \ub77c\uc774\ube0c\ub7ec\ub9ac EKS\uc5d0 \ub300\ud55c \uc77c\ubc18\uc801\uc778 OPA \ubc0f Kyverno \uc815\ucc45 \ubaa8\uc74c. \uc815\ucc45 \uae30\ubc18 \ub300\ucc45: \ud30c\ud2b8 1 \uc815\ucc45 \uae30\ubc18 \ub300\ucc45: \ud30c\ud2b8 2 Pod Security Policy Migrator PSP\ub97c OPA/Gatekeeper, KubeWarden \ub610\ub294 Kyverno \uc815\ucc45\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \ub3c4\uad6c","title":"\ub3c4\uad6c \ubc0f \ub9ac\uc18c\uc2a4"},{"location":"security/docs/pods/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Pod Security \u00b6 The pod specification includes a variety of different attributes that can strengthen or weaken your overall security posture. As a Kubernetes practitioner your chief concern should be preventing a process that\u2019s running in a container from escaping the isolation boundaries of the container runtime and gaining access to the underlying host. Linux Capabilities \u00b6 The processes that run within a container run under the context of the [Linux] root user by default. Although the actions of root within a container are partially constrained by the set of Linux capabilities that the container runtime assigns to the containers, these default privileges could allow an attacker to escalate their privileges and/or gain access to sensitive information bound to the host, including Secrets and ConfigMaps. Below is a list of the default capabilities assigned to containers. For additional information about each capability, see http://man7.org/linux/man-pages/man7/capabilities.7.html . CAP_AUDIT_WRITE, CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_FSETID, CAP_KILL, CAP_MKNOD, CAP_NET_BIND_SERVICE, CAP_NET_RAW, CAP_SETGID, CAP_SETUID, CAP_SETFCAP, CAP_SETPCAP, CAP_SYS_CHROOT Info EC2 and Fargate pods are assigned the aforementioned capabilities by default. Additionally, Linux capabilities can only be dropped from Fargate pods. Pods that are run as privileged, inherit all of the Linux capabilities associated with root on the host. This should be avoided if possible. Node Authorization \u00b6 All Kubernetes worker nodes use an authorization mode called Node Authorization . Node Authorization authorizes all API requests that originate from the kubelet and allows nodes to perform the following actions: Read operations: services endpoints nodes pods secrets, configmaps, persistent volume claims and persistent volumes related to pods bound to the kubelet\u2019s node Write operations: nodes and node status (enable the NodeRestriction admission plugin to limit a kubelet to modify its own node) pods and pod status (enable the NodeRestriction admission plugin to limit a kubelet to modify pods bound to itself) events Auth-related operations: Read/write access to the CertificateSigningRequest (CSR) API for TLS bootstrapping the ability to create TokenReview and SubjectAccessReview for delegated authentication/authorization checks EKS uses the node restriction admission controller which only allows the node to modify a limited set of node attributes and pod objects that are bound to the node. Nevertheless, an attacker who manages to get access to the host will still be able to glean sensitive information about the environment from the Kubernetes API that could allow them to move laterally within the cluster. Pod Security Solutions \u00b6 Pod Security Policy (PSP) \u00b6 In the past, Pod Security Policy (PSP) resources were used to specify a set of requirements that pods had to meet before they could be created. As of Kubernetes version 1.21, PSP have been deprecated. They are scheduled for removal in Kubernetes version 1.25. Attention PSPs are deprecated in Kubernetes version 1.21. You will have until version 1.25 or roughly 2 years to transition to an alternative. This document explains the motivation for this deprecation. Migrating to a new pod security solution \u00b6 Since PSPs have been removed as of Kubernetes v1.25, cluster administrators and operators must replace those security controls. Two solutions can fill this need: Policy-as-code (PAC) solutions from the Kubernetes ecosystem Kubernetes Pod Security Standards (PSS) Both the PAC and PSS solutions can coexist with PSP; they can be used in clusters before PSP is removed. This eases adoption when migrating from PSP. Please see this document when considering migrating from PSP to PSS. Kyverno, one of the PAC solutions outlined below, has specific guidance outlined in a blog post when migrating from PSPs to its solution including analogous policies, feature comparisons, and a migration procedure. Additional information and guidance on migration to Kyverno with respect to Pod Security Admission (PSA) has been published on the AWS blog here . Policy-as-code (PAC) \u00b6 Policy-as-code (PAC) solutions provide guardrails to guide cluster users, and prevent unwanted behaviors, through prescribed and automated controls. PAC uses Kubernetes Dynamic Admission Controllers to intercept the Kubernetes API server request flow, via a webhook call, and mutate and validate request payloads, based on policies written and stored as code. Mutation and validation happens before the API server request results in a change to the cluster. PAC solutions use policies to match and act on API server request payloads, based on taxonomy and values. There are several open source PAC solutions available for Kubernetes. These solutions are not part of the Kubernetes project; they are sourced from the Kubernetes ecosystem. Some PAC solutions are listed below. OPA/Gatekeeper Open Policy Agent (OPA) Kyverno Kubewarden jsPolicy For further information about PAC solutions and how to help you select the appropriate solution for your needs, see the links below. Policy-based countermeasures for Kubernetes \u2013 Part 1 Policy-based countermeasures for Kubernetes \u2013 Part 2 Pod Security Standards (PSS) and Pod Security Admission (PSA) \u00b6 In response to the PSP deprecation and the ongoing need to control pod security out-of-the-box, with a built-in Kubernetes solution, the Kubernetes Auth Special Interest Group created the Pod Security Standards (PSS) and Pod Security Admission (PSA) . The PSA effort includes an admission controller webhook project that implements the controls defined in the PSS. This admission controller approach resembles that used in the PAC solutions. According to the Kubernetes documentation, the PSS \"define three different policies to broadly cover the security spectrum. These policies are cumulative and range from highly-permissive to highly-restrictive.\" These policies are defined as: Privileged: Unrestricted (unsecure) policy, providing the widest possible level of permissions. This policy allows for known privilege escalations. It is the absence of a policy. This is good for applications such as logging agents, CNIs, storage drivers, and other system wide applications that need privileged access. Baseline: Minimally restrictive policy which prevents known privilege escalations. Allows the default (minimally specified) Pod configuration. The baseline policy prohibits use of hostNetwork, hostPID, hostIPC, hostPath, hostPort, the inability to add Linux capabilities, along with several other restrictions. Restricted: Heavily restricted policy, following current Pod hardening best practices. This policy inherits from the baseline and adds further restrictions such as the inability to run as root or a root-group. Restricted policies may impact an application's ability to function. They are primarily targeted at running security critical applications. These policies define profiles for pod execution , arranged into three levels of privileged vs. restricted access. To implement the controls defined by the PSS, PSA operates in three modes: enforce: Policy violations will cause the pod to be rejected. audit: Policy violations will trigger the addition of an audit annotation to the event recorded in the audit log, but are otherwise allowed. warn: Policy violations will trigger a user-facing warning, but are otherwise allowed. These modes and the profile (restriction) levels are configured at the Kubernetes Namespace level, using labels, as seen in the below example. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/enforce : restricted When used independently, these operational modes have different responses that result in different user experiences. The enforce mode will prevent pods from being created if respective podSpecs violate the configured restriction level. However, in this mode, non-pod Kubernetes objects that create pods, such as Deployments, will not be prevented from being applied to the cluster, even if the podSpec therein violates the applied PSS. In this case the Deployment will be applied, while the pod(s) will be prevented from being applied. This is a difficult user experience, as there is no immediate indication that the successfully applied Deployment object belies failed pod creation. The offending podSpecs will not create pods. Inspecting the Deployment resource with kubectl get deploy <DEPLOYMENT_NAME> -oyaml will expose the message from the failed pod(s) .status.conditions element, as seen below. ... status : conditions : - lastTransitionTime : \"2022-01-20T01:02:08Z\" lastUpdateTime : \"2022-01-20T01:02:08Z\" message : 'pods \"test-688f68dc87-tw587\" is forbidden: violates PodSecurity \"restricted:latest\": allowPrivilegeEscalation != false (container \"test\" must set securityContext.allowPrivilegeEscalation=false), unrestricted capabilities (container \"test\" must set securityContext.capabilities.drop=[\"ALL\"]), runAsNonRoot != true (pod or container \"test\" must set securityContext.runAsNonRoot=true), seccompProfile (pod or container \"test\" must set securityContext.seccompProfile.type to \"RuntimeDefault\" or \"Localhost\")' reason : FailedCreate status : \"True\" type : ReplicaFailure ... In both the audit and warn modes, the pod restrictions do not prevent violating pods from being created and started. However, in these modes audit annotations on API server audit log events and warnings to API server clients, such as kubectl , are triggered, respectively, when pods, as well as objects that create pods, contain podSpecs with violations. A kubectl Warning message is seen below. Warning: would violate PodSecurity \"restricted:latest\" : allowPrivilegeEscalation ! = false ( container \"test\" must set securityContext.allowPrivilegeEscalation = false ) , unrestricted capabilities ( container \"test\" must set securityContext.capabilities.drop =[ \"ALL\" ]) , runAsNonRoot ! = true ( pod or container \"test\" must set securityContext.runAsNonRoot = true ) , seccompProfile ( pod or container \"test\" must set securityContext.seccompProfile.type to \"RuntimeDefault\" or \"Localhost\" ) deployment.apps/test created The PSA audit and warn modes are useful when introducing the PSS without negatively impacting cluster operations. The PSA operational modes are not mutually exclusive, and can be used in a cumulative manner. As seen below, the multiple modes can be configured in a single namespace. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/audit : restricted pod-security.kubernetes.io/enforce : restricted pod-security.kubernetes.io/warn : restricted In the above example, the user-friendly warnings and audit annotations are provided when applying Deployments, while the enforce of violations are also provided at the pod level. In fact multiple PSA labels can use different profile levels, as seen below. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/enforce : baseline pod-security.kubernetes.io/warn : restricted In the above example, PSA is configured to allow the creation of all pods that satisfy the baseline profile level, and then warn on pods (and objects that create pods) that violate the restricted profile level. This is a useful approach to determine the possible impacts when changing from the baseline to restricted profiles. Existing Pods \u00b6 If a namespace with existing pods is modified to use a more restrictive PSS profile, the audit and warn modes will produce appropriate messages; however, enforce mode will not delete the pods. The warning messages are seen below. Warning: existing pods in namespace \"policy-test\" violate the new PodSecurity enforce level \"restricted:latest\" Warning: test-688f68dc87-htm8x: allowPrivilegeEscalation ! = false, unrestricted capabilities, runAsNonRoot ! = true, seccompProfile namespace/policy-test configured Exemptions \u00b6 PSA uses Exemptions to exclude enforcement of violations against pods that would have otherwise been applied. These exemptions are listed below. Usernames: requests from users with an exempt authenticated (or impersonated) username are ignored. RuntimeClassNames: pods and workload resources specifying an exempt runtime class name are ignored. Namespaces: pods and workload resources in an exempt namespace are ignored. These exemptions are applied statically in the PSA admission controller configuration as part of the API server configuration. In the Validating Webhook implementation the exemptions can be configured within a Kubernetes ConfigMap resource that gets mounted as a volume into the pod-security-webhook container. apiVersion : v1 kind : ConfigMap metadata : name : pod-security-webhook namespace : pod-security-webhook data : podsecurityconfiguration.yaml : | apiVersion: pod-security.admission.config.k8s.io/v1 kind: PodSecurityConfiguration defaults: enforce: \"restricted\" enforce-version: \"latest\" audit: \"restricted\" audit-version: \"latest\" warn: \"restricted\" warn-version: \"latest\" exemptions: # Array of authenticated usernames to exempt. usernames: [] # Array of runtime class names to exempt. runtimeClasses: [] # Array of namespaces to exempt. namespaces: [\"kube-system\",\"policy-test1\"] As seen in the above ConfigMap YAML the cluster-wide default PSS level has been set to restricted for all PSA modes, audit , enforce , and warn . This affects all namespaces, except those exempted: namespaces: [\"kube-system\",\"policy-test1\"] . Additionally, in the ValidatingWebhookConfiguration resource, seen below, the pod-security-webhook namespace is also exempted from configured PSS. ... webhooks : # Audit annotations will be prefixed with this name - name : \"pod-security-webhook.kubernetes.io\" # Fail-closed admission webhooks can present operational challenges. # You may want to consider using a failure policy of Ignore, but should # consider the security tradeoffs. failurePolicy : Fail namespaceSelector : # Exempt the webhook itself to avoid a circular dependency. matchExpressions : - key : kubernetes.io/metadata.name operator : NotIn values : [ \"pod-security-webhook\" ] ... Attention Pod Security Admissions graduated to stable in Kubernetes v1.25. If you wanted to use the Pod Security Admission feature prior to it being enabled by default, you needed to install the dynamic admission controller (mutating webhook). The instructions for installing and configuring the webhook can be found here . Choosing between policy-as-code and Pod Security Standards \u00b6 The Pod Security Standards (PSS) were developed to replace the Pod Security Policy (PSP), by providing a solution that was built-in to Kubernetes and did not require solutions from the Kubernetes ecosystem. That being said, policy-as-code (PAC) solutions are considerably more flexible. The following list of Pros and Cons is designed help you make a more informed decision about your pod security solution. Policy-as-code (as compared to Pod Security Standards) Pros: More flexible and more granular (down to attributes of resources if need be) Not just focused on pods, can be used against different resources and actions Not just applied at the namespace level More mature than the Pod Security Standards Decisions can be based on anything in the API server request payload, as well as existing cluster resources and external data (solution dependent) Supports mutating API server requests before validation (solution dependent) Can generate complementary policies and Kubernetes resources (solution dependent - From pod policies, Kyverno can auto-gen policies for higher-level controllers, such as Deployments. Kyverno can also generate additional Kubernetes resources \"when a new resource is created or when the source is updated\" by using Generate Rules .) Can be used to shift left, into CICD pipelines, before making calls to the Kubernetes API server (solution dependent) Can be used to implement behaviors that are not necessarily security related, such as best practices, organizational standards, etc. Can be used in non-Kubernetes use cases (solution dependent) Because of flexibility, the user experience can be tuned to users' needs Cons: Not built into Kubernetes More complex to learn, configure, and support Policy authoring may require new skills/languages/capabilities Pod Security Admission (as compared to policy-as-code) Pros: Built into Kubernetes Simpler to configure No new languages to use or policies to author If the cluster default admission level is configured to privileged , namespace labels can be used to opt namespaces into the pod security profiles. Cons: Not as flexible or granular as policy-as-code Only 3 levels of restrictions Primarily focused on pods Summary \u00b6 If you currently do not have a pod security solution, beyond PSP, and your required pod security posture fits the model defined in the Pod Security Standards (PSS), then an easier path may be to adopt the PSS, in lieu of a policy-as-code solution. However, if your pod security posture does not fit the PSS model, or you envision adding additional controls, beyond that defined by PSS, then a policy-as-code solution would seem a better fit. Recommendations \u00b6 Use multiple Pod Security Admission (PSA) modes for a better user experience \u00b6 As mentioned earlier, PSA enforce mode prevents pods with PSS violations from being applied, but does not stop higher-level controllers, such as Deployments. In fact, the Deployment will be applied successfully without any indication that the pods failed to be applied. While you can use kubectl to inspect the Deployment object, and discover the failed pods message from the PSA, the user experience could be better. To make the user experience better, multiple PSA modes (audit, enforce, warn) should be used. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/audit : restricted pod-security.kubernetes.io/enforce : restricted pod-security.kubernetes.io/warn : restricted In the above example, with enforce mode defined, when a Deployment manifest with PSS violations in the respective podSpec is attempted to be applied to the Kubernetes API server, the Deployment will be successfully applied, but the pods will not. And, since the audit and warn modes are also enabled, the API server client will receive a warning message and the API server audit log event will be annotated with a message as well. Restrict the containers that can run as privileged \u00b6 As mentioned, containers that run as privileged inherit all of the Linux capabilities assigned to root on the host. Seldom do containers need these types of privileges to function properly. There are multiple methods that can be used to restrict the permissions and capabilities of containers. Attention Fargate is a launch type that enables you to run \"serverless\" container(s) where the containers of a pod are run on infrastructure that AWS manages. With Fargate, you cannot run a privileged container or configure your pod to use hostNetwork or hostPort. Do not run processes in containers as root \u00b6 All containers run as root by default. This could be problematic if an attacker is able to exploit a vulnerability in the application and get shell access to the running container. You can mitigate this risk a variety of ways. First, by removing the shell from the container image. Second, adding the USER directive to your Dockerfile or running the containers in the pod as a non-root user. The Kubernetes podSpec includes a set of fields, under spec.securityContext , that let you specify the user and/or group under which to run your application. These fields are runAsUser and runAsGroup respectively. To enforce the use of the spec.securityContext , and its associated elements, within the Kubernetes podSpec, policy-as-code or Pod Security Standards can be added to clusters. These solutions allow you to write and/or use policies or profiles that can validate inbound Kubernetes API server request payloads, before they are persisted into etcd. Furthermore, policy-as-code solutions can mutate inbound requests, and in some cases, generate new requests. Never run Docker in Docker or mount the socket in the container \u00b6 While this conveniently lets you to build/run images in Docker containers, you're basically relinquishing complete control of the node to the process running in the container. If you need to build container images on Kubernetes use Kaniko , buildah , or a build service like CodeBuild instead. Tip Kubernetes clusters used for CICD processing, such as building container images, should be isolated from clusters running more generalized workloads. Restrict the use of hostPath or if hostPath is necessary restrict which prefixes can be used and configure the volume as read-only \u00b6 hostPath is a volume that mounts a directory from the host directly to the container. Rarely will pods need this type of access, but if they do, you need to be aware of the risks. By default pods that run as root will have write access to the file system exposed by hostPath. This could allow an attacker to modify the kubelet settings, create symbolic links to directories or files not directly exposed by the hostPath, e.g. /etc/shadow, install ssh keys, read secrets mounted to the host, and other malicious things. To mitigate the risks from hostPath, configure the spec.containers.volumeMounts as readOnly , for example: volumeMounts : - name : hostPath-volume readOnly : true mountPath : /host-path You should also use policy-as-code solutions to restrict the directories that can be used by hostPath volumes, or prevent hostPath usage altogether. You can use the Pod Security Standards Baseline or Restricted policies to prevent the use of hostPath . For further information about the dangers of privileged escalation, read Seth Art's blog Bad Pods: Kubernetes Pod Privilege Escalation . Set requests and limits for each container to avoid resource contention and DoS attacks \u00b6 A pod without requests or limits can theoretically consume all of the resources available on a host. As additional pods are scheduled onto a node, the node may experience CPU or memory pressure which can cause the Kubelet to terminate or evict pods from the node. While you can\u2019t prevent this from happening all together, setting requests and limits will help minimize resource contention and mitigate the risk from poorly written applications that consume an excessive amount of resources. The podSpec allows you to specify requests and limits for CPU and memory. CPU is considered a compressible resource because it can be oversubscribed. Memory is incompressible, i.e. it cannot be shared among multiple containers. When you specify requests for CPU or memory, you\u2019re essentially designating the amount of memory that containers are guaranteed to get. Kubernetes aggregates the requests of all the containers in a pod to determine which node to schedule the pod onto. If a container exceeds the requested amount of memory it may be subject to termination if there\u2019s memory pressure on the node. Limits are the maximum amount of CPU and memory resources that a container is allowed to consume and directly corresponds to the memory.limit_in_bytes value of the cgroup created for the container. A container that exceeds the memory limit will be OOM killed. If a container exceeds its CPU limit, it will be throttled. Tip When using container resources.limits it is strongly recommended that container resource usage (a.k.a. Resource Footprints) be data-driven and accurate, based on load testing. Absent an accurate and trusted resource footprint, container resources.limits can be padded. For example, resources.limits.memory could be padded 20-30% higher than observable maximums, to account for potential memory resource limit inaccuracies. Kubernetes uses three Quality of Service (QoS) classes to prioritize the workloads running on a node. These include: guaranteed burstable best-effort If limits and requests are not set, the pod is configured as best-effort (lowest priority). Best-effort pods are the first to get killed when there is insufficient memory. If limits are set on all containers within the pod, or if the requests and limits are set to the same values and not equal to 0, the pod is configured as guaranteed (highest priority). Guaranteed pods will not be killed unless they exceed their configured memory limits. If the limits and requests are configured with different values and not equal to 0, or one container within the pod sets limits and the others don\u2019t or have limits set for different resources, the pods are configured as burstable (medium priority). These pods have some resource guarantees, but can be killed once they exceed their requested memory. Attention Requests don't affect the memory_limit_in_bytes value of the container's cgroup; the cgroup limit is set to the amount of memory available on the host. Nevertheless, setting the requests value too low could cause the pod to be targeted for termination by the kubelet if the node undergoes memory pressure. Class Priority Condition Kill Condition Guaranteed highest limit = request != 0 Only exceed memory limits Burstable medium limit != request != 0 Can be killed if exceed request memory Best-Effort lowest limit & request Not Set First to get killed when there's insufficient memory For additional information about resource QoS, please refer to the Kubernetes documentation . You can force the use of requests and limits by setting a resource quota on a namespace or by creating a limit range . A resource quota allows you to specify the total amount of resources, e.g. CPU and RAM, allocated to a namespace. When it\u2019s applied to a namespace, it forces you to specify requests and limits for all containers deployed into that namespace. By contrast, limit ranges give you more granular control of the allocation of resources. With limit ranges you can min/max for CPU and memory resources per pod or per container within a namespace. You can also use them to set default request/limit values if none are provided. Policy-as-code solutions can be used enforce requests and limits. or to even create the resource quotas and limit ranges when namespaces are created. Do not allow privileged escalation \u00b6 Privileged escalation allows a process to change the security context under which its running. Sudo is a good example of this as are binaries with the SUID or SGID bit. Privileged escalation is basically a way for users to execute a file with the permissions of another user or group. You can prevent a container from using privileged escalation by implementing a policy-as-code mutating policy that sets allowPrivilegeEscalation to false or by setting securityContext.allowPrivilegeEscalation in the podSpec . Policy-as-code policies can also be used to prevent API server requests from succeeding if incorrect settings are detected. Pod Security Standards can also be used to prevent pods from using privilege escalation. Disable ServiceAccount token mounts \u00b6 For pods that do not need to access the Kubernetes API, you can disable the automatic mounting of a ServiceAccount token on a pod spec, or for all pods that use a particular ServiceAccount. Attention Disabling ServiceAccount mounting does not prevent a pod from having network access to the Kubernetes API. To prevent a pod from having any network access to the Kubernetes API, you will need to modify the EKS cluster endpoint access and use NetworkPolicy to block pod access apiVersion : v1 kind : Pod metadata : name : pod-no-automount spec : automountServiceAccountToken : false apiVersion : v1 kind : ServiceAccount metadata : name : sa-no-automount automountServiceAccountToken : false Disable service discovery \u00b6 For pods that do not need to lookup or call in-cluster services, you can reduce the amount of information given to a pod. You can set the Pod's DNS policy to not use CoreDNS, and not expose services in the pod's namespace as environment variables. See the Kubernetes docs on environment variables for more information on service links. The default value for a pod's DNS policy is \"ClusterFirst\" which uses in-cluster DNS, while the non-default value \"Default\" uses the underlying node's DNS resolution. See the Kubernetes docs on Pod DNS policy for more information. Attention Disabling service links and changing the pod's DNS policy does not prevent a pod from having network access to the in-cluster DNS service. An attacker can still enumerate services in a cluster by reaching the in-cluster DNS service. (ex: dig SRV *.*.svc.cluster.local @$CLUSTER_DNS_IP ) To prevent in-cluster service discovery, use NetworkPolicy to block pod access apiVersion : v1 kind : Pod metadata : name : pod-no-service-info spec : dnsPolicy : Default # \"Default\" is not the true default value enableServiceLinks : false Configure your images with read-only root file system \u00b6 Configuring your images with a read-only root file system prevents an attacker from overwriting a binary on the file system that your application uses. If your application has to write to the file system, consider writing to a temporary directory or attach and mount a volume. You can enforce this by setting the pod's SecurityContext as follows: ... securityContext : readOnlyRootFilesystem : true ... Policy-as-code and Pod Security Standards can be used to enforce this behavior. Info As per Windows containers in Kubernetes securityContext.readOnlyRootFilesystem cannot be set to true for a container running on Windows as write access is required for registry and system processes to run inside the container. Tools and Resources \u00b6 open-policy-agent/gatekeeper-library: The OPA Gatekeeper policy library a library of OPA/Gatekeeper policies that you can use as a substitute for PSPs. Kyverno Policy Library A collection of common OPA and Kyverno policies for EKS. Policy based countermeasures: part 1 Policy based countermeasures: part 2 Pod Security Policy Migrator a tool that converts PSPs to OPA/Gatekeeper, KubeWarden, or Kyverno policies","title":"Pod Security ({'name': 'English', 'build': True})"},{"location":"security/docs/pods/#pod-security","text":"The pod specification includes a variety of different attributes that can strengthen or weaken your overall security posture. As a Kubernetes practitioner your chief concern should be preventing a process that\u2019s running in a container from escaping the isolation boundaries of the container runtime and gaining access to the underlying host.","title":"Pod Security"},{"location":"security/docs/pods/#linux-capabilities","text":"The processes that run within a container run under the context of the [Linux] root user by default. Although the actions of root within a container are partially constrained by the set of Linux capabilities that the container runtime assigns to the containers, these default privileges could allow an attacker to escalate their privileges and/or gain access to sensitive information bound to the host, including Secrets and ConfigMaps. Below is a list of the default capabilities assigned to containers. For additional information about each capability, see http://man7.org/linux/man-pages/man7/capabilities.7.html . CAP_AUDIT_WRITE, CAP_CHOWN, CAP_DAC_OVERRIDE, CAP_FOWNER, CAP_FSETID, CAP_KILL, CAP_MKNOD, CAP_NET_BIND_SERVICE, CAP_NET_RAW, CAP_SETGID, CAP_SETUID, CAP_SETFCAP, CAP_SETPCAP, CAP_SYS_CHROOT Info EC2 and Fargate pods are assigned the aforementioned capabilities by default. Additionally, Linux capabilities can only be dropped from Fargate pods. Pods that are run as privileged, inherit all of the Linux capabilities associated with root on the host. This should be avoided if possible.","title":"Linux Capabilities"},{"location":"security/docs/pods/#node-authorization","text":"All Kubernetes worker nodes use an authorization mode called Node Authorization . Node Authorization authorizes all API requests that originate from the kubelet and allows nodes to perform the following actions: Read operations: services endpoints nodes pods secrets, configmaps, persistent volume claims and persistent volumes related to pods bound to the kubelet\u2019s node Write operations: nodes and node status (enable the NodeRestriction admission plugin to limit a kubelet to modify its own node) pods and pod status (enable the NodeRestriction admission plugin to limit a kubelet to modify pods bound to itself) events Auth-related operations: Read/write access to the CertificateSigningRequest (CSR) API for TLS bootstrapping the ability to create TokenReview and SubjectAccessReview for delegated authentication/authorization checks EKS uses the node restriction admission controller which only allows the node to modify a limited set of node attributes and pod objects that are bound to the node. Nevertheless, an attacker who manages to get access to the host will still be able to glean sensitive information about the environment from the Kubernetes API that could allow them to move laterally within the cluster.","title":"Node Authorization"},{"location":"security/docs/pods/#pod-security-solutions","text":"","title":"Pod Security Solutions"},{"location":"security/docs/pods/#pod-security-policy-psp","text":"In the past, Pod Security Policy (PSP) resources were used to specify a set of requirements that pods had to meet before they could be created. As of Kubernetes version 1.21, PSP have been deprecated. They are scheduled for removal in Kubernetes version 1.25. Attention PSPs are deprecated in Kubernetes version 1.21. You will have until version 1.25 or roughly 2 years to transition to an alternative. This document explains the motivation for this deprecation.","title":"Pod Security Policy (PSP)"},{"location":"security/docs/pods/#migrating-to-a-new-pod-security-solution","text":"Since PSPs have been removed as of Kubernetes v1.25, cluster administrators and operators must replace those security controls. Two solutions can fill this need: Policy-as-code (PAC) solutions from the Kubernetes ecosystem Kubernetes Pod Security Standards (PSS) Both the PAC and PSS solutions can coexist with PSP; they can be used in clusters before PSP is removed. This eases adoption when migrating from PSP. Please see this document when considering migrating from PSP to PSS. Kyverno, one of the PAC solutions outlined below, has specific guidance outlined in a blog post when migrating from PSPs to its solution including analogous policies, feature comparisons, and a migration procedure. Additional information and guidance on migration to Kyverno with respect to Pod Security Admission (PSA) has been published on the AWS blog here .","title":"Migrating to a new pod security solution"},{"location":"security/docs/pods/#policy-as-code-pac","text":"Policy-as-code (PAC) solutions provide guardrails to guide cluster users, and prevent unwanted behaviors, through prescribed and automated controls. PAC uses Kubernetes Dynamic Admission Controllers to intercept the Kubernetes API server request flow, via a webhook call, and mutate and validate request payloads, based on policies written and stored as code. Mutation and validation happens before the API server request results in a change to the cluster. PAC solutions use policies to match and act on API server request payloads, based on taxonomy and values. There are several open source PAC solutions available for Kubernetes. These solutions are not part of the Kubernetes project; they are sourced from the Kubernetes ecosystem. Some PAC solutions are listed below. OPA/Gatekeeper Open Policy Agent (OPA) Kyverno Kubewarden jsPolicy For further information about PAC solutions and how to help you select the appropriate solution for your needs, see the links below. Policy-based countermeasures for Kubernetes \u2013 Part 1 Policy-based countermeasures for Kubernetes \u2013 Part 2","title":"Policy-as-code (PAC)"},{"location":"security/docs/pods/#pod-security-standards-pss-and-pod-security-admission-psa","text":"In response to the PSP deprecation and the ongoing need to control pod security out-of-the-box, with a built-in Kubernetes solution, the Kubernetes Auth Special Interest Group created the Pod Security Standards (PSS) and Pod Security Admission (PSA) . The PSA effort includes an admission controller webhook project that implements the controls defined in the PSS. This admission controller approach resembles that used in the PAC solutions. According to the Kubernetes documentation, the PSS \"define three different policies to broadly cover the security spectrum. These policies are cumulative and range from highly-permissive to highly-restrictive.\" These policies are defined as: Privileged: Unrestricted (unsecure) policy, providing the widest possible level of permissions. This policy allows for known privilege escalations. It is the absence of a policy. This is good for applications such as logging agents, CNIs, storage drivers, and other system wide applications that need privileged access. Baseline: Minimally restrictive policy which prevents known privilege escalations. Allows the default (minimally specified) Pod configuration. The baseline policy prohibits use of hostNetwork, hostPID, hostIPC, hostPath, hostPort, the inability to add Linux capabilities, along with several other restrictions. Restricted: Heavily restricted policy, following current Pod hardening best practices. This policy inherits from the baseline and adds further restrictions such as the inability to run as root or a root-group. Restricted policies may impact an application's ability to function. They are primarily targeted at running security critical applications. These policies define profiles for pod execution , arranged into three levels of privileged vs. restricted access. To implement the controls defined by the PSS, PSA operates in three modes: enforce: Policy violations will cause the pod to be rejected. audit: Policy violations will trigger the addition of an audit annotation to the event recorded in the audit log, but are otherwise allowed. warn: Policy violations will trigger a user-facing warning, but are otherwise allowed. These modes and the profile (restriction) levels are configured at the Kubernetes Namespace level, using labels, as seen in the below example. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/enforce : restricted When used independently, these operational modes have different responses that result in different user experiences. The enforce mode will prevent pods from being created if respective podSpecs violate the configured restriction level. However, in this mode, non-pod Kubernetes objects that create pods, such as Deployments, will not be prevented from being applied to the cluster, even if the podSpec therein violates the applied PSS. In this case the Deployment will be applied, while the pod(s) will be prevented from being applied. This is a difficult user experience, as there is no immediate indication that the successfully applied Deployment object belies failed pod creation. The offending podSpecs will not create pods. Inspecting the Deployment resource with kubectl get deploy <DEPLOYMENT_NAME> -oyaml will expose the message from the failed pod(s) .status.conditions element, as seen below. ... status : conditions : - lastTransitionTime : \"2022-01-20T01:02:08Z\" lastUpdateTime : \"2022-01-20T01:02:08Z\" message : 'pods \"test-688f68dc87-tw587\" is forbidden: violates PodSecurity \"restricted:latest\": allowPrivilegeEscalation != false (container \"test\" must set securityContext.allowPrivilegeEscalation=false), unrestricted capabilities (container \"test\" must set securityContext.capabilities.drop=[\"ALL\"]), runAsNonRoot != true (pod or container \"test\" must set securityContext.runAsNonRoot=true), seccompProfile (pod or container \"test\" must set securityContext.seccompProfile.type to \"RuntimeDefault\" or \"Localhost\")' reason : FailedCreate status : \"True\" type : ReplicaFailure ... In both the audit and warn modes, the pod restrictions do not prevent violating pods from being created and started. However, in these modes audit annotations on API server audit log events and warnings to API server clients, such as kubectl , are triggered, respectively, when pods, as well as objects that create pods, contain podSpecs with violations. A kubectl Warning message is seen below. Warning: would violate PodSecurity \"restricted:latest\" : allowPrivilegeEscalation ! = false ( container \"test\" must set securityContext.allowPrivilegeEscalation = false ) , unrestricted capabilities ( container \"test\" must set securityContext.capabilities.drop =[ \"ALL\" ]) , runAsNonRoot ! = true ( pod or container \"test\" must set securityContext.runAsNonRoot = true ) , seccompProfile ( pod or container \"test\" must set securityContext.seccompProfile.type to \"RuntimeDefault\" or \"Localhost\" ) deployment.apps/test created The PSA audit and warn modes are useful when introducing the PSS without negatively impacting cluster operations. The PSA operational modes are not mutually exclusive, and can be used in a cumulative manner. As seen below, the multiple modes can be configured in a single namespace. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/audit : restricted pod-security.kubernetes.io/enforce : restricted pod-security.kubernetes.io/warn : restricted In the above example, the user-friendly warnings and audit annotations are provided when applying Deployments, while the enforce of violations are also provided at the pod level. In fact multiple PSA labels can use different profile levels, as seen below. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/enforce : baseline pod-security.kubernetes.io/warn : restricted In the above example, PSA is configured to allow the creation of all pods that satisfy the baseline profile level, and then warn on pods (and objects that create pods) that violate the restricted profile level. This is a useful approach to determine the possible impacts when changing from the baseline to restricted profiles.","title":"Pod Security Standards (PSS) and Pod Security Admission (PSA)"},{"location":"security/docs/pods/#existing-pods","text":"If a namespace with existing pods is modified to use a more restrictive PSS profile, the audit and warn modes will produce appropriate messages; however, enforce mode will not delete the pods. The warning messages are seen below. Warning: existing pods in namespace \"policy-test\" violate the new PodSecurity enforce level \"restricted:latest\" Warning: test-688f68dc87-htm8x: allowPrivilegeEscalation ! = false, unrestricted capabilities, runAsNonRoot ! = true, seccompProfile namespace/policy-test configured","title":"Existing Pods"},{"location":"security/docs/pods/#exemptions","text":"PSA uses Exemptions to exclude enforcement of violations against pods that would have otherwise been applied. These exemptions are listed below. Usernames: requests from users with an exempt authenticated (or impersonated) username are ignored. RuntimeClassNames: pods and workload resources specifying an exempt runtime class name are ignored. Namespaces: pods and workload resources in an exempt namespace are ignored. These exemptions are applied statically in the PSA admission controller configuration as part of the API server configuration. In the Validating Webhook implementation the exemptions can be configured within a Kubernetes ConfigMap resource that gets mounted as a volume into the pod-security-webhook container. apiVersion : v1 kind : ConfigMap metadata : name : pod-security-webhook namespace : pod-security-webhook data : podsecurityconfiguration.yaml : | apiVersion: pod-security.admission.config.k8s.io/v1 kind: PodSecurityConfiguration defaults: enforce: \"restricted\" enforce-version: \"latest\" audit: \"restricted\" audit-version: \"latest\" warn: \"restricted\" warn-version: \"latest\" exemptions: # Array of authenticated usernames to exempt. usernames: [] # Array of runtime class names to exempt. runtimeClasses: [] # Array of namespaces to exempt. namespaces: [\"kube-system\",\"policy-test1\"] As seen in the above ConfigMap YAML the cluster-wide default PSS level has been set to restricted for all PSA modes, audit , enforce , and warn . This affects all namespaces, except those exempted: namespaces: [\"kube-system\",\"policy-test1\"] . Additionally, in the ValidatingWebhookConfiguration resource, seen below, the pod-security-webhook namespace is also exempted from configured PSS. ... webhooks : # Audit annotations will be prefixed with this name - name : \"pod-security-webhook.kubernetes.io\" # Fail-closed admission webhooks can present operational challenges. # You may want to consider using a failure policy of Ignore, but should # consider the security tradeoffs. failurePolicy : Fail namespaceSelector : # Exempt the webhook itself to avoid a circular dependency. matchExpressions : - key : kubernetes.io/metadata.name operator : NotIn values : [ \"pod-security-webhook\" ] ... Attention Pod Security Admissions graduated to stable in Kubernetes v1.25. If you wanted to use the Pod Security Admission feature prior to it being enabled by default, you needed to install the dynamic admission controller (mutating webhook). The instructions for installing and configuring the webhook can be found here .","title":"Exemptions"},{"location":"security/docs/pods/#choosing-between-policy-as-code-and-pod-security-standards","text":"The Pod Security Standards (PSS) were developed to replace the Pod Security Policy (PSP), by providing a solution that was built-in to Kubernetes and did not require solutions from the Kubernetes ecosystem. That being said, policy-as-code (PAC) solutions are considerably more flexible. The following list of Pros and Cons is designed help you make a more informed decision about your pod security solution. Policy-as-code (as compared to Pod Security Standards) Pros: More flexible and more granular (down to attributes of resources if need be) Not just focused on pods, can be used against different resources and actions Not just applied at the namespace level More mature than the Pod Security Standards Decisions can be based on anything in the API server request payload, as well as existing cluster resources and external data (solution dependent) Supports mutating API server requests before validation (solution dependent) Can generate complementary policies and Kubernetes resources (solution dependent - From pod policies, Kyverno can auto-gen policies for higher-level controllers, such as Deployments. Kyverno can also generate additional Kubernetes resources \"when a new resource is created or when the source is updated\" by using Generate Rules .) Can be used to shift left, into CICD pipelines, before making calls to the Kubernetes API server (solution dependent) Can be used to implement behaviors that are not necessarily security related, such as best practices, organizational standards, etc. Can be used in non-Kubernetes use cases (solution dependent) Because of flexibility, the user experience can be tuned to users' needs Cons: Not built into Kubernetes More complex to learn, configure, and support Policy authoring may require new skills/languages/capabilities Pod Security Admission (as compared to policy-as-code) Pros: Built into Kubernetes Simpler to configure No new languages to use or policies to author If the cluster default admission level is configured to privileged , namespace labels can be used to opt namespaces into the pod security profiles. Cons: Not as flexible or granular as policy-as-code Only 3 levels of restrictions Primarily focused on pods","title":"Choosing between policy-as-code and Pod Security Standards"},{"location":"security/docs/pods/#summary","text":"If you currently do not have a pod security solution, beyond PSP, and your required pod security posture fits the model defined in the Pod Security Standards (PSS), then an easier path may be to adopt the PSS, in lieu of a policy-as-code solution. However, if your pod security posture does not fit the PSS model, or you envision adding additional controls, beyond that defined by PSS, then a policy-as-code solution would seem a better fit.","title":"Summary"},{"location":"security/docs/pods/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/pods/#use-multiple-pod-security-admission-psa-modes-for-a-better-user-experience","text":"As mentioned earlier, PSA enforce mode prevents pods with PSS violations from being applied, but does not stop higher-level controllers, such as Deployments. In fact, the Deployment will be applied successfully without any indication that the pods failed to be applied. While you can use kubectl to inspect the Deployment object, and discover the failed pods message from the PSA, the user experience could be better. To make the user experience better, multiple PSA modes (audit, enforce, warn) should be used. apiVersion : v1 kind : Namespace metadata : name : policy-test labels : pod-security.kubernetes.io/audit : restricted pod-security.kubernetes.io/enforce : restricted pod-security.kubernetes.io/warn : restricted In the above example, with enforce mode defined, when a Deployment manifest with PSS violations in the respective podSpec is attempted to be applied to the Kubernetes API server, the Deployment will be successfully applied, but the pods will not. And, since the audit and warn modes are also enabled, the API server client will receive a warning message and the API server audit log event will be annotated with a message as well.","title":"Use multiple Pod Security Admission (PSA) modes for a better user experience"},{"location":"security/docs/pods/#restrict-the-containers-that-can-run-as-privileged","text":"As mentioned, containers that run as privileged inherit all of the Linux capabilities assigned to root on the host. Seldom do containers need these types of privileges to function properly. There are multiple methods that can be used to restrict the permissions and capabilities of containers. Attention Fargate is a launch type that enables you to run \"serverless\" container(s) where the containers of a pod are run on infrastructure that AWS manages. With Fargate, you cannot run a privileged container or configure your pod to use hostNetwork or hostPort.","title":"Restrict the containers that can run as privileged"},{"location":"security/docs/pods/#do-not-run-processes-in-containers-as-root","text":"All containers run as root by default. This could be problematic if an attacker is able to exploit a vulnerability in the application and get shell access to the running container. You can mitigate this risk a variety of ways. First, by removing the shell from the container image. Second, adding the USER directive to your Dockerfile or running the containers in the pod as a non-root user. The Kubernetes podSpec includes a set of fields, under spec.securityContext , that let you specify the user and/or group under which to run your application. These fields are runAsUser and runAsGroup respectively. To enforce the use of the spec.securityContext , and its associated elements, within the Kubernetes podSpec, policy-as-code or Pod Security Standards can be added to clusters. These solutions allow you to write and/or use policies or profiles that can validate inbound Kubernetes API server request payloads, before they are persisted into etcd. Furthermore, policy-as-code solutions can mutate inbound requests, and in some cases, generate new requests.","title":"Do not run processes in containers as root"},{"location":"security/docs/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container","text":"While this conveniently lets you to build/run images in Docker containers, you're basically relinquishing complete control of the node to the process running in the container. If you need to build container images on Kubernetes use Kaniko , buildah , or a build service like CodeBuild instead. Tip Kubernetes clusters used for CICD processing, such as building container images, should be isolated from clusters running more generalized workloads.","title":"Never run Docker in Docker or mount the socket in the container"},{"location":"security/docs/pods/#restrict-the-use-of-hostpath-or-if-hostpath-is-necessary-restrict-which-prefixes-can-be-used-and-configure-the-volume-as-read-only","text":"hostPath is a volume that mounts a directory from the host directly to the container. Rarely will pods need this type of access, but if they do, you need to be aware of the risks. By default pods that run as root will have write access to the file system exposed by hostPath. This could allow an attacker to modify the kubelet settings, create symbolic links to directories or files not directly exposed by the hostPath, e.g. /etc/shadow, install ssh keys, read secrets mounted to the host, and other malicious things. To mitigate the risks from hostPath, configure the spec.containers.volumeMounts as readOnly , for example: volumeMounts : - name : hostPath-volume readOnly : true mountPath : /host-path You should also use policy-as-code solutions to restrict the directories that can be used by hostPath volumes, or prevent hostPath usage altogether. You can use the Pod Security Standards Baseline or Restricted policies to prevent the use of hostPath . For further information about the dangers of privileged escalation, read Seth Art's blog Bad Pods: Kubernetes Pod Privilege Escalation .","title":"Restrict the use of hostPath or if hostPath is necessary restrict which prefixes can be used and configure the volume as read-only"},{"location":"security/docs/pods/#set-requests-and-limits-for-each-container-to-avoid-resource-contention-and-dos-attacks","text":"A pod without requests or limits can theoretically consume all of the resources available on a host. As additional pods are scheduled onto a node, the node may experience CPU or memory pressure which can cause the Kubelet to terminate or evict pods from the node. While you can\u2019t prevent this from happening all together, setting requests and limits will help minimize resource contention and mitigate the risk from poorly written applications that consume an excessive amount of resources. The podSpec allows you to specify requests and limits for CPU and memory. CPU is considered a compressible resource because it can be oversubscribed. Memory is incompressible, i.e. it cannot be shared among multiple containers. When you specify requests for CPU or memory, you\u2019re essentially designating the amount of memory that containers are guaranteed to get. Kubernetes aggregates the requests of all the containers in a pod to determine which node to schedule the pod onto. If a container exceeds the requested amount of memory it may be subject to termination if there\u2019s memory pressure on the node. Limits are the maximum amount of CPU and memory resources that a container is allowed to consume and directly corresponds to the memory.limit_in_bytes value of the cgroup created for the container. A container that exceeds the memory limit will be OOM killed. If a container exceeds its CPU limit, it will be throttled. Tip When using container resources.limits it is strongly recommended that container resource usage (a.k.a. Resource Footprints) be data-driven and accurate, based on load testing. Absent an accurate and trusted resource footprint, container resources.limits can be padded. For example, resources.limits.memory could be padded 20-30% higher than observable maximums, to account for potential memory resource limit inaccuracies. Kubernetes uses three Quality of Service (QoS) classes to prioritize the workloads running on a node. These include: guaranteed burstable best-effort If limits and requests are not set, the pod is configured as best-effort (lowest priority). Best-effort pods are the first to get killed when there is insufficient memory. If limits are set on all containers within the pod, or if the requests and limits are set to the same values and not equal to 0, the pod is configured as guaranteed (highest priority). Guaranteed pods will not be killed unless they exceed their configured memory limits. If the limits and requests are configured with different values and not equal to 0, or one container within the pod sets limits and the others don\u2019t or have limits set for different resources, the pods are configured as burstable (medium priority). These pods have some resource guarantees, but can be killed once they exceed their requested memory. Attention Requests don't affect the memory_limit_in_bytes value of the container's cgroup; the cgroup limit is set to the amount of memory available on the host. Nevertheless, setting the requests value too low could cause the pod to be targeted for termination by the kubelet if the node undergoes memory pressure. Class Priority Condition Kill Condition Guaranteed highest limit = request != 0 Only exceed memory limits Burstable medium limit != request != 0 Can be killed if exceed request memory Best-Effort lowest limit & request Not Set First to get killed when there's insufficient memory For additional information about resource QoS, please refer to the Kubernetes documentation . You can force the use of requests and limits by setting a resource quota on a namespace or by creating a limit range . A resource quota allows you to specify the total amount of resources, e.g. CPU and RAM, allocated to a namespace. When it\u2019s applied to a namespace, it forces you to specify requests and limits for all containers deployed into that namespace. By contrast, limit ranges give you more granular control of the allocation of resources. With limit ranges you can min/max for CPU and memory resources per pod or per container within a namespace. You can also use them to set default request/limit values if none are provided. Policy-as-code solutions can be used enforce requests and limits. or to even create the resource quotas and limit ranges when namespaces are created.","title":"Set requests and limits for each container to avoid resource contention and DoS attacks"},{"location":"security/docs/pods/#do-not-allow-privileged-escalation","text":"Privileged escalation allows a process to change the security context under which its running. Sudo is a good example of this as are binaries with the SUID or SGID bit. Privileged escalation is basically a way for users to execute a file with the permissions of another user or group. You can prevent a container from using privileged escalation by implementing a policy-as-code mutating policy that sets allowPrivilegeEscalation to false or by setting securityContext.allowPrivilegeEscalation in the podSpec . Policy-as-code policies can also be used to prevent API server requests from succeeding if incorrect settings are detected. Pod Security Standards can also be used to prevent pods from using privilege escalation.","title":"Do not allow privileged escalation"},{"location":"security/docs/pods/#disable-serviceaccount-token-mounts","text":"For pods that do not need to access the Kubernetes API, you can disable the automatic mounting of a ServiceAccount token on a pod spec, or for all pods that use a particular ServiceAccount. Attention Disabling ServiceAccount mounting does not prevent a pod from having network access to the Kubernetes API. To prevent a pod from having any network access to the Kubernetes API, you will need to modify the EKS cluster endpoint access and use NetworkPolicy to block pod access apiVersion : v1 kind : Pod metadata : name : pod-no-automount spec : automountServiceAccountToken : false apiVersion : v1 kind : ServiceAccount metadata : name : sa-no-automount automountServiceAccountToken : false","title":"Disable ServiceAccount token mounts"},{"location":"security/docs/pods/#disable-service-discovery","text":"For pods that do not need to lookup or call in-cluster services, you can reduce the amount of information given to a pod. You can set the Pod's DNS policy to not use CoreDNS, and not expose services in the pod's namespace as environment variables. See the Kubernetes docs on environment variables for more information on service links. The default value for a pod's DNS policy is \"ClusterFirst\" which uses in-cluster DNS, while the non-default value \"Default\" uses the underlying node's DNS resolution. See the Kubernetes docs on Pod DNS policy for more information. Attention Disabling service links and changing the pod's DNS policy does not prevent a pod from having network access to the in-cluster DNS service. An attacker can still enumerate services in a cluster by reaching the in-cluster DNS service. (ex: dig SRV *.*.svc.cluster.local @$CLUSTER_DNS_IP ) To prevent in-cluster service discovery, use NetworkPolicy to block pod access apiVersion : v1 kind : Pod metadata : name : pod-no-service-info spec : dnsPolicy : Default # \"Default\" is not the true default value enableServiceLinks : false","title":"Disable service discovery"},{"location":"security/docs/pods/#configure-your-images-with-read-only-root-file-system","text":"Configuring your images with a read-only root file system prevents an attacker from overwriting a binary on the file system that your application uses. If your application has to write to the file system, consider writing to a temporary directory or attach and mount a volume. You can enforce this by setting the pod's SecurityContext as follows: ... securityContext : readOnlyRootFilesystem : true ... Policy-as-code and Pod Security Standards can be used to enforce this behavior. Info As per Windows containers in Kubernetes securityContext.readOnlyRootFilesystem cannot be set to true for a container running on Windows as write access is required for registry and system processes to run inside the container.","title":"Configure your images with read-only root file system"},{"location":"security/docs/pods/#tools-and-resources","text":"open-policy-agent/gatekeeper-library: The OPA Gatekeeper policy library a library of OPA/Gatekeeper policies that you can use as a substitute for PSPs. Kyverno Policy Library A collection of common OPA and Kyverno policies for EKS. Policy based countermeasures: part 1 Policy based countermeasures: part 2 Pod Security Policy Migrator a tool that converts PSPs to OPA/Gatekeeper, KubeWarden, or Kyverno policies","title":"Tools and Resources"},{"location":"security/docs/runtime.kr/","text":"{'name': 'English', 'build': True} \ub7f0\ud0c0\uc784 \ubcf4\uc548 \u00b6 \ub7f0\ud0c0\uc784 \ubcf4\uc548\uc740 \uc2e4\ud589 \uc911\uc778 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \ud65c\uc131 \ubcf4\ud638\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc544\uc774\ub514\uc5b4\ub294 \ucee8\ud14c\uc774\ub108 \ub0b4\ubd80\uc5d0\uc11c \uc545\uc758\uc801\uc778 \ud65c\ub3d9\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\uc744 \uac10\uc9c0 \ubc0f/\ub610\ub294 \ubc29\uc9c0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf4\uc548 \ucef4\ud4e8\ud305(seccomp)\uc744 \uc0ac\uc6a9\ud558\uba74 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uae30\ubcf8 \ud638\uc2a4\ud2b8 \uc6b4\uc601 \uccb4\uc81c\uc758 \ucee4\ub110\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uc218\ud589\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Linux \uc6b4\uc601 \uccb4\uc81c\uc5d0\ub294 \uc218\ubc31 \uac1c\uc758 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \uc788\uc9c0\ub9cc \ub300\ubd80\ubd84\uc758 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc740 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 syscall\uc744 \uc81c\ud55c\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. seccomp\ub97c \uc2dc\uc791\ud558\ub824\uba74 strace \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0dd \ucd94\uc801\uc744 \uc0dd\uc131\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc5b4\ub5a4 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uc218\ud589\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. \uadf8\ub7f0 \ub2e4\uc74c syscall2seccomp \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uc801\uc5d0\uc11c \uc218\uc9d1\ub41c \ub370\uc774\ud130\uc5d0\uc11c seccomp \ud504\ub85c\ud544\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. SELinux\uc640 \ub2ec\ub9ac seccomp\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc11c\ub85c \uaca9\ub9ac\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \uc2dc\uc2a4\ud15c \ud638\ucd9c\ub85c\ubd80\ud130 \ud638\uc2a4\ud2b8 \ucee4\ub110\uc744 \ubcf4\ud638\ud569\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uac00\ub85c\ucc44\uace0 \ud5c8\uc6a9\ub41c \ud56d\ubaa9\ub9cc \ud1b5\uacfc\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. Docker\uc5d0\ub294 \ub300\ubd80\ubd84\uc758 \ubc94\uc6a9 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\ud569\ud55c \uae30\ubcf8 seccomp \ud504\ub85c\ud544\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud3ec\ub4dc\uc758 \uc0ac\uc591(1.19 \uc774\uc804)\uc5d0 \ub2e4\uc74c \uc8fc\uc11d\uc744 \ucd94\uac00\ud558\uc5ec \uc774 \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud3ec\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d: seccomp.security.alpha.kubernetes.io/pod: \"\ub7f0\ud0c0\uc784/\uae30\ubcf8\uac12\" 1.19 \uc774\uc0c1: \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8: seccomp \ud504\ub85c\ud544: \uc720\ud615: RuntimeDefault \ucd94\uac00 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc758 seccomp \ud504\ub85c\ud544\uc740 Kubelet \uc54c\ud30c \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 Kubelet \uc778\uc218\uc5d0 --seccomp-profile-root \ud50c\ub798\uadf8\ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. AppArmor\ub294 seccomp\uc640 \uc720\uc0ac\ud558\uc9c0\ub9cc \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \uc77c\ubd80\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uc758 \uae30\ub2a5\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc2dc\ud589 \ub610\ub294 \ubd88\ud3c9 \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Apparmor \ud504\ub85c\ud544\uc744 \uad6c\ucd95\ud558\ub294 \uac83\uc740 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc73c\ubbc0\ub85c \ub300\uc2e0 bane \uacfc \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Apparmor\ub294 Linux\uc758 Ubuntu/Debian \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Kubernetes\ub294 \ud604\uc7ac AppArmor \ub610\ub294 seccomp \ud504\ub85c\ud544\uc744 \ub178\ub4dc\uc5d0 \ub85c\ub4dc\ud558\uae30 \uc704\ud55c \uae30\ubcf8 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc218\ub3d9\uc73c\ub85c \ub85c\ub4dc\ud558\uac70\ub098 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9\ub420 \ub54c \ub178\ub4dc\uc5d0 \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub7ec\ub294 \ud504\ub85c\ud544\uc774 \uc788\ub294 \ub178\ub4dc\ub97c \uc54c\uc9c0 \ubabb\ud558\uae30 \ub54c\ubb38\uc5d0 Pod\uc5d0\uc11c \ucc38\uc870\ud558\uae30 \uc804\uc5d0 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ucd94\ucc9c \u00b6 \ub7f0\ud0c0\uc784 \ubc29\uc5b4\ub97c \uc704\ud574 \ud0c0\uc0ac \uc194\ub8e8\uc158 \uc0ac\uc6a9 \u00b6 Linux \ubcf4\uc548\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 seccomp \ubc0f Apparmor \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4\uace0 \uad00\ub9ac\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2a5\uc219\ud574\uc9c8 \uc2dc\uac04\uc774 \uc5c6\ub2e4\uba74 \uc0c1\uc6a9 \uc194\ub8e8\uc158 \uc0ac\uc6a9\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \uadf8\ub4e4 \uc911 \ub2e4\uc218\ub294 Apparmor \ubc0f seccomp\uc640 \uac19\uc740 \uc815\uc801 \ud504\ub85c\ud544\uc744 \ub118\uc5b4 \uae30\uacc4 \ud559\uc2b5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud65c\ub3d9\uc744 \ucc28\ub2e8\ud558\uac70\ub098 \uacbd\uace0\ud558\uae30 \uc2dc\uc791\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158 \uc911 \uc77c\ubd80\ub294 \uc544\ub798\uc758 \ub3c4\uad6c \uc139\uc158\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc635\uc158\uc740 AWS Marketplace for Containers \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. seccomp \uc815\ucc45\uc744 \uc791\uc131\ud558\uae30 \uc804\uc5d0 Linux \uae30\ub2a5 \ucd94\uac00/\uc0ad\uc81c \uace0\ub824 \u00b6 \uae30\ub2a5\uc5d0\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \ub3c4\ub2ec\ud560 \uc218 \uc788\ub294 \ucee4\ub110 \uae30\ub2a5\uc758 \ub2e4\uc591\ud55c \uac80\uc0ac\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud655\uc778\uc5d0 \uc2e4\ud328\ud558\uba74 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud655\uc778\uc740 \ud2b9\uc815 syscall\uc758 \uc2dc\uc791 \ubd80\ubd84\uc5d0\uc11c \ubc14\ub85c \uc218\ud589\ud558\uac70\ub098 \uc5ec\ub7ec \ub2e4\ub978 syscall\uc744 \ud1b5\ud574 \ub3c4\ub2ec\ud560 \uc218 \uc788\ub294 \ucee4\ub110\uc758 \ub354 \uae4a\uc740 \uc601\uc5ed(\uc608: \ud2b9\uc815 \ud2b9\uad8c \ud30c\uc77c\uc5d0 \uc4f0\uae30)\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74\uc5d0 Seccomp\ub294 \uc2e4\ud589\ub418\uae30 \uc804\uc5d0 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc5d0 \uc801\uc6a9\ub418\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c \ud544\ud130\uc785\ub2c8\ub2e4. \ud504\ub85c\uc138\uc2a4\ub294 \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c \ub610\ub294 \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc778\uc218\ub97c \uc2e4\ud589\ud560 \uad8c\ud55c\uc744 \ucde8\uc18c\ud560 \uc218 \uc788\ub294 \ud544\ud130\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. seccomp\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 Linux \uae30\ub2a5 \ucd94\uac00/\uc81c\uac70\uac00 \ud544\uc694\ud55c \uc81c\uc5b4 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294\uc9c0 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP)\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa9\ud45c\ub97c \ub2ec\uc131\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \u00b6 \ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45\uc740 \uacfc\ub3c4\ud55c \ubcf5\uc7a1\uc131\uc744 \ub3c4\uc785\ud558\uc9c0 \uc54a\uace0 \ubcf4\uc548 \ud0dc\uc138\ub97c \uac1c\uc120\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. seccomp \ubc0f Apparmor \ud504\ub85c\ud30c\uc77c\uc744 \uad6c\ucd95\ud558\uae30 \uc804\uc5d0 PSP\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc635\uc158\uc744 \uc0b4\ud3b4\ubcf4\uc2ed\uc2dc\uc624. \uacbd\uace0 Kubernetes 1.25\ubd80\ud130 PSP\uac00 \uc81c\uac70\ub418\uace0 Pod Security Admission \ucee8\ud2b8\ub864\ub7ec\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc874\uc7ac\ud558\ub294 \ud0c0\uc0ac \ub300\uc548\uc5d0\ub294 OPA/Gatekeeper \ubc0f Kyverno\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Gatekeeper \uc81c\uc57d \uc870\uac74 \ubc0f \uc81c\uc57d \uc870\uac74 \ubaa8\uc74c","title":"\ub7f0\ud0c0\uc784 \ubcf4\uc548"},{"location":"security/docs/runtime.kr/#_1","text":"\ub7f0\ud0c0\uc784 \ubcf4\uc548\uc740 \uc2e4\ud589 \uc911\uc778 \ucee8\ud14c\uc774\ub108\uc5d0 \ub300\ud55c \ud65c\uc131 \ubcf4\ud638\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc544\uc774\ub514\uc5b4\ub294 \ucee8\ud14c\uc774\ub108 \ub0b4\ubd80\uc5d0\uc11c \uc545\uc758\uc801\uc778 \ud65c\ub3d9\uc774 \ubc1c\uc0dd\ud558\ub294 \uac83\uc744 \uac10\uc9c0 \ubc0f/\ub610\ub294 \ubc29\uc9c0\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \ubcf4\uc548 \ucef4\ud4e8\ud305(seccomp)\uc744 \uc0ac\uc6a9\ud558\uba74 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uae30\ubcf8 \ud638\uc2a4\ud2b8 \uc6b4\uc601 \uccb4\uc81c\uc758 \ucee4\ub110\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uc218\ud589\ud558\uc9c0 \ubabb\ud558\ub3c4\ub85d \ubc29\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Linux \uc6b4\uc601 \uccb4\uc81c\uc5d0\ub294 \uc218\ubc31 \uac1c\uc758 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \uc788\uc9c0\ub9cc \ub300\ubd80\ubd84\uc758 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc740 \ucee8\ud14c\uc774\ub108\ub97c \uc2e4\ud589\ud558\ub294 \ub370 \ud544\uc694\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\ub294 syscall\uc744 \uc81c\ud55c\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacf5\uaca9 \ud45c\uba74\uc744 \ud6a8\uacfc\uc801\uc73c\ub85c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. seccomp\ub97c \uc2dc\uc791\ud558\ub824\uba74 strace \ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2a4\ud0dd \ucd94\uc801\uc744 \uc0dd\uc131\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc5b4\ub5a4 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uc218\ud589\ud558\ub294\uc9c0 \ud655\uc778\ud558\uc138\uc694. \uadf8\ub7f0 \ub2e4\uc74c syscall2seccomp \uc640 \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucd94\uc801\uc5d0\uc11c \uc218\uc9d1\ub41c \ub370\uc774\ud130\uc5d0\uc11c seccomp \ud504\ub85c\ud544\uc744 \ub9cc\ub4ed\ub2c8\ub2e4. SELinux\uc640 \ub2ec\ub9ac seccomp\ub294 \ucee8\ud14c\uc774\ub108\ub97c \uc11c\ub85c \uaca9\ub9ac\ud558\ub3c4\ub85d \uc124\uacc4\ub418\uc9c0 \uc54a\uc558\uc9c0\ub9cc \uc2b9\uc778\ub418\uc9c0 \uc54a\uc740 \uc2dc\uc2a4\ud15c \ud638\ucd9c\ub85c\ubd80\ud130 \ud638\uc2a4\ud2b8 \ucee4\ub110\uc744 \ubcf4\ud638\ud569\ub2c8\ub2e4. \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc744 \uac00\ub85c\ucc44\uace0 \ud5c8\uc6a9\ub41c \ud56d\ubaa9\ub9cc \ud1b5\uacfc\ud558\ub3c4\ub85d \ud5c8\uc6a9\ud558\ub294 \ubc29\uc2dd\uc73c\ub85c \uc791\ub3d9\ud569\ub2c8\ub2e4. Docker\uc5d0\ub294 \ub300\ubd80\ubd84\uc758 \ubc94\uc6a9 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\ud569\ud55c \uae30\ubcf8 seccomp \ud504\ub85c\ud544\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud3ec\ub4dc\uc758 \uc0ac\uc591(1.19 \uc774\uc804)\uc5d0 \ub2e4\uc74c \uc8fc\uc11d\uc744 \ucd94\uac00\ud558\uc5ec \uc774 \ud504\ub85c\ud544\uc744 \uc0ac\uc6a9\ud558\ub3c4\ub85d \ucee8\ud14c\uc774\ub108 \ub610\ub294 \ud3ec\ub4dc\ub97c \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc11d: seccomp.security.alpha.kubernetes.io/pod: \"\ub7f0\ud0c0\uc784/\uae30\ubcf8\uac12\" 1.19 \uc774\uc0c1: \ubcf4\uc548 \ucee8\ud14d\uc2a4\ud2b8: seccomp \ud504\ub85c\ud544: \uc720\ud615: RuntimeDefault \ucd94\uac00 \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud56d\ubaa9\uc5d0 \ub300\ud55c \uace0\uc720\ud55c \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\uc758 seccomp \ud504\ub85c\ud544\uc740 Kubelet \uc54c\ud30c \uae30\ub2a5\uc785\ub2c8\ub2e4. \uc774 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\ub824\uba74 Kubelet \uc778\uc218\uc5d0 --seccomp-profile-root \ud50c\ub798\uadf8\ub97c \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4. AppArmor\ub294 seccomp\uc640 \uc720\uc0ac\ud558\uc9c0\ub9cc \ud30c\uc77c \uc2dc\uc2a4\ud15c\uc758 \uc77c\ubd80\uc5d0 \uc561\uc138\uc2a4\ud558\ub294 \uac83\uc744 \ud3ec\ud568\ud558\uc5ec \ucee8\ud14c\uc774\ub108\uc758 \uae30\ub2a5\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. \uc2dc\ud589 \ub610\ub294 \ubd88\ud3c9 \ubaa8\ub4dc\uc5d0\uc11c \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Apparmor \ud504\ub85c\ud544\uc744 \uad6c\ucd95\ud558\ub294 \uac83\uc740 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc73c\ubbc0\ub85c \ub300\uc2e0 bane \uacfc \uac19\uc740 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Apparmor\ub294 Linux\uc758 Ubuntu/Debian \ubc30\ud3ec\ud310\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc8fc\ubaa9 Kubernetes\ub294 \ud604\uc7ac AppArmor \ub610\ub294 seccomp \ud504\ub85c\ud544\uc744 \ub178\ub4dc\uc5d0 \ub85c\ub4dc\ud558\uae30 \uc704\ud55c \uae30\ubcf8 \uba54\ucee4\ub2c8\uc998\uc744 \uc81c\uacf5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc218\ub3d9\uc73c\ub85c \ub85c\ub4dc\ud558\uac70\ub098 \ubd80\ud2b8\uc2a4\ud2b8\ub7a9\ub420 \ub54c \ub178\ub4dc\uc5d0 \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. \uc2a4\ucf00\uc904\ub7ec\ub294 \ud504\ub85c\ud544\uc774 \uc788\ub294 \ub178\ub4dc\ub97c \uc54c\uc9c0 \ubabb\ud558\uae30 \ub54c\ubb38\uc5d0 Pod\uc5d0\uc11c \ucc38\uc870\ud558\uae30 \uc804\uc5d0 \uc218\ud589\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ub7f0\ud0c0\uc784 \ubcf4\uc548"},{"location":"security/docs/runtime.kr/#_2","text":"","title":"\ucd94\ucc9c"},{"location":"security/docs/runtime.kr/#_3","text":"Linux \ubcf4\uc548\uc5d0 \uc775\uc219\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 seccomp \ubc0f Apparmor \ud504\ub85c\ud544\uc744 \ub9cc\ub4e4\uace0 \uad00\ub9ac\ud558\uae30 \uc5b4\ub824\uc6b8 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2a5\uc219\ud574\uc9c8 \uc2dc\uac04\uc774 \uc5c6\ub2e4\uba74 \uc0c1\uc6a9 \uc194\ub8e8\uc158 \uc0ac\uc6a9\uc744 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. \uadf8\ub4e4 \uc911 \ub2e4\uc218\ub294 Apparmor \ubc0f seccomp\uc640 \uac19\uc740 \uc815\uc801 \ud504\ub85c\ud544\uc744 \ub118\uc5b4 \uae30\uacc4 \ud559\uc2b5\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc758\uc2ec\uc2a4\ub7ec\uc6b4 \ud65c\ub3d9\uc744 \ucc28\ub2e8\ud558\uac70\ub098 \uacbd\uace0\ud558\uae30 \uc2dc\uc791\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc194\ub8e8\uc158 \uc911 \uc77c\ubd80\ub294 \uc544\ub798\uc758 \ub3c4\uad6c \uc139\uc158\uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc635\uc158\uc740 AWS Marketplace for Containers \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub7f0\ud0c0\uc784 \ubc29\uc5b4\ub97c \uc704\ud574 \ud0c0\uc0ac \uc194\ub8e8\uc158 \uc0ac\uc6a9"},{"location":"security/docs/runtime.kr/#seccomp-linux","text":"\uae30\ub2a5\uc5d0\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc774 \ub3c4\ub2ec\ud560 \uc218 \uc788\ub294 \ucee4\ub110 \uae30\ub2a5\uc758 \ub2e4\uc591\ud55c \uac80\uc0ac\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud655\uc778\uc5d0 \uc2e4\ud328\ud558\uba74 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc624\ub958\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4. \ud655\uc778\uc740 \ud2b9\uc815 syscall\uc758 \uc2dc\uc791 \ubd80\ubd84\uc5d0\uc11c \ubc14\ub85c \uc218\ud589\ud558\uac70\ub098 \uc5ec\ub7ec \ub2e4\ub978 syscall\uc744 \ud1b5\ud574 \ub3c4\ub2ec\ud560 \uc218 \uc788\ub294 \ucee4\ub110\uc758 \ub354 \uae4a\uc740 \uc601\uc5ed(\uc608: \ud2b9\uc815 \ud2b9\uad8c \ud30c\uc77c\uc5d0 \uc4f0\uae30)\uc5d0\uc11c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc18\uba74\uc5d0 Seccomp\ub294 \uc2e4\ud589\ub418\uae30 \uc804\uc5d0 \ubaa8\ub4e0 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc5d0 \uc801\uc6a9\ub418\ub294 \uc2dc\uc2a4\ud15c \ud638\ucd9c \ud544\ud130\uc785\ub2c8\ub2e4. \ud504\ub85c\uc138\uc2a4\ub294 \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c \ub610\ub294 \ud2b9\uc815 \uc2dc\uc2a4\ud15c \ud638\ucd9c\uc5d0 \ub300\ud55c \ud2b9\uc815 \uc778\uc218\ub97c \uc2e4\ud589\ud560 \uad8c\ud55c\uc744 \ucde8\uc18c\ud560 \uc218 \uc788\ub294 \ud544\ud130\ub97c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. seccomp\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 Linux \uae30\ub2a5 \ucd94\uac00/\uc81c\uac70\uac00 \ud544\uc694\ud55c \uc81c\uc5b4 \uae30\ub2a5\uc744 \uc81c\uacf5\ud558\ub294\uc9c0 \uace0\ub824\ud558\uc2ed\uc2dc\uc624. https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"seccomp \uc815\ucc45\uc744 \uc791\uc131\ud558\uae30 \uc804\uc5d0 Linux \uae30\ub2a5 \ucd94\uac00/\uc0ad\uc81c \uace0\ub824"},{"location":"security/docs/runtime.kr/#psp","text":"\ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45\uc740 \uacfc\ub3c4\ud55c \ubcf5\uc7a1\uc131\uc744 \ub3c4\uc785\ud558\uc9c0 \uc54a\uace0 \ubcf4\uc548 \ud0dc\uc138\ub97c \uac1c\uc120\ud560 \uc218 \uc788\ub294 \ub2e4\uc591\ud55c \ubc29\ubc95\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. seccomp \ubc0f Apparmor \ud504\ub85c\ud30c\uc77c\uc744 \uad6c\ucd95\ud558\uae30 \uc804\uc5d0 PSP\uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud55c \uc635\uc158\uc744 \uc0b4\ud3b4\ubcf4\uc2ed\uc2dc\uc624. \uacbd\uace0 Kubernetes 1.25\ubd80\ud130 PSP\uac00 \uc81c\uac70\ub418\uace0 Pod Security Admission \ucee8\ud2b8\ub864\ub7ec\ub85c \ub300\uccb4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc874\uc7ac\ud558\ub294 \ud0c0\uc0ac \ub300\uc548\uc5d0\ub294 OPA/Gatekeeper \ubc0f Kyverno\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. Gatekeeper \uc81c\uc57d \uc870\uac74 \ubc0f \uc81c\uc57d \uc870\uac74 \ubaa8\uc74c","title":"\ud3ec\ub4dc \ubcf4\uc548 \uc815\ucc45(PSP)\uc744 \uc0ac\uc6a9\ud558\uc5ec \ubaa9\ud45c\ub97c \ub2ec\uc131\ud560 \uc218 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624."},{"location":"security/docs/runtime/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Runtime security \u00b6 Runtime security provides active protection for your containers while they're running. The idea is to detect and/or prevent malicious activity from occurring inside the container. With secure computing (seccomp) you can prevent a containerized application from making certain syscalls to the underlying host operating system's kernel. While the Linux operating system has a few hundred system calls, the lion's share of them are not necessary for running containers. By restricting what syscalls can be made by a container, you can effectively decrease your application's attack surface. To get started with seccomp, use strace to generate a stack trace to see which system calls your application is making, then use a tool such as syscall2seccomp to create a seccomp profile from the data gathered from the trace. Unlike SELinux, seccomp was not designed to isolate containers from each other, however, it will protect the host kernel from unauthorized syscalls. It works by intercepting syscalls and only allowing those that have been allowlisted to pass through. Docker has a default seccomp profile which is suitable for a majority of general purpose workloads. You can configure your container or Pod to use this profile by adding the following annotation to your container's or Pod's spec (pre-1.19): annotations: seccomp.security.alpha.kubernetes.io/pod: \"runtime/default\" 1.19 and later: securityContext: seccompProfile: type: RuntimeDefault It's also possible to create your own profiles for things that require additional privileges. Caution seccomp profiles are a Kubelet alpha feature, before 1.22. You'll need to add the --seccomp-profile-root flag to the Kubelet arguments to make use of this feature. As of 1.22 (in alpha, stable as of 1.27), the above RuntimeDefault can be used for all Pods on a Node using a single kubelet flag , --seccomp-default . The annotation is no longer needed, and the securityContext profile is only needed for other profiles. AppArmor is similar to seccomp, only it restricts an container's capabilities including accessing parts of the file system. It can be run in either enforcement or complain mode. Since building Apparmor profiles can be challenging, it is recommended you use a tool like bane instead. Attention Apparmor is only available Ubuntu/Debian distributions of Linux. Attention Kubernetes does not currently provide any native mechanisms for loading AppArmor or seccomp profiles onto Nodes. They either have to be loaded manually or installed onto Nodes when they are bootstrapped. This has to be done prior to referencing them in your Pods because the scheduler is unaware of which nodes have profiles. Recommendations \u00b6 Use Amazon GuardDuty for runtime monitoring and detecting threats to your EKS environments \u00b6 If you do not currently have a solution for continuously monitoring EKS runtimes and analyzing EKS audit logs, and scanning for malware and other suspicious activity, Amazon strongly recommends the use of Amazon GuardDuty for customers who want a simple, fast, secure, scalable, and cost-effective one-click way to protect their AWS environments. Amazon GuardDuty is a security monitoring service that analyzes and processes foundational data sources, such as AWS CloudTrail management events, AWS CloudTrail event logs, VPC flow logs (from Amazon EC2 instances), Kubernetes audit logs, and DNS logs. It also includes EKS runtime monitoring. It uses continuously updated threat intelligence feeds, such as lists of malicious IP addresses and domains, and machine learning to identify unexpected, potentially unauthorized, and malicious activity within your AWS environment. This can include issues like escalation of privileges, use of exposed credentials, or communication with malicious IP addresses, domains, presence of malware on your Amazon EC2 instances and EKS container workloads, or discovery of suspicious API activity. GuardDuty informs you of the status of your AWS environment by producing security findings that you can view in the GuardDuty console or through Amazon EventBridge. GuardDuty also provides support for you to export your findings to an Amazon Simple Storage Service (S3) bucket, and integrate with other services such as AWS Security Hub and Detective. Watch this AWS Online Tech Talk \"Enhanced threat detection for Amazon EKS with Amazon GuardDuty - AWS Online Tech Talks\" to see how to enable these additional EKS security features step-by-step in minutes. Optionally: Use a 3rd party solution for runtime monitoring \u00b6 Creating and managing seccomp and Apparmor profiles can be difficult if you're not familiar with Linux security. If you don't have the time to become proficient, consider using a 3rd party commercial solution. A lot of them have moved beyond static profiles like Apparmor and seccomp and have begun using machine learning to block or alert on suspicious activity. A handful of these solutions can be found below in the tools section. Additional options can be found on the AWS Marketplace for Containers . Consider add/dropping Linux capabilities before writing seccomp policies \u00b6 Capabilities involve various checks in kernel functions reachable by syscalls. If the check fails, the syscall typically returns an error. The check can be done either right at the beginning of a specific syscall, or deeper in the kernel in areas that might be reachable through multiple different syscalls (such as writing to a specific privileged file). Seccomp, on the other hand, is a syscall filter which is applied to all syscalls before they are run. A process can set up a filter which allows them to revoke their right to run certain syscalls, or specific arguments for certain syscalls. Before using seccomp, consider whether adding/removing Linux capabilities gives you the control you need. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container for further information. See whether you can accomplish your aims by using Pod Security Policies (PSPs) \u00b6 Pod Security Policies offer a lot of different ways to improve your security posture without introducing undue complexity. Explore the options available in PSPs before venturing into building seccomp and Apparmor profiles. Warning As of Kubernetes 1.25, PSPs have been removed and replaced with the Pod Security Admission controller. Third-party alternatives which exist include OPA/Gatekeeper and Kyverno. A collection of Gatekeeper constraints and constraint templates for implementing policies commonly found in PSPs can be pulled from the Gatekeeper library repository on GitHub. And many replacements for PSPs can be found in the Kyverno policy library including the full collection of Pod Security Standards . Additional Resources \u00b6 7 things you should know before you start AppArmor Loader Setting up nodes with profiles seccomp-operator Is similar to the AppArmor Loader, only instead of AppArmor profiles, it creates a seccomp profiles on each host Tools \u00b6 Aqua Qualys Stackrox Sysdig Secure Prisma","title":"Runtime Security ({'name': 'English', 'build': True})"},{"location":"security/docs/runtime/#runtime-security","text":"Runtime security provides active protection for your containers while they're running. The idea is to detect and/or prevent malicious activity from occurring inside the container. With secure computing (seccomp) you can prevent a containerized application from making certain syscalls to the underlying host operating system's kernel. While the Linux operating system has a few hundred system calls, the lion's share of them are not necessary for running containers. By restricting what syscalls can be made by a container, you can effectively decrease your application's attack surface. To get started with seccomp, use strace to generate a stack trace to see which system calls your application is making, then use a tool such as syscall2seccomp to create a seccomp profile from the data gathered from the trace. Unlike SELinux, seccomp was not designed to isolate containers from each other, however, it will protect the host kernel from unauthorized syscalls. It works by intercepting syscalls and only allowing those that have been allowlisted to pass through. Docker has a default seccomp profile which is suitable for a majority of general purpose workloads. You can configure your container or Pod to use this profile by adding the following annotation to your container's or Pod's spec (pre-1.19): annotations: seccomp.security.alpha.kubernetes.io/pod: \"runtime/default\" 1.19 and later: securityContext: seccompProfile: type: RuntimeDefault It's also possible to create your own profiles for things that require additional privileges. Caution seccomp profiles are a Kubelet alpha feature, before 1.22. You'll need to add the --seccomp-profile-root flag to the Kubelet arguments to make use of this feature. As of 1.22 (in alpha, stable as of 1.27), the above RuntimeDefault can be used for all Pods on a Node using a single kubelet flag , --seccomp-default . The annotation is no longer needed, and the securityContext profile is only needed for other profiles. AppArmor is similar to seccomp, only it restricts an container's capabilities including accessing parts of the file system. It can be run in either enforcement or complain mode. Since building Apparmor profiles can be challenging, it is recommended you use a tool like bane instead. Attention Apparmor is only available Ubuntu/Debian distributions of Linux. Attention Kubernetes does not currently provide any native mechanisms for loading AppArmor or seccomp profiles onto Nodes. They either have to be loaded manually or installed onto Nodes when they are bootstrapped. This has to be done prior to referencing them in your Pods because the scheduler is unaware of which nodes have profiles.","title":"Runtime security"},{"location":"security/docs/runtime/#recommendations","text":"","title":"Recommendations"},{"location":"security/docs/runtime/#use-amazon-guardduty-for-runtime-monitoring-and-detecting-threats-to-your-eks-environments","text":"If you do not currently have a solution for continuously monitoring EKS runtimes and analyzing EKS audit logs, and scanning for malware and other suspicious activity, Amazon strongly recommends the use of Amazon GuardDuty for customers who want a simple, fast, secure, scalable, and cost-effective one-click way to protect their AWS environments. Amazon GuardDuty is a security monitoring service that analyzes and processes foundational data sources, such as AWS CloudTrail management events, AWS CloudTrail event logs, VPC flow logs (from Amazon EC2 instances), Kubernetes audit logs, and DNS logs. It also includes EKS runtime monitoring. It uses continuously updated threat intelligence feeds, such as lists of malicious IP addresses and domains, and machine learning to identify unexpected, potentially unauthorized, and malicious activity within your AWS environment. This can include issues like escalation of privileges, use of exposed credentials, or communication with malicious IP addresses, domains, presence of malware on your Amazon EC2 instances and EKS container workloads, or discovery of suspicious API activity. GuardDuty informs you of the status of your AWS environment by producing security findings that you can view in the GuardDuty console or through Amazon EventBridge. GuardDuty also provides support for you to export your findings to an Amazon Simple Storage Service (S3) bucket, and integrate with other services such as AWS Security Hub and Detective. Watch this AWS Online Tech Talk \"Enhanced threat detection for Amazon EKS with Amazon GuardDuty - AWS Online Tech Talks\" to see how to enable these additional EKS security features step-by-step in minutes.","title":"Use Amazon GuardDuty for runtime monitoring and detecting threats to your EKS environments"},{"location":"security/docs/runtime/#optionally-use-a-3rd-party-solution-for-runtime-monitoring","text":"Creating and managing seccomp and Apparmor profiles can be difficult if you're not familiar with Linux security. If you don't have the time to become proficient, consider using a 3rd party commercial solution. A lot of them have moved beyond static profiles like Apparmor and seccomp and have begun using machine learning to block or alert on suspicious activity. A handful of these solutions can be found below in the tools section. Additional options can be found on the AWS Marketplace for Containers .","title":"Optionally: Use a 3rd party solution for runtime monitoring"},{"location":"security/docs/runtime/#consider-adddropping-linux-capabilities-before-writing-seccomp-policies","text":"Capabilities involve various checks in kernel functions reachable by syscalls. If the check fails, the syscall typically returns an error. The check can be done either right at the beginning of a specific syscall, or deeper in the kernel in areas that might be reachable through multiple different syscalls (such as writing to a specific privileged file). Seccomp, on the other hand, is a syscall filter which is applied to all syscalls before they are run. A process can set up a filter which allows them to revoke their right to run certain syscalls, or specific arguments for certain syscalls. Before using seccomp, consider whether adding/removing Linux capabilities gives you the control you need. See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container for further information.","title":"Consider add/dropping Linux capabilities before writing seccomp policies"},{"location":"security/docs/runtime/#see-whether-you-can-accomplish-your-aims-by-using-pod-security-policies-psps","text":"Pod Security Policies offer a lot of different ways to improve your security posture without introducing undue complexity. Explore the options available in PSPs before venturing into building seccomp and Apparmor profiles. Warning As of Kubernetes 1.25, PSPs have been removed and replaced with the Pod Security Admission controller. Third-party alternatives which exist include OPA/Gatekeeper and Kyverno. A collection of Gatekeeper constraints and constraint templates for implementing policies commonly found in PSPs can be pulled from the Gatekeeper library repository on GitHub. And many replacements for PSPs can be found in the Kyverno policy library including the full collection of Pod Security Standards .","title":"See whether you can accomplish your aims by using Pod Security Policies (PSPs)"},{"location":"security/docs/runtime/#additional-resources","text":"7 things you should know before you start AppArmor Loader Setting up nodes with profiles seccomp-operator Is similar to the AppArmor Loader, only instead of AppArmor profiles, it creates a seccomp profiles on each host","title":"Additional Resources"},{"location":"security/docs/runtime/#tools","text":"Aqua Qualys Stackrox Sysdig Secure Prisma","title":"Tools"},{"location":"upgrades/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Best Practices for Cluster Upgrades \u00b6 This guide shows cluster administrators how to plan and execute their Amazon EKS upgrade strategy. It also describes how to upgrade self-managed nodes, managed node groups, Karpenter nodes, and Fargate nodes. It does not include guidance on EKS Anywhere, self-managed Kubernetes, AWS Outposts, or AWS Local Zones. Overview \u00b6 A Kubernetes version encompasses both the control plane and the data plane. To ensure smooth operation, both the control plane and the data plane should run the same Kubernetes minor version, such as 1.24 . Control plane \u2014 The control plane version is defined by the Kubernetes API server. In EKS clusters, this is managed by AWS. Upgrades to the control plane version are started using the AWS API. Data plane \u2014 The data plane version references the version of the Kubelet running on your nodes. Different nodes in the same cluster may have different versions. See the version of all nodes with kubectl get nodes . Keep your cluster updated \u00b6 Keeping up with Kubernetes releases is a critical component of the shared responsibility model when adopting EKS and Kubernetes. Past a certain point (usually 1 year), the Kubernetes community stops releasing bug and CVE patches. Additionally, the Kubernetes project does not encourage CVE submission for deprecated versions. This means that vulnerabilities specific to an older version of Kubernetes may not even be reported, leaving you exposed with no notice and no remediation options in the case of a vulnerability. We consider this to be an unacceptable security posture for EKS and our customers, leading to the current policy of automatic upgrades to newer versions. Review the EKS version support policy . If your cluster is not upgraded before the end of support date, it will be automatically upgraded to the next supported version. Review the Version FAQ for more information. Without proper testing and preparation this may disrupt workloads and controllers. It is highly recommended you stay up to date with Kubernetes releases in EKS. Develop a well-documented process for handling cluster upgrades. Build runbooks and tooling to support cluster upgrades. Plan to regularly upgrade your cluster. To keep up with EKS Kubernetes releases, upgrade clusters at least once per year. Review the EKS release calendar \u00b6 Review the EKS Kubernetes release calendar to learn when new versions are coming, and when support for specific versions end. Generally, EKS releases three minor versions of Kubernetes annually, and each minor version is supported for about 14 months. Additionally, review the upstream Kubernetes release information . Understand how the shared responsibility model applies to cluster upgrades \u00b6 You are responsible for initiating upgrade for both cluster control plane as well as the data plane. Learn how to initiate an upgrade. When you initiate a cluster upgrade, AWS manages upgrading the cluster control plane. You are responsible for upgrading the data plane, including Fargate pods and other add-ons. You must validate and plan upgrades for workloads running on your cluster to ensure their availability and operations are not impacted after cluster upgrade Upgrade clusters in-place \u00b6 EKS supports an in-place cluster upgrade strategy. This maintains cluster resources, and keeps cluster configuration consistent (e.g., API endpoint, OIDC, ENIs, load balancers). This is less disruptive for cluster users, and it will use the existing workloads and resources in the cluster without requiring you to redeploy workloads or migrate external resources (e.g., DNS, storage). When performing an in-place cluster upgrade, it is important to note that only one minor version upgrade can be executed at a time (e.g., from 1.24 to 1.25). This means that if you need to update multiple versions, a series of sequential upgrades will be required. Planning sequential upgrades is more complicated, and has a higher risk of downtime. In this situation, evaluate a blue/green cluster upgrade strategy. Upgrade your control plane and data plane in sequence \u00b6 To upgrade a cluster you will need to take the following actions: Review the Kubernetes and EKS release notes. Take a backup of the cluster. (optional) Identify and remediate deprecated and removed API usage in your workloads. Ensure Managed Node Groups, if used, are on the same Kubernetes version as the control plane. EKS managed node groups and nodes created by EKS Fargate Profiles only support 1 minor version skew between the control plane and data plane. Upgrade the cluster control plane using the AWS console or cli. Review add-on compatibility. Upgrade your Kubernetes add-ons and custom controllers, as required. Update kubectl. Upgrade the cluster data plane. Upgrade your nodes to the same Kubernetes minor version as your upgraded cluster. Use the EKS Documentation to create an upgrade checklist \u00b6 The EKS Kubernetes version documentation includes a detailed list of changes for each version. Build a checklist for each upgrade. For specific EKS version upgrade guidance, review the documentation for notable changes and considerations for each version. EKS 1.27 EKS 1.26 EKS 1.25 EKS 1.24 EKS 1.23 EKS 1.22 Upgrade add-ons and components using the Kubernetes API \u00b6 Before you upgrade a cluster, you should understand what versions of Kubernetes components you are using. Inventory cluster components, and identify components that use the Kubernetes API directly. This includes critical cluster components such as monitoring and logging agents, cluster autoscalers, container storage drivers (e.g. EBS CSI , EFS CSI ), ingress controllers, and any other workloads or add-ons that rely on the Kubernetes API directly. Tip Critical cluster components are often installed in a *-system namespace kubectl get ns | grep '-system' Once you have identified components that rely the Kubernetes API, check their documentation for version compatibility and upgrade requirements. For example, see the AWS Load Balancer Controller documentation for version compatibility. Some components may need to be upgraded or configuration changed before proceeding with a cluster upgrade. Some critical components to check include CoreDNS , kube-proxy , VPC CNI , and storage drivers. Clusters often contain many workloads that use the Kubernetes API and are required for workload functionality such as ingress controllers, continuous delivery systems, and monitoring tools. When you upgrade an EKS cluster, you must also upgrade your add-ons and third-party tools to make sure they are compatible. See the following examples of common add-ons and their relevant upgrade documentation: Amazon VPC CNI: For the recommended version of the Amazon VPC CNI add-on for each cluster version, see Updating the Amazon VPC CNI plugin for Kubernetes self-managed add-on . When installed as an Amazon EKS Add-on, it can only be upgraded one minor version at a time. kube-proxy: See Updating the Kubernetes kube-proxy self-managed add-on . CoreDNS: See Updating the CoreDNS self-managed add-on . AWS Load Balancer Controller: The AWS Load Balancer Controller needs to be compatible with the EKS version you have deployed. See the installation guide for more information. Amazon Elastic Block Store (Amazon EBS) Container Storage Interface (CSI) driver: For installation and upgrade information, see Managing the Amazon EBS CSI driver as an Amazon EKS add-on . Amazon Elastic File System (Amazon EFS) Container Storage Interface (CSI) driver: For installation and upgrade information, see Amazon EFS CSI driver . Kubernetes Metrics Server: For more information, see metrics-server on GitHub. Kubernetes Cluster Autoscaler : To upgrade the version of Kubernetes Cluster Autoscaler, change the version of the image in the deployment. The Cluster Autoscaler is tightly coupled with the Kubernetes scheduler. You will always need to upgrade it when you upgrade the cluster. Review the GitHub releases to find the address of the latest release corresponding to your Kubernetes minor version. Karpenter: For installation and upgrade information, see the Karpenter documentation. Verify basic EKS requirements before upgrading \u00b6 AWS requires certain resources in your account to complete the upgrade process. If these resources aren\u2019t present, the cluster cannot be upgraded. A control plane upgrade requires the following resources: Available IP addresses. To update the cluster, Amazon EKS requires up to five available IP addresses from the subnets that you specified when you created your cluster. EKS IAM role: The control plane IAM role is still present in the account with the necessary permissions. EKS security group: Control plane primary security group still available in the account with the necessary access rules. If your cluster has secret encryption enabled, then make sure that the cluster IAM role has permission to use the AWS Key Management Service (AWS KMS) key. Verify available IP addresses \u00b6 To update the cluster, Amazon EKS requires up to five available IP addresses from the subnets that you specified when you created your cluster. To verify that your subnets have enough IP addresses to upgrade the cluster you can run the following command: CLUSTER=<cluster name> aws ec2 describe-subnets --subnet-ids \\ $(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.resourcesVpcConfig.subnetIds' \\ --output text) \\ --query 'Subnets[*].[SubnetId,AvailabilityZone,AvailableIpAddressCount]' \\ --output table ---------------------------------------------------- | DescribeSubnets | +---------------------------+--------------+-------+ | subnet-067fa8ee8476abbd6 | us-east-1a | 8184 | | subnet-0056f7403b17d2b43 | us-east-1b | 8153 | | subnet-09586f8fb3addbc8c | us-east-1a | 8120 | | subnet-047f3d276a22c6bce | us-east-1b | 8184 | +---------------------------+--------------+-------+ The VPC CNI Metrics Helper may be used to create a CloudWatch dashboard for VPC metrics. Verify EKS IAM role \u00b6 To verify that the IAM role is available and has the correct assume role policy in your account you can run the following commands: CLUSTER=<cluster name> ROLE_ARN=$(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.roleArn' --output text) aws iam get-role --role-name ${ROLE_ARN##*/} \\ --query 'Role.AssumeRolePolicyDocument' { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"eks.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] } Verify EKS security group \u00b6 To verify that the security groups exist in your account you can run the following commands: CLUSTER=<cluster name> aws ec2 describe-security-groups \\ --group-ids $(aws eks describe-cluster \\ --query 'cluster.resourcesVpcConfig.securityGroupIds[*]' \\ --name ${CLUSTER} --output text) { \"SecurityGroups\": [ { \"Description\": \"Communication between the control plane and worker nodegroups\", \"GroupName\": \"eksctl-prefix-cluster-ControlPlaneSecurityGroup-HFO1JTSFWL1J\", If you see output like the following then you should double check the security groups used by your cluster and available in your account. An error occurred (InvalidGroupId.Malformed) when calling the DescribeSecurityGroups operation: Invalid id: If the security groups aren't found, review Amazon EKS security group requirements and considerations . You may need to recreate the cluster if the eks-cluster-sg-my-cluster-uniqueID security group has been deleted. Migrate to EKS Add-ons \u00b6 Amazon EKS automatically installs add-ons such as the Amazon VPC CNI plugin for Kubernetes, kube-proxy , and CoreDNS for every cluster. Add-ons may be self-managed, or installed as Amazon EKS Add-ons. Amazon EKS Add-ons is an alternate way to manage add-ons using the EKS API. You can use Amazon EKS Add-ons to update vesions with a single command. For Example: aws eks update-addon \u2014cluster-name my-cluster \u2014addon-name vpc-cni \u2014addon-version version-number \\ --service-account-role-arn arn:aws:iam::111122223333:role/role-name \u2014configuration-values '{}' \u2014resolve-conflicts PRESERVE Check if you have any EKS Add-ons with: aws eks list-addons --cluster-name <cluster name> Warning EKS Add-ons are not automatically upgraded during a control plane upgrade. You must initiate EKS add-on updates, and select the desired version. You are responsible for selecting a compatible version from all available versions. Review the guidance on add-on version compatibility. Amazon EKS Add-ons may only be upgraded one minor version at a time. Learn more about what components are available as EKS Add-ons, and how to get started. Learn how to supply a custom configuration to an EKS Add-on. Identify and remediate removed API usage before upgrading the control plane \u00b6 You should identify API usage of removed APIs before upgrading your EKS control plane. To do that we recommend using tools that can check a running cluster or static, rendered Kubernetes manifest files. Running the check against static manifest files is generally more accurate. If run against live clusters, these tools may return false positives. A deprecated Kubernetes API does not mean the API has been removed. You should check the Kubernetes Deprecation Policy to understand how API removal affects your workloads. Kube-no-trouble \u00b6 Kube-no-trouble is an open source command line utility with the command kubent . When you run kubent without any arguments it will use your current KubeConfig context and scan the cluster and print a report with what APIs will be deprecated and removed. kubent 4:17PM INF >>> Kube No Trouble `kubent` <<< 4:17PM INF version 0.7.0 (git sha d1bb4e5fd6550b533b2013671aa8419d923ee042) 4:17PM INF Initializing collectors and retrieving data 4:17PM INF Target K8s version is 1.24.8-eks-ffeb93d 4:l INF Retrieved 93 resources from collector name=Cluster 4:17PM INF Retrieved 16 resources from collector name=\"Helm v3\" 4:17PM INF Loaded ruleset name=custom.rego.tmpl 4:17PM INF Loaded ruleset name=deprecated-1-16.rego 4:17PM INF Loaded ruleset name=deprecated-1-22.rego 4:17PM INF Loaded ruleset name=deprecated-1-25.rego 4:17PM INF Loaded ruleset name=deprecated-1-26.rego 4:17PM INF Loaded ruleset name=deprecated-future.rego __________________________________________________________________________________________ >>> Deprecated APIs removed in 1.25 <<< ------------------------------------------------------------------------------------------ KIND NAMESPACE NAME API_VERSION REPLACE_WITH (SINCE) PodSecurityPolicy <undefined> eks.privileged policy/v1beta1 <removed> (1.21.0) It can also be used to scan static manifest files and helm packages. It is recommended to run kubent as part of a continuous integration (CI) process to identify issues before manifests are deployed. Scanning manifests is also more accurate than scanning live clusters. Kube-no-trouble provides a sample Service Account and Role with the appropriate permissions for scanning the cluster. Pluto \u00b6 Another option is pluto which is similar to kubent because it supports scanning a live cluster, manifest files, helm charts and has a GitHub Action you can include in your CI process. pluto detect-all-in-cluster NAME KIND VERSION REPLACEMENT REMOVED DEPRECATED REPL AVAIL eks.privileged PodSecurityPolicy policy/v1beta1 false true true Update Kubernetes workloads. Use kubectl-convert to update manifests \u00b6 After you have identified what workloads and manifests need to be updated, you may need to change the resource type in your manifest files (e.g. PodSecurityPolicies to PodSecurityStandards). This will require updating the resource specification and additional research depending on what resource is being replaced. If the resource type is staying the same but API version needs to be updated you can use the kubectl-convert command to automatically convert your manifest files. For example, to convert an older Deployment to apps/v1 . For more information, see Install kubectl convert plugin on the Kubernetes website. kubectl-convert -f <file> --output-version <group>/<version> Configure PodDisruptionBudgets and topologySpreadConstraints to ensure availability of your workloads while the data plane is upgraded \u00b6 Ensure your workloads have the proper PodDisruptionBudgets and topologySpreadConstraints to ensure availability of your workloads while the data plane is upgraded. Not every workload requires the same level of availability so you need to validate the scale and requirements of your workload. Make sure workloads are spread in multiple Availability Zones and on multiple hosts with topology spreads will give a higher level of confidence that workloads will migrate to the new data plane automatically without incident. Here is an example workload that will always have 80% of replicas available and spread replicas across zones and hosts apiVersion: policy/v1 kind: PodDisruptionBudget metadata: name: myapp spec: minAvailable: \"80%\" selector: matchLabels: app: myapp --- apiVersion: apps/v1 kind: Deployment metadata: name: myapp spec: replicas: 10 selector: matchLabels: app: myapp template: metadata: labels: app: myapp spec: containers: - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2 name: myapp resources: requests: cpu: \"1\" memory: 256M topologySpreadConstraints: - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: kubernetes.io/hostname whenUnsatisfiable: DoNotSchedule - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: topology.kubernetes.io/zone whenUnsatisfiable: DoNotSchedule AWS Resilience Hub has added Amazon Elastic Kubernetes Service (Amazon EKS) as a supported resource. Resilience Hub provides a single place to define, validate, and track the resilience of your applications so that you can avoid unnecessary downtime caused by software, infrastructure, or operational disruptions. Use Managed Node Groups or Karpenter to simplify data plane upgrades \u00b6 Managed Node Groups and Karpenter both simplify node upgrades, but they take different approaches. Managed node groups automate the provisioning and lifecycle management of nodes. This means that you can create, automatically update, or terminate nodes with a single operation. In the default configuration, Karpenter automatically creates new nodes using the latest compatible EKS Optimized AMI. As EKS releases updated EKS Optimized AMIs or the cluster is upgraded, Karpenter will automatically start using these images. Karpenter also implements Node Expiry to update nodes. Karpenter can be configured to use custom AMIs. If you use custom AMIs with Karpenter, you are responsible for the version of kubelet. Track the version skew of nodes. Ensure Managed Node Groups are on the same version as the control plane before upgrading \u00b6 The upstream Kubernetes project supports minor version skew between the control plane and data plane\u2014specifically the API server and kubelet\u2014of 2 minor versions. If your EKS version is 1.25 then the oldest kubelet you can use is 1.23. This version skew is different for EKS managed node groups and nodes created by EKS Fargate Profiles. They only support 1 minor version skew between the control plane and data plane (e.g., EKS 1.25 with 1.24 kubelet). Enable node expiry for Karpenter managed nodes \u00b6 One way Karpenter implements node upgrades is using the concept of node expiry. This reduces the planning required for node upgrades. When you set a value for ttlSecondsUntilExpired in your provisioner, this activates node expiry. After nodes reach the defined age in seconds, they\u2019re safely drained and deleted. This is true even if they\u2019re in use, allowing you to replace nodes with newly provisioned upgraded instances. When a node is replaced, Karpenter uses the latest EKS-optimized AMIs. For more information, see Deprovisioning on the Karpenter website. Karpenter doesn\u2019t automatically add jitter to this value. To prevent excessive workload disruption, define a pod disruption budget , as shown in Kubernetes documentation. If you configure ttlSecondsUntilExpired on a provisioner, this applies to existing nodes associated with the provisioner. Use Drift feature for Karpenter managed nodes \u00b6 Karpenter's Drift feature can automatically upgrade the Karpenter-provisioned nodes to stay in-sync with the EKS control plane. Karpenter Drift currently needs to be enabled using a feature gate . Karpenter's default configuration uses the latest EKS-Optimized AMI for the same major and minor version as the EKS cluster's control plane. After an EKS Cluster upgrade completes, Karpenter's Drift feature will detect that the Karpenter-provisioned nodes are using EKS-Optimized AMIs for the previous cluster version, and automatically cordon, drain, and replace those nodes. To support pods moving to new nodes, follow Kubernetes best practices by setting appropriate pod resource quotas , and using pod disruption budgets (PDB). Karpenter's deprovisioning will pre-spin up replacement nodes based on the pod resource requests, and will respect the PDBs when deprovisioning nodes. Use eksctl to automate upgrades for self-managed node groups \u00b6 Self managed node groups are EC2 instances that were deployed in your account and attached to the cluster outside of the EKS service. These are usually deployed and managed by some form of automation tooling. To upgrade self-managed node groups you should refer to your tools documentation. For example, eksctl supports deleting and draining self-managed nodes. Some common tools include: eksctl kOps EKS Blueprints Backup the cluster before upgrading \u00b6 New versions of Kubernetes introduce significant changes to your Amazon EKS cluster. After you upgrade a cluster, you can\u2019t downgrade it. Velero is an community supported open-source tool that can be used to take backups of existing clusters and apply the backups to a new cluster. Note that you can only create new clusters for Kubernetes versions currently supported by EKS. If the version your cluster is currently running is still supported and an upgrade fails, you can create a new cluster with the original version and restore the data plane. Note that AWS resources, including IAM, are not included in the backup by Velero. These resources would need to be recreated. Restart Fargate deployments after upgrading the control plane \u00b6 To upgrade Fargate data plane nodes you need to redeploy the workloads. You can identify which workloads are running on fargate nodes by listing all pods with the -o wide option. Any node name that begins with fargate- will need to be redeployed in the cluster. Evaluate Blue/Green Clusters as an alternative to in-place cluster upgrades \u00b6 Some customers prefer to do a blue/green upgrade strategy. This can have benefits, but also includes downsides that should be considered. Benefits include: Possible to change multiple EKS versions at once (e.g. 1.23 to 1.25) Able to switch back to the old cluster Creates a new cluster which may be managed with newer systems (e.g. terraform) Workloads can be migrated individually Some downsides include: API endpoint and OIDC change which requires updating consumers (e.g. kubectl and CI/CD) Requires 2 clusters to be run in parallel during the migration, which can be expensive and limit region capacity More coordination is needed if workloads depend on each other to be migrated together Load balancers and external DNS cannot easily span multiple clusters While this strategy is possible to do, it is more expensive than an in-place upgrade and requires more time for coordination and workload migrations. It may be required in some situations and should be planned carefully. With high degrees of automation and declarative systems like GitOps, this may be easier to do. You will need to take additional precautions for stateful workloads so data is backed up and migrated to new clusters. Review these blogs posts for more information: Kubernetes cluster upgrade: the blue-green deployment strategy Blue/Green or Canary Amazon EKS clusters migration for stateless ArgoCD workloads Track planned major changes in the Kubernetes project \u2014 Think ahead \u00b6 Don\u2019t look only at the next version. Review new versions of Kubernetes as they are released, and identify major changes. For example, some applications directly used the docker API, and support for Container Runtime Interface (CRI) for Docker (also known as Dockershim) was removed in Kubernetes 1.24 . This kind of change requires more time to prepare for. Review all documented changes for the version that you\u2019re upgrading to, and note any required upgrade steps. Also, note any requirements or procedures that are specific to Amazon EKS managed clusters. Kubernetes changelog Specific Guidance on Feature Removals \u00b6 Removal of Dockershim in 1.25 - Use Detector for Docker Socket (DDS) \u00b6 The EKS Optimized AMI for 1.25 no longer includes support for Dockershim. If you have a dependency on Dockershim, e.g. you are mounting the Docker socket, you will need to remove those dependencies before upgrading your worker nodes to 1.25. Find instances where you have a dependency on the Docker socket before upgrading to 1.25. We recommend using Detector for Docker Socket (DDS), a kubectl plugin. . Removal of PodSecurityPolicy in 1.25 - Migrate to Pod Security Standards or a policy-as-code solution \u00b6 PodSecurityPolicy was deprecated in Kubernetes 1.21 , and has been removed in Kubernetes 1.25. If you are using PodSecurityPolicy in your cluster, then you must migrate to the built-in Kubernetes Pod Security Standards (PSS) or to a policy-as-code solution before upgrading your cluster to version 1.25 to avoid interruptions to your workloads. AWS published a detailed FAQ in the EKS documentation. Review the Pod Security Standards (PSS) and Pod Security Admission (PSA) best practices. Review the PodSecurityPolicy Deprecation blog post on the Kubernetes website. Deprecation of In-Tree Storage Driver in 1.23 - Migrate to Container Storage Interface (CSI) Drivers \u00b6 The Container Storage Interface (CSI) was designed to help Kubernetes replace its existing, in-tree storage driver mechanisms. The Amazon EBS container storage interface (CSI) migration feature is enabled by default in Amazon EKS 1.23 and later clusters. If you have pods running on a version 1.22 or earlier cluster, then you must install the Amazon EBS CSI driver before updating your cluster to version 1.23 to avoid service interruption. Review the Amazon EBS CSI migration frequently asked questions . Additional Resources \u00b6 ClowdHaus EKS Upgrade Guidance \u00b6 ClowdHaus EKS Upgrade Guidance is a CLI to aid in upgrading Amazon EKS clusters. It can analyze a cluster for any potential issues to remediate prior to upgrade. GoNoGo \u00b6 GoNoGo is an alpha-stage tool to determine the upgrade confidence of your cluster add-ons.","title":"Cluster Upgrades"},{"location":"upgrades/#best-practices-for-cluster-upgrades","text":"This guide shows cluster administrators how to plan and execute their Amazon EKS upgrade strategy. It also describes how to upgrade self-managed nodes, managed node groups, Karpenter nodes, and Fargate nodes. It does not include guidance on EKS Anywhere, self-managed Kubernetes, AWS Outposts, or AWS Local Zones.","title":"Best Practices for Cluster Upgrades"},{"location":"upgrades/#overview","text":"A Kubernetes version encompasses both the control plane and the data plane. To ensure smooth operation, both the control plane and the data plane should run the same Kubernetes minor version, such as 1.24 . Control plane \u2014 The control plane version is defined by the Kubernetes API server. In EKS clusters, this is managed by AWS. Upgrades to the control plane version are started using the AWS API. Data plane \u2014 The data plane version references the version of the Kubelet running on your nodes. Different nodes in the same cluster may have different versions. See the version of all nodes with kubectl get nodes .","title":"Overview"},{"location":"upgrades/#keep-your-cluster-updated","text":"Keeping up with Kubernetes releases is a critical component of the shared responsibility model when adopting EKS and Kubernetes. Past a certain point (usually 1 year), the Kubernetes community stops releasing bug and CVE patches. Additionally, the Kubernetes project does not encourage CVE submission for deprecated versions. This means that vulnerabilities specific to an older version of Kubernetes may not even be reported, leaving you exposed with no notice and no remediation options in the case of a vulnerability. We consider this to be an unacceptable security posture for EKS and our customers, leading to the current policy of automatic upgrades to newer versions. Review the EKS version support policy . If your cluster is not upgraded before the end of support date, it will be automatically upgraded to the next supported version. Review the Version FAQ for more information. Without proper testing and preparation this may disrupt workloads and controllers. It is highly recommended you stay up to date with Kubernetes releases in EKS. Develop a well-documented process for handling cluster upgrades. Build runbooks and tooling to support cluster upgrades. Plan to regularly upgrade your cluster. To keep up with EKS Kubernetes releases, upgrade clusters at least once per year.","title":"Keep your cluster updated"},{"location":"upgrades/#review-the-eks-release-calendar","text":"Review the EKS Kubernetes release calendar to learn when new versions are coming, and when support for specific versions end. Generally, EKS releases three minor versions of Kubernetes annually, and each minor version is supported for about 14 months. Additionally, review the upstream Kubernetes release information .","title":"Review the EKS release calendar"},{"location":"upgrades/#understand-how-the-shared-responsibility-model-applies-to-cluster-upgrades","text":"You are responsible for initiating upgrade for both cluster control plane as well as the data plane. Learn how to initiate an upgrade. When you initiate a cluster upgrade, AWS manages upgrading the cluster control plane. You are responsible for upgrading the data plane, including Fargate pods and other add-ons. You must validate and plan upgrades for workloads running on your cluster to ensure their availability and operations are not impacted after cluster upgrade","title":"Understand how the shared responsibility model applies to cluster upgrades"},{"location":"upgrades/#upgrade-clusters-in-place","text":"EKS supports an in-place cluster upgrade strategy. This maintains cluster resources, and keeps cluster configuration consistent (e.g., API endpoint, OIDC, ENIs, load balancers). This is less disruptive for cluster users, and it will use the existing workloads and resources in the cluster without requiring you to redeploy workloads or migrate external resources (e.g., DNS, storage). When performing an in-place cluster upgrade, it is important to note that only one minor version upgrade can be executed at a time (e.g., from 1.24 to 1.25). This means that if you need to update multiple versions, a series of sequential upgrades will be required. Planning sequential upgrades is more complicated, and has a higher risk of downtime. In this situation, evaluate a blue/green cluster upgrade strategy.","title":"Upgrade clusters in-place"},{"location":"upgrades/#upgrade-your-control-plane-and-data-plane-in-sequence","text":"To upgrade a cluster you will need to take the following actions: Review the Kubernetes and EKS release notes. Take a backup of the cluster. (optional) Identify and remediate deprecated and removed API usage in your workloads. Ensure Managed Node Groups, if used, are on the same Kubernetes version as the control plane. EKS managed node groups and nodes created by EKS Fargate Profiles only support 1 minor version skew between the control plane and data plane. Upgrade the cluster control plane using the AWS console or cli. Review add-on compatibility. Upgrade your Kubernetes add-ons and custom controllers, as required. Update kubectl. Upgrade the cluster data plane. Upgrade your nodes to the same Kubernetes minor version as your upgraded cluster.","title":"Upgrade your control plane and data plane in sequence"},{"location":"upgrades/#use-the-eks-documentation-to-create-an-upgrade-checklist","text":"The EKS Kubernetes version documentation includes a detailed list of changes for each version. Build a checklist for each upgrade. For specific EKS version upgrade guidance, review the documentation for notable changes and considerations for each version. EKS 1.27 EKS 1.26 EKS 1.25 EKS 1.24 EKS 1.23 EKS 1.22","title":"Use the EKS Documentation to create an upgrade checklist"},{"location":"upgrades/#upgrade-add-ons-and-components-using-the-kubernetes-api","text":"Before you upgrade a cluster, you should understand what versions of Kubernetes components you are using. Inventory cluster components, and identify components that use the Kubernetes API directly. This includes critical cluster components such as monitoring and logging agents, cluster autoscalers, container storage drivers (e.g. EBS CSI , EFS CSI ), ingress controllers, and any other workloads or add-ons that rely on the Kubernetes API directly. Tip Critical cluster components are often installed in a *-system namespace kubectl get ns | grep '-system' Once you have identified components that rely the Kubernetes API, check their documentation for version compatibility and upgrade requirements. For example, see the AWS Load Balancer Controller documentation for version compatibility. Some components may need to be upgraded or configuration changed before proceeding with a cluster upgrade. Some critical components to check include CoreDNS , kube-proxy , VPC CNI , and storage drivers. Clusters often contain many workloads that use the Kubernetes API and are required for workload functionality such as ingress controllers, continuous delivery systems, and monitoring tools. When you upgrade an EKS cluster, you must also upgrade your add-ons and third-party tools to make sure they are compatible. See the following examples of common add-ons and their relevant upgrade documentation: Amazon VPC CNI: For the recommended version of the Amazon VPC CNI add-on for each cluster version, see Updating the Amazon VPC CNI plugin for Kubernetes self-managed add-on . When installed as an Amazon EKS Add-on, it can only be upgraded one minor version at a time. kube-proxy: See Updating the Kubernetes kube-proxy self-managed add-on . CoreDNS: See Updating the CoreDNS self-managed add-on . AWS Load Balancer Controller: The AWS Load Balancer Controller needs to be compatible with the EKS version you have deployed. See the installation guide for more information. Amazon Elastic Block Store (Amazon EBS) Container Storage Interface (CSI) driver: For installation and upgrade information, see Managing the Amazon EBS CSI driver as an Amazon EKS add-on . Amazon Elastic File System (Amazon EFS) Container Storage Interface (CSI) driver: For installation and upgrade information, see Amazon EFS CSI driver . Kubernetes Metrics Server: For more information, see metrics-server on GitHub. Kubernetes Cluster Autoscaler : To upgrade the version of Kubernetes Cluster Autoscaler, change the version of the image in the deployment. The Cluster Autoscaler is tightly coupled with the Kubernetes scheduler. You will always need to upgrade it when you upgrade the cluster. Review the GitHub releases to find the address of the latest release corresponding to your Kubernetes minor version. Karpenter: For installation and upgrade information, see the Karpenter documentation.","title":"Upgrade add-ons and components using the Kubernetes API"},{"location":"upgrades/#verify-basic-eks-requirements-before-upgrading","text":"AWS requires certain resources in your account to complete the upgrade process. If these resources aren\u2019t present, the cluster cannot be upgraded. A control plane upgrade requires the following resources: Available IP addresses. To update the cluster, Amazon EKS requires up to five available IP addresses from the subnets that you specified when you created your cluster. EKS IAM role: The control plane IAM role is still present in the account with the necessary permissions. EKS security group: Control plane primary security group still available in the account with the necessary access rules. If your cluster has secret encryption enabled, then make sure that the cluster IAM role has permission to use the AWS Key Management Service (AWS KMS) key.","title":"Verify basic EKS requirements before upgrading"},{"location":"upgrades/#verify-available-ip-addresses","text":"To update the cluster, Amazon EKS requires up to five available IP addresses from the subnets that you specified when you created your cluster. To verify that your subnets have enough IP addresses to upgrade the cluster you can run the following command: CLUSTER=<cluster name> aws ec2 describe-subnets --subnet-ids \\ $(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.resourcesVpcConfig.subnetIds' \\ --output text) \\ --query 'Subnets[*].[SubnetId,AvailabilityZone,AvailableIpAddressCount]' \\ --output table ---------------------------------------------------- | DescribeSubnets | +---------------------------+--------------+-------+ | subnet-067fa8ee8476abbd6 | us-east-1a | 8184 | | subnet-0056f7403b17d2b43 | us-east-1b | 8153 | | subnet-09586f8fb3addbc8c | us-east-1a | 8120 | | subnet-047f3d276a22c6bce | us-east-1b | 8184 | +---------------------------+--------------+-------+ The VPC CNI Metrics Helper may be used to create a CloudWatch dashboard for VPC metrics.","title":"Verify available IP addresses"},{"location":"upgrades/#verify-eks-iam-role","text":"To verify that the IAM role is available and has the correct assume role policy in your account you can run the following commands: CLUSTER=<cluster name> ROLE_ARN=$(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.roleArn' --output text) aws iam get-role --role-name ${ROLE_ARN##*/} \\ --query 'Role.AssumeRolePolicyDocument' { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"eks.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] }","title":"Verify EKS IAM role"},{"location":"upgrades/#verify-eks-security-group","text":"To verify that the security groups exist in your account you can run the following commands: CLUSTER=<cluster name> aws ec2 describe-security-groups \\ --group-ids $(aws eks describe-cluster \\ --query 'cluster.resourcesVpcConfig.securityGroupIds[*]' \\ --name ${CLUSTER} --output text) { \"SecurityGroups\": [ { \"Description\": \"Communication between the control plane and worker nodegroups\", \"GroupName\": \"eksctl-prefix-cluster-ControlPlaneSecurityGroup-HFO1JTSFWL1J\", If you see output like the following then you should double check the security groups used by your cluster and available in your account. An error occurred (InvalidGroupId.Malformed) when calling the DescribeSecurityGroups operation: Invalid id: If the security groups aren't found, review Amazon EKS security group requirements and considerations . You may need to recreate the cluster if the eks-cluster-sg-my-cluster-uniqueID security group has been deleted.","title":"Verify EKS security group"},{"location":"upgrades/#migrate-to-eks-add-ons","text":"Amazon EKS automatically installs add-ons such as the Amazon VPC CNI plugin for Kubernetes, kube-proxy , and CoreDNS for every cluster. Add-ons may be self-managed, or installed as Amazon EKS Add-ons. Amazon EKS Add-ons is an alternate way to manage add-ons using the EKS API. You can use Amazon EKS Add-ons to update vesions with a single command. For Example: aws eks update-addon \u2014cluster-name my-cluster \u2014addon-name vpc-cni \u2014addon-version version-number \\ --service-account-role-arn arn:aws:iam::111122223333:role/role-name \u2014configuration-values '{}' \u2014resolve-conflicts PRESERVE Check if you have any EKS Add-ons with: aws eks list-addons --cluster-name <cluster name> Warning EKS Add-ons are not automatically upgraded during a control plane upgrade. You must initiate EKS add-on updates, and select the desired version. You are responsible for selecting a compatible version from all available versions. Review the guidance on add-on version compatibility. Amazon EKS Add-ons may only be upgraded one minor version at a time. Learn more about what components are available as EKS Add-ons, and how to get started. Learn how to supply a custom configuration to an EKS Add-on.","title":"Migrate to EKS Add-ons"},{"location":"upgrades/#identify-and-remediate-removed-api-usage-before-upgrading-the-control-plane","text":"You should identify API usage of removed APIs before upgrading your EKS control plane. To do that we recommend using tools that can check a running cluster or static, rendered Kubernetes manifest files. Running the check against static manifest files is generally more accurate. If run against live clusters, these tools may return false positives. A deprecated Kubernetes API does not mean the API has been removed. You should check the Kubernetes Deprecation Policy to understand how API removal affects your workloads.","title":"Identify and remediate removed API usage before upgrading the control plane"},{"location":"upgrades/#kube-no-trouble","text":"Kube-no-trouble is an open source command line utility with the command kubent . When you run kubent without any arguments it will use your current KubeConfig context and scan the cluster and print a report with what APIs will be deprecated and removed. kubent 4:17PM INF >>> Kube No Trouble `kubent` <<< 4:17PM INF version 0.7.0 (git sha d1bb4e5fd6550b533b2013671aa8419d923ee042) 4:17PM INF Initializing collectors and retrieving data 4:17PM INF Target K8s version is 1.24.8-eks-ffeb93d 4:l INF Retrieved 93 resources from collector name=Cluster 4:17PM INF Retrieved 16 resources from collector name=\"Helm v3\" 4:17PM INF Loaded ruleset name=custom.rego.tmpl 4:17PM INF Loaded ruleset name=deprecated-1-16.rego 4:17PM INF Loaded ruleset name=deprecated-1-22.rego 4:17PM INF Loaded ruleset name=deprecated-1-25.rego 4:17PM INF Loaded ruleset name=deprecated-1-26.rego 4:17PM INF Loaded ruleset name=deprecated-future.rego __________________________________________________________________________________________ >>> Deprecated APIs removed in 1.25 <<< ------------------------------------------------------------------------------------------ KIND NAMESPACE NAME API_VERSION REPLACE_WITH (SINCE) PodSecurityPolicy <undefined> eks.privileged policy/v1beta1 <removed> (1.21.0) It can also be used to scan static manifest files and helm packages. It is recommended to run kubent as part of a continuous integration (CI) process to identify issues before manifests are deployed. Scanning manifests is also more accurate than scanning live clusters. Kube-no-trouble provides a sample Service Account and Role with the appropriate permissions for scanning the cluster.","title":"Kube-no-trouble"},{"location":"upgrades/#pluto","text":"Another option is pluto which is similar to kubent because it supports scanning a live cluster, manifest files, helm charts and has a GitHub Action you can include in your CI process. pluto detect-all-in-cluster NAME KIND VERSION REPLACEMENT REMOVED DEPRECATED REPL AVAIL eks.privileged PodSecurityPolicy policy/v1beta1 false true true","title":"Pluto"},{"location":"upgrades/#update-kubernetes-workloads-use-kubectl-convert-to-update-manifests","text":"After you have identified what workloads and manifests need to be updated, you may need to change the resource type in your manifest files (e.g. PodSecurityPolicies to PodSecurityStandards). This will require updating the resource specification and additional research depending on what resource is being replaced. If the resource type is staying the same but API version needs to be updated you can use the kubectl-convert command to automatically convert your manifest files. For example, to convert an older Deployment to apps/v1 . For more information, see Install kubectl convert plugin on the Kubernetes website. kubectl-convert -f <file> --output-version <group>/<version>","title":"Update Kubernetes workloads. Use kubectl-convert to update manifests"},{"location":"upgrades/#configure-poddisruptionbudgets-and-topologyspreadconstraints-to-ensure-availability-of-your-workloads-while-the-data-plane-is-upgraded","text":"Ensure your workloads have the proper PodDisruptionBudgets and topologySpreadConstraints to ensure availability of your workloads while the data plane is upgraded. Not every workload requires the same level of availability so you need to validate the scale and requirements of your workload. Make sure workloads are spread in multiple Availability Zones and on multiple hosts with topology spreads will give a higher level of confidence that workloads will migrate to the new data plane automatically without incident. Here is an example workload that will always have 80% of replicas available and spread replicas across zones and hosts apiVersion: policy/v1 kind: PodDisruptionBudget metadata: name: myapp spec: minAvailable: \"80%\" selector: matchLabels: app: myapp --- apiVersion: apps/v1 kind: Deployment metadata: name: myapp spec: replicas: 10 selector: matchLabels: app: myapp template: metadata: labels: app: myapp spec: containers: - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2 name: myapp resources: requests: cpu: \"1\" memory: 256M topologySpreadConstraints: - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: kubernetes.io/hostname whenUnsatisfiable: DoNotSchedule - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: topology.kubernetes.io/zone whenUnsatisfiable: DoNotSchedule AWS Resilience Hub has added Amazon Elastic Kubernetes Service (Amazon EKS) as a supported resource. Resilience Hub provides a single place to define, validate, and track the resilience of your applications so that you can avoid unnecessary downtime caused by software, infrastructure, or operational disruptions.","title":"Configure PodDisruptionBudgets and topologySpreadConstraints to ensure availability of your workloads while the data plane is upgraded"},{"location":"upgrades/#use-managed-node-groups-or-karpenter-to-simplify-data-plane-upgrades","text":"Managed Node Groups and Karpenter both simplify node upgrades, but they take different approaches. Managed node groups automate the provisioning and lifecycle management of nodes. This means that you can create, automatically update, or terminate nodes with a single operation. In the default configuration, Karpenter automatically creates new nodes using the latest compatible EKS Optimized AMI. As EKS releases updated EKS Optimized AMIs or the cluster is upgraded, Karpenter will automatically start using these images. Karpenter also implements Node Expiry to update nodes. Karpenter can be configured to use custom AMIs. If you use custom AMIs with Karpenter, you are responsible for the version of kubelet.","title":"Use Managed Node Groups or Karpenter to simplify data plane upgrades"},{"location":"upgrades/#track-the-version-skew-of-nodes-ensure-managed-node-groups-are-on-the-same-version-as-the-control-plane-before-upgrading","text":"The upstream Kubernetes project supports minor version skew between the control plane and data plane\u2014specifically the API server and kubelet\u2014of 2 minor versions. If your EKS version is 1.25 then the oldest kubelet you can use is 1.23. This version skew is different for EKS managed node groups and nodes created by EKS Fargate Profiles. They only support 1 minor version skew between the control plane and data plane (e.g., EKS 1.25 with 1.24 kubelet).","title":"Track the version skew of nodes. Ensure Managed Node Groups are on the same version as the control plane before upgrading"},{"location":"upgrades/#enable-node-expiry-for-karpenter-managed-nodes","text":"One way Karpenter implements node upgrades is using the concept of node expiry. This reduces the planning required for node upgrades. When you set a value for ttlSecondsUntilExpired in your provisioner, this activates node expiry. After nodes reach the defined age in seconds, they\u2019re safely drained and deleted. This is true even if they\u2019re in use, allowing you to replace nodes with newly provisioned upgraded instances. When a node is replaced, Karpenter uses the latest EKS-optimized AMIs. For more information, see Deprovisioning on the Karpenter website. Karpenter doesn\u2019t automatically add jitter to this value. To prevent excessive workload disruption, define a pod disruption budget , as shown in Kubernetes documentation. If you configure ttlSecondsUntilExpired on a provisioner, this applies to existing nodes associated with the provisioner.","title":"Enable node expiry for Karpenter managed nodes"},{"location":"upgrades/#use-drift-feature-for-karpenter-managed-nodes","text":"Karpenter's Drift feature can automatically upgrade the Karpenter-provisioned nodes to stay in-sync with the EKS control plane. Karpenter Drift currently needs to be enabled using a feature gate . Karpenter's default configuration uses the latest EKS-Optimized AMI for the same major and minor version as the EKS cluster's control plane. After an EKS Cluster upgrade completes, Karpenter's Drift feature will detect that the Karpenter-provisioned nodes are using EKS-Optimized AMIs for the previous cluster version, and automatically cordon, drain, and replace those nodes. To support pods moving to new nodes, follow Kubernetes best practices by setting appropriate pod resource quotas , and using pod disruption budgets (PDB). Karpenter's deprovisioning will pre-spin up replacement nodes based on the pod resource requests, and will respect the PDBs when deprovisioning nodes.","title":"Use Drift feature for Karpenter managed nodes"},{"location":"upgrades/#use-eksctl-to-automate-upgrades-for-self-managed-node-groups","text":"Self managed node groups are EC2 instances that were deployed in your account and attached to the cluster outside of the EKS service. These are usually deployed and managed by some form of automation tooling. To upgrade self-managed node groups you should refer to your tools documentation. For example, eksctl supports deleting and draining self-managed nodes. Some common tools include: eksctl kOps EKS Blueprints","title":"Use eksctl to automate upgrades for self-managed node groups"},{"location":"upgrades/#backup-the-cluster-before-upgrading","text":"New versions of Kubernetes introduce significant changes to your Amazon EKS cluster. After you upgrade a cluster, you can\u2019t downgrade it. Velero is an community supported open-source tool that can be used to take backups of existing clusters and apply the backups to a new cluster. Note that you can only create new clusters for Kubernetes versions currently supported by EKS. If the version your cluster is currently running is still supported and an upgrade fails, you can create a new cluster with the original version and restore the data plane. Note that AWS resources, including IAM, are not included in the backup by Velero. These resources would need to be recreated.","title":"Backup the cluster before upgrading"},{"location":"upgrades/#restart-fargate-deployments-after-upgrading-the-control-plane","text":"To upgrade Fargate data plane nodes you need to redeploy the workloads. You can identify which workloads are running on fargate nodes by listing all pods with the -o wide option. Any node name that begins with fargate- will need to be redeployed in the cluster.","title":"Restart Fargate deployments after upgrading the control plane"},{"location":"upgrades/#evaluate-bluegreen-clusters-as-an-alternative-to-in-place-cluster-upgrades","text":"Some customers prefer to do a blue/green upgrade strategy. This can have benefits, but also includes downsides that should be considered. Benefits include: Possible to change multiple EKS versions at once (e.g. 1.23 to 1.25) Able to switch back to the old cluster Creates a new cluster which may be managed with newer systems (e.g. terraform) Workloads can be migrated individually Some downsides include: API endpoint and OIDC change which requires updating consumers (e.g. kubectl and CI/CD) Requires 2 clusters to be run in parallel during the migration, which can be expensive and limit region capacity More coordination is needed if workloads depend on each other to be migrated together Load balancers and external DNS cannot easily span multiple clusters While this strategy is possible to do, it is more expensive than an in-place upgrade and requires more time for coordination and workload migrations. It may be required in some situations and should be planned carefully. With high degrees of automation and declarative systems like GitOps, this may be easier to do. You will need to take additional precautions for stateful workloads so data is backed up and migrated to new clusters. Review these blogs posts for more information: Kubernetes cluster upgrade: the blue-green deployment strategy Blue/Green or Canary Amazon EKS clusters migration for stateless ArgoCD workloads","title":"Evaluate Blue/Green Clusters as an alternative to in-place cluster upgrades"},{"location":"upgrades/#track-planned-major-changes-in-the-kubernetes-project-think-ahead","text":"Don\u2019t look only at the next version. Review new versions of Kubernetes as they are released, and identify major changes. For example, some applications directly used the docker API, and support for Container Runtime Interface (CRI) for Docker (also known as Dockershim) was removed in Kubernetes 1.24 . This kind of change requires more time to prepare for. Review all documented changes for the version that you\u2019re upgrading to, and note any required upgrade steps. Also, note any requirements or procedures that are specific to Amazon EKS managed clusters. Kubernetes changelog","title":"Track planned major changes in the Kubernetes project \u2014 Think ahead"},{"location":"upgrades/#specific-guidance-on-feature-removals","text":"","title":"Specific Guidance on Feature Removals"},{"location":"upgrades/#removal-of-dockershim-in-125-use-detector-for-docker-socket-dds","text":"The EKS Optimized AMI for 1.25 no longer includes support for Dockershim. If you have a dependency on Dockershim, e.g. you are mounting the Docker socket, you will need to remove those dependencies before upgrading your worker nodes to 1.25. Find instances where you have a dependency on the Docker socket before upgrading to 1.25. We recommend using Detector for Docker Socket (DDS), a kubectl plugin. .","title":"Removal of Dockershim in 1.25 - Use Detector for Docker Socket (DDS)"},{"location":"upgrades/#removal-of-podsecuritypolicy-in-125-migrate-to-pod-security-standards-or-a-policy-as-code-solution","text":"PodSecurityPolicy was deprecated in Kubernetes 1.21 , and has been removed in Kubernetes 1.25. If you are using PodSecurityPolicy in your cluster, then you must migrate to the built-in Kubernetes Pod Security Standards (PSS) or to a policy-as-code solution before upgrading your cluster to version 1.25 to avoid interruptions to your workloads. AWS published a detailed FAQ in the EKS documentation. Review the Pod Security Standards (PSS) and Pod Security Admission (PSA) best practices. Review the PodSecurityPolicy Deprecation blog post on the Kubernetes website.","title":"Removal of PodSecurityPolicy in 1.25 - Migrate to Pod Security Standards or a policy-as-code solution"},{"location":"upgrades/#deprecation-of-in-tree-storage-driver-in-123-migrate-to-container-storage-interface-csi-drivers","text":"The Container Storage Interface (CSI) was designed to help Kubernetes replace its existing, in-tree storage driver mechanisms. The Amazon EBS container storage interface (CSI) migration feature is enabled by default in Amazon EKS 1.23 and later clusters. If you have pods running on a version 1.22 or earlier cluster, then you must install the Amazon EBS CSI driver before updating your cluster to version 1.23 to avoid service interruption. Review the Amazon EBS CSI migration frequently asked questions .","title":"Deprecation of In-Tree Storage Driver in 1.23 - Migrate to Container Storage Interface (CSI) Drivers"},{"location":"upgrades/#additional-resources","text":"","title":"Additional Resources"},{"location":"upgrades/#clowdhaus-eks-upgrade-guidance","text":"ClowdHaus EKS Upgrade Guidance is a CLI to aid in upgrading Amazon EKS clusters. It can analyze a cluster for any potential issues to remediate prior to upgrade.","title":"ClowdHaus EKS Upgrade Guidance"},{"location":"upgrades/#gonogo","text":"GoNoGo is an alpha-stage tool to determine the upgrade confidence of your cluster add-ons.","title":"GoNoGo"},{"location":"upgrades/index.kr/","text":"{'name': 'English', 'build': True} \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ubaa8\ubc94 \uc0ac\ub840 \u00b6 \uc774 \uc548\ub0b4\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c Amazon EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uacc4\ud68d\ud558\uace0 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.\ub610\ud55c \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc, \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9, \uce74\ud39c\ud130 \ub178\ub4dc \ubc0f Fargate \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ubc29\ubc95\ub3c4 \uc124\uba85\ud569\ub2c8\ub2e4.EKS Anywhere, \uc790\uccb4 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4, AWS \uc544\uc6c3\ud3ec\uc2a4\ud2b8 \ub610\ub294 AWS \ub85c\uceec \uc601\uc5ed\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uac1c\uc694 \u00b6 Kubernetes \ubc84\uc804\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ubaa8\ub450 \ud3ec\ud568\ud569\ub2c8\ub2e4.\uc6d0\ud65c\ud55c \uc791\ub3d9\uc744 \uc704\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubaa8\ub450 \ub3d9\uc77c\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804, \uc608: 1.24 \ub97c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \u2014 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc84\uc804\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\uc5d0\uc11c \uc815\uc758\ud569\ub2c8\ub2e4.EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 AWS\uc5d0\uc11c \uc774\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc84\uc804\uc73c\ub85c\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 AWS API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc791\ub429\ub2c8\ub2e4. \ub370\uc774\ud130 \ud50c\ub808\uc778 \u2014 \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubc84\uc804\uc740 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Kubelet \ubc84\uc804\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4.\ub3d9\uc77c\ud55c \ud074\ub7ec\uc2a4\ud130\uc758 \uc5ec\ub7ec \ub178\ub4dc\ub77c\ub3c4 \ubc84\uc804\uc774 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get nodes \uba85\ub839\uc5b4\ub85c \uc788\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uc758 \ubc84\uc804\uc744 \ud655\uc778\ud558\uc138\uc694. \ud074\ub7ec\uc2a4\ud130\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0 \u00b6 Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc740 EKS \ubc0f Kubernetes\ub97c \ucc44\ud0dd\ud560 \ub54c \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc758 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\uc785\ub2c8\ub2e4. \ud2b9\uc815 \uc2dc\uc810 (\ubcf4\ud1b5 1\ub144) \uc774 \uc9c0\ub098\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\ub294 \ubc84\uadf8 \ubc0f CVE \ud328\uce58 \ub9b4\ub9ac\uc2a4\ub97c \uc911\ub2e8\ud569\ub2c8\ub2e4.\ub610\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \ubc84\uc804\uc5d0 \ub300\ud55c CVE \uc81c\ucd9c\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc989, \uc774\uc804 \ubc84\uc804\uc758 Kubernetes\uc5d0\ub9cc \uc788\ub294 \ucde8\uc57d\uc131\uc740 \ubcf4\uace0\uc870\ucc28 \ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc73c\uba70, \ub530\ub77c\uc11c \ucde8\uc57d\uc131 \ubc1c\uc0dd \uc2dc \uc54c\ub9bc \uc5c6\uc774 \ub178\ucd9c\ub418\uac70\ub098 \ud574\uacb0 \uc635\uc158\ub3c4 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc0ac\ub294 \uc774\ub97c EKS \ubc0f \ub2f9\uc0ac \uace0\uac1d\uc774 \ubc1b\uc544\ub4e4\uc77c \uc218 \uc5c6\ub294 \ubcf4\uc548 \ud0dc\uc138\ub85c \uac04\uc8fc\ud558\uc5ec \ucd5c\uc2e0 \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ud604\ud589 \uc815\ucc45\uc744 \uc2dc\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. EKS \ubc84\uc804 \uc9c0\uc6d0 \uc815\ucc45 \uac80\ud1a0 . \uc9c0\uc6d0 \uc885\ub8cc\uc77c \uc774\uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc9c0 \uc54a\uc73c\uba74 \uc9c0\uc6d0\ub418\ub294 \ub2e4\uc74c \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ubc84\uc804 FAQ\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc801\uc808\ud55c \ud14c\uc2a4\ud2b8 \ubc0f \uc900\ube44\uac00 \uc5c6\uc73c\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc640 \ucee8\ud2b8\ub864\ub7ec\uac00 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc758 Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac\ub97c \uc704\ud55c \uc798 \ubb38\uc11c\ud654\ub41c \ud504\ub85c\uc138\uc2a4\ub97c \uac1c\ubc1c\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 \ub7f0\ubd81\uacfc \ub3c4\uad6c\ub97c \ube4c\ub4dc\ud558\uc138\uc694. \ud074\ub7ec\uc2a4\ud130\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uacc4\ud68d\uc744 \uc138\uc6b0\uc138\uc694. EKS Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ub530\ub77c\uc7a1\uc73c\ub824\uba74 \uc801\uc5b4\ub3c4 1\ub144\uc5d0 \ud55c \ubc88 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. EKS \ucd9c\uc2dc \uc77c\uc815 \uac80\ud1a0 \u00b6 EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uce98\ub9b0\ub354 \uac80\ud1a0 \ub97c \ud1b5\ud574 \uc0c8 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\ub294 \uc2dc\uae30\uc640 \ud2b9\uc815 \ubc84\uc804\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc774 \uc885\ub8cc\ub418\ub294 \uc2dc\uae30\ub97c \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.\uc77c\ubc18\uc801\uc73c\ub85c EKS\ub294 \ub9e4\ub144 \uc138 \uac1c\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \ub9b4\ub9ac\uc2a4\ud558\uba70 \uac01 \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \uc57d 14\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ub610\ud55c \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uc815\ubcf4 \ub3c4 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc774 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \uc5b4\ub5bb\uac8c \uc801\uc6a9\ub418\ub294\uc9c0 \uc774\ud574 \u00b6 \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubaa8\ub450\uc5d0 \ub300\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc \uc2dc\uc791 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc2dc\uc791\ud558\uba74 AWS\uac00 \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.Fargate \ud30c\ub4dc \ubc0f [\uae30\ud0c0 \uc560\ub4dc\uc628] \uc744 \ud3ec\ud568\ud55c \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4.(#upgrade -\uc560\ub4dc\uc628 \ubc0f \uad6c\uc131 \uc694\uc18c - kubernetes-api \uc0ac\uc6a9) \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4 \uac00\uc6a9\uc131\uacfc \uc6b4\uc601\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac80\uc99d\ud558\uace0 \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\ub97c \uc778\ud50c\ub808\uc774\uc2a4 \uc5c5\uadf8\ub808\uc774\ub4dc \u00b6 EKS\ub294 \uc778\ud50c\ub808\uc774\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uac00 \uc720\uc9c0\ub418\uace0 \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 (\uc608: API \uc5d4\ub4dc\ud3ec\uc778\ud2b8, OIDC, ENIS, \ub85c\ub4dc \ubc38\ub7f0\uc11c) \uc774 \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ub429\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc0ac\uc6a9\uc790\uc758 \uc5c5\ubb34 \uc911\ub2e8\uc774 \uc904\uc5b4\ub4e4\uace0, \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud558\uac70\ub098 \uc678\ubd80 \ub9ac\uc18c\uc2a4 (\uc608: DNS, \uc2a4\ud1a0\ub9ac\uc9c0) \ub97c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ud544\uc694 \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\uc874 \uc6cc\ud06c\ub85c\ub4dc\uc640 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud560 \ub54c\ub294 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc\ub9cc \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4 (\uc608: 1.24\uc5d0\uc11c 1.25\uae4c\uc9c0). \uc989, \uc5ec\ub7ec \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc77c\ub828\uc758 \uc21c\ucc28\uc801 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\uc21c\ucc28\uc801 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uacc4\ud68d\ud558\ub294 \uac83\uc740 \ub354 \ubcf5\uc7a1\ud558\uba70 \ub2e4\uc6b4\ud0c0\uc784\uc774 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc774 \ub354 \ub192\uc2b5\ub2c8\ub2e4.\uc774 \uc0c1\ud669\uc5d0\uc11c\ub294 \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \ud3c9\uac00\ud558\uc2ed\uc2dc\uc624. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc21c\uc11c\ub300\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub2e4\uc74c \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud569\ub2c8\ub2e4. 1. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc0f EKS \ub9b4\ub9ac\uc2a4 \ub178\ud2b8\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. 2. \ud074\ub7ec\uc2a4\ud130\ub97c \ubc31\uc5c5\ud558\uc2ed\uc2dc\uc624.(\uc120\ud0dd \uc0ac\ud56d) 3. \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uac70\ub098 \uc81c\uac70\ub41c API \uc0ac\uc6a9\uc744 \uc2dd\ubcc4\ud558\uace0 \uc218\uc815\ud558\uc2ed\uc2dc\uc624. 4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c Kubernetes \ubc84\uc804\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. EKS Fargate Profile\uc5d0\uc11c \uc0dd\uc131\ud55c EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f \ub178\ub4dc\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \uac04\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub97c 1\uac1c\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4. 5. AWS \ucf58\uc194 \ub610\ub294 CLI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. 6. \uc560\ub4dc\uc628 \ud638\ud658\uc131\uc744 \uac80\ud1a0\ud558\uc138\uc694. \ud544\uc694\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uacfc \ucee4\uc2a4\ud140 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. 7. kubectl \uc5c5\ub370\uc774\ud2b8\ud558\uae30. 8. \ud074\ub7ec\uc2a4\ud130 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ub41c \ud074\ub7ec\uc2a4\ud130\uc640 \ub3d9\uc77c\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. Upgrade your control plane and data plane in sequence \u00b6 To upgrade a cluster you will need to take the following actions: EKS \uc124\uba85\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc \uccb4\ud06c\ub9ac\uc2a4\ud2b8 \uc0dd\uc131 \u00b6 EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc124\uba85\uc11c \uc5d0\ub294 \uac01 \ubc84\uc804\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ubcc0\uacbd \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\uac01 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ub300\ud55c \uccb4\ud06c\ub9ac\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc2ed\uc2dc\uc624. \ud2b9\uc815 EKS \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68\uc740 \uc124\uba85\uc11c\uc5d0\uc11c \uac01 \ubc84\uc804\uc758 \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d\uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. EKS 1.27 EKS 1.26 EKS 1.25 EKS 1.24 EKS 1.23 EKS 1.22 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ub4dc\uc628 \ubc0f \ucef4\ud3ec\ub10c\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc0ac\uc6a9 \uc911\uc778 Kubernetes \uad6c\uc131 \uc694\uc18c\uc758 \ubc84\uc804\uc744 \uc774\ud574\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uc791\uc131\ud558\uace0 Kubernetes API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uad6c\uc131 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624.\uc5ec\uae30\uc5d0\ub294 \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8, \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec, \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 (\uc608: EBS CSI , EFS CSI ), \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec, \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uae30\ud0c0 \uc6cc\ud06c\ub85c\ub4dc \ub610\ub294 \uc560\ub4dc\uc628\uacfc \uac19\uc740 \uc911\uc694\ud55c \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud301 \uc911\uc694\ud55c \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\ub294 \ub300\uac1c *-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc124\uce58\ub429\ub2c8\ub2e4. kubectl get ns | grep '-system' Kubernetes API\ub97c \uc0ac\uc6a9\ud558\ub294 \uad6c\uc131 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud55c \ud6c4\uc5d0\ub294 \ud574\ub2f9 \uc124\uba85\uc11c\uc5d0\uc11c \ubc84\uc804 \ud638\ud658\uc131 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 \ud638\ud658\uc131\uc5d0 \ub300\ud574\uc11c\ub294 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc9c4\ud589\ud558\uae30 \uc804\uc5d0 \uc77c\ubd80 \uad6c\uc131 \uc694\uc18c\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uac70\ub098 \uad6c\uc131\uc744 \ubcc0\uacbd\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud655\uc778\ud574\uc57c \ud560 \uba87 \uac00\uc9c0 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\ub85c\ub294 CoreDNS , kube-proxy , VPC CNI , \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 Kubernetes API\ub97c \uc0ac\uc6a9\ud558\ub294 \ub9ce\uc740 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud3ec\ud568\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc73c\uba70 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec, \uc9c0\uc18d\uc801 \uc804\ub2ec \uc2dc\uc2a4\ud15c, \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc \uae30\ub2a5\uc5d0 \ud544\uc694\ud569\ub2c8\ub2e4.EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c\ub294 \uc560\ub4dc\uc628\uacfc \ud0c0\uc0ac \ub3c4\uad6c\ub3c4 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc5ec \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 \uc560\ub4dc\uc628\uc758 \ub2e4\uc74c \uc608\uc640 \uad00\ub828 \uc5c5\uadf8\ub808\uc774\ub4dc \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon VPC CNI: \uac01 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc5d0 \ub300\ud55c Amazon VPC CNI \uc560\ub4dc\uc628\uc758 \uad8c\uc7a5 \ubc84\uc804\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc6a9 Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc124\uce58\ud55c \uacbd\uc6b0 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kube-proxy: \ucfe0\ubc84\ub124\ud2f0\uc2a4 kube-proxy \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. CoreDNS: CoreDNS \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. AWS Load Balancer Controller: AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\ub294 \ubc30\ud3ec\ud55c EKS \ubc84\uc804\uacfc \ud638\ud658\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc124\uce58 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ube14\ub85d \uc2a4\ud1a0\uc5b4 (\uc544\ub9c8\uc874 EBS) \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uc544\ub9c8\uc874 EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc544\ub9c8\uc874 EBS CSI \ub4dc\ub77c\uc774\ubc84 \uad00\ub9ac \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ud30c\uc77c \uc2dc\uc2a4\ud15c (Amazon EFS) \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uc544\ub9c8\uc874 EFS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84: \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 GitHub\uc758 \uba54\ud2b8\ub9ad\uc2a4-\uc11c\ubc84 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec: Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc84\uc804\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ubc30\ud3ec \uc2dc \uc774\ubbf8\uc9c0 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc640 \ubc00\uc811\ud558\uac8c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c\ub294 \ud56d\uc0c1 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. GitHub \ub9b4\ub9ac\uc2a4 \ub97c \uac80\ud1a0\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ud574\ub2f9\ud558\ub294 \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4\uc758 \uc8fc\uc18c\ub97c \ucc3e\uc73c\uc2ed\uc2dc\uc624. \uce74\ud39c\ud130: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uce74\ud39c\ud130 \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\uc5d0 \uae30\ubcf8 EKS \uc694\uad6c \uc0ac\ud56d \ud655\uc778 \u00b6 AWS\uc5d0\uc11c \uc5c5\uadf8\ub808\uc774\ub4dc \ud504\ub85c\uc138\uc2a4\ub97c \uc644\ub8cc\ud558\ub824\uba74 \uacc4\uc815\uc5d0 \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0\ub294 \ub2e4\uc74c \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. 1.\uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 Amazon EKS\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ud544\uc694\ud569\ub2c8\ub2e4. 2.EKS IAM \uc5ed\ud560: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 IAM \uc5ed\ud560\uc740 \ud544\uc694\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uacc4\uc815\uc5d0 \uacc4\uc18d \uc874\uc7ac\ud569\ub2c8\ub2e4. 3.EKS \ubcf4\uc548 \uadf8\ub8f9: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uae30\ubcf8 \ubcf4\uc548 \uadf8\ub8f9\uc740 \ud544\uc694\ud55c \uc561\uc138\uc2a4 \uaddc\uce59\uc774 \uc788\ub294 \uacc4\uc815\uc5d0\uc11c \uacc4\uc18d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 4.\ud074\ub7ec\uc2a4\ud130\uc5d0 \ube44\ubc00 \uc554\ud638\ud654\uac00 \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130 IAM \uc5ed\ud560\uc5d0 AWS KMS (AWS \ud0a4 \uad00\ub9ac \uc11c\ube44\uc2a4) \ud0a4\ub97c \uc0ac\uc6a9\ud560 \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \ud655\uc778 \u00b6 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 Amazon EKS\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ud544\uc694\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \uc11c\ube0c\ub137\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c IP \uc8fc\uc18c\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> aws ec2 describe-subnets --subnet-ids \\ $(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.resourcesVpcConfig.subnetIds' \\ --output text) \\ --query 'Subnets[*].[SubnetId,AvailabilityZone,AvailableIpAddressCount]' \\ --output table ---------------------------------------------------- | DescribeSubnets | +---------------------------+--------------+-------+ | subnet-067fa8ee8476abbd6 | us-east-1a | 8184 | | subnet-0056f7403b17d2b43 | us-east-1b | 8153 | | subnet-09586f8fb3addbc8c | us-east-1a | 8120 | | subnet-047f3d276a22c6bce | us-east-1b | 8184 | +---------------------------+--------------+-------+ VPC CNI \uc9c0\ud45c \ub3c4\uc6b0\ubbf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec VPC \uc9c0\ud45c\uc5d0 \ub300\ud55c CloudWatch \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS IAM \uc5ed\ud560 \ud655\uc778 \u00b6 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uace0 \uacc4\uc815\uc5d0 \uc62c\ubc14\ub978 \uc5ed\ud560 \uc218\uc784 \uc815\ucc45\uc774 \uc801\uc6a9\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> ROLE_ARN=$(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.roleArn' --output text) aws iam get-role --role-name ${ROLE_ARN##*/} \\ --query 'Role.AssumeRolePolicyDocument' { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"eks.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] } EKS \ubcf4\uc548 \uadf8\ub8f9 \ud655\uc778 \u00b6 \uacc4\uc815\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> aws ec2 describe-security-groups \\ --group-ids $(aws eks describe-cluster \\ --query 'cluster.resourcesVpcConfig.securityGroupIds[*]' \\ --name ${CLUSTER} --output text) { \"SecurityGroups\": [ { \"Description\": \"Communication between the control plane and worker nodegroups\", \"GroupName\": \"eksctl-prefix-cluster-ControlPlaneSecurityGroup-HFO1JTSFWL1J\", \ub2e4\uc74c\uacfc \uac19\uc740 \ucd9c\ub825\uc774 \ud45c\uc2dc\ub418\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 \uacc4\uc815\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub2e4\uc2dc \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. An error occurred (InvalidGroupId.Malformed) when calling the DescribeSecurityGroups operation: Invalid id: \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc5c6\ub294 \uacbd\uc6b0 Amazon EKS \ubcf4\uc548 \uadf8\ub8f9 \uc694\uad6c \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d \uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. eks-cluster-sg-my-cluster-uniqueID \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc0ad\uc81c\ub41c \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \u00b6 Amazon EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc6a9 Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778, kube-proxy , CoreDNS\uc640 \uac19\uc740 \uc560\ub4dc\uc628\uc744 \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc124\uce58\ud569\ub2c8\ub2e4.\uc560\ub4dc\uc628\uc740 \uc790\uccb4 \uad00\ub9ac\ud615\uc774\uac70\ub098 Amazon EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Amazon EKS \uc560\ub4dc\uc628\uc740 EKS API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ub4dc\uc628\uc744 \uad00\ub9ac\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc785\ub2c8\ub2e4. Amazon EKS \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e8\uc77c \uba85\ub839\uc73c\ub85c \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. aws eks update-addon \u2014cluster-name my-cluster \u2014addon-name vpc-cni \u2014addon-version version-number \\ --service-account-role-arn arn:aws:iam::111122223333:role/role-name \u2014configuration-values '{}' \u2014resolve-conflicts PRESERVE EKS \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \ub2e4\uc74c\uc758 \uba85\ub839\uc5b4\ub85c \ud655\uc778\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws eks list-addons --cluster-name <cluster name> Warning EKS Add-on\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc \uc911\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.EKS \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8\ub97c \uc2dc\uc791\ud558\uace0 \uc6d0\ud558\ub294 \ubc84\uc804\uc744 \uc120\ud0dd\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ubc84\uc804 \uc911\uc5d0\uc11c \ud638\ud658\ub418\ub294 \ubc84\uc804\uc744 \uc120\ud0dd\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc560\ub4dc\uc628 \ubc84\uc804 \ud638\ud658\uc131 \uc9c0\uce68 \uac80\ud1a0 Amazon EKS \ucd94\uac00 \uae30\ub2a5\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS Add-on\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c \ubc0f \uc2dc\uc791 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. EKS Add-on\uc5d0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uad6c\uc131\uc744 \uc81c\uacf5\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc81c\uac70\ub41c API \uc0ac\uc6a9\uc744 \uc2dd\ubcc4\ud558\uace0 \uc218\uc815\ud558\uae30 \u00b6 EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc81c\uac70\ub41c API\uc758 API \uc0ac\uc6a9\uc744 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc2e4\ud589 \uc911\uc778 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 \uc815\uc801\uc73c\ub85c \ub80c\ub354\ub9c1\ub41c Kubernetes \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc815\uc801 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub300\uc0c1\uc73c\ub85c \uac80\uc0ac\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \ub354 \uc815\ud655\ud569\ub2c8\ub2e4. \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uc0c1\uc73c\ub85c \uc2e4\ud589\ud558\uba74 \uc774\ub7ec\ud55c \ub3c4\uad6c\uac00 \uc624\ud0d0\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uac00 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud574\uc11c API\uac00 \uc81c\uac70\ub41c \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc9c0\uc6d0 \uc911\ub2e8 \uc815\ucc45 \uc744 \ud655\uc778\ud558\uc5ec API \uc81c\uac70\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc774\ud574\ud574\uc57c \ud569\ub2c8\ub2e4. \ud050\ube0c-\ub178-\ud2b8\ub7ec\ube14(Kube-no-Trouble) \u00b6 Kube-no-Trouble \uc740 kubent \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ucee4\ub9e8\ub4dc \ub77c\uc778 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4.\uc778\uc218 \uc5c6\uc774 `kubent'\ub97c \uc2e4\ud589\ud558\uba74 \ud604\uc7ac KubeConfig \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\uace0 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uace0 \uc81c\uac70\ub420 API\uac00 \ud3ec\ud568\ub41c \ubcf4\uace0\uc11c\ub97c \uc778\uc1c4\ud569\ub2c8\ub2e4 kubent 4:17PM INF >>> Kube No Trouble `kubent` <<< 4:17PM INF version 0.7.0 (git sha d1bb4e5fd6550b533b2013671aa8419d923ee042) 4:17PM INF Initializing collectors and retrieving data 4:17PM INF Target K8s version is 1.24.8-eks-ffeb93d 4:l INF Retrieved 93 resources from collector name=Cluster 4:17PM INF Retrieved 16 resources from collector name=\"Helm v3\" 4:17PM INF Loaded ruleset name=custom.rego.tmpl 4:17PM INF Loaded ruleset name=deprecated-1-16.rego 4:17PM INF Loaded ruleset name=deprecated-1-22.rego 4:17PM INF Loaded ruleset name=deprecated-1-25.rego 4:17PM INF Loaded ruleset name=deprecated-1-26.rego 4:17PM INF Loaded ruleset name=deprecated-future.rego __________________________________________________________________________________________ >>> Deprecated APIs removed in 1.25 <<< ------------------------------------------------------------------------------------------ KIND NAMESPACE NAME API_VERSION REPLACE_WITH (SINCE) PodSecurityPolicy <undefined> eks.privileged policy/v1beta1 <removed> (1.21.0) \uc815\uc801 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c \ubc0f helm \ud328\ud0a4\uc9c0\ub97c \uc2a4\uce94\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud558\ub824\uba74 \uc9c0\uc18d\uc801 \ud1b5\ud569 (CI) \ud504\ub85c\uc138\uc2a4\uc758 \uc77c\ubd80\ub85c kubent \ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\ub610\ud55c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc2a4\uce94\ud558\ub294 \uac83\uc774 \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc815\ud655\ud569\ub2c8\ub2e4. Kube-no-Trouble\uc740 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\uae30 \uc704\ud55c \uc801\uc808\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uc0d8\ud50c \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \uc5ed\ud560 \uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \ud480\ub8e8\ud1a0(pluto) \u00b6 \ub610 \ub2e4\ub978 \uc635\uc158\uc740 pluto \uc778\ub370, \uc774\ub294 \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130, \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c, \ud5ec\ub984 \ucc28\ud2b8 \uc2a4\uce94\uc744 \uc9c0\uc6d0\ud558\uace0 CI \ud504\ub85c\uc138\uc2a4\uc5d0 \ud3ec\ud568\ud560 \uc218 \uc788\ub294 GitHub Action\uc774 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c kubent \uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. pluto detect-all-in-cluster NAME KIND VERSION REPLACEMENT REMOVED DEPRECATED REPL AVAIL eks.privileged PodSecurityPolicy policy/v1beta1 false true true \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ud06c\ub85c\ub4dc \uc5c5\ub370\uc774\ud2b8kubectl-convert\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8. \u00b6 \uc5c5\ub370\uc774\ud2b8\uac00 \ud544\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\uc640 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc2dd\ubcc4\ud55c \ud6c4\uc5d0\ub294 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc758 \ub9ac\uc18c\uc2a4 \uc720\ud615\uc744 \ubcc0\uacbd\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\ud3f4\ub9ac\uc2dc\ub97c \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\uc2a4\ud0e0\ub2e4\ub4dc\ub85c).\uc774\ub97c \uc704\ud574\uc11c\ub294 \ub9ac\uc18c\uc2a4 \uc0ac\uc591\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uad50\uccb4\ud560 \ub9ac\uc18c\uc2a4\uc5d0 \ub530\ub978 \ucd94\uac00 \uc870\uc0ac\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc720\ud615\uc740 \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\uc9c0\ub9cc API \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud558\ub294 \uacbd\uc6b0, kubectl-convert \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc804 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c apps/v1 \uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uacbd\uc6b0\ub97c \uc608\ub85c \ub4e4 \uc218 \uc788\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6f9 \uc0ac\uc774\ud2b8\uc758 kubectl convert \ud50c\ub7ec\uadf8\uc778 \uc124\uce58 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. kubectl-convert -f <file> --output-version <group>/<version> \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\ub294 \ub3d9\uc548 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub3c4\ub85d PodDisruptionBudget \ubc0f \ud1a0\ud3f4\ub85c\uc9c0 \uc2a4\ud504\ub808\ub4dc \uc81c\uc57d \uc870\uac74\uc744 \uad6c\uc131. \u00b6 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\ub294 \ub3d9\uc548 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc808\ud55c PodDisruptionBudget(\ud30c\ub4dc\ub514\uc2a4\ub7fd\uc158 \uc608\uc0b0) \ubc0f [\ud1a0\ud3f4\ub85c\uc9c0 \uc2a4\ud504\ub808\ub4dc \uc81c\uc57d \uc870\uac74] (https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints) \uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub3d9\uc77c\ud55c \uc218\uc900\uc758 \uac00\uc6a9\uc131\uc774 \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\ubbc0\ub85c \uc6cc\ud06c\ub85c\ub4dc\uc758 \uaddc\ubaa8\uc640 \uc694\uad6c \uc0ac\ud56d\uc744 \uac80\uc99d\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\uace0 \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubd84\uc0b0\ub41c \uc5ec\ub7ec \ud638\uc2a4\ud2b8\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uba74 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ubb38\uc81c \uc5c6\uc774 \uc0c8 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc73c\ub85c \uc790\ub3d9 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ub420 \uac83\uc774\ub77c\ub294 \uc2e0\ub8b0\ub3c4\uac00 \ub192\uc544\uc9d1\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ud56d\uc0c1 80% \uc758 \ubcf5\uc81c\ubcf8\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uace0 \uc5ec\ub7ec \uc601\uc5ed\uacfc \ud638\uc2a4\ud2b8\uc5d0 \uac78\uccd0 \ubcf5\uc81c\ubcf8\uc744 \ubd84\uc0b0\uc2dc\ud0a4\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc608\uc785\ub2c8\ub2e4. apiVersion: policy/v1 kind: PodDisruptionBudget metadata: name: myapp spec: minAvailable: \"80%\" selector: matchLabels: app: myapp --- apiVersion: apps/v1 kind: Deployment metadata: name: myapp spec: replicas: 10 selector: matchLabels: app: myapp template: metadata: labels: app: myapp spec: containers: - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2 name: myapp resources: requests: cpu: \"1\" memory: 256M topologySpreadConstraints: - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: kubernetes.io/hostname whenUnsatisfiable: DoNotSchedule - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: topology.kubernetes.io/zone whenUnsatisfiable: DoNotSchedule AWS Resilience Hub \ub294 \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 (Amazon EKS) \ub97c \uc9c0\uc6d0 \ub9ac\uc18c\uc2a4\ub85c \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. Resilience Hub\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubcf5\uc6d0\ub825\uc744 \uc815\uc758, \uac80\uc99d \ubc0f \ucd94\uc801\ud560 \uc218 \uc788\ub294 \ub2e8\uc77c \uc7a5\uc18c\ub97c \uc81c\uacf5\ud558\ubbc0\ub85c \uc18c\ud504\ud2b8\uc6e8\uc5b4, \uc778\ud504\ub77c \ub610\ub294 \uc6b4\uc601 \uc911\ub2e8\uc73c\ub85c \uc778\ud55c \ubd88\ud544\uc694\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac04\uc18c\ud654. \u00b6 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc Karpenter\ub294 \ubaa8\ub450 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ub2e8\uc21c\ud654\ud558\uc9c0\ub9cc \uc811\uadfc \ubc29\uc2dd\uc740 \ub2e4\ub985\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \ub178\ub4dc\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \ub77c\uc774\ud504\uc0ac\uc774\ud074 \uad00\ub9ac\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4.\uc989, \ud55c \ubc88\uc758 \uc791\uc5c5\uc73c\ub85c \ub178\ub4dc\ub97c \uc0dd\uc131, \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\uc131\uc5d0\uc11c Karpenter\ub294 \ud638\ud658\ub418\ub294 \ucd5c\uc2e0 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. EKS\uac00 \uc5c5\ub370\uc774\ud2b8\ub41c EKS \ucd5c\uc801\ud654 AMI\ub97c \ucd9c\uc2dc\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130\uac00 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uba74 Karpenter\ub294 \uc790\ub3d9\uc73c\ub85c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. Karpenter\ub294 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \ub178\ub4dc \ub9cc\ub8cc\ub3c4 \uad6c\ud604\ud569\ub2c8\ub2e4. Karpenter\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Karpenter\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 kubelet \ubc84\uc804\uc5d0 \ub300\ud55c \ucc45\uc784\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc788\uc2b5\ub2c8\ub2e4. \ub178\ub4dc\uc758 \ubc84\uc804 \uc2a4\ud050\ub97c \ucd94\uc801\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc774 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c \ubc84\uc804\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778 \u00b6 \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud504\ub85c\uc81d\ud2b8 \ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 (\ud2b9\ud788 API \uc11c\ubc84\uc640 kubelet) \uc0ac\uc774\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub97c 2\uac1c \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4.EKS \ubc84\uc804\uc774 1.25\uc778 \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \uc624\ub798\ub41c kubelet\uc740 1.23\uc785\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ucc28\uc774\ub294 EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc EKS Fargate \ud504\ub85c\ud30c\uc77c\ub85c \uc0dd\uc131\ud55c \ub178\ub4dc\ub9c8\ub2e4 \ub2e4\ub985\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \uac04\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub294 1\uac1c\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4 (\uc608: EKS 1.25, 1.24 kubelet) \uce74\ud39c\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 \ub178\ub4dc \ub9cc\ub8cc \ud65c\uc131\ud654 \u00b6 Karpenter\uac00 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad6c\ud604\ud558\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ub178\ub4dc \ub9cc\ub8cc\ub77c\ub294 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ud544\uc694\ud55c \uacc4\ud68d\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4.\ud504\ub85c\ube44\uc800\ub108\uc5d0\uc11c ttlSecondsUntilExpired \uc758 \uac12\uc744 \uc124\uc815\ud558\uba74 \ub178\ub4dc \ub9cc\ub8cc\uac00 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.\ub178\ub4dc\uac00 \uba87 \ucd08 \ub9cc\uc5d0 \uc815\uc758\ub41c \uc5f0\ub839\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ub178\ub4dc\uac00 \uc548\uc804\ud558\uac8c \ube44\uc6cc\uc9c0\uace0 \uc0ad\uc81c\ub429\ub2c8\ub2e4.\uc774\ub294 \uc0ac\uc6a9 \uc911\uc778 \uacbd\uc6b0\uc5d0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc774\ubbc0\ub85c \ub178\ub4dc\ub97c \uc0c8\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc5c5\uadf8\ub808\uc774\ub4dc\ub41c \uc778\uc2a4\ud134\uc2a4\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub178\ub4dc\uac00 \uad50\uccb4\ub418\uba74 Karpenter\ub294 EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc6f9 \uc0ac\uc774\ud2b8\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Karpenter\ub294 \uc774 \uac12\uc5d0 \uc9c0\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uacfc\ub3c4\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 Kubernetes \uc124\uba85\uc11c\uc5d0 \ub098\uc640 \uc788\ub294 \ub300\ub85c \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 \uc744 \uc815\uc758\ud558\uc2ed\uc2dc\uc624. \ud504\ub85c\ube44\uc800\ub108\uc5d0\uc11c ttlSecondsUntilExpired \uac12\uc744 \uc124\uc815\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \ud504\ub85c\ube44\uc800\ub108\uc640 \uc5f0\uacb0\ub41c \uae30\uc874 \ub178\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4. \uce74\ud39c\ud130 \uad00\ub9ac \ub178\ub4dc\uc5d0 \ub4dc\ub9ac\ud504\ud2b8 \uae30\ub2a5 \uc0ac\uc6a9 \u00b6 \uce74\ud39c\ud130's Drift \uae30\ub2a5 \uc740 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc5ec EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uae30\ud654 \uc0c1\ud0dc\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uce74\ud39c\ud130 \ub4dc\ub9ac\ud504\ud2b8\ub294 \ud604\uc7ac \uae30\ub2a5 \uac8c\uc774\ud2b8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.Karpenter\uc758 \uae30\ubcf8 \uad6c\uc131\uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c \uba54\uc774\uc800 \ubc0f \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc644\ub8cc\ub418\uba74 Karpenter\uc758 Drift \uae30\ub2a5\uc740 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\uac00 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc6a9 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc74c\uc744 \uac10\uc9c0\ud558\uace0 \ud574\ub2f9 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc5f0\uacb0, \ub4dc\ub808\uc778 \ubc0f \uad50\uccb4\ud569\ub2c8\ub2e4.\uc0c8 \ub178\ub4dc\ub85c \uc774\ub3d9\ud558\ub294 \ud30c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc801\uc808\ud55c \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc124\uc815\ud558\uace0 \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub530\ub974\uc138\uc694.Karpenter\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c\ub294 \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uae30\ubc18\uc73c\ub85c \ub300\uccb4 \ub178\ub4dc\ub97c \ubbf8\ub9ac \uac00\ub3d9\ud558\uace0 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ucde8\uc18c\ud560 \ub54c PDB\ub97c \uc874\uc911\ud569\ub2c8\ub2e4. eksctl\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc790\ub3d9\ud654 \u00b6 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc0ac\uc6a9\uc790 \uacc4\uc815\uc5d0 \ubc30\ud3ec\ub418\uace0 EKS \uc11c\ube44\uc2a4 \uc678\ubd80\uc758 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc5f0\uacb0\ub41c EC2 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4.\uc774\ub4e4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc77c\uc885\uc758 \uc790\ub3d9\ud654 \ub3c4\uad6c\ub97c \ud1b5\ud574 \ubc30\ud3ec\ub418\uace0 \uad00\ub9ac\ub429\ub2c8\ub2e4.\uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub3c4\uad6c \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 eksctl\uc740 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uc0ad\uc81c \ubc0f \ub4dc\ub808\uc774\ub2dd \uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \ub3c4\uad6c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. eksctl kOps EKS Blueprints \uc5c5\uadf8\ub808\uc774\ub4dc \uc804 \ud074\ub7ec\uc2a4\ud130 \ubc31\uc5c5 \u00b6 \uc0c8 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud06c\uac8c \ubcc0\uacbd\ud569\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4\uc5d0\ub294 \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Velero \ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ub3c4\uad6c\ub85c, \uae30\uc874 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc31\uc5c5\ud558\uace0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc31\uc5c5\uc744 \uc801\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 Kubernetes \ubc84\uc804\uc5d0\uc11c\ub9cc \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130\uac00 \ud604\uc7ac \uc2e4\ud589 \uc911\uc778 \ubc84\uc804\uc774 \uacc4\uc18d \uc9c0\uc6d0\ub418\uace0 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc2e4\ud328\ud560 \uacbd\uc6b0 \uc6d0\ub798 \ubc84\uc804\uc73c\ub85c \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ubcf5\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c IAM\uc744 \ud3ec\ud568\ud55c AWS \ub9ac\uc18c\uc2a4\ub294 Velero\uc758 \ubc31\uc5c5\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\ub294 \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4 Fargate \ubc30\ud3ec\ub97c \ub2e4\uc2dc \uc2dc\uc791. \u00b6 Fargate \ub370\uc774\ud130 \ud50c\ub808\uc778 \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ud30c\ub4dc\ub97c -o wide \uc635\uc158\uc73c\ub85c \ub098\uc5f4\ud558\uc5ec \ud30c\uac8c\uc774\ud2b8 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.'fargate-'\ub85c \uc2dc\uc791\ud558\ub294 \ubaa8\ub4e0 \ub178\ub4dc \uc774\ub984\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc7ac\ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \uc778\ud50c\ub808\uc774\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc758 \ub300\uc548\uc73c\ub85c \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \ud3c9\uac00 \u00b6 \uc77c\ubd80 \uace0\uac1d\uc740 \ube14\ub8e8/\uadf8\ub9b0 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uc120\ud638\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \uc774\uc810\uc774 \uc788\uc744 \uc218 \uc788\uc9c0\ub9cc \uace0\ub824\ud574\uc57c \ud560 \ub2e8\uc810\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud61c\ud0dd\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec EKS \ubc84\uc804\uc744 \ud55c \ubc88\uc5d0 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: 1.23\uc5d0\uc11c 1.25). \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\ub85c \ub2e4\uc2dc \uc804\ud658 \uac00\ub2a5 \ucd5c\uc2e0 \uc2dc\uc2a4\ud15c (\uc608: terraform) \uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub97c \uac1c\ubcc4\uc801\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \ub2e8\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc18c\ube44\uc790 \uc5c5\ub370\uc774\ud2b8\uac00 \ud544\uc694\ud55c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubc0f OIDC \ubcc0\uacbd (\uc608: kubectl \ubc0f CI/CD) \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911\uc5d0 2\uac1c\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud574\uc57c \ud558\ubbc0\ub85c \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc9c0\uc5ed \uc6a9\ub7c9\uc774 \uc81c\ud55c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc11c\ub85c \uc885\uc18d\ub418\uc5b4 \ud568\uaed8 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ub418\ub294 \uacbd\uc6b0 \ub354 \ub9ce\uc740 \uc870\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uc678\ubd80 DNS\ub294 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc27d\uac8c \ubd84\uc0b0\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc740 \uac00\ub2a5\ud558\uc9c0\ub9cc \uc778\ud50c\ub808\uc774\uc2a4 \uc5c5\uadf8\ub808\uc774\ub4dc\ubcf4\ub2e4 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc870\uc815 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc5d0 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\uc0c1\ud669\uc5d0 \ub530\ub77c \ud544\uc694\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc2e0\uc911\ud558\uac8c \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4. \ub192\uc740 \uc218\uc900\uc758 \uc790\ub3d9\ud654\uc640 GitOps\uc640 \uac19\uc740 \uc120\uc5b8\ud615 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uba74 \uc774 \uc791\uc5c5\uc744 \ub354 \uc27d\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub370\uc774\ud130\ub97c \ubc31\uc5c5\ud558\uace0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub824\uba74 \uc0c1\ud0dc \uc800\uc7a5 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\ubc29 \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc744 \uac80\ud1a0\ud558\uc138\uc694. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc: \ube14\ub8e8-\uadf8\ub9b0 \ubc30\ud3ec \uc804\ub7b5 \uc2a4\ud14c\uc774\ud2b8\ub9ac\uc2a4 ArgoCD \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud55c \ube14\ub8e8/\uadf8\ub9b0 \ub610\ub294 \uce74\ub098\ub9ac\uc544 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \ub9c8\uc774\uadf8\ub808\uc774\uc158 Kubernetes \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uacc4\ud68d\ub41c \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d \ucd94\uc801 \u2014 \ubbf8\ub9ac \uc0dd\uac01\ud574 \ubcf4\uc138\uc694 \u00b6 \ub2e4\uc74c \ubc84\uc804\ub9cc \ubc14\ub77c\ubcf4\uc9c0 \ub9c8\uc138\uc694. Kubernetes\uc758 \uc0c8 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uba74 \uc774\ub97c \uac80\ud1a0\ud558\uace0 \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4, \uc77c\ubd80 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ub3c4\ucee4 API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud588\uace0, \ub3c4\ucee4\uc6a9 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uc778\ud130\ud398\uc774\uc2a4 (CRI) (Dockershim\uc774\ub77c\uace0\ub3c4 \ud568) \uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.24 \uc5d0\uc11c \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uc885\ub958\uc758 \ubcc0\ud654\uc5d0\ub294 \ub300\ube44\ud558\ub294 \ub370 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \ubc84\uc804\uc5d0 \ub300\ud574 \ubb38\uc11c\ud654\ub41c \ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uac80\ud1a0\ud558\uace0 \ud544\uc694\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc \ub2e8\uacc4\ub97c \uae30\ub85d\ud574 \ub450\uc2ed\uc2dc\uc624.\ub610\ud55c Amazon EKS \uad00\ub9ac\ud615 \ud074\ub7ec\uc2a4\ud130\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc694\uad6c \uc0ac\ud56d \ub610\ub294 \uc808\ucc28\ub97c \uae30\ub85d\ud574 \ub450\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubcc0\uacbd \ub85c\uadf8 \uae30\ub2a5 \uc81c\uac70\uc5d0 \ub300\ud55c \uad6c\uccb4\uc801\uc778 \uc9c0\uce68 \u00b6 1.25\uc5d0\uc11c Dockershim \uc81c\uac70 - Docker Socket(DDS) \uc6a9 \uac80\ucd9c\uae30 \uc0ac\uc6a9 \u00b6 1.25\uc6a9 EKS \ucd5c\uc801\ud654 AMI\uc5d0\ub294 \ub354 \uc774\uc0c1 \ub3c4\ucee4\uc2ec\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.Dockershim\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc774 \uc788\ub294 \uacbd\uc6b0 (\uc608: Docker \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\ub294 \uacbd\uc6b0) \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc774\ub7ec\ud55c \uc885\uc18d\uc131\uc744 \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 Docker \uc18c\ucf13\uc5d0 \uc885\uc18d \uad00\uacc4\uac00 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.kubectl \ud50c\ub7ec\uadf8\uc778\uc778 \ub3c4\ucee4 \uc18c\ucf13\uc6a9 \ub514\ud14d\ud130 (DDS) \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. Removal of PodSecurityPolicy in 1.25 - Migrate to Pod Security Standards or a policy-as-code solution \u00b6 1.25\uc5d0\uc11c \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\ud3f4\ub9ac\uc2dc \uc81c\uac70 - \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 \ub610\ub294 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \u00b6 PodSecurityPolicy \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.21\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc74c \uc774 \ub418\uc5c8\uace0, \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.25\uc5d0\uc11c\ub294 \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c PodSecurityPolicy\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc6cc\ud06c\ub85c\ub4dc \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \ub0b4\uc7a5\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 (PSS) \ub610\ub294 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud574\uc57c \ud569\ub2c8\ub2e4. AWS\ub294 EKS \uc124\uba85\uc11c\uc5d0 \uc790\uc138\ud55c FAQ \ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 (PSS) \ubc0f \ud30c\ub4dc \ubcf4\uc548 \uc2b9\uc778 (PSA) \ubaa8\ubc94 \uc0ac\ub840\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. 1.23\uc5d0\uc11c \uc778\ud2b8\ub9ac \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \uc9c0\uc6d0 \uc911\ub2e8 - \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158 \u00b6 \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub294 Kubernetes\uac00 \uae30\uc874\uc758 \uc778\ud2b8\ub9ac \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \uba54\ucee4\ub2c8\uc998\uc744 \ub300\uccb4\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4.Amazon EBS \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uae30\ub2a5\uc740 Amazon EKS 1.23 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uac00 \ubc84\uc804 1.22 \ub610\ub294 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0, \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.23 \uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 Amazon EBS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon EBS CSI \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc790\uc8fc \ubb3b\ub294 \uc9c8\ubb38 \uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. \ucd94\uac00 \ub9ac\uc18c\uc2a4 \u00b6 ClowdHaus EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68 \u00b6 ClowdHaus EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68 \uc740 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 CLI\uc785\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \ubd84\uc11d\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\uc5d0 \ud574\uacb0\ud574\uc57c \ud560 \uc7a0\uc7ac\uc801 \ubb38\uc81c\ub97c \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4. GoNoGo \u00b6 GoNoGo \ub294 \ud074\ub7ec\uc2a4\ud130 \uc560\ub4dc\uc628\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc \uc2e0\ub8b0\ub3c4\ub97c \uacb0\uc815\ud558\ub294 \uc54c\ud30c \ub2e8\uacc4 \ub3c4\uad6c\uc785\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ubaa8\ubc94 \uc0ac\ub840"},{"location":"upgrades/index.kr/#_1","text":"\uc774 \uc548\ub0b4\uc11c\ub294 \ud074\ub7ec\uc2a4\ud130 \uad00\ub9ac\uc790\uc5d0\uac8c Amazon EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uacc4\ud68d\ud558\uace0 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\uc5ec\uc90d\ub2c8\ub2e4.\ub610\ud55c \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc, \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9, \uce74\ud39c\ud130 \ub178\ub4dc \ubc0f Fargate \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ubc29\ubc95\ub3c4 \uc124\uba85\ud569\ub2c8\ub2e4.EKS Anywhere, \uc790\uccb4 \uad00\ub9ac\ud615 \ucfe0\ubc84\ub124\ud2f0\uc2a4, AWS \uc544\uc6c3\ud3ec\uc2a4\ud2b8 \ub610\ub294 AWS \ub85c\uceec \uc601\uc5ed\uc5d0 \ub300\ud55c \uc9c0\uce68\uc740 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","title":"\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ubaa8\ubc94 \uc0ac\ub840"},{"location":"upgrades/index.kr/#_2","text":"Kubernetes \ubc84\uc804\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ubaa8\ub450 \ud3ec\ud568\ud569\ub2c8\ub2e4.\uc6d0\ud65c\ud55c \uc791\ub3d9\uc744 \uc704\ud574 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubaa8\ub450 \ub3d9\uc77c\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804, \uc608: 1.24 \ub97c \uc2e4\ud589\ud574\uc57c \ud569\ub2c8\ub2e4. \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \u2014 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc84\uc804\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 API \uc11c\ubc84\uc5d0\uc11c \uc815\uc758\ud569\ub2c8\ub2e4.EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c\ub294 AWS\uc5d0\uc11c \uc774\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \ubc84\uc804\uc73c\ub85c\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 AWS API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc2dc\uc791\ub429\ub2c8\ub2e4. \ub370\uc774\ud130 \ud50c\ub808\uc778 \u2014 \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubc84\uc804\uc740 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Kubelet \ubc84\uc804\uc744 \ucc38\uc870\ud569\ub2c8\ub2e4.\ub3d9\uc77c\ud55c \ud074\ub7ec\uc2a4\ud130\uc758 \uc5ec\ub7ec \ub178\ub4dc\ub77c\ub3c4 \ubc84\uc804\uc774 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4. kubectl get nodes \uba85\ub839\uc5b4\ub85c \uc788\ub294 \ubaa8\ub4e0 \ub178\ub4dc\uc758 \ubc84\uc804\uc744 \ud655\uc778\ud558\uc138\uc694.","title":"\uac1c\uc694"},{"location":"upgrades/index.kr/#_3","text":"Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc740 EKS \ubc0f Kubernetes\ub97c \ucc44\ud0dd\ud560 \ub54c \uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc758 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\uc785\ub2c8\ub2e4. \ud2b9\uc815 \uc2dc\uc810 (\ubcf4\ud1b5 1\ub144) \uc774 \uc9c0\ub098\uba74 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ucee4\ubba4\ub2c8\ud2f0\ub294 \ubc84\uadf8 \ubc0f CVE \ud328\uce58 \ub9b4\ub9ac\uc2a4\ub97c \uc911\ub2e8\ud569\ub2c8\ub2e4.\ub610\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub294 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294 \ubc84\uc804\uc5d0 \ub300\ud55c CVE \uc81c\ucd9c\uc744 \uad8c\uc7a5\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc989, \uc774\uc804 \ubc84\uc804\uc758 Kubernetes\uc5d0\ub9cc \uc788\ub294 \ucde8\uc57d\uc131\uc740 \ubcf4\uace0\uc870\ucc28 \ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc73c\uba70, \ub530\ub77c\uc11c \ucde8\uc57d\uc131 \ubc1c\uc0dd \uc2dc \uc54c\ub9bc \uc5c6\uc774 \ub178\ucd9c\ub418\uac70\ub098 \ud574\uacb0 \uc635\uc158\ub3c4 \uc81c\uacf5\ub418\uc9c0 \uc54a\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc0ac\ub294 \uc774\ub97c EKS \ubc0f \ub2f9\uc0ac \uace0\uac1d\uc774 \ubc1b\uc544\ub4e4\uc77c \uc218 \uc5c6\ub294 \ubcf4\uc548 \ud0dc\uc138\ub85c \uac04\uc8fc\ud558\uc5ec \ucd5c\uc2e0 \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ud604\ud589 \uc815\ucc45\uc744 \uc2dc\ud589\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4. EKS \ubc84\uc804 \uc9c0\uc6d0 \uc815\ucc45 \uac80\ud1a0 . \uc9c0\uc6d0 \uc885\ub8cc\uc77c \uc774\uc804\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc9c0 \uc54a\uc73c\uba74 \uc9c0\uc6d0\ub418\ub294 \ub2e4\uc74c \ubc84\uc804\uc73c\ub85c \uc790\ub3d9 \uc5c5\uadf8\ub808\uc774\ub4dc\ub429\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ubc84\uc804 FAQ\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc801\uc808\ud55c \ud14c\uc2a4\ud2b8 \ubc0f \uc900\ube44\uac00 \uc5c6\uc73c\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc640 \ucee8\ud2b8\ub864\ub7ec\uac00 \uc911\ub2e8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS\uc758 Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ucc98\ub9ac\ub97c \uc704\ud55c \uc798 \ubb38\uc11c\ud654\ub41c \ud504\ub85c\uc138\uc2a4\ub97c \uac1c\ubc1c\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub294 \ub7f0\ubd81\uacfc \ub3c4\uad6c\ub97c \ube4c\ub4dc\ud558\uc138\uc694. \ud074\ub7ec\uc2a4\ud130\ub97c \uc815\uae30\uc801\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uacc4\ud68d\uc744 \uc138\uc6b0\uc138\uc694. EKS Kubernetes \ub9b4\ub9ac\uc2a4\ub97c \ub530\ub77c\uc7a1\uc73c\ub824\uba74 \uc801\uc5b4\ub3c4 1\ub144\uc5d0 \ud55c \ubc88 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624.","title":"\ud074\ub7ec\uc2a4\ud130\ub97c \ucd5c\uc2e0 \uc0c1\ud0dc\ub85c \uc720\uc9c0"},{"location":"upgrades/index.kr/#eks","text":"EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uce98\ub9b0\ub354 \uac80\ud1a0 \ub97c \ud1b5\ud574 \uc0c8 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\ub294 \uc2dc\uae30\uc640 \ud2b9\uc815 \ubc84\uc804\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc774 \uc885\ub8cc\ub418\ub294 \uc2dc\uae30\ub97c \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.\uc77c\ubc18\uc801\uc73c\ub85c EKS\ub294 \ub9e4\ub144 \uc138 \uac1c\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub97c \ub9b4\ub9ac\uc2a4\ud558\uba70 \uac01 \ub9c8\uc774\ub108 \ubc84\uc804\uc740 \uc57d 14\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ub610\ud55c \uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9b4\ub9ac\uc2a4 \uc815\ubcf4 \ub3c4 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624.","title":"EKS \ucd9c\uc2dc \uc77c\uc815 \uac80\ud1a0"},{"location":"upgrades/index.kr/#_4","text":"\ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \ubaa8\ub450\uc5d0 \ub300\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc \uc2dc\uc791 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc2dc\uc791\ud558\uba74 AWS\uac00 \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.Fargate \ud30c\ub4dc \ubc0f [\uae30\ud0c0 \uc560\ub4dc\uc628] \uc744 \ud3ec\ud568\ud55c \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub294 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4.(#upgrade -\uc560\ub4dc\uc628 \ubc0f \uad6c\uc131 \uc694\uc18c - kubernetes-api \uc0ac\uc6a9) \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \ud6c4 \uac00\uc6a9\uc131\uacfc \uc6b4\uc601\uc5d0 \uc601\ud5a5\uc744 \ubbf8\uce58\uc9c0 \uc54a\ub3c4\ub85d \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac80\uc99d\ud558\uace0 \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uacf5\ub3d9 \ucc45\uc784 \ubaa8\ub378\uc774 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \uc5b4\ub5bb\uac8c \uc801\uc6a9\ub418\ub294\uc9c0 \uc774\ud574"},{"location":"upgrades/index.kr/#_5","text":"EKS\ub294 \uc778\ud50c\ub808\uc774\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \ub9ac\uc18c\uc2a4\uac00 \uc720\uc9c0\ub418\uace0 \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 (\uc608: API \uc5d4\ub4dc\ud3ec\uc778\ud2b8, OIDC, ENIS, \ub85c\ub4dc \ubc38\ub7f0\uc11c) \uc774 \uc77c\uad00\ub418\uac8c \uc720\uc9c0\ub429\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ud074\ub7ec\uc2a4\ud130 \uc0ac\uc6a9\uc790\uc758 \uc5c5\ubb34 \uc911\ub2e8\uc774 \uc904\uc5b4\ub4e4\uace0, \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud558\uac70\ub098 \uc678\ubd80 \ub9ac\uc18c\uc2a4 (\uc608: DNS, \uc2a4\ud1a0\ub9ac\uc9c0) \ub97c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \ud544\uc694 \uc5c6\uc774 \ud074\ub7ec\uc2a4\ud130\uc758 \uae30\uc874 \uc6cc\ud06c\ub85c\ub4dc\uc640 \ub9ac\uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc804\uccb4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc218\ud589\ud560 \ub54c\ub294 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc\ub9cc \uc2e4\ud589\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud574\uc57c \ud569\ub2c8\ub2e4 (\uc608: 1.24\uc5d0\uc11c 1.25\uae4c\uc9c0). \uc989, \uc5ec\ub7ec \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud558\ub294 \uacbd\uc6b0 \uc77c\ub828\uc758 \uc21c\ucc28\uc801 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\uc21c\ucc28\uc801 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uacc4\ud68d\ud558\ub294 \uac83\uc740 \ub354 \ubcf5\uc7a1\ud558\uba70 \ub2e4\uc6b4\ud0c0\uc784\uc774 \ubc1c\uc0dd\ud560 \uc704\ud5d8\uc774 \ub354 \ub192\uc2b5\ub2c8\ub2e4.\uc774 \uc0c1\ud669\uc5d0\uc11c\ub294 \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \ud3c9\uac00\ud558\uc2ed\uc2dc\uc624.","title":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc778\ud50c\ub808\uc774\uc2a4 \uc5c5\uadf8\ub808\uc774\ub4dc"},{"location":"upgrades/index.kr/#_6","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub2e4\uc74c \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud569\ub2c8\ub2e4. 1. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc0f EKS \ub9b4\ub9ac\uc2a4 \ub178\ud2b8\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. 2. \ud074\ub7ec\uc2a4\ud130\ub97c \ubc31\uc5c5\ud558\uc2ed\uc2dc\uc624.(\uc120\ud0dd \uc0ac\ud56d) 3. \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uac70\ub098 \uc81c\uac70\ub41c API \uc0ac\uc6a9\uc744 \uc2dd\ubcc4\ud558\uace0 \uc218\uc815\ud558\uc2ed\uc2dc\uc624. 4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c Kubernetes \ubc84\uc804\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. EKS Fargate Profile\uc5d0\uc11c \uc0dd\uc131\ud55c EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ubc0f \ub178\ub4dc\ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \uac04\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub97c 1\uac1c\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4. 5. AWS \ucf58\uc194 \ub610\ub294 CLI\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. 6. \uc560\ub4dc\uc628 \ud638\ud658\uc131\uc744 \uac80\ud1a0\ud558\uc138\uc694. \ud544\uc694\uc5d0 \ub530\ub77c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc560\ub4dc\uc628\uacfc \ucee4\uc2a4\ud140 \ucee8\ud2b8\ub864\ub7ec\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624. 7. kubectl \uc5c5\ub370\uc774\ud2b8\ud558\uae30. 8. \ud074\ub7ec\uc2a4\ud130 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ub41c \ud074\ub7ec\uc2a4\ud130\uc640 \ub3d9\uc77c\ud55c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc2ed\uc2dc\uc624.","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \uc21c\uc11c\ub300\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc"},{"location":"upgrades/index.kr/#upgrade-your-control-plane-and-data-plane-in-sequence","text":"To upgrade a cluster you will need to take the following actions:","title":"Upgrade your control plane and data plane in sequence"},{"location":"upgrades/index.kr/#eks_1","text":"EKS \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubc84\uc804 \uc124\uba85\uc11c \uc5d0\ub294 \uac01 \ubc84\uc804\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ubcc0\uacbd \ubaa9\ub85d\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\uac01 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ub300\ud55c \uccb4\ud06c\ub9ac\uc2a4\ud2b8\ub97c \uc791\uc131\ud558\uc2ed\uc2dc\uc624. \ud2b9\uc815 EKS \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68\uc740 \uc124\uba85\uc11c\uc5d0\uc11c \uac01 \ubc84\uc804\uc758 \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d\uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. EKS 1.27 EKS 1.26 EKS 1.25 EKS 1.24 EKS 1.23 EKS 1.22","title":"EKS \uc124\uba85\uc11c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc \uccb4\ud06c\ub9ac\uc2a4\ud2b8 \uc0dd\uc131"},{"location":"upgrades/index.kr/#api","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc0ac\uc6a9 \uc911\uc778 Kubernetes \uad6c\uc131 \uc694\uc18c\uc758 \ubc84\uc804\uc744 \uc774\ud574\ud574\uc57c \ud569\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\uc758 \uc778\ubca4\ud1a0\ub9ac\ub97c \uc791\uc131\ud558\uace0 Kubernetes API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uad6c\uc131 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud558\uc2ed\uc2dc\uc624.\uc5ec\uae30\uc5d0\ub294 \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \ub85c\uae45 \uc5d0\uc774\uc804\ud2b8, \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec, \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 (\uc608: EBS CSI , EFS CSI ), \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec, \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud558\ub294 \uae30\ud0c0 \uc6cc\ud06c\ub85c\ub4dc \ub610\ub294 \uc560\ub4dc\uc628\uacfc \uac19\uc740 \uc911\uc694\ud55c \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\uac00 \ud3ec\ud568\ub429\ub2c8\ub2e4. \ud301 \uc911\uc694\ud55c \ud074\ub7ec\uc2a4\ud130 \uad6c\uc131 \uc694\uc18c\ub294 \ub300\uac1c *-system \ub124\uc784\uc2a4\ud398\uc774\uc2a4\uc5d0 \uc124\uce58\ub429\ub2c8\ub2e4. kubectl get ns | grep '-system' Kubernetes API\ub97c \uc0ac\uc6a9\ud558\ub294 \uad6c\uc131 \uc694\uc18c\ub97c \uc2dd\ubcc4\ud55c \ud6c4\uc5d0\ub294 \ud574\ub2f9 \uc124\uba85\uc11c\uc5d0\uc11c \ubc84\uc804 \ud638\ud658\uc131 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc694\uad6c \uc0ac\ud56d\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\uc608\ub97c \ub4e4\uc5b4 \ubc84\uc804 \ud638\ud658\uc131\uc5d0 \ub300\ud574\uc11c\ub294 AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc9c4\ud589\ud558\uae30 \uc804\uc5d0 \uc77c\ubd80 \uad6c\uc131 \uc694\uc18c\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uac70\ub098 \uad6c\uc131\uc744 \ubcc0\uacbd\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud655\uc778\ud574\uc57c \ud560 \uba87 \uac00\uc9c0 \uc911\uc694\ud55c \uad6c\uc131 \uc694\uc18c\ub85c\ub294 CoreDNS , kube-proxy , VPC CNI , \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \ub4f1\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub7ec\uc2a4\ud130\uc5d0\ub294 Kubernetes API\ub97c \uc0ac\uc6a9\ud558\ub294 \ub9ce\uc740 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ud3ec\ud568\ub418\ub294 \uacbd\uc6b0\uac00 \ub9ce\uc73c\uba70 \uc778\uadf8\ub808\uc2a4 \ucee8\ud2b8\ub864\ub7ec, \uc9c0\uc18d\uc801 \uc804\ub2ec \uc2dc\uc2a4\ud15c, \ubaa8\ub2c8\ud130\ub9c1 \ub3c4\uad6c\uc640 \uac19\uc740 \uc6cc\ud06c\ub85c\ub4dc \uae30\ub2a5\uc5d0 \ud544\uc694\ud569\ub2c8\ub2e4.EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c\ub294 \uc560\ub4dc\uc628\uacfc \ud0c0\uc0ac \ub3c4\uad6c\ub3c4 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc5ec \ud638\ud658\ub418\ub294\uc9c0 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 \uc560\ub4dc\uc628\uc758 \ub2e4\uc74c \uc608\uc640 \uad00\ub828 \uc5c5\uadf8\ub808\uc774\ub4dc \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon VPC CNI: \uac01 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc5d0 \ub300\ud55c Amazon VPC CNI \uc560\ub4dc\uc628\uc758 \uad8c\uc7a5 \ubc84\uc804\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628\uc6a9 Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Amazon EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc124\uce58\ud55c \uacbd\uc6b0 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. kube-proxy: \ucfe0\ubc84\ub124\ud2f0\uc2a4 kube-proxy \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. CoreDNS: CoreDNS \uc790\uccb4 \uad00\ub9ac\ud615 \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. AWS Load Balancer Controller: AWS \ub85c\ub4dc \ubc38\ub7f0\uc11c \ucee8\ud2b8\ub864\ub7ec\ub294 \ubc30\ud3ec\ud55c EKS \ubc84\uc804\uacfc \ud638\ud658\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc124\uce58 \uac00\uc774\ub4dc \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ube14\ub85d \uc2a4\ud1a0\uc5b4 (\uc544\ub9c8\uc874 EBS) \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uc544\ub9c8\uc874 EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc544\ub9c8\uc874 EBS CSI \ub4dc\ub77c\uc774\ubc84 \uad00\ub9ac \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ud30c\uc77c \uc2dc\uc2a4\ud15c (Amazon EFS) \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uc544\ub9c8\uc874 EFS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uba54\ud2b8\ub9ad \uc11c\ubc84: \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 GitHub\uc758 \uba54\ud2b8\ub9ad\uc2a4-\uc11c\ubc84 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec: Kubernetes \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ubc84\uc804\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ubc30\ud3ec \uc2dc \uc774\ubbf8\uc9c0 \ubc84\uc804\uc744 \ubcc0\uacbd\ud558\uc2ed\uc2dc\uc624.\ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc2a4\ucf00\uc904\ub7ec\uc640 \ubc00\uc811\ud558\uac8c \uc5f0\uacb0\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \ub54c\ub294 \ud56d\uc0c1 \uc5c5\uadf8\ub808\uc774\ub4dc\ud574\uc57c \ud569\ub2c8\ub2e4. GitHub \ub9b4\ub9ac\uc2a4 \ub97c \uac80\ud1a0\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ud574\ub2f9\ud558\ub294 \ucd5c\uc2e0 \ub9b4\ub9ac\uc2a4\uc758 \uc8fc\uc18c\ub97c \ucc3e\uc73c\uc2ed\uc2dc\uc624. \uce74\ud39c\ud130: \uc124\uce58 \ubc0f \uc5c5\uadf8\ub808\uc774\ub4dc \uc815\ubcf4\ub294 \uce74\ud39c\ud130 \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ub4dc\uc628 \ubc0f \ucef4\ud3ec\ub10c\ud2b8 \uc5c5\uadf8\ub808\uc774\ub4dc"},{"location":"upgrades/index.kr/#eks_2","text":"AWS\uc5d0\uc11c \uc5c5\uadf8\ub808\uc774\ub4dc \ud504\ub85c\uc138\uc2a4\ub97c \uc644\ub8cc\ud558\ub824\uba74 \uacc4\uc815\uc5d0 \ud2b9\uc815 \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\uac00 \uc5c6\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0\ub294 \ub2e4\uc74c \ub9ac\uc18c\uc2a4\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. 1.\uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 Amazon EKS\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ud544\uc694\ud569\ub2c8\ub2e4. 2.EKS IAM \uc5ed\ud560: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 IAM \uc5ed\ud560\uc740 \ud544\uc694\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uacc4\uc815\uc5d0 \uacc4\uc18d \uc874\uc7ac\ud569\ub2c8\ub2e4. 3.EKS \ubcf4\uc548 \uadf8\ub8f9: \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uae30\ubcf8 \ubcf4\uc548 \uadf8\ub8f9\uc740 \ud544\uc694\ud55c \uc561\uc138\uc2a4 \uaddc\uce59\uc774 \uc788\ub294 \uacc4\uc815\uc5d0\uc11c \uacc4\uc18d \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 4.\ud074\ub7ec\uc2a4\ud130\uc5d0 \ube44\ubc00 \uc554\ud638\ud654\uac00 \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130 IAM \uc5ed\ud560\uc5d0 AWS KMS (AWS \ud0a4 \uad00\ub9ac \uc11c\ube44\uc2a4) \ud0a4\ub97c \uc0ac\uc6a9\ud560 \uad8c\ud55c\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"\uc5c5\uadf8\ub808\uc774\ub4dc \uc804\uc5d0 \uae30\ubcf8 EKS \uc694\uad6c \uc0ac\ud56d \ud655\uc778"},{"location":"upgrades/index.kr/#ip","text":"\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\ub370\uc774\ud2b8\ud558\ub824\uba74 Amazon EKS\uc5d0\uc11c \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \ub54c \uc9c0\uc815\ud55c \uc11c\ube0c\ub137\uc758 \uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c\uac00 \ucd5c\ub300 5\uac1c\uae4c\uc9c0 \ud544\uc694\ud569\ub2c8\ub2e4. \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \uc11c\ube0c\ub137\uc5d0 \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\ub294 \ucda9\ubd84\ud55c IP \uc8fc\uc18c\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> aws ec2 describe-subnets --subnet-ids \\ $(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.resourcesVpcConfig.subnetIds' \\ --output text) \\ --query 'Subnets[*].[SubnetId,AvailabilityZone,AvailableIpAddressCount]' \\ --output table ---------------------------------------------------- | DescribeSubnets | +---------------------------+--------------+-------+ | subnet-067fa8ee8476abbd6 | us-east-1a | 8184 | | subnet-0056f7403b17d2b43 | us-east-1b | 8153 | | subnet-09586f8fb3addbc8c | us-east-1a | 8120 | | subnet-047f3d276a22c6bce | us-east-1b | 8184 | +---------------------------+--------------+-------+ VPC CNI \uc9c0\ud45c \ub3c4\uc6b0\ubbf8 \ub97c \uc0ac\uc6a9\ud558\uc5ec VPC \uc9c0\ud45c\uc5d0 \ub300\ud55c CloudWatch \ub300\uc2dc\ubcf4\ub4dc\ub97c \ub9cc\ub4e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc0ac\uc6a9 \uac00\ub2a5\ud55c IP \uc8fc\uc18c \ud655\uc778"},{"location":"upgrades/index.kr/#eks-iam","text":"\ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec IAM \uc5ed\ud560\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uace0 \uacc4\uc815\uc5d0 \uc62c\ubc14\ub978 \uc5ed\ud560 \uc218\uc784 \uc815\ucc45\uc774 \uc801\uc6a9\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> ROLE_ARN=$(aws eks describe-cluster --name ${CLUSTER} \\ --query 'cluster.roleArn' --output text) aws iam get-role --role-name ${ROLE_ARN##*/} \\ --query 'Role.AssumeRolePolicyDocument' { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"eks.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] }","title":"EKS IAM \uc5ed\ud560 \ud655\uc778"},{"location":"upgrades/index.kr/#eks_3","text":"\uacc4\uc815\uc5d0 \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. CLUSTER=<cluster name> aws ec2 describe-security-groups \\ --group-ids $(aws eks describe-cluster \\ --query 'cluster.resourcesVpcConfig.securityGroupIds[*]' \\ --name ${CLUSTER} --output text) { \"SecurityGroups\": [ { \"Description\": \"Communication between the control plane and worker nodegroups\", \"GroupName\": \"eksctl-prefix-cluster-ControlPlaneSecurityGroup-HFO1JTSFWL1J\", \ub2e4\uc74c\uacfc \uac19\uc740 \ucd9c\ub825\uc774 \ud45c\uc2dc\ub418\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud558\uace0 \uacc4\uc815\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ubcf4\uc548 \uadf8\ub8f9\uc744 \ub2e4\uc2dc \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. An error occurred (InvalidGroupId.Malformed) when calling the DescribeSecurityGroups operation: Invalid id: \ubcf4\uc548 \uadf8\ub8f9\uc744 \ucc3e\uc744 \uc218 \uc5c6\ub294 \uacbd\uc6b0 Amazon EKS \ubcf4\uc548 \uadf8\ub8f9 \uc694\uad6c \uc0ac\ud56d \ubc0f \uace0\ub824 \uc0ac\ud56d \uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624. eks-cluster-sg-my-cluster-uniqueID \ubcf4\uc548 \uadf8\ub8f9\uc774 \uc0ad\uc81c\ub41c \uacbd\uc6b0 \ud074\ub7ec\uc2a4\ud130\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"EKS \ubcf4\uc548 \uadf8\ub8f9 \ud655\uc778"},{"location":"upgrades/index.kr/#eks_4","text":"Amazon EKS\ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc6a9 Amazon VPC CNI \ud50c\ub7ec\uadf8\uc778, kube-proxy , CoreDNS\uc640 \uac19\uc740 \uc560\ub4dc\uc628\uc744 \ubaa8\ub4e0 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc124\uce58\ud569\ub2c8\ub2e4.\uc560\ub4dc\uc628\uc740 \uc790\uccb4 \uad00\ub9ac\ud615\uc774\uac70\ub098 Amazon EKS \uc560\ub4dc\uc628\uc73c\ub85c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Amazon EKS \uc560\ub4dc\uc628\uc740 EKS API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc560\ub4dc\uc628\uc744 \uad00\ub9ac\ud558\ub294 \ub610 \ub2e4\ub978 \ubc29\ubc95\uc785\ub2c8\ub2e4. Amazon EKS \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub2e8\uc77c \uba85\ub839\uc73c\ub85c \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc608\ub97c \ub4e4\uba74 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. aws eks update-addon \u2014cluster-name my-cluster \u2014addon-name vpc-cni \u2014addon-version version-number \\ --service-account-role-arn arn:aws:iam::111122223333:role/role-name \u2014configuration-values '{}' \u2014resolve-conflicts PRESERVE EKS \uc560\ub4dc\uc628\uc744 \uc0ac\uc6a9\ud55c\ub2e4\uba74 \ub2e4\uc74c\uc758 \uba85\ub839\uc5b4\ub85c \ud655\uc778\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. aws eks list-addons --cluster-name <cluster name> Warning EKS Add-on\uc740 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc \uc911\uc5d0 \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.EKS \uc560\ub4dc\uc628 \uc5c5\ub370\uc774\ud2b8\ub97c \uc2dc\uc791\ud558\uace0 \uc6d0\ud558\ub294 \ubc84\uc804\uc744 \uc120\ud0dd\ud574\uc57c \ud569\ub2c8\ub2e4. \uc0ac\uc6a9 \uac00\ub2a5\ud55c \ubaa8\ub4e0 \ubc84\uc804 \uc911\uc5d0\uc11c \ud638\ud658\ub418\ub294 \ubc84\uc804\uc744 \uc120\ud0dd\ud558\ub294 \uac83\uc740 \uc0ac\uc6a9\uc790\uc758 \ucc45\uc784\uc785\ub2c8\ub2e4. \uc560\ub4dc\uc628 \ubc84\uc804 \ud638\ud658\uc131 \uc9c0\uce68 \uac80\ud1a0 Amazon EKS \ucd94\uac00 \uae30\ub2a5\uc740 \ud55c \ubc88\uc5d0 \ud558\ub098\uc758 \ub9c8\uc774\ub108 \ubc84\uc804\ub9cc \uc5c5\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. EKS Add-on\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uad6c\uc131 \uc694\uc18c \ubc0f \uc2dc\uc791 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. EKS Add-on\uc5d0 \uc0ac\uc6a9\uc790 \uc9c0\uc815 \uad6c\uc131\uc744 \uc81c\uacf5\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.","title":"EKS \uc560\ub4dc\uc628\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"},{"location":"upgrades/index.kr/#api_1","text":"EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc81c\uac70\ub41c API\uc758 API \uc0ac\uc6a9\uc744 \ud655\uc778\ud574\uc57c \ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574\uc11c\ub294 \uc2e4\ud589 \uc911\uc778 \ud074\ub7ec\uc2a4\ud130 \ub610\ub294 \uc815\uc801\uc73c\ub85c \ub80c\ub354\ub9c1\ub41c Kubernetes \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ud655\uc778\ud560 \uc218 \uc788\ub294 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc73c\ub85c \uc815\uc801 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \ub300\uc0c1\uc73c\ub85c \uac80\uc0ac\ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \ub354 \uc815\ud655\ud569\ub2c8\ub2e4. \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130\ub97c \ub300\uc0c1\uc73c\ub85c \uc2e4\ud589\ud558\uba74 \uc774\ub7ec\ud55c \ub3c4\uad6c\uac00 \uc624\ud0d0\uc744 \ubc18\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uac00 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\ub294\ub2e4\uace0 \ud574\uc11c API\uac00 \uc81c\uac70\ub41c \uac83\uc740 \uc544\ub2d9\ub2c8\ub2e4. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc9c0\uc6d0 \uc911\ub2e8 \uc815\ucc45 \uc744 \ud655\uc778\ud558\uc5ec API \uc81c\uac70\uac00 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ubbf8\uce58\ub294 \uc601\ud5a5\uc744 \uc774\ud574\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc81c\uac70\ub41c API \uc0ac\uc6a9\uc744 \uc2dd\ubcc4\ud558\uace0 \uc218\uc815\ud558\uae30"},{"location":"upgrades/index.kr/#-kube-no-trouble","text":"Kube-no-Trouble \uc740 kubent \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ucee4\ub9e8\ub4dc \ub77c\uc778 \uc720\ud2f8\ub9ac\ud2f0\uc785\ub2c8\ub2e4.\uc778\uc218 \uc5c6\uc774 `kubent'\ub97c \uc2e4\ud589\ud558\uba74 \ud604\uc7ac KubeConfig \ucee8\ud14d\uc2a4\ud2b8\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\uace0 \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uace0 \uc81c\uac70\ub420 API\uac00 \ud3ec\ud568\ub41c \ubcf4\uace0\uc11c\ub97c \uc778\uc1c4\ud569\ub2c8\ub2e4 kubent 4:17PM INF >>> Kube No Trouble `kubent` <<< 4:17PM INF version 0.7.0 (git sha d1bb4e5fd6550b533b2013671aa8419d923ee042) 4:17PM INF Initializing collectors and retrieving data 4:17PM INF Target K8s version is 1.24.8-eks-ffeb93d 4:l INF Retrieved 93 resources from collector name=Cluster 4:17PM INF Retrieved 16 resources from collector name=\"Helm v3\" 4:17PM INF Loaded ruleset name=custom.rego.tmpl 4:17PM INF Loaded ruleset name=deprecated-1-16.rego 4:17PM INF Loaded ruleset name=deprecated-1-22.rego 4:17PM INF Loaded ruleset name=deprecated-1-25.rego 4:17PM INF Loaded ruleset name=deprecated-1-26.rego 4:17PM INF Loaded ruleset name=deprecated-future.rego __________________________________________________________________________________________ >>> Deprecated APIs removed in 1.25 <<< ------------------------------------------------------------------------------------------ KIND NAMESPACE NAME API_VERSION REPLACE_WITH (SINCE) PodSecurityPolicy <undefined> eks.privileged policy/v1beta1 <removed> (1.21.0) \uc815\uc801 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c \ubc0f helm \ud328\ud0a4\uc9c0\ub97c \uc2a4\uce94\ud558\ub294 \ub370\uc5d0\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \ubc30\ud3ec\ud558\uae30 \uc804\uc5d0 \ubb38\uc81c\ub97c \uc2dd\ubcc4\ud558\ub824\uba74 \uc9c0\uc18d\uc801 \ud1b5\ud569 (CI) \ud504\ub85c\uc138\uc2a4\uc758 \uc77c\ubd80\ub85c kubent \ub97c \uc2e4\ud589\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\ub610\ud55c \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc2a4\uce94\ud558\ub294 \uac83\uc774 \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \uc815\ud655\ud569\ub2c8\ub2e4. Kube-no-Trouble\uc740 \ud074\ub7ec\uc2a4\ud130\ub97c \uc2a4\uce94\ud558\uae30 \uc704\ud55c \uc801\uc808\ud55c \uad8c\ud55c\uc774 \uc788\ub294 \uc0d8\ud50c \uc11c\ube44\uc2a4 \uacc4\uc815 \ubc0f \uc5ed\ud560 \uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4.","title":"\ud050\ube0c-\ub178-\ud2b8\ub7ec\ube14(Kube-no-Trouble)"},{"location":"upgrades/index.kr/#pluto","text":"\ub610 \ub2e4\ub978 \uc635\uc158\uc740 pluto \uc778\ub370, \uc774\ub294 \ub77c\uc774\ube0c \ud074\ub7ec\uc2a4\ud130, \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c, \ud5ec\ub984 \ucc28\ud2b8 \uc2a4\uce94\uc744 \uc9c0\uc6d0\ud558\uace0 CI \ud504\ub85c\uc138\uc2a4\uc5d0 \ud3ec\ud568\ud560 \uc218 \uc788\ub294 GitHub Action\uc774 \uc788\ub2e4\ub294 \uc810\uc5d0\uc11c kubent \uc640 \ube44\uc2b7\ud569\ub2c8\ub2e4. pluto detect-all-in-cluster NAME KIND VERSION REPLACEMENT REMOVED DEPRECATED REPL AVAIL eks.privileged PodSecurityPolicy policy/v1beta1 false true true","title":"\ud480\ub8e8\ud1a0(pluto)"},{"location":"upgrades/index.kr/#kubectl-convert","text":"\uc5c5\ub370\uc774\ud2b8\uac00 \ud544\uc694\ud55c \uc6cc\ud06c\ub85c\ub4dc\uc640 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc2dd\ubcc4\ud55c \ud6c4\uc5d0\ub294 \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc758 \ub9ac\uc18c\uc2a4 \uc720\ud615\uc744 \ubcc0\uacbd\ud574\uc57c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\ud3f4\ub9ac\uc2dc\ub97c \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\uc2a4\ud0e0\ub2e4\ub4dc\ub85c).\uc774\ub97c \uc704\ud574\uc11c\ub294 \ub9ac\uc18c\uc2a4 \uc0ac\uc591\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\uace0 \uad50\uccb4\ud560 \ub9ac\uc18c\uc2a4\uc5d0 \ub530\ub978 \ucd94\uac00 \uc870\uc0ac\uac00 \ud544\uc694\ud569\ub2c8\ub2e4. \ub9ac\uc18c\uc2a4 \uc720\ud615\uc740 \ub3d9\uc77c\ud558\uac8c \uc720\uc9c0\ub418\uc9c0\ub9cc API \ubc84\uc804\uc744 \uc5c5\ub370\uc774\ud2b8\ud574\uc57c \ud558\ub294 \uacbd\uc6b0, kubectl-convert \uba85\ub839\uc744 \uc0ac\uc6a9\ud558\uc5ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8 \ud30c\uc77c\uc744 \uc790\ub3d9\uc73c\ub85c \ubcc0\ud658\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc804 \ub514\ud50c\ub85c\uc774\uba3c\ud2b8\ub97c apps/v1 \uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uacbd\uc6b0\ub97c \uc608\ub85c \ub4e4 \uc218 \uc788\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6f9 \uc0ac\uc774\ud2b8\uc758 kubectl convert \ud50c\ub7ec\uadf8\uc778 \uc124\uce58 \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. kubectl-convert -f <file> --output-version <group>/<version>","title":"\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc6cc\ud06c\ub85c\ub4dc \uc5c5\ub370\uc774\ud2b8kubectl-convert\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub9e4\ub2c8\ud398\uc2a4\ud2b8\ub97c \uc5c5\ub370\uc774\ud2b8."},{"location":"upgrades/index.kr/#poddisruptionbudget","text":"\ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\ub294 \ub3d9\uc548 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \uc801\uc808\ud55c PodDisruptionBudget(\ud30c\ub4dc\ub514\uc2a4\ub7fd\uc158 \uc608\uc0b0) \ubc0f [\ud1a0\ud3f4\ub85c\uc9c0 \uc2a4\ud504\ub808\ub4dc \uc81c\uc57d \uc870\uac74] (https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints) \uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.\ubaa8\ub4e0 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub3d9\uc77c\ud55c \uc218\uc900\uc758 \uac00\uc6a9\uc131\uc774 \ud544\uc694\ud55c \uac83\uc740 \uc544\ub2c8\ubbc0\ub85c \uc6cc\ud06c\ub85c\ub4dc\uc758 \uaddc\ubaa8\uc640 \uc694\uad6c \uc0ac\ud56d\uc744 \uac80\uc99d\ud574\uc57c \ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc5ec\ub7ec \uac00\uc6a9 \uc601\uc5ed\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\uace0 \ud1a0\ud3f4\ub85c\uc9c0\uac00 \ubd84\uc0b0\ub41c \uc5ec\ub7ec \ud638\uc2a4\ud2b8\uc5d0 \ubd84\uc0b0\ub418\uc5b4 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uba74 \uc6cc\ud06c\ub85c\ub4dc\uac00 \ubb38\uc81c \uc5c6\uc774 \uc0c8 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc73c\ub85c \uc790\ub3d9 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ub420 \uac83\uc774\ub77c\ub294 \uc2e0\ub8b0\ub3c4\uac00 \ub192\uc544\uc9d1\ub2c8\ub2e4. \ub2e4\uc74c\uc740 \ud56d\uc0c1 80% \uc758 \ubcf5\uc81c\ubcf8\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\uace0 \uc5ec\ub7ec \uc601\uc5ed\uacfc \ud638\uc2a4\ud2b8\uc5d0 \uac78\uccd0 \ubcf5\uc81c\ubcf8\uc744 \ubd84\uc0b0\uc2dc\ud0a4\ub294 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc608\uc785\ub2c8\ub2e4. apiVersion: policy/v1 kind: PodDisruptionBudget metadata: name: myapp spec: minAvailable: \"80%\" selector: matchLabels: app: myapp --- apiVersion: apps/v1 kind: Deployment metadata: name: myapp spec: replicas: 10 selector: matchLabels: app: myapp template: metadata: labels: app: myapp spec: containers: - image: public.ecr.aws/eks-distro/kubernetes/pause:3.2 name: myapp resources: requests: cpu: \"1\" memory: 256M topologySpreadConstraints: - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: kubernetes.io/hostname whenUnsatisfiable: DoNotSchedule - labelSelector: matchLabels: app: host-zone-spread maxSkew: 2 topologyKey: topology.kubernetes.io/zone whenUnsatisfiable: DoNotSchedule AWS Resilience Hub \ub294 \uc544\ub9c8\uc874 \uc5d8\ub77c\uc2a4\ud2f1 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc11c\ube44\uc2a4 (Amazon EKS) \ub97c \uc9c0\uc6d0 \ub9ac\uc18c\uc2a4\ub85c \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4. Resilience Hub\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubcf5\uc6d0\ub825\uc744 \uc815\uc758, \uac80\uc99d \ubc0f \ucd94\uc801\ud560 \uc218 \uc788\ub294 \ub2e8\uc77c \uc7a5\uc18c\ub97c \uc81c\uacf5\ud558\ubbc0\ub85c \uc18c\ud504\ud2b8\uc6e8\uc5b4, \uc778\ud504\ub77c \ub610\ub294 \uc6b4\uc601 \uc911\ub2e8\uc73c\ub85c \uc778\ud55c \ubd88\ud544\uc694\ud55c \ub2e4\uc6b4\ud0c0\uc784\uc744 \ud53c\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\ub370\uc774\ud130 \ud50c\ub808\uc778\uc774 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\ub294 \ub3d9\uc548 \uc6cc\ud06c\ub85c\ub4dc\uc758 \uac00\uc6a9\uc131\uc744 \ubcf4\uc7a5\ud558\ub3c4\ub85d PodDisruptionBudget \ubc0f \ud1a0\ud3f4\ub85c\uc9c0 \uc2a4\ud504\ub808\ub4dc \uc81c\uc57d \uc870\uac74\uc744 \uad6c\uc131."},{"location":"upgrades/index.kr/#karpenter","text":"\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc Karpenter\ub294 \ubaa8\ub450 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ub2e8\uc21c\ud654\ud558\uc9c0\ub9cc \uc811\uadfc \ubc29\uc2dd\uc740 \ub2e4\ub985\ub2c8\ub2e4. \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \ub178\ub4dc\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ubc0f \ub77c\uc774\ud504\uc0ac\uc774\ud074 \uad00\ub9ac\ub97c \uc790\ub3d9\ud654\ud569\ub2c8\ub2e4.\uc989, \ud55c \ubc88\uc758 \uc791\uc5c5\uc73c\ub85c \ub178\ub4dc\ub97c \uc0dd\uc131, \uc790\ub3d9 \uc5c5\ub370\uc774\ud2b8 \ub610\ub294 \uc885\ub8cc\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uae30\ubcf8 \uad6c\uc131\uc5d0\uc11c Karpenter\ub294 \ud638\ud658\ub418\ub294 \ucd5c\uc2e0 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0c8 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ud569\ub2c8\ub2e4. EKS\uac00 \uc5c5\ub370\uc774\ud2b8\ub41c EKS \ucd5c\uc801\ud654 AMI\ub97c \ucd9c\uc2dc\ud558\uac70\ub098 \ud074\ub7ec\uc2a4\ud130\uac00 \uc5c5\uadf8\ub808\uc774\ub4dc\ub418\uba74 Karpenter\ub294 \uc790\ub3d9\uc73c\ub85c \uc774\ub7ec\ud55c \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud558\uae30 \uc2dc\uc791\ud569\ub2c8\ub2e4. Karpenter\ub294 \ub178\ub4dc \uc5c5\ub370\uc774\ud2b8\ub97c \uc704\ud55c \ub178\ub4dc \ub9cc\ub8cc\ub3c4 \uad6c\ud604\ud569\ub2c8\ub2e4. Karpenter\ub294 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Karpenter\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0 kubelet \ubc84\uc804\uc5d0 \ub300\ud55c \ucc45\uc784\uc740 \uc0ac\uc6a9\uc790\uc5d0\uac8c \uc788\uc2b5\ub2c8\ub2e4.","title":"\uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9 \ub610\ub294 Karpenter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ud50c\ub808\uc778 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uac04\uc18c\ud654."},{"location":"upgrades/index.kr/#_7","text":"\uc5c5\uc2a4\ud2b8\ub9bc \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud504\ub85c\uc81d\ud2b8 \ub294 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 (\ud2b9\ud788 API \uc11c\ubc84\uc640 kubelet) \uc0ac\uc774\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub97c 2\uac1c \ub9c8\uc774\ub108 \ubc84\uc804\uc73c\ub85c \uc9c0\uc6d0\ud569\ub2c8\ub2e4.EKS \ubc84\uc804\uc774 1.25\uc778 \uacbd\uc6b0 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uac00\uc7a5 \uc624\ub798\ub41c kubelet\uc740 1.23\uc785\ub2c8\ub2e4. \uc774 \ubc84\uc804 \ucc28\uc774\ub294 EKS \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uacfc EKS Fargate \ud504\ub85c\ud30c\uc77c\ub85c \uc0dd\uc131\ud55c \ub178\ub4dc\ub9c8\ub2e4 \ub2e4\ub985\ub2c8\ub2e4.\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub370\uc774\ud130 \ud50c\ub808\uc778 \uac04\uc758 \ub9c8\uc774\ub108 \ubc84\uc804 \uc2a4\ud050\ub294 1\uac1c\ub9cc \uc9c0\uc6d0\ud569\ub2c8\ub2e4 (\uc608: EKS 1.25, 1.24 kubelet)","title":"\ub178\ub4dc\uc758 \ubc84\uc804 \uc2a4\ud050\ub97c \ucd94\uc801\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc774 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c \ubc84\uc804\uc5d0 \uc788\ub294\uc9c0 \ud655\uc778"},{"location":"upgrades/index.kr/#_8","text":"Karpenter\uac00 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uad6c\ud604\ud558\ub294 \ud55c \uac00\uc9c0 \ubc29\ubc95\uc740 \ub178\ub4dc \ub9cc\ub8cc\ub77c\ub294 \uac1c\ub150\uc744 \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ub178\ub4dc \uc5c5\uadf8\ub808\uc774\ub4dc\uc5d0 \ud544\uc694\ud55c \uacc4\ud68d\uc774 \uc904\uc5b4\ub4ed\ub2c8\ub2e4.\ud504\ub85c\ube44\uc800\ub108\uc5d0\uc11c ttlSecondsUntilExpired \uc758 \uac12\uc744 \uc124\uc815\ud558\uba74 \ub178\ub4dc \ub9cc\ub8cc\uac00 \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.\ub178\ub4dc\uac00 \uba87 \ucd08 \ub9cc\uc5d0 \uc815\uc758\ub41c \uc5f0\ub839\uc5d0 \ub3c4\ub2ec\ud558\uba74 \ub178\ub4dc\uac00 \uc548\uc804\ud558\uac8c \ube44\uc6cc\uc9c0\uace0 \uc0ad\uc81c\ub429\ub2c8\ub2e4.\uc774\ub294 \uc0ac\uc6a9 \uc911\uc778 \uacbd\uc6b0\uc5d0\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\uc774\ubbc0\ub85c \ub178\ub4dc\ub97c \uc0c8\ub85c \ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc5c5\uadf8\ub808\uc774\ub4dc\ub41c \uc778\uc2a4\ud134\uc2a4\ub85c \uad50\uccb4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub178\ub4dc\uac00 \uad50\uccb4\ub418\uba74 Karpenter\ub294 EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uce74\ud39c\ud130 \uc6f9 \uc0ac\uc774\ud2b8\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. Karpenter\ub294 \uc774 \uac12\uc5d0 \uc9c0\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \ucd94\uac00\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uacfc\ub3c4\ud55c \uc6cc\ud06c\ub85c\ub4dc \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 Kubernetes \uc124\uba85\uc11c\uc5d0 \ub098\uc640 \uc788\ub294 \ub300\ub85c \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 \uc744 \uc815\uc758\ud558\uc2ed\uc2dc\uc624. \ud504\ub85c\ube44\uc800\ub108\uc5d0\uc11c ttlSecondsUntilExpired \uac12\uc744 \uc124\uc815\ud558\ub294 \uacbd\uc6b0 \uc774\ub294 \ud504\ub85c\ube44\uc800\ub108\uc640 \uc5f0\uacb0\ub41c \uae30\uc874 \ub178\ub4dc\uc5d0 \uc801\uc6a9\ub429\ub2c8\ub2e4.","title":"\uce74\ud39c\ud130 \uad00\ub9ac\ud615 \ub178\ub4dc\uc758 \ub178\ub4dc \ub9cc\ub8cc \ud65c\uc131\ud654"},{"location":"upgrades/index.kr/#_9","text":"\uce74\ud39c\ud130's Drift \uae30\ub2a5 \uc740 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uc5ec EKS \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uae30\ud654 \uc0c1\ud0dc\ub97c \uc720\uc9c0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uce74\ud39c\ud130 \ub4dc\ub9ac\ud504\ud2b8\ub294 \ud604\uc7ac \uae30\ub2a5 \uac8c\uc774\ud2b8 \ub97c \uc0ac\uc6a9\ud558\uc5ec \ud65c\uc131\ud654\ud574\uc57c \ud569\ub2c8\ub2e4.Karpenter\uc758 \uae30\ubcf8 \uad6c\uc131\uc740 EKS \ud074\ub7ec\uc2a4\ud130\uc758 \ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uacfc \ub3d9\uc77c\ud55c \uba54\uc774\uc800 \ubc0f \ub9c8\uc774\ub108 \ubc84\uc804\uc5d0 \ub300\ud574 EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \ucd5c\uc2e0 AMI\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. EKS \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc644\ub8cc\ub418\uba74 Karpenter\uc758 Drift \uae30\ub2a5\uc740 Karpenter\uac00 \ud504\ub85c\ube44\uc800\ub2dd\ud55c \ub178\ub4dc\uac00 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130 \ubc84\uc804\uc6a9 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc74c\uc744 \uac10\uc9c0\ud558\uace0 \ud574\ub2f9 \ub178\ub4dc\ub97c \uc790\ub3d9\uc73c\ub85c \uc5f0\uacb0, \ub4dc\ub808\uc778 \ubc0f \uad50\uccb4\ud569\ub2c8\ub2e4.\uc0c8 \ub178\ub4dc\ub85c \uc774\ub3d9\ud558\ub294 \ud30c\ub4dc\ub97c \uc9c0\uc6d0\ud558\ub824\uba74 \uc801\uc808\ud55c \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \ud560\ub2f9\ub7c9 \uc744 \uc124\uc815\ud558\uace0 \ud30c\ub4dc \uc911\ub2e8 \uc608\uc0b0 (PDB) \uc744 \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubaa8\ubc94 \uc0ac\ub840\ub97c \ub530\ub974\uc138\uc694.Karpenter\uc758 \ud504\ub85c\ube44\uc800\ub2dd \ud574\uc81c\ub294 \ud30c\ub4dc \ub9ac\uc18c\uc2a4 \uc694\uccad\uc744 \uae30\ubc18\uc73c\ub85c \ub300\uccb4 \ub178\ub4dc\ub97c \ubbf8\ub9ac \uac00\ub3d9\ud558\uace0 \ub178\ub4dc \ud504\ub85c\ube44\uc800\ub2dd\uc744 \ucde8\uc18c\ud560 \ub54c PDB\ub97c \uc874\uc911\ud569\ub2c8\ub2e4.","title":"\uce74\ud39c\ud130 \uad00\ub9ac \ub178\ub4dc\uc5d0 \ub4dc\ub9ac\ud504\ud2b8 \uae30\ub2a5 \uc0ac\uc6a9"},{"location":"upgrades/index.kr/#eksctl","text":"\uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc740 \uc0ac\uc6a9\uc790 \uacc4\uc815\uc5d0 \ubc30\ud3ec\ub418\uace0 EKS \uc11c\ube44\uc2a4 \uc678\ubd80\uc758 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc5f0\uacb0\ub41c EC2 \uc778\uc2a4\ud134\uc2a4\uc785\ub2c8\ub2e4.\uc774\ub4e4\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc77c\uc885\uc758 \uc790\ub3d9\ud654 \ub3c4\uad6c\ub97c \ud1b5\ud574 \ubc30\ud3ec\ub418\uace0 \uad00\ub9ac\ub429\ub2c8\ub2e4.\uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \ub3c4\uad6c \uc124\uba85\uc11c\ub97c \ucc38\uc870\ud574\uc57c \ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 eksctl\uc740 \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uc0ad\uc81c \ubc0f \ub4dc\ub808\uc774\ub2dd \uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \uc77c\ubc18\uc801\uc778 \ub3c4\uad6c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. eksctl kOps EKS Blueprints","title":"eksctl\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc790\uccb4 \uad00\ub9ac\ud615 \ub178\ub4dc \uadf8\ub8f9\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \uc790\ub3d9\ud654"},{"location":"upgrades/index.kr/#_10","text":"\uc0c8 \ubc84\uc804\uc758 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub294 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \ud06c\uac8c \ubcc0\uacbd\ud569\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4\uc5d0\ub294 \ub2e4\uc6b4\uadf8\ub808\uc774\ub4dc\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. Velero \ub294 \ucee4\ubba4\ub2c8\ud2f0\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 \uc624\ud508 \uc18c\uc2a4 \ub3c4\uad6c\ub85c, \uae30\uc874 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc31\uc5c5\ud558\uace0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\uc5d0 \ubc31\uc5c5\uc744 \uc801\uc6a9\ud558\ub294 \ub370 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac EKS\uc5d0\uc11c \uc9c0\uc6d0\ud558\ub294 Kubernetes \ubc84\uc804\uc5d0\uc11c\ub9cc \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\ub2e4\ub294 \uc810\uc5d0 \uc720\uc758\ud558\uc2ed\uc2dc\uc624. \ud074\ub7ec\uc2a4\ud130\uac00 \ud604\uc7ac \uc2e4\ud589 \uc911\uc778 \ubc84\uc804\uc774 \uacc4\uc18d \uc9c0\uc6d0\ub418\uace0 \uc5c5\uadf8\ub808\uc774\ub4dc\uac00 \uc2e4\ud328\ud560 \uacbd\uc6b0 \uc6d0\ub798 \ubc84\uc804\uc73c\ub85c \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud558\uace0 \ub370\uc774\ud130 \ud50c\ub808\uc778\uc744 \ubcf5\uc6d0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucc38\uace0\ub85c IAM\uc744 \ud3ec\ud568\ud55c AWS \ub9ac\uc18c\uc2a4\ub294 Velero\uc758 \ubc31\uc5c5\uc5d0 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ub9ac\uc18c\uc2a4\ub294 \ub2e4\uc2dc \uc0dd\uc131\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\uc5c5\uadf8\ub808\uc774\ub4dc \uc804 \ud074\ub7ec\uc2a4\ud130 \ubc31\uc5c5"},{"location":"upgrades/index.kr/#fargate","text":"Fargate \ub370\uc774\ud130 \ud50c\ub808\uc778 \ub178\ub4dc\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\uba74 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc7ac\ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4. \ubaa8\ub4e0 \ud30c\ub4dc\ub97c -o wide \uc635\uc158\uc73c\ub85c \ub098\uc5f4\ud558\uc5ec \ud30c\uac8c\uc774\ud2b8 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589 \uc911\uc778 \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc2dd\ubcc4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.'fargate-'\ub85c \uc2dc\uc791\ud558\ub294 \ubaa8\ub4e0 \ub178\ub4dc \uc774\ub984\uc740 \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc7ac\ubc30\ud3ec\ud574\uc57c \ud569\ub2c8\ub2e4.","title":"\ucee8\ud2b8\ub864 \ud50c\ub808\uc778\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc\ud55c \ud6c4 Fargate \ubc30\ud3ec\ub97c \ub2e4\uc2dc \uc2dc\uc791."},{"location":"upgrades/index.kr/#_11","text":"\uc77c\ubd80 \uace0\uac1d\uc740 \ube14\ub8e8/\uadf8\ub9b0 \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\ub7b5\uc744 \uc120\ud638\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \uc774\uc810\uc774 \uc788\uc744 \uc218 \uc788\uc9c0\ub9cc \uace0\ub824\ud574\uc57c \ud560 \ub2e8\uc810\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ud61c\ud0dd\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec EKS \ubc84\uc804\uc744 \ud55c \ubc88\uc5d0 \ubcc0\uacbd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4 (\uc608: 1.23\uc5d0\uc11c 1.25). \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\ub85c \ub2e4\uc2dc \uc804\ud658 \uac00\ub2a5 \ucd5c\uc2e0 \uc2dc\uc2a4\ud15c (\uc608: terraform) \uc73c\ub85c \uad00\ub9ac\ud560 \uc218 \uc788\ub294 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\ub97c \uac1c\ubcc4\uc801\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uba87 \uac00\uc9c0 \ub2e8\uc810\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \uc18c\ube44\uc790 \uc5c5\ub370\uc774\ud2b8\uac00 \ud544\uc694\ud55c API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \ubc0f OIDC \ubcc0\uacbd (\uc608: kubectl \ubc0f CI/CD) \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc911\uc5d0 2\uac1c\uc758 \ud074\ub7ec\uc2a4\ud130\ub97c \ubcd1\ub82c\ub85c \uc2e4\ud589\ud574\uc57c \ud558\ubbc0\ub85c \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc9c0\uc5ed \uc6a9\ub7c9\uc774 \uc81c\ud55c\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc6cc\ud06c\ub85c\ub4dc\uac00 \uc11c\ub85c \uc885\uc18d\ub418\uc5b4 \ud568\uaed8 \ub9c8\uc774\uadf8\ub808\uc774\uc158\ub418\ub294 \uacbd\uc6b0 \ub354 \ub9ce\uc740 \uc870\uc815\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \ub85c\ub4dc \ubc38\ub7f0\uc11c\uc640 \uc678\ubd80 DNS\ub294 \uc5ec\ub7ec \ud074\ub7ec\uc2a4\ud130\uc5d0 \uc27d\uac8c \ubd84\uc0b0\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \uc804\ub7b5\uc740 \uac00\ub2a5\ud558\uc9c0\ub9cc \uc778\ud50c\ub808\uc774\uc2a4 \uc5c5\uadf8\ub808\uc774\ub4dc\ubcf4\ub2e4 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uace0 \uc870\uc815 \ubc0f \uc6cc\ud06c\ub85c\ub4dc \ub9c8\uc774\uadf8\ub808\uc774\uc158\uc5d0 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.\uc0c1\ud669\uc5d0 \ub530\ub77c \ud544\uc694\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc2e0\uc911\ud558\uac8c \uacc4\ud68d\ud574\uc57c \ud569\ub2c8\ub2e4. \ub192\uc740 \uc218\uc900\uc758 \uc790\ub3d9\ud654\uc640 GitOps\uc640 \uac19\uc740 \uc120\uc5b8\ud615 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud558\uba74 \uc774 \uc791\uc5c5\uc744 \ub354 \uc27d\uac8c \uc218\ud589\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ub370\uc774\ud130\ub97c \ubc31\uc5c5\ud558\uace0 \uc0c8 \ud074\ub7ec\uc2a4\ud130\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud558\ub824\uba74 \uc0c1\ud0dc \uc800\uc7a5 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ub300\ud55c \ucd94\uac00 \uc608\ubc29 \uc870\uce58\ub97c \ucde8\ud574\uc57c \ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c \ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc744 \uac80\ud1a0\ud558\uc138\uc694. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc: \ube14\ub8e8-\uadf8\ub9b0 \ubc30\ud3ec \uc804\ub7b5 \uc2a4\ud14c\uc774\ud2b8\ub9ac\uc2a4 ArgoCD \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc704\ud55c \ube14\ub8e8/\uadf8\ub9b0 \ub610\ub294 \uce74\ub098\ub9ac\uc544 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \ub9c8\uc774\uadf8\ub808\uc774\uc158","title":"\uc778\ud50c\ub808\uc774\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5c5\uadf8\ub808\uc774\ub4dc\uc758 \ub300\uc548\uc73c\ub85c \ube14\ub8e8/\uadf8\ub9b0 \ud074\ub7ec\uc2a4\ud130 \ud3c9\uac00"},{"location":"upgrades/index.kr/#kubernetes","text":"\ub2e4\uc74c \ubc84\uc804\ub9cc \ubc14\ub77c\ubcf4\uc9c0 \ub9c8\uc138\uc694. Kubernetes\uc758 \uc0c8 \ubc84\uc804\uc774 \ucd9c\uc2dc\ub418\uba74 \uc774\ub97c \uac80\ud1a0\ud558\uace0 \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624. \uc608\ub97c \ub4e4\uc5b4, \uc77c\ubd80 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ub3c4\ucee4 API\ub97c \uc9c1\uc811 \uc0ac\uc6a9\ud588\uace0, \ub3c4\ucee4\uc6a9 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \uc778\ud130\ud398\uc774\uc2a4 (CRI) (Dockershim\uc774\ub77c\uace0\ub3c4 \ud568) \uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.24 \uc5d0\uc11c \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uc885\ub958\uc758 \ubcc0\ud654\uc5d0\ub294 \ub300\ube44\ud558\ub294 \ub370 \ub354 \ub9ce\uc740 \uc2dc\uac04\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub824\ub294 \ubc84\uc804\uc5d0 \ub300\ud574 \ubb38\uc11c\ud654\ub41c \ubaa8\ub4e0 \ubcc0\uacbd \uc0ac\ud56d\uc744 \uac80\ud1a0\ud558\uace0 \ud544\uc694\ud55c \uc5c5\uadf8\ub808\uc774\ub4dc \ub2e8\uacc4\ub97c \uae30\ub85d\ud574 \ub450\uc2ed\uc2dc\uc624.\ub610\ud55c Amazon EKS \uad00\ub9ac\ud615 \ud074\ub7ec\uc2a4\ud130\uc640 \uad00\ub828\ub41c \ubaa8\ub4e0 \uc694\uad6c \uc0ac\ud56d \ub610\ub294 \uc808\ucc28\ub97c \uae30\ub85d\ud574 \ub450\uc2ed\uc2dc\uc624. \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ubcc0\uacbd \ub85c\uadf8","title":"Kubernetes \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uacc4\ud68d\ub41c \uc8fc\uc694 \ubcc0\uacbd \uc0ac\ud56d \ucd94\uc801 \u2014 \ubbf8\ub9ac \uc0dd\uac01\ud574 \ubcf4\uc138\uc694"},{"location":"upgrades/index.kr/#_12","text":"","title":"\uae30\ub2a5 \uc81c\uac70\uc5d0 \ub300\ud55c \uad6c\uccb4\uc801\uc778 \uc9c0\uce68"},{"location":"upgrades/index.kr/#125-dockershim-docker-socketdds","text":"1.25\uc6a9 EKS \ucd5c\uc801\ud654 AMI\uc5d0\ub294 \ub354 \uc774\uc0c1 \ub3c4\ucee4\uc2ec\uc5d0 \ub300\ud55c \uc9c0\uc6d0\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.Dockershim\uc5d0 \ub300\ud55c \uc885\uc18d\uc131\uc774 \uc788\ub294 \uacbd\uc6b0 (\uc608: Docker \uc18c\ucf13\uc744 \ub9c8\uc6b4\ud2b8\ud558\ub294 \uacbd\uc6b0) \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \uc774\ub7ec\ud55c \uc885\uc18d\uc131\uc744 \uc81c\uac70\ud574\uc57c \ud569\ub2c8\ub2e4. 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 Docker \uc18c\ucf13\uc5d0 \uc885\uc18d \uad00\uacc4\uac00 \uc788\ub294 \uc778\uc2a4\ud134\uc2a4\ub97c \ucc3e\uc544\ubcf4\uc138\uc694.kubectl \ud50c\ub7ec\uadf8\uc778\uc778 \ub3c4\ucee4 \uc18c\ucf13\uc6a9 \ub514\ud14d\ud130 (DDS) \ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.","title":"1.25\uc5d0\uc11c Dockershim \uc81c\uac70 - Docker Socket(DDS) \uc6a9 \uac80\ucd9c\uae30 \uc0ac\uc6a9"},{"location":"upgrades/index.kr/#removal-of-podsecuritypolicy-in-125-migrate-to-pod-security-standards-or-a-policy-as-code-solution","text":"","title":"Removal of PodSecurityPolicy in 1.25 - Migrate to Pod Security Standards or a policy-as-code solution"},{"location":"upgrades/index.kr/#125-","text":"PodSecurityPolicy \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.21\uc5d0\uc11c \ub354 \uc774\uc0c1 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc74c \uc774 \ub418\uc5c8\uace0, \ucfe0\ubc84\ub124\ud2f0\uc2a4 1.25\uc5d0\uc11c\ub294 \uc81c\uac70\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c PodSecurityPolicy\ub97c \uc0ac\uc6a9\ud558\ub294 \uacbd\uc6b0, \uc6cc\ud06c\ub85c\ub4dc \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\uae30 \uc704\ud574 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.25\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\uae30 \uc804\uc5d0 \ub0b4\uc7a5\ub41c \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 (PSS) \ub610\ub294 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158\ud574\uc57c \ud569\ub2c8\ub2e4. AWS\ub294 EKS \uc124\uba85\uc11c\uc5d0 \uc790\uc138\ud55c FAQ \ub97c \uac8c\uc2dc\ud588\uc2b5\ub2c8\ub2e4. \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 (PSS) \ubc0f \ud30c\ub4dc \ubcf4\uc548 \uc2b9\uc778 (PSA) \ubaa8\ubc94 \uc0ac\ub840\ub97c \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624.","title":"1.25\uc5d0\uc11c \ud30c\ub4dc\uc2dc\ud050\ub9ac\ud2f0\ud3f4\ub9ac\uc2dc \uc81c\uac70 - \ud30c\ub4dc \ubcf4\uc548 \ud45c\uc900 \ub610\ub294 \ucf54\ub4dc\ud615 \uc815\ucc45 \uc194\ub8e8\uc158\uc73c\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"},{"location":"upgrades/index.kr/#123-csi","text":"\ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub294 Kubernetes\uac00 \uae30\uc874\uc758 \uc778\ud2b8\ub9ac \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \uba54\ucee4\ub2c8\uc998\uc744 \ub300\uccb4\ud560 \uc218 \uc788\ub3c4\ub85d \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4.Amazon EBS \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uae30\ub2a5\uc740 Amazon EKS 1.23 \uc774\uc0c1 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub429\ub2c8\ub2e4.\ud30c\ub4dc\uac00 \ubc84\uc804 1.22 \ub610\ub294 \uc774\uc804 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \uacbd\uc6b0, \uc11c\ube44\uc2a4 \uc911\ub2e8\uc744 \ubc29\uc9c0\ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130\ub97c \ubc84\uc804 1.23 \uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ud558\uae30 \uc804\uc5d0 Amazon EBS CSI \ub4dc\ub77c\uc774\ubc84 \ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. Amazon EBS CSI \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc790\uc8fc \ubb3b\ub294 \uc9c8\ubb38 \uc744 \uac80\ud1a0\ud558\uc2ed\uc2dc\uc624.","title":"1.23\uc5d0\uc11c \uc778\ud2b8\ub9ac \uc2a4\ud1a0\ub9ac\uc9c0 \ub4dc\ub77c\uc774\ubc84 \uc9c0\uc6d0 \uc911\ub2e8 - \ucee8\ud14c\uc774\ub108 \uc2a4\ud1a0\ub9ac\uc9c0 \uc778\ud130\ud398\uc774\uc2a4 (CSI) \ub4dc\ub77c\uc774\ubc84\ub85c \ub9c8\uc774\uadf8\ub808\uc774\uc158"},{"location":"upgrades/index.kr/#_13","text":"","title":"\ucd94\uac00 \ub9ac\uc18c\uc2a4"},{"location":"upgrades/index.kr/#clowdhaus-eks","text":"ClowdHaus EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68 \uc740 Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 CLI\uc785\ub2c8\ub2e4.\ud074\ub7ec\uc2a4\ud130\ub97c \ubd84\uc11d\ud558\uc5ec \uc5c5\uadf8\ub808\uc774\ub4dc \uc804\uc5d0 \ud574\uacb0\ud574\uc57c \ud560 \uc7a0\uc7ac\uc801 \ubb38\uc81c\ub97c \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"ClowdHaus EKS \uc5c5\uadf8\ub808\uc774\ub4dc \uc9c0\uce68"},{"location":"upgrades/index.kr/#gonogo","text":"GoNoGo \ub294 \ud074\ub7ec\uc2a4\ud130 \uc560\ub4dc\uc628\uc758 \uc5c5\uadf8\ub808\uc774\ub4dc \uc2e0\ub8b0\ub3c4\ub97c \uacb0\uc815\ud558\ub294 \uc54c\ud30c \ub2e8\uacc4 \ub3c4\uad6c\uc785\ub2c8\ub2e4.","title":"GoNoGo"},{"location":"windows/docs/ami.kr/","text":"{'name': 'English', 'build': True} Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \uc708\ub3c4\uc6b0 AMI \uad00\ub9ac \u00b6 Amazon EKS \ucd5c\uc801\ud654 AMI\ub294 \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ub418\uc5c8\uc73c\uba70, \uc544\ub9c8\uc874 EKS \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 \uae30\ubcf8 \uc774\ubbf8\uc9c0 \uc5ed\ud560\uc744 \ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. AMI\ub294 \uc989\uc2dc Amazon EKS\uc640 \ud568\uaed8 \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc73c\uba70 \ub3c4\ucee4, kubelet \ubc0f AWS IAM \uc778\uc99d\uae30\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. AWS \uc2dc\uc2a4\ud15c \uad00\ub9ac\uc790 \ud30c\ub77c\ubbf8\ud130 \uc2a4\ud1a0\uc5b4 API\ub97c \ucffc\ub9ac\ud558\uc5ec Amazon EKS \ucd5c\uc801\ud654 AMI\uc6a9 \uc544\ub9c8\uc874 \uba38\uc2e0 \uc774\ubbf8\uc9c0 (AMI) ID\ub97c \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc73c\ub85c \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\ub77c\ubbf8\ud130\ub97c \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ucd5c\uc801\ud654 AMI ID\ub97c \uc218\ub3d9\uc73c\ub85c \ucc3e\uc544\ubcfc \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\uc2dc\uc2a4\ud15c \uad00\ub9ac\uc790 \ud30c\ub77c\ubbf8\ud130 \uc2a4\ud1a0\uc5b4 API\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 GetParameter \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.Amazon EKS \ucd5c\uc801\ud654 AMI \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac80\uc0c9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uacc4\uc815\uc5d0 SSM:GetParameter IAM \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019 LTSC \ucf54\uc5b4\uc6a9 \ucd5c\uc2e0 \uc544\ub9c8\uc874 EKS \ucd5c\uc801\ud654 AMI\uc758 AMI ID\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.AMI \uc774\ub984\uc5d0 \ub098\uc5f4\ub41c \ubc84\uc804 \ubc88\ud638\ub294 \uc900\ube44\ub41c \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ube4c\ub4dc\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. aws ssm get-parameter --name /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-EKS_Optimized-1.21/image_id --region us-east-1 --query \"Parameter.Value\" --output text \uc608\uc81c \ucd9c\ub825: ami-09770b3eec4552d4e Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \uc790\uccb4\uc801\uc778 \uc708\ub3c4\uc6b0 AMI \uad00\ub9ac \u00b6 \ud504\ub85c\ub355\uc158 \ud658\uacbd\uc744 \ud5a5\ud55c \ud544\uc218 \ub2e8\uacc4\ub294 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c Amazon EKS \ucd5c\uc801\ud654 Windows AMI \ubc0f kubelet \ubc84\uc804\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c \ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\uba74 \ubb38\uc81c \ud574\uacb0 \uc2dc\uac04\uc774 \ub2e8\ucd95\ub418\uace0 \ud074\ub7ec\uc2a4\ud130 \uc77c\uad00\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. Amazon EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 \ub97c \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc0ac\uc6a9\uc790 \uc9c0\uc815 Amazon EKS \ucd5c\uc801\ud654 Windows AMI\ub97c \uc0dd\uc131\ud558\uace0 \uc720\uc9c0 \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub9c8\uc874 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc708\ub3c4\uc6b0 \uc11c\ubc84 \ubc84\uc804, AWS \uc708\ub3c4\uc6b0 \uc11c\ubc84 AMI \ucd9c\uc2dc\uc77c \ubc0f/\ub610\ub294 OS \ube4c\ub4dc \ubc84\uc804 \uc911\uc5d0\uc11c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uad6c\uc131 \uc694\uc18c \ube4c\ub4dc \ub2e8\uacc4\uc5d0\uc11c\ub294 \uae30\uc874 EKS \ucd5c\uc801\ud654 Windows \uc544\ud2f0\ud329\ud2b8\uc640 kubelet \ubc84\uc804 \uc911\uc5d0\uc11c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/eks/latest/userguide/eks-custom-ami-windows.html \uc5d0\uc11c \ud655\uc778 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ucc38\uace0: \uae30\ubcf8 \uc774\ubbf8\uc9c0\ub97c \uc120\ud0dd\ud558\uae30 \uc804\uc5d0 Windows Server \ubc84\uc804 \ubc0f \ub77c\uc774\uc120\uc2a4 \uc139\uc158\uc5d0\uc11c \ub9b4\ub9ac\uc2a4 \ucc44\ub110 \uc5c5\ub370\uc774\ud2b8\uc640 \uad00\ub828\ub41c \uc911\uc694\ud55c \uc138\ubd80 \uc815\ubcf4\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc0ac\uc6a9\uc790 \uc9c0\uc815 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc704\ud55c \ub354 \ube60\ub978 \uc2dc\uc791 \uad6c\uc131 \u00b6 \uc0ac\uc6a9\uc790 \uc9c0\uc815 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ube60\ub978 \uc2e4\ud589 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud558\uc5ec Windows \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ucd5c\ub300 65% \ub354 \ube60\ub974\uac8c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uae30\ub2a5\uc740 Sysprep specialize , __Windows Out of Box Experience (OOBE)_ \ub2e8\uacc4 \ubc0f \ud544\uc218 \uc7ac\ubd80\ud305\uc774 \uc774\ubbf8 \uc644\ub8cc\ub41c \uc0ac\uc804 \ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc2a4\ub0c5\uc0f7 \uc138\ud2b8\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc2a4\ub0c5\uc0f7\uc740 \uc774\ud6c4 \uc2e4\ud589 \uc2dc \uc0ac\uc6a9\ub418\ubbc0\ub85c \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\uac70\ub098 \uad50\uccb4\ud558\ub294 \uc2dc\uac04\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fast Launch\ub294 EC2 \ucf58\uc194 \ub610\ub294 AWS CLI\ub97c \ud1b5\ud574 \uc18c\uc720\ud55c AMI\uc5d0 \ub300\ud574\uc11c\ub9cc \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc73c\uba70 \uc720\uc9c0 \uad00\ub9ac\ub418\ub294 \uc2a4\ub0c5\uc0f7\uc758 \uc218\ub294 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning Fast Launch\ub294 Amazon\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uae30\ubcf8 EKS \ucd5c\uc801\ud654 AMI\uc640 \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud65c\uc131\ud654\ud558\uae30 \uc804\uc5d0 \uc704\uc640 \uac19\uc774 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. AWS Windows AMI - \ub354 \ube60\ub978 \uc2dc\uc791\uc744 \uc704\ud55c AMI \uad6c\uc131 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\uc5d0 \uc708\ub3c4\uc6b0 \ubca0\uc774\uc2a4 \ub808\uc774\uc5b4 \uce90\uc2f1 \u00b6 Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 Linux \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ubcf4\ub2e4 \ud07d\ub2c8\ub2e4. \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019 LTSC \ucf54\uc5b4\uc758 \uae30\ubcf8 \uc774\ubbf8\uc9c0\ub294 \ub514\uc2a4\ud06c \uc6a9\ub7c9 5.74GB\uc785\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \uae30\ubcf8 \uc774\ubbf8\uc9c0\uc5d0\uc11c .NET Framework 4.8 \uc804\uccb4 \uc81c\ud488\uad70\uc744 \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ud06c\uae30\uac00 8.24GB\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4.\uc0c8 Windows \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub3d9\uc548 \uc9c0\uc5f0\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub97c \ud1b5\ud55c \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \uc0ac\uc6a9\ud558\ub294 \ub3d9\uc548 Windows \uae30\ubcf8 \uacc4\uce35 \uce90\uc2f1 \uc804\ub7b5\uc744 \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uc800\uc7a5\uc18c\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub294(Pulling) \uc791\uc5c5\uc740 OS \uc785\uc7a5\uc5d0\uc11c \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc791\uc5c5\uc774 \uc544\ub2c8\uc9c0\ub9cc \ucd94\ucd9c \uc791\uc5c5\uc740 \uc774\ubbf8\uc9c0\uc5d0 \ud3ec\ud568\ub41c \ub808\uc774\uc5b4\uc758 \ud06c\uae30\uc640 \uc218\uc5d0 \ub530\ub77c \uba87 \ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Windows \uc11c\ubc84 \ubc0f \ucee8\ud14c\uc774\ub108 \ud328\uce58 \uc801\uc6a9 \ud56d\ubaa9\uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc EKS\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uad6c\ucd95\ud560 \uc218 \uc788\ub294 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4.AMI \uc900\ube44 \uc911\uc5d0 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 \uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uc5ec \ud544\uc694\ud55c \ubaa8\ub4e0 Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ub85c\uceec\ub85c \uac00\uc838\uc628 \ub2e4\uc74c AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\uac00 \uc2e4\ud589 \uc911(Running) \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud558\ub294 \uc2dc\uac04\uc744 \ud06c\uac8c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354\uc5d0\uc11c \uad6c\uc131 \uc694\uc18c \ub97c \uc0dd\uc131\ud558\uc5ec \ud544\uc694\ud55c \uc774\ubbf8\uc9c0\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \uc774\ubbf8\uc9c0 \ub808\uc2dc\ud53c\uc5d0 \ucca8\ubd80\ud569\ub2c8\ub2e4.\ub2e4\uc74c \uc608\uc81c\ub294 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \ud2b9\uc815 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc635\ub2c8\ub2e4. name: DockerPull description: This component pulls the necessary containers images for a cache strategy. schemaVersion: 1.0 phases: - name: build steps: - name: Dockerpull action: ExecutePowerShell inputs: commands: - Set-ExecutionPolicy Unrestricted -Force - (Get-ECRLoginCommand).Password | docker login --username AWS --password-stdin 111000111000.dkr.ecr.us-east-1.amazonaws.com - docker pull 111000111000.dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-servercore-ltsc2019 \ub2e4\uc74c \uad6c\uc131 \uc694\uc18c\uac00 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 (EC2InstanceProfileForImageBuilder) \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 IAM \uc5ed\ud560\uc5d0 \uc5f0\uacb0\ub41c \uc815\ucc45\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \uc708\ub3c4\uc6b0 AMI \uad00\ub9ac"},{"location":"windows/docs/ami.kr/#amazon-eks-ami","text":"Amazon EKS \ucd5c\uc801\ud654 AMI\ub294 \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019\ub97c \uae30\ubc18\uc73c\ub85c \uad6c\ucd95\ub418\uc5c8\uc73c\uba70, \uc544\ub9c8\uc874 EKS \uc708\ub3c4\uc6b0 \ub178\ub4dc\uc758 \uae30\ubcf8 \uc774\ubbf8\uc9c0 \uc5ed\ud560\uc744 \ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. AMI\ub294 \uc989\uc2dc Amazon EKS\uc640 \ud568\uaed8 \uc791\ub3d9\ud558\ub3c4\ub85d \uad6c\uc131\ub418\uc5b4 \uc788\uc73c\uba70 \ub3c4\ucee4, kubelet \ubc0f AWS IAM \uc778\uc99d\uae30\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. AWS \uc2dc\uc2a4\ud15c \uad00\ub9ac\uc790 \ud30c\ub77c\ubbf8\ud130 \uc2a4\ud1a0\uc5b4 API\ub97c \ucffc\ub9ac\ud558\uc5ec Amazon EKS \ucd5c\uc801\ud654 AMI\uc6a9 \uc544\ub9c8\uc874 \uba38\uc2e0 \uc774\ubbf8\uc9c0 (AMI) ID\ub97c \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc73c\ub85c \uac80\uc0c9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774 \ud30c\ub77c\ubbf8\ud130\ub97c \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ucd5c\uc801\ud654 AMI ID\ub97c \uc218\ub3d9\uc73c\ub85c \ucc3e\uc544\ubcfc \ud544\uc694\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.\uc2dc\uc2a4\ud15c \uad00\ub9ac\uc790 \ud30c\ub77c\ubbf8\ud130 \uc2a4\ud1a0\uc5b4 API\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 GetParameter \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.Amazon EKS \ucd5c\uc801\ud654 AMI \uba54\ud0c0\ub370\uc774\ud130\ub97c \uac80\uc0c9\ud558\ub824\uba74 \uc0ac\uc6a9\uc790 \uacc4\uc815\uc5d0 SSM:GetParameter IAM \uad8c\ud55c\uc774 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ub2e4\uc74c \uc608\uc81c\ub294 \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019 LTSC \ucf54\uc5b4\uc6a9 \ucd5c\uc2e0 \uc544\ub9c8\uc874 EKS \ucd5c\uc801\ud654 AMI\uc758 AMI ID\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.AMI \uc774\ub984\uc5d0 \ub098\uc5f4\ub41c \ubc84\uc804 \ubc88\ud638\ub294 \uc900\ube44\ub41c \ud574\ub2f9 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ube4c\ub4dc\uc640 \uad00\ub828\uc774 \uc788\uc2b5\ub2c8\ub2e4. aws ssm get-parameter --name /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-EKS_Optimized-1.21/image_id --region us-east-1 --query \"Parameter.Value\" --output text \uc608\uc81c \ucd9c\ub825: ami-09770b3eec4552d4e","title":"Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \uc708\ub3c4\uc6b0 AMI \uad00\ub9ac"},{"location":"windows/docs/ami.kr/#amazon-eks-ami_1","text":"\ud504\ub85c\ub355\uc158 \ud658\uacbd\uc744 \ud5a5\ud55c \ud544\uc218 \ub2e8\uacc4\ub294 Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c Amazon EKS \ucd5c\uc801\ud654 Windows AMI \ubc0f kubelet \ubc84\uc804\uc744 \uc720\uc9c0 \uad00\ub9ac\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. Amazon EKS \ud074\ub7ec\uc2a4\ud130 \uc804\uccb4\uc5d0\uc11c \ub3d9\uc77c\ud55c \ubc84\uc804\uc744 \uc0ac\uc6a9\ud558\uba74 \ubb38\uc81c \ud574\uacb0 \uc2dc\uac04\uc774 \ub2e8\ucd95\ub418\uace0 \ud074\ub7ec\uc2a4\ud130 \uc77c\uad00\uc131\uc774 \ud5a5\uc0c1\ub429\ub2c8\ub2e4. Amazon EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 \ub97c \uc0ac\uc6a9\ud558\uba74 Amazon EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \uc0ac\uc6a9\ud560 \uc0ac\uc6a9\uc790 \uc9c0\uc815 Amazon EKS \ucd5c\uc801\ud654 Windows AMI\ub97c \uc0dd\uc131\ud558\uace0 \uc720\uc9c0 \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub9c8\uc874 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc708\ub3c4\uc6b0 \uc11c\ubc84 \ubc84\uc804, AWS \uc708\ub3c4\uc6b0 \uc11c\ubc84 AMI \ucd9c\uc2dc\uc77c \ubc0f/\ub610\ub294 OS \ube4c\ub4dc \ubc84\uc804 \uc911\uc5d0\uc11c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uad6c\uc131 \uc694\uc18c \ube4c\ub4dc \ub2e8\uacc4\uc5d0\uc11c\ub294 \uae30\uc874 EKS \ucd5c\uc801\ud654 Windows \uc544\ud2f0\ud329\ud2b8\uc640 kubelet \ubc84\uc804 \uc911\uc5d0\uc11c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 https://docs.aws.amazon.com/eks/latest/userguide/eks-custom-ami-windows.html \uc5d0\uc11c \ud655\uc778 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ucc38\uace0: \uae30\ubcf8 \uc774\ubbf8\uc9c0\ub97c \uc120\ud0dd\ud558\uae30 \uc804\uc5d0 Windows Server \ubc84\uc804 \ubc0f \ub77c\uc774\uc120\uc2a4 \uc139\uc158\uc5d0\uc11c \ub9b4\ub9ac\uc2a4 \ucc44\ub110 \uc5c5\ub370\uc774\ud2b8\uc640 \uad00\ub828\ub41c \uc911\uc694\ud55c \uc138\ubd80 \uc815\ubcf4\ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624.","title":"Amazon EKS\uc5d0 \ucd5c\uc801\ud654\ub41c \uc790\uccb4\uc801\uc778 \uc708\ub3c4\uc6b0 AMI \uad00\ub9ac"},{"location":"windows/docs/ami.kr/#eks-ami","text":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc0ac\uc6a9\ud560 \uacbd\uc6b0 \ube60\ub978 \uc2e4\ud589 \uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud558\uc5ec Windows \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \ucd5c\ub300 65% \ub354 \ube60\ub974\uac8c \uc2dc\uc791\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uae30\ub2a5\uc740 Sysprep specialize , __Windows Out of Box Experience (OOBE)_ \ub2e8\uacc4 \ubc0f \ud544\uc218 \uc7ac\ubd80\ud305\uc774 \uc774\ubbf8 \uc644\ub8cc\ub41c \uc0ac\uc804 \ud504\ub85c\ube44\uc800\ub2dd\ub41c \uc2a4\ub0c5\uc0f7 \uc138\ud2b8\ub97c \uc720\uc9c0 \uad00\ub9ac\ud569\ub2c8\ub2e4.\uc774\ub7ec\ud55c \uc2a4\ub0c5\uc0f7\uc740 \uc774\ud6c4 \uc2e4\ud589 \uc2dc \uc0ac\uc6a9\ub418\ubbc0\ub85c \ub178\ub4dc\ub97c \ud655\uc7a5\ud558\uac70\ub098 \uad50\uccb4\ud558\ub294 \uc2dc\uac04\uc744 \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Fast Launch\ub294 EC2 \ucf58\uc194 \ub610\ub294 AWS CLI\ub97c \ud1b5\ud574 \uc18c\uc720\ud55c AMI\uc5d0 \ub300\ud574\uc11c\ub9cc \ud65c\uc131\ud654\ud560 \uc218 \uc788\uc73c\uba70 \uc720\uc9c0 \uad00\ub9ac\ub418\ub294 \uc2a4\ub0c5\uc0f7\uc758 \uc218\ub294 \uad6c\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Warning Fast Launch\ub294 Amazon\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uae30\ubcf8 EKS \ucd5c\uc801\ud654 AMI\uc640 \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud65c\uc131\ud654\ud558\uae30 \uc804\uc5d0 \uc704\uc640 \uac19\uc774 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uc0dd\uc131\ud558\uc2ed\uc2dc\uc624. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ub2e4\uc74c\uc744 \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. AWS Windows AMI - \ub354 \ube60\ub978 \uc2dc\uc791\uc744 \uc704\ud55c AMI \uad6c\uc131","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc704\ud55c \ub354 \ube60\ub978 \uc2dc\uc791 \uad6c\uc131"},{"location":"windows/docs/ami.kr/#ami","text":"Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub294 Linux \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ubcf4\ub2e4 \ud07d\ub2c8\ub2e4. \uc708\ub3c4\uc6b0 \uc11c\ubc84 2019 LTSC \ucf54\uc5b4\uc758 \uae30\ubcf8 \uc774\ubbf8\uc9c0\ub294 \ub514\uc2a4\ud06c \uc6a9\ub7c9 5.74GB\uc785\ub2c8\ub2e4. \ub3d9\uc77c\ud55c \uae30\ubcf8 \uc774\ubbf8\uc9c0\uc5d0\uc11c .NET Framework 4.8 \uc804\uccb4 \uc81c\ud488\uad70\uc744 \uc2e4\ud589\ud558\ub294 \uacbd\uc6b0 \ud06c\uae30\uac00 8.24GB\ub85c \ub298\uc5b4\ub0a9\ub2c8\ub2e4.\uc0c8 Windows \ub178\ub4dc\uc5d0\uc11c \ud30c\ub4dc\ub97c \uc2dc\uc791\ud558\ub294 \ub3d9\uc548 \uc9c0\uc5f0\uc774 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub3c4\ub85d \ud558\ub824\uba74 \ud074\ub7ec\uc2a4\ud130 \uc624\ud1a0\uc2a4\ucf00\uc77c\ub7ec \ub97c \ud1b5\ud55c \uc790\ub3d9 \ud06c\uae30 \uc870\uc815\uc744 \uc0ac\uc6a9\ud558\ub294 \ub3d9\uc548 Windows \uae30\ubcf8 \uacc4\uce35 \uce90\uc2f1 \uc804\ub7b5\uc744 \uad6c\ud604\ud574\uc57c \ud569\ub2c8\ub2e4. \uc800\uc7a5\uc18c\uc5d0\uc11c \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc624\ub294(Pulling) \uc791\uc5c5\uc740 OS \uc785\uc7a5\uc5d0\uc11c \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uc791\uc5c5\uc774 \uc544\ub2c8\uc9c0\ub9cc \ucd94\ucd9c \uc791\uc5c5\uc740 \uc774\ubbf8\uc9c0\uc5d0 \ud3ec\ud568\ub41c \ub808\uc774\uc5b4\uc758 \ud06c\uae30\uc640 \uc218\uc5d0 \ub530\ub77c \uba87 \ubd84\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Windows \uc11c\ubc84 \ubc0f \ucee8\ud14c\uc774\ub108 \ud328\uce58 \uc801\uc6a9 \ud56d\ubaa9\uc5d0\uc11c \uc124\uba85\ud55c \uac83\ucc98\ub7fc EKS\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub97c \uad6c\ucd95\ud560 \uc218 \uc788\ub294 \uc635\uc158\uc774 \uc788\uc2b5\ub2c8\ub2e4.AMI \uc900\ube44 \uc911\uc5d0 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 \uad6c\uc131 \uc694\uc18c\ub97c \ucd94\uac00\ud558\uc5ec \ud544\uc694\ud55c \ubaa8\ub4e0 Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ub85c\uceec\ub85c \uac00\uc838\uc628 \ub2e4\uc74c AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \uc804\ub7b5\uc744 \uc0ac\uc6a9\ud558\uba74 \ud3ec\ub4dc\uac00 \uc2e4\ud589 \uc911(Running) \uc0c1\ud0dc\uc5d0 \ub3c4\ub2ec\ud558\ub294 \uc2dc\uac04\uc744 \ud06c\uac8c \uc904\uc77c \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354\uc5d0\uc11c \uad6c\uc131 \uc694\uc18c \ub97c \uc0dd\uc131\ud558\uc5ec \ud544\uc694\ud55c \uc774\ubbf8\uc9c0\ub97c \ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0 \uc774\ubbf8\uc9c0 \ub808\uc2dc\ud53c\uc5d0 \ucca8\ubd80\ud569\ub2c8\ub2e4.\ub2e4\uc74c \uc608\uc81c\ub294 ECR \ub9ac\ud3ec\uc9c0\ud1a0\ub9ac\uc5d0\uc11c \ud2b9\uc815 \uc774\ubbf8\uc9c0\ub97c \uac00\uc838\uc635\ub2c8\ub2e4. name: DockerPull description: This component pulls the necessary containers images for a cache strategy. schemaVersion: 1.0 phases: - name: build steps: - name: Dockerpull action: ExecutePowerShell inputs: commands: - Set-ExecutionPolicy Unrestricted -Force - (Get-ECRLoginCommand).Password | docker login --username AWS --password-stdin 111000111000.dkr.ecr.us-east-1.amazonaws.com - docker pull 111000111000.dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-servercore-ltsc2019 \ub2e4\uc74c \uad6c\uc131 \uc694\uc18c\uac00 \uc608\uc0c1\ub300\ub85c \uc791\ub3d9\ud558\ub294\uc9c0 \ud655\uc778\ud558\ub824\uba74 EC2 \uc774\ubbf8\uc9c0 \ube4c\ub354 (EC2InstanceProfileForImageBuilder) \uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 IAM \uc5ed\ud560\uc5d0 \uc5f0\uacb0\ub41c \uc815\ucc45\uc774 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2ed\uc2dc\uc624.","title":"\uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\uc5d0 \uc708\ub3c4\uc6b0 \ubca0\uc774\uc2a4 \ub808\uc774\uc5b4 \uce90\uc2f1"},{"location":"windows/docs/ami/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Amazon EKS optimized Windows AMI management \u00b6 The Amazon EKS optimized AMI is built on top of Windows Server 2019, and is configured to serve as the base image for Amazon EKS Windows nodes. The AMI is configured to work with Amazon EKS out of the box, and it includes Docker, the kubelet, and the AWS IAM Authenticator. You can programmatically retrieve the Amazon Machine Image (AMI) ID for Amazon EKS optimized AMIs by querying the AWS Systems Manager Parameter Store API. This parameter eliminates the need for you to manually look up Amazon EKS optimized AMI IDs. For more information about the Systems Manager Parameter Store API, see GetParameter . Your user account must have the ssm:GetParameter IAM permission to retrieve the Amazon EKS optimized AMI metadata. The following example retrieves the AMI ID for the latest Amazon EKS optimized AMI for Windows Server 2019 LTSC Core. The version number listed in the AMI name relates to the corresponding Kubernetes build it is prepared for. aws ssm get-parameter --name /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-EKS_Optimized-1.21/image_id --region us-east-1 --query \"Parameter.Value\" --output text Example output: ami-09770b3eec4552d4e Managing your own Amazon EKS optimized Windows AMI \u00b6 An essential step towards production environments is maintaining the same Amazon EKS optimized Windows AMI and kubelet version across the Amazon EKS cluster. Using the same version across the Amazon EKS cluster reduces the time during troubleshooting and increases cluster consistency. Amazon EC2 Image Builder helps create and maintain custom Amazon EKS optimized Windows AMIs to be used across an Amazon EKS cluster. Use Amazon EC2 Image Builder to select between Windows Server versions, AWS Windows Server AMI release dates, and/or OS build version. The build components step, allows you to select between existing EKS Optimized Windows Artifacts as well as the kubelet versions. For more information: https://docs.aws.amazon.com/eks/latest/userguide/eks-custom-ami-windows.html NOTE: Prior to selecting a base image, consult the Windows Server Version and License section for important details pertaining to release channel updates. Configuring faster launching for custom EKS optimized AMIs \u00b6 When using a custom EKS Optimized AMI, Windows worker nodes can be launched up to 65% faster by enabling the Fast Launch feature. This feature maintains a set of pre-provisioned snapshots which have the Sysprep specialize , Windows Out of Box Experience (OOBE) steps and required reboots already completed. These snapshots are then used on subsequent launches, reducing the time to scale-out or replace nodes. Fast Launch can be only enabled for AMIs you own through the EC2 console or in the AWS CLI and the number of snapshots maintained is configurable. Warning Fast Launch is not compatible with the default Amazon-provided EKS optimized AMI, create a custom AMI as above before attempting to enable it. For more information: AWS Windows AMIs - Configure your AMI for faster launching Caching Windows base layers on custom AMIs \u00b6 Windows container images are larger than their Linux counterparts. A base image of Windows Server 2019 LTSC Core is 5.74GB on disk. If you are running the full suite of .NET Framework 4.8 on the same base image, the size grows to 8.24GB. It is essential to implement a Windows base layer caching strategy while using Auto-Scaling through Cluster Autoscaler in order to avoid delays during a pod launch on a new Windows node. Pulling the image from the repository isn't an expensive operation for the OS; however, the extraction operation may take minutes depending on the size and number of layers an image contains. As mentioned in the Patching Windows Server and Container topic, there is an option to build a custom AMI with EKS. During the AMI preparation, you can add an additional EC2 Image builder component to pull all the necessary Windows container images locally and then generate the AMI. This strategy will drastically reduce the time a pod reaches the status Running . On Amazon EC2 Image Builder, create a component to download the necessary images and attach it to the Image recipe. The following example pulls a specific image from a ECR repository. name: DockerPull description: This component pulls the necessary containers images for a cache strategy. schemaVersion: 1.0 phases: - name: build steps: - name: Dockerpull action: ExecutePowerShell inputs: commands: - Set-ExecutionPolicy Unrestricted -Force - (Get-ECRLoginCommand).Password | docker login --username AWS --password-stdin 111000111000.dkr.ecr.us-east-1.amazonaws.com - docker pull 111000111000.dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-servercore-ltsc2019 To make sure the following component works as expected, check if the IAM role used by EC2 Image builder (EC2InstanceProfileForImageBuilder) has the attached policies:","title":"AMI Management ({'name': 'English', 'build': True})"},{"location":"windows/docs/ami/#amazon-eks-optimized-windows-ami-management","text":"The Amazon EKS optimized AMI is built on top of Windows Server 2019, and is configured to serve as the base image for Amazon EKS Windows nodes. The AMI is configured to work with Amazon EKS out of the box, and it includes Docker, the kubelet, and the AWS IAM Authenticator. You can programmatically retrieve the Amazon Machine Image (AMI) ID for Amazon EKS optimized AMIs by querying the AWS Systems Manager Parameter Store API. This parameter eliminates the need for you to manually look up Amazon EKS optimized AMI IDs. For more information about the Systems Manager Parameter Store API, see GetParameter . Your user account must have the ssm:GetParameter IAM permission to retrieve the Amazon EKS optimized AMI metadata. The following example retrieves the AMI ID for the latest Amazon EKS optimized AMI for Windows Server 2019 LTSC Core. The version number listed in the AMI name relates to the corresponding Kubernetes build it is prepared for. aws ssm get-parameter --name /aws/service/ami-windows-latest/Windows_Server-2019-English-Core-EKS_Optimized-1.21/image_id --region us-east-1 --query \"Parameter.Value\" --output text Example output: ami-09770b3eec4552d4e","title":"Amazon EKS optimized Windows AMI management"},{"location":"windows/docs/ami/#managing-your-own-amazon-eks-optimized-windows-ami","text":"An essential step towards production environments is maintaining the same Amazon EKS optimized Windows AMI and kubelet version across the Amazon EKS cluster. Using the same version across the Amazon EKS cluster reduces the time during troubleshooting and increases cluster consistency. Amazon EC2 Image Builder helps create and maintain custom Amazon EKS optimized Windows AMIs to be used across an Amazon EKS cluster. Use Amazon EC2 Image Builder to select between Windows Server versions, AWS Windows Server AMI release dates, and/or OS build version. The build components step, allows you to select between existing EKS Optimized Windows Artifacts as well as the kubelet versions. For more information: https://docs.aws.amazon.com/eks/latest/userguide/eks-custom-ami-windows.html NOTE: Prior to selecting a base image, consult the Windows Server Version and License section for important details pertaining to release channel updates.","title":"Managing your own Amazon EKS optimized Windows AMI"},{"location":"windows/docs/ami/#configuring-faster-launching-for-custom-eks-optimized-amis","text":"When using a custom EKS Optimized AMI, Windows worker nodes can be launched up to 65% faster by enabling the Fast Launch feature. This feature maintains a set of pre-provisioned snapshots which have the Sysprep specialize , Windows Out of Box Experience (OOBE) steps and required reboots already completed. These snapshots are then used on subsequent launches, reducing the time to scale-out or replace nodes. Fast Launch can be only enabled for AMIs you own through the EC2 console or in the AWS CLI and the number of snapshots maintained is configurable. Warning Fast Launch is not compatible with the default Amazon-provided EKS optimized AMI, create a custom AMI as above before attempting to enable it. For more information: AWS Windows AMIs - Configure your AMI for faster launching","title":"Configuring faster launching for custom EKS optimized AMIs"},{"location":"windows/docs/ami/#caching-windows-base-layers-on-custom-amis","text":"Windows container images are larger than their Linux counterparts. A base image of Windows Server 2019 LTSC Core is 5.74GB on disk. If you are running the full suite of .NET Framework 4.8 on the same base image, the size grows to 8.24GB. It is essential to implement a Windows base layer caching strategy while using Auto-Scaling through Cluster Autoscaler in order to avoid delays during a pod launch on a new Windows node. Pulling the image from the repository isn't an expensive operation for the OS; however, the extraction operation may take minutes depending on the size and number of layers an image contains. As mentioned in the Patching Windows Server and Container topic, there is an option to build a custom AMI with EKS. During the AMI preparation, you can add an additional EC2 Image builder component to pull all the necessary Windows container images locally and then generate the AMI. This strategy will drastically reduce the time a pod reaches the status Running . On Amazon EC2 Image Builder, create a component to download the necessary images and attach it to the Image recipe. The following example pulls a specific image from a ECR repository. name: DockerPull description: This component pulls the necessary containers images for a cache strategy. schemaVersion: 1.0 phases: - name: build steps: - name: Dockerpull action: ExecutePowerShell inputs: commands: - Set-ExecutionPolicy Unrestricted -Force - (Get-ECRLoginCommand).Password | docker login --username AWS --password-stdin 111000111000.dkr.ecr.us-east-1.amazonaws.com - docker pull 111000111000.dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-servercore-ltsc2019 To make sure the following component works as expected, check if the IAM role used by EC2 Image builder (EC2InstanceProfileForImageBuilder) has the attached policies:","title":"Caching Windows base layers on custom AMIs"},{"location":"windows/docs/gmsa.kr/","text":"{'name': 'English', 'build': True} \uc708\ub3c4\uc6b0 \ud30c\ub4dc\uc640 \ucee8\ud14c\uc774\ub108\ub97c \uc704\ud55c gMSA \uc124\uc815 \u00b6 GMSA \uacc4\uc815\uc774\ub780 \ubb34\uc5c7\uc785\ub2c8\uae4c? \u00b6 .NET \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \uac19\uc740 Windows \uae30\ubc18 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \ub300\uac1c Active Directory\ub97c ID \uacf5\uae09\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec NTLM \ub610\ub294 Kerberos \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad8c\ud55c \ubd80\uc5ec/\uc778\uc99d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kerberos \ud2f0\ucf13\uc744 Active Directory\uc640 \uad50\ud658\ud558\ub824\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc11c\ubc84\uac00 \ub3c4\uba54\uc778\uc5d0 \uac00\uc785\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.Windows \ucee8\ud14c\uc774\ub108\ub294 \ub3c4\uba54\uc778 \uc870\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc73c\uba70 \ucee8\ud14c\uc774\ub108\ub294 \uc784\uc2dc \ub9ac\uc18c\uc2a4\uc774\ubbc0\ub85c \uc758\ubbf8\uac00 \uc5c6\uc5b4 Active Directory RID \ud480\uc5d0 \ubd80\ub2f4\uc774 \ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uad00\ub9ac\uc790\ub294 gMSA Active Directory \uacc4\uc815\uc744 \ud65c\uc6a9\ud558\uc5ec Windows \ucee8\ud14c\uc774\ub108, NLB \ubc0f \uc11c\ubc84 \ud31c\uacfc \uac19\uc740 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c Windows \uc778\uc99d\uc744 \ud611\uc0c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e8\uacc4\ub294 Windows\uc6a9 IIS\ub97c \uc124\uc815\ud558\ub294 \ub2e8\uacc4\uc785\ub2c8\ub2e4. 1.Windows-Auth \uae30\ub2a5\uc740 Windows \uc774\ubbf8\uc9c0\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c IIS\uc5d0 \uc124\uce58\ud558\uc2ed\uc2dc\uc624. 2.\ub124\ud2b8\uc6cc\ud06c \uacc4\uc815\uc73c\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d IIS \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud480 \uc124\uc815 3.\uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 anonymousAuthentication \uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. 4.\uc708\ub3c4\uc6b0 \uc778\uc99d \ud65c\uc131\ud654 RUN Install-WindowsFeature -Name Web-Windows-Auth -IncludeAllSubFeature RUN Import-Module WebAdministration ; Set-ItemProperty 'IIS:\\AppPools\\SiteName' -name processModel.identityType -value 2 RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/anonymousAuthentication' -Name Enabled -Value False -PSPath 'IIS:\\' -Location 'SiteName' RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/windowsAuthentication' -Name Enabled -Value True -PSPath 'IIS:\\' -Location 'SiteName' \uc544\ub9c8\uc874 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c GMSA \ud65c\uc131\ud654 \u00b6 2020\ub144 11\uc6d4, AWS\ub294 GMSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc744 \ub2e8\uacc4\ubcc4\ub85c \ubc1c\ud45c\ud588\uc2b5\ub2c8\ub2e4.\uc774 \uac00\uc774\ub4dc\ub294 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \ud3ec\ud568\ud558\uc5ec Active Directory \uc778\uc99d\uc774 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc2dc\ub098\ub9ac\uc624\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc744 \uc548\ub0b4\ud569\ub2c8\ub2e4. 1.\uc790\uccb4 \uad00\ub9ac\ud615 Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ud3ec\ud568\ub41c EKS \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 2.Windows \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc561\ud2f0\ube0c \ub514\ub809\ud130\ub9ac \ub3c4\uba54\uc778\uc5d0 \uac00\uc785\uc2dc\ud0a4\uae30 3.\uc561\ud2f0\ube0c \ub514\ub809\ud130\ub9ac \ub3c4\uba54\uc778\uc5d0\uc11c GMSA \uacc4\uc815 \uc0dd\uc131 \ubc0f \uad6c\uc131 4.GMSA \uc790\uaca9 \uc99d\uba85 \uc2a4\ud399 CRD \uc124\uce58 5.\uc708\ub3c4\uc6b0 GMSA \uc6f9\ud6c5 \uc5b4\ub4dc\ubbf8\uc158 \ucee8\ud2b8\ub864\ub7ec \uc124\uce58 6.GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591 \ub9ac\uc18c\uc2a4 \uc0dd\uc131 7.\uac01 GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591\uc5d0 \ub300\ud574 \uc815\uc758\ud560 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub864 \uc0dd\uc131 8.\ud2b9\uc815 GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5ed\ud560 \ud560\ub2f9 9.\ucf54\uc5b4 DNS\ub97c \uc0ac\uc6a9\ud558\uc5ec DNS \uc804\ub2ec\uc790 \uad6c\uc131 10.\uc708\ub3c4\uc6b0 \ud30c\ub4dc \uc0ac\uc591\uc5d0\uc11c GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591 \uad6c\uc131\ud558\uae30 11.\uc708\ub3c4\uc6b0 \ud30c\ub4dc \ub0b4\uc5d0\uc11c \uc708\ub3c4\uc6b0 \uc778\uc99d \ud14c\uc2a4\ud2b8\ud558\uae30 \ube14\ub85c\uadf8 \ub9c1\ud06c: https://aws.amazon.com/blogs/containers/windows-authentication-on-amazon-eks-windows-pods/","title":"\uc708\ub3c4\uc6b0 \ud30c\ub4dc\uc640 \ucee8\ud14c\uc774\ub108\ub97c \uc704\ud55c gMSA \uc124\uc815"},{"location":"windows/docs/gmsa.kr/#gmsa","text":"","title":"\uc708\ub3c4\uc6b0 \ud30c\ub4dc\uc640 \ucee8\ud14c\uc774\ub108\ub97c \uc704\ud55c gMSA \uc124\uc815"},{"location":"windows/docs/gmsa.kr/#gmsa_1","text":".NET \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uacfc \uac19\uc740 Windows \uae30\ubc18 \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8\uc740 \ub300\uac1c Active Directory\ub97c ID \uacf5\uae09\uc790\ub85c \uc0ac\uc6a9\ud558\uc5ec NTLM \ub610\ub294 Kerberos \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud558\uc5ec \uad8c\ud55c \ubd80\uc5ec/\uc778\uc99d\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. Kerberos \ud2f0\ucf13\uc744 Active Directory\uc640 \uad50\ud658\ud558\ub824\uba74 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc11c\ubc84\uac00 \ub3c4\uba54\uc778\uc5d0 \uac00\uc785\ub418\uc5b4 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.Windows \ucee8\ud14c\uc774\ub108\ub294 \ub3c4\uba54\uc778 \uc870\uc778\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc73c\uba70 \ucee8\ud14c\uc774\ub108\ub294 \uc784\uc2dc \ub9ac\uc18c\uc2a4\uc774\ubbc0\ub85c \uc758\ubbf8\uac00 \uc5c6\uc5b4 Active Directory RID \ud480\uc5d0 \ubd80\ub2f4\uc774 \ub429\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \uad00\ub9ac\uc790\ub294 gMSA Active Directory \uacc4\uc815\uc744 \ud65c\uc6a9\ud558\uc5ec Windows \ucee8\ud14c\uc774\ub108, NLB \ubc0f \uc11c\ubc84 \ud31c\uacfc \uac19\uc740 \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c Windows \uc778\uc99d\uc744 \ud611\uc0c1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc74c \ub2e8\uacc4\ub294 Windows\uc6a9 IIS\ub97c \uc124\uc815\ud558\ub294 \ub2e8\uacc4\uc785\ub2c8\ub2e4. 1.Windows-Auth \uae30\ub2a5\uc740 Windows \uc774\ubbf8\uc9c0\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc124\uce58\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c IIS\uc5d0 \uc124\uce58\ud558\uc2ed\uc2dc\uc624. 2.\ub124\ud2b8\uc6cc\ud06c \uacc4\uc815\uc73c\ub85c \uc2e4\ud589\ub418\ub3c4\ub85d IIS \uc751\uc6a9 \ud504\ub85c\uadf8\ub7a8 \ud480 \uc124\uc815 3.\uae30\ubcf8\uc801\uc73c\ub85c \ud65c\uc131\ud654\ub418\uc5b4 \uc788\ub294 anonymousAuthentication \uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. 4.\uc708\ub3c4\uc6b0 \uc778\uc99d \ud65c\uc131\ud654 RUN Install-WindowsFeature -Name Web-Windows-Auth -IncludeAllSubFeature RUN Import-Module WebAdministration ; Set-ItemProperty 'IIS:\\AppPools\\SiteName' -name processModel.identityType -value 2 RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/anonymousAuthentication' -Name Enabled -Value False -PSPath 'IIS:\\' -Location 'SiteName' RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/windowsAuthentication' -Name Enabled -Value True -PSPath 'IIS:\\' -Location 'SiteName'","title":"GMSA \uacc4\uc815\uc774\ub780 \ubb34\uc5c7\uc785\ub2c8\uae4c?"},{"location":"windows/docs/gmsa.kr/#eks-gmsa","text":"2020\ub144 11\uc6d4, AWS\ub294 GMSA\ub97c \uc0ac\uc6a9\ud558\ub3c4\ub85d Amazon EKS \ud074\ub7ec\uc2a4\ud130\ub97c \uc124\uc815\ud558\ub294 \ubc29\ubc95\uc744 \ub2e8\uacc4\ubcc4\ub85c \ubc1c\ud45c\ud588\uc2b5\ub2c8\ub2e4.\uc774 \uac00\uc774\ub4dc\ub294 \uc704\uc5d0\uc11c \uc5b8\uae09\ud55c \uc0ac\uc6a9 \uc0ac\ub840\ub97c \ud3ec\ud568\ud558\uc5ec Active Directory \uc778\uc99d\uc774 \ud544\uc694\ud55c \ubaa8\ub4e0 \uc2dc\ub098\ub9ac\uc624\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ube14\ub85c\uadf8 \uac8c\uc2dc\ubb3c\uc5d0\uc11c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ub0b4\uc6a9\uc744 \uc548\ub0b4\ud569\ub2c8\ub2e4. 1.\uc790\uccb4 \uad00\ub9ac\ud615 Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uac00 \ud3ec\ud568\ub41c EKS \ud074\ub7ec\uc2a4\ud130 \uc0dd\uc131 2.Windows \uc6cc\ucee4 \ub178\ub4dc\ub97c \uc561\ud2f0\ube0c \ub514\ub809\ud130\ub9ac \ub3c4\uba54\uc778\uc5d0 \uac00\uc785\uc2dc\ud0a4\uae30 3.\uc561\ud2f0\ube0c \ub514\ub809\ud130\ub9ac \ub3c4\uba54\uc778\uc5d0\uc11c GMSA \uacc4\uc815 \uc0dd\uc131 \ubc0f \uad6c\uc131 4.GMSA \uc790\uaca9 \uc99d\uba85 \uc2a4\ud399 CRD \uc124\uce58 5.\uc708\ub3c4\uc6b0 GMSA \uc6f9\ud6c5 \uc5b4\ub4dc\ubbf8\uc158 \ucee8\ud2b8\ub864\ub7ec \uc124\uce58 6.GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591 \ub9ac\uc18c\uc2a4 \uc0dd\uc131 7.\uac01 GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591\uc5d0 \ub300\ud574 \uc815\uc758\ud560 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130\ub864 \uc0dd\uc131 8.\ud2b9\uc815 GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \uc11c\ube44\uc2a4 \uacc4\uc815\uc5d0 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud074\ub7ec\uc2a4\ud130 \uc5ed\ud560 \ud560\ub2f9 9.\ucf54\uc5b4 DNS\ub97c \uc0ac\uc6a9\ud558\uc5ec DNS \uc804\ub2ec\uc790 \uad6c\uc131 10.\uc708\ub3c4\uc6b0 \ud30c\ub4dc \uc0ac\uc591\uc5d0\uc11c GMSA \uc790\uaca9 \uc99d\uba85 \uc0ac\uc591 \uad6c\uc131\ud558\uae30 11.\uc708\ub3c4\uc6b0 \ud30c\ub4dc \ub0b4\uc5d0\uc11c \uc708\ub3c4\uc6b0 \uc778\uc99d \ud14c\uc2a4\ud2b8\ud558\uae30 \ube14\ub85c\uadf8 \ub9c1\ud06c: https://aws.amazon.com/blogs/containers/windows-authentication-on-amazon-eks-windows-pods/","title":"\uc544\ub9c8\uc874 EKS \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c GMSA \ud65c\uc131\ud654"},{"location":"windows/docs/gmsa/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Configure gMSA for Windows Pods and containers \u00b6 What is a gMSA account \u00b6 Windows-based applications such as .NET applications often use Active Directory as an identity provider, providing authorization/authentication using NTLM or Kerberos protocol. An application server to exchange Kerberos tickets with Active Directory requires to be domain-joined. Windows containers don\u2019t support domain joins and would not make much sense as containers are ephemeral resources, creating a burden on the Active Directory RID pool. However, administrators can leverage gMSA Active Directory accounts to negotiate a Windows authentication for resources such as Windows containers, NLB, and server farms. Windows container and gMSA use case \u00b6 ASP.NET applications that leverage on Windows authentication, and run as Windows containers, benefit from gMSA because the Windows Node is used to exchange the Kerberos ticket on behalf of the container. However, the dockerfile used to build the Windows container image needs configure IIS and enable Windows authentication. The following steps will set up IIS for Windows Authentication: Install the Windows-Auth feature on IIS as it isn't installed by default on a Windows image Setup the IIS Application pool to run under a Network Account Disable anonymousAuthentication which is enabled by default Enable Windows Authentication RUN Install-WindowsFeature -Name Web-Windows-Auth -IncludeAllSubFeature RUN Import-Module WebAdministration ; Set-ItemProperty 'IIS:\\AppPools\\SiteName' -name processModel.identityType -value 2 RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/anonymousAuthentication' -Name Enabled -Value False -PSPath 'IIS:\\' -Location 'SiteName' RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/windowsAuthentication' -Name Enabled -Value True -PSPath 'IIS:\\' -Location 'SiteName' Enabling gMSA on Amazon EKS cluster \u00b6 In November 2020, AWS published a step-by-step on how to set up an Amazon EKS cluster to use gMSA. This guide can be used for any scenario that requires Active Directory authentication, including the use cases mentioned above. The blog post walks-through: Creating an EKS cluster with self-managed Windows worker nodes Joining the Windows worker node to an Active Directory Domain Creating and configure gMSA accounts on Active Directory Domain Installing the gMSA CredentialSpec CRD Installing the Windows gMSA Webhook Admission controller Creating gMSA credential spec resources Creating a Kubernetes ClusterRole to be defined for each gMSA credential spec Assigning the Kubernetes ClusterRole to a service accounts to use specific gMSA credential specs Configuring DNS forwarder with CoreDNS Configuring the gMSA credential spec in the Windows pod spec Testing the Windows Authentication from inside the Windows pod Blog link: https://aws.amazon.com/blogs/containers/windows-authentication-on-amazon-eks-windows-pods/","title":"gMSA for Windows Containers ({'name': 'English', 'build': True})"},{"location":"windows/docs/gmsa/#configure-gmsa-for-windows-pods-and-containers","text":"","title":"Configure gMSA for Windows Pods and containers"},{"location":"windows/docs/gmsa/#what-is-a-gmsa-account","text":"Windows-based applications such as .NET applications often use Active Directory as an identity provider, providing authorization/authentication using NTLM or Kerberos protocol. An application server to exchange Kerberos tickets with Active Directory requires to be domain-joined. Windows containers don\u2019t support domain joins and would not make much sense as containers are ephemeral resources, creating a burden on the Active Directory RID pool. However, administrators can leverage gMSA Active Directory accounts to negotiate a Windows authentication for resources such as Windows containers, NLB, and server farms.","title":"What is a gMSA account"},{"location":"windows/docs/gmsa/#windows-container-and-gmsa-use-case","text":"ASP.NET applications that leverage on Windows authentication, and run as Windows containers, benefit from gMSA because the Windows Node is used to exchange the Kerberos ticket on behalf of the container. However, the dockerfile used to build the Windows container image needs configure IIS and enable Windows authentication. The following steps will set up IIS for Windows Authentication: Install the Windows-Auth feature on IIS as it isn't installed by default on a Windows image Setup the IIS Application pool to run under a Network Account Disable anonymousAuthentication which is enabled by default Enable Windows Authentication RUN Install-WindowsFeature -Name Web-Windows-Auth -IncludeAllSubFeature RUN Import-Module WebAdministration ; Set-ItemProperty 'IIS:\\AppPools\\SiteName' -name processModel.identityType -value 2 RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/anonymousAuthentication' -Name Enabled -Value False -PSPath 'IIS:\\' -Location 'SiteName' RUN Import-Module WebAdministration ; Set-WebConfigurationProperty -Filter '/system.webServer/security/authentication/windowsAuthentication' -Name Enabled -Value True -PSPath 'IIS:\\' -Location 'SiteName'","title":"Windows container and gMSA use case"},{"location":"windows/docs/gmsa/#enabling-gmsa-on-amazon-eks-cluster","text":"In November 2020, AWS published a step-by-step on how to set up an Amazon EKS cluster to use gMSA. This guide can be used for any scenario that requires Active Directory authentication, including the use cases mentioned above. The blog post walks-through: Creating an EKS cluster with self-managed Windows worker nodes Joining the Windows worker node to an Active Directory Domain Creating and configure gMSA accounts on Active Directory Domain Installing the gMSA CredentialSpec CRD Installing the Windows gMSA Webhook Admission controller Creating gMSA credential spec resources Creating a Kubernetes ClusterRole to be defined for each gMSA credential spec Assigning the Kubernetes ClusterRole to a service accounts to use specific gMSA credential specs Configuring DNS forwarder with CoreDNS Configuring the gMSA credential spec in the Windows pod spec Testing the Windows Authentication from inside the Windows pod Blog link: https://aws.amazon.com/blogs/containers/windows-authentication-on-amazon-eks-windows-pods/","title":"Enabling gMSA on Amazon EKS cluster"},{"location":"windows/docs/hardening.kr/","text":"{'name': 'English', 'build': True} Windows \uc6cc\ucee4 \ub178\ub4dc \ud558\ub4dc\ub2dd \u00b6 Windows \uc11c\ubc84 \ud558\ub4dc\ub2dd\uc5d0\ub294 \uc545\uc6a9\ub418\uae30 \uc804\uc5d0 \ubcf4\uc548 \ucde8\uc57d\uc131\uc744 \uc2dd\ubcc4\ud558\uace0 \ud574\uacb0\ud558\ub294 \uc791\uc5c5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. Microsoft\ub294 \uc6b4\uc601 \uccb4\uc81c\uc5d0 \uc801\uc6a9\ud574\uc57c \ud558\ub294 Microsoft \ubcf4\uc548 \uaddc\uc815 \uc900\uc218 \ubc0f \ubcf4\uc548 \uae30\uc900 \uacfc \uac19\uc740 \ub2e4\uc591\ud55c \ub3c4\uad6c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub294 \ud2b9\ud788 Amazon Elastic Kubernetes Service(EKS) \uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Windows \ub178\ub4dc\uc5d0 \ucd08\uc810\uc744 \ub9de\ucda5\ub2c8\ub2e4. Windows \uc11c\ubc84 \ucf54\uc5b4\ub97c \ud1b5\ud55c \uacf5\uaca9 \ub300\uc0c1 \uac10\uc18c \u00b6 Windows \uc11c\ubc84 \ucf54\uc5b4\ub294 EKS \ucd5c\uc801\ud654 Windows AMI \uc758 \uc77c\ubd80\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \uc124\uce58 \uc635\uc158\uc785\ub2c8\ub2e4. Windows \uc11c\ubc84 \ucf54\uc5b4\ub97c \ubc30\ud3ec\ud558\uba74 \uba87 \uac00\uc9c0 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4.\uba3c\uc800, \ub370\uc2a4\ud06c\ud1b1 \ud658\uacbd\uc744 \uc9c0\uc6d0\ud558\ub294 Windows \uc11c\ubc84\uc5d0\uc11c\ub294 10GB\uc5d0 \ube44\ud574 \uc11c\ubc84 \ucf54\uc5b4\uc5d0\uc11c\ub294 6GB\ub77c\ub294 \ub514\uc2a4\ud06c \uc0ac\uc6a9\ub7c9\uc774 \ube44\uad50\uc801 \uc791\uc2b5\ub2c8\ub2e4.\ub458\uc9f8, \ucf54\ub4dc\ubca0\uc774\uc2a4\uac00 \uc791\uae30 \ub54c\ubb38\uc5d0 \uacf5\uaca9 \ub300\uc0c1 \uc601\uc5ed\uc774 \ub354 \uc791\uc2b5\ub2c8\ub2e4. eksctl \ub610\ub294 Cloudformation\uc744 \ud1b5\ud574 \ub178\ub4dc\ub97c \ubc30\ud3ec\ud560 \ub54c Windows\uc6a9 \uc11c\ubc84 \ucf54\uc5b4 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\ub294 Windows \uc11c\ubc84 \ucf54\uc5b4 2004\ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 Windows \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c eksctl \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc785\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false AMiFamily \uc774\ub984 \uaddc\uce59\uc740 eksctl \uacf5\uc2dd \ubb38\uc11c \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. RDP \uc5f0\uacb0 \ucd5c\uc18c\ud654 \u00b6 RDP(Remote Desktop Protocol, \uc6d0\uaca9 \ub370\uc2a4\ud06c\ud1b1 \ud504\ub85c\ud1a0\ucf5c)\ub294 \uc0ac\uc6a9\uc790\uac00 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub2e4\ub978 Windows \ucef4\ud4e8\ud130\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \uadf8\ub798\ud53d \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 Microsoft\uc5d0\uc11c \uac1c\ubc1c\ud55c \uc5f0\uacb0 \ud504\ub85c\ud1a0\ucf5c\uc785\ub2c8\ub2e4. \ubaa8\ubc94\uc0ac\ub840\ub85c\uc11c Windows \uc6cc\ucee4 \ub178\ub4dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uac83\ucc98\ub7fc \ucc98\ub9ac\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc989, \uad00\ub9ac \uc5f0\uacb0\ub3c4, \uc5c5\ub370\uc774\ud2b8\ub3c4 \ud544\uc694 \uc5c6\uace0 \ubb38\uc81c \ud574\uacb0\ub3c4 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4.\ubaa8\ub4e0 \uc218\uc815 \ubc0f \uc5c5\ub370\uc774\ud2b8\ub294 \uc0c8 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub85c \uad6c\ud604\ud558\uace0 Auto Scaling \uadf8\ub8f9\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc73c\ub85c \ub300\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. Windows \uc11c\ubc84 \ubc0f \ucee8\ud14c\uc774\ub108 \ud328\uce58 \uc801\uc6a9 \ubc0f Amazon EKS \ucd5c\uc801\ud654 Windows AMI \uad00\ub9ac \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \uc608\uc640 \uac19\uc774 ssh \uc18d\uc131\uc5d0 false \uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ubc30\ud3ec \uc911\uc5d0 Windows \ub178\ub4dc\uc5d0\uc11c RDP \uc5f0\uacb0\uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false Windows \ub178\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 AWS System Manager Session Manager \ub97c \uc0ac\uc6a9\ud558\uc5ec AWS \ucf58\uc194 \ubc0f SSM \uc5d0\uc774\uc804\ud2b8\ub97c \ud1b5\ud574 \uc548\uc804\ud55c PowerShell \uc138\uc158\uc744 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc194\ub8e8\uc158\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\ub824\uba74 AWS System Manager Session Manager\ub97c \uc0ac\uc6a9\ud558\uc5ec Windows \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc548\uc804\ud558\uac8c \uc561\uc138\uc2a4\ud558\uae30 \ub97c \ucc38\uc870\ud558\uc138\uc694. System Manager Session Manager\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Windows \ub178\ub4dc\uc5d0 \ucd94\uac00 IAM \uc815\ucc45\uc744 \uc801\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc544\ub798\ub294 eksctl \ud074\ub7ec\uc2a4\ud130 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 AmazonSSMManagedInstanceCore \uac00 \uc9c0\uc815\ub41c \uc608\uc785\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false iam : attachPolicyARNs : - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore Amazon Inspector \u00b6 Amazon Inspector \ub294 AWS\uc5d0 \ubc30\ud3ec\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218\ub97c \uac1c\uc120\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc790\ub3d9 \ubcf4\uc548 \ud3c9\uac00 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. Amazon Inspector\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub178\ucd9c, \ucde8\uc57d\uc131 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc640\uc758 \ud3b8\ucc28\ub97c \uc790\ub3d9\uc73c\ub85c \ud3c9\uac00\ud569\ub2c8\ub2e4. \ud3c9\uac00\ub97c \uc218\ud589\ud55c \ud6c4 Amazon Inspector\ub294 \uc2ec\uac01\ub3c4 \uc218\uc900\uc5d0 \ub530\ub77c \uc6b0\uc120 \uc21c\uc704\uac00 \uc9c0\uc815\ub41c \ubcf4\uc548 \uc870\uc0ac \uacb0\uacfc\uc758 \uc138\ubd80 \ubaa9\ub85d\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacb0\uacfc\ub294 \uc9c1\uc811 \uac80\ud1a0\ud558\uac70\ub098 Amazon Inspector \ucf58\uc194 \ub610\ub294 API\ub97c \ud1b5\ud574 \uc81c\uacf5\ub418\ub294 \uc138\ubd80 \ud3c9\uac00 \ubcf4\uace0\uc11c\uc758 \uc77c\ubd80\ub85c \uac80\ud1a0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon Inspector\ub97c \uc0ac\uc6a9\ud558\uc5ec Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c CIS \ubca4\uce58\ub9c8\ud06c \ud3c9\uac00\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc73c\uba70, \ub2e4\uc74c \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc5ec Windows Server Core\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.\ub2e4\uc74c .exe \ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4. https://inspector-agent.amazonaws.com/windows/installer/latest/AWSAgentInstall.exe 2.\uc5d0\uc774\uc804\ud2b8\ub97c Windows \uc791\uc5c5\uc790 \ub178\ub4dc\ub85c \uc804\uc1a1\ud569\ub2c8\ub2e4. 3.PowerShell\uc5d0\uc11c \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \uc544\ub9c8\uc874 \uc778\uc2a4\ud399\ud130 \uc5d0\uc774\uc804\ud2b8\ub97c \uc124\uce58\ud569\ub2c8\ub2e4: .\\ AWSAgentInstall.exe /install \uc544\ub798\ub294 \uccab \uc2e4\ud589 \ud6c4\uc758 \ucd9c\ub825\uc785\ub2c8\ub2e4. \ubcf4\uc2dc\ub2e4\uc2dc\ud53c CVE \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \uac80\uc0c9 \uacb0\uacfc\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uac15\ud654\ud558\uac70\ub098 \uac15\ud654\ub41c \uad6c\uc131\uc744 \uae30\ubc18\uc73c\ub85c AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon Inspector \uc5d0\uc774\uc804\ud2b8 \uc124\uce58, CIS \ubca4\uce58\ub9c8\ud06c \ud3c9\uac00 \uc124\uc815 \ubc0f \ubcf4\uace0\uc11c \uc0dd\uc131 \ubc29\ubc95\uc744 \ud3ec\ud568\ud558\uc5ec Amazon Inspector\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon Inspector\ub97c \ud1b5\ud55c Windows \uc6cc\ud06c\ub85c\ub4dc\uc758 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218 \uac1c\uc120 \ube44\ub514\uc624\ub97c \uc2dc\uccad\ud558\uc2ed\uc2dc\uc624. Amazon GuardDuty \u00b6 Amazon GuardDuty \ub294 \uc545\uc758\uc801\uc778 \ud65c\ub3d9 \ubc0f \ubb34\ub2e8 \ud589\ub3d9\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec AWS \uacc4\uc815, \uc6cc\ud06c\ub85c\ub4dc \ubc0f Amazon S3\uc5d0 \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub97c \ubcf4\ud638\ud558\ub294 \uc704\ud611 \ud0d0\uc9c0 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \ud074\ub77c\uc6b0\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uacc4\uc815 \ubc0f \ub124\ud2b8\uc6cc\ud06c \ud65c\ub3d9\uc758 \uc218\uc9d1 \ubc0f \uc9d1\uacc4\uac00 \ub2e8\uc21c\ud654\ub418\uc9c0\ub9cc \ubcf4\uc548 \ud300\uc774 \uc774\ubca4\ud2b8 \ub85c\uadf8 \ub370\uc774\ud130\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \ubd84\uc11d\ud558\uc5ec \uc7a0\uc7ac\uc801 \uc704\ud611\uc744 \ucc3e\uc544\ub0b4\ub824\uba74 \uc2dc\uac04\uc774 \ub9ce\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon GuardDuty\ub97c \uc0ac\uc6a9\ud558\uba74 RDP \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9 \ubc0f \ud3ec\ud2b8 \ud504\ub85c\ube0c \uacf5\uaca9\uacfc \uac19\uc740 Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud55c \uc545\uc758\uc801\uc778 \ud65c\ub3d9\uc744 \uac00\uc2dc\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon GuardDuty\ub97c \uc0ac\uc6a9\ud55c Windows \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc704\ud611 \ud0d0\uc9c0 \ube44\ub514\uc624\ub97c \uc2dc\uccad\ud558\uc5ec \ucd5c\uc801\ud654\ub41c EKS Windows AMI\uc5d0\uc11c CIS \ubca4\uce58\ub9c8\ud06c\ub97c \uad6c\ud604\ud558\uace0 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624. Windows Amazon EC2\uc758 \ubcf4\uc548 \u00b6 \ubaa8\ub4e0 \uacc4\uce35\uc5d0\uc11c \ubcf4\uc548 \uc81c\uc5b4\ub97c \uad6c\ud604\ud558\ub824\uba74 Amazon EC2 Windows \uc778\uc2a4\ud134\uc2a4\uc758 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \uc77d\uc5b4\ubcf4\uc2ed\uc2dc\uc624.","title":"Hardening.kr"},{"location":"windows/docs/hardening.kr/#windows","text":"Windows \uc11c\ubc84 \ud558\ub4dc\ub2dd\uc5d0\ub294 \uc545\uc6a9\ub418\uae30 \uc804\uc5d0 \ubcf4\uc548 \ucde8\uc57d\uc131\uc744 \uc2dd\ubcc4\ud558\uace0 \ud574\uacb0\ud558\ub294 \uc791\uc5c5\uc774 \ud3ec\ud568\ub429\ub2c8\ub2e4. Microsoft\ub294 \uc6b4\uc601 \uccb4\uc81c\uc5d0 \uc801\uc6a9\ud574\uc57c \ud558\ub294 Microsoft \ubcf4\uc548 \uaddc\uc815 \uc900\uc218 \ubc0f \ubcf4\uc548 \uae30\uc900 \uacfc \uac19\uc740 \ub2e4\uc591\ud55c \ub3c4\uad6c\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub294 \ud2b9\ud788 Amazon Elastic Kubernetes Service(EKS) \uc5d0\uc11c \uc2e4\ud589\ub418\ub294 Windows \ub178\ub4dc\uc5d0 \ucd08\uc810\uc744 \ub9de\ucda5\ub2c8\ub2e4.","title":"Windows \uc6cc\ucee4 \ub178\ub4dc \ud558\ub4dc\ub2dd"},{"location":"windows/docs/hardening.kr/#windows_1","text":"Windows \uc11c\ubc84 \ucf54\uc5b4\ub294 EKS \ucd5c\uc801\ud654 Windows AMI \uc758 \uc77c\ubd80\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \ucd5c\uc18c \uc124\uce58 \uc635\uc158\uc785\ub2c8\ub2e4. Windows \uc11c\ubc84 \ucf54\uc5b4\ub97c \ubc30\ud3ec\ud558\uba74 \uba87 \uac00\uc9c0 \uc774\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4.\uba3c\uc800, \ub370\uc2a4\ud06c\ud1b1 \ud658\uacbd\uc744 \uc9c0\uc6d0\ud558\ub294 Windows \uc11c\ubc84\uc5d0\uc11c\ub294 10GB\uc5d0 \ube44\ud574 \uc11c\ubc84 \ucf54\uc5b4\uc5d0\uc11c\ub294 6GB\ub77c\ub294 \ub514\uc2a4\ud06c \uc0ac\uc6a9\ub7c9\uc774 \ube44\uad50\uc801 \uc791\uc2b5\ub2c8\ub2e4.\ub458\uc9f8, \ucf54\ub4dc\ubca0\uc774\uc2a4\uac00 \uc791\uae30 \ub54c\ubb38\uc5d0 \uacf5\uaca9 \ub300\uc0c1 \uc601\uc5ed\uc774 \ub354 \uc791\uc2b5\ub2c8\ub2e4. eksctl \ub610\ub294 Cloudformation\uc744 \ud1b5\ud574 \ub178\ub4dc\ub97c \ubc30\ud3ec\ud560 \ub54c Windows\uc6a9 \uc11c\ubc84 \ucf54\uc5b4 EKS \ucd5c\uc801\ud654 AMI\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uc608\ub294 Windows \uc11c\ubc84 \ucf54\uc5b4 2004\ub97c \uae30\ubc18\uc73c\ub85c \ud558\ub294 Windows \ub178\ub4dc \uadf8\ub8f9\uc5d0 \ub300\ud55c eksctl \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc785\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false AMiFamily \uc774\ub984 \uaddc\uce59\uc740 eksctl \uacf5\uc2dd \ubb38\uc11c \uc5d0\uc11c \ucc3e\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"Windows \uc11c\ubc84 \ucf54\uc5b4\ub97c \ud1b5\ud55c \uacf5\uaca9 \ub300\uc0c1 \uac10\uc18c"},{"location":"windows/docs/hardening.kr/#rdp","text":"RDP(Remote Desktop Protocol, \uc6d0\uaca9 \ub370\uc2a4\ud06c\ud1b1 \ud504\ub85c\ud1a0\ucf5c)\ub294 \uc0ac\uc6a9\uc790\uac00 \ub124\ud2b8\uc6cc\ud06c\ub97c \ud1b5\ud574 \ub2e4\ub978 Windows \ucef4\ud4e8\ud130\uc5d0 \uc5f0\uacb0\ud560 \uc218 \uc788\ub294 \uadf8\ub798\ud53d \uc778\ud130\ud398\uc774\uc2a4\ub97c \uc81c\uacf5\ud558\uae30 \uc704\ud574 Microsoft\uc5d0\uc11c \uac1c\ubc1c\ud55c \uc5f0\uacb0 \ud504\ub85c\ud1a0\ucf5c\uc785\ub2c8\ub2e4. \ubaa8\ubc94\uc0ac\ub840\ub85c\uc11c Windows \uc6cc\ucee4 \ub178\ub4dc\ub97c \ubcc0\uacbd\ud560 \uc218 \uc5c6\ub294 \uac83\ucc98\ub7fc \ucc98\ub9ac\ud558\ub294 \uac83\uc774 \uac00\uc7a5 \uc88b\uc2b5\ub2c8\ub2e4. \uc989, \uad00\ub9ac \uc5f0\uacb0\ub3c4, \uc5c5\ub370\uc774\ud2b8\ub3c4 \ud544\uc694 \uc5c6\uace0 \ubb38\uc81c \ud574\uacb0\ub3c4 \ud544\uc694 \uc5c6\uc2b5\ub2c8\ub2e4.\ubaa8\ub4e0 \uc218\uc815 \ubc0f \uc5c5\ub370\uc774\ud2b8\ub294 \uc0c8 \uc0ac\uc6a9\uc790 \uc9c0\uc815 AMI\ub85c \uad6c\ud604\ud558\uace0 Auto Scaling \uadf8\ub8f9\uc744 \uc5c5\ub370\uc774\ud2b8\ud558\ub294 \uac83\uc73c\ub85c \ub300\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. Windows \uc11c\ubc84 \ubc0f \ucee8\ud14c\uc774\ub108 \ud328\uce58 \uc801\uc6a9 \ubc0f Amazon EKS \ucd5c\uc801\ud654 Windows AMI \uad00\ub9ac \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. \uc544\ub798 \uc608\uc640 \uac19\uc774 ssh \uc18d\uc131\uc5d0 false \uac12\uc744 \uc804\ub2ec\ud558\uc5ec \ubc30\ud3ec \uc911\uc5d0 Windows \ub178\ub4dc\uc5d0\uc11c RDP \uc5f0\uacb0\uc744 \ube44\ud65c\uc131\ud654\ud569\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false Windows \ub178\ub4dc\uc5d0 \ub300\ud55c \uc561\uc138\uc2a4\uac00 \ud544\uc694\ud55c \uacbd\uc6b0 AWS System Manager Session Manager \ub97c \uc0ac\uc6a9\ud558\uc5ec AWS \ucf58\uc194 \ubc0f SSM \uc5d0\uc774\uc804\ud2b8\ub97c \ud1b5\ud574 \uc548\uc804\ud55c PowerShell \uc138\uc158\uc744 \uc5f0\uacb0\ud569\ub2c8\ub2e4. \uc194\ub8e8\uc158\uc744 \uad6c\ud604\ud558\ub294 \ubc29\ubc95\uc744 \ubcf4\ub824\uba74 AWS System Manager Session Manager\ub97c \uc0ac\uc6a9\ud558\uc5ec Windows \uc778\uc2a4\ud134\uc2a4\uc5d0 \uc548\uc804\ud558\uac8c \uc561\uc138\uc2a4\ud558\uae30 \ub97c \ucc38\uc870\ud558\uc138\uc694. System Manager Session Manager\ub97c \uc0ac\uc6a9\ud558\ub824\uba74 Windows \ub178\ub4dc\uc5d0 \ucd94\uac00 IAM \uc815\ucc45\uc744 \uc801\uc6a9\ud574\uc57c \ud569\ub2c8\ub2e4. \uc544\ub798\ub294 eksctl \ud074\ub7ec\uc2a4\ud130 \ub9e4\ub2c8\ud398\uc2a4\ud2b8\uc5d0 AmazonSSMManagedInstanceCore \uac00 \uc9c0\uc815\ub41c \uc608\uc785\ub2c8\ub2e4. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false iam : attachPolicyARNs : - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore","title":"RDP \uc5f0\uacb0 \ucd5c\uc18c\ud654"},{"location":"windows/docs/hardening.kr/#amazon-inspector","text":"Amazon Inspector \ub294 AWS\uc5d0 \ubc30\ud3ec\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218\ub97c \uac1c\uc120\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc790\ub3d9 \ubcf4\uc548 \ud3c9\uac00 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. Amazon Inspector\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub178\ucd9c, \ucde8\uc57d\uc131 \ubc0f \ubaa8\ubc94 \uc0ac\ub840\uc640\uc758 \ud3b8\ucc28\ub97c \uc790\ub3d9\uc73c\ub85c \ud3c9\uac00\ud569\ub2c8\ub2e4. \ud3c9\uac00\ub97c \uc218\ud589\ud55c \ud6c4 Amazon Inspector\ub294 \uc2ec\uac01\ub3c4 \uc218\uc900\uc5d0 \ub530\ub77c \uc6b0\uc120 \uc21c\uc704\uac00 \uc9c0\uc815\ub41c \ubcf4\uc548 \uc870\uc0ac \uacb0\uacfc\uc758 \uc138\ubd80 \ubaa9\ub85d\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uacb0\uacfc\ub294 \uc9c1\uc811 \uac80\ud1a0\ud558\uac70\ub098 Amazon Inspector \ucf58\uc194 \ub610\ub294 API\ub97c \ud1b5\ud574 \uc81c\uacf5\ub418\ub294 \uc138\ubd80 \ud3c9\uac00 \ubcf4\uace0\uc11c\uc758 \uc77c\ubd80\ub85c \uac80\ud1a0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon Inspector\ub97c \uc0ac\uc6a9\ud558\uc5ec Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0\uc11c CIS \ubca4\uce58\ub9c8\ud06c \ud3c9\uac00\ub97c \uc2e4\ud589\ud560 \uc218 \uc788\uc73c\uba70, \ub2e4\uc74c \uc791\uc5c5\uc744 \uc218\ud589\ud558\uc5ec Windows Server Core\uc5d0 \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. 1.\ub2e4\uc74c .exe \ud30c\uc77c\uc744 \ub2e4\uc6b4\ub85c\ub4dc\ud569\ub2c8\ub2e4. https://inspector-agent.amazonaws.com/windows/installer/latest/AWSAgentInstall.exe 2.\uc5d0\uc774\uc804\ud2b8\ub97c Windows \uc791\uc5c5\uc790 \ub178\ub4dc\ub85c \uc804\uc1a1\ud569\ub2c8\ub2e4. 3.PowerShell\uc5d0\uc11c \ub2e4\uc74c \uba85\ub839\uc744 \uc2e4\ud589\ud558\uc5ec \uc544\ub9c8\uc874 \uc778\uc2a4\ud399\ud130 \uc5d0\uc774\uc804\ud2b8\ub97c \uc124\uce58\ud569\ub2c8\ub2e4: .\\ AWSAgentInstall.exe /install \uc544\ub798\ub294 \uccab \uc2e4\ud589 \ud6c4\uc758 \ucd9c\ub825\uc785\ub2c8\ub2e4. \ubcf4\uc2dc\ub2e4\uc2dc\ud53c CVE \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \uae30\ubc18\uc73c\ub85c \uac80\uc0c9 \uacb0\uacfc\ub97c \uc0dd\uc131\ud588\uc2b5\ub2c8\ub2e4. \uc774\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5\uc790 \ub178\ub4dc\ub97c \uac15\ud654\ud558\uac70\ub098 \uac15\ud654\ub41c \uad6c\uc131\uc744 \uae30\ubc18\uc73c\ub85c AMI\ub97c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon Inspector \uc5d0\uc774\uc804\ud2b8 \uc124\uce58, CIS \ubca4\uce58\ub9c8\ud06c \ud3c9\uac00 \uc124\uc815 \ubc0f \ubcf4\uace0\uc11c \uc0dd\uc131 \ubc29\ubc95\uc744 \ud3ec\ud568\ud558\uc5ec Amazon Inspector\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 Amazon Inspector\ub97c \ud1b5\ud55c Windows \uc6cc\ud06c\ub85c\ub4dc\uc758 \ubcf4\uc548 \ubc0f \uaddc\uc815 \uc900\uc218 \uac1c\uc120 \ube44\ub514\uc624\ub97c \uc2dc\uccad\ud558\uc2ed\uc2dc\uc624.","title":"Amazon Inspector"},{"location":"windows/docs/hardening.kr/#amazon-guardduty","text":"Amazon GuardDuty \ub294 \uc545\uc758\uc801\uc778 \ud65c\ub3d9 \ubc0f \ubb34\ub2e8 \ud589\ub3d9\uc744 \uc9c0\uc18d\uc801\uc73c\ub85c \ubaa8\ub2c8\ud130\ub9c1\ud558\uc5ec AWS \uacc4\uc815, \uc6cc\ud06c\ub85c\ub4dc \ubc0f Amazon S3\uc5d0 \uc800\uc7a5\ub41c \ub370\uc774\ud130\ub97c \ubcf4\ud638\ud558\ub294 \uc704\ud611 \ud0d0\uc9c0 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \ud074\ub77c\uc6b0\ub4dc\ub97c \uc0ac\uc6a9\ud558\uba74 \uacc4\uc815 \ubc0f \ub124\ud2b8\uc6cc\ud06c \ud65c\ub3d9\uc758 \uc218\uc9d1 \ubc0f \uc9d1\uacc4\uac00 \ub2e8\uc21c\ud654\ub418\uc9c0\ub9cc \ubcf4\uc548 \ud300\uc774 \uc774\ubca4\ud2b8 \ub85c\uadf8 \ub370\uc774\ud130\ub97c \uc9c0\uc18d\uc801\uc73c\ub85c \ubd84\uc11d\ud558\uc5ec \uc7a0\uc7ac\uc801 \uc704\ud611\uc744 \ucc3e\uc544\ub0b4\ub824\uba74 \uc2dc\uac04\uc774 \ub9ce\uc774 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon GuardDuty\ub97c \uc0ac\uc6a9\ud558\uba74 RDP \ubb34\ucc28\ubcc4 \ub300\uc785 \uacf5\uaca9 \ubc0f \ud3ec\ud2b8 \ud504\ub85c\ube0c \uacf5\uaca9\uacfc \uac19\uc740 Windows \uc791\uc5c5\uc790 \ub178\ub4dc\uc5d0 \ub300\ud55c \uc545\uc758\uc801\uc778 \ud65c\ub3d9\uc744 \uac00\uc2dc\ud654\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Amazon GuardDuty\ub97c \uc0ac\uc6a9\ud55c Windows \uc6cc\ud06c\ub85c\ub4dc\uc758 \uc704\ud611 \ud0d0\uc9c0 \ube44\ub514\uc624\ub97c \uc2dc\uccad\ud558\uc5ec \ucd5c\uc801\ud654\ub41c EKS Windows AMI\uc5d0\uc11c CIS \ubca4\uce58\ub9c8\ud06c\ub97c \uad6c\ud604\ud558\uace0 \uc2e4\ud589\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uc2ed\uc2dc\uc624.","title":"Amazon GuardDuty"},{"location":"windows/docs/hardening.kr/#windows-amazon-ec2","text":"\ubaa8\ub4e0 \uacc4\uce35\uc5d0\uc11c \ubcf4\uc548 \uc81c\uc5b4\ub97c \uad6c\ud604\ud558\ub824\uba74 Amazon EC2 Windows \uc778\uc2a4\ud134\uc2a4\uc758 \ubcf4\uc548 \ubaa8\ubc94 \uc0ac\ub840 \ub97c \uc77d\uc5b4\ubcf4\uc2ed\uc2dc\uc624.","title":"Windows Amazon EC2\uc758 \ubcf4\uc548"},{"location":"windows/docs/hardening/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Hardening the Windows worker node \u00b6 Windows Server hardening involves identifying and remediating security vulnerabilities before they are exploited. Microsoft offers a range of tools like Microsoft Security Compliance Toolkit and Security Baselines that should be applied to an operational system. This guide focus specifically on Windows nodes running on Amazon Elastic Kubernetes Service (EKS). Reducing attack surface with Windows Server Core \u00b6 Windows Server Core is a minimal installation option that is available as part of the EKS Optimized Windows AMI . Deploying Windows Server Core has a couple benefits. First, it has a relatively small disk footprint being 6GB on Server Core against 10GB on Windows Server with Desktop experience. Second, it has smaller attack surface because of its smaller code base. You can specify the Server Core EKS Optimized AMI for Windows when you deploy your nodes through eksctl or Cloudformation. The example below is an eksctl manifest for a Windows node group based on Windows Server Core 2004: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false The amiFamily name conventions can be found on the eksctl official documentation. Avoiding RDP connections \u00b6 Remote Desktop Protocol (RDP) is a connection protocol developed by Microsoft to provide users with a graphical interface to connect to another Windows computer over a network. As a best practice, you should treat your Windows worker nodes as if they were immutable. That means no management connections, no updates, and no troubleshooting. Any modification and update should be implemented as a new custom AMI and replaced by updating an Auto Scaling group. See Patching Windows Servers and Containers and Amazon EKS optimized Windows AMI management . Disable RDP connections on Windows nodes during the deployment by passing the value false on the ssh property, as the example below: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false If access to the Windows node is needed, use AWS System Manager Session Manager to establish a secure PowerShell session through the AWS Console and SSM agent. To see how to implement the solution watch Securely Access Windows Instances Using AWS Systems Manager Session Manager In order to use System Manager Session Manager an additional IAM policy must be applied to the Windows nodes. Below is an example where the AmazonSSMManagedInstanceCore is specified in the eksctl cluster manifest: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false iam : attachPolicyARNs : - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore Amazon Inspector \u00b6 Amazon Inspector is an automated security assessment service that helps improve the security and compliance of applications deployed on AWS. Amazon Inspector automatically assesses applications for exposure, vulnerabilities, and deviations from best practices. After performing an assessment, Amazon Inspector produces a detailed list of security findings prioritized by level of severity. These findings can be reviewed directly or as part of detailed assessment reports which are available via the Amazon Inspector console or API. Amazon Inspector can be used to run CIS Benchmark assessment on the Windows worker node and it can be installed on a Windows Server Core by performing the following tasks: Download the following .exe file: https://inspector-agent.amazonaws.com/windows/installer/latest/AWSAgentInstall.exe Transfer the agent to the Windows worker node. Run the following command on PowerShell to install the Amazon Inspector Agent: .\\AWSAgentInstall.exe /install Below is the ouput after the first run. As you can see, it generated findings based on the CVE database. You can use this to harden your Worker nodes or create an AMI based on the hardened configurations. For more information on Amazon Inspector, including how to install Amazon Inspector agents, set up the CIS Benchmark assessment, and generate reports, watch the Improving the security and compliance of Windows Workloads with Amazon Inspector video. Amazon GuardDuty \u00b6 Amazon GuardDuty is a threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect your AWS accounts, workloads, and data stored in Amazon S3. With the cloud, the collection and aggregation of account and network activities is simplified, but it can be time consuming for security teams to continuously analyze event log data for potential threats. By using Amazon GuardDuty you have visilitiby on malicious actitivy against Windows worker nodes, like RDP brute force and Port Probe attacks. Watch the Threat Detection for Windows Workloads using Amazon GuardDuty video to learn how to implement and run CIS Benchmarks on Optimized EKS Windows AMI Security in Amazon EC2 for Windows \u00b6 Read up on the Security best practices for Amazon EC2 Windows instances to implement security controls at every layer.","title":"Windows Server Hardening ({'name': 'English', 'build': True})"},{"location":"windows/docs/hardening/#hardening-the-windows-worker-node","text":"Windows Server hardening involves identifying and remediating security vulnerabilities before they are exploited. Microsoft offers a range of tools like Microsoft Security Compliance Toolkit and Security Baselines that should be applied to an operational system. This guide focus specifically on Windows nodes running on Amazon Elastic Kubernetes Service (EKS).","title":"Hardening the Windows worker node"},{"location":"windows/docs/hardening/#reducing-attack-surface-with-windows-server-core","text":"Windows Server Core is a minimal installation option that is available as part of the EKS Optimized Windows AMI . Deploying Windows Server Core has a couple benefits. First, it has a relatively small disk footprint being 6GB on Server Core against 10GB on Windows Server with Desktop experience. Second, it has smaller attack surface because of its smaller code base. You can specify the Server Core EKS Optimized AMI for Windows when you deploy your nodes through eksctl or Cloudformation. The example below is an eksctl manifest for a Windows node group based on Windows Server Core 2004: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false The amiFamily name conventions can be found on the eksctl official documentation.","title":"Reducing attack surface with Windows Server Core"},{"location":"windows/docs/hardening/#avoiding-rdp-connections","text":"Remote Desktop Protocol (RDP) is a connection protocol developed by Microsoft to provide users with a graphical interface to connect to another Windows computer over a network. As a best practice, you should treat your Windows worker nodes as if they were immutable. That means no management connections, no updates, and no troubleshooting. Any modification and update should be implemented as a new custom AMI and replaced by updating an Auto Scaling group. See Patching Windows Servers and Containers and Amazon EKS optimized Windows AMI management . Disable RDP connections on Windows nodes during the deployment by passing the value false on the ssh property, as the example below: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false If access to the Windows node is needed, use AWS System Manager Session Manager to establish a secure PowerShell session through the AWS Console and SSM agent. To see how to implement the solution watch Securely Access Windows Instances Using AWS Systems Manager Session Manager In order to use System Manager Session Manager an additional IAM policy must be applied to the Windows nodes. Below is an example where the AmazonSSMManagedInstanceCore is specified in the eksctl cluster manifest: nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false iam : attachPolicyARNs : - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore","title":"Avoiding RDP connections"},{"location":"windows/docs/hardening/#amazon-inspector","text":"Amazon Inspector is an automated security assessment service that helps improve the security and compliance of applications deployed on AWS. Amazon Inspector automatically assesses applications for exposure, vulnerabilities, and deviations from best practices. After performing an assessment, Amazon Inspector produces a detailed list of security findings prioritized by level of severity. These findings can be reviewed directly or as part of detailed assessment reports which are available via the Amazon Inspector console or API. Amazon Inspector can be used to run CIS Benchmark assessment on the Windows worker node and it can be installed on a Windows Server Core by performing the following tasks: Download the following .exe file: https://inspector-agent.amazonaws.com/windows/installer/latest/AWSAgentInstall.exe Transfer the agent to the Windows worker node. Run the following command on PowerShell to install the Amazon Inspector Agent: .\\AWSAgentInstall.exe /install Below is the ouput after the first run. As you can see, it generated findings based on the CVE database. You can use this to harden your Worker nodes or create an AMI based on the hardened configurations. For more information on Amazon Inspector, including how to install Amazon Inspector agents, set up the CIS Benchmark assessment, and generate reports, watch the Improving the security and compliance of Windows Workloads with Amazon Inspector video.","title":"Amazon Inspector"},{"location":"windows/docs/hardening/#amazon-guardduty","text":"Amazon GuardDuty is a threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect your AWS accounts, workloads, and data stored in Amazon S3. With the cloud, the collection and aggregation of account and network activities is simplified, but it can be time consuming for security teams to continuously analyze event log data for potential threats. By using Amazon GuardDuty you have visilitiby on malicious actitivy against Windows worker nodes, like RDP brute force and Port Probe attacks. Watch the Threat Detection for Windows Workloads using Amazon GuardDuty video to learn how to implement and run CIS Benchmarks on Optimized EKS Windows AMI","title":"Amazon GuardDuty"},{"location":"windows/docs/hardening/#security-in-amazon-ec2-for-windows","text":"Read up on the Security best practices for Amazon EC2 Windows instances to implement security controls at every layer.","title":"Security in Amazon EC2 for Windows"},{"location":"windows/docs/images.kr/","text":"{'name': 'English', 'build': True} \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc2a4\uce94 \u00b6 \uc774\ubbf8\uc9c0 \uc2a4\uce94\uc740 \uad11\ubc94\uc704\ud55c \uc6b4\uc601\uccb4\uc81c \ucde8\uc57d\uc131\uc744 \uac80\uc0ac\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \ubcf4\uc548\uc744 \uac1c\uc120\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc790\ub3d9\ud654\ub41c \ucde8\uc57d\uc131 \ud3c9\uac00 \uae30\ub2a5\uc785\ub2c8\ub2e4. \ud604\uc7ac Amazon Elastic Container Registry(ECR)\ub294 Linux \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub9cc \uc2a4\uce94\ud558\uc5ec \ucde8\uc57d\uc810\uc744 \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud558\uc9c0\ub9cc Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc2a4\uce94\uc744 \uc704\ud574 \uae30\uc874 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uacfc \ud1b5\ud569\ud560 \uc218 \uc788\ub294 \ud0c0\uc0ac \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. Anchore PaloAlto Prisma Cloud Trend Micro - Deep Security Smart Check \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc744 Amazon Elastic Container Registry(ECR) \uc640 \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624: Anchore, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94 PaloAlto, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94 TrendMicro, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94","title":"Images.kr"},{"location":"windows/docs/images.kr/#_1","text":"\uc774\ubbf8\uc9c0 \uc2a4\uce94\uc740 \uad11\ubc94\uc704\ud55c \uc6b4\uc601\uccb4\uc81c \ucde8\uc57d\uc131\uc744 \uac80\uc0ac\ud558\uc5ec \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\uc758 \ubcf4\uc548\uc744 \uac1c\uc120\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \uc790\ub3d9\ud654\ub41c \ucde8\uc57d\uc131 \ud3c9\uac00 \uae30\ub2a5\uc785\ub2c8\ub2e4. \ud604\uc7ac Amazon Elastic Container Registry(ECR)\ub294 Linux \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub9cc \uc2a4\uce94\ud558\uc5ec \ucde8\uc57d\uc810\uc744 \ucc3e\uc544\ub0bc \uc218 \uc788\uc2b5\ub2c8\ub2e4.\ud558\uc9c0\ub9cc Windows \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc2a4\uce94\uc744 \uc704\ud574 \uae30\uc874 CI/CD \ud30c\uc774\ud504\ub77c\uc778\uacfc \ud1b5\ud569\ud560 \uc218 \uc788\ub294 \ud0c0\uc0ac \ub3c4\uad6c\uac00 \uc788\uc2b5\ub2c8\ub2e4. Anchore PaloAlto Prisma Cloud Trend Micro - Deep Security Smart Check \uc774\ub7ec\ud55c \uc194\ub8e8\uc158\uc744 Amazon Elastic Container Registry(ECR) \uc640 \ud1b5\ud569\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud574 \uc790\uc138\ud788 \uc54c\uc544\ubcf4\ub824\uba74 \ub2e4\uc74c\uc744 \ud655\uc778\ud558\uc2ed\uc2dc\uc624: Anchore, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94 PaloAlto, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94 TrendMicro, Amazon Elastic Container Registry (ECR)\uc5d0\uc11c \uc774\ubbf8\uc9c0 \uc2a4\uce94","title":"\ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \uc2a4\uce94"},{"location":"windows/docs/images/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Container image scanning \u00b6 Image Scanning is an automated vulnerability assessment feature that helps improve the security of your application\u2019s container images by scanning them for a broad range of operating system vulnerabilities. Currently, the Amazon Elastic Container Registry (ECR) is only able to scan Linux container image for vulnerabilities. However; there are third-party tools which can be integrated with an existing CI/CD pipeline for Windows container image scanning. Anchore PaloAlto Prisma Cloud Trend Micro - Deep Security Smart Check To learn more about how to integrate these solutions with Amazon Elastic Container Repository (ECR), check: Anchore, scanning images on Amazon Elastic Container Registry (ECR) PaloAlto, scanning images on Amazon Elastic Container Registry (ECR) TrendMicro, scanning images on Amazon Elastic Container Registry (ECR)","title":"Scanning Windows Images ({'name': 'English', 'build': True})"},{"location":"windows/docs/images/#container-image-scanning","text":"Image Scanning is an automated vulnerability assessment feature that helps improve the security of your application\u2019s container images by scanning them for a broad range of operating system vulnerabilities. Currently, the Amazon Elastic Container Registry (ECR) is only able to scan Linux container image for vulnerabilities. However; there are third-party tools which can be integrated with an existing CI/CD pipeline for Windows container image scanning. Anchore PaloAlto Prisma Cloud Trend Micro - Deep Security Smart Check To learn more about how to integrate these solutions with Amazon Elastic Container Repository (ECR), check: Anchore, scanning images on Amazon Elastic Container Registry (ECR) PaloAlto, scanning images on Amazon Elastic Container Registry (ECR) TrendMicro, scanning images on Amazon Elastic Container Registry (ECR)","title":"Container image scanning"},{"location":"windows/docs/licensing.kr/","text":"{'name': 'English', 'build': True} \uc708\ub3c4\uc6b0 \uc11c\ubc84 \ubc84\uc804 \ubc0f \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd \u00b6 Windows Server \uace0\uac1d\uc740 \uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110\uacfc \ubc18\uae30 \ucc44\ub110\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uae30\ubcf8 \ub9b4\ub9ac\uc2a4 \ucc44\ub110\uc744 \uc774\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\uc694\uc5d0 \ub530\ub77c \uc11c\ubc84\ub97c LTSC (\uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110) \uc5d0 \uc720\uc9c0\ud558\uac70\ub098, \ubc18\uae30 \ucc44\ub110 (SAC) \ub85c \uc774\ub3d9\ud558\uac70\ub098, \uc77c\ubd80 \uc11c\ubc84\ub97c \ub458 \uc911 \ud558\ub098\uc5d0 \ub458 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110 (LTSC) \u00b6 \uc774\uc804\uc5d0 \u201c\uc7a5\uae30 \uc11c\ube44\uc2a4 \ubd84\uae30\u201d\ub77c\uace0 \ubd88\ub838\ub358 \uc774 \ubaa8\ub378\uc740 \uc774\ubbf8 \uc798 \uc54c\uace0 \uc788\ub294 \ub9b4\ub9ac\uc2a4 \ubaa8\ub378\ub85c, 2-3\ub144\ub9c8\ub2e4 Windows Server\uc758 \uc0c8 \uba54\uc774\uc800 \ubc84\uc804\uc774 \ub9b4\ub9ac\uc2a4\ub429\ub2c8\ub2e4.\uc0ac\uc6a9\uc790\ub294 5\ub144\uac04\uc758 \uc77c\ubc18 \uc9c0\uc6d0\uacfc 5\ub144\uc758 \ucd94\uac00 \uc9c0\uc6d0\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ucc44\ub110\uc740 \ub354 \uae34 \uc11c\ube44\uc2a4 \uc635\uc158\uacfc \uae30\ub2a5\uc801 \uc548\uc815\uc131\uc774 \ud544\uc694\ud55c \uc2dc\uc2a4\ud15c\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. Windows Server 2019 \ubc0f \uc774\uc804 \ubc84\uc804\uc758 Windows Server \ubc30\ud3ec\ub294 \uc0c8\ub85c\uc6b4 \ubc18\uae30 \ucc44\ub110 \ub9b4\ub9ac\uc2a4\uc758 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110\uc5d0\ub294 \ubcf4\uc548 \ubc0f \ube44\ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\uac00 \uacc4\uc18d \uc81c\uacf5\ub418\uba70 \uc5c4\uc120\ub41c \uc0c8\ub85c\uc6b4 \ud2b9\uc9d5\uacfc \uae30\ub2a5\ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4. \ubc18\uae30 \ucc44\ub110 (SAC) \u00b6 \ubc18\uae30 \ucc44\ub110\uc758 Windows Server \uc81c\ud488\uc740 \ubd04\uacfc \uac00\uc744\uc5d0 \uc77c\ub144\uc5d0 \ub450 \ubc88 \uc0c8 \ub9b4\ub9ac\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\uc774 \ucc44\ub110\uc758 \uac01 \ub9b4\ub9ac\uc2a4\ub294 \ucd5c\ucd08 \ub9b4\ub9ac\uc2a4\ub85c\ubd80\ud130 18\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ubc18\uae30 \ucc44\ub110\uc5d0 \ub3c4\uc785\ub41c \ub300\ubd80\ubd84\uc758 \uae30\ub2a5\uc740 Windows Server\uc758 \ub2e4\uc74c \uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110 \ub9b4\ub9ac\uc2a4\uc5d0 \ud3ec\ud568\ub420 \uc608\uc815\uc785\ub2c8\ub2e4.\uc5d0\ub514\uc158, \uae30\ub2a5 \ubc0f \uc9c0\uc6d0 \ucf58\ud150\uce20\ub294 \uace0\uac1d \ud53c\ub4dc\ubc31\uc5d0 \ub530\ub77c \ub9b4\ub9ac\uc2a4\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ubaa8\ub378\uc5d0\uc11c Windows Server \ub9b4\ub9ac\uc2a4\ub294 \ucd9c\uc2dc \uc5f0\ub3c4 \ubc0f \uc6d4 \ub610\ub294 \uc808\ubc18\uc73c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 2020\ub144\uc5d0\ub294 4\uac1c\uc6d4 \ucc28 (4\uc6d4) \ub9b4\ub9ac\uc2a4\uac00 \ubc84\uc804 2004\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4.\uc774 \uc774\ub984\uc740 20H2\ub85c \uc2dd\ubcc4\ub418\ub294 \ub9c8\uc9c0\ub9c9 SAC \ub9b4\ub9ac\uc2a4\uc5d0\uc11c \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uc5b4\ub5a4 \ucc44\ub110\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub098\uc694? \u00b6 \ub9c8\uc774\ud06c\ub85c\uc18c\ud504\ud2b8\ub294 LTSC\ub97c \uae30\ubcf8 \ub9b4\ub9ac\uc2a4 \ucc44\ub110\ub85c \uc804\ud658\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\ud604\uc7ac \ub450 \uac1c\uc758 SAC \ube4c\ub4dc\ub294 \ubc84\uc804 2004\uc758 \uacbd\uc6b0 2021-12-14\ub144, \ubc84\uc804 20H2\uc758 \uacbd\uc6b0 2022-05-10\uc5d0 \uc885\ub8cc\ub418\ub294 18\uac1c\uc6d4\uc758 \uc218\uba85 \uc8fc\uae30\uac00 \ub05d\ub0a0 \ub54c\uae4c\uc9c0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. SAC\uc5d0\uc11c \uc2dc\uc791\ub41c \ucee8\ud14c\uc774\ub108 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucd5c\uc801\ud654\ub41c \uc911\uc694 \uae30\ub2a5\uc774 LTSC \ube4c\ub4dc\uc5d0 \ud1b5\ud569\ub418\uc5c8\uc2b5\ub2c8\ub2e4. DSR(Direct Server Return) \uc9c0\uc6d0. (LTSC August 2020 Cumulative Update \uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4.) DSR(Direct Server Return)\uc774\ub780 \ubb34\uc5c7\uc785\ub2c8\uae4c? DSR\uc740 \ubd80\ud558 \ubd84\uc0b0 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ube44\ub300\uce6d \ub124\ud2b8\uc6cc\ud06c \ubd80\ud558 \ubd84\uc0b0\uc744 \uad6c\ud604\ud55c \uac83\uc73c\ub85c, \uc694\uccad \ud2b8\ub798\ud53d\uacfc \uc751\ub2f5 \ud2b8\ub798\ud53d\uc774 \uc11c\ub85c \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4. \ub77c\uc774\uc120\uc2f1 \u00b6 Amazon Web Services (AWS) \uc758 Windows\uc6a9 EKS \ucd5c\uc801\ud654 AMI\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108 \uc218\uc5d0 \uc81c\ud55c\uc774 \uc5c6\ub294 \ub370\uc774\ud130 \uc13c\ud130 \ubc84\uc804\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9: https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/faq","title":"Licensing.kr"},{"location":"windows/docs/licensing.kr/#_1","text":"Windows Server \uace0\uac1d\uc740 \uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110\uacfc \ubc18\uae30 \ucc44\ub110\uc774\ub77c\ub294 \ub450 \uac00\uc9c0 \uae30\ubcf8 \ub9b4\ub9ac\uc2a4 \ucc44\ub110\uc744 \uc774\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud544\uc694\uc5d0 \ub530\ub77c \uc11c\ubc84\ub97c LTSC (\uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110) \uc5d0 \uc720\uc9c0\ud558\uac70\ub098, \ubc18\uae30 \ucc44\ub110 (SAC) \ub85c \uc774\ub3d9\ud558\uac70\ub098, \uc77c\ubd80 \uc11c\ubc84\ub97c \ub458 \uc911 \ud558\ub098\uc5d0 \ub458 \uc218 \uc788\uc2b5\ub2c8\ub2e4.","title":"\uc708\ub3c4\uc6b0 \uc11c\ubc84 \ubc84\uc804 \ubc0f \ub77c\uc774\uc120\uc2a4 \uc120\ud0dd"},{"location":"windows/docs/licensing.kr/#ltsc","text":"\uc774\uc804\uc5d0 \u201c\uc7a5\uae30 \uc11c\ube44\uc2a4 \ubd84\uae30\u201d\ub77c\uace0 \ubd88\ub838\ub358 \uc774 \ubaa8\ub378\uc740 \uc774\ubbf8 \uc798 \uc54c\uace0 \uc788\ub294 \ub9b4\ub9ac\uc2a4 \ubaa8\ub378\ub85c, 2-3\ub144\ub9c8\ub2e4 Windows Server\uc758 \uc0c8 \uba54\uc774\uc800 \ubc84\uc804\uc774 \ub9b4\ub9ac\uc2a4\ub429\ub2c8\ub2e4.\uc0ac\uc6a9\uc790\ub294 5\ub144\uac04\uc758 \uc77c\ubc18 \uc9c0\uc6d0\uacfc 5\ub144\uc758 \ucd94\uac00 \uc9c0\uc6d0\uc744 \ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ucc44\ub110\uc740 \ub354 \uae34 \uc11c\ube44\uc2a4 \uc635\uc158\uacfc \uae30\ub2a5\uc801 \uc548\uc815\uc131\uc774 \ud544\uc694\ud55c \uc2dc\uc2a4\ud15c\uc5d0 \uc801\ud569\ud569\ub2c8\ub2e4. Windows Server 2019 \ubc0f \uc774\uc804 \ubc84\uc804\uc758 Windows Server \ubc30\ud3ec\ub294 \uc0c8\ub85c\uc6b4 \ubc18\uae30 \ucc44\ub110 \ub9b4\ub9ac\uc2a4\uc758 \uc601\ud5a5\uc744 \ubc1b\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110\uc5d0\ub294 \ubcf4\uc548 \ubc0f \ube44\ubcf4\uc548 \uc5c5\ub370\uc774\ud2b8\uac00 \uacc4\uc18d \uc81c\uacf5\ub418\uba70 \uc5c4\uc120\ub41c \uc0c8\ub85c\uc6b4 \ud2b9\uc9d5\uacfc \uae30\ub2a5\ub9cc \uc81c\uacf5\ub429\ub2c8\ub2e4.","title":"\uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110 (LTSC)"},{"location":"windows/docs/licensing.kr/#sac","text":"\ubc18\uae30 \ucc44\ub110\uc758 Windows Server \uc81c\ud488\uc740 \ubd04\uacfc \uac00\uc744\uc5d0 \uc77c\ub144\uc5d0 \ub450 \ubc88 \uc0c8 \ub9b4\ub9ac\uc2a4\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4.\uc774 \ucc44\ub110\uc758 \uac01 \ub9b4\ub9ac\uc2a4\ub294 \ucd5c\ucd08 \ub9b4\ub9ac\uc2a4\ub85c\ubd80\ud130 18\uac1c\uc6d4 \ub3d9\uc548 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. \ubc18\uae30 \ucc44\ub110\uc5d0 \ub3c4\uc785\ub41c \ub300\ubd80\ubd84\uc758 \uae30\ub2a5\uc740 Windows Server\uc758 \ub2e4\uc74c \uc7a5\uae30 \uc11c\ube44\uc2a4 \ucc44\ub110 \ub9b4\ub9ac\uc2a4\uc5d0 \ud3ec\ud568\ub420 \uc608\uc815\uc785\ub2c8\ub2e4.\uc5d0\ub514\uc158, \uae30\ub2a5 \ubc0f \uc9c0\uc6d0 \ucf58\ud150\uce20\ub294 \uace0\uac1d \ud53c\ub4dc\ubc31\uc5d0 \ub530\ub77c \ub9b4\ub9ac\uc2a4\ub9c8\ub2e4 \ub2e4\ub97c \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774 \ubaa8\ub378\uc5d0\uc11c Windows Server \ub9b4\ub9ac\uc2a4\ub294 \ucd9c\uc2dc \uc5f0\ub3c4 \ubc0f \uc6d4 \ub610\ub294 \uc808\ubc18\uc73c\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 2020\ub144\uc5d0\ub294 4\uac1c\uc6d4 \ucc28 (4\uc6d4) \ub9b4\ub9ac\uc2a4\uac00 \ubc84\uc804 2004\ub85c \uc2dd\ubcc4\ub429\ub2c8\ub2e4.\uc774 \uc774\ub984\uc740 20H2\ub85c \uc2dd\ubcc4\ub418\ub294 \ub9c8\uc9c0\ub9c9 SAC \ub9b4\ub9ac\uc2a4\uc5d0\uc11c \ubcc0\uacbd\ub418\uc5c8\uc2b5\ub2c8\ub2e4.","title":"\ubc18\uae30 \ucc44\ub110 (SAC)"},{"location":"windows/docs/licensing.kr/#_2","text":"\ub9c8\uc774\ud06c\ub85c\uc18c\ud504\ud2b8\ub294 LTSC\ub97c \uae30\ubcf8 \ub9b4\ub9ac\uc2a4 \ucc44\ub110\ub85c \uc804\ud658\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\ud604\uc7ac \ub450 \uac1c\uc758 SAC \ube4c\ub4dc\ub294 \ubc84\uc804 2004\uc758 \uacbd\uc6b0 2021-12-14\ub144, \ubc84\uc804 20H2\uc758 \uacbd\uc6b0 2022-05-10\uc5d0 \uc885\ub8cc\ub418\ub294 18\uac1c\uc6d4\uc758 \uc218\uba85 \uc8fc\uae30\uac00 \ub05d\ub0a0 \ub54c\uae4c\uc9c0 \uc9c0\uc6d0\ub429\ub2c8\ub2e4. SAC\uc5d0\uc11c \uc2dc\uc791\ub41c \ucee8\ud14c\uc774\ub108 \uc6cc\ud06c\ub85c\ub4dc\uc5d0 \ucd5c\uc801\ud654\ub41c \uc911\uc694 \uae30\ub2a5\uc774 LTSC \ube4c\ub4dc\uc5d0 \ud1b5\ud569\ub418\uc5c8\uc2b5\ub2c8\ub2e4. DSR(Direct Server Return) \uc9c0\uc6d0. (LTSC August 2020 Cumulative Update \uc5d0\uc11c \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4.) DSR(Direct Server Return)\uc774\ub780 \ubb34\uc5c7\uc785\ub2c8\uae4c? DSR\uc740 \ubd80\ud558 \ubd84\uc0b0 \uc2dc\uc2a4\ud15c\uc5d0\uc11c \ube44\ub300\uce6d \ub124\ud2b8\uc6cc\ud06c \ubd80\ud558 \ubd84\uc0b0\uc744 \uad6c\ud604\ud55c \uac83\uc73c\ub85c, \uc694\uccad \ud2b8\ub798\ud53d\uacfc \uc751\ub2f5 \ud2b8\ub798\ud53d\uc774 \uc11c\ub85c \ub2e4\ub978 \ub124\ud2b8\uc6cc\ud06c \uacbd\ub85c\ub97c \uc0ac\uc6a9\ud55c\ub2e4\ub294 \uc758\ubbf8\uc785\ub2c8\ub2e4.","title":"\uc5b4\ub5a4 \ucc44\ub110\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub098\uc694?"},{"location":"windows/docs/licensing.kr/#_3","text":"Amazon Web Services (AWS) \uc758 Windows\uc6a9 EKS \ucd5c\uc801\ud654 AMI\ub294 \uc6cc\ucee4 \ub178\ub4dc\uc5d0\uc11c \uc2e4\ud589\ub418\ub294 \ucee8\ud14c\uc774\ub108 \uc218\uc5d0 \uc81c\ud55c\uc774 \uc5c6\ub294 \ub370\uc774\ud130 \uc13c\ud130 \ubc84\uc804\uc744 \uae30\ubc18\uc73c\ub85c \ud569\ub2c8\ub2e4.\uc790\uc138\ud55c \ub0b4\uc6a9: https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/faq","title":"\ub77c\uc774\uc120\uc2f1"},{"location":"windows/docs/licensing/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Choosing a Windows Server Version and License \u00b6 There are two primary release channels available to Windows Server customers, the Long-Term Servicing Channel and the Semi-Annual Channel. You can keep servers on the Long-Term Servicing Channel (LTSC), move them to the Semi-Annual Channel (SAC), or have some servers on either track, depending on what works best for your needs. Long-Term Servicing Channel (LTSC) \u00b6 Formerly called the \u201cLong-Term Servicing Branch\u201d, this is the release model you are already familiar with where a new major version of Windows Server is released every 2-3 years. Users are entitled to 5 years of mainstream support and 5 years of extended support. This channel is appropriate for systems that require a longer servicing option and functional stability. Deployments of Windows Server 2019 and earlier versions of Windows Server will not be affected by the new Semi-Annual Channel releases. The Long-Term Servicing Channel will continue to receive security and non-security updates, only receiving select new features and functionality. Semi-Annual Channel (SAC) \u00b6 Windows Server products in the Semi-Annual Channel have new releases available twice a year, in spring and fall. Each release in this channel is supported for 18 months from the initial release. Most of the features introduced in the Semi-Annual Channel will be rolled up into the next Long-Term Servicing Channel release of Windows Server. The editions, functionality, and supporting content might vary from release to release depending on customer feedback. In this model, Windows Server releases are identified by the year and month or half of release: for example, in 2020, the release in the 4th month (April) is identified as version 2004. This naming changed with the last SAC release which is identified as 20H2. Which channel should I use? \u00b6 Microsoft is moving to the LTSC as the primary release channel. The two current SAC builds will be supported until the end of their 18-month lifecycles ending 2021-12-14 for version 2004 and 2022-05-10 for version 20H2. Important features optimized for Container workloads which originated in the SAC have been incorporated into the LTSC build: Direct Server Return (DSR) support. (available in the LTSC August 2020 Cumulative Update ) What is Direct Server Return? DSR is an implementation of asymmetric network load distribution in load balanced systems, meaning that the request and response traffic use a different network path. Licensing \u00b6 At Amazon Web Services (AWS), the EKS Optimized AMIs for Windows are based on the Datacenter version, which doesn't have a limitation on the numbers of containers running on a worker node. For more information: https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/faq","title":"Windows Versions and Licensing ({'name': 'English', 'build': True})"},{"location":"windows/docs/licensing/#choosing-a-windows-server-version-and-license","text":"There are two primary release channels available to Windows Server customers, the Long-Term Servicing Channel and the Semi-Annual Channel. You can keep servers on the Long-Term Servicing Channel (LTSC), move them to the Semi-Annual Channel (SAC), or have some servers on either track, depending on what works best for your needs.","title":"Choosing a Windows Server Version and License"},{"location":"windows/docs/licensing/#long-term-servicing-channel-ltsc","text":"Formerly called the \u201cLong-Term Servicing Branch\u201d, this is the release model you are already familiar with where a new major version of Windows Server is released every 2-3 years. Users are entitled to 5 years of mainstream support and 5 years of extended support. This channel is appropriate for systems that require a longer servicing option and functional stability. Deployments of Windows Server 2019 and earlier versions of Windows Server will not be affected by the new Semi-Annual Channel releases. The Long-Term Servicing Channel will continue to receive security and non-security updates, only receiving select new features and functionality.","title":"Long-Term Servicing Channel (LTSC)"},{"location":"windows/docs/licensing/#semi-annual-channel-sac","text":"Windows Server products in the Semi-Annual Channel have new releases available twice a year, in spring and fall. Each release in this channel is supported for 18 months from the initial release. Most of the features introduced in the Semi-Annual Channel will be rolled up into the next Long-Term Servicing Channel release of Windows Server. The editions, functionality, and supporting content might vary from release to release depending on customer feedback. In this model, Windows Server releases are identified by the year and month or half of release: for example, in 2020, the release in the 4th month (April) is identified as version 2004. This naming changed with the last SAC release which is identified as 20H2.","title":"Semi-Annual Channel (SAC)"},{"location":"windows/docs/licensing/#which-channel-should-i-use","text":"Microsoft is moving to the LTSC as the primary release channel. The two current SAC builds will be supported until the end of their 18-month lifecycles ending 2021-12-14 for version 2004 and 2022-05-10 for version 20H2. Important features optimized for Container workloads which originated in the SAC have been incorporated into the LTSC build: Direct Server Return (DSR) support. (available in the LTSC August 2020 Cumulative Update ) What is Direct Server Return? DSR is an implementation of asymmetric network load distribution in load balanced systems, meaning that the request and response traffic use a different network path.","title":"Which channel should I use?"},{"location":"windows/docs/licensing/#licensing","text":"At Amazon Web Services (AWS), the EKS Optimized AMIs for Windows are based on the Datacenter version, which doesn't have a limitation on the numbers of containers running on a worker node. For more information: https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/faq","title":"Licensing"},{"location":"windows/docs/logging.kr/","text":"{'name': 'English', 'build': True} \ub85c\uae45 \u00b6 \ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub97c STDOUT\uc73c\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc740 \uc774\ub7ec\ud55c \ub85c\uadf8\ub97c \ud2b8\ub7a9\ud558\uc5ec \ud2b9\uc815 \uc791\uc5c5(\uc77c\ubc18\uc801\uc73c\ub85c \ud30c\uc77c\uc5d0 \uc4f0\uae30)\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\uc77c\uc774 \uc800\uc7a5\ub418\ub294 \uc704\uce58\ub294 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ubc0f \uad6c\uc131\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc708\ub3c4\uc6b0 \ud30c\ub4dc\uc640\uc758 \uadfc\ubcf8\uc801\uc778 \ucc28\uc774\uc810 \uc911 \ud558\ub098\ub294 STDOUT\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. LogMonitor \ub97c \uc2e4\ud589\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 Windows \ucee8\ud14c\uc774\ub108\uc5d0\uc11c ETW (Windows\uc6a9 \uc774\ubca4\ud2b8 \ucd94\uc801), Windows \uc774\ubca4\ud2b8 \ub85c\uadf8 \ubc0f \uae30\ud0c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ubcc4 \ub85c\uadf8\ub97c \uac80\uc0c9\ud558\uace0 \ud615\uc2dd\uc774 \uc9c0\uc815\ub41c \ub85c\uadf8 \ucd9c\ub825\uc744 STDOUT\uc73c\ub85c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud50c\ub8e8\uc5b8\ud2b8\ube44\ud2b8 \ub610\ub294 fluentd\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon CloudWatch\uc640 \uac19\uc740 \uc6d0\ud558\ub294 \ubaa9\uc801\uc9c0\ub85c \uc774\ub7ec\ud55c \ub85c\uadf8\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uadf8 \uc218\uc9d1 \uba54\ucee4\ub2c8\uc998\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0\uc11c STDOUT/STDERR \ub85c\uadf8\ub97c \uac80\uc0c9\ud55c\ub2e4. \ub370\ubaac\uc14b \uc740 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\ub294 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc785\ub2c8\ub2e4.\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub3c5\ub9bd\uc801\uc73c\ub85c \ub85c\uadf8 \ub77c\uc6b0\ud305/\ud544\ud130\ub9c1/\uac15\ud654\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fluentd DaemonSet\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ub85c\uadf8\uc640 \uae30\ud0c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0dd\uc131 \ub85c\uadf8\ub97c \uc6d0\ud558\ub294 \ub85c\uadf8 \uc218\uc9d1\uae30\ub85c \uc2a4\ud2b8\ub9ac\ubc0d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Windows \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c CloudWatch\ub85c\uc758 \ub85c\uadf8 \uc2a4\ud2b8\ub9ac\ubc0d\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc138\uc694. \ub85c\uae45 \uad8c\uc7a5 \uc0ac\ud56d \u00b6 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c Windows \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc6b4\uc601\ud560 \ub54c \uc77c\ubc18\uc801\uc778 \ub85c\uae45 \ubaa8\ubc94 \uc0ac\ub840\ub294 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud56d\uc0c1 \uad6c\uc870\ud654\ub41c \ub85c\uadf8 \ud56d\ubaa9 (JSON/SYSLOG) \uc744 \uae30\ub85d\ud558\uba74 \uc774\ub7ec\ud55c \uad6c\uc870\ud654\ub41c \ud615\uc2dd\uc5d0 \ub300\ud574 \ubbf8\ub9ac \uc791\uc131\ub41c \ud30c\uc11c\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 \ub85c\uadf8 \ud56d\ubaa9\uc744 \ub354 \uc27d\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559 \uc9d1\uc911\ud654 \ub85c\uadf8 - \uc804\uc6a9 \ub85c\uae45 \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub85c\uadf8 \uba54\uc2dc\uc9c0\ub97c \uc218\uc9d1\ud558\uace0 \ubaa9\uc801\uc9c0\ub85c \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ubc84\uae45\ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0\ub294 \ub85c\uadf8 \uc0c1\uc138 \uc815\ubcf4 \ub97c \uc904\uc774\uc2ed\uc2dc\uc624.\uc0c1\uc138 \uc815\ubcf4\ub294 \ub85c\uae45 \uc778\ud504\ub77c\uc5d0 \ub9ce\uc740 \ubd80\ub2f4\uc744 \uc8fc\uace0 \ub178\uc774\uc988\ub85c \uc778\ud574 \uc911\uc694\ud55c \uc774\ubca4\ud2b8\uac00 \uc190\uc2e4\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uc801\uc744 \uc704\ud574 \ud56d\uc0c1 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc815\ubcf4 \ub97c \uac70\ub798/\uc694\uccad ID \uc640 \ud568\uaed8 \uae30\ub85d\ud558\uc2ed\uc2dc\uc624.\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc624\ube0c\uc81d\ud2b8\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc774\ub984\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \uc608\ub97c \ub4e4\uc5b4 \ub85c\uadf8\ub97c \ub514\ubc84\uae45\ud560 \ub54c \ud3ec\ub4dc \uc774\ub984 windows-twryrqyw \ub294 \uc544\ubb34\ub7f0 \uc758\ubbf8\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ucd94\uc801\uc131\uc774 \ud5a5\uc0c1\ub418\uace0 \uc9d1\uacc4\ub41c \ub85c\uadf8\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud2b8\ub79c\uc7ad\uc158/\uc0c1\uad00 \uad00\uacc4 ID\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc740 \ud504\ub85c\uadf8\ub798\ubc0d \uad6c\uc870\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub9e4\uc6b0 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 MDC (\ub9e4\ud551\ub41c \uc9c4\ub2e8 \ucee8\ud14d\uc2a4\ud2b8)\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4e4\uc5b4\uc624\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \uace0\uc720\ud55c \ud2b8\ub79c\uc7ad\uc158/\uc0c1\uad00 \uad00\uacc4 ID\ub97c \uc0bd\uc785\ud560 \uc218 \uc788\ub294 \ub85c\uae45 Aspect/Interceptor\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. import org.slf4j.MDC ; import java.util.UUID ; Class LoggingAspect { //interceptor @Before ( value = \"execution(* *.*(..))\" ) func before (...) { transactionId = generateTransactionId (); MDC . put ( CORRELATION_ID , transactionId ); } func generateTransactionId () { return UUID . randomUUID (). toString (); } }","title":"Logging.kr"},{"location":"windows/docs/logging.kr/#_1","text":"\ucee8\ud14c\uc774\ub108\ud654\ub41c \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc77c\ubc18\uc801\uc73c\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ub85c\uadf8\ub97c STDOUT\uc73c\ub85c \uc804\ub2ec\ud569\ub2c8\ub2e4. \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784\uc740 \uc774\ub7ec\ud55c \ub85c\uadf8\ub97c \ud2b8\ub7a9\ud558\uc5ec \ud2b9\uc815 \uc791\uc5c5(\uc77c\ubc18\uc801\uc73c\ub85c \ud30c\uc77c\uc5d0 \uc4f0\uae30)\uc744 \uc218\ud589\ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud30c\uc77c\uc774 \uc800\uc7a5\ub418\ub294 \uc704\uce58\ub294 \ucee8\ud14c\uc774\ub108 \ub7f0\ud0c0\uc784 \ubc0f \uad6c\uc131\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \uc708\ub3c4\uc6b0 \ud30c\ub4dc\uc640\uc758 \uadfc\ubcf8\uc801\uc778 \ucc28\uc774\uc810 \uc911 \ud558\ub098\ub294 STDOUT\uc744 \uc0dd\uc131\ud558\uc9c0 \uc54a\ub294\ub2e4\ub294 \uac83\uc785\ub2c8\ub2e4. LogMonitor \ub97c \uc2e4\ud589\ud558\uc5ec \uc2e4\ud589 \uc911\uc778 Windows \ucee8\ud14c\uc774\ub108\uc5d0\uc11c ETW (Windows\uc6a9 \uc774\ubca4\ud2b8 \ucd94\uc801), Windows \uc774\ubca4\ud2b8 \ub85c\uadf8 \ubc0f \uae30\ud0c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ubcc4 \ub85c\uadf8\ub97c \uac80\uc0c9\ud558\uace0 \ud615\uc2dd\uc774 \uc9c0\uc815\ub41c \ub85c\uadf8 \ucd9c\ub825\uc744 STDOUT\uc73c\ub85c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0 \ub2e4\uc74c \ud50c\ub8e8\uc5b8\ud2b8\ube44\ud2b8 \ub610\ub294 fluentd\ub97c \uc0ac\uc6a9\ud558\uc5ec Amazon CloudWatch\uc640 \uac19\uc740 \uc6d0\ud558\ub294 \ubaa9\uc801\uc9c0\ub85c \uc774\ub7ec\ud55c \ub85c\uadf8\ub97c \uc2a4\ud2b8\ub9ac\ubc0d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub85c\uadf8 \uc218\uc9d1 \uba54\ucee4\ub2c8\uc998\uc740 \ucfe0\ubc84\ub124\ud2f0\uc2a4 \ud30c\ub4dc\uc5d0\uc11c STDOUT/STDERR \ub85c\uadf8\ub97c \uac80\uc0c9\ud55c\ub2e4. \ub370\ubaac\uc14b \uc740 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub85c\uadf8\ub97c \uc218\uc9d1\ud558\ub294 \uc77c\ubc18\uc801\uc778 \ubc29\ubc95\uc785\ub2c8\ub2e4.\uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \ub3c5\ub9bd\uc801\uc73c\ub85c \ub85c\uadf8 \ub77c\uc6b0\ud305/\ud544\ud130\ub9c1/\uac15\ud654\ub97c \uad00\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. fluentd DaemonSet\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc774\ub7ec\ud55c \ub85c\uadf8\uc640 \uae30\ud0c0 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc0dd\uc131 \ub85c\uadf8\ub97c \uc6d0\ud558\ub294 \ub85c\uadf8 \uc218\uc9d1\uae30\ub85c \uc2a4\ud2b8\ub9ac\ubc0d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Windows \uc6cc\ud06c\ub85c\ub4dc\uc5d0\uc11c CloudWatch\ub85c\uc758 \ub85c\uadf8 \uc2a4\ud2b8\ub9ac\ubc0d\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 AWS \ube14\ub85c\uadf8 \ub97c \ucc38\uc870\ud558\uc138\uc694.","title":"\ub85c\uae45"},{"location":"windows/docs/logging.kr/#_2","text":"\ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0\uc11c Windows \uc6cc\ud06c\ub85c\ub4dc\ub97c \uc6b4\uc601\ud560 \ub54c \uc77c\ubc18\uc801\uc778 \ub85c\uae45 \ubaa8\ubc94 \uc0ac\ub840\ub294 \ud06c\uac8c \ub2e4\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ud56d\uc0c1 \uad6c\uc870\ud654\ub41c \ub85c\uadf8 \ud56d\ubaa9 (JSON/SYSLOG) \uc744 \uae30\ub85d\ud558\uba74 \uc774\ub7ec\ud55c \uad6c\uc870\ud654\ub41c \ud615\uc2dd\uc5d0 \ub300\ud574 \ubbf8\ub9ac \uc791\uc131\ub41c \ud30c\uc11c\uac00 \ub9ce\uae30 \ub54c\ubb38\uc5d0 \ub85c\uadf8 \ud56d\ubaa9\uc744 \ub354 \uc27d\uac8c \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc911\uc559 \uc9d1\uc911\ud654 \ub85c\uadf8 - \uc804\uc6a9 \ub85c\uae45 \ucee8\ud14c\uc774\ub108\ub97c \uc0ac\uc6a9\ud558\uc5ec \ubaa8\ub4e0 \ucee8\ud14c\uc774\ub108\uc5d0\uc11c \ub85c\uadf8 \uba54\uc2dc\uc9c0\ub97c \uc218\uc9d1\ud558\uace0 \ubaa9\uc801\uc9c0\ub85c \uc804\ub2ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub514\ubc84\uae45\ud560 \ub54c\ub97c \uc81c\uc678\ud558\uace0\ub294 \ub85c\uadf8 \uc0c1\uc138 \uc815\ubcf4 \ub97c \uc904\uc774\uc2ed\uc2dc\uc624.\uc0c1\uc138 \uc815\ubcf4\ub294 \ub85c\uae45 \uc778\ud504\ub77c\uc5d0 \ub9ce\uc740 \ubd80\ub2f4\uc744 \uc8fc\uace0 \ub178\uc774\uc988\ub85c \uc778\ud574 \uc911\uc694\ud55c \uc774\ubca4\ud2b8\uac00 \uc190\uc2e4\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uc801\uc744 \uc704\ud574 \ud56d\uc0c1 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc815\ubcf4 \ub97c \uac70\ub798/\uc694\uccad ID \uc640 \ud568\uaed8 \uae30\ub85d\ud558\uc2ed\uc2dc\uc624.\ucfe0\ubc84\ub124\ud2f0\uc2a4 \uc624\ube0c\uc81d\ud2b8\uc5d0\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc774\ub984\uc774 \ud3ec\ud568\ub418\uc9c0 \uc54a\uc73c\ubbc0\ub85c, \uc608\ub97c \ub4e4\uc5b4 \ub85c\uadf8\ub97c \ub514\ubc84\uae45\ud560 \ub54c \ud3ec\ub4dc \uc774\ub984 windows-twryrqyw \ub294 \uc544\ubb34\ub7f0 \uc758\ubbf8\uac00 \uc5c6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\uc774\ub807\uac8c \ud558\uba74 \ucd94\uc801\uc131\uc774 \ud5a5\uc0c1\ub418\uace0 \uc9d1\uacc4\ub41c \ub85c\uadf8\ub85c \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubb38\uc81c\ub97c \ud574\uacb0\ud558\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub429\ub2c8\ub2e4. \uc774\ub7ec\ud55c \ud2b8\ub79c\uc7ad\uc158/\uc0c1\uad00 \uad00\uacc4 ID\ub97c \uc0dd\uc131\ud558\ub294 \ubc29\ubc95\uc740 \ud504\ub85c\uadf8\ub798\ubc0d \uad6c\uc870\uc5d0 \ub530\ub77c \ub2e4\ub985\ub2c8\ub2e4. \ud558\uc9c0\ub9cc \ub9e4\uc6b0 \uc77c\ubc18\uc801\uc778 \ud328\ud134\uc740 \ub2e4\uc74c\uacfc \uac19\uc774 MDC (\ub9e4\ud551\ub41c \uc9c4\ub2e8 \ucee8\ud14d\uc2a4\ud2b8)\ub97c \uc0ac\uc6a9\ud558\uc5ec \ub4e4\uc5b4\uc624\ub294 \ubaa8\ub4e0 \uc694\uccad\uc5d0 \uace0\uc720\ud55c \ud2b8\ub79c\uc7ad\uc158/\uc0c1\uad00 \uad00\uacc4 ID\ub97c \uc0bd\uc785\ud560 \uc218 \uc788\ub294 \ub85c\uae45 Aspect/Interceptor\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc785\ub2c8\ub2e4. import org.slf4j.MDC ; import java.util.UUID ; Class LoggingAspect { //interceptor @Before ( value = \"execution(* *.*(..))\" ) func before (...) { transactionId = generateTransactionId (); MDC . put ( CORRELATION_ID , transactionId ); } func generateTransactionId () { return UUID . randomUUID (). toString (); } }","title":"\ub85c\uae45 \uad8c\uc7a5 \uc0ac\ud56d"},{"location":"windows/docs/logging/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Logging \u00b6 Containerized applications typically direct application logs to STDOUT. The container runtime traps these logs and does something with them - typically writes to a file. Where these files are stored depends on the container runtime and configuration. One fundamental difference with Windows pods is they do not generate STDOUT. You can run LogMonitor to retrieve the ETW (Event Tracing for Windows), Windows Event Logs and other application specific logs from running Windows containers and pipes formatted log output to STDOUT. These logs can then be streamed using fluent-bit or fluentd to your desired destination such as Amazon CloudWatch. The Log collection mechanism retrieves STDOUT/STDERR logs from Kubernetes pods. A DaemonSet is a common way to collect logs from containers. It gives you the ability to manage log routing/filtering/enrichment independently of the application. A fluentd DaemonSet can be used to stream these logs and any other application generated logs to a desired log aggregator. More detailed information about log streaming from Windows workloads to CloudWatch is explained here Logging Recomendations \u00b6 The general logging best practices are no different when operating Windows workloads in Kubernetes. Always log structured log entries (JSON/SYSLOG) which makes handling log entries easier as there are many pre-written parsers for such structured formats. Centralize logs - dedicated logging containers can be used specifically to gather and forward log messages from all containers to a destination Keep log verbosity down except when debugging. Verbosity places a lot of stress on the logging infrastructure and significant events can be lost in the noise. Always log the application information along with transaction/request id for traceability. Kubernetes objects do-not carry the application name, so for example a pod name windows-twryrqyw may not carry any meaning when debugging logs. This helps with traceability and troubleshooting applications with your aggregated logs. How you generate these transaction/correlation id's depends on the programming construct. But a very common pattern is to use a logging Aspect/Interceptor, which can use MDC (Mapped diagnostic context) to inject a unique transaction/correlation id to every incoming request, like so: import org.slf4j.MDC ; import java.util.UUID ; Class LoggingAspect { //interceptor @Before ( value = \"execution(* *.*(..))\" ) func before (...) { transactionId = generateTransactionId (); MDC . put ( CORRELATION_ID , transactionId ); } func generateTransactionId () { return UUID . randomUUID (). toString (); } }","title":"Logging ({'name': 'English', 'build': True})"},{"location":"windows/docs/logging/#logging","text":"Containerized applications typically direct application logs to STDOUT. The container runtime traps these logs and does something with them - typically writes to a file. Where these files are stored depends on the container runtime and configuration. One fundamental difference with Windows pods is they do not generate STDOUT. You can run LogMonitor to retrieve the ETW (Event Tracing for Windows), Windows Event Logs and other application specific logs from running Windows containers and pipes formatted log output to STDOUT. These logs can then be streamed using fluent-bit or fluentd to your desired destination such as Amazon CloudWatch. The Log collection mechanism retrieves STDOUT/STDERR logs from Kubernetes pods. A DaemonSet is a common way to collect logs from containers. It gives you the ability to manage log routing/filtering/enrichment independently of the application. A fluentd DaemonSet can be used to stream these logs and any other application generated logs to a desired log aggregator. More detailed information about log streaming from Windows workloads to CloudWatch is explained here","title":"Logging"},{"location":"windows/docs/logging/#logging-recomendations","text":"The general logging best practices are no different when operating Windows workloads in Kubernetes. Always log structured log entries (JSON/SYSLOG) which makes handling log entries easier as there are many pre-written parsers for such structured formats. Centralize logs - dedicated logging containers can be used specifically to gather and forward log messages from all containers to a destination Keep log verbosity down except when debugging. Verbosity places a lot of stress on the logging infrastructure and significant events can be lost in the noise. Always log the application information along with transaction/request id for traceability. Kubernetes objects do-not carry the application name, so for example a pod name windows-twryrqyw may not carry any meaning when debugging logs. This helps with traceability and troubleshooting applications with your aggregated logs. How you generate these transaction/correlation id's depends on the programming construct. But a very common pattern is to use a logging Aspect/Interceptor, which can use MDC (Mapped diagnostic context) to inject a unique transaction/correlation id to every incoming request, like so: import org.slf4j.MDC ; import java.util.UUID ; Class LoggingAspect { //interceptor @Before ( value = \"execution(* *.*(..))\" ) func before (...) { transactionId = generateTransactionId (); MDC . put ( CORRELATION_ID , transactionId ); } func generateTransactionId () { return UUID . randomUUID (). toString (); } }","title":"Logging Recomendations"},{"location":"windows/docs/monitoring.kr/","text":"{'name': 'English', 'build': True} \ubaa8\ub2c8\ud130\ub9c1 \u00b6 Prometheus, CNCF \uc878\uc5c5 \ud504\ub85c\uc81d\ud2b8 \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \ud1b5\ud569\ub418\ub294 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. Prometheus\ub294 \ucee8\ud14c\uc774\ub108, \ud3ec\ub4dc, \ub178\ub4dc \ubc0f \ud074\ub7ec\uc2a4\ud130\uc640 \uad00\ub828\ub41c \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4. \ub610\ud55c Prometheus\ub294 AlertsManager\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. AlertsManager\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \uacbd\uace0\ub97c \ud504\ub85c\uadf8\ub798\ubc0d\ud558\uc5ec \uacbd\uace0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prometheus\ub294 \uc9c0\ud45c \ub370\uc774\ud130\ub97c \uc9c0\ud45c \uc774\ub984 \ubc0f \ud0a4/\uac12 \uc30d\uc73c\ub85c \uc2dd\ubcc4\ub418\ub294 \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. Prometheus\uc5d0\ub294 Prometheus \ucffc\ub9ac \uc5b8\uc5b4\uc758 \uc904\uc784\ub9d0\uc778 PromQL\uc774\ub77c\ub294 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucffc\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Prometheus \uba54\ud2b8\ub9ad \uc218\uc9d1\uc758 \uc0c1\uc704 \uc218\uc900 \uc544\ud0a4\ud14d\ucc98\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub294 \ud480 \uba54\ucee4\ub2c8\uc998\uc744 \uc0ac\uc6a9\ud558\uace0 Exporter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0c0\uac9f\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uace0 kube state metrics \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud569\ub2c8\ub2e4.\uc989, \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc11c\ube44\uc2a4\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud615\uc2dd\uc758 \uba54\ud2b8\ub9ad\uc774 \ud3ec\ud568\ub41c HTTP(S) \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub178\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub294 \uad6c\uc131\uc5d0 \ub530\ub77c \uc8fc\uae30\uc801\uc73c\ub85c \uc774\ub7ec\ud55c HTTP(S) \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. Exporter\ub97c \uc0ac\uc6a9\ud558\uba74 \ud0c0\uc0ac \uc9c0\ud45c\ub97c Prometheus \ud615\uc2dd\uc758 \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Prometheus \uc775\uc2a4\ud3ec\ud130\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uac01 \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4.\uc775\uc2a4\ud3ec\ud130 \uc804\uccb4 \ubaa9\ub85d\uc740 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 Exporter \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. node exporter \ub294 Linux \ub178\ub4dc\uc6a9 \ud638\uc2a4\ud2b8 \ud558\ub4dc\uc6e8\uc5b4 \ubc0f OS \uba54\ud2b8\ub9ad\uc744 \ub0b4\ubcf4\ub0b4\ub294 \ub370 \uc801\ud569\ud558\uc9c0\ub9cc Windows \ub178\ub4dc\uc5d0\uc11c\ub294 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Windows \ub178\ub4dc\uac00 \uc788\ub294 \ud63c\ud569 \ub178\ub4dc EKS \ud074\ub7ec\uc2a4\ud130 \uc5d0\uc11c \uc548\uc815\uc801\uc778 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud5ec\ub984 \ucc28\ud2b8 \uc744 \uc0ac\uc6a9\ud558\uba74 Windows \ub178\ub4dc\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud55c \ud3ec\ub4dc\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774 \uc775\uc2a4\ud3ec\ud130\ub294 Windows\uc6a9\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.Windows \uc791\uc5c5\uc790 \ud480\uc744 \ubcc4\ub3c4\ub85c \ucc98\ub9ac\ud558\uace0 \ub300\uc2e0 Windows \uc791\uc5c5\uc790 \ub178\ub4dc \uadf8\ub8f9\uc5d0 [Windows \uc775\uc2a4\ud3ec\ud130] (https://github.com/prometheus-community/windows_exporter) \ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. In order to setup Prometheus monitoring for Windows nodes, you need to download and install the WMI exporter on the Windows server itself and then setup the targets inside the scrape configuration of the Prometheus configuration file. The releases page provides all available .msi installers, with respective feature sets and bug fixes. The installer will setup the windows_exporter as a Windows service, as well as create an exception in the Windows firewall. If the installer is run without any parameters, the exporter will run with default settings for enabled collectors, ports, etc. You can check out the scheduling best practices section of this guide which suggests the use of taints/tolerations or RuntimeClass to selectively deploy node exporter only to linux nodes, while the Windows exporter is installed on Windows nodes as you bootstrap the node or using a configuration management tool of your choice (example chef, Ansible, SSM etc). Note that, unlike the linux nodes where the node exporter is installed as a daemonset , on Windows nodes the WMI exporter is installed on the host itself. The exporter will export metrics such as the CPU usage, the memory and the disk I/O usage and can also be used to monitor IIS sites and applications, the network interfaces and services. The windows_exporter will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors. However, for advanced use the windows_exporter can be passed an optional list of collectors to filter metrics. The collect[] parameter, in the Prometheus configuration lets you do that. The default install steps for Windows include downloading and starting the exporter as a service during the bootstrapping process with arguments, such as the collectors you want to filter. > Powershell Invoke-WebRequest https :// github . com / prometheus-community / windows_exporter / releases / download / v0 . 13 . 0 / windows_exporter - 0 . 13 . 0-amd64 . msi -OutFile < DOWNLOADPATH > > msiexec / i < DOWNLOADPATH > ENABLED_COLLECTORS = \"cpu,cs,logical_disk,net,os,system,container,memory\" By default, the metrics can be scraped at the /metrics endpoint on port 9182. At this point, Prometheus can consume the metrics by adding the following scrape_config to the Prometheus configuration scrape_configs : - job_name : \"prometheus\" static_configs : - targets : [ 'localhost:9090' ] ... - job_name : \"wmi_exporter\" scrape_interval : 10s static_configs : - targets : [ '<windows-node1-ip>:9182' , '<windows-node2-ip>:9182' , ... ] Prometheus configuration is reloaded using > ps aux | grep prometheus > kill HUP <PID> A better and recommended way to add targets is to use a Custom Resource Definition called ServiceMonitor, which comes as part of the Prometheus operator ] that provides the definition for a ServiceMonitor Object and a controller that will activate the ServiceMonitors we define and automatically build the required Prometheus configuration. The ServiceMonitor, which declaratively specifies how groups of Kubernetes services should be monitored, is used to define an application you wish to scrape metrics from within Kubernetes. Within the ServiceMonitor we specify the Kubernetes labels that the operator can use to identify the Kubernetes Service which in turn identifies the Pods, that we wish to monitor. In order to leverage the ServiceMonitor, create an Endpoint object pointing to specific Windows targets, a headless service and a ServiceMontor for the Windows nodes. apiVersion : v1 kind : Endpoints metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system subsets : - addresses : - ip : NODE-ONE-IP targetRef : kind : Node name : NODE-ONE-NAME - ip : NODE-TWO-IP targetRef : kind : Node name : NODE-TWO-NAME - ip : NODE-THREE-IP targetRef : kind : Node name : NODE-THREE-NAME ports : - name : http-metrics port : 9182 protocol : TCP --- apiVersion : v1 kind : Service ##Headless Service metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system spec : clusterIP : None ports : - name : http-metrics port : 9182 protocol : TCP targetPort : 9182 sessionAffinity : None type : ClusterIP --- apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor ##Custom ServiceMonitor Object metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : monitoring spec : endpoints : - interval : 30s port : http-metrics jobLabel : k8s-app namespaceSelector : matchNames : - kube-system selector : matchLabels : k8s-app : wmiexporter For more details on the operator and the usage of ServiceMonitor, checkout the official operator documentation. Note that Prometheus does support dynamic target discovery using many service discovery options.","title":"Monitoring.kr"},{"location":"windows/docs/monitoring.kr/#_1","text":"Prometheus, CNCF \uc878\uc5c5 \ud504\ub85c\uc81d\ud2b8 \ub294 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \ud1b5\ud569\ub418\ub294 \uac00\uc7a5 \uc778\uae30 \uc788\ub294 \ubaa8\ub2c8\ud130\ub9c1 \uc2dc\uc2a4\ud15c\uc785\ub2c8\ub2e4. Prometheus\ub294 \ucee8\ud14c\uc774\ub108, \ud3ec\ub4dc, \ub178\ub4dc \ubc0f \ud074\ub7ec\uc2a4\ud130\uc640 \uad00\ub828\ub41c \uba54\ud2b8\ub9ad\uc744 \uc218\uc9d1\ud569\ub2c8\ub2e4. \ub610\ud55c Prometheus\ub294 AlertsManager\ub97c \ud65c\uc6a9\ud569\ub2c8\ub2e4. AlertsManager\ub97c \uc0ac\uc6a9\ud558\uba74 \ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uacbd\uc6b0 \uacbd\uace0\ub97c \ud504\ub85c\uadf8\ub798\ubc0d\ud558\uc5ec \uacbd\uace0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Prometheus\ub294 \uc9c0\ud45c \ub370\uc774\ud130\ub97c \uc9c0\ud45c \uc774\ub984 \ubc0f \ud0a4/\uac12 \uc30d\uc73c\ub85c \uc2dd\ubcc4\ub418\ub294 \uc2dc\uacc4\uc5f4 \ub370\uc774\ud130\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4. Prometheus\uc5d0\ub294 Prometheus \ucffc\ub9ac \uc5b8\uc5b4\uc758 \uc904\uc784\ub9d0\uc778 PromQL\uc774\ub77c\ub294 \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uc5ec \ucffc\ub9ac\ud558\ub294 \ubc29\ubc95\uc774 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. Prometheus \uba54\ud2b8\ub9ad \uc218\uc9d1\uc758 \uc0c1\uc704 \uc218\uc900 \uc544\ud0a4\ud14d\ucc98\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub294 \ud480 \uba54\ucee4\ub2c8\uc998\uc744 \uc0ac\uc6a9\ud558\uace0 Exporter\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud0c0\uac9f\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud558\uace0 kube state metrics \ub97c \uc0ac\uc6a9\ud558\uc5ec \ucfe0\ubc84\ub124\ud2f0\uc2a4 API\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uc2a4\ud06c\ub7a9\ud569\ub2c8\ub2e4.\uc989, \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uacfc \uc11c\ube44\uc2a4\ub294 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud615\uc2dd\uc758 \uba54\ud2b8\ub9ad\uc774 \ud3ec\ud568\ub41c HTTP(S) \uc5d4\ub4dc\ud3ec\uc778\ud2b8\ub97c \ub178\ucd9c\ud574\uc57c \ud569\ub2c8\ub2e4. \uadf8\ub7ec\uba74 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4\ub294 \uad6c\uc131\uc5d0 \ub530\ub77c \uc8fc\uae30\uc801\uc73c\ub85c \uc774\ub7ec\ud55c HTTP(S) \uc5d4\ub4dc\ud3ec\uc778\ud2b8\uc5d0\uc11c \uba54\ud2b8\ub9ad\uc744 \uac00\uc838\uc635\ub2c8\ub2e4. Exporter\ub97c \uc0ac\uc6a9\ud558\uba74 \ud0c0\uc0ac \uc9c0\ud45c\ub97c Prometheus \ud615\uc2dd\uc758 \uc9c0\ud45c\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.Prometheus \uc775\uc2a4\ud3ec\ud130\ub294 \uc77c\ubc18\uc801\uc73c\ub85c \uac01 \ub178\ub4dc\uc5d0 \ubc30\ud3ec\ub429\ub2c8\ub2e4.\uc775\uc2a4\ud3ec\ud130 \uc804\uccb4 \ubaa9\ub85d\uc740 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 Exporter \ub97c \ucc38\uc870\ud558\uc2ed\uc2dc\uc624. node exporter \ub294 Linux \ub178\ub4dc\uc6a9 \ud638\uc2a4\ud2b8 \ud558\ub4dc\uc6e8\uc5b4 \ubc0f OS \uba54\ud2b8\ub9ad\uc744 \ub0b4\ubcf4\ub0b4\ub294 \ub370 \uc801\ud569\ud558\uc9c0\ub9cc Windows \ub178\ub4dc\uc5d0\uc11c\ub294 \uc791\ub3d9\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. Windows \ub178\ub4dc\uac00 \uc788\ub294 \ud63c\ud569 \ub178\ub4dc EKS \ud074\ub7ec\uc2a4\ud130 \uc5d0\uc11c \uc548\uc815\uc801\uc778 \ud504\ub85c\uba54\ud14c\uc6b0\uc2a4 \ud5ec\ub984 \ucc28\ud2b8 \uc744 \uc0ac\uc6a9\ud558\uba74 Windows \ub178\ub4dc\uc5d0 \uc7a5\uc560\uac00 \ubc1c\uc0dd\ud55c \ud3ec\ub4dc\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4. \uc774 \uc775\uc2a4\ud3ec\ud130\ub294 Windows\uc6a9\uc774 \uc544\ub2c8\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.Windows \uc791\uc5c5\uc790 \ud480\uc744 \ubcc4\ub3c4\ub85c \ucc98\ub9ac\ud558\uace0 \ub300\uc2e0 Windows \uc791\uc5c5\uc790 \ub178\ub4dc \uadf8\ub8f9\uc5d0 [Windows \uc775\uc2a4\ud3ec\ud130] (https://github.com/prometheus-community/windows_exporter) \ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4. In order to setup Prometheus monitoring for Windows nodes, you need to download and install the WMI exporter on the Windows server itself and then setup the targets inside the scrape configuration of the Prometheus configuration file. The releases page provides all available .msi installers, with respective feature sets and bug fixes. The installer will setup the windows_exporter as a Windows service, as well as create an exception in the Windows firewall. If the installer is run without any parameters, the exporter will run with default settings for enabled collectors, ports, etc. You can check out the scheduling best practices section of this guide which suggests the use of taints/tolerations or RuntimeClass to selectively deploy node exporter only to linux nodes, while the Windows exporter is installed on Windows nodes as you bootstrap the node or using a configuration management tool of your choice (example chef, Ansible, SSM etc). Note that, unlike the linux nodes where the node exporter is installed as a daemonset , on Windows nodes the WMI exporter is installed on the host itself. The exporter will export metrics such as the CPU usage, the memory and the disk I/O usage and can also be used to monitor IIS sites and applications, the network interfaces and services. The windows_exporter will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors. However, for advanced use the windows_exporter can be passed an optional list of collectors to filter metrics. The collect[] parameter, in the Prometheus configuration lets you do that. The default install steps for Windows include downloading and starting the exporter as a service during the bootstrapping process with arguments, such as the collectors you want to filter. > Powershell Invoke-WebRequest https :// github . com / prometheus-community / windows_exporter / releases / download / v0 . 13 . 0 / windows_exporter - 0 . 13 . 0-amd64 . msi -OutFile < DOWNLOADPATH > > msiexec / i < DOWNLOADPATH > ENABLED_COLLECTORS = \"cpu,cs,logical_disk,net,os,system,container,memory\" By default, the metrics can be scraped at the /metrics endpoint on port 9182. At this point, Prometheus can consume the metrics by adding the following scrape_config to the Prometheus configuration scrape_configs : - job_name : \"prometheus\" static_configs : - targets : [ 'localhost:9090' ] ... - job_name : \"wmi_exporter\" scrape_interval : 10s static_configs : - targets : [ '<windows-node1-ip>:9182' , '<windows-node2-ip>:9182' , ... ] Prometheus configuration is reloaded using > ps aux | grep prometheus > kill HUP <PID> A better and recommended way to add targets is to use a Custom Resource Definition called ServiceMonitor, which comes as part of the Prometheus operator ] that provides the definition for a ServiceMonitor Object and a controller that will activate the ServiceMonitors we define and automatically build the required Prometheus configuration. The ServiceMonitor, which declaratively specifies how groups of Kubernetes services should be monitored, is used to define an application you wish to scrape metrics from within Kubernetes. Within the ServiceMonitor we specify the Kubernetes labels that the operator can use to identify the Kubernetes Service which in turn identifies the Pods, that we wish to monitor. In order to leverage the ServiceMonitor, create an Endpoint object pointing to specific Windows targets, a headless service and a ServiceMontor for the Windows nodes. apiVersion : v1 kind : Endpoints metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system subsets : - addresses : - ip : NODE-ONE-IP targetRef : kind : Node name : NODE-ONE-NAME - ip : NODE-TWO-IP targetRef : kind : Node name : NODE-TWO-NAME - ip : NODE-THREE-IP targetRef : kind : Node name : NODE-THREE-NAME ports : - name : http-metrics port : 9182 protocol : TCP --- apiVersion : v1 kind : Service ##Headless Service metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system spec : clusterIP : None ports : - name : http-metrics port : 9182 protocol : TCP targetPort : 9182 sessionAffinity : None type : ClusterIP --- apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor ##Custom ServiceMonitor Object metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : monitoring spec : endpoints : - interval : 30s port : http-metrics jobLabel : k8s-app namespaceSelector : matchNames : - kube-system selector : matchLabels : k8s-app : wmiexporter For more details on the operator and the usage of ServiceMonitor, checkout the official operator documentation. Note that Prometheus does support dynamic target discovery using many service discovery options.","title":"\ubaa8\ub2c8\ud130\ub9c1"},{"location":"windows/docs/monitoring/","text":"{'name': '\ud55c\uad6d\uc5b4', 'build': True, 'site_name': 'EKS \ubaa8\ubc94 \uc0ac\ub840 \uac00\uc774\ub4dc'} Monitoring \u00b6 Prometheus, a graduated CNCF project is by far the most popular monitoring system with native integration into Kubernetes. Prometheus collects metrics around containers, pods, nodes, and clusters. Additionally, Prometheus leverages AlertsManager which lets you program alerts to warn you if something in your cluster is going wrong. Prometheus stores the metric data as a time series data identified by metric name and key/value pairs. Prometheus includes away to query using a language called PromQL, which is short for Prometheus Query Language. The high level architecture of Prometheus metrics collection is shown below: Prometheus uses a pull mechanism and scrapes metrics from targets using exporters and from the Kubernetes API using the kube state metrics . This means applications and services must expose a HTTP(S) endpoint containing Prometheus formatted metrics. Prometheus will then, as per its configuration, periodically pull metrics from these HTTP(S) endpoints. An exporter lets you consume third party metrics as Prometheus formatted metrics. A Prometheus exporter is typically deployed on each node. For a complete list of exporters please refer to the Prometheus exporters . While node exporter is suited for exporting host hardware and OS metrics for linux nodes, it wont work for Windows nodes. In a mixed node EKS cluster with Windows nodes when you use the stable Prometheus helm chart , you will see failed pods on the Windows nodes, as this exporter is not intended for Windows. You will need to treat the Windows worker pool separate and instead install the Windows exporter on the Windows worker node group. In order to setup Prometheus monitoring for Windows nodes, you need to download and install the WMI exporter on the Windows server itself and then setup the targets inside the scrape configuration of the Prometheus configuration file. The releases page provides all available .msi installers, with respective feature sets and bug fixes. The installer will setup the windows_exporter as a Windows service, as well as create an exception in the Windows firewall. If the installer is run without any parameters, the exporter will run with default settings for enabled collectors, ports, etc. You can check out the scheduling best practices section of this guide which suggests the use of taints/tolerations or RuntimeClass to selectively deploy node exporter only to linux nodes, while the Windows exporter is installed on Windows nodes as you bootstrap the node or using a configuration management tool of your choice (example chef, Ansible, SSM etc). Note that, unlike the linux nodes where the node exporter is installed as a daemonset , on Windows nodes the WMI exporter is installed on the host itself. The exporter will export metrics such as the CPU usage, the memory and the disk I/O usage and can also be used to monitor IIS sites and applications, the network interfaces and services. The windows_exporter will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors. However, for advanced use the windows_exporter can be passed an optional list of collectors to filter metrics. The collect[] parameter, in the Prometheus configuration lets you do that. The default install steps for Windows include downloading and starting the exporter as a service during the bootstrapping process with arguments, such as the collectors you want to filter. > Powershell Invoke-WebRequest https :// github . com / prometheus-community / windows_exporter / releases / download / v0 . 13 . 0 / windows_exporter - 0 . 13 . 0-amd64 . msi -OutFile < DOWNLOADPATH > > msiexec / i < DOWNLOADPATH > ENABLED_COLLECTORS = \"cpu,cs,logical_disk,net,os,system,container,memory\" By default, the metrics can be scraped at the /metrics endpoint on port 9182. At this point, Prometheus can consume the metrics by adding the following scrape_config to the Prometheus configuration scrape_configs : - job_name : \"prometheus\" static_configs : - targets : [ 'localhost:9090' ] ... - job_name : \"wmi_exporter\" scrape_interval : 10s static_configs : - targets : [ '<windows-node1-ip>:9182' , '<windows-node2-ip>:9182' , ... ] Prometheus configuration is reloaded using > ps aux | grep prometheus > kill HUP <PID> A better and recommended way to add targets is to use a Custom Resource Definition called ServiceMonitor, which comes as part of the Prometheus operator ] that provides the definition for a ServiceMonitor Object and a controller that will activate the ServiceMonitors we define and automatically build the required Prometheus configuration. The ServiceMonitor, which declaratively specifies how groups of Kubernetes services should be monitored, is used to define an application you wish to scrape metrics from within Kubernetes. Within the ServiceMonitor we specify the Kubernetes labels that the operator can use to identify the Kubernetes Service which in turn identifies the Pods, that we wish to monitor. In order to leverage the ServiceMonitor, create an Endpoint object pointing to specific Windows targets, a headless service and a ServiceMontor for the Windows nodes. apiVersion : v1 kind : Endpoints metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system subsets : - addresses : - ip : NODE-ONE-IP targetRef : kind : Node name : NODE-ONE-NAME - ip : NODE-TWO-IP targetRef : kind : Node name : NODE-TWO-NAME - ip : NODE-THREE-IP targetRef : kind : Node name : NODE-THREE-NAME ports : - name : http-metrics port : 9182 protocol : TCP --- apiVersion : v1 kind : Service ##Headless Service metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system spec : clusterIP : None ports : - name : http-metrics port : 9182 protocol : TCP targetPort : 9182 sessionAffinity : None type : ClusterIP --- apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor ##Custom ServiceMonitor Object metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : monitoring spec : endpoints : - interval : 30s port : http-metrics jobLabel : k8s-app namespaceSelector : matchNames : - kube-system selector : matchLabels : k8s-app : wmiexporter For more details on the operator and the usage of ServiceMonitor, checkout the official operator documentation. Note that Prometheus does support dynamic target discovery using many service discovery options.","title":"Monitoring Windows Containers ({'name': 'English', 'build': True})"},{"location":"windows/docs/monitoring/#monitoring","text":"Prometheus, a graduated CNCF project is by far the most popular monitoring system with native integration into Kubernetes. Prometheus collects metrics around containers, pods, nodes, and clusters. Additionally, Prometheus leverages AlertsManager which lets you program alerts to warn you if something in your cluster is going wrong. Prometheus stores the metric data as a time series data identified by metric name and key/value pairs. Prometheus includes away to query using a language called PromQL, which is short for Prometheus Query Language. The high level architecture of Prometheus metrics collection is shown below: Prometheus uses a pull mechanism and scrapes metrics from targets using exporters and from the Kubernetes API using the kube state metrics . This means applications and services must expose a HTTP(S) endpoint containing Prometheus formatted metrics. Prometheus will then, as per its configuration, periodically pull metrics from these HTTP(S) endpoints. An exporter lets you consume third party metrics as Prometheus formatted metrics. A Prometheus exporter is typically deployed on each node. For a complete list of exporters please refer to the Prometheus exporters . While node exporter is suited for exporting host hardware and OS metrics for linux nodes, it wont work for Windows nodes. In a mixed node EKS cluster with Windows nodes when you use the stable Prometheus helm chart , you will see failed pods on the Windows nodes, as this exporter is not intended for Windows. You will need to treat the Windows worker pool separate and instead install the Windows exporter on the Windows worker node group. In order to setup Prometheus monitoring for Windows nodes, you need to download and install the WMI exporter on the Windows server itself and then setup the targets inside the scrape configuration of the Prometheus configuration file. The releases page provides all available .msi installers, with respective feature sets and bug fixes. The installer will setup the windows_exporter as a Windows service, as well as create an exception in the Windows firewall. If the installer is run without any parameters, the exporter will run with default settings for enabled collectors, ports, etc. You can check out the scheduling best practices section of this guide which suggests the use of taints/tolerations or RuntimeClass to selectively deploy node exporter only to linux nodes, while the Windows exporter is installed on Windows nodes as you bootstrap the node or using a configuration management tool of your choice (example chef, Ansible, SSM etc). Note that, unlike the linux nodes where the node exporter is installed as a daemonset , on Windows nodes the WMI exporter is installed on the host itself. The exporter will export metrics such as the CPU usage, the memory and the disk I/O usage and can also be used to monitor IIS sites and applications, the network interfaces and services. The windows_exporter will expose all metrics from enabled collectors by default. This is the recommended way to collect metrics to avoid errors. However, for advanced use the windows_exporter can be passed an optional list of collectors to filter metrics. The collect[] parameter, in the Prometheus configuration lets you do that. The default install steps for Windows include downloading and starting the exporter as a service during the bootstrapping process with arguments, such as the collectors you want to filter. > Powershell Invoke-WebRequest https :// github . com / prometheus-community / windows_exporter / releases / download / v0 . 13 . 0 / windows_exporter - 0 . 13 . 0-amd64 . msi -OutFile < DOWNLOADPATH > > msiexec / i < DOWNLOADPATH > ENABLED_COLLECTORS = \"cpu,cs,logical_disk,net,os,system,container,memory\" By default, the metrics can be scraped at the /metrics endpoint on port 9182. At this point, Prometheus can consume the metrics by adding the following scrape_config to the Prometheus configuration scrape_configs : - job_name : \"prometheus\" static_configs : - targets : [ 'localhost:9090' ] ... - job_name : \"wmi_exporter\" scrape_interval : 10s static_configs : - targets : [ '<windows-node1-ip>:9182' , '<windows-node2-ip>:9182' , ... ] Prometheus configuration is reloaded using > ps aux | grep prometheus > kill HUP <PID> A better and recommended way to add targets is to use a Custom Resource Definition called ServiceMonitor, which comes as part of the Prometheus operator ] that provides the definition for a ServiceMonitor Object and a controller that will activate the ServiceMonitors we define and automatically build the required Prometheus configuration. The ServiceMonitor, which declaratively specifies how groups of Kubernetes services should be monitored, is used to define an application you wish to scrape metrics from within Kubernetes. Within the ServiceMonitor we specify the Kubernetes labels that the operator can use to identify the Kubernetes Service which in turn identifies the Pods, that we wish to monitor. In order to leverage the ServiceMonitor, create an Endpoint object pointing to specific Windows targets, a headless service and a ServiceMontor for the Windows nodes. apiVersion : v1 kind : Endpoints metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system subsets : - addresses : - ip : NODE-ONE-IP targetRef : kind : Node name : NODE-ONE-NAME - ip : NODE-TWO-IP targetRef : kind : Node name : NODE-TWO-NAME - ip : NODE-THREE-IP targetRef : kind : Node name : NODE-THREE-NAME ports : - name : http-metrics port : 9182 protocol : TCP --- apiVersion : v1 kind : Service ##Headless Service metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : kube-system spec : clusterIP : None ports : - name : http-metrics port : 9182 protocol : TCP targetPort : 9182 sessionAffinity : None type : ClusterIP --- apiVersion : monitoring.coreos.com/v1 kind : ServiceMonitor ##Custom ServiceMonitor Object metadata : labels : k8s-app : wmiexporter name : wmiexporter namespace : monitoring spec : endpoints : - interval : 30s port : http-metrics jobLabel : k8s-app namespaceSelector : matchNames : - kube-system selector : matchLabels : k8s-app : wmiexporter For more details on the operator and the usage of ServiceMonitor, checkout the official operator documentation. Note that Prometheus does support dynamic target discovery using many service discovery options.","title":"Monitoring"},{"location":"windows/docs/networking/","text":"Windows Networking \u00b6 Windows Container Networking Overview \u00b6 Windows containers are fundamentally different than Linux containers. Linux containers use Linux constructs like namespaces, the union file system, and cgroups. On Windows, those constructs are abstracted from Docker by the Host Compute Service (HCS) . HCS acts as an API layer that sits above the container implementation on Windows. Windows containers also leverage the Host Network Service (HNS) that defines the network topology on a node. From a networking perspective, HCS and HNS make Windows containers function like virtual machines. For example, each container has a virtual network adapter (vNIC) that is connected to a Hyper-V virtual switch (vSwitch) as shown in the diagram above. IP Address Management \u00b6 A node in Amazon EKS uses it's Elastic Network Interface (ENI) to connect to an AWS VPC network. Presently, only a single ENI per Windows worker node is supported . The IP address management for Windows nodes is performed by VPC Resource Controller which runs in control plane. More details about the workflow for IP address management of Windows nodes can be found here . The number of pods that a Windows worker node can support is dictated by the size of the node and the number of available IPv4 addresses. You can calculate the IPv4 address available on the node as below: - By default, only secondary IPv4 addresses are assigned to the ENI. In such a case- Total IPv4 addresses available for Pods = Number of supported IPv4 addresses per interface - 1 We subtract one from the total count since one IPv4 addresses will be used as the primary address of the ENI and hence cannot be allocated to the Pods. - If the cluster has been configured for high pod density by enabling prefix delegation feature then- Total IPv4 addresses available for Pods = (Number of supported IPv4 addresses per interface - 1) * 16 Here, instead of allocating secondary IPv4 addresses, VPC Resource Controller will allocate /28 prefixes and therefore, the overall number of available IPv4 addresses will be boosted 16 times. Using the formula above, we can calculate max pods for an m5.large instance as below- - By default, when running in secondary IP mode- 10 secondary IPv4 addresses per ENI - 1 = 9 available IPv4 addresses - When using prefix delegation - (10 secondary IPv4 addresses per ENI - 1) * 16 = 144 available IPv4 addresses For more information on how many IP addresses an instance type can support, see IP addresses per network interface per instance type . Another key consideration is the flow of network traffic. With Windows there is a risk of port exhaustion on nodes with more than 100 services. When this condition arises, the nodes will start throwing errors with the following message: \"Policy creation failed: hcnCreateLoadBalancer failed in Win32: The specified port already exists.\" To address this issue, we leverage Direct Server Return (DSR). DSR is an implementation of asymmetric network load distribution. In other words, the request and response traffic use different network paths. This feature speeds up communication between pods and reduces the risk of port exhaustion. We therefore recommend enabling DSR on Windows nodes. DSR is enabled by default in Windows Server SAC EKS Optimized AMIs. For Windows Server 2019 LTSC EKS Optimized AMIs, you will need to enable it during instance provisioning using the script below and by using Windows Server 2019 Full or Core as the amiFamily in the eksctl nodeGroup. See eksctl custom AMI for additional information. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false In order to utilize DSR in Windows Server 2019 and above, you will need to specify the following kube-proxy flags during instance startup. You can do this by adjusting the userdata script associated with the self-managed node groups Launch Template . < powershell > [string] $EKSBinDir = \"$env:ProgramFiles\\Amazon\\EKS\" [string] $EKSBootstrapScriptName = 'Start-EKSBootstrap.ps1' [string] $EKSBootstrapScriptFile = \"$EKSBinDir\\$EKSBootstrapScriptName\" ( Get-Content $EKSBootstrapScriptFile ). replace ( '\"--proxy-mode=kernelspace\",' , '\"--proxy-mode=kernelspace\", \"--feature-gates WinDSR=true\", \"--enable-dsr\",' ) | Set-Content $EKSBootstrapScriptFile & $EKSBootstrapScriptFile -EKSClusterName \"eks-windows\" -APIServerEndpoint \"https://<REPLACE-EKS-CLUSTER-CONFIG-API-SERVER>\" -Base64ClusterCA \"<REPLACE-EKSCLUSTER-CONFIG-DETAILS-CA>\" -DNSClusterIP \"172.20.0.10\" -KubeletExtraArgs \"--node-labels=alpha.eksctl.io/cluster-name=eks-windows,alpha.eksctl.io/nodegroup-name=windows-ng-ltsc2019 --register-with-taints=\" 3 >& 1 4 >& 1 5 >& 1 6 >& 1 </ powershell > DSR enablement can be verified following the instructions in the Microsoft Networking blog and the Windows Containers on AWS Lab . Using an older versions of Windows will increase the risk of port exhaustion as those versions do not support DSR. Container Network Interface (CNI) options \u00b6 The AWSVPC CNI is the de facto CNI plugin for Windows and Linux worker nodes. While the AWSVPC CNI satisfies the needs of many customers, still there may be times when you need to consider alternatives like an overlay network to avoid IP exhaustion. In these cases, the Calico CNI can be used in place of the AWSVPC CNI. Project Calico is open source software that was developed by Tigera . That software includes a CNI that works with EKS. Instructions for installing Calico CNI in EKS can be found on the Project Calico EKS installation page. Network Polices \u00b6 It is considered a best practice to change from the default mode of open communication between pods on your Kubernetes cluster to limiting access based on network polices. The open source Project Calico has strong support for network polices that work with both Linux and Windows nodes. This feature is separate and not dependent on using the Calico CNI. We therefore recommend installing Calico and using it for network policy management. Instructions for installing Calico in EKS can be found on the Installing Calico on Amazon EKS page. In addition, the advice provided in the Amazon EKS Best Practices Guide for Security - Network Section applies equally to EKS clusters with Windows worker nodes, however, some features like \"Security Groups for Pods\" are not supported by Windows at this time.","title":"Windows Networking"},{"location":"windows/docs/networking/#windows-networking","text":"","title":"Windows Networking"},{"location":"windows/docs/networking/#windows-container-networking-overview","text":"Windows containers are fundamentally different than Linux containers. Linux containers use Linux constructs like namespaces, the union file system, and cgroups. On Windows, those constructs are abstracted from Docker by the Host Compute Service (HCS) . HCS acts as an API layer that sits above the container implementation on Windows. Windows containers also leverage the Host Network Service (HNS) that defines the network topology on a node. From a networking perspective, HCS and HNS make Windows containers function like virtual machines. For example, each container has a virtual network adapter (vNIC) that is connected to a Hyper-V virtual switch (vSwitch) as shown in the diagram above.","title":"Windows Container Networking Overview"},{"location":"windows/docs/networking/#ip-address-management","text":"A node in Amazon EKS uses it's Elastic Network Interface (ENI) to connect to an AWS VPC network. Presently, only a single ENI per Windows worker node is supported . The IP address management for Windows nodes is performed by VPC Resource Controller which runs in control plane. More details about the workflow for IP address management of Windows nodes can be found here . The number of pods that a Windows worker node can support is dictated by the size of the node and the number of available IPv4 addresses. You can calculate the IPv4 address available on the node as below: - By default, only secondary IPv4 addresses are assigned to the ENI. In such a case- Total IPv4 addresses available for Pods = Number of supported IPv4 addresses per interface - 1 We subtract one from the total count since one IPv4 addresses will be used as the primary address of the ENI and hence cannot be allocated to the Pods. - If the cluster has been configured for high pod density by enabling prefix delegation feature then- Total IPv4 addresses available for Pods = (Number of supported IPv4 addresses per interface - 1) * 16 Here, instead of allocating secondary IPv4 addresses, VPC Resource Controller will allocate /28 prefixes and therefore, the overall number of available IPv4 addresses will be boosted 16 times. Using the formula above, we can calculate max pods for an m5.large instance as below- - By default, when running in secondary IP mode- 10 secondary IPv4 addresses per ENI - 1 = 9 available IPv4 addresses - When using prefix delegation - (10 secondary IPv4 addresses per ENI - 1) * 16 = 144 available IPv4 addresses For more information on how many IP addresses an instance type can support, see IP addresses per network interface per instance type . Another key consideration is the flow of network traffic. With Windows there is a risk of port exhaustion on nodes with more than 100 services. When this condition arises, the nodes will start throwing errors with the following message: \"Policy creation failed: hcnCreateLoadBalancer failed in Win32: The specified port already exists.\" To address this issue, we leverage Direct Server Return (DSR). DSR is an implementation of asymmetric network load distribution. In other words, the request and response traffic use different network paths. This feature speeds up communication between pods and reduces the risk of port exhaustion. We therefore recommend enabling DSR on Windows nodes. DSR is enabled by default in Windows Server SAC EKS Optimized AMIs. For Windows Server 2019 LTSC EKS Optimized AMIs, you will need to enable it during instance provisioning using the script below and by using Windows Server 2019 Full or Core as the amiFamily in the eksctl nodeGroup. See eksctl custom AMI for additional information. nodeGroups : - name : windows-ng instanceType : c5.xlarge minSize : 1 volumeSize : 50 amiFamily : WindowsServer2019CoreContainer ssh : allow : false In order to utilize DSR in Windows Server 2019 and above, you will need to specify the following kube-proxy flags during instance startup. You can do this by adjusting the userdata script associated with the self-managed node groups Launch Template . < powershell > [string] $EKSBinDir = \"$env:ProgramFiles\\Amazon\\EKS\" [string] $EKSBootstrapScriptName = 'Start-EKSBootstrap.ps1' [string] $EKSBootstrapScriptFile = \"$EKSBinDir\\$EKSBootstrapScriptName\" ( Get-Content $EKSBootstrapScriptFile ). replace ( '\"--proxy-mode=kernelspace\",' , '\"--proxy-mode=kernelspace\", \"--feature-gates WinDSR=true\", \"--enable-dsr\",' ) | Set-Content $EKSBootstrapScriptFile & $EKSBootstrapScriptFile -EKSClusterName \"eks-windows\" -APIServerEndpoint \"https://<REPLACE-EKS-CLUSTER-CONFIG-API-SERVER>\" -Base64ClusterCA \"<REPLACE-EKSCLUSTER-CONFIG-DETAILS-CA>\" -DNSClusterIP \"172.20.0.10\" -KubeletExtraArgs \"--node-labels=alpha.eksctl.io/cluster-name=eks-windows,alpha.eksctl.io/nodegroup-name=windows-ng-ltsc2019 --register-with-taints=\" 3 >& 1 4 >& 1 5 >& 1 6 >& 1 </ powershell > DSR enablement can be verified following the instructions in the Microsoft Networking blog and the Windows Containers on AWS Lab . Using an older versions of Windows will increase the risk of port exhaustion as those versions do not support DSR.","title":"IP Address Management"},{"location":"windows/docs/networking/#container-network-interface-cni-options","text":"The AWSVPC CNI is the de facto CNI plugin for Windows and Linux worker nodes. While the AWSVPC CNI satisfies the needs of many customers, still there may be times when you need to consider alternatives like an overlay network to avoid IP exhaustion. In these cases, the Calico CNI can be used in place of the AWSVPC CNI. Project Calico is open source software that was developed by Tigera . That software includes a CNI that works with EKS. Instructions for installing Calico CNI in EKS can be found on the Project Calico EKS installation page.","title":"Container Network Interface (CNI) options"},{"location":"windows/docs/networking/#network-polices","text":"It is considered a best practice to change from the default mode of open communication between pods on your Kubernetes cluster to limiting access based on network polices. The open source Project Calico has strong support for network polices that work with both Linux and Windows nodes. This feature is separate and not dependent on using the Calico CNI. We therefore recommend installing Calico and using it for network policy management. Instructions for installing Calico in EKS can be found on the Installing Calico on Amazon EKS page. In addition, the advice provided in the Amazon EKS Best Practices Guide for Security - Network Section applies equally to EKS clusters with Windows worker nodes, however, some features like \"Security Groups for Pods\" are not supported by Windows at this time.","title":"Network Polices"},{"location":"windows/docs/oom/","text":"Avoiding OOM errors \u00b6 Windows does not have an out-of-memory process killer as Linux does. Windows always treats all user-mode memory allocations as virtual, and pagefiles are mandatory. The net effect is that Windows won't reach out of memory conditions the same way Linux does. Processes will page to disk instead of being subject to out of memory (OOM) termination. If memory is over-provisioned and all physical memory is exhausted, then paging can slow down performance. Reserving system and kubelet memory \u00b6 Different from Linux where --kubelet-reserve capture resource reservation for kubernetes system daemons like kubelet, container runtime, etc; and --system-reserve capture resource reservation for OS system daemons like sshd, udev and etc. On Windows these flags do not capture and set memory limits on kubelet or processes running on the node. However, you can combine these flags to manage NodeAllocatable to reduce Capacity on the node with Pod manifest memory resource limit to control memory allocation per pod. Using this strategy you have a better control of memory allocation as well as a mechanism to minimize out-of-memory (OOM) on Windows nodes. On Windows nodes, a best practice is to reserve at least 2GB of memory for the OS and process. Use --kubelet-reserve and/or --system-reserve to reduce NodeAllocatable. Following the Amazon EKS Self-managed Windows nodes documentation, use the CloudFormation template to launch a new Windows node group with customizations to kubelet configuration. The CloudFormation has an element called BootstrapArguments which is the same as KubeletExtraArgs . Use with the following flags and values: --kube-reserved memory = 0 .5Gi,ephemeral-storage = 1Gi --system-reserved memory = 1 .5Gi,ephemeral-storage = 1Gi --eviction-hard memory.available<200Mi,nodefs.available< 10 % \" If eksctl is the deployment tool, check the following documentation to customize the kubelet configuration https://eksctl.io/usage/customizing-the-kubelet/ Windows container memory requirements \u00b6 As per Microsoft documentation , a Windows Server base image for NANO requires at least 30MB, whereas Server Core requires 45MB. These numbers grow as you add Windows components such as the .NET Framework, Web Services as IIS and applications. It is essential for you to know the minimum amount of memory required by your Windows container image, i.e. the base image plus its application layers, and set it as the container's resources/requests in the pod specification. You should also set a limit to avoid pods to consume all the available node memory in case of an application issue. In the example below, when the Kubernetes scheduler tries to place a pod on a node, the pod's requests are used to determine which node has sufficient resources available for scheduling. spec : - name : iis image : mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019 resources : limits : cpu : 1 memory : 800Mi requests : cpu : .1 memory : 128Mi Conclusion \u00b6 Using this approach minimizes the risks of memory exhaustion but does not prevent it happen. Using Amazon CloudWatch Metrics, you can set up alerts and remediations in case of memory exhaustion occurs.","title":"Memory and Systems Management"},{"location":"windows/docs/oom/#avoiding-oom-errors","text":"Windows does not have an out-of-memory process killer as Linux does. Windows always treats all user-mode memory allocations as virtual, and pagefiles are mandatory. The net effect is that Windows won't reach out of memory conditions the same way Linux does. Processes will page to disk instead of being subject to out of memory (OOM) termination. If memory is over-provisioned and all physical memory is exhausted, then paging can slow down performance.","title":"Avoiding OOM errors"},{"location":"windows/docs/oom/#reserving-system-and-kubelet-memory","text":"Different from Linux where --kubelet-reserve capture resource reservation for kubernetes system daemons like kubelet, container runtime, etc; and --system-reserve capture resource reservation for OS system daemons like sshd, udev and etc. On Windows these flags do not capture and set memory limits on kubelet or processes running on the node. However, you can combine these flags to manage NodeAllocatable to reduce Capacity on the node with Pod manifest memory resource limit to control memory allocation per pod. Using this strategy you have a better control of memory allocation as well as a mechanism to minimize out-of-memory (OOM) on Windows nodes. On Windows nodes, a best practice is to reserve at least 2GB of memory for the OS and process. Use --kubelet-reserve and/or --system-reserve to reduce NodeAllocatable. Following the Amazon EKS Self-managed Windows nodes documentation, use the CloudFormation template to launch a new Windows node group with customizations to kubelet configuration. The CloudFormation has an element called BootstrapArguments which is the same as KubeletExtraArgs . Use with the following flags and values: --kube-reserved memory = 0 .5Gi,ephemeral-storage = 1Gi --system-reserved memory = 1 .5Gi,ephemeral-storage = 1Gi --eviction-hard memory.available<200Mi,nodefs.available< 10 % \" If eksctl is the deployment tool, check the following documentation to customize the kubelet configuration https://eksctl.io/usage/customizing-the-kubelet/","title":"Reserving system and kubelet memory"},{"location":"windows/docs/oom/#windows-container-memory-requirements","text":"As per Microsoft documentation , a Windows Server base image for NANO requires at least 30MB, whereas Server Core requires 45MB. These numbers grow as you add Windows components such as the .NET Framework, Web Services as IIS and applications. It is essential for you to know the minimum amount of memory required by your Windows container image, i.e. the base image plus its application layers, and set it as the container's resources/requests in the pod specification. You should also set a limit to avoid pods to consume all the available node memory in case of an application issue. In the example below, when the Kubernetes scheduler tries to place a pod on a node, the pod's requests are used to determine which node has sufficient resources available for scheduling. spec : - name : iis image : mcr.microsoft.com/windows/servercore/iis:windowsservercore-ltsc2019 resources : limits : cpu : 1 memory : 800Mi requests : cpu : .1 memory : 128Mi","title":"Windows container memory requirements"},{"location":"windows/docs/oom/#conclusion","text":"Using this approach minimizes the risks of memory exhaustion but does not prevent it happen. Using Amazon CloudWatch Metrics, you can set up alerts and remediations in case of memory exhaustion occurs.","title":"Conclusion"},{"location":"windows/docs/patching/","text":"Patching Windows Servers and Containers \u00b6 Patching Windows Server is a standard management task for Windows Administrators. This can be accomplished using different tools like Amazon System Manager - Patch Manager, WSUS, System Center Configuration Manager, and many others. However, Windows nodes in an Amazon EKS cluster should not be treated as an ordinary Windows servers. They should be treated as an immutable server. Simply put, avoid updating an existing node, just launch a new one based on an new updated AMI. Using EC2 Image Builder you can automate AMIs build, by creating recipes and adding components. The following example shows components , which can be pre-existing ones built by AWS (Amazon-managed) as well as the components you create (Owned by me). Pay close attention to the Amazon-managed component called update-windows , this updates Windows Server before generating the AMI through the EC2 Image Builder pipeline. EC2 Image Builder allows you to build AMI's based off Amazon Managed Public AMIs and customize them to meet your business requirements. You can then associate those AMIs with Launch Templates which allows you to link a new AMI to the Auto Scaling Group created by the EKS Nodegroup. After that is complete, you can begin terminating the existing Windows Nodes and new ones will be launched based on the new updated AMI. Pushing and pulling Windows images \u00b6 Amazon publishes EKS optimized AMIs that include two cached Windows container images. mcr.microsoft.com/windows/servercore mcr.microsoft.com/windows/nanoserver Cached images are updated following the updates on the main OS. When Microsoft releases a new Windows update that directly affects the Windows container base image, the update will be launched as an ordinary Windows Update on the main OS. Keeping the environment up-to-date offers a more secure environment at the Node and Container level. The size of a Windows container image influences push/pull operations which can lead to slow container startup times. Caching Windows container images allows the expensive I/O operations (file extraction) to occur on the AMI build creation instead of the container launch. As a result, all the necessary image layers will be extracted on the AMI and will be ready to be used, speeding up the time a Windows container launches and can start accepting traffic. During a push operation, only the layers that compose your image are uploaded to the repository. The following example shows that on the Amazon ECR the fluentd-windows-sac2004 images have only 390.18MB . This is the amount of upload that happened during the push operation. The following example shows a fluentd Windows ltsc image pushed to an Amazon ECR repository. The size of the layer stored in ECR is 533.05MB . The output below from docker image ls , the size of the fluentd v1.14-windows-ltsc2019-1 is 6.96GB on disk, but that doesn't mean it downloaded and extracted that amount of data. In practice, during the pull operation only the compressed 533.05MB will be downloaded and extracted. REPOSITORY TAG IMAGE ID CREATED SIZE 111122223333 .dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-coreltsc latest 721afca2c725 7 weeks ago 6 .96GB fluent/fluentd v1.14-windows-ltsc2019-1 721afca2c725 7 weeks ago 6 .96GB amazonaws.com/eks/pause-windows latest 6392f69ae6e7 10 months ago 255MB The size column shows the overall size of image, 6.96GB. Breaking it down: Windows Server Core 2019 LTSC Base image = 5.74GB Fluentd Uncompressed Base Image = 6.96GB Difference on disk = 1.2GB Fluentd compressed final image ECR = 533.05MB The base image already exists on the local disk, resulting in the total amount on disk being 1.2GB additional. The next time you see the amount of GBs in the size column, don't worry too much, likely more than 70% is already on disk as a cached container image. Reference \u00b6 Speeding up Windows container launch times with EC2 Image builder and image cache strategy","title":"Infrastructure Management"},{"location":"windows/docs/patching/#patching-windows-servers-and-containers","text":"Patching Windows Server is a standard management task for Windows Administrators. This can be accomplished using different tools like Amazon System Manager - Patch Manager, WSUS, System Center Configuration Manager, and many others. However, Windows nodes in an Amazon EKS cluster should not be treated as an ordinary Windows servers. They should be treated as an immutable server. Simply put, avoid updating an existing node, just launch a new one based on an new updated AMI. Using EC2 Image Builder you can automate AMIs build, by creating recipes and adding components. The following example shows components , which can be pre-existing ones built by AWS (Amazon-managed) as well as the components you create (Owned by me). Pay close attention to the Amazon-managed component called update-windows , this updates Windows Server before generating the AMI through the EC2 Image Builder pipeline. EC2 Image Builder allows you to build AMI's based off Amazon Managed Public AMIs and customize them to meet your business requirements. You can then associate those AMIs with Launch Templates which allows you to link a new AMI to the Auto Scaling Group created by the EKS Nodegroup. After that is complete, you can begin terminating the existing Windows Nodes and new ones will be launched based on the new updated AMI.","title":"Patching Windows Servers and Containers"},{"location":"windows/docs/patching/#pushing-and-pulling-windows-images","text":"Amazon publishes EKS optimized AMIs that include two cached Windows container images. mcr.microsoft.com/windows/servercore mcr.microsoft.com/windows/nanoserver Cached images are updated following the updates on the main OS. When Microsoft releases a new Windows update that directly affects the Windows container base image, the update will be launched as an ordinary Windows Update on the main OS. Keeping the environment up-to-date offers a more secure environment at the Node and Container level. The size of a Windows container image influences push/pull operations which can lead to slow container startup times. Caching Windows container images allows the expensive I/O operations (file extraction) to occur on the AMI build creation instead of the container launch. As a result, all the necessary image layers will be extracted on the AMI and will be ready to be used, speeding up the time a Windows container launches and can start accepting traffic. During a push operation, only the layers that compose your image are uploaded to the repository. The following example shows that on the Amazon ECR the fluentd-windows-sac2004 images have only 390.18MB . This is the amount of upload that happened during the push operation. The following example shows a fluentd Windows ltsc image pushed to an Amazon ECR repository. The size of the layer stored in ECR is 533.05MB . The output below from docker image ls , the size of the fluentd v1.14-windows-ltsc2019-1 is 6.96GB on disk, but that doesn't mean it downloaded and extracted that amount of data. In practice, during the pull operation only the compressed 533.05MB will be downloaded and extracted. REPOSITORY TAG IMAGE ID CREATED SIZE 111122223333 .dkr.ecr.us-east-1.amazonaws.com/fluentd-windows-coreltsc latest 721afca2c725 7 weeks ago 6 .96GB fluent/fluentd v1.14-windows-ltsc2019-1 721afca2c725 7 weeks ago 6 .96GB amazonaws.com/eks/pause-windows latest 6392f69ae6e7 10 months ago 255MB The size column shows the overall size of image, 6.96GB. Breaking it down: Windows Server Core 2019 LTSC Base image = 5.74GB Fluentd Uncompressed Base Image = 6.96GB Difference on disk = 1.2GB Fluentd compressed final image ECR = 533.05MB The base image already exists on the local disk, resulting in the total amount on disk being 1.2GB additional. The next time you see the amount of GBs in the size column, don't worry too much, likely more than 70% is already on disk as a cached container image.","title":"Pushing and pulling Windows images"},{"location":"windows/docs/patching/#reference","text":"Speeding up Windows container launch times with EC2 Image builder and image cache strategy","title":"Reference"},{"location":"windows/docs/scheduling/","text":"Running Heterogeneous workloads\u00b6 \u00b6 Kubernetes has support for heterogeneous clusters where you can have a mixture of Linux and Windows nodes in the same cluster. Within that cluster, you can have a mixture of Pods that run on Linux and Pods that run on Windows. You can even run multiple versions of Windows in the same cluster. However, there are several factors (as mentioned below) that will need to be accounted for when making this decision. Assigning PODs to Nodes Best practices \u00b6 In order to keep Linux and Windows workloads on their respective OS-specific nodes, you need to use some combination of node selectors and taints/tolerations. The main goal of scheduling workloads in a heterogeneous environment is to avoid breaking compatibility for existing Linux workloads. Ensuring OS-specific workloads land on the appropriate container host \u00b6 Users can ensure Windows containers can be scheduled on the appropriate host using nodeSelectors. All Kubernetes nodes today have the following default labels: kubernetes.io/os = [windows|linux] kubernetes.io/arch = [amd64|arm64|...] If a Pod specification does not include a nodeSelector like \"kubernetes.io/os\": windows , the Pod may be scheduled on any host, Windows or Linux. This can be problematic since a Windows container can only run on Windows and a Linux container can only run on Linux. In Enterprise environments, it's not uncommon to have a large number of pre-existing deployments for Linux containers, as well as an ecosystem of off-the-shelf configurations, like Helm charts. In these situations, you may be hesitant to make changes to a deployment's nodeSelectors. The alternative is to use Taints . For example: --register-with-taints='os=windows:NoSchedule' If you are using EKS, eksctl offers ways to apply taints through clusterConfig: NodeGroups : - name : windows-ng amiFamily : WindowsServer2022FullContainer ... labels : nodeclass : windows2022 taints : os : \"windows:NoSchedule\" Adding a taint to all Windows nodes, the scheduler will not schedule pods on those nodes unless they tolerate the taint. Pod manifest example: nodeSelector : kubernetes.io/os : windows tolerations : - key : \"os\" operator : \"Equal\" value : \"windows\" effect : \"NoSchedule\" Handling multiple Windows build in the same cluster \u00b6 The Windows container base image used by each pod must match the same kernel build version as the node. If you want to use multiple Windows Server builds in the same cluster, then you should set additional node labels, nodeSelectors or leverage a label called windows-build . Kubernetes 1.17 automatically adds a new label node.kubernetes.io/windows-build to simplify the management of multiple Windows build in the same cluster. If you're running an older version, then it's recommended to add this label manually to Windows nodes. This label reflects the Windows major, minor, and build number that need to match for compatibility. Below are values used today for each Windows Server version. It's important to note that Windows Server is moving to the Long-Term Servicing Channel (LTSC) as the primary release channel. The Windows Server Semi-Annual Channel (SAC) was retired on August 9, 2022. There will be no future SAC releases of Windows Server. Product Name Build Number(s) Server full 2022 LTSC 10.0.20348 Server core 2019 LTSC 10.0.17763 It is possible to check the OS build version through the following command: kubectl get nodes -o wide The KERNEL-VERSION output matches the Windows OS build version. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME ip-10-10-2-235.ec2.internal Ready <none> 23m v1.24.7-eks-fb459a0 10 .10.2.235 3 .236.30.157 Windows Server 2022 Datacenter 10 .0.20348.1607 containerd://1.6.6 ip-10-10-31-27.ec2.internal Ready <none> 23m v1.24.7-eks-fb459a0 10 .10.31.27 44 .204.218.24 Windows Server 2019 Datacenter 10 .0.17763.4131 containerd://1.6.6 ip-10-10-7-54.ec2.internal Ready <none> 31m v1.24.11-eks-a59e1f0 10 .10.7.54 3 .227.8.172 Amazon Linux 2 5 .10.173-154.642.amzn2.x86_64 containerd://1.6.19 The example below applies an additional nodeSelector to the pod manifest in order to match the correct Windows-build version when running different Windows node groups OS versions. nodeSelector : kubernetes.io/os : windows node.kubernetes.io/windows-build : '10.0.20348' tolerations : - key : \"os\" operator : \"Equal\" value : \"windows\" effect : \"NoSchedule\" Simplifying NodeSelector and Toleration in Pod manifests using RuntimeClass \u00b6 You can also make use of RuntimeClass to simplify the process of using taints and tolerations. This can be accomplished by creating a RuntimeClass object which is used to encapsulate these taints and tolerations. Create a RuntimeClass by running the following manifest: apiVersion : node.k8s.io/v1beta1 kind : RuntimeClass metadata : name : windows-2022 handler : 'docker' scheduling : nodeSelector : kubernetes.io/os : 'windows' kubernetes.io/arch : 'amd64' node.kubernetes.io/windows-build : '10.0.20348' tolerations : - effect : NoSchedule key : os operator : Equal value : \"windows\" Once the Runtimeclass is created, assign it using as a Spec on the Pod manifest: apiVersion : apps/v1 kind : Deployment metadata : name : iis-2022 labels : app : iis-2022 spec : replicas : 1 template : metadata : name : iis-2022 labels : app : iis-2022 spec : runtimeClassName : windows-2022 containers : - name : iis Managed Node Group Support \u00b6 To help customers run their Windows applications in a more streamlined manner, AWS launched the support for Amazon EKS Managed Node Group (MNG) support for Windows containers on December 15, 2022. To help align operations teams, Windows MNGs are enabled using the same workflows and tools as Linux MNGs . Full and core AMI (Amazon Machine Image) family versions of Windows Server 2019 and 2022 are supported. Following AMI families are supported for Managed Node Groups(MNG)s. AMI Family WINDOWS_CORE_2019_x86_64 WINDOWS_FULL_2019_x86_64 WINDOWS_CORE_2022_x86_64 WINDOWS_FULL_2022_x86_64 Additional documentations \u00b6 AWS Official Documentation: https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html To better understand how Pod Networking (CNI) works, check the following link: https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html AWS Blog on Deploying Managed Node Group for Windows on EKS: https://aws.amazon.com/blogs/containers/deploying-amazon-eks-windows-managed-node-groups/","title":"Scheduling"},{"location":"windows/docs/scheduling/#running-heterogeneous-workloads","text":"Kubernetes has support for heterogeneous clusters where you can have a mixture of Linux and Windows nodes in the same cluster. Within that cluster, you can have a mixture of Pods that run on Linux and Pods that run on Windows. You can even run multiple versions of Windows in the same cluster. However, there are several factors (as mentioned below) that will need to be accounted for when making this decision.","title":"Running Heterogeneous workloads\u00b6"},{"location":"windows/docs/scheduling/#assigning-pods-to-nodes-best-practices","text":"In order to keep Linux and Windows workloads on their respective OS-specific nodes, you need to use some combination of node selectors and taints/tolerations. The main goal of scheduling workloads in a heterogeneous environment is to avoid breaking compatibility for existing Linux workloads.","title":"Assigning PODs to Nodes Best practices"},{"location":"windows/docs/scheduling/#ensuring-os-specific-workloads-land-on-the-appropriate-container-host","text":"Users can ensure Windows containers can be scheduled on the appropriate host using nodeSelectors. All Kubernetes nodes today have the following default labels: kubernetes.io/os = [windows|linux] kubernetes.io/arch = [amd64|arm64|...] If a Pod specification does not include a nodeSelector like \"kubernetes.io/os\": windows , the Pod may be scheduled on any host, Windows or Linux. This can be problematic since a Windows container can only run on Windows and a Linux container can only run on Linux. In Enterprise environments, it's not uncommon to have a large number of pre-existing deployments for Linux containers, as well as an ecosystem of off-the-shelf configurations, like Helm charts. In these situations, you may be hesitant to make changes to a deployment's nodeSelectors. The alternative is to use Taints . For example: --register-with-taints='os=windows:NoSchedule' If you are using EKS, eksctl offers ways to apply taints through clusterConfig: NodeGroups : - name : windows-ng amiFamily : WindowsServer2022FullContainer ... labels : nodeclass : windows2022 taints : os : \"windows:NoSchedule\" Adding a taint to all Windows nodes, the scheduler will not schedule pods on those nodes unless they tolerate the taint. Pod manifest example: nodeSelector : kubernetes.io/os : windows tolerations : - key : \"os\" operator : \"Equal\" value : \"windows\" effect : \"NoSchedule\"","title":"Ensuring OS-specific workloads land on the appropriate container host"},{"location":"windows/docs/scheduling/#handling-multiple-windows-build-in-the-same-cluster","text":"The Windows container base image used by each pod must match the same kernel build version as the node. If you want to use multiple Windows Server builds in the same cluster, then you should set additional node labels, nodeSelectors or leverage a label called windows-build . Kubernetes 1.17 automatically adds a new label node.kubernetes.io/windows-build to simplify the management of multiple Windows build in the same cluster. If you're running an older version, then it's recommended to add this label manually to Windows nodes. This label reflects the Windows major, minor, and build number that need to match for compatibility. Below are values used today for each Windows Server version. It's important to note that Windows Server is moving to the Long-Term Servicing Channel (LTSC) as the primary release channel. The Windows Server Semi-Annual Channel (SAC) was retired on August 9, 2022. There will be no future SAC releases of Windows Server. Product Name Build Number(s) Server full 2022 LTSC 10.0.20348 Server core 2019 LTSC 10.0.17763 It is possible to check the OS build version through the following command: kubectl get nodes -o wide The KERNEL-VERSION output matches the Windows OS build version. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME ip-10-10-2-235.ec2.internal Ready <none> 23m v1.24.7-eks-fb459a0 10 .10.2.235 3 .236.30.157 Windows Server 2022 Datacenter 10 .0.20348.1607 containerd://1.6.6 ip-10-10-31-27.ec2.internal Ready <none> 23m v1.24.7-eks-fb459a0 10 .10.31.27 44 .204.218.24 Windows Server 2019 Datacenter 10 .0.17763.4131 containerd://1.6.6 ip-10-10-7-54.ec2.internal Ready <none> 31m v1.24.11-eks-a59e1f0 10 .10.7.54 3 .227.8.172 Amazon Linux 2 5 .10.173-154.642.amzn2.x86_64 containerd://1.6.19 The example below applies an additional nodeSelector to the pod manifest in order to match the correct Windows-build version when running different Windows node groups OS versions. nodeSelector : kubernetes.io/os : windows node.kubernetes.io/windows-build : '10.0.20348' tolerations : - key : \"os\" operator : \"Equal\" value : \"windows\" effect : \"NoSchedule\"","title":"Handling multiple Windows build in the same cluster"},{"location":"windows/docs/scheduling/#simplifying-nodeselector-and-toleration-in-pod-manifests-using-runtimeclass","text":"You can also make use of RuntimeClass to simplify the process of using taints and tolerations. This can be accomplished by creating a RuntimeClass object which is used to encapsulate these taints and tolerations. Create a RuntimeClass by running the following manifest: apiVersion : node.k8s.io/v1beta1 kind : RuntimeClass metadata : name : windows-2022 handler : 'docker' scheduling : nodeSelector : kubernetes.io/os : 'windows' kubernetes.io/arch : 'amd64' node.kubernetes.io/windows-build : '10.0.20348' tolerations : - effect : NoSchedule key : os operator : Equal value : \"windows\" Once the Runtimeclass is created, assign it using as a Spec on the Pod manifest: apiVersion : apps/v1 kind : Deployment metadata : name : iis-2022 labels : app : iis-2022 spec : replicas : 1 template : metadata : name : iis-2022 labels : app : iis-2022 spec : runtimeClassName : windows-2022 containers : - name : iis","title":"Simplifying NodeSelector and Toleration in Pod manifests using RuntimeClass"},{"location":"windows/docs/scheduling/#managed-node-group-support","text":"To help customers run their Windows applications in a more streamlined manner, AWS launched the support for Amazon EKS Managed Node Group (MNG) support for Windows containers on December 15, 2022. To help align operations teams, Windows MNGs are enabled using the same workflows and tools as Linux MNGs . Full and core AMI (Amazon Machine Image) family versions of Windows Server 2019 and 2022 are supported. Following AMI families are supported for Managed Node Groups(MNG)s. AMI Family WINDOWS_CORE_2019_x86_64 WINDOWS_FULL_2019_x86_64 WINDOWS_CORE_2022_x86_64 WINDOWS_FULL_2022_x86_64","title":"Managed Node Group Support"},{"location":"windows/docs/scheduling/#additional-documentations","text":"AWS Official Documentation: https://docs.aws.amazon.com/eks/latest/userguide/windows-support.html To better understand how Pod Networking (CNI) works, check the following link: https://docs.aws.amazon.com/eks/latest/userguide/pod-networking.html AWS Blog on Deploying Managed Node Group for Windows on EKS: https://aws.amazon.com/blogs/containers/deploying-amazon-eks-windows-managed-node-groups/","title":"Additional documentations"},{"location":"windows/docs/security/","text":"Pod Security Contexts \u00b6 Pod Security Policies (PSP) and Pod Security Standards (PSS) are two main ways of enforcing security in Kubernetes. Note that PodSecurityPolicy is deprecated as of Kubernetes v1.21, and will be removed in v1.25 and Pod Security Standard (PSS) is the Kubernetes recommended approach for enforcing security going forward. A Pod Security Policy (PSP) is a native solution in Kubernetes to implement security policies. PSP is a cluster-level resource that controls security-sensitive aspects of the Pod specification. Using Pod Security Policy you can define a set of conditions that Pods must meet to be accepted by the cluster. The PSP feature has been available from the early days of Kubernetes and is designed to block misconfigured pods from being created on a given cluster. For more information on Pod Security Policies please reference the Kubernetes documentation . According to the Kubernetes deprecation policy , older versions will stop getting support nine months after the deprecation of the feature. On the other hand, Pod Security Standards (PSS) which is the recommended security approach and typically implemented using Security Contexts are defined as part of the Pod and container specifications in the Pod manifest. PSS is the official standard that the Kubernetes project team has defined to address the security-related best practices for Pods. It defines policies such as baseline (minimally restrictive, default), privileged (unrestrictive) and restricted (most restrictive). We recommend starting with the baseline profile. PSS baseline profile provides a solid balance between security and potential friction, requiring a minimal list of exceptions, it serves as a good starting point for workload security. If you are currently using PSPs we recommend switching to PSS. More details on the PSS policies can be found in the Kubernetes documentation . These policies can be enforced with several tools including those from OPA and Kyverno . For example, Kyverno provides the full collection of PSS policies here . Security context settings allow one to give privileges to select processes, use program profiles to restrict capabilities to individual programs, allow privilege escalation, filter system calls, among other things. Windows pods in Kubernetes have some limitations and differentiators from standard Linux-based workloads when it comes to security contexts. Windows uses a Job object per container with a system namespace filter to contain all processes in a container and provide logical isolation from the host. There is no way to run a Windows container without the namespace filtering in place. This means that system privileges cannot be asserted in the context of the host, and thus privileged containers are not available on Windows. The following windowsOptions are the only documented Windows Security Context options while the rest are general Security Context options For a list of security context attributes that are supported in Windows vs linux, please refer to the official documentation here . The Pod specific settings are applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. For example, runAsUserName setting for Pods and containers which is a Windows option is a rough equivalent of the Linux-specific runAsUser setting and in the following manifest, the pod specific security context is applied to all containers apiVersion : v1 kind : Pod metadata : name : run-as-username-pod-demo spec : securityContext : windowsOptions : runAsUserName : \"ContainerUser\" containers : - name : run-as-username-demo ... nodeSelector : kubernetes.io/os : windows Whereas in the following, the container level security context overrides the pod level security context. apiVersion : v1 kind : Pod metadata : name : run-as-username-container-demo spec : securityContext : windowsOptions : runAsUserName : \"ContainerUser\" containers : - name : run-as-username-demo .. securityContext : windowsOptions : runAsUserName : \"ContainerAdministrator\" nodeSelector : kubernetes.io/os : windows Examples of acceptable values for the runAsUserName field: ContainerAdministrator, ContainerUser, NT AUTHORITY\\NETWORK SERVICE, NT AUTHORITY\\LOCAL SERVICE It is generally a good idea to run your containers with ContainerUser for Windows pods. The users are not shared between the container and host but the ContainerAdministrator does have additional privileges with in the container. Note that, there are username limitations to be aware of. A good example of when to use ContainerAdministrator is to set PATH. You can use the USER directive to do that, like so: USER ContainerAdministrator RUN setx /M PATH \"%PATH%;C:/your/path\" USER ContainerUser Also note that, secrets are written in clear text on the node's volume (as compared to tmpfs/in-memory on linux). This means you have to do two things Use file ACLs to secure the secrets file location Use volume-level encryption using BitLocker","title":"Pod Security for Windows Containers"},{"location":"windows/docs/security/#pod-security-contexts","text":"Pod Security Policies (PSP) and Pod Security Standards (PSS) are two main ways of enforcing security in Kubernetes. Note that PodSecurityPolicy is deprecated as of Kubernetes v1.21, and will be removed in v1.25 and Pod Security Standard (PSS) is the Kubernetes recommended approach for enforcing security going forward. A Pod Security Policy (PSP) is a native solution in Kubernetes to implement security policies. PSP is a cluster-level resource that controls security-sensitive aspects of the Pod specification. Using Pod Security Policy you can define a set of conditions that Pods must meet to be accepted by the cluster. The PSP feature has been available from the early days of Kubernetes and is designed to block misconfigured pods from being created on a given cluster. For more information on Pod Security Policies please reference the Kubernetes documentation . According to the Kubernetes deprecation policy , older versions will stop getting support nine months after the deprecation of the feature. On the other hand, Pod Security Standards (PSS) which is the recommended security approach and typically implemented using Security Contexts are defined as part of the Pod and container specifications in the Pod manifest. PSS is the official standard that the Kubernetes project team has defined to address the security-related best practices for Pods. It defines policies such as baseline (minimally restrictive, default), privileged (unrestrictive) and restricted (most restrictive). We recommend starting with the baseline profile. PSS baseline profile provides a solid balance between security and potential friction, requiring a minimal list of exceptions, it serves as a good starting point for workload security. If you are currently using PSPs we recommend switching to PSS. More details on the PSS policies can be found in the Kubernetes documentation . These policies can be enforced with several tools including those from OPA and Kyverno . For example, Kyverno provides the full collection of PSS policies here . Security context settings allow one to give privileges to select processes, use program profiles to restrict capabilities to individual programs, allow privilege escalation, filter system calls, among other things. Windows pods in Kubernetes have some limitations and differentiators from standard Linux-based workloads when it comes to security contexts. Windows uses a Job object per container with a system namespace filter to contain all processes in a container and provide logical isolation from the host. There is no way to run a Windows container without the namespace filtering in place. This means that system privileges cannot be asserted in the context of the host, and thus privileged containers are not available on Windows. The following windowsOptions are the only documented Windows Security Context options while the rest are general Security Context options For a list of security context attributes that are supported in Windows vs linux, please refer to the official documentation here . The Pod specific settings are applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. For example, runAsUserName setting for Pods and containers which is a Windows option is a rough equivalent of the Linux-specific runAsUser setting and in the following manifest, the pod specific security context is applied to all containers apiVersion : v1 kind : Pod metadata : name : run-as-username-pod-demo spec : securityContext : windowsOptions : runAsUserName : \"ContainerUser\" containers : - name : run-as-username-demo ... nodeSelector : kubernetes.io/os : windows Whereas in the following, the container level security context overrides the pod level security context. apiVersion : v1 kind : Pod metadata : name : run-as-username-container-demo spec : securityContext : windowsOptions : runAsUserName : \"ContainerUser\" containers : - name : run-as-username-demo .. securityContext : windowsOptions : runAsUserName : \"ContainerAdministrator\" nodeSelector : kubernetes.io/os : windows Examples of acceptable values for the runAsUserName field: ContainerAdministrator, ContainerUser, NT AUTHORITY\\NETWORK SERVICE, NT AUTHORITY\\LOCAL SERVICE It is generally a good idea to run your containers with ContainerUser for Windows pods. The users are not shared between the container and host but the ContainerAdministrator does have additional privileges with in the container. Note that, there are username limitations to be aware of. A good example of when to use ContainerAdministrator is to set PATH. You can use the USER directive to do that, like so: USER ContainerAdministrator RUN setx /M PATH \"%PATH%;C:/your/path\" USER ContainerUser Also note that, secrets are written in clear text on the node's volume (as compared to tmpfs/in-memory on linux). This means you have to do two things Use file ACLs to secure the secrets file location Use volume-level encryption using BitLocker","title":"Pod Security Contexts"},{"location":"windows/docs/storage/","text":"Persistent storage options \u00b6 What is an in-tree vs. out-of-tree volume plugin? \u00b6 Before the introduction of the Container Storage Interface (CSI), all volume plugins were in-tree meaning they were built, linked, compiled, and shipped with the core Kubernetes binaries and extend the core Kubernetes API. This meant that adding a new storage system to Kubernetes (a volume plugin) required checking code into the core Kubernetes code repository. Out-of-tree volume plugins are developed independently of the Kubernetes code base, and are deployed (installed) on Kubernetes clusters as extensions. This gives vendors the ability to update drivers out-of-band, i.e. separately from the Kubernetes release cycle. This is largely possible because Kubernetes has created a storage interface or CSI that provides vendors a standard way of interfacing with k8s. You can check more about Amazon Elastic Kubernetes Services (EKS) storage classes and CSI Drivers on https://docs.aws.amazon.com/eks/latest/userguide/storage.html In-tree Volume Plugin for Windows \u00b6 Kubernetes volumes enable applications, with data persistence requirements, to be deployed on Kubernetes. The management of persistent volumes consists of provisioning/de-provisioning/resizing of volumes, attaching/detaching a volume to/from a Kubernetes node, and mounting/dismounting a volume to/from individual containers in a pod. The code for implementing these volume management actions for a specific storage back-end or protocol is shipped in the form of a Kubernetes volume plugin (In-tree Volume Plugins) . On Amazon Elastic Kubernetes Services (EKS) the following class of Kubernetes volume plugins are supported on Windows: In-tree Volume Plugin: awsElasticBlockStore In order to use In-tree volume plugin on Windows nodes, it is necessary to create an additional StorageClass to use NTFS as the fsType. On EKS, the default StorageClass uses ext4 as the default fsType. A StorageClass provides a way for administrators to describe the \"classes\" of storage they offer. Different classes might map to quality-of-service levels, backup policies, or arbitrary policies determined by the cluster administrators. Kubernetes is unopinionated about what classes represent. This concept is sometimes called \"profiles\" in other storage systems. You can check it by running the following command: kubectl describe storageclass gp2 Output: Name: gp2 IsDefaultClass: Yes Annotations: kubectl.kubernetes.io/last-applied-configuration ={ \"apiVersion\" : \"storage.k8s.io/v1\" , \"kind\" : \"StorageClas \" , \"metadata\" : { \"annotations\" : { \"storageclass.kubernetes.io/is-default-class\" : \"true\" } , \"name\" : \"gp2\" } , \"parameters\" : { \"fsType\" \"ext4\" , \"type\" : \"gp2\" } , \"provisioner\" : \"kubernetes.io/aws-ebs\" , \"volumeBindingMode\" : \"WaitForFirstConsumer\" } ,storageclass.kubernetes.io/is-default-class = true Provisioner: kubernetes.io/aws-ebs Parameters: fsType = ext4,type = gp2 AllowVolumeExpansion: <unset> MountOptions: <none> ReclaimPolicy: Delete VolumeBindingMode: WaitForFirstConsumer Events: <none> To create the new StorageClass to support NTFS , use the following manifest: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : gp2-windows provisioner : kubernetes.io/aws-ebs parameters : type : gp2 fsType : ntfs volumeBindingMode : WaitForFirstConsumer Create the StorageClass by running the following command: kubectl apply -f NTFSStorageClass.yaml The next step is to create a Persistent Volume Claim (PVC). A PersistentVolume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using PVC. It is a resource in the cluster just like a node is a cluster resource. This API object captures the details of the implementation of the storage, be that NFS, iSCSI, or a cloud-provider-specific storage system. A PersistentVolumeClaim (PVC) is a request for storage by a user. Claims can request specific size and access modes (e.g., they can be mounted ReadWriteOnce, ReadOnlyMany or ReadWriteMany). Users need PersistentVolumes with different attributes, such as performance, for different use cases. Cluster administrators need to be able to offer a variety of PersistentVolumes that differ in more ways than just size and access modes, without exposing users to the details of how those volumes are implemented. For these needs, there is the StorageClass resource. In the example below, the PVC has been created within the namespace windows. apiVersion : v1 kind : PersistentVolumeClaim metadata : name : ebs-windows-pv-claim namespace : windows spec : accessModes : - ReadWriteOnce storageClassName : gp2-windows resources : requests : storage : 1Gi Create the PVC by running the following command: kubectl apply -f persistent-volume-claim.yaml The following manifest creates a Windows Pod, setup the VolumeMount as C:\\Data and uses the PVC as the attached storage on C:\\Data . apiVersion : apps/v1 kind : Deployment metadata : name : windows-server-ltsc2019 namespace : windows spec : selector : matchLabels : app : windows-server-ltsc2019 tier : backend track : stable replicas : 1 template : metadata : labels : app : windows-server-ltsc2019 tier : backend track : stable spec : containers : - name : windows-server-ltsc2019 image : mcr.microsoft.com/windows/servercore:ltsc2019 ports : - name : http containerPort : 80 imagePullPolicy : IfNotPresent volumeMounts : - mountPath : \"C:\\\\data\" name : test-volume volumes : - name : test-volume persistentVolumeClaim : claimName : ebs-windows-pv-claim nodeSelector : kubernetes.io/os : windows node.kubernetes.io/windows-build : '10.0.17763' Test the results by accessing the Windows pod via PowerShell: kubectl exec -it podname powershell -n windows Inside the Windows Pod, run: ls Output: PS C: \\> ls Directory: C: \\ Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 3 /8/2021 1 :54 PM data d----- 3 /8/2021 3 :37 PM inetpub d-r--- 1 /9/2021 7 :26 AM Program Files d----- 1 /9/2021 7 :18 AM Program Files ( x86 ) d-r--- 1 /9/2021 7 :28 AM Users d----- 3 /8/2021 3 :36 PM var d----- 3 /8/2021 3 :36 PM Windows -a---- 12 /7/2019 4 :20 AM 5510 License.txt The data directory is provided by the EBS volume. Out-of-tree for Windows \u00b6 Code associated with CSI plugins ship as out-of-tree scripts and binaries that are typically distributed as container images and deployed using standard Kubernetes constructs like DaemonSets and StatefulSets. CSI plugins handle a wide range of volume management actions in Kubernetes. CSI plugins typically consist of node plugins (that run on each node as a DaemonSet) and controller plugins. CSI node plugins (especially those associated with persistent volumes exposed as either block devices or over a shared file-system) need to perform various privileged operations like scanning of disk devices, mounting of file systems, etc. These operations differ for each host operating system. For Linux worker nodes, containerized CSI node plugins are typically deployed as privileged containers. For Windows worker nodes, privileged operations for containerized CSI node plugins is supported using csi-proxy , a community-managed, stand-alone binary that needs to be pre-installed on each Windows node. The Amazon EKS Optimized Windows AMI includes CSI-proxy starting from April 2022. Customers can use the SMB CSI Driver on Windows nodes to access Amazon FSx for Windows File Server , Amazon FSx for NetApp ONTAP SMB Shares , and/or AWS Storage Gateway \u2013 File Gateway . The following blog has implementation details on how to setup SMB CSI Driver to use Amazon FSx for Windows File Server as a persistent storage for Windows Pods. Amazon FSx for Windows File Server \u00b6 An option is to use Amazon FSx for Windows File Server through an SMB feature called SMB Global Mapping which makes it possible to mount a SMB share on the host, then pass directories on that share into a container. The container doesn't need to be configured with a specific server, share, username or password - that's all handled on the host instead. The container will work the same as if it had local storage. The SMB Global Mapping is transparent to the orchestrator, and it is mounted through HostPath which can imply in secure concerns . In the example below, the path G:\\Directory\\app-state is an SMB share on the Windows Node. apiVersion : v1 kind : Pod metadata : name : test-fsx spec : containers : - name : test-fsx image : mcr.microsoft.com/windows/servercore:ltsc2019 command : - powershell.exe - -command - \"Add-WindowsFeature Web-Server; Invoke-WebRequest -UseBasicParsing -Uri 'https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.6/ServiceMonitor.exe' -OutFile 'C:\\\\ServiceMonitor.exe'; echo '<html><body><br/><br/><marquee><H1>Hello EKS!!!<H1><marquee></body><html>' > C:\\\\inetpub\\\\wwwroot\\\\default.html; C:\\\\ServiceMonitor.exe 'w3svc'; \" volumeMounts : - mountPath : C:\\dotnetapp\\app-state name : test-mount volumes : - name : test-mount hostPath : path : G:\\Directory\\app-state type : Directory nodeSelector : beta.kubernetes.io/os : windows beta.kubernetes.io/arch : amd64 The following blog has implementation details on how to setup Amazon FSx for Windows File Server as a persistent storage for Windows Pods.","title":"Storage Options"},{"location":"windows/docs/storage/#persistent-storage-options","text":"","title":"Persistent storage options"},{"location":"windows/docs/storage/#what-is-an-in-tree-vs-out-of-tree-volume-plugin","text":"Before the introduction of the Container Storage Interface (CSI), all volume plugins were in-tree meaning they were built, linked, compiled, and shipped with the core Kubernetes binaries and extend the core Kubernetes API. This meant that adding a new storage system to Kubernetes (a volume plugin) required checking code into the core Kubernetes code repository. Out-of-tree volume plugins are developed independently of the Kubernetes code base, and are deployed (installed) on Kubernetes clusters as extensions. This gives vendors the ability to update drivers out-of-band, i.e. separately from the Kubernetes release cycle. This is largely possible because Kubernetes has created a storage interface or CSI that provides vendors a standard way of interfacing with k8s. You can check more about Amazon Elastic Kubernetes Services (EKS) storage classes and CSI Drivers on https://docs.aws.amazon.com/eks/latest/userguide/storage.html","title":"What is an in-tree vs. out-of-tree volume plugin?"},{"location":"windows/docs/storage/#in-tree-volume-plugin-for-windows","text":"Kubernetes volumes enable applications, with data persistence requirements, to be deployed on Kubernetes. The management of persistent volumes consists of provisioning/de-provisioning/resizing of volumes, attaching/detaching a volume to/from a Kubernetes node, and mounting/dismounting a volume to/from individual containers in a pod. The code for implementing these volume management actions for a specific storage back-end or protocol is shipped in the form of a Kubernetes volume plugin (In-tree Volume Plugins) . On Amazon Elastic Kubernetes Services (EKS) the following class of Kubernetes volume plugins are supported on Windows: In-tree Volume Plugin: awsElasticBlockStore In order to use In-tree volume plugin on Windows nodes, it is necessary to create an additional StorageClass to use NTFS as the fsType. On EKS, the default StorageClass uses ext4 as the default fsType. A StorageClass provides a way for administrators to describe the \"classes\" of storage they offer. Different classes might map to quality-of-service levels, backup policies, or arbitrary policies determined by the cluster administrators. Kubernetes is unopinionated about what classes represent. This concept is sometimes called \"profiles\" in other storage systems. You can check it by running the following command: kubectl describe storageclass gp2 Output: Name: gp2 IsDefaultClass: Yes Annotations: kubectl.kubernetes.io/last-applied-configuration ={ \"apiVersion\" : \"storage.k8s.io/v1\" , \"kind\" : \"StorageClas \" , \"metadata\" : { \"annotations\" : { \"storageclass.kubernetes.io/is-default-class\" : \"true\" } , \"name\" : \"gp2\" } , \"parameters\" : { \"fsType\" \"ext4\" , \"type\" : \"gp2\" } , \"provisioner\" : \"kubernetes.io/aws-ebs\" , \"volumeBindingMode\" : \"WaitForFirstConsumer\" } ,storageclass.kubernetes.io/is-default-class = true Provisioner: kubernetes.io/aws-ebs Parameters: fsType = ext4,type = gp2 AllowVolumeExpansion: <unset> MountOptions: <none> ReclaimPolicy: Delete VolumeBindingMode: WaitForFirstConsumer Events: <none> To create the new StorageClass to support NTFS , use the following manifest: kind : StorageClass apiVersion : storage.k8s.io/v1 metadata : name : gp2-windows provisioner : kubernetes.io/aws-ebs parameters : type : gp2 fsType : ntfs volumeBindingMode : WaitForFirstConsumer Create the StorageClass by running the following command: kubectl apply -f NTFSStorageClass.yaml The next step is to create a Persistent Volume Claim (PVC). A PersistentVolume (PV) is a piece of storage in the cluster that has been provisioned by an administrator or dynamically provisioned using PVC. It is a resource in the cluster just like a node is a cluster resource. This API object captures the details of the implementation of the storage, be that NFS, iSCSI, or a cloud-provider-specific storage system. A PersistentVolumeClaim (PVC) is a request for storage by a user. Claims can request specific size and access modes (e.g., they can be mounted ReadWriteOnce, ReadOnlyMany or ReadWriteMany). Users need PersistentVolumes with different attributes, such as performance, for different use cases. Cluster administrators need to be able to offer a variety of PersistentVolumes that differ in more ways than just size and access modes, without exposing users to the details of how those volumes are implemented. For these needs, there is the StorageClass resource. In the example below, the PVC has been created within the namespace windows. apiVersion : v1 kind : PersistentVolumeClaim metadata : name : ebs-windows-pv-claim namespace : windows spec : accessModes : - ReadWriteOnce storageClassName : gp2-windows resources : requests : storage : 1Gi Create the PVC by running the following command: kubectl apply -f persistent-volume-claim.yaml The following manifest creates a Windows Pod, setup the VolumeMount as C:\\Data and uses the PVC as the attached storage on C:\\Data . apiVersion : apps/v1 kind : Deployment metadata : name : windows-server-ltsc2019 namespace : windows spec : selector : matchLabels : app : windows-server-ltsc2019 tier : backend track : stable replicas : 1 template : metadata : labels : app : windows-server-ltsc2019 tier : backend track : stable spec : containers : - name : windows-server-ltsc2019 image : mcr.microsoft.com/windows/servercore:ltsc2019 ports : - name : http containerPort : 80 imagePullPolicy : IfNotPresent volumeMounts : - mountPath : \"C:\\\\data\" name : test-volume volumes : - name : test-volume persistentVolumeClaim : claimName : ebs-windows-pv-claim nodeSelector : kubernetes.io/os : windows node.kubernetes.io/windows-build : '10.0.17763' Test the results by accessing the Windows pod via PowerShell: kubectl exec -it podname powershell -n windows Inside the Windows Pod, run: ls Output: PS C: \\> ls Directory: C: \\ Mode LastWriteTime Length Name ---- ------------- ------ ---- d----- 3 /8/2021 1 :54 PM data d----- 3 /8/2021 3 :37 PM inetpub d-r--- 1 /9/2021 7 :26 AM Program Files d----- 1 /9/2021 7 :18 AM Program Files ( x86 ) d-r--- 1 /9/2021 7 :28 AM Users d----- 3 /8/2021 3 :36 PM var d----- 3 /8/2021 3 :36 PM Windows -a---- 12 /7/2019 4 :20 AM 5510 License.txt The data directory is provided by the EBS volume.","title":"In-tree Volume Plugin for Windows"},{"location":"windows/docs/storage/#out-of-tree-for-windows","text":"Code associated with CSI plugins ship as out-of-tree scripts and binaries that are typically distributed as container images and deployed using standard Kubernetes constructs like DaemonSets and StatefulSets. CSI plugins handle a wide range of volume management actions in Kubernetes. CSI plugins typically consist of node plugins (that run on each node as a DaemonSet) and controller plugins. CSI node plugins (especially those associated with persistent volumes exposed as either block devices or over a shared file-system) need to perform various privileged operations like scanning of disk devices, mounting of file systems, etc. These operations differ for each host operating system. For Linux worker nodes, containerized CSI node plugins are typically deployed as privileged containers. For Windows worker nodes, privileged operations for containerized CSI node plugins is supported using csi-proxy , a community-managed, stand-alone binary that needs to be pre-installed on each Windows node. The Amazon EKS Optimized Windows AMI includes CSI-proxy starting from April 2022. Customers can use the SMB CSI Driver on Windows nodes to access Amazon FSx for Windows File Server , Amazon FSx for NetApp ONTAP SMB Shares , and/or AWS Storage Gateway \u2013 File Gateway . The following blog has implementation details on how to setup SMB CSI Driver to use Amazon FSx for Windows File Server as a persistent storage for Windows Pods.","title":"Out-of-tree for Windows"},{"location":"windows/docs/storage/#amazon-fsx-for-windows-file-server","text":"An option is to use Amazon FSx for Windows File Server through an SMB feature called SMB Global Mapping which makes it possible to mount a SMB share on the host, then pass directories on that share into a container. The container doesn't need to be configured with a specific server, share, username or password - that's all handled on the host instead. The container will work the same as if it had local storage. The SMB Global Mapping is transparent to the orchestrator, and it is mounted through HostPath which can imply in secure concerns . In the example below, the path G:\\Directory\\app-state is an SMB share on the Windows Node. apiVersion : v1 kind : Pod metadata : name : test-fsx spec : containers : - name : test-fsx image : mcr.microsoft.com/windows/servercore:ltsc2019 command : - powershell.exe - -command - \"Add-WindowsFeature Web-Server; Invoke-WebRequest -UseBasicParsing -Uri 'https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.6/ServiceMonitor.exe' -OutFile 'C:\\\\ServiceMonitor.exe'; echo '<html><body><br/><br/><marquee><H1>Hello EKS!!!<H1><marquee></body><html>' > C:\\\\inetpub\\\\wwwroot\\\\default.html; C:\\\\ServiceMonitor.exe 'w3svc'; \" volumeMounts : - mountPath : C:\\dotnetapp\\app-state name : test-mount volumes : - name : test-mount hostPath : path : G:\\Directory\\app-state type : Directory nodeSelector : beta.kubernetes.io/os : windows beta.kubernetes.io/arch : amd64 The following blog has implementation details on how to setup Amazon FSx for Windows File Server as a persistent storage for Windows Pods.","title":"Amazon FSx for Windows File Server"}]}